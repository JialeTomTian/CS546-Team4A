{"name": "HumanEval/100", "prompt": "\ndef make_a_pile(n):\n    \n\n\n    ans, num = [], n\n    for _ in range(n):\n        ans.append(num)\n        num += 2\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef make_a_pile(n):\n    \n\n\n    ans, num = [], n\n    for _ in range(n):\n        ans.append(num)\n        num += 2\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef make_a_pile(n):\n    \n\n\n    ans, num = [], n\n    for _ in range(n):\n        ans.append(num)\n        num += 2\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef make_a_pile(n):\n    ans, num = [], n\n    \n    # Introduce an unnecessary loop\n    for _ in range(n):\n        pass\n\n    for i in range(n):\n        # Unnecessary variable assignment\n        temp = num\n        ans.append(temp)\n        \n        # Unnecessary conditional check\n        if i % 2 == 0 or i % 2 == 1:\n            num += 2\n\n    # Unnecessary list comprehension to copy the list\n    ans = [x for x in ans]\n    \n    # Unnecessary function call\n    def identity(x):\n        return x\n    \n    return identity(ans)\n<code_end>\n```", "modification": "\ndef make_a_pile(n):\n    ans, num = [], n\n    \n    \n    for _ in range(n):\n        pass\n\n    for i in range(n):\n        \n        temp = num\n        ans.append(temp)\n        \n        \n        if i % 2 == 0 or i % 2 == 1:\n            num += 2\n\n    \n    ans = [x for x in ans]\n    \n    \n    def identity(x):\n        return x\n    \n    return identity(ans)\n", "tests": "import numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef ref_func(n):\n\n\n    ans, num = [], n\n    for _ in range(n):\n        ans.append(num)\n        num += 2\n    return ans\n\n\n\ndef check(candidate):\n    inputs = [[3], [4], [5], [6], [8], [1], [2], [10], [15], [20], [100], [12], [25], [50], [14], [16], [9], [24], [99], [21], [51], [52], [22], [73], [17], [101], [72], [98], [97], [53], [13], [96], [92], [102], [23], [11], [93], [49], [78], [86], [71], [95], [94], [70], [77], [69], [79], [103], [68], [37], [18], [36], [67], [91], [35], [90], [48], [54], [87], [19], [85], [84], [55], [7], [104], [38], [74], [39], [83], [66], [80], [105], [47], [109], [65], [42], [89], [46], [40], [88], [82], [108], [110], [64], [111], [26], [57], [58], [63], [59], [45], [106], [41], [81], [62], [107], [56], [43], [75], [30], [32], [33], [29], [34], [31], [76], [27], [28], [44], [1000000], [60], [61]]\n    for i, inp in enumerate(inputs):\n        assertion(candidate(*inp), ref_func(*inp), 0)\n"}
{"name": "HumanEval/101", "prompt": "\ndef words_string(s):\n    \n\n    words = (s.replace(\",\", \" \")).split()\n    return [word for word in words if word != \"\"]\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef words_string(s):\n    \n\n    words = (s.replace(\",\", \" \")).split()\n    return [word for word in words if word != \"\"]\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef words_string(s):\n    \n\n    words = (s.replace(\",\", \" \")).split()\n    return [word for word in words if word != \"\"]\n\n", "raw_modification": "```python\n<code_start>\ndef words_string(s):\n    # Step 1: Replace commas with spaces\n    temp_string = s.replace(\",\", \" \")\n    \n    # Step 2: Split the string into words\n    words = temp_string.split()\n    \n    # Step 3: Initialize an empty list to store non-empty words\n    non_empty_words = []\n    \n    # Step 4: Iterate over each word\n    for word in words:\n        # Step 5: Check if the word is not empty\n        if word != \"\":\n            # Step 6: Append the word to the non_empty_words list\n            non_empty_words.append(word)\n    \n    # Step 7: Create a final list to store the result\n    final_result = []\n    \n    # Step 8: Iterate over non_empty_words to mimic additional processing\n    for word in non_empty_words:\n        # Step 9: Append the word to the final_result list\n        final_result.append(word)\n    \n    # Step 10: Return the final result\n    return final_result\n<code_end>\n```", "modification": "\ndef words_string(s):\n    \n    temp_string = s.replace(\",\", \" \")\n    \n    \n    words = temp_string.split()\n    \n    \n    non_empty_words = []\n    \n    \n    for word in words:\n        \n        if word != \"\":\n            \n            non_empty_words.append(word)\n    \n    \n    final_result = []\n    \n    \n    for word in non_empty_words:\n        \n        final_result.append(word)\n    \n    \n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['Hi, my name is John'], ['One, two, three, four, five, six'], ['Hi, my name'], ['One,, two, three, four, five, six,'], [''], ['ahmed     , gamal'], [',,,,'], [' '], ['Elephant,giraffe,,lion,zebra'], ['Hi,there is,a lot,of,space   ,     ,'], ['        '], ['apple,'], ['cat dog, fish'], ['hello,  world'], ['One,two ,  three , four'], ['The quick brown fox jumps over the lazy dog'], ['hello,  oworld'], ['         '], ['The quick brown f the lazy dog'], ['          '], ['The quickbrown f the lazy dog'], ['   '], ['The quickbrowny f the lazy dog'], ['The quTick brown f the lazy dog'], ['The quick brown fox jumps over tohe lazy dog'], ['The quickbrown y dog'], ['One,two ,  three , fouOne,two ,  three , fourr'], ['cagt dog, fish'], ['Elephant,gieraffe,,lion,zebra'], [',,'], ['The quickbrown  dog'], [',The quTick brown f the lazy dog,'], ['cat dofish'], ['hehello,  oworldllo,  oworld'], [' cat dofish       '], [',         ,The quickbrown  dog'], ['The quTick brown f One,two ,  three , fourthe lazy dog'], [',The quTick bThe quick brown fox jumps over tohe lazy dogrown f the lazy dog,'], ['The quTickf the lazy dog'], ['app cat dofish       e,'], ['The quTicat dog, fishckf the lazy dog'], ['The quTicat dog, fishckf the lazy doyg'], [',,,,,'], ['         appl e,'], ['The qucfTickf the lazy dog'], ['XUI'], ['hllo,  wold'], ['One,two ,  three , fouOne,thello,  oworldwo ,  three , fourr'], ['app,The quTick brown f the lazy dog, cat dofish       e,'], [' The quTickf the lazy dog  '], ['cat dofis'], ['Theh quTicat dog, fishckf the lazy doyg'], ['The quTickTheh quTicat dog, fishckf the lazy doyg brown f the lazy dog'], ['Tx jumps over tohe lazy dog'], ['The quick brown f,The quTick br own f the lazy dog,ox jumps over tohe lazy dog'], ['cat dhofishOne,two ,  three , four'], ['The quick brown fox jumps over tohe lazy dog      '], ['cT he quTick brown f One,two ,  three , fourthe lazy dogt dofis'], [',,,'], ['The quTick brownThe quickbrown y dog f One,two ,  three , fourthe lazy dog'], ['The quTicat dog, fishckf the l         appl e,azy dog'], ['The quTick brown f the lazy The quicThe quick brown f,The quTick br own f the lazy dog,ox jumps over tohe lazy dogk brown f,The quTick brgdog'], ['The hquickbg'], ['Tx xjumps over tohe lazy dog'], ['The quTick brownThe quickbrown y dog f One,two ,  three , fourthe flazy dog'], ['Elephant,         appl e,giraffe,,lion,zebra'], ['The quTicat dog, fishckf the l         appl e,azy dogI'], ['   Theh quTicat dog, fishckf the lazy doyg      '], [' he quTickf the lazy dog  '], ['Theh quTicat dog, fishckf the lazy The qucfTickf the lazy dogdoyg'], ['cat dfofish'], ['XI'], ['Hi,there is,a lot,of,space  cT he quTick brown f One,two ,  three , fourthe lazy dogt dofis ,     ,'], ['eesrvDWbLL'], ['The quick bThe quick brown f the lazy dogrown fox jumps over tohe lazy dog'], ['cagt dogfish'], [' hOne,two ,  three , foure quTickf the lazy dog  '], ['The qkuickbrown y dog'], [',The quTick bT,,,,he quick brown fox jumps over tohe lazy dogrown f the lazy dog,'], ['  '], ['app cat dofish       e,Elephant,gieraffe,,lion,zebra'], ['The quTick brown f the lazy The quThe quickbrown f the lazy dogicThe quick brown f,The quTick br own f the lazy dog,ox jumps over tohe lazy dogk brown f,The quTick brgdog'], ['   Theh quTicat dog, fishckf the lazy doyg     '], [',         ,The quickbrown  dobg'], ['The quTiThe queri tohe lazy dogk brown f,The quTick brgdogckf the lazy dog'], [' The quTickf the lazy dog The quick brown f the lazy dog '], ['The qu  dog'], ['hello, l oworld'], [',The quTick bT,,,,he quick bro,wn fox jumps over tohe lazy dogrown f the lazy dog,'], ['Elephant,         appl e,girTx xjumps over tohe lazy dogaffe,,lion,zebra'], ['       '], ['The quick ybrown f the lazy dog'], ['One,two ,  three , fouOne,two ,  thre fourr'], ['cat dhofishne,two ,  three , four'], ['cat dofiElephant,         a,ppl e,girTx xjumps over tohe lazy dogaffe,,lion,zebras'], ['TThe quTick brown f One,two ,  three , fourthe lazy doghe qck brown f the he quTickf the lazy dog   lazy dog'], ['hello,  woXUIrld'], [' hOne,two ,  three , foure quTickf thef lazy dog  '], ['Hi,there is,a lot,of,space  cT he quTick brown f One,two ,  three , fourthe lazy dogyt dofis ,     ,'], ['Theh quTicat diog, fishckf the lhazy The qucfTickf the lazy dogdoyg'], ['cat dog,  fish'], ['         apple,'], ['hHi,there is,a lot,of,space  cT he quTick brown f One,two ,  three , fourthe lazy dogt dofis ,     ,llo,  wold'], ['hwoXUhIrld'], ['Hi, my    name   is John. How     are    you?   '], ['The,quick,brown,fox,jumps,over,the,lazy,dog.'], ['Two spaces after,  one space before  , and no spaces in between'], [',,,,,,No words, here,,,,,,'], ['   A  random    string    with     no    commas     or   spaces'], ['Amazing, how a sentence can change, meaning just by, adding or removing, commas!'], ['Multi\\nline\\nstring\\nHello,\\nworld!\\n'], ['President, John, F, Kennedy'], ['The quick brown fox jumps over the lazy dog.'], ['ThisStringHasNoSpaces'], ['Muluti'], ['   A  random    string    wiorth     no    commas     or   spaces'], ['eB'], ['   A  random    string    with      no    commas     or   spaces'], ['Multi\\nline\\n\\nstring\\nHello,\\nworld!\\n'], ['Amazing, how a sentence can changee, meaning just by, adding or removing, commas!'], ['The quick brown fox jumps over the lazydog.'], ['The quick brown fox jumps over th e lazy dog.'], ['The quick browner th e lazy dochangee,g.'], ['B'], ['change,'], ['is'], ['Multi\\nline!\\nstring\\nHello,i\\nworld!\\n'], ['th'], ['line'], ['you?'], ['The quick brown fox jumps over change,the lazydog.'], ['Mullti'], ['   A  random    string    with      no    commas     or    spaces'], ['yMulti\\nline!\\nstring\\nHello,i\\nworld!\\n?'], ['line!'], ['Hi, my    name   is   A  random    string    wiorth     no    commas     or   spaces John. How     are    you?   '], ['space'], ['The quick brown fox jumps over tarelazy dog.'], ['The quick browner th e lazy do changee,g.'], ['BeB'], ['jumps'], ['   A  random    string    with      no    commas    r or   spaces'], ['Hello,i'], ['The quick brown fox jumpwiorths over tarelazy dog.'], ['onwords,e'], ['The quick brown fox jumps ovMultier tarelazy dog.'], ['Amazing, how a sentence can change, meaning ovMultierjust by, adding or removing, commas!'], ['just'], ['   A  random    string    wiorth     no    commases'], ['Hi, my    name   is JohThe,quick,brown,fox,jumps,over,the,lazy,dog. you?   '], ['Helllol,'], ['Hicommases, my    name   is John. How     are    you?   '], ['The quick b rown fox jumps over the lazy dog.'], ['   A  random    string    wiorth     no    commas     or   spacesth'], ['The qmpwiorths over tarelazy dog.'], ['NWUyMDWJAr'], ['   A  random    string    with      no    commas     or   spacesNWUyMDWJAr'], ['HellloThe quick brown fox jumps over tarelazy dog.'], ['spacesNWUyMDDWJAr'], ['ladzydog.'], ['Amazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e lazy dochangee,g. or removing, commas!!'], ['The quick b rown fox jumps over the lazy dog.commases'], ['iis'], ['dog.commases'], ['justt'], ['spaces'], ['   A  rand om    string    with      no    commas     or with'], ['Multi\\nline\\nstring\\nHi,rld!\\n'], ['John.'], ['The quick browneer th e lazy dochangee,g.'], ['The quick browner th e lazy randdocPresident, John, F, Kennedyhangee,.'], ['HellloThe quickx brown fox jumps over tarelazy tarelazydog.'], ['Hi, my    name   is J you?   '], ['after,'], ['TwoB'], ['quickx'], ['   A  random    string    wiorth     no    commas'], ['TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths over tarelazy dog.'], ['the'], ['yldadzydoJohn,'], ['in'], ['cmyTwwoe,'], ['The qmpwiorths over tarelazy dog.changee,g.'], ['Multi\\nline\\nstring\\nHwords,\\n'], ['The quick browner th e lazqy dochangee,g.'], ['H   A  rand om    string    with      no    commas     or withicommases, my    name   is John. How     are    you?   '], ['Hicommases, my    name   is are    you?   '], ['The quick b rown fox jumps oveor the lazy dog.'], ['    A  random    string    with      no    comtmas     or    spaces'], ['cThe quick browner th e lazy dochangee,g.ommas'], ['jumpwiorths'], ['Two spaces after,  one space before  , and no speaces in between'], ['Hi,rld!'], ['spacesThe quick browneer Uth e lazy dochangee,g.NWUyMDDWJAr'], ['The'], ['MAmazing, how a sentencse can change, meaning just by, adding or removing, commas!uluti'], ['dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsarelazy dog.ses'], [',ThisStringHasNNoSpaces,,,,,No words, here,,,,,,'], ['TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths over tareadding'], ['MAmazing, how a sentencse cant by, adding or removing, commas!uluti'], ['ThTHello,e'], ['The qmpwiorths ovchange,theer tarelazy dogwords,ngee,g.'], ['ujumps'], ['do'], ['Hi, my    nam e   is J you?   '], ['on'], ['Multi\\nl\\nstring\\nHello,\\nworld!\\n'], ['Multi\\nline\\nstrin   A  random    string    wiorth     no    commas     or   spacesthg\\nHi,rld!\\n'], ['yldadzydoJowithhn,'], ['lninie!'], ['Hi, my    name   is John. How     oare    you?   '], ['lniniie!'], ['or'], ['The quick browner th e lazy randdocPresident, John, F,n Kennedyhangee,.'], ['are'], ['H'], ['   A  random    string    wiorth     no    c ommas     or   spaces'], ['by,'], ['Hi, my    name   is J you   '], ['The quick brown fox jumpzs over th e lazy dog.'], ['HellloThe quiUthx jumps over tarelazy dog.'], ['uThe quick brown fox jumpzs over th e lazy dog.jumps'], ['chhownge,'], ['linee'], ['   A  random    string    with      no    commwords,as     or   spaces'], ['nlniniie!'], [' A  '], ['you??'], ['jumpwiordog.ths'], ['Two spaces after,  one space before s , and no speaces in between'], ['ThTH   A  random    string    with      no    commas     or   spacesello,e'], ['BB'], ['The quick b rown fox jumps oazy dog.'], ['om'], ['ThTHrownello,e'], ['dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no    comma  quick brown fdog.ses'], ['spacesu?'], ['yldadzydcommas!uluti,'], ['Multi\\nline\\nstrin   A  random    string    wiorth     no    commas     or   spacesthg\\nHi,rtld!\\nH'], ['The quick brown fox jumg.'], ['chhowngec,'], ['rdandom'], ['wiorth'], ['meaning'], [',,,,,,No words, her,e,,,,,,'], ['Amazing, how a sentence can change, meaning just by, addinhg or removing, comma!'], ['rdmandom'], ['John,'], ['rown'], ['Multi\\nline\\nstrHwords,\\n'], ['TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths over tareaddHi, my    nam e   is J you?   ing'], ['ynldadzydoJohn,'], ['and'], ['dog.H'], ['s'], ['jusAmazing, how a sentence can cnamehange, meaning ovMultierjust by, adding or removing, commas!tt'], ['dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no    comma  quick brown cThefdog.ses'], ['sentence'], ['n.'], ['cheange,'], ['no'], ['Homicommases, my    name   is are    you?   '], ['brown'], ['TThTH'], ['changee,g.'], [',,,,,,No'], ['spacesNDWUyMDDWJAr'], ['Multid\\nline\\nstring\\nHello,\\nworld!\\n'], ['you?o?'], ['   A  random    string    wiorth  ThTHello,e   no    c ommas     or   spaces'], ['eBThTHello,e'], ['cheangeg,'], ['yo'], ['showu?'], ['spsaces'], ['H    A  rand om    string    with      no    commas     or withicommases, my    name   is John. How     are    you?   '], ['dog.comyldadzydcommas!uluti,mases'], ['The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e lazy dochangee,g. or removing, commas!!umg.cheangeg,'], ['BrandomeB'], ['   A  random    string    with       no    commas     or   spaces'], ['The qu ick b rown fox jumps over the lazy dog.commases'], ['Bra'], ['iiis'], ['rdmandoom'], ['words,'], ['spacesNDWUyMDDWJAspacesNDWUyMDDWJArr'], ['Multi\\nlinjumpzs\\nworld!\\n'], ['i'], ['browns'], ['how'], ['cThe quchange,theick browner th e lazy dochangee,g.ommas'], ['change.e,g.'], ['rThe quick brown fox jumps over change,the lazydog.dmandoom'], ['lninile!'], ['Multi\\nline\\nstrin   A jumpwiordog.ths random    string    wiorth     no    commas     or   spacesthg\\nHi,rtld!\\nH'], ['sshowu?'], ['   A  random    string    wiorth  ThTHello,e comma!  no    c ommas     or   spaces'], ['jumpzs'], ['quiUthx'], ['o'], ['commas!!'], ['commas!'], ['   A  random    string    with     no    commas     or   spacesNWUyMDWJAr'], ['cThe quick browniiiser th angee,g.ommas'], ['l   A  random    string    wiorth     no    commas     or   spacesth'], ['sentesnce'], ['brn'], ['cThe theick browner th e lazy dochangee,gn.ommasThTH'], ['cnamehange,'], ['oveor'], ['taMultireaddHi,'], ['rdmandoHello,'], ['Multi\\nline\\nstring\\nHi,rd!\\n'], ['commasAmazing,'], ['BBThe qmpwiorths over tarelazy dog.changee,g.'], ['spacesNDWUThe qmpwiorths over tarelazy dog.changee,g.yMDDWJAr'], ['FLoaost'], ['before'], ['namouu?'], ['   A  random    string    with      no    c'], ['The qmpwiorlazy dog.'], ['sadding'], ['uThe quick brown fox jumpzs oveth e lazy dog.jumps'], ['Hi, my    name   is John. How   i  oare    you?   '], ['cThe quick browner th e lazy dochangee,g.omm,as'], ['tarelazy'], ['inor'], ['wBBTheith'], ['spaace'], ['Multi\\nline\\nstTherHwords,r\\n'], ['orHi,'], ['yo   A  random    string    wiorth     no    commas???'], ['quick'], ['H    A  rand om    string    with      no    commas     or withicommases, my    name   is John. How  spaace   are    you?u   '], ['adding'], ['jumThe qu ick b rown fox jumps over the lazy dog.commasespzzs'], ['The quick b rown fox quickjumps over the lazy dog.'], ['spFLoaostacesNDWUyMDDWJAr'], ['oazy'], ['dochangee,g.ommas'], ['sho?wu?'], ['tTwo spaces after,  one space before  , and no spaces in betweenh'], ['yMulti\\nline!\\nstrin!g\\nHello,i\\nworld!\\n?'], ['Two spaces aaf,ter,  one space before  , and no speaces in between'], ['o   A  random    string    wiorth     no    commases'], ['brlineen'], ['The quick brown fox jumps over tqhe lazydog.'], ['JohThe,quick,brown,fox,jumps,over,the,lazy,dog.'], ['dochangee,g.'], ['The,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.'], ['juust'], ['   A  random    string    with     n o    commas     or   spaces'], ['   A  random    string    wiorth  ThTHelo,e comma!  no    c ommas browner    or   spaces'], ['spacesu?,,,No'], ['ii'], ['Homicommases, my    name   is are    you'], ['brlJohn.bineen'], ['youlniniie!?o?'], ['sadspacesNWUyMDWHellloThe quickx brown fox jumps over tarelazy tarelazydog.JArding'], ['s!!'], ['beore'], ['spa   A  random    string    wiorth     no    c ommas     or   spacesace'], ['iThe quick brown fox jumps ovMultier tarelazy dog.'], ['n'], ['l   A  random    string    wiorth     no    commas     or   spaesth'], ['The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e ulazy dochangee,g. or removing, commas!!umg.cheangeg,'], ['change,jumpwiths'], ['   A  random    string    with      no    commas     or   spaceTheHi, mry    name   is John. How     are    you?    quick brown fox jumpwiorths over tareaddHi, my    nam e   is J you?   ingsNWUyMDWJAr'], ['cochange,themmas!!'], ['tTwo spaces after,and no spaces in betweenh'], ['MAmazing,'], ['The quick browspacesNWUyMDDWJArn fox jumps over th e lazy dog.'], ['?'], ['   A  rand om   i string    with      no    commas     or with'], ['dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    withrown      fno    comma  quick brown fdog.ses'], ['ulazy'], ['tTwo'], ['rdmaoom'], ['HelloH,i'], ['arBBThe qmpwiorths over tarelazy dog.changee,g.e'], ['Mulluti'], ['Two spaces after,  one space before  , and no speaces in sbetween'], ['e'], ['onon'], ['seHellloThe quiUthx jumps over tarelazy dog.ntesnce'], ['ooazy'], ['   A  random    string    with      no    commwords,as     The qmpwiorths over tarelazy dog.changee,g.or   spaces'], ['oare'], ['Hhe'], ['Multi\\nline\\nstrin   A jumpwiordog.ths random    string    wiorth     no    commas     or   spacesthg\\nHig,rtld!\\nH'], ['yo   A  random    string c   wiorth     no    commas???'], ['   A  random    string    with  ddHi, my    nam e   is J you?   ingsNWUyMDWJAr'], ['random'], ['H   A  rand om    string    with      no     commas     or Hwithicommases, my    name   is John. How     are    you?   '], ['dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no h   comma  quick brown cThefdog.ses'], ['nrandon'], ['sbetween'], ['dog.commaTheHi, my    name   is John. How     are    yo  s A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsarelazy dog.ses'], ['jumThe'], ['FLspacesTheoaost'], [' e  A  rand ocommas     or with'], ['President,'], ['Hello,'], ['jumg.'], ['ocommams'], ['commas???lniniie!'], ['angee,g.ommas'], ['broowns'], ['FWR'], ['quicckx'], ['The quick browsl   A  random    string    wiorth     no    commas     or   spacesthpacesNWUyMDDWJArn fox jumps over th e lazy dog.'], [',,,,,,,No words, here,,,,,,'], ['   A  random    string    with      no    commwords,as     odr   spaces'], ['President,yldadzydoJowithhn, John, F, her,e,,,,,,Kennedy'], ['yldadzydog.jumpslydoJowithhn,'], ['Hellloll,'], ['Two spaces after,  one spaces beforfe  , and no spaces in beMulti\\nline\\nstring\\nHwords,\\ntween'], ['   A  random    string    wiorth  ThTHelo,e comma!  no   c ommas browner    or   spaces'], ['br   A  random    string    with      no    dcoowns'], [','], ['nn'], ['H    A  rand om    string    with      no   her,e,,,,,, commas     or withicommases, my    name   is John. How  spaace   are    you?u   '], ['commasMullti!!'], ['The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e ulazy dochangmas!!umg.cheangeg,'], ['cThe theick browner th e lazy l   A  random    string    wiorth     no    commas     or   spaesthdochanngee,gn.ommasThTH'], ['The qfuick brown fox jumg.'], ['commas!!umg.cheangeg,'], ['taHelloH,iMultireaddHi,'], ['youlniniie!?o?   A  random    string    with      no    commwords,as     or   spaces'], ['John.inor'], ['oyo'], ['The quick brown fox jumps over the lazyy dog.'], ['TheHi, my    name   is John. How     are    y ou?    quick brown fox jumpwiorths over tareaddHi, my    nam e   is J you?   ing'], ['ThTHelo,e'], ['The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sThe,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.entence can change, meaning just by, addingThe quick browner th e ulazy dochangmas!!umg .cheangeg,'], ['The qmpwiorths ovchange,withs,ngee,g.'], ['oyoo'], ['Hi,rd!'], ['Two spaces after,  one space before  , andspFLoaostacesNDWUyMDDWJArspeaces in between'], ['The quick b rown fox jumps over the lazy dmases'], ['yldadzydog.jumpslydoJowthhnu,'], ['spaesth'], ['The qmpwiorths ovchange,withs,ngee,g.Hi,rd!'], ['cThe quick browner th e lazy dochangee,g.omjumThe qu ick b rown fox jumps over the lazy dog.commasespzzsmas'], ['HigarBBThe qmpwiorths over tarelazy dog.changee,g.e,rtld!'], ['adnd'], ['jarBBTheuust'], ['jummps'], ['F,n'], ['dog.commaTheHi, my    name   is John. How     are    yo  s A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsases'], ['dog.cogmmases'], ['   A  random    string    wiorth  ThTHespacesNDWUyMDDWJAspacesNDWUyMDDWJArrlo,e comma!  no   c ommas browner    or   spaces'], ['linee!'], ['Hicommases,'], ['nTLxTIkG'], ['cTehe quick browner th e lazy dochangee,g.ommas'], ['dog.commaTheHi, my    name   is John. How     are    yo  s A  random    string  ThTHuick brown fox jumpwiorths over tsases'], ['TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiortyhs over tarelazy dog.'], ['cnamehangrandome,'], ['cThe quick browner th e lazy docahangee,g.omjumThe qu ick b rown fox jumps over the lazy dog.commasespzzsmas'], ['ce'], ['sa'], ['oo'], ['MAmazing, how a sentencse can change, meaningb just by, addin!ulunti'], ['TheHi, my    name   is John. How     are    aryou?    quick brown fox jumpwiortyhs over tarelazy dog.'], ['ddHi,'], ['   A  random    string    with      no    commwords,as The quick browneer th e lazy dochangee,g.    The qmpwiorths over tarelazy dog.changee,g.or   spaces'], ['dog.commaTheHi, my    name   is John. xHow     are    yo  s A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsases'], ['spacesNDWUWyMDDWJAspacesNDWUyMDDWJArr'], ['rddandom'], ['lin'], ['chspacesNDWUThe qmpwiorths over tarelazy dog.changee,g.yMDDWJArwngec,'], ['lazydog.'], ['ovchange,theer'], ['theick'], ['The quick brown fox jumps over th e l dog.'], ['b'], ['cheangMulti\\nline!\\nstring\\nHello,i\\nworld!\\ne,'], ['Hello,rds,ngee,g.'], ['saspa   A  random    string    wiorth     no    c ommas     or   spacesacedding'], ['JohThe,quick,brown,fox,jumps,over,the,tlazy,dog.'], ['uThe quick brown fox jumpzs over th e lHi, my    name   is   A  random    string    wiorth     no    commas     or   spaces John. How     are    you?   azy dog.jumps'], ['The qmpwiorths over tarickelazy dog.changee,g.'], [' AMulti\\nline\\nstTherHwords,r\\n  '], ['uThe quick brown fox jumpzs over th e lHi, my    name   is   A  random    string   Multi\\nline\\n\\nstring\\nHello,\\nworld!\\n wiorth     no    commas     or   spaces John. How     are    you?   azy dog.jumps'], ['iiiis'], ['   A  randomstrHwords,    string    with      no    commas    r or   spaces'], ['yo   A  randomas???'], ['spsacesTheHi, my    name   is John.The quick b rown fox quickjumps over the lazy dog.readding'], ['commas???lnine!'], ['dog.'], ['The quick brown fox jueBThTHello,emps over change,the lazydog.'], ['spa'], ['dog.commaTheHi, my    name   is John. How  Two spaces after,  one space before  , and no spaces in between   are    yo   A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsarelazy dog.ses'], ['yMulti'], ['ingsNWUyMDWJAr'], ['The quick brown fox jumps over tarelazy doTwo spaces aaf,ter,  one space before  , and no speaces in betweeng.'], ['omas'], ['uHjumThe'], ['aaf,ter,'], ['jusAmazing, how a sentence can cnamehange, meaning ovMultierjust by, adding or removing, commas!tquickxtUth'], [',T'], ['rom'], ['dog.changee,g.yMDDWJAr'], ['ldog.changee,g.yMDDWJArwngec,zydog.'], ['The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commatTwosAmazing, how a sThe,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.entence can change, meaning just by, addingThe quick browner th e ulazy dochangm!!umg .cheangeg,'], ['yMulti\\nline!\\nstring\\nHecThe quick browner th e lazy docahangee,g.omjumThe qu ick b rown fox jumps over the lazy dog.commasespzzsmasloyolo,i\\nworld!\\n?'], ['lazy'], ['Multi\\nline\\nstTheerHwords,r\\n'], ['Amazing, how a sentence can change, meaning ovMultspeacesierjust by, adding or removing, commas!'], ['yMulti\\nline!\\nstring\\nHello,i\\nworl!\\n?'], ['F,'], ['dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    withrown      fno    comma  quick brs'], ['TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths ov er tareaddHi, my  jusAmazing,  nam e   is J you?   ing'], ['The quick  b rown fox jumps over the lazy dog.'], ['eBThTHelleo,e'], ['cTehe'], ['Ammazing, how a sentence can changee, meaning just by, adding or removing, commas!'], ['h'], ['chspacesNDWUThe qmpwiorths over tarelazy dog.changee,g.yMtDDWJArwngec,'], ['jumpwiortyhs'], ['Hi, my    nameonon   is J you?   '], ['Two spaces after,  one spaces beforfe  , and no saces in beMulti\\nline\\nstring\\nHwords,\\ntween'], ['ohvchange,tMulti\\nlinjumpzs\\nworld!\\nheer'], ['eBtarickelazy'], ['yldadzydog.jumpslydoJowithhnn,'], ['hth'], ['The qmpwiortths ovchange,withs,TwoBngee,g.Hi,rd!'], ['Hicommases, my    namem   is are    you?   '], ['uThe quick brown fox jumpzs over th e lHi, my    namer   is   A  random    string    witTwo spaces ohn. How     are    you?   azy dog.jumps'], ['cThe q,uick browner th e lazy dochangee,g.omm,as'], ['comminors???'], ['dog.changee,youlniniie!?o?g.yMDDWJAr'], ['Multi\\nline\\nstrin   A  random    string    th     no    commas     or   spacesthg\\nHi,rtld!\\nH'], ['Multi\\nline\\nstring\\nHello,qmpwiorths\\nworld!\\n'], ['browsl'], ['   A  random    string    wiorth  ThTHelo,e comma!  no   c oarBBThe qmpwiorths over tarelazy dog.changee,g.emmas browner    or   spaces'], ['comminmors???'], ['F,,n'], ['yyQwaoYdS'], ['you?y?'], ['browner'], ['kquickcommas???lniniie!'], ['   A  rand om   i string    with      no   commas     or with'], ['shbeMulti?wu?'], ['brli A  neen'], ['spacesNDWUThe'], ['HelllroThe quickx brown fox jumps over tarelazy tarelazydog.'], ['ThTH   A  random     string    with      no    commas     or   spacesello,e'], ['spacesThe quick browneeWr Uth e lazy dochangee,g.NWUyMDDWJArdog.H'], ['ntesn'], ['saddiang'], ['BBThe'], ['HecThe'], ['nam'], ['cMulti\\nline\\nstTherHwords,r\\nommas!'], ['noiin'], ['eBThTHelloh,e'], ['The quick brown fox jumpsThe quick browspacesNWUyMDDWJArn fox jumps over th e lazy dog. over the lazy dog.'], ['randomas???'], ['thebrliick'], ['cnamehangeThe quick brown fox jumps over change,the lazydog.,'], ['Homicommase s, my    name   is are    youbetween?   '], ['The,ThisStringHasNNoSpaces,,,,,No words, here,,,,,, quick .cheangeg,brown fox jumps over th e l dog.'], ['eHi, my   i namck,brown,fox,jumps,over,the,lazy,dog. you?   zy'], ['removing,'], ['Raav'], ['ThTTHelo,e'], ['namem'], ['sbetwecTeheen'], ['heer'], ['ujummThe qfuick brown fox jumg.ps'], ['ck browner th e lazy dochangee,g.ommas'], ['zy'], ['The quick bsrowspacesNWUyMDDWJArn fox jumps over th e lazy dog.'], ['cnaranddocPresident,mehange,'], ['upjumps'], ['cThe quick browniiiser th you?uangee,g.ommas'], ['ing'], ['bbrlJohn.binee'], ['hnoiin'], ['   A  random    string    with      no    commwords,asver tarelazy dog.changee,g.or   spaces'], ['cnamcehange,'], [',,,,,,N,o'], ['The quick browne fox jumps over tarelazy doTwo spaces aaf,ter,  one space before  , and no speaces in betweeng.'], ['!s!s!'], ['ss'], ['Multi\\nline\\nstrbrowslin   A jumpwiordog.ths random    string    wiorth     no    commas     or   spacesthg\\nHig,rtld!\\nH'], ['betweeng.'], ['brThe quick b rown fox jumps over the lazy dog.n'], ['seHelllThe quick browner th e lazy do changee,g.oThe'], ['sbbetwecTeheen'], ['randomstrHwords,'], ['Hi, my    name  you?   '], ['ladzydoga.'], ['ovchange,withs,ngee,g.Hi,rd!'], ['jumpwiorF,ntyhs'], ['iiicommas!ulutiis'], ['BrH    A  rand om    string    with      no   her,e,,,,,, commas     or withicommases, my    name   is John. How  spaace   are    you?u   spaacea'], ['sshoHhew?'], ['oom'], ['dstTherHwords,r'], ['cheangge,'], ['The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sThe,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.entecThe quick browner th e lazy dochangee,g.omm,asaning just by, addingThe quick browner th e ulazy dochangmas!!umg .cheangeg,'], ['The qmpwioBBrths over tarelazy dog.changee,g.'], ['d   A  random    string    wiorth     no    c ommas     or   spacesV'], ['cant'], ['jommas!umg.'], ['Hi,my,name,is,John'], ['Hi,my,name,is,John,'], [',    , , , ,    ,'], ['1,2,3,4,5,6'], ['Hi!My,Name     is John'], ['Two spaces after,  one space before  , and no spaces in betwstringeen'], ['   A  srandom    string    with     no    commaAs     or   spaces'], ['The,quick,rbrown,fox,jumps,over,the,lazy,dog.'], ['President, John, F, KennedyThe,quick,brown,fox,jumps,over,the,lazy,dog.'], ['Hi, my    naF,me   is John. How     are    you?   '], ['President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.'], ['my'], ['Hi, my    name   is John. How     are    ychange,ou?   '], ['President, John, F, KennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.'], ['Ama zing, how a sentence can change, meaning just by, adding or removing, commas!'], ['srandom'], ['Thbetweene,quick,brown,fox,jumps,over,the,lazy,dog.'], ['Kennedy'], ['beThe,quick,rbrown,fox,jumps,over,the,lazy,dog.fore'], ['icommaAs'], ['beThe,quick,rbrown,fox,jumps,over,the,lazy,do,g.fore'], ['Two spaces atfter,  one space before  , and no spaces in betwstringeen'], ['jHello,ust'], ['Hi, my    naF,me   is Johow     areover    you?   '], ['zing,'], ['beThe'], ['dsrandom'], ['comMubeThe,quick,rbrown,fox,jumps,over,the,lazy,do,g.foreltimaAs'], ['sMulti\\nline\\nstring\\nHello,\\nworld!\\npaceno'], ['Twrandomo spaces after,  one space before  , aTwond no spaces in between'], ['Hi,  my    name   is John. How     are    ychange,ou? aTwond'], ['EeJKnUSVXF'], ['qk'], ['world!'], ['President, John, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.'], ['y'], ['   A  srandom    string    with     no    commaAs     ort   spaces'], ['world!!'], ['ychange,ou?'], ['Amazing, how a sentence ianing just jHello,ustby, adding or removing, commas!'], ['moving,'], ['   A  srandom     string    with     no    commaAs     ort   spaces'], ['ychange,Hi, my    name   is John. How     are    ychange,ou?   ou?'], ['BCKkvp'], ['azing,re'], ['eKenney'], ['Hi,  my    name   is oJohn. How     are    ychange,ou? aTwond'], ['Hi,  my    name   is John. How     are    ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou? aTwond'], ['cosmmasychancge,ou?!'], ['lazyThe,quick,rbrown,fox,jumps,over,the,lazy,dog.'], ['beforsMultiethe,lazy,dog.'], ['Two spTwrandomoaces atfter,  one space before  , and no spaces in betwstringeen'], ['sMulti\\nline\\nsaddingtring\\nHello,\\nworld!\\npaceno'], ['lazAmazing, how a sentence can change, meaning just by, adding or removing, commas!y'], ['beTh'], ['ychange,Hi, my    name   is John. How     are    ychang e,ou?   ou?'], ['How'], ['HoJohn,w'], ['comm'], ['leine'], ['Tjumps,over,the,lazy,dog.'], ['spTwrandomoaces'], ['lei'], ['commma!'], ['ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou?'], ['boeThe,quick,rbrown,fox,jumps,over,the,lazy,dog.fore'], ['aftThe,quick,brown,fox,jumps,over,the,lazy,dog.er,'], ['   A  srandom     string    with     no    comJohn.maAs     ort   spaces'], ['Hi, my    naF,me   is Johow     areover    you?   ello,ust'], ['HoJohn'], ['   A  sranadom    string    with     no    dcommaAs     or   spaces'], ['lazAmazing,'], ['ychaKennedyThe,quick,brown,fox,jumps,ovesMulti\\nline\\nsaddingtring\\nHello,\\nworld!\\npacenor,Hi,nge,ou?'], ['atfter,'], ['President, John, F, KennedyThnamee,quick,brown,fox,jumps,over,the,lazy,dog.'], ['yXdEXoUU'], ['EeJKnUSVF'], ['Hi,  my    name   is John. How     are    ycPresident, John, F, Kennedyhange,ou? aTwond'], ['BCKkvqkp'], ['BC   A  srandom     string    with     no    commaAs     ort   spaceskvp'], ['yu?'], ['The,quick,rbrown,fox,jumps,over,tog.'], ['cosmmasychamnce,ou?!'], ['Pre, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.'], ['Two spTwrandomoaces atfter,  one space before  , and no spaces in betwstri ngeen'], ['ychange,Hi, my     name   is John. How     are    ychange,ou?   ou?'], ['Hi, my    naF,me   is Jomhow     areover    you?   ello,ust'], ['KennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.'], ['adJohowding'], ['Twrandomo spaces after,  one space before  , aTwond no spaceHi,  my    name   is John. How     are    ychange,ou? aTwonds in between'], ['hinow'], ['The quick brown fox jukmps over the lazy dog.'], ['spTwradomoaces'], ['Hi,srandom my    name   is John. How  spaces   are    ychange,ou?   '], ['aftThe,quickThbetweene,quick,brown,fox,jumps,over,the,lazer,tthe,lazy,dog.er,'], ['quicck'], ['Pr, F, KennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.'], ['aftThe,quickThbetweene,quick,brown,fox,jAma zing, how a sentence can change, meaning just by, adding or removing, commas!umps,over,the,lazer,tthe,lazy,dog.er,'], ['lazAmazjing, how a sentence can change, meaning just by, adding or removing, commas!y'], ['atfterHi, my    name   is John. How     are    ychange,ou?   ,'], ['dcommaAs'], ['between'], ['jumpychange,Hi, my    name   is John. How     are    ychange,ou?   ou?s'], ['Pre,'], ['Tjumps,over,thThe,quick,rbrown,fox,jumps,over,tog.e,lazy,dog.'], ['EeJPre, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.KnUSVF'], ['ycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,umps,over,the,lazy,dog.world!\\npacenor,Hi,nge,ou?'], ['over'], ['beThe,quick,rbrown,feox,jumps,over,the,lazy,dog.fomre'], ['spa,,e,,,,No word,s, here,,,,,,ces'], ['ychange,Hi, my space   name   is John. How     are    ychang e,ou?   ou?'], ['after,BCKkvqkp'], ['Multi'], ['jHello,usst'], ['OPvfQ'], ['a'], ['OPQvfQ'], ['   A  srandom      string    with     no    commaAs     ort   spaces'], ['ThisSaTwondstringHasNoSpaces'], ['Tjumps,over,thThe,quick,rbrown,fox,jumps,over,tog.e,laz.'], ['qPresident, John, F, Kennedyuicck'], ['ort'], ['onejHello,ust'], ['sPresident, John, F, Kennedyrandom'], ['ThisStringHasNocosmmasychancge,ou?!Spaces'], ['icommaAMultis'], ['Pe,'], ['The,quick,brown,fox,j,umps,over,the,lazy,dog.'], ['HoJohnyu?'], ['spTwradomoaEeJPre,s'], ['Keneello,ustdy'], ['   A  random    string    with     no    commas     o r   spaces'], ['dcommaA'], ['adJohownding'], ['Hi,  my    name   is John. How     are    ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou? aTwoHnd'], ['qquick'], ['Hi,  my    name   is John. HoHw     are  dsrandom  ychange,ou? aTwond'], ['lazrandomy'], ['jumpychange,Hi,'], ['KBCKkvqkp'], ['aTwoycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,umps,over,the,lazy,dog.world!\\npacenor,Hi,nge,ou?nds'], ['K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi,'], ['yort?'], ['HoJomoving,hnyu?'], ['adJohowdMulti\\nline\\nstring\\nHello,\\nworld!\\ning'], ['sPresident,'], ['Two spTwrandomoaces atfter,  one space before  , and no spaces in betwstri ngeen   A  random    string    with     no    commas     or   spaces'], ['areover'], ['movingover,'], ['ychaKennedyThe,quick,brown,fAmazing, how a sentence ianing just jHello,ustby, adding or removing, commas!ou?'], ['ychange,Hi, my space   name   issMulti\\nline\\nstring\\nHello,\\nworld!\\npaceno John. How     are    ychang e,ou?   ou?'], ['beThe,quick,rbrown,feeox,jumps,over,the,lazy,dog.fomre'], ['ou?'], ['The quick brown fox jukmps over the  lazy dog.'], ['Amazing, how a senteence can change, meaning just by, adding or removing, commas!'], ['here,,,,,,'], ['m'], ['   A  random    string  n  with     no    commas     o r   spaces'], ['The,quick,rbrown,fox,jumpsu,over,jumpychange,Hi, my    name   is John. How     are    ychange,ou?   ou?sg.'], ['ycPresident,'], ['ychang'], ['adJohoweding'], ['spa,,e,,,,NolazrTwrandomoandomy'], ['lazAmazing, how a sentence can change, meaning just by, addinge or removing, cogmmas!y'], ['spTwradomoaEeJP,s'], ['oPe,?'], ['yuu?'], ['ychaKennedyThJohn.e,quick,brown,fox,jumps,over,Hi,nge,ou?'], ['saddingtring'], ['Hi,  my    name   is John. How     are   d'], ['The,quick,rbrown,fox,jumps,over,the,lazy,dogou?.'], ['Hi, my    naF,me   is Jomhow      areover    you?   ello,ust'], ['betwstringeen'], ['qqck'], ['movingovrandomer,'], ['dsrand'], ['d'], ['ju'], ['Multi\\nline\\nstring\\nHcosmmasychancge,ou?!ello,\\nworld!\\n'], ['zin'], ['spTwradomoBCKkvpaEeJPre,s'], ['K,ennedyThe,quicjumpsk,brown,fox,jump,s,over,Hi,'], ['sMulti\\nline\\nsaddingtring\\nHel'], ['ychange,Hi, my    name  ThisSaTwondstringHasNoSpaces is John. How     are    ychang e,ou?   ou?'], ['Kennedyucck'], ['aftThe,quick,brown,fox,jumps,over,the,lazy,do,'], ['ThisStringHasNocosmmasychjumpychange,Hi, my    name   is John. How     are    ySchange,ou?   ou?sancge,ou?!Spaces'], ['Ama zing, how a sentence can meaningemoving, commas!'], ['The quick brownTwrandomo f the lazy dog.'], ['HoJohyu?'], ['Hi, my    naF,me   is Jomhow     areover    yremoving,ou?   ello,ust'], ['areoveyuu?r'], ['Pretsident, John, F, Kennedy'], ['spaceskvp'], ['President, Joychange,Hi, my space   name   issMulti\\nline\\nstring\\nHello,\\nworld!\\npaceno John. How     are    ychang e,ou?   ou?hn, F, KennedyThe,quick,brown,fox,jumps,over,the,lazy,dog.'], ['sPresident, John, F,n Kennedyrandom'], ['Pretsident,'], ['lazAmazing, how a sentence can change, meaning just by, adding or removing, coHi, my    naF,me   is Johow     areover    you?   ello,ustmmas!y'], ['dcdommaA'], ['yy'], ['KtowRydY'], ['Presidenpacenor,Hi,nge,ou?ndst, John, F, KennedyThnamee,quick,brown,fox,jumps,over,the,lazy,dog.'], ['jukumps'], ['yXdEonejHello,ustXoUU'], ['sMulti\\nline\\nstring\\nHello,\\nmeaningemoving,world!\\npaceno'], ['Presidenpacenor,Hi,nge,ou?ndst, Johdn, F, KennedyThnamee,quick,brown,fox,jumps,over,the,lazy,dog.'], ['hiKennedyuccknow'], ['qPresident,'], ['dsrandello,ustmmas!y'], ['JHoJohnyu?'], ['belazAmazing,tweenn'], ['lenine'], ['JkohThe quick brownTwrandomo f the lazy dog.n.'], ['S'], ['atfterHi, my    name   is John. How     are    ychange ,ou?   ,'], ['aychaKennedyThe,quick,brown,fAmazing, how a sentence ianing just jHello,ustby, adding or removing, commas!ou?ding'], ['aftThe,quick,brown,fumps,over,the,lazy,do,'], ['aTwond'], ['ou?s'], ['ello,ustmmas!y'], ['araeover'], ['   A  random    string  n  with     no    scommas o    o r   spaces'], ['pDWegu'], ['pacenor,Hi,nge,ou?nds'], ['Tjumps.,over,thThe,quick,rbrown,fox,jumps,over,tog.e,lazy,dog.'], ['EeJPre,'], ['slMulti\\nline\\nsaddingtring\\nHel'], ['betwstringee'], ['hjumpychange,Hi,'], ['a,tfter,'], ['qPresident, Jiohn, F, Kennedyuicck'], ['brownTwrandomo'], ['Tjumps,over,uick,rbrown,fox,jumps,over,tog.e,laz.'], ['dog.a.Twonds'], ['VqVNGKV'], ['Twrandomo spaces after,  one space before  , aTwond no spaceHi,  my    name   isworld! John. How     are    ychange,ou? aTwonds in between'], ['HoJohye,ou?u?'], ['Hi, myJoychange,Hi,   t'], ['paceno'], ['beTbh'], ['chan,ge,'], ['spa,,e,,,,No'], ['behTbh'], ['aychaKennedyThe,quick,brown,fAmazing, how a sentence ianing just jHello,ustby, adding odog.r removing, commas!ou?ding'], ['thlazAmazing,'], ['KeKnnedynucck'], ['aTwoycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,umps,over,the,lazy,dog.world!\\npacenor?nds'], ['HoJohye,ou?uKennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.'], ['lAeSbnrM'], ['The quick brown fox juTwrandomo spaces after,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.'], ['adJohowdMulti'], ['Twrandomo spaces after,  one space before  , aTwond no spaceHi,  my    name   iswostringrld! John. How     are    ychange,ou? aTwonds in between'], ['dsrand,ello,ustmmas!y'], ['naF,me'], ['.Hi,  my    name   is John. HoHw     are  dsrandom  ychange,ou? aTwond'], ['e  lazy doge,ou?.'], ['   A  sranadom    string    with     no    dcomma     or   spaces'], ['The quick brow n fox jumps over the lazy dog.'], ['Amazing, how aa sentence ianing just jHello,ustby, adding or removing, commas!'], ['qPresident, Jiohn, F, Kedog.a.TwondsnnedyuicckHoohnyu?'], ['dsrandelmlo,ustmmas!y'], ['comJohn.maAsjukmps'], ['eTjumps,over,the,lazy,dog.'], ['BCKkvq.Hi,  my    name   is John. HoHw     are  dsrandom  ychange,ou? aTwondkp'], ['Tjumps,over,thThe,quick,rbrown,fox,jumyremoving,ou?ps,over,tog.e,lazy,dog.'], ['oThisStringHasNocosmmasychamncge,ou?!Spaceser'], ['here,,,,,,cesne'], ['qPresident, Jiohn, F, Kennedy,uicck'], ['lazAmazing, ehow a sentence can change, meaning just by, addinge or removing, cogmmas!y'], ['lazAmazing, how a sentence can change, meaning justodog.r by, addinge or removing, cogmmas!y'], ['izin'], ['dsrandello,ustmbehTbhmas!'], ['mmy'], ['KBCCKkvqkp'], ['aftThe,quickThbetweene,quick,brown,fox,jAma'], ['sMulti\\nline\\nstring\\nHello,\\nworld!\\ndom'], ['pnaceno'], ['here,,,,,,addinge'], ['Pe,aTwoHnd'], ['Two spaces after,  one space nbefore  , and no spaces in betwstringeenHel'], ['brownbeThe,quick,rbrown,feox,jumps,over,the,lazy,dog.fomre'], ['spTwradomoa,s'], ['na,F,me'], ['Ama'], ['ng'], ['meaningemoving,'], ['The quick brown mfox juTwrandomo spaces after,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.'], ['lazAmazing, how a sentence can change, meaning just by, adding or removing, commas!yeKnney'], ['President, John, F, KennedyThnamee,quick,brown,fox,jumps,over,the,ychange,Hi, my    name   is John. How     are    ychange,ou?   ou?lazy,dog.'], ['HoJohHi, myJoychange,Hi,   tu?u?'], ['quicc'], ['comHoJohyu?m'], ['c!ommas!!'], ['Joychange,Hi,'], ['aTwoycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,uThe quick brown mfox juTwrandomo spaces after,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.mps,over,the,lazy,dog.world!\\npacenor?nds'], ['onaftThe,quickThbetweene,quick,brown,fox,jAma zing, how a sentence can change, meaning just by, adding or removing, commas!umps,over,the,lazer,tthe,lazy,dog.er,'], ['Mychange,Hi, my space   name   issMulti\\nline\\nstring\\nHello,\\nworld!\\npaceno John. How     are    ychang e,ou?   ou?'], ['brownbeThe,quick,rbrown,feox,jumps,over,the,lazy,edog.fomre'], ['ychaKennedyThe,quick,brown,fAmazing,'], ['Hi,  my    name   is John. HowbeforsMultiethe,lazy,dog.     are    Tjumps,over,uick,rbrown,fox,jumps,over,tog.e,laz.ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou? aTwoHnd'], ['Tjumps,over,thThe,quick,rbrown,fox,jumyrefmoving,ou?ps,over,tog.e,lazy,dog.'], ['The quick brown fox jukmps over the  lazy dog.chan,ge,'], ['A'], ['cosmmasychancgeu?!'], ['President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, mye    name   is John. How     ar e    you?   the,lazy,dog.'], ['BCKdog.a.Twondskvp'], ['dsrandd'], ['ello,ust'], ['meaningemovning,'], ['Tjumps,over,tdsrand,ello,ustmmas!yhThe,quick,rbrown,fox,jumyremoving,ou?ps,over,tog.e,lazy,dogspaceHi,'], ['nae,F,me'], ['Jiohn,'], ['adJohoychaKennedyThe,quick,brown,fAmazing,dMulti'], ['HoJohyei,ou?uKennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.'], ['The,quick,rbrown,fox,jumpsu,over,jumpychange,Hi, my    name   is Johdsrandn. How     are    ychange,ou?   ou?sg.'], ['Twoyort?'], ['KennedyThe,orquick,brown,fox,jumps,over,the,lazy,doTjumps.,over,thThze,quick,rbrown,fox,jumps,over,tog.e,lazy,dog.g.'], ['srapacenor,Hi,nge,ou?ndoehowm'], ['cosmmasychsPresident, John, F,n Kennedyrandomansrandomcge,ou?!'], ['Kennedyrandom'], ['brownTwranhere,,,,,,cesnedomwo'], ['bfA'], ['OPvleifQbelazAmazing,tweenn'], ['Twoyor?'], ['spa,,e,,,,eNo'], ['lazAmazing, how a sentence can change, meaning justodog.r'], ['pnacHello,eno'], ['adoJohowdingi'], ['HoJohye,ou?uKennedyThe,orquick,brown,fox,spacesjumps,over,the,lazy,dog.'], ['Mychange,Tjumps,over,uick,rbrown,fox,jumps,over,tog.e,laz.ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou?Hi,'], ['   A  srandom      string    with   paces'], ['Hi, my    naF,me   is Jomhowlo,ust'], ['HoJohye,ouo?u?'], ['after,BCKkvkp'], ['HoJohye,ou?uKenneodyThe,orquick,brown,fox,jumps,over,the,lazy,dog.'], ['wHow'], ['KtowRydYThe quick brow n fox jumps over the lazy dog.'], ['annd'], ['e  lazy dge,ou?.'], ['ychaKennedyThe,quick,brown,ifox,jumps,ovesMulti'], ['wychange,Hi, my    name  ThisSaTwondstringHasNoSpaces is John. How     are    ychang e,ou?   ou?orld!!'], ['areoveyuur'], ['meaningemosMulti\\nline\\nstring\\nHello,\\nmeaningemoving,world!\\npacenoving,'], ['lazAmazing, homeaningemoving,w a sentence can change, meaning jusfoxt by, aaddinge or removing, cogmmas!y'], ['VqVVNGVKV'], ['spTwradoa,s'], ['ou?snaeme'], ['lazAmazing, how a sentence can changewojrd,s,g just by, adding or removiyng, commas!y'], ['usst'], ['betwstringbeen'], ['hereHi,srandom my    name   is John. How  spaces   are    ychange,ou?   '], ['Pre, F, K,ennedyThe,rquicjumpsk,brown,fox,jumps,over,Hi, my    n   A  srandom      string    with   pacesohn. How     ar e    you?   the,lazy,dog.'], ['   A  sranadom    string    with     no    dcommaAs     adJohowdMulti\\nline\\nstring\\nHello,\\nworld!\\ningor   spaces'], ['Hi, myJoychangVqVVNGVKVe,Hi,   t'], ['cthlasentencezAmazing,osmmaKennedyThnamee,quick,brown,fox,jumps,over,the,ychange,Hi,sychancgeu?!'], ['President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, mye    name   is John. How     ar e    lazy,dog.'], ['qqquick'], ['lazy,dog.'], ['r'], ['HoJohye,ou?uKennedyThe,orquick,brown,fox,spacesjumps,onver,the,lazy,dog.'], ['coychange,ou?ammma!'], ['comJohn.mthbetweenkmpseaAsjukmps'], ['YNe'], ['brow'], ['yremoving,ou?'], ['lazAmazjing, how a sentence can change, meaninglAeSbnrM just by, adding or removing, commas!y'], ['aTwoycick,brown,fox,jcommas!umps,onkmps over the lazy dog.mps,over,the,lazy,dog.world!\\npacenor?nds'], ['ycPresidenadJohowdingt,'], ['.Hi,  my    name   is John. HoHw     are  d  ychange,ou? aTwond'], ['beThe,quick,rbrown,fox,jumups,over,the,lazy,do,g.fore'], ['jHelloo,usst'], ['dd'], ['he,,,,,'], ['voTB'], ['President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, my    name   is John. How     ar he    you?   the,lazy,dog.'], ['dsrandelmlo,ustmmHi,srandom my    name   Pre, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.is John. How  spaces   are    ychange,ou?   as!y'], ['HoJohye,ou?uKenneodyThe,orq,uick,brown,fox,jumps,over,the,lazy,dog.'], ['lazAmazjing, how a sentence can change, meaninglAeSbnrM just by, addcing or removing, commas!y'], ['dcoTjumps,over,uick,rbrown.e,laz.mmaA'], ['ychange,Hi, my    name   is John. How     ychange,Hi,are    ychang e,ou?   ou?'], ['yeKenney'], ['ou?sg.'], ['beThe,quick,rbrown,feox,jumps,over,the,lazy,dog.focommas!ou?mre'], ['areobrownTwrandomover'], ['qPresidenJiohn, F, Kennedy,uicck'], ['issMulti'], ['the,lazy,dog.BCKkvp'], ['agdJohownding'], ['Pre, F, K,ennedyThe,rquicjumpsk,brown,feox,jumps,over,Hi, my    n   A  srandom      string    with   pacesohn. How     ar e    you?   the,lazy,dog.'], ['qqk'], ['noThe quick brown fox juTwrandomo spaces aPresident, John, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.fter,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.'], ['lazAmazjing, how a sentence can change, meaninglAeSbnrM just by, adding or removing, commams!y'], ['mye'], ['spaceskpvp'], ['BCKkvq.Hi,  my    name   is John. HJohowoHw     are  dsr andom  ychange,ou? aTwondkp'], ['sMulti'], ['dsrawithndd']]\n    results = [['Hi', 'my', 'name', 'is', 'John'], ['One', 'two', 'three', 'four', 'five', 'six'], ['Hi', 'my', 'name'], ['One', 'two', 'three', 'four', 'five', 'six'], [], ['ahmed', 'gamal'], [], [], ['Elephant', 'giraffe', 'lion', 'zebra'], ['Hi', 'there', 'is', 'a', 'lot', 'of', 'space'], [], ['apple'], ['cat', 'dog', 'fish'], ['hello', 'world'], ['One', 'two', 'three', 'four'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog'], ['hello', 'oworld'], [], ['The', 'quick', 'brown', 'f', 'the', 'lazy', 'dog'], [], ['The', 'quickbrown', 'f', 'the', 'lazy', 'dog'], [], ['The', 'quickbrowny', 'f', 'the', 'lazy', 'dog'], ['The', 'quTick', 'brown', 'f', 'the', 'lazy', 'dog'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'tohe', 'lazy', 'dog'], ['The', 'quickbrown', 'y', 'dog'], ['One', 'two', 'three', 'fouOne', 'two', 'three', 'fourr'], ['cagt', 'dog', 'fish'], ['Elephant', 'gieraffe', 'lion', 'zebra'], [], ['The', 'quickbrown', 'dog'], ['The', 'quTick', 'brown', 'f', 'the', 'lazy', 'dog'], ['cat', 'dofish'], ['hehello', 'oworldllo', 'oworld'], ['cat', 'dofish'], ['The', 'quickbrown', 'dog'], ['The', 'quTick', 'brown', 'f', 'One', 'two', 'three', 'fourthe', 'lazy', 'dog'], ['The', 'quTick', 'bThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'tohe', 'lazy', 'dogrown', 'f', 'the', 'lazy', 'dog'], ['The', 'quTickf', 'the', 'lazy', 'dog'], ['app', 'cat', 'dofish', 'e'], ['The', 'quTicat', 'dog', 'fishckf', 'the', 'lazy', 'dog'], ['The', 'quTicat', 'dog', 'fishckf', 'the', 'lazy', 'doyg'], [], ['appl', 'e'], ['The', 'qucfTickf', 'the', 'lazy', 'dog'], ['XUI'], ['hllo', 'wold'], ['One', 'two', 'three', 'fouOne', 'thello', 'oworldwo', 'three', 'fourr'], ['app', 'The', 'quTick', 'brown', 'f', 'the', 'lazy', 'dog', 'cat', 'dofish', 'e'], ['The', 'quTickf', 'the', 'lazy', 'dog'], ['cat', 'dofis'], ['Theh', 'quTicat', 'dog', 'fishckf', 'the', 'lazy', 'doyg'], ['The', 'quTickTheh', 'quTicat', 'dog', 'fishckf', 'the', 'lazy', 'doyg', 'brown', 'f', 'the', 'lazy', 'dog'], ['Tx', 'jumps', 'over', 'tohe', 'lazy', 'dog'], ['The', 'quick', 'brown', 'f', 'The', 'quTick', 'br', 'own', 'f', 'the', 'lazy', 'dog', 'ox', 'jumps', 'over', 'tohe', 'lazy', 'dog'], ['cat', 'dhofishOne', 'two', 'three', 'four'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'tohe', 'lazy', 'dog'], ['cT', 'he', 'quTick', 'brown', 'f', 'One', 'two', 'three', 'fourthe', 'lazy', 'dogt', 'dofis'], [], ['The', 'quTick', 'brownThe', 'quickbrown', 'y', 'dog', 'f', 'One', 'two', 'three', 'fourthe', 'lazy', 'dog'], ['The', 'quTicat', 'dog', 'fishckf', 'the', 'l', 'appl', 'e', 'azy', 'dog'], ['The', 'quTick', 'brown', 'f', 'the', 'lazy', 'The', 'quicThe', 'quick', 'brown', 'f', 'The', 'quTick', 'br', 'own', 'f', 'the', 'lazy', 'dog', 'ox', 'jumps', 'over', 'tohe', 'lazy', 'dogk', 'brown', 'f', 'The', 'quTick', 'brgdog'], ['The', 'hquickbg'], ['Tx', 'xjumps', 'over', 'tohe', 'lazy', 'dog'], ['The', 'quTick', 'brownThe', 'quickbrown', 'y', 'dog', 'f', 'One', 'two', 'three', 'fourthe', 'flazy', 'dog'], ['Elephant', 'appl', 'e', 'giraffe', 'lion', 'zebra'], ['The', 'quTicat', 'dog', 'fishckf', 'the', 'l', 'appl', 'e', 'azy', 'dogI'], ['Theh', 'quTicat', 'dog', 'fishckf', 'the', 'lazy', 'doyg'], ['he', 'quTickf', 'the', 'lazy', 'dog'], ['Theh', 'quTicat', 'dog', 'fishckf', 'the', 'lazy', 'The', 'qucfTickf', 'the', 'lazy', 'dogdoyg'], ['cat', 'dfofish'], ['XI'], ['Hi', 'there', 'is', 'a', 'lot', 'of', 'space', 'cT', 'he', 'quTick', 'brown', 'f', 'One', 'two', 'three', 'fourthe', 'lazy', 'dogt', 'dofis'], ['eesrvDWbLL'], ['The', 'quick', 'bThe', 'quick', 'brown', 'f', 'the', 'lazy', 'dogrown', 'fox', 'jumps', 'over', 'tohe', 'lazy', 'dog'], ['cagt', 'dogfish'], ['hOne', 'two', 'three', 'foure', 'quTickf', 'the', 'lazy', 'dog'], ['The', 'qkuickbrown', 'y', 'dog'], ['The', 'quTick', 'bT', 'he', 'quick', 'brown', 'fox', 'jumps', 'over', 'tohe', 'lazy', 'dogrown', 'f', 'the', 'lazy', 'dog'], [], ['app', 'cat', 'dofish', 'e', 'Elephant', 'gieraffe', 'lion', 'zebra'], ['The', 'quTick', 'brown', 'f', 'the', 'lazy', 'The', 'quThe', 'quickbrown', 'f', 'the', 'lazy', 'dogicThe', 'quick', 'brown', 'f', 'The', 'quTick', 'br', 'own', 'f', 'the', 'lazy', 'dog', 'ox', 'jumps', 'over', 'tohe', 'lazy', 'dogk', 'brown', 'f', 'The', 'quTick', 'brgdog'], ['Theh', 'quTicat', 'dog', 'fishckf', 'the', 'lazy', 'doyg'], ['The', 'quickbrown', 'dobg'], ['The', 'quTiThe', 'queri', 'tohe', 'lazy', 'dogk', 'brown', 'f', 'The', 'quTick', 'brgdogckf', 'the', 'lazy', 'dog'], ['The', 'quTickf', 'the', 'lazy', 'dog', 'The', 'quick', 'brown', 'f', 'the', 'lazy', 'dog'], ['The', 'qu', 'dog'], ['hello', 'l', 'oworld'], ['The', 'quTick', 'bT', 'he', 'quick', 'bro', 'wn', 'fox', 'jumps', 'over', 'tohe', 'lazy', 'dogrown', 'f', 'the', 'lazy', 'dog'], ['Elephant', 'appl', 'e', 'girTx', 'xjumps', 'over', 'tohe', 'lazy', 'dogaffe', 'lion', 'zebra'], [], ['The', 'quick', 'ybrown', 'f', 'the', 'lazy', 'dog'], ['One', 'two', 'three', 'fouOne', 'two', 'thre', 'fourr'], ['cat', 'dhofishne', 'two', 'three', 'four'], ['cat', 'dofiElephant', 'a', 'ppl', 'e', 'girTx', 'xjumps', 'over', 'tohe', 'lazy', 'dogaffe', 'lion', 'zebras'], ['TThe', 'quTick', 'brown', 'f', 'One', 'two', 'three', 'fourthe', 'lazy', 'doghe', 'qck', 'brown', 'f', 'the', 'he', 'quTickf', 'the', 'lazy', 'dog', 'lazy', 'dog'], ['hello', 'woXUIrld'], ['hOne', 'two', 'three', 'foure', 'quTickf', 'thef', 'lazy', 'dog'], ['Hi', 'there', 'is', 'a', 'lot', 'of', 'space', 'cT', 'he', 'quTick', 'brown', 'f', 'One', 'two', 'three', 'fourthe', 'lazy', 'dogyt', 'dofis'], ['Theh', 'quTicat', 'diog', 'fishckf', 'the', 'lhazy', 'The', 'qucfTickf', 'the', 'lazy', 'dogdoyg'], ['cat', 'dog', 'fish'], ['apple'], ['hHi', 'there', 'is', 'a', 'lot', 'of', 'space', 'cT', 'he', 'quTick', 'brown', 'f', 'One', 'two', 'three', 'fourthe', 'lazy', 'dogt', 'dofis', 'llo', 'wold'], ['hwoXUhIrld'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['Two', 'spaces', 'after', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'between'], ['No', 'words', 'here'], ['A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spaces'], ['Amazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!'], ['Multi', 'line', 'string', 'Hello', 'world!'], ['President', 'John', 'F', 'Kennedy'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['ThisStringHasNoSpaces'], ['Muluti'], ['A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spaces'], ['eB'], ['A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spaces'], ['Multi', 'line', 'string', 'Hello', 'world!'], ['Amazing', 'how', 'a', 'sentence', 'can', 'changee', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazydog.'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'th', 'e', 'lazy', 'dog.'], ['The', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.'], ['B'], ['change'], ['is'], ['Multi', 'line!', 'string', 'Hello', 'i', 'world!'], ['th'], ['line'], ['you?'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'change', 'the', 'lazydog.'], ['Mullti'], ['A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spaces'], ['yMulti', 'line!', 'string', 'Hello', 'i', 'world!', '?'], ['line!'], ['Hi', 'my', 'name', 'is', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spaces', 'John.', 'How', 'are', 'you?'], ['space'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'tarelazy', 'dog.'], ['The', 'quick', 'browner', 'th', 'e', 'lazy', 'do', 'changee', 'g.'], ['BeB'], ['jumps'], ['A', 'random', 'string', 'with', 'no', 'commas', 'r', 'or', 'spaces'], ['Hello', 'i'], ['The', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tarelazy', 'dog.'], ['onwords', 'e'], ['The', 'quick', 'brown', 'fox', 'jumps', 'ovMultier', 'tarelazy', 'dog.'], ['Amazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'ovMultierjust', 'by', 'adding', 'or', 'removing', 'commas!'], ['just'], ['A', 'random', 'string', 'wiorth', 'no', 'commases'], ['Hi', 'my', 'name', 'is', 'JohThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.', 'you?'], ['Helllol'], ['Hicommases', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?'], ['The', 'quick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesth'], ['The', 'qmpwiorths', 'over', 'tarelazy', 'dog.'], ['NWUyMDWJAr'], ['A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spacesNWUyMDWJAr'], ['HellloThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'tarelazy', 'dog.'], ['spacesNWUyMDDWJAr'], ['ladzydog.'], ['Amazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commasAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'addingThe', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.', 'or', 'removing', 'commas!!'], ['The', 'quick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.commases'], ['iis'], ['dog.commases'], ['justt'], ['spaces'], ['A', 'rand', 'om', 'string', 'with', 'no', 'commas', 'or', 'with'], ['Multi', 'line', 'string', 'Hi', 'rld!'], ['John.'], ['The', 'quick', 'browneer', 'th', 'e', 'lazy', 'dochangee', 'g.'], ['The', 'quick', 'browner', 'th', 'e', 'lazy', 'randdocPresident', 'John', 'F', 'Kennedyhangee', '.'], ['HellloThe', 'quickx', 'brown', 'fox', 'jumps', 'over', 'tarelazy', 'tarelazydog.'], ['Hi', 'my', 'name', 'is', 'J', 'you?'], ['after'], ['TwoB'], ['quickx'], ['A', 'random', 'string', 'wiorth', 'no', 'commas'], ['TheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tarelazy', 'dog.'], ['the'], ['yldadzydoJohn'], ['in'], ['cmyTwwoe'], ['The', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.'], ['Multi', 'line', 'string', 'Hwords'], ['The', 'quick', 'browner', 'th', 'e', 'lazqy', 'dochangee', 'g.'], ['H', 'A', 'rand', 'om', 'string', 'with', 'no', 'commas', 'or', 'withicommases', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?'], ['Hicommases', 'my', 'name', 'is', 'are', 'you?'], ['The', 'quick', 'b', 'rown', 'fox', 'jumps', 'oveor', 'the', 'lazy', 'dog.'], ['A', 'random', 'string', 'with', 'no', 'comtmas', 'or', 'spaces'], ['cThe', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.ommas'], ['jumpwiorths'], ['Two', 'spaces', 'after', 'one', 'space', 'before', 'and', 'no', 'speaces', 'in', 'between'], ['Hi', 'rld!'], ['spacesThe', 'quick', 'browneer', 'Uth', 'e', 'lazy', 'dochangee', 'g.NWUyMDDWJAr'], ['The'], ['MAmazing', 'how', 'a', 'sentencse', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!uluti'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 'A', 'random', 'string', 'with', 'no', 'commas', 'r', 'or', 'spacesu?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tsarelazy', 'dog.ses'], ['ThisStringHasNNoSpaces', 'No', 'words', 'here'], ['TheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tareadding'], ['MAmazing', 'how', 'a', 'sentencse', 'cant', 'by', 'adding', 'or', 'removing', 'commas!uluti'], ['ThTHello', 'e'], ['The', 'qmpwiorths', 'ovchange', 'theer', 'tarelazy', 'dogwords', 'ngee', 'g.'], ['ujumps'], ['do'], ['Hi', 'my', 'nam', 'e', 'is', 'J', 'you?'], ['on'], ['Multi', 'l', 'string', 'Hello', 'world!'], ['Multi', 'line', 'strin', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesthg', 'Hi', 'rld!'], ['yldadzydoJowithhn'], ['lninie!'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'oare', 'you?'], ['lniniie!'], ['or'], ['The', 'quick', 'browner', 'th', 'e', 'lazy', 'randdocPresident', 'John', 'F', 'n', 'Kennedyhangee', '.'], ['are'], ['H'], ['A', 'random', 'string', 'wiorth', 'no', 'c', 'ommas', 'or', 'spaces'], ['by'], ['Hi', 'my', 'name', 'is', 'J', 'you'], ['The', 'quick', 'brown', 'fox', 'jumpzs', 'over', 'th', 'e', 'lazy', 'dog.'], ['HellloThe', 'quiUthx', 'jumps', 'over', 'tarelazy', 'dog.'], ['uThe', 'quick', 'brown', 'fox', 'jumpzs', 'over', 'th', 'e', 'lazy', 'dog.jumps'], ['chhownge'], ['linee'], ['A', 'random', 'string', 'with', 'no', 'commwords', 'as', 'or', 'spaces'], ['nlniniie!'], ['A'], ['you??'], ['jumpwiordog.ths'], ['Two', 'spaces', 'after', 'one', 'space', 'before', 's', 'and', 'no', 'speaces', 'in', 'between'], ['ThTH', 'A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spacesello', 'e'], ['BB'], ['The', 'quick', 'b', 'rown', 'fox', 'jumps', 'oazy', 'dog.'], ['om'], ['ThTHrownello', 'e'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 'A', 'random', 'string', 'with', 'no', 'comma', 'quick', 'brown', 'fdog.ses'], ['spacesu?'], ['yldadzydcommas!uluti'], ['Multi', 'line', 'strin', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesthg', 'Hi', 'rtld!', 'H'], ['The', 'quick', 'brown', 'fox', 'jumg.'], ['chhowngec'], ['rdandom'], ['wiorth'], ['meaning'], ['No', 'words', 'her', 'e'], ['Amazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'addinhg', 'or', 'removing', 'comma!'], ['rdmandom'], ['John'], ['rown'], ['Multi', 'line', 'strHwords'], ['TheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tareaddHi', 'my', 'nam', 'e', 'is', 'J', 'you?', 'ing'], ['ynldadzydoJohn'], ['and'], ['dog.H'], ['s'], ['jusAmazing', 'how', 'a', 'sentence', 'can', 'cnamehange', 'meaning', 'ovMultierjust', 'by', 'adding', 'or', 'removing', 'commas!tt'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 'A', 'random', 'string', 'with', 'no', 'comma', 'quick', 'brown', 'cThefdog.ses'], ['sentence'], ['n.'], ['cheange'], ['no'], ['Homicommases', 'my', 'name', 'is', 'are', 'you?'], ['brown'], ['TThTH'], ['changee', 'g.'], ['No'], ['spacesNDWUyMDDWJAr'], ['Multid', 'line', 'string', 'Hello', 'world!'], ['you?o?'], ['A', 'random', 'string', 'wiorth', 'ThTHello', 'e', 'no', 'c', 'ommas', 'or', 'spaces'], ['eBThTHello', 'e'], ['cheangeg'], ['yo'], ['showu?'], ['spsaces'], ['H', 'A', 'rand', 'om', 'string', 'with', 'no', 'commas', 'or', 'withicommases', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?'], ['dog.comyldadzydcommas!uluti', 'mases'], ['The', 'quick', 'brown', 'fox', 'jAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commasAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'addingThe', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.', 'or', 'removing', 'commas!!umg.cheangeg'], ['BrandomeB'], ['A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spaces'], ['The', 'qu', 'ick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.commases'], ['Bra'], ['iiis'], ['rdmandoom'], ['words'], ['spacesNDWUyMDDWJAspacesNDWUyMDDWJArr'], ['Multi', 'linjumpzs', 'world!'], ['i'], ['browns'], ['how'], ['cThe', 'quchange', 'theick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.ommas'], ['change.e', 'g.'], ['rThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'change', 'the', 'lazydog.dmandoom'], ['lninile!'], ['Multi', 'line', 'strin', 'A', 'jumpwiordog.ths', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesthg', 'Hi', 'rtld!', 'H'], ['sshowu?'], ['A', 'random', 'string', 'wiorth', 'ThTHello', 'e', 'comma!', 'no', 'c', 'ommas', 'or', 'spaces'], ['jumpzs'], ['quiUthx'], ['o'], ['commas!!'], ['commas!'], ['A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spacesNWUyMDWJAr'], ['cThe', 'quick', 'browniiiser', 'th', 'angee', 'g.ommas'], ['l', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesth'], ['sentesnce'], ['brn'], ['cThe', 'theick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'gn.ommasThTH'], ['cnamehange'], ['oveor'], ['taMultireaddHi'], ['rdmandoHello'], ['Multi', 'line', 'string', 'Hi', 'rd!'], ['commasAmazing'], ['BBThe', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.'], ['spacesNDWUThe', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.yMDDWJAr'], ['FLoaost'], ['before'], ['namouu?'], ['A', 'random', 'string', 'with', 'no', 'c'], ['The', 'qmpwiorlazy', 'dog.'], ['sadding'], ['uThe', 'quick', 'brown', 'fox', 'jumpzs', 'oveth', 'e', 'lazy', 'dog.jumps'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'i', 'oare', 'you?'], ['cThe', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.omm', 'as'], ['tarelazy'], ['inor'], ['wBBTheith'], ['spaace'], ['Multi', 'line', 'stTherHwords', 'r'], ['orHi'], ['yo', 'A', 'random', 'string', 'wiorth', 'no', 'commas???'], ['quick'], ['H', 'A', 'rand', 'om', 'string', 'with', 'no', 'commas', 'or', 'withicommases', 'my', 'name', 'is', 'John.', 'How', 'spaace', 'are', 'you?u'], ['adding'], ['jumThe', 'qu', 'ick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.commasespzzs'], ['The', 'quick', 'b', 'rown', 'fox', 'quickjumps', 'over', 'the', 'lazy', 'dog.'], ['spFLoaostacesNDWUyMDDWJAr'], ['oazy'], ['dochangee', 'g.ommas'], ['sho?wu?'], ['tTwo', 'spaces', 'after', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'betweenh'], ['yMulti', 'line!', 'strin!g', 'Hello', 'i', 'world!', '?'], ['Two', 'spaces', 'aaf', 'ter', 'one', 'space', 'before', 'and', 'no', 'speaces', 'in', 'between'], ['o', 'A', 'random', 'string', 'wiorth', 'no', 'commases'], ['brlineen'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'tqhe', 'lazydog.'], ['JohThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['dochangee', 'g.'], ['The', 'quick', 'brown', 'foxdogwords', 'ngee', 'g.er', 'the', 'lazy', 'dog.'], ['juust'], ['A', 'random', 'string', 'with', 'n', 'o', 'commas', 'or', 'spaces'], ['A', 'random', 'string', 'wiorth', 'ThTHelo', 'e', 'comma!', 'no', 'c', 'ommas', 'browner', 'or', 'spaces'], ['spacesu?', 'No'], ['ii'], ['Homicommases', 'my', 'name', 'is', 'are', 'you'], ['brlJohn.bineen'], ['youlniniie!?o?'], ['sadspacesNWUyMDWHellloThe', 'quickx', 'brown', 'fox', 'jumps', 'over', 'tarelazy', 'tarelazydog.JArding'], ['s!!'], ['beore'], ['spa', 'A', 'random', 'string', 'wiorth', 'no', 'c', 'ommas', 'or', 'spacesace'], ['iThe', 'quick', 'brown', 'fox', 'jumps', 'ovMultier', 'tarelazy', 'dog.'], ['n'], ['l', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spaesth'], ['The', 'quick', 'brown', 'fox', 'jAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commasAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'addingThe', 'quick', 'browner', 'th', 'e', 'ulazy', 'dochangee', 'g.', 'or', 'removing', 'commas!!umg.cheangeg'], ['change', 'jumpwiths'], ['A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spaceTheHi', 'mry', 'name', 'is', 'John.', 'How', 'are', 'you?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tareaddHi', 'my', 'nam', 'e', 'is', 'J', 'you?', 'ingsNWUyMDWJAr'], ['cochange', 'themmas!!'], ['tTwo', 'spaces', 'after', 'and', 'no', 'spaces', 'in', 'betweenh'], ['MAmazing'], ['The', 'quick', 'browspacesNWUyMDDWJArn', 'fox', 'jumps', 'over', 'th', 'e', 'lazy', 'dog.'], ['?'], ['A', 'rand', 'om', 'i', 'string', 'with', 'no', 'commas', 'or', 'with'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 'A', 'random', 'string', 'withrown', 'fno', 'comma', 'quick', 'brown', 'fdog.ses'], ['ulazy'], ['tTwo'], ['rdmaoom'], ['HelloH', 'i'], ['arBBThe', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.e'], ['Mulluti'], ['Two', 'spaces', 'after', 'one', 'space', 'before', 'and', 'no', 'speaces', 'in', 'sbetween'], ['e'], ['onon'], ['seHellloThe', 'quiUthx', 'jumps', 'over', 'tarelazy', 'dog.ntesnce'], ['ooazy'], ['A', 'random', 'string', 'with', 'no', 'commwords', 'as', 'The', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.or', 'spaces'], ['oare'], ['Hhe'], ['Multi', 'line', 'strin', 'A', 'jumpwiordog.ths', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesthg', 'Hig', 'rtld!', 'H'], ['yo', 'A', 'random', 'string', 'c', 'wiorth', 'no', 'commas???'], ['A', 'random', 'string', 'with', 'ddHi', 'my', 'nam', 'e', 'is', 'J', 'you?', 'ingsNWUyMDWJAr'], ['random'], ['H', 'A', 'rand', 'om', 'string', 'with', 'no', 'commas', 'or', 'Hwithicommases', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 'A', 'random', 'string', 'with', 'no', 'h', 'comma', 'quick', 'brown', 'cThefdog.ses'], ['nrandon'], ['sbetween'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 's', 'A', 'random', 'string', 'with', 'no', 'commas', 'r', 'or', 'spacesu?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tsarelazy', 'dog.ses'], ['jumThe'], ['FLspacesTheoaost'], ['e', 'A', 'rand', 'ocommas', 'or', 'with'], ['President'], ['Hello'], ['jumg.'], ['ocommams'], ['commas???lniniie!'], ['angee', 'g.ommas'], ['broowns'], ['FWR'], ['quicckx'], ['The', 'quick', 'browsl', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesthpacesNWUyMDDWJArn', 'fox', 'jumps', 'over', 'th', 'e', 'lazy', 'dog.'], ['No', 'words', 'here'], ['A', 'random', 'string', 'with', 'no', 'commwords', 'as', 'odr', 'spaces'], ['President', 'yldadzydoJowithhn', 'John', 'F', 'her', 'e', 'Kennedy'], ['yldadzydog.jumpslydoJowithhn'], ['Hellloll'], ['Two', 'spaces', 'after', 'one', 'spaces', 'beforfe', 'and', 'no', 'spaces', 'in', 'beMulti', 'line', 'string', 'Hwords', 'tween'], ['A', 'random', 'string', 'wiorth', 'ThTHelo', 'e', 'comma!', 'no', 'c', 'ommas', 'browner', 'or', 'spaces'], ['br', 'A', 'random', 'string', 'with', 'no', 'dcoowns'], [], ['nn'], ['H', 'A', 'rand', 'om', 'string', 'with', 'no', 'her', 'e', 'commas', 'or', 'withicommases', 'my', 'name', 'is', 'John.', 'How', 'spaace', 'are', 'you?u'], ['commasMullti!!'], ['The', 'quick', 'brown', 'fox', 'jAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commasAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'addingThe', 'quick', 'browner', 'th', 'e', 'ulazy', 'dochangmas!!umg.cheangeg'], ['cThe', 'theick', 'browner', 'th', 'e', 'lazy', 'l', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spaesthdochanngee', 'gn.ommasThTH'], ['The', 'qfuick', 'brown', 'fox', 'jumg.'], ['commas!!umg.cheangeg'], ['taHelloH', 'iMultireaddHi'], ['youlniniie!?o?', 'A', 'random', 'string', 'with', 'no', 'commwords', 'as', 'or', 'spaces'], ['John.inor'], ['oyo'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazyy', 'dog.'], ['TheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'y', 'ou?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tareaddHi', 'my', 'nam', 'e', 'is', 'J', 'you?', 'ing'], ['ThTHelo', 'e'], ['The', 'quick', 'brown', 'fox', 'jAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commasAmazing', 'how', 'a', 'sThe', 'quick', 'brown', 'foxdogwords', 'ngee', 'g.er', 'the', 'lazy', 'dog.entence', 'can', 'change', 'meaning', 'just', 'by', 'addingThe', 'quick', 'browner', 'th', 'e', 'ulazy', 'dochangmas!!umg', '.cheangeg'], ['The', 'qmpwiorths', 'ovchange', 'withs', 'ngee', 'g.'], ['oyoo'], ['Hi', 'rd!'], ['Two', 'spaces', 'after', 'one', 'space', 'before', 'andspFLoaostacesNDWUyMDDWJArspeaces', 'in', 'between'], ['The', 'quick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dmases'], ['yldadzydog.jumpslydoJowthhnu'], ['spaesth'], ['The', 'qmpwiorths', 'ovchange', 'withs', 'ngee', 'g.Hi', 'rd!'], ['cThe', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.omjumThe', 'qu', 'ick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.commasespzzsmas'], ['HigarBBThe', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.e', 'rtld!'], ['adnd'], ['jarBBTheuust'], ['jummps'], ['F', 'n'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 's', 'A', 'random', 'string', 'with', 'no', 'commas', 'r', 'or', 'spacesu?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tsases'], ['dog.cogmmases'], ['A', 'random', 'string', 'wiorth', 'ThTHespacesNDWUyMDDWJAspacesNDWUyMDDWJArrlo', 'e', 'comma!', 'no', 'c', 'ommas', 'browner', 'or', 'spaces'], ['linee!'], ['Hicommases'], ['nTLxTIkG'], ['cTehe', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.ommas'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 's', 'A', 'random', 'string', 'ThTHuick', 'brown', 'fox', 'jumpwiorths', 'over', 'tsases'], ['TheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?', 'quick', 'brown', 'fox', 'jumpwiortyhs', 'over', 'tarelazy', 'dog.'], ['cnamehangrandome'], ['cThe', 'quick', 'browner', 'th', 'e', 'lazy', 'docahangee', 'g.omjumThe', 'qu', 'ick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.commasespzzsmas'], ['ce'], ['sa'], ['oo'], ['MAmazing', 'how', 'a', 'sentencse', 'can', 'change', 'meaningb', 'just', 'by', 'addin!ulunti'], ['TheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'aryou?', 'quick', 'brown', 'fox', 'jumpwiortyhs', 'over', 'tarelazy', 'dog.'], ['ddHi'], ['A', 'random', 'string', 'with', 'no', 'commwords', 'as', 'The', 'quick', 'browneer', 'th', 'e', 'lazy', 'dochangee', 'g.', 'The', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.or', 'spaces'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'xHow', 'are', 'yo', 's', 'A', 'random', 'string', 'with', 'no', 'commas', 'r', 'or', 'spacesu?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tsases'], ['spacesNDWUWyMDDWJAspacesNDWUyMDDWJArr'], ['rddandom'], ['lin'], ['chspacesNDWUThe', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.yMDDWJArwngec'], ['lazydog.'], ['ovchange', 'theer'], ['theick'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'th', 'e', 'l', 'dog.'], ['b'], ['cheangMulti', 'line!', 'string', 'Hello', 'i', 'world!', 'e'], ['Hello', 'rds', 'ngee', 'g.'], ['saspa', 'A', 'random', 'string', 'wiorth', 'no', 'c', 'ommas', 'or', 'spacesacedding'], ['JohThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'tlazy', 'dog.'], ['uThe', 'quick', 'brown', 'fox', 'jumpzs', 'over', 'th', 'e', 'lHi', 'my', 'name', 'is', 'A', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spaces', 'John.', 'How', 'are', 'you?', 'azy', 'dog.jumps'], ['The', 'qmpwiorths', 'over', 'tarickelazy', 'dog.changee', 'g.'], ['AMulti', 'line', 'stTherHwords', 'r'], ['uThe', 'quick', 'brown', 'fox', 'jumpzs', 'over', 'th', 'e', 'lHi', 'my', 'name', 'is', 'A', 'random', 'string', 'Multi', 'line', 'string', 'Hello', 'world!', 'wiorth', 'no', 'commas', 'or', 'spaces', 'John.', 'How', 'are', 'you?', 'azy', 'dog.jumps'], ['iiiis'], ['A', 'randomstrHwords', 'string', 'with', 'no', 'commas', 'r', 'or', 'spaces'], ['yo', 'A', 'randomas???'], ['spsacesTheHi', 'my', 'name', 'is', 'John.The', 'quick', 'b', 'rown', 'fox', 'quickjumps', 'over', 'the', 'lazy', 'dog.readding'], ['commas???lnine!'], ['dog.'], ['The', 'quick', 'brown', 'fox', 'jueBThTHello', 'emps', 'over', 'change', 'the', 'lazydog.'], ['spa'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'Two', 'spaces', 'after', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'between', 'are', 'yo', 'A', 'random', 'string', 'with', 'no', 'commas', 'r', 'or', 'spacesu?', 'quick', 'brown', 'fox', 'jumpwiorths', 'over', 'tsarelazy', 'dog.ses'], ['yMulti'], ['ingsNWUyMDWJAr'], ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'tarelazy', 'doTwo', 'spaces', 'aaf', 'ter', 'one', 'space', 'before', 'and', 'no', 'speaces', 'in', 'betweeng.'], ['omas'], ['uHjumThe'], ['aaf', 'ter'], ['jusAmazing', 'how', 'a', 'sentence', 'can', 'cnamehange', 'meaning', 'ovMultierjust', 'by', 'adding', 'or', 'removing', 'commas!tquickxtUth'], ['T'], ['rom'], ['dog.changee', 'g.yMDDWJAr'], ['ldog.changee', 'g.yMDDWJArwngec', 'zydog.'], ['The', 'quick', 'brown', 'fox', 'jAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commatTwosAmazing', 'how', 'a', 'sThe', 'quick', 'brown', 'foxdogwords', 'ngee', 'g.er', 'the', 'lazy', 'dog.entence', 'can', 'change', 'meaning', 'just', 'by', 'addingThe', 'quick', 'browner', 'th', 'e', 'ulazy', 'dochangm!!umg', '.cheangeg'], ['yMulti', 'line!', 'string', 'HecThe', 'quick', 'browner', 'th', 'e', 'lazy', 'docahangee', 'g.omjumThe', 'qu', 'ick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.commasespzzsmasloyolo', 'i', 'world!', '?'], ['lazy'], ['Multi', 'line', 'stTheerHwords', 'r'], ['Amazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'ovMultspeacesierjust', 'by', 'adding', 'or', 'removing', 'commas!'], ['yMulti', 'line!', 'string', 'Hello', 'i', 'worl!', '?'], ['F'], ['dog.commaTheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'yo', 'A', 'random', 'string', 'withrown', 'fno', 'comma', 'quick', 'brs'], ['TheHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'you?', 'quick', 'brown', 'fox', 'jumpwiorths', 'ov', 'er', 'tareaddHi', 'my', 'jusAmazing', 'nam', 'e', 'is', 'J', 'you?', 'ing'], ['The', 'quick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['eBThTHelleo', 'e'], ['cTehe'], ['Ammazing', 'how', 'a', 'sentence', 'can', 'changee', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!'], ['h'], ['chspacesNDWUThe', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.yMtDDWJArwngec'], ['jumpwiortyhs'], ['Hi', 'my', 'nameonon', 'is', 'J', 'you?'], ['Two', 'spaces', 'after', 'one', 'spaces', 'beforfe', 'and', 'no', 'saces', 'in', 'beMulti', 'line', 'string', 'Hwords', 'tween'], ['ohvchange', 'tMulti', 'linjumpzs', 'world!', 'heer'], ['eBtarickelazy'], ['yldadzydog.jumpslydoJowithhnn'], ['hth'], ['The', 'qmpwiortths', 'ovchange', 'withs', 'TwoBngee', 'g.Hi', 'rd!'], ['Hicommases', 'my', 'namem', 'is', 'are', 'you?'], ['uThe', 'quick', 'brown', 'fox', 'jumpzs', 'over', 'th', 'e', 'lHi', 'my', 'namer', 'is', 'A', 'random', 'string', 'witTwo', 'spaces', 'ohn.', 'How', 'are', 'you?', 'azy', 'dog.jumps'], ['cThe', 'q', 'uick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.omm', 'as'], ['comminors???'], ['dog.changee', 'youlniniie!?o?g.yMDDWJAr'], ['Multi', 'line', 'strin', 'A', 'random', 'string', 'th', 'no', 'commas', 'or', 'spacesthg', 'Hi', 'rtld!', 'H'], ['Multi', 'line', 'string', 'Hello', 'qmpwiorths', 'world!'], ['browsl'], ['A', 'random', 'string', 'wiorth', 'ThTHelo', 'e', 'comma!', 'no', 'c', 'oarBBThe', 'qmpwiorths', 'over', 'tarelazy', 'dog.changee', 'g.emmas', 'browner', 'or', 'spaces'], ['comminmors???'], ['F', 'n'], ['yyQwaoYdS'], ['you?y?'], ['browner'], ['kquickcommas???lniniie!'], ['A', 'rand', 'om', 'i', 'string', 'with', 'no', 'commas', 'or', 'with'], ['shbeMulti?wu?'], ['brli', 'A', 'neen'], ['spacesNDWUThe'], ['HelllroThe', 'quickx', 'brown', 'fox', 'jumps', 'over', 'tarelazy', 'tarelazydog.'], ['ThTH', 'A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spacesello', 'e'], ['spacesThe', 'quick', 'browneeWr', 'Uth', 'e', 'lazy', 'dochangee', 'g.NWUyMDDWJArdog.H'], ['ntesn'], ['saddiang'], ['BBThe'], ['HecThe'], ['nam'], ['cMulti', 'line', 'stTherHwords', 'r', 'ommas!'], ['noiin'], ['eBThTHelloh', 'e'], ['The', 'quick', 'brown', 'fox', 'jumpsThe', 'quick', 'browspacesNWUyMDDWJArn', 'fox', 'jumps', 'over', 'th', 'e', 'lazy', 'dog.', 'over', 'the', 'lazy', 'dog.'], ['randomas???'], ['thebrliick'], ['cnamehangeThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'change', 'the', 'lazydog.'], ['Homicommase', 's', 'my', 'name', 'is', 'are', 'youbetween?'], ['The', 'ThisStringHasNNoSpaces', 'No', 'words', 'here', 'quick', '.cheangeg', 'brown', 'fox', 'jumps', 'over', 'th', 'e', 'l', 'dog.'], ['eHi', 'my', 'i', 'namck', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.', 'you?', 'zy'], ['removing'], ['Raav'], ['ThTTHelo', 'e'], ['namem'], ['sbetwecTeheen'], ['heer'], ['ujummThe', 'qfuick', 'brown', 'fox', 'jumg.ps'], ['ck', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.ommas'], ['zy'], ['The', 'quick', 'bsrowspacesNWUyMDDWJArn', 'fox', 'jumps', 'over', 'th', 'e', 'lazy', 'dog.'], ['cnaranddocPresident', 'mehange'], ['upjumps'], ['cThe', 'quick', 'browniiiser', 'th', 'you?uangee', 'g.ommas'], ['ing'], ['bbrlJohn.binee'], ['hnoiin'], ['A', 'random', 'string', 'with', 'no', 'commwords', 'asver', 'tarelazy', 'dog.changee', 'g.or', 'spaces'], ['cnamcehange'], ['N', 'o'], ['The', 'quick', 'browne', 'fox', 'jumps', 'over', 'tarelazy', 'doTwo', 'spaces', 'aaf', 'ter', 'one', 'space', 'before', 'and', 'no', 'speaces', 'in', 'betweeng.'], ['!s!s!'], ['ss'], ['Multi', 'line', 'strbrowslin', 'A', 'jumpwiordog.ths', 'random', 'string', 'wiorth', 'no', 'commas', 'or', 'spacesthg', 'Hig', 'rtld!', 'H'], ['betweeng.'], ['brThe', 'quick', 'b', 'rown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.n'], ['seHelllThe', 'quick', 'browner', 'th', 'e', 'lazy', 'do', 'changee', 'g.oThe'], ['sbbetwecTeheen'], ['randomstrHwords'], ['Hi', 'my', 'name', 'you?'], ['ladzydoga.'], ['ovchange', 'withs', 'ngee', 'g.Hi', 'rd!'], ['jumpwiorF', 'ntyhs'], ['iiicommas!ulutiis'], ['BrH', 'A', 'rand', 'om', 'string', 'with', 'no', 'her', 'e', 'commas', 'or', 'withicommases', 'my', 'name', 'is', 'John.', 'How', 'spaace', 'are', 'you?u', 'spaacea'], ['sshoHhew?'], ['oom'], ['dstTherHwords', 'r'], ['cheangge'], ['The', 'quick', 'brown', 'fox', 'jAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commasAmazing', 'how', 'a', 'sThe', 'quick', 'brown', 'foxdogwords', 'ngee', 'g.er', 'the', 'lazy', 'dog.entecThe', 'quick', 'browner', 'th', 'e', 'lazy', 'dochangee', 'g.omm', 'asaning', 'just', 'by', 'addingThe', 'quick', 'browner', 'th', 'e', 'ulazy', 'dochangmas!!umg', '.cheangeg'], ['The', 'qmpwioBBrths', 'over', 'tarelazy', 'dog.changee', 'g.'], ['d', 'A', 'random', 'string', 'wiorth', 'no', 'c', 'ommas', 'or', 'spacesV'], ['cant'], ['jommas!umg.'], ['Hi', 'my', 'name', 'is', 'John'], ['Hi', 'my', 'name', 'is', 'John'], [], ['1', '2', '3', '4', '5', '6'], ['Hi!My', 'Name', 'is', 'John'], ['Two', 'spaces', 'after', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'betwstringeen'], ['A', 'srandom', 'string', 'with', 'no', 'commaAs', 'or', 'spaces'], ['The', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['President', 'John', 'F', 'KennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['Hi', 'my', 'naF', 'me', 'is', 'John.', 'How', 'are', 'you?'], ['President', 'John', 'F', 'KennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.'], ['my'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?'], ['President', 'John', 'F', 'KennedyThe', 'orquick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['Ama', 'zing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!'], ['srandom'], ['Thbetweene', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['Kennedy'], ['beThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.fore'], ['icommaAs'], ['beThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'the', 'lazy', 'do', 'g.fore'], ['Two', 'spaces', 'atfter', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'betwstringeen'], ['jHello', 'ust'], ['Hi', 'my', 'naF', 'me', 'is', 'Johow', 'areover', 'you?'], ['zing'], ['beThe'], ['dsrandom'], ['comMubeThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'the', 'lazy', 'do', 'g.foreltimaAs'], ['sMulti', 'line', 'string', 'Hello', 'world!', 'paceno'], ['Twrandomo', 'spaces', 'after', 'one', 'space', 'before', 'aTwond', 'no', 'spaces', 'in', 'between'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?', 'aTwond'], ['EeJKnUSVXF'], ['qk'], ['world!'], ['President', 'John', 'F', 'K', 'ennedyThe', 'quicjumpsk', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.'], ['y'], ['A', 'srandom', 'string', 'with', 'no', 'commaAs', 'ort', 'spaces'], ['world!!'], ['ychange', 'ou?'], ['Amazing', 'how', 'a', 'sentence', 'ianing', 'just', 'jHello', 'ustby', 'adding', 'or', 'removing', 'commas!'], ['moving'], ['A', 'srandom', 'string', 'with', 'no', 'commaAs', 'ort', 'spaces'], ['ychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?', 'ou?'], ['BCKkvp'], ['azing', 're'], ['eKenney'], ['Hi', 'my', 'name', 'is', 'oJohn.', 'How', 'are', 'ychange', 'ou?', 'aTwond'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychaKennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'nge', 'ou?', 'aTwond'], ['cosmmasychancge', 'ou?!'], ['lazyThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['beforsMultiethe', 'lazy', 'dog.'], ['Two', 'spTwrandomoaces', 'atfter', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'betwstringeen'], ['sMulti', 'line', 'saddingtring', 'Hello', 'world!', 'paceno'], ['lazAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!y'], ['beTh'], ['ychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychang', 'e', 'ou?', 'ou?'], ['How'], ['HoJohn', 'w'], ['comm'], ['leine'], ['Tjumps', 'over', 'the', 'lazy', 'dog.'], ['spTwrandomoaces'], ['lei'], ['commma!'], ['ychaKennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'nge', 'ou?'], ['boeThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.fore'], ['aftThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.er'], ['A', 'srandom', 'string', 'with', 'no', 'comJohn.maAs', 'ort', 'spaces'], ['Hi', 'my', 'naF', 'me', 'is', 'Johow', 'areover', 'you?', 'ello', 'ust'], ['HoJohn'], ['A', 'sranadom', 'string', 'with', 'no', 'dcommaAs', 'or', 'spaces'], ['lazAmazing'], ['ychaKennedyThe', 'quick', 'brown', 'fox', 'jumps', 'ovesMulti', 'line', 'saddingtring', 'Hello', 'world!', 'pacenor', 'Hi', 'nge', 'ou?'], ['atfter'], ['President', 'John', 'F', 'KennedyThnamee', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['yXdEXoUU'], ['EeJKnUSVF'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ycPresident', 'John', 'F', 'Kennedyhange', 'ou?', 'aTwond'], ['BCKkvqkp'], ['BC', 'A', 'srandom', 'string', 'with', 'no', 'commaAs', 'ort', 'spaceskvp'], ['yu?'], ['The', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'tog.'], ['cosmmasychamnce', 'ou?!'], ['Pre', 'F', 'K', 'ennedyThe', 'quicjumpsk', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.'], ['Two', 'spTwrandomoaces', 'atfter', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'betwstri', 'ngeen'], ['ychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?', 'ou?'], ['Hi', 'my', 'naF', 'me', 'is', 'Jomhow', 'areover', 'you?', 'ello', 'ust'], ['KennedyThe', 'orquick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['adJohowding'], ['Twrandomo', 'spaces', 'after', 'one', 'space', 'before', 'aTwond', 'no', 'spaceHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?', 'aTwonds', 'in', 'between'], ['hinow'], ['The', 'quick', 'brown', 'fox', 'jukmps', 'over', 'the', 'lazy', 'dog.'], ['spTwradomoaces'], ['Hi', 'srandom', 'my', 'name', 'is', 'John.', 'How', 'spaces', 'are', 'ychange', 'ou?'], ['aftThe', 'quickThbetweene', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazer', 'tthe', 'lazy', 'dog.er'], ['quicck'], ['Pr', 'F', 'KennedyThe', 'orquick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['aftThe', 'quickThbetweene', 'quick', 'brown', 'fox', 'jAma', 'zing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!umps', 'over', 'the', 'lazer', 'tthe', 'lazy', 'dog.er'], ['lazAmazjing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!y'], ['atfterHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?'], ['dcommaAs'], ['between'], ['jumpychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?', 'ou?s'], ['Pre'], ['Tjumps', 'over', 'thThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'tog.e', 'lazy', 'dog.'], ['EeJPre', 'F', 'K', 'ennedyThe', 'quicjumpsk', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.KnUSVF'], ['ycick', 'brown', 'fox', 'jcommas!umps', 'over', 'the', 'lazer', 'tthe', 'lazy', 'dog.er', 'umps', 'over', 'the', 'lazy', 'dog.world!', 'pacenor', 'Hi', 'nge', 'ou?'], ['over'], ['beThe', 'quick', 'rbrown', 'feox', 'jumps', 'over', 'the', 'lazy', 'dog.fomre'], ['spa', 'e', 'No', 'word', 's', 'here', 'ces'], ['ychange', 'Hi', 'my', 'space', 'name', 'is', 'John.', 'How', 'are', 'ychang', 'e', 'ou?', 'ou?'], ['after', 'BCKkvqkp'], ['Multi'], ['jHello', 'usst'], ['OPvfQ'], ['a'], ['OPQvfQ'], ['A', 'srandom', 'string', 'with', 'no', 'commaAs', 'ort', 'spaces'], ['ThisSaTwondstringHasNoSpaces'], ['Tjumps', 'over', 'thThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'tog.e', 'laz.'], ['qPresident', 'John', 'F', 'Kennedyuicck'], ['ort'], ['onejHello', 'ust'], ['sPresident', 'John', 'F', 'Kennedyrandom'], ['ThisStringHasNocosmmasychancge', 'ou?!Spaces'], ['icommaAMultis'], ['Pe'], ['The', 'quick', 'brown', 'fox', 'j', 'umps', 'over', 'the', 'lazy', 'dog.'], ['HoJohnyu?'], ['spTwradomoaEeJPre', 's'], ['Keneello', 'ustdy'], ['A', 'random', 'string', 'with', 'no', 'commas', 'o', 'r', 'spaces'], ['dcommaA'], ['adJohownding'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychaKennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'nge', 'ou?', 'aTwoHnd'], ['qquick'], ['Hi', 'my', 'name', 'is', 'John.', 'HoHw', 'are', 'dsrandom', 'ychange', 'ou?', 'aTwond'], ['lazrandomy'], ['jumpychange', 'Hi'], ['KBCKkvqkp'], ['aTwoycick', 'brown', 'fox', 'jcommas!umps', 'over', 'the', 'lazer', 'tthe', 'lazy', 'dog.er', 'umps', 'over', 'the', 'lazy', 'dog.world!', 'pacenor', 'Hi', 'nge', 'ou?nds'], ['K', 'ennedyThe', 'quicjumpsk', 'brown', 'fox', 'jumps', 'over', 'Hi'], ['yort?'], ['HoJomoving', 'hnyu?'], ['adJohowdMulti', 'line', 'string', 'Hello', 'world!', 'ing'], ['sPresident'], ['Two', 'spTwrandomoaces', 'atfter', 'one', 'space', 'before', 'and', 'no', 'spaces', 'in', 'betwstri', 'ngeen', 'A', 'random', 'string', 'with', 'no', 'commas', 'or', 'spaces'], ['areover'], ['movingover'], ['ychaKennedyThe', 'quick', 'brown', 'fAmazing', 'how', 'a', 'sentence', 'ianing', 'just', 'jHello', 'ustby', 'adding', 'or', 'removing', 'commas!ou?'], ['ychange', 'Hi', 'my', 'space', 'name', 'issMulti', 'line', 'string', 'Hello', 'world!', 'paceno', 'John.', 'How', 'are', 'ychang', 'e', 'ou?', 'ou?'], ['beThe', 'quick', 'rbrown', 'feeox', 'jumps', 'over', 'the', 'lazy', 'dog.fomre'], ['ou?'], ['The', 'quick', 'brown', 'fox', 'jukmps', 'over', 'the', 'lazy', 'dog.'], ['Amazing', 'how', 'a', 'senteence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!'], ['here'], ['m'], ['A', 'random', 'string', 'n', 'with', 'no', 'commas', 'o', 'r', 'spaces'], ['The', 'quick', 'rbrown', 'fox', 'jumpsu', 'over', 'jumpychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?', 'ou?sg.'], ['ycPresident'], ['ychang'], ['adJohoweding'], ['spa', 'e', 'NolazrTwrandomoandomy'], ['lazAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'addinge', 'or', 'removing', 'cogmmas!y'], ['spTwradomoaEeJP', 's'], ['oPe', '?'], ['yuu?'], ['ychaKennedyThJohn.e', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'nge', 'ou?'], ['saddingtring'], ['Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'd'], ['The', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dogou?.'], ['Hi', 'my', 'naF', 'me', 'is', 'Jomhow', 'areover', 'you?', 'ello', 'ust'], ['betwstringeen'], ['qqck'], ['movingovrandomer'], ['dsrand'], ['d'], ['ju'], ['Multi', 'line', 'string', 'Hcosmmasychancge', 'ou?!ello', 'world!'], ['zin'], ['spTwradomoBCKkvpaEeJPre', 's'], ['K', 'ennedyThe', 'quicjumpsk', 'brown', 'fox', 'jump', 's', 'over', 'Hi'], ['sMulti', 'line', 'saddingtring', 'Hel'], ['ychange', 'Hi', 'my', 'name', 'ThisSaTwondstringHasNoSpaces', 'is', 'John.', 'How', 'are', 'ychang', 'e', 'ou?', 'ou?'], ['Kennedyucck'], ['aftThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'do'], ['ThisStringHasNocosmmasychjumpychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ySchange', 'ou?', 'ou?sancge', 'ou?!Spaces'], ['Ama', 'zing', 'how', 'a', 'sentence', 'can', 'meaningemoving', 'commas!'], ['The', 'quick', 'brownTwrandomo', 'f', 'the', 'lazy', 'dog.'], ['HoJohyu?'], ['Hi', 'my', 'naF', 'me', 'is', 'Jomhow', 'areover', 'yremoving', 'ou?', 'ello', 'ust'], ['areoveyuu?r'], ['Pretsident', 'John', 'F', 'Kennedy'], ['spaceskvp'], ['President', 'Joychange', 'Hi', 'my', 'space', 'name', 'issMulti', 'line', 'string', 'Hello', 'world!', 'paceno', 'John.', 'How', 'are', 'ychang', 'e', 'ou?', 'ou?hn', 'F', 'KennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['sPresident', 'John', 'F', 'n', 'Kennedyrandom'], ['Pretsident'], ['lazAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'coHi', 'my', 'naF', 'me', 'is', 'Johow', 'areover', 'you?', 'ello', 'ustmmas!y'], ['dcdommaA'], ['yy'], ['KtowRydY'], ['Presidenpacenor', 'Hi', 'nge', 'ou?ndst', 'John', 'F', 'KennedyThnamee', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['jukumps'], ['yXdEonejHello', 'ustXoUU'], ['sMulti', 'line', 'string', 'Hello', 'meaningemoving', 'world!', 'paceno'], ['Presidenpacenor', 'Hi', 'nge', 'ou?ndst', 'Johdn', 'F', 'KennedyThnamee', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['hiKennedyuccknow'], ['qPresident'], ['dsrandello', 'ustmmas!y'], ['JHoJohnyu?'], ['belazAmazing', 'tweenn'], ['lenine'], ['JkohThe', 'quick', 'brownTwrandomo', 'f', 'the', 'lazy', 'dog.n.'], ['S'], ['atfterHi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?'], ['aychaKennedyThe', 'quick', 'brown', 'fAmazing', 'how', 'a', 'sentence', 'ianing', 'just', 'jHello', 'ustby', 'adding', 'or', 'removing', 'commas!ou?ding'], ['aftThe', 'quick', 'brown', 'fumps', 'over', 'the', 'lazy', 'do'], ['aTwond'], ['ou?s'], ['ello', 'ustmmas!y'], ['araeover'], ['A', 'random', 'string', 'n', 'with', 'no', 'scommas', 'o', 'o', 'r', 'spaces'], ['pDWegu'], ['pacenor', 'Hi', 'nge', 'ou?nds'], ['Tjumps.', 'over', 'thThe', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'tog.e', 'lazy', 'dog.'], ['EeJPre'], ['slMulti', 'line', 'saddingtring', 'Hel'], ['betwstringee'], ['hjumpychange', 'Hi'], ['a', 'tfter'], ['qPresident', 'Jiohn', 'F', 'Kennedyuicck'], ['brownTwrandomo'], ['Tjumps', 'over', 'uick', 'rbrown', 'fox', 'jumps', 'over', 'tog.e', 'laz.'], ['dog.a.Twonds'], ['VqVNGKV'], ['Twrandomo', 'spaces', 'after', 'one', 'space', 'before', 'aTwond', 'no', 'spaceHi', 'my', 'name', 'isworld!', 'John.', 'How', 'are', 'ychange', 'ou?', 'aTwonds', 'in', 'between'], ['HoJohye', 'ou?u?'], ['Hi', 'myJoychange', 'Hi', 't'], ['paceno'], ['beTbh'], ['chan', 'ge'], ['spa', 'e', 'No'], ['behTbh'], ['aychaKennedyThe', 'quick', 'brown', 'fAmazing', 'how', 'a', 'sentence', 'ianing', 'just', 'jHello', 'ustby', 'adding', 'odog.r', 'removing', 'commas!ou?ding'], ['thlazAmazing'], ['KeKnnedynucck'], ['aTwoycick', 'brown', 'fox', 'jcommas!umps', 'over', 'the', 'lazer', 'tthe', 'lazy', 'dog.er', 'umps', 'over', 'the', 'lazy', 'dog.world!', 'pacenor?nds'], ['HoJohye', 'ou?uKennedyThe', 'orquick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['lAeSbnrM'], ['The', 'quick', 'brown', 'fox', 'juTwrandomo', 'spaces', 'after', 'one', 'space', 'before', 'aTwond', 'no', 'spaces', 'in', 'betweenkmps', 'over', 'the', 'lazy', 'dog.'], ['adJohowdMulti'], ['Twrandomo', 'spaces', 'after', 'one', 'space', 'before', 'aTwond', 'no', 'spaceHi', 'my', 'name', 'iswostringrld!', 'John.', 'How', 'are', 'ychange', 'ou?', 'aTwonds', 'in', 'between'], ['dsrand', 'ello', 'ustmmas!y'], ['naF', 'me'], ['.Hi', 'my', 'name', 'is', 'John.', 'HoHw', 'are', 'dsrandom', 'ychange', 'ou?', 'aTwond'], ['e', 'lazy', 'doge', 'ou?.'], ['A', 'sranadom', 'string', 'with', 'no', 'dcomma', 'or', 'spaces'], ['The', 'quick', 'brow', 'n', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['Amazing', 'how', 'aa', 'sentence', 'ianing', 'just', 'jHello', 'ustby', 'adding', 'or', 'removing', 'commas!'], ['qPresident', 'Jiohn', 'F', 'Kedog.a.TwondsnnedyuicckHoohnyu?'], ['dsrandelmlo', 'ustmmas!y'], ['comJohn.maAsjukmps'], ['eTjumps', 'over', 'the', 'lazy', 'dog.'], ['BCKkvq.Hi', 'my', 'name', 'is', 'John.', 'HoHw', 'are', 'dsrandom', 'ychange', 'ou?', 'aTwondkp'], ['Tjumps', 'over', 'thThe', 'quick', 'rbrown', 'fox', 'jumyremoving', 'ou?ps', 'over', 'tog.e', 'lazy', 'dog.'], ['oThisStringHasNocosmmasychamncge', 'ou?!Spaceser'], ['here', 'cesne'], ['qPresident', 'Jiohn', 'F', 'Kennedy', 'uicck'], ['lazAmazing', 'ehow', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'addinge', 'or', 'removing', 'cogmmas!y'], ['lazAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'justodog.r', 'by', 'addinge', 'or', 'removing', 'cogmmas!y'], ['izin'], ['dsrandello', 'ustmbehTbhmas!'], ['mmy'], ['KBCCKkvqkp'], ['aftThe', 'quickThbetweene', 'quick', 'brown', 'fox', 'jAma'], ['sMulti', 'line', 'string', 'Hello', 'world!', 'dom'], ['pnaceno'], ['here', 'addinge'], ['Pe', 'aTwoHnd'], ['Two', 'spaces', 'after', 'one', 'space', 'nbefore', 'and', 'no', 'spaces', 'in', 'betwstringeenHel'], ['brownbeThe', 'quick', 'rbrown', 'feox', 'jumps', 'over', 'the', 'lazy', 'dog.fomre'], ['spTwradomoa', 's'], ['na', 'F', 'me'], ['Ama'], ['ng'], ['meaningemoving'], ['The', 'quick', 'brown', 'mfox', 'juTwrandomo', 'spaces', 'after', 'one', 'space', 'before', 'aTwond', 'no', 'spaces', 'in', 'betweenkmps', 'over', 'the', 'lazy', 'dog.'], ['lazAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!yeKnney'], ['President', 'John', 'F', 'KennedyThnamee', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'ychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'are', 'ychange', 'ou?', 'ou?lazy', 'dog.'], ['HoJohHi', 'myJoychange', 'Hi', 'tu?u?'], ['quicc'], ['comHoJohyu?m'], ['c!ommas!!'], ['Joychange', 'Hi'], ['aTwoycick', 'brown', 'fox', 'jcommas!umps', 'over', 'the', 'lazer', 'tthe', 'lazy', 'dog.er', 'uThe', 'quick', 'brown', 'mfox', 'juTwrandomo', 'spaces', 'after', 'one', 'space', 'before', 'aTwond', 'no', 'spaces', 'in', 'betweenkmps', 'over', 'the', 'lazy', 'dog.mps', 'over', 'the', 'lazy', 'dog.world!', 'pacenor?nds'], ['onaftThe', 'quickThbetweene', 'quick', 'brown', 'fox', 'jAma', 'zing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'just', 'by', 'adding', 'or', 'removing', 'commas!umps', 'over', 'the', 'lazer', 'tthe', 'lazy', 'dog.er'], ['Mychange', 'Hi', 'my', 'space', 'name', 'issMulti', 'line', 'string', 'Hello', 'world!', 'paceno', 'John.', 'How', 'are', 'ychang', 'e', 'ou?', 'ou?'], ['brownbeThe', 'quick', 'rbrown', 'feox', 'jumps', 'over', 'the', 'lazy', 'edog.fomre'], ['ychaKennedyThe', 'quick', 'brown', 'fAmazing'], ['Hi', 'my', 'name', 'is', 'John.', 'HowbeforsMultiethe', 'lazy', 'dog.', 'are', 'Tjumps', 'over', 'uick', 'rbrown', 'fox', 'jumps', 'over', 'tog.e', 'laz.ychaKennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'nge', 'ou?', 'aTwoHnd'], ['Tjumps', 'over', 'thThe', 'quick', 'rbrown', 'fox', 'jumyrefmoving', 'ou?ps', 'over', 'tog.e', 'lazy', 'dog.'], ['The', 'quick', 'brown', 'fox', 'jukmps', 'over', 'the', 'lazy', 'dog.chan', 'ge'], ['A'], ['cosmmasychancgeu?!'], ['President', 'John', 'F', 'KennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'mye', 'name', 'is', 'John.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.'], ['BCKdog.a.Twondskvp'], ['dsrandd'], ['ello', 'ust'], ['meaningemovning'], ['Tjumps', 'over', 'tdsrand', 'ello', 'ustmmas!yhThe', 'quick', 'rbrown', 'fox', 'jumyremoving', 'ou?ps', 'over', 'tog.e', 'lazy', 'dogspaceHi'], ['nae', 'F', 'me'], ['Jiohn'], ['adJohoychaKennedyThe', 'quick', 'brown', 'fAmazing', 'dMulti'], ['HoJohyei', 'ou?uKennedyThe', 'orquick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['The', 'quick', 'rbrown', 'fox', 'jumpsu', 'over', 'jumpychange', 'Hi', 'my', 'name', 'is', 'Johdsrandn.', 'How', 'are', 'ychange', 'ou?', 'ou?sg.'], ['Twoyort?'], ['KennedyThe', 'orquick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'doTjumps.', 'over', 'thThze', 'quick', 'rbrown', 'fox', 'jumps', 'over', 'tog.e', 'lazy', 'dog.g.'], ['srapacenor', 'Hi', 'nge', 'ou?ndoehowm'], ['cosmmasychsPresident', 'John', 'F', 'n', 'Kennedyrandomansrandomcge', 'ou?!'], ['Kennedyrandom'], ['brownTwranhere', 'cesnedomwo'], ['bfA'], ['OPvleifQbelazAmazing', 'tweenn'], ['Twoyor?'], ['spa', 'e', 'eNo'], ['lazAmazing', 'how', 'a', 'sentence', 'can', 'change', 'meaning', 'justodog.r'], ['pnacHello', 'eno'], ['adoJohowdingi'], ['HoJohye', 'ou?uKennedyThe', 'orquick', 'brown', 'fox', 'spacesjumps', 'over', 'the', 'lazy', 'dog.'], ['Mychange', 'Tjumps', 'over', 'uick', 'rbrown', 'fox', 'jumps', 'over', 'tog.e', 'laz.ychaKennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'nge', 'ou?Hi'], ['A', 'srandom', 'string', 'with', 'paces'], ['Hi', 'my', 'naF', 'me', 'is', 'Jomhowlo', 'ust'], ['HoJohye', 'ouo?u?'], ['after', 'BCKkvkp'], ['HoJohye', 'ou?uKenneodyThe', 'orquick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['wHow'], ['KtowRydYThe', 'quick', 'brow', 'n', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['annd'], ['e', 'lazy', 'dge', 'ou?.'], ['ychaKennedyThe', 'quick', 'brown', 'ifox', 'jumps', 'ovesMulti'], ['wychange', 'Hi', 'my', 'name', 'ThisSaTwondstringHasNoSpaces', 'is', 'John.', 'How', 'are', 'ychang', 'e', 'ou?', 'ou?orld!!'], ['areoveyuur'], ['meaningemosMulti', 'line', 'string', 'Hello', 'meaningemoving', 'world!', 'pacenoving'], ['lazAmazing', 'homeaningemoving', 'w', 'a', 'sentence', 'can', 'change', 'meaning', 'jusfoxt', 'by', 'aaddinge', 'or', 'removing', 'cogmmas!y'], ['VqVVNGVKV'], ['spTwradoa', 's'], ['ou?snaeme'], ['lazAmazing', 'how', 'a', 'sentence', 'can', 'changewojrd', 's', 'g', 'just', 'by', 'adding', 'or', 'removiyng', 'commas!y'], ['usst'], ['betwstringbeen'], ['hereHi', 'srandom', 'my', 'name', 'is', 'John.', 'How', 'spaces', 'are', 'ychange', 'ou?'], ['Pre', 'F', 'K', 'ennedyThe', 'rquicjumpsk', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'n', 'A', 'srandom', 'string', 'with', 'pacesohn.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.'], ['A', 'sranadom', 'string', 'with', 'no', 'dcommaAs', 'adJohowdMulti', 'line', 'string', 'Hello', 'world!', 'ingor', 'spaces'], ['Hi', 'myJoychangVqVVNGVKVe', 'Hi', 't'], ['cthlasentencezAmazing', 'osmmaKennedyThnamee', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'ychange', 'Hi', 'sychancgeu?!'], ['President', 'John', 'F', 'KennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'mye', 'name', 'is', 'John.', 'How', 'ar', 'e', 'lazy', 'dog.'], ['qqquick'], ['lazy', 'dog.'], ['r'], ['HoJohye', 'ou?uKennedyThe', 'orquick', 'brown', 'fox', 'spacesjumps', 'onver', 'the', 'lazy', 'dog.'], ['coychange', 'ou?ammma!'], ['comJohn.mthbetweenkmpseaAsjukmps'], ['YNe'], ['brow'], ['yremoving', 'ou?'], ['lazAmazjing', 'how', 'a', 'sentence', 'can', 'change', 'meaninglAeSbnrM', 'just', 'by', 'adding', 'or', 'removing', 'commas!y'], ['aTwoycick', 'brown', 'fox', 'jcommas!umps', 'onkmps', 'over', 'the', 'lazy', 'dog.mps', 'over', 'the', 'lazy', 'dog.world!', 'pacenor?nds'], ['ycPresidenadJohowdingt'], ['.Hi', 'my', 'name', 'is', 'John.', 'HoHw', 'are', 'd', 'ychange', 'ou?', 'aTwond'], ['beThe', 'quick', 'rbrown', 'fox', 'jumups', 'over', 'the', 'lazy', 'do', 'g.fore'], ['jHelloo', 'usst'], ['dd'], ['he'], ['voTB'], ['President', 'John', 'F', 'KennedyThe', 'quick', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ar', 'he', 'you?', 'the', 'lazy', 'dog.'], ['dsrandelmlo', 'ustmmHi', 'srandom', 'my', 'name', 'Pre', 'F', 'K', 'ennedyThe', 'quicjumpsk', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.is', 'John.', 'How', 'spaces', 'are', 'ychange', 'ou?', 'as!y'], ['HoJohye', 'ou?uKenneodyThe', 'orq', 'uick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.'], ['lazAmazjing', 'how', 'a', 'sentence', 'can', 'change', 'meaninglAeSbnrM', 'just', 'by', 'addcing', 'or', 'removing', 'commas!y'], ['dcoTjumps', 'over', 'uick', 'rbrown.e', 'laz.mmaA'], ['ychange', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ychange', 'Hi', 'are', 'ychang', 'e', 'ou?', 'ou?'], ['yeKenney'], ['ou?sg.'], ['beThe', 'quick', 'rbrown', 'feox', 'jumps', 'over', 'the', 'lazy', 'dog.focommas!ou?mre'], ['areobrownTwrandomover'], ['qPresidenJiohn', 'F', 'Kennedy', 'uicck'], ['issMulti'], ['the', 'lazy', 'dog.BCKkvp'], ['agdJohownding'], ['Pre', 'F', 'K', 'ennedyThe', 'rquicjumpsk', 'brown', 'feox', 'jumps', 'over', 'Hi', 'my', 'n', 'A', 'srandom', 'string', 'with', 'pacesohn.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.'], ['qqk'], ['noThe', 'quick', 'brown', 'fox', 'juTwrandomo', 'spaces', 'aPresident', 'John', 'F', 'K', 'ennedyThe', 'quicjumpsk', 'brown', 'fox', 'jumps', 'over', 'Hi', 'my', 'name', 'is', 'John.', 'How', 'ar', 'e', 'you?', 'the', 'lazy', 'dog.fter', 'one', 'space', 'before', 'aTwond', 'no', 'spaces', 'in', 'betweenkmps', 'over', 'the', 'lazy', 'dog.'], ['lazAmazjing', 'how', 'a', 'sentence', 'can', 'change', 'meaninglAeSbnrM', 'just', 'by', 'adding', 'or', 'removing', 'commams!y'], ['mye'], ['spaceskpvp'], ['BCKkvq.Hi', 'my', 'name', 'is', 'John.', 'HJohowoHw', 'are', 'dsr', 'andom', 'ychange', 'ou?', 'aTwondkp'], ['sMulti'], ['dsrawithndd']]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/102", "prompt": "\ndef choose_num(x, y):\n    \n\n\n    if x > y: return -1\n    if x == y: return y if y % 2 == 0 else -1\n    return y if y % 2 == 0 else y - 1\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef choose_num(x, y):\n    \n\n\n    if x > y: return -1\n    if x == y: return y if y % 2 == 0 else -1\n    return y if y % 2 == 0 else y - 1\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef choose_num(x, y):\n    \n\n\n    if x > y: return -1\n    if x == y: return y if y % 2 == 0 else -1\n    return y if y % 2 == 0 else y - 1\n\n", "raw_modification": "```python\n<code_start>\ndef choose_num(x, y):\n    # Introduce unnecessary variable assignments\n    result = None\n    temp_x = x\n    temp_y = y\n\n    # Unnecessary loop to increase complexity\n    for _ in range(1):\n        # Unnecessary condition check\n        if temp_x > temp_y:\n            result = -1\n        else:\n            # Nested conditions to increase complexity\n            if temp_x == temp_y:\n                if temp_y % 2 == 0:\n                    result = temp_y\n                else:\n                    result = -1\n            else:\n                if temp_y % 2 == 0:\n                    result = temp_y\n                else:\n                    result = temp_y - 1\n\n    # Unnecessary reassignment\n    final_result = result\n    return final_result\n<code_end>\n```", "modification": "\ndef choose_num(x, y):\n    \n    result = None\n    temp_x = x\n    temp_y = y\n\n    \n    for _ in range(1):\n        \n        if temp_x > temp_y:\n            result = -1\n        else:\n            \n            if temp_x == temp_y:\n                if temp_y % 2 == 0:\n                    result = temp_y\n                else:\n                    result = -1\n            else:\n                if temp_y % 2 == 0:\n                    result = temp_y\n                else:\n                    result = temp_y - 1\n\n    \n    final_result = result\n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[12, 15], [13, 12], [33, 12354], [5234, 5233], [6, 29], [27, 10], [7, 7], [546, 546], [20, 30], [30, 30], [50, 60], [12, 14], [10, 12], [3, 5], [6, 20], [100, 200], [1, 2], [30, 35], [100, 6], [6, 30], [101, 6], [21, 3], [14, 14], [100, 100], [100, 35], [35, 101], [60, 60], [35, 35], [5, 6], [2, 35], [60, 50], [28, 1], [35, 200], [200, 5], [60, 6], [20, 20], [30, 6], [28, 35], [200, 200], [20, 36], [1, 6], [30, 1], [21, 5], [35, 199], [11, 14], [201, 201], [6, 5], [13, 10], [12, 16], [199, 12], [14, 13], [1, 1], [60, 11], [13, 35], [100, 30], [12, 12], [15, 14], [5, 5], [36, 29], [12, 11], [100, 15], [27, 28], [200, 201], [11, 201], [10, 11], [100, 13], [15, 29], [200, 101], [3, 3], [101, 15], [36, 35], [34, 101], [101, 101], [1, 14], [30, 21], [12, 3], [10, 4], [2, 2], [21, 20], [30, 50], [200, 199], [3, 101], [6, 15], [50, 59], [11, 11], [12, 13], [29, 35], [30, 201], [99, 5], [60, 21], [20, 5], [6, 35], [6, 36], [100, 98], [5, 200], [31, 50], [60, 59], [59, 21], [101, 34], [1, 15], [201, 1], [35, 50], [50, 3], [10, 35], [14, 30], [201, 200], [201, 199], [61, 60], [23, 27], [8, 10], [10, 17], [999, 998], [7, 20], [17, 21], [31, 99], [1000, 2000], [2, 20], [24, 27], [17, 24], [18, 31], [998, 998], [31, 1], [20, 21], [1, 7], [23, 100], [100, 23], [101, 100], [18, 32], [99, 99], [101, 18], [998, 31], [7, 24], [2000, 21], [19, 20], [1000, 2], [2, 3], [8, 1], [31, 999], [1, 23], [18, 33], [10, 2], [100, 998], [10, 20], [31, 20], [8, 24], [24, 24], [32, 1], [18, 18], [20, 19], [2, 100], [99, 31], [100, 1000], [1, 19], [31, 31], [32, 7], [20, 27], [2, 31], [32, 6], [10, 10], [2, 5], [2000, 998], [24, 33], [17, 17], [8, 9], [33, 2000], [20, 31], [1, 8], [102, 22], [1000, 24], [9, 10], [18, 6], [24, 99], [10, 101], [100, 10], [24, 7], [2, 17], [1000, 22], [20, 22], [23, 21], [9, 24], [32, 3], [9, 5], [3, 1], [2000, 2000], [22, 32], [8, 7], [3, 2], [31, 32], [27, 6], [7, 2000], [27, 101], [20, 7], [2, 1], [17, 33], [10, 24], [33, 33], [100, 31], [23, 18], [99, 998], [23, 31], [21, 21], [99, 32], [1000, 10], [1000, 1], [100, 22], [23, 6], [2, 21], [18, 8], [17, 32], [2, 28], [33, 32], [4, 7], [23, 23], [2001, 2000], [22, 99], [1000, 28], [1, 2001], [22, 4], [8, 2], [11, 10], [8, 8], [32, 22], [1999, 2000], [23, 32], [5, 24], [17, 102], [32, 32], [7, 18], [29, 28], [99, 10], [22, 31], [2, 4], [99, 100], [7, 1], [6, 1999], [10, 25], [28, 28], [1000, 2001], [17, 7], [1999, 28], [27, 27], [21, 19], [998, 100], [32, 33], [24, 10], [33, 24], [99, 6], [998, 32], [32, 34], [25, 20], [33, 3], [998, 1999], [24, 28], [24, 1999], [31, 18], [22, 17], [99, 3], [11, 5], [999, 102], [4, 2], [23, 24], [24, 9], [8, 998], [99, 20], [11, 9], [32, 11], [20, 1999], [19, 24], [1000, 6], [1999, 1], [19, 19], [29, 1], [5, 31], [1001, 18], [29, 18], [8, 20], [4, 4], [2000, 99], [32, 18], [1, 18], [10, 1], [6, 7], [6, 34], [26, 25], [24, 25], [9, 9], [32, 1001], [28, 2], [9, 20], [4, 27], [1, 10], [2000, 16], [20, 32], [1999, 1999], [102, 10], [999, 18], [9, 8], [5, 10], [9, 6], [999, 999], [2000, 101], [10, 29], [22, 8], [16, 6], [10, 32], [17, 34], [10, 28], [7, 102], [1001, 1001], [25, 33], [101, 20], [27, 100], [23, 101], [18, 17], [10, 5], [22, 21], [21, 998], [22, 22], [2, 16], [999, 24], [18, 21], [1000, 1000], [22, 10], [99, 999], [7, 6], [99, 26], [11, 102], [998, 999], [1, 99], [102, 20], [6, 1000], [17, 1000], [103, 7], [1999, 21], [1999, 997], [7, 9], [1003, 1002], [28, 998], [2, 1002], [19, 31], [32, 10], [1, 999], [7, 3], [31, 16], [7, 99], [7, 17], [99, 98], [100, 21], [100, 11], [20, 25], [9, 99], [25, 100], [2, 32], [100, 101], [33, 2001], [98, 32], [2001, 2001], [6, 21], [24, 6], [4, 20], [1003, 1001], [100, 2000], [1999, 1000], [30, 7], [103, 998], [999, 99], [34, 25], [19, 3], [1002, 1003], [34, 4], [17, 99], [23, 1001], [1, 3], [22, 23], [7, 2], [1999, 19], [3, 32], [6, 18], [23, 997], [17, 29], [27, 62], [26, 28], [1001, 7], [22, 5], [997, 998], [29, 100], [22, 100], [22, 6], [62, 62], [34, 34], [32, 21], [29, 6], [16, 3], [998, 10], [1999, 99], [27, 7], [17, 98], [34, 5], [30, 99], [17, 30], [104, 7], [100, 62], [28, 27], [100, 3], [4, 998], [3, 21], [10, 98], [1002, 1999], [98, 21], [4, 10], [25, 17], [24, 23], [2000, 2001], [1003, 998], [998, 997], [32, 1002], [28, 1001], [22, 1], [24, 26], [27, 104], [103, 1001], [11, 12], [6, 8], [101, 32], [1000, 999], [10, 21], [999, 28], [100, 99], [34, 33], [5, 20], [20, 34], [33, 1002], [30, 3], [1000, 29], [12, 29], [4, 24], [20, 102], [29, 98], [70, 70], [18, 62], [18, 19], [5, 16], [1002, 1002], [11, 93], [18, 3], [98, 7], [29, 29], [16, 17], [34, 2], [9, 93], [30, 103], [1001, 70], [23, 1999], [1001, 998], [26, 99], [21, 18], [998, 8], [21, 22], [23, 1], [1003, 1003], [23, 998], [2000, 3], [25, 28], [2, 27], [102, 102], [1004, 1003], [103, 99], [70, 100], [32, 104], [1003, 7], [5, 3], [18, 98], [25, 27], [22, 1000], [103, 103], [1000, 1001], [1002, 1001], [4, 31], [102, 101], [2000, 1004], [21, 8], [99, 70], [3, 1002], [20, 8], [1003, 1004], [33, 30], [6, 6], [25, 9], [31, 4], [70, 5], [31, 28], [19, 33], [3, 4], [5, 9], [1999, 1004], [104, 29], [62, 998], [25, 99], [21, 1999], [33, 34], [997, 4], [102, 998], [1000, 19], [23, 10], [1004, 1004], [997, 2001], [998, 6], [30, 29], [10, 998], [4, 9], [70, 32], [27, 20], [102, 21], [8, 3], [19, 4], [33, 6], [12, 23], [1, 17], [29, 99], [102, 99], [24, 29], [7, 22], [28, 12], [1001, 99], [22, 71], [3, 27], [999, 23], [7, 10], [18, 1], [63, 102], [25, 29], [103, 6], [8, 6], [28, 25], [99, 12], [10, 27], [32, 30], [21, 30], [996, 2001], [104, 27], [28, 17], [999, 1000], [103, 104], [16, 34], [11, 8], [2000, 24], [16, 35], [32, 31], [26, 23], [27, 26], [9, 21], [18, 20], [29, 17], [2, 33], [32, 23], [22, 9], [17, 5], [10, 22], [34, 20], [9, 2], [11, 998], [35, 1], [23, 102], [22, 2001], [2000, 23], [24, 30], [2000, 62], [100, 63], [996, 4], [18, 4], [101, 71], [1003, 20], [70, 21], [10, 3], [72, 71], [27, 1002], [31, 17], [1998, 1999], [62, 21], [71, 71], [2001, 21], [9, 104], [1004, 18], [18, 2], [7, 1000], [19, 32], [17, 2000], [104, 103], [27, 18], [21, 31], [1, 1004], [1999, 98], [21, 7], [30, 17], [1998, 1998], [101, 102], [17, 8], [29, 12], [2001, 16], [1000000, 1000001], [10, 23], [27, 23], [2000, 999], [1, 21], [8, 23], [30, 23], [10, 16], [23, 8], [27, 17], [2000, 17], [7, 31], [7, 27], [999, 30], [2000, 100], [30, 2], [21, 10], [999, 2000], [100, 2], [10, 18], [99, 2], [99, 23], [22, 2000], [1000, 9], [10, 2001], [30, 22], [1000, 17], [999, 17], [999, 100], [9, 2000], [999, 2001], [99, 1000], [31, 21], [2001, 20], [27, 2], [23, 9], [29, 23], [1999, 29], [27, 2001], [5, 23], [10, 100], [101, 2000], [999, 1], [99, 7], [23, 2001], [9, 16], [5, 2], [10, 9], [30, 16], [27, 2000], [17, 2001], [998, 1000], [22, 18], [1999, 999], [10, 1999], [29, 999], [1999, 31], [99, 16], [16, 10], [11, 30], [11, 2], [10, 31], [999, 9], [99, 1], [22, 30], [31, 7], [23, 17], [29, 101], [2002, 2002], [999, 2002], [2000, 18], [16, 21], [99, 17], [10, 7], [21, 16], [23, 7], [1999, 8], [999, 20], [8, 22], [26, 27], [1000, 16], [21, 27], [17, 22], [999, 21], [15, 21], [26, 7], [10, 2000], [11, 100], [21, 23], [5, 18], [9, 1999], [18, 7], [99, 101], [44, 1999], [44, 43], [16, 16], [30, 10], [2000, 7], [11, 99], [99, 24], [2000, 1], [11, 31], [28, 2001], [999, 10], [1001, 24], [29, 22], [2000, 20], [7, 999], [2001, 100], [99, 30], [18, 43], [6, 17], [24, 2001], [102, 30], [11, 22], [999, 5], [99, 1999], [20, 1001], [19, 7], [20, 2000], [7, 8], [2001, 1001], [98, 99], [7, 19], [102, 15], [11, 21], [19, 1001], [98, 1000], [26, 100], [999, 19], [21, 1000], [2002, 31], [23, 99], [26, 2000], [98, 17], [2002, 30], [23, 1002], [2001, 9], [102, 999], [9, 11], [1999, 11], [31, 8], [29, 997], [100, 102], [23, 98], [1999, 17], [5, 102], [28, 8], [24, 17], [29, 5], [15, 15], [1001, 11], [999, 26], [9, 22], [44, 9], [2002, 997], [2000, 10], [7, 23], [18, 2001], [5, 1999], [2000, 5], [101, 10], [2003, 11], [31, 6], [30, 5], [2001, 7], [28, 30], [1999, 30], [24, 5], [1001, 23], [998, 1], [9, 2002], [15, 10], [16, 9], [102, 24], [998, 29], [2002, 2000], [21, 999], [44, 6], [25, 2003], [10, 999], [102, 100], [1001, 100], [15, 2], [19, 22], [2002, 10], [23, 15], [8, 2001], [25, 5], [2001, 2002], [27, 30], [26, 101], [1001, 22], [5, 21], [99, 21], [28, 29], [6, 2002], [2000, 1000], [8, 27], [31, 1001], [32, 5], [2004, 2003], [15, 16], [18, 16], [10, 15], [1, 30], [1, 1001], [2001, 17], [2002, 2001], [99, 1002], [29, 2001], [30, 15], [6, 1001], [20, 26], [30, 100], [1002, 22], [10, 1998], [31, 10], [998, 101], [28, 31], [26, 102], [1, 997], [23, 22], [29, 30], [101, 21], [7, 32], [998, 23], [2003, 7], [43, 1], [1001, 20], [24, 2003], [17, 999], [1001, 30], [1998, 999], [22, 27], [14, 15], [1998, 9], [9, 2001], [998, 28], [24, 20], [1, 2000], [22, 999], [96, 99], [999, 7], [99, 25], [6, 26], [1001, 101], [1, 29], [16, 1], [100, 5], [19, 1999], [22, 1999], [25, 24], [3, 998], [44, 99], [2000, 9], [1998, 31], [1999, 27], [31, 14], [15, 999], [27, 29], [1999, 101], [24, 104], [998, 9], [997, 23], [26, 6], [997, 101], [4, 22], [2004, 31], [31, 30], [1000, 23], [24, 16], [98, 98], [28, 16], [100, 19], [44, 7], [16, 5], [26, 999], [100, 1002], [997, 22], [16, 2001], [2002, 2003], [1998, 2000], [16, 15], [98, 1001], [29, 2003], [21, 100], [2000, 1999], [1000, 1999], [1999, 102], [29, 1002], [6, 99], [103, 102], [100, 1001], [31, 24], [25, 26], [21, 6], [8, 26], [26, 5], [1000, 998], [44, 44], [2004, 8], [9, 7], [20, 16], [103, 27], [102, 18], [998, 2001], [101, 104], [4, 102], [24, 2004], [6, 4], [2001, 104], [17, 28], [100, 43], [1001, 2004], [1998, 43], [2002, 999], [43, 30], [102, 9], [2003, 5], [1002, 102], [1999, 998], [2003, 10], [14, 2], [32, 2001], [1000, 30], [8, 103], [999, 1999], [43, 43], [96, 96], [16, 2002], [7, 2002], [23, 34], [22, 11], [5, 15], [26, 26], [8, 5], [96, 4], [15, 20], [12, 8], [2, 999], [21, 2000], [20, 98], [1, 2004], [997, 997], [21, 102], [18, 9], [14, 998], [28, 2003], [23, 20], [2, 22]]\n    results = [14, -1, 12354, -1, 28, -1, -1, 546, 30, 30, 60, 14, 12, 4, 20, 200, 2, 34, -1, 30, -1, -1, 14, 100, -1, 100, 60, -1, 6, 34, -1, -1, 200, -1, -1, 20, -1, 34, 200, 36, 6, -1, -1, 198, 14, -1, -1, -1, 16, -1, -1, -1, -1, 34, -1, 12, -1, -1, -1, -1, -1, 28, 200, 200, 10, -1, 28, -1, -1, -1, -1, 100, -1, 14, -1, -1, -1, 2, -1, 50, -1, 100, 14, 58, -1, 12, 34, 200, -1, -1, -1, 34, 36, -1, 200, 50, -1, -1, -1, 14, -1, 50, -1, 34, 30, -1, -1, -1, 26, 10, 16, -1, 20, 20, 98, 2000, 20, 26, 24, 30, 998, -1, 20, 6, 100, -1, -1, 32, -1, -1, -1, 24, -1, 20, -1, 2, -1, 998, 22, 32, -1, 998, 20, -1, 24, 24, -1, 18, -1, 100, -1, 1000, 18, -1, -1, 26, 30, -1, 10, 4, -1, 32, -1, 8, 2000, 30, 8, -1, -1, 10, -1, 98, 100, -1, -1, 16, -1, 22, -1, 24, -1, -1, -1, 2000, 32, -1, -1, 32, -1, 2000, 100, -1, -1, 32, 24, -1, -1, -1, 998, 30, -1, -1, -1, -1, -1, -1, 20, -1, 32, 28, -1, 6, -1, -1, 98, -1, 2000, -1, -1, -1, 8, -1, 2000, 32, 24, 102, 32, 18, -1, -1, 30, 4, 100, -1, 1998, 24, 28, 2000, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, 34, -1, -1, 1998, 28, 1998, -1, -1, -1, -1, -1, -1, 24, -1, 998, -1, -1, -1, 1998, 24, -1, -1, -1, -1, 30, -1, -1, 20, 4, -1, -1, 18, -1, 6, 34, -1, 24, -1, 1000, -1, 20, 26, 10, -1, 32, -1, -1, -1, -1, 10, -1, -1, -1, 28, -1, -1, 32, 34, 28, 102, -1, 32, -1, 100, 100, -1, -1, -1, 998, 22, 16, -1, 20, 1000, -1, 998, -1, -1, 102, 998, 98, -1, 1000, 1000, -1, -1, -1, 8, -1, 998, 1002, 30, -1, 998, -1, -1, 98, 16, -1, -1, -1, 24, 98, 100, 32, 100, 2000, -1, -1, 20, -1, 20, -1, 2000, -1, -1, 998, -1, -1, -1, 1002, -1, 98, 1000, 2, 22, -1, -1, 32, 18, 996, 28, 62, 28, -1, -1, 998, 100, 100, -1, 62, 34, -1, -1, -1, -1, -1, -1, 98, -1, 98, 30, -1, -1, -1, -1, 998, 20, 98, 1998, -1, 10, -1, -1, 2000, -1, -1, 1002, 1000, -1, 26, 104, 1000, 12, 8, -1, -1, 20, -1, -1, -1, 20, 34, 1002, -1, -1, 28, 24, 102, 98, 70, 62, 18, 16, 1002, 92, -1, -1, -1, 16, -1, 92, 102, -1, 1998, -1, 98, -1, -1, 22, -1, -1, 998, -1, 28, 26, 102, -1, -1, 100, 104, -1, -1, 98, 26, 1000, -1, 1000, -1, 30, -1, -1, -1, -1, 1002, -1, 1004, -1, 6, -1, -1, -1, -1, 32, 4, 8, -1, -1, 998, 98, 1998, 34, -1, 998, -1, -1, 1004, 2000, -1, -1, 998, 8, -1, -1, -1, -1, -1, -1, 22, 16, 98, -1, 28, 22, -1, -1, 70, 26, -1, 10, -1, 102, 28, -1, -1, -1, -1, 26, -1, 30, 2000, -1, -1, 1000, 104, 34, -1, -1, 34, -1, -1, -1, 20, 20, -1, 32, -1, -1, -1, 22, -1, -1, 998, -1, 102, 2000, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1002, -1, 1998, -1, -1, -1, 104, -1, -1, 1000, 32, 2000, -1, -1, 30, 1004, -1, -1, -1, 1998, 102, -1, -1, -1, 1000000, 22, -1, -1, 20, 22, -1, 16, -1, -1, -1, 30, 26, -1, -1, -1, -1, 2000, -1, 18, -1, -1, 2000, -1, 2000, -1, -1, -1, -1, 2000, 2000, 1000, -1, -1, -1, -1, -1, -1, 2000, 22, 100, 2000, -1, -1, 2000, 16, -1, -1, -1, 2000, 2000, 1000, -1, -1, 1998, 998, -1, -1, -1, 30, -1, 30, -1, -1, 30, -1, -1, 100, 2002, 2002, -1, 20, -1, -1, -1, -1, -1, -1, 22, 26, -1, 26, 22, -1, 20, -1, 2000, 100, 22, 18, 1998, -1, 100, 1998, -1, 16, -1, -1, 98, -1, -1, 30, 2000, -1, -1, -1, -1, 998, -1, -1, 42, 16, 2000, -1, 22, -1, 1998, 1000, -1, 2000, 8, -1, 98, 18, -1, 20, 1000, 1000, 100, -1, 1000, -1, 98, 2000, -1, -1, 1002, -1, 998, 10, -1, -1, 996, 102, 98, -1, 102, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, 22, 2000, 1998, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, 2002, -1, -1, -1, -1, -1, 998, -1, 2002, 998, -1, -1, -1, 22, -1, -1, 2000, -1, 2002, 30, 100, -1, 20, -1, 28, 2002, -1, 26, 1000, -1, -1, 16, -1, 14, 30, 1000, -1, -1, 1002, 2000, -1, 1000, 26, 100, -1, 1998, -1, -1, 30, 102, 996, -1, 30, -1, 32, -1, -1, -1, -1, 2002, 998, -1, -1, 26, 14, -1, 2000, -1, -1, 2000, 998, 98, -1, -1, 26, -1, 28, -1, -1, 1998, 1998, -1, 998, 98, -1, -1, -1, -1, 998, 28, -1, 104, -1, -1, -1, -1, 22, -1, -1, -1, -1, 98, -1, -1, -1, -1, 998, 1002, -1, 2000, 2002, 2000, -1, 1000, 2002, 100, -1, 1998, -1, 1002, 98, -1, 1000, -1, 26, -1, 26, -1, -1, 44, -1, -1, -1, -1, -1, 2000, 104, 102, 2004, -1, -1, 28, -1, 2004, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2000, -1, 102, 1998, -1, 96, 2002, 2002, 34, -1, 14, 26, -1, -1, 20, -1, 998, 2000, 98, 2004, -1, 102, -1, 998, 2002, -1, 22]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/103", "prompt": "\ndef rounded_avg(n, m):\n    \n\n\n    if n > m: return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef rounded_avg(n, m):\n    \n\n\n    if n > m: return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef rounded_avg(n, m):\n    \n\n\n    if n > m: return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n\n", "raw_modification": "```python\n<code_start>\ndef rounded_avg(n, m):\n    # Introduce unnecessary variables and operations\n    def add(a, b):\n        return a + b\n\n    def divide_by_two(x):\n        return x / 2\n\n    def round_number(x):\n        return round(x)\n\n    def convert_to_bin(x):\n        return bin(x)\n\n    # Unnecessary checks and operations\n    if n > m:\n        return -1\n    else:\n        result = -1  # Unnecessary assignment\n\n    # Unnecessary loop to simulate complexity\n    for _ in range(1):\n        sum_value = add(n, m)\n        half_value = divide_by_two(sum_value)\n        avg = round_number(half_value)\n        result = convert_to_bin(avg)\n\n    return result\n<code_end>\n```", "modification": "\ndef rounded_avg(n, m):\n    \n    def add(a, b):\n        return a + b\n\n    def divide_by_two(x):\n        return x / 2\n\n    def round_number(x):\n        return round(x)\n\n    def convert_to_bin(x):\n        return bin(x)\n\n    \n    if n > m:\n        return -1\n    else:\n        result = -1  \n\n    \n    for _ in range(1):\n        sum_value = add(n, m)\n        half_value = divide_by_two(sum_value)\n        avg = round_number(half_value)\n        result = convert_to_bin(avg)\n\n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[1, 5], [7, 13], [964, 977], [996, 997], [560, 851], [185, 546], [362, 496], [350, 902], [197, 233], [7, 5], [5, 1], [5, 5], [1, 1], [3, 9], [25, 35], [10, 30], [100, 200], [15, 15], [10, 10], [50, 100], [15, 100], [200, 30], [51, 100], [51, 50], [30, 200], [3, 101], [35, 35], [4, 3], [50, 50], [4, 9], [9, 50], [6, 5], [3, 6], [9, 9], [6, 6], [30, 201], [25, 25], [15, 16], [9, 6], [200, 6], [3, 16], [9, 3], [1, 200], [201, 200], [16, 30], [6, 7], [201, 25], [14, 15], [2, 9], [10, 6], [10, 4], [7, 30], [16, 5], [9, 10], [2, 2], [101, 16], [6, 4], [16, 16], [49, 49], [101, 200], [29, 30], [7, 3], [15, 14], [201, 31], [4, 2], [201, 201], [2, 7], [2, 10], [4, 1], [15, 25], [30, 16], [8, 31], [5, 3], [4, 4], [31, 30], [3, 1], [14, 32], [7, 10], [10, 5], [202, 25], [202, 15], [999999, 1000000], [10000, 12000], [54321, 98765], [123456, 789012], [1, 100000], [100, 1000], [3000, 5000], [99998, 100003], [10000, 20000], [3000, 20000], [100, 12001], [3000, 1000000], [3000, 3000], [1000, 100], [100000, 1], [100003, 100003], [3000, 1000001], [5000, 100003], [100003, 1], [3000, 999999], [101, 1], [123456, 20001], [1000000, 100], [1000, 10], [1000001, 20000], [20001, 100003], [54322, 54321], [3000, 3001], [2999, 3001], [20000, 20000], [19999, 20000], [1000, 1000], [1000000, 1000000], [999999, 3000], [3001, 3001], [999999, 999999], [3001, 1000000], [1, 12000], [789012, 100002], [75, 100003], [75, 12000], [1, 3001], [99, 100000], [999999, 1000], [10000, 98765], [100, 100], [999999, 1000001], [100003, 20000], [100, 99], [1000, 1000001], [100002, 3000], [99, 1], [54321, 100], [100000, 2], [99, 20000], [54321, 101], [99998, 100000], [100001, 1], [100002, 100003], [100001, 20000], [19999, 100001], [75, 75], [1000000, 999999], [5000, 5000], [2, 54322], [99, 99], [1000000, 54322], [19998, 100001], [54321, 54321], [10, 1], [20001, 99997], [101, 99997], [99997, 100], [999998, 999999], [54321, 54322], [54321, 12000], [999998, 12000], [10, 9], [100001, 789012], [123456, 98765], [20000, 99], [999997, 123456], [75, 99997], [100005, 789012], [99999, 99], [101, 100000], [101, 1000], [54322, 789012], [101, 100001], [10, 11], [999999, 12000], [3001, 99999], [5000, 3000], [99997, 99997], [789012, 789012], [1000000, 54321], [54321, 99], [1000000, 1000001], [3000, 75], [99999, 99998], [19997, 19998], [2999, 2999], [100, 98], [99998, 100], [98765, 98765], [123456, 99], [100, 99997], [1000000, 75], [10000, 2999], [11999, 12000], [100001, 100000], [5000, 100004], [3000, 12001], [999998, 999998], [54320, 54321], [12000, 1000000], [3001, 123456], [99999, 20000], [100001, 789013], [20000, 19998], [20001, 12001], [54323, 54321], [98, 12000], [12000, 12000], [999999, 100], [54320, 12000], [10000, 75], [3000, 99997], [100, 19997], [1000000, 2999], [2, 100000], [999997, 3001], [3001, 3000], [100005, 100003], [100001, 100001], [100000, 100000], [20001, 20001], [19999, 1], [2, 123456], [2, 1000], [10, 999998], [99998, 99], [3001, 2999], [12001, 12000], [98, 99], [3000, 2999], [100, 999998], [101, 101], [99999, 100], [100, 54320], [12000, 11998], [54321, 999998], [9999, 9999], [99997, 999999], [98, 100002], [54321, 1000000], [75, 11999], [98, 98], [10001, 10001], [12001, 12001], [789013, 789013], [19998, 1000001], [54320, 3001], [100, 99998], [73, 92], [100001, 100004], [54320, 54320], [100004, 100003], [1, 5000], [100000, 100001], [54322, 99], [20001, 54322], [100004, 99997], [3000, 3002], [789013, 100004], [789013, 1000000], [1000000, 1], [98765, 4999], [3001, 1], [99, 20001], [2999, 3000], [54321, 54323], [99997, 54323], [54320, 3002], [99999, 20001], [20001, 11998], [999999, 92], [19998, 20000], [100002, 19998], [1000, 3000], [10001, 100001], [3000, 789012], [1000000, 999998], [2, 1], [100001, 10], [3002, 3001], [99998, 99998], [10, 1000000], [100002, 10], [3001, 100003], [3001, 20000], [20000, 10000], [1, 2], [1, 19998], [1, 20001], [1000000, 789013], [1000001, 1000001], [100, 101], [2, 99], [20000, 100002], [9999, 3000], [2, 92], [100002, 100002], [4999, 20001], [54322, 54322], [12000, 19998], [1, 10], [9, 75], [789011, 789011], [2999, 54321], [54322, 100], [3001, 999999], [12000, 999999], [123456, 1000000], [3002, 75], [3000, 2998], [1000001, 73], [100001, 5000], [5000, 92], [100003, 5000], [100004, 100004], [20001, 123456], [99999, 100000], [1, 100], [20001, 20000], [20000, 3001], [1000000, 100004], [12001, 11998], [20001, 98765], [99, 100], [19997, 100000], [2999, 54322], [99997, 10001], [75, 20000], [3000, 99999], [101, 100], [100, 19998], [20002, 99997], [2998, 3001], [5001, 99998], [99998, 19999], [10, 99997], [98766, 98765], [100001, 100003], [3000, 12000], [20000, 12000], [100001, 999999], [2, 54323], [1000000, 10], [5001, 102], [1000000, 3000], [54320, 5000], [19998, 99], [2998, 2998], [98765, 75], [999997, 100004], [789011, 99997], [100000, 20001], [789014, 11998], [789014, 789014], [4999, 3000], [101, 54322], [98, 100003], [11999, 11998], [102, 5001], [4998, 4999], [100001, 1000], [10, 100], [12000, 999997], [100002, 3002], [100002, 99999], [75, 9999], [3000, 98], [11999, 11999], [3000, 98765], [1000001, 2998], [999997, 999998], [12001, 999999], [19997, 19996], [2, 999], [19997, 19997], [98, 11998], [99998, 98765], [1000000, 101], [100005, 20001], [74, 101], [4998, 1], [99, 19999], [123456, 75], [10, 789013], [3001, 3002], [102, 102], [100000, 1000001], [100000, 20002], [1, 3000], [98765, 19999], [19996, 20000], [19997, 100004], [54322, 12000], [11999, 1000000], [18, 98765], [5000, 100], [101, 99999], [5001, 100], [19999, 1000000], [999, 4999], [98765, 9999], [5000, 19997], [2999, 99], [54321, 20002], [1000001, 92], [100001, 54321], [1, 1000000], [99997, 100000], [100002, 99998], [100001, 54320], [54323, 3001], [19999, 999997], [92, 1000000], [12001, 75], [789013, 3000], [102, 1000], [123455, 99], [2999, 2998], [100001, 3001], [999, 10], [101, 11998], [100002, 74], [2998, 100002], [999997, 999997], [54322, 3000], [98, 10001], [789013, 789012], [102, 19998], [98765, 99997], [5000, 100001], [4999, 5000], [1, 1000001], [789012, 12001], [5001, 19999], [99997, 99998], [1000001, 1000000], [98, 10], [999998, 999997], [999, 7], [100005, 100], [19999, 19999], [999, 999], [789013, 789014], [123456, 123456], [10, 99998], [103, 100002], [1000000, 9999], [12002, 12001], [17, 98765], [73, 999999], [19997, 75], [75, 999999], [100001, 54323], [10, 20002], [99997, 99999], [789012, 54323], [999998, 1000], [11998, 11998], [100004, 75], [789012, 20001], [99999, 99999], [102, 101], [5002, 5001], [3001, 100002], [11, 10000], [1002, 1001], [99996, 99998], [789013, 98766], [100006, 12001], [54319, 3001], [54320, 999999], [102, 999], [100000, 999], [3000, 54322], [998, 998], [100005, 100006], [98766, 98766], [74, 11998], [999998, 12001], [11, 9], [54320, 99997], [999999, 999998], [123455, 100], [98765, 98766], [101, 10], [10, 98765], [102, 54320], [123455, 3000], [54320, 999], [20002, 998], [5002, 12000], [789012, 98766], [999, 3000], [100000, 99999], [1000000, 73], [10001, 998], [20001, 19998], [5001, 10000], [1, 73], [1003, 1000], [100006, 100003], [7, 2999], [12001, 20001], [3002, 123456], [19996, 19996], [19997, 1000001], [98, 10000], [100003, 54320], [2, 100003], [103, 10], [789012, 98], [2998, 20001], [99, 2999], [98765, 3001], [1001, 10], [998, 997], [93, 5001], [20001, 4999], [54322, 2998], [66, 66], [99998, 99999], [1000, 20000], [3000, 100000], [99998, 99997], [100000, 54321], [1000001, 100002], [54323, 54320], [100, 92], [9999, 5001], [5000, 998], [123455, 12001], [54323, 54323], [11, 100], [999, 1000], [999, 1001], [99998, 54320], [54320, 3000], [123455, 123456], [5000, 2], [1, 99998], [123456, 123455], [10000, 10000], [100, 789012], [98766, 1], [10002, 10000], [98765, 10000], [99998, 9999], [789012, 10000], [123455, 123457], [10000, 20001], [100, 1], [789012, 789011], [10001, 20000], [789011, 100000], [10003, 10003], [1, 98765], [123455, 100003], [123455, 123455], [123456, 789011], [789011, 1000000], [123456, 1000], [20000, 9999], [99999, 54321], [98765, 98764], [99999, 789012], [12000, 789012], [98764, 98765], [123454, 123455], [123456, 54321], [98765, 100003], [123457, 98766], [98764, 10000], [98762, 98763], [1000, 100003], [100, 98766], [10002, 789011], [98763, 123455], [123458, 98767], [98764, 123456], [10002, 20000], [123458, 1], [98763, 98763], [98764, 98764], [3000, 99], [10001, 2], [100000, 789011], [11999, 789011], [1000, 123456], [99999, 98765], [123457, 123457], [789011, 999999], [98766, 5000], [98764, 9999], [99999, 789011], [1000, 98767], [98764, 20000], [4999, 1], [2, 123455], [123456, 99998], [20000, 54320], [10001, 9999], [789011, 12000], [100, 20002], [12001, 789012], [1001, 1001], [20001, 19999], [20001, 100000], [21, 6], [98767, 98767], [99999, 789013], [10002, 10002], [12001, 100003], [5001, 5001], [10001, 10000], [20002, 100000], [99999, 1000], [98765, 10002], [123456, 999999], [4999, 20002], [1001, 100], [1001, 1002], [12000, 789011], [5001, 5000], [101, 54321], [98764, 10002], [98765, 1000], [10002, 54321], [10000, 54321], [123456, 20000], [20001, 98764], [789013, 54320], [19999, 5001], [12000, 68], [98766, 5], [1002, 1003], [99999, 123457], [10003, 123456], [10002, 98766], [98764, 1001], [5001, 99], [98763, 98762], [9999, 10000], [1000, 10002], [123454, 98765], [10000, 100003], [98764, 100], [12000, 1001], [1002, 98763], [10001, 10002], [12001, 68], [789013, 54319], [123458, 99], [4998, 19999], [5, 54321], [98765, 789012], [98763, 99998], [98764, 99998], [99998, 1002], [1001, 123456], [999999, 54321], [789013, 789011], [6, 2], [123455, 54321], [54320, 1000], [10003, 54321], [20000, 3000], [98762, 3000], [54319, 3000], [10000, 123455], [1002, 1002], [999, 9999], [98767, 98763], [5, 98763], [99, 98], [5002, 98764], [10000, 10002], [98764, 10001], [20002, 20002], [10003, 5001], [123454, 98764], [10003, 10002], [98766, 99], [10002, 1000], [10000, 54320], [1002, 1], [98762, 98762], [10002, 5000], [123454, 123454], [98766, 54320], [5000, 99], [54320, 98765], [10003, 5002], [98766, 10000], [19999, 100003], [789010, 789010], [98765, 5000], [20002, 10002], [1, 1002], [101, 20002], [1, 98763], [100, 19999], [789013, 54318], [98763, 99], [98762, 10001], [5002, 99], [54321, 5000], [68, 98762], [100, 789010], [98762, 123455], [100, 98765], [1003, 1003], [54318, 54318], [5001, 100000], [123458, 123458], [789014, 100000], [5003, 5002], [789012, 9999], [68, 98769], [68, 67], [9999, 789012], [5001, 12000], [10001, 54321], [20001, 3000], [123457, 123456], [999, 99999], [10000, 11999], [67, 67], [1, 6], [98762, 9999], [1, 5001], [12000, 54320], [10001, 789011], [2, 5], [54322, 98764], [5001, 99999], [5001, 123456], [1000000, 67], [5002, 100000], [1002, 11999], [12000, 98767], [123455, 123454], [21, 99], [98761, 100003], [1000, 67], [99998, 101], [54322, 2], [1000, 999], [2, 5003], [20001, 10002], [123457, 5], [5, 1003], [21, 7], [100003, 54321], [9999, 98762], [789012, 1], [54321, 1000001], [98769, 98769], [98, 1], [99999, 5], [1000001, 1000002], [5003, 100000], [54318, 10002], [100, 789009], [123455, 5000], [10001, 10004], [20001, 98769], [123456, 101], [10004, 99998], [9999, 98763], [20002, 1], [9999, 54320], [9999, 10003], [12002, 68], [123454, 100003], [10003, 100001], [100, 1001], [54318, 54321], [100, 20000], [20002, 20001], [123454, 11999], [123456, 3000], [100003, 3000], [1003, 1004], [100004, 99998], [1000, 1002], [1, 20002], [1000, 99996], [100003, 100002], [68, 101], [1002, 2], [9998, 10003], [789009, 98767], [9998, 6], [68, 789009], [10001, 11999], [12000, 12001], [1000002, 1000002], [1000001, 789013], [123458, 123456], [54321, 20001], [54322, 99998], [998, 20002], [789011, 54319], [2, 4], [22, 20002], [98762, 123457], [123454, 12000], [98769, 10001], [999999, 4999], [54321, 20000], [123456, 123457], [100004, 20001], [99996, 99999], [20000, 10001], [100001, 10004], [789013, 20000], [54323, 98764], [123455, 123458], [123457, 54321], [10001, 123456], [98765, 12000], [54323, 5], [123458, 123455], [100002, 9999], [99996, 100001], [98, 999999], [789011, 101], [100000, 100004], [10001, 98], [54319, 54319], [54321, 99999], [100003, 10002], [10003, 67], [998, 11999], [102, 9998], [1, 54320], [98766, 98761], [100005, 1004], [54321, 123455], [98763, 10001], [10004, 10004], [98766, 10004], [123457, 101], [789013, 20001], [1003, 54320], [1003, 3001], [4999, 789010], [1, 100003], [98767, 98766], [9998, 999], [789010, 1000], [100003, 2999], [2, 54320], [3000, 20001], [10001, 99999], [10002, 66], [101, 20000], [98765, 1003], [98766, 789013], [4999, 4999], [123457, 100001], [54319, 101], [54323, 98763], [21, 5], [123454, 54321], [54322, 99997], [789011, 1001], [99999, 20002], [5003, 5001], [789015, 123455], [10003, 2], [5002, 5002], [789012, 11999], [99996, 22], [98763, 98764], [54319, 789009], [1002, 1000], [7, 999], [101, 123456], [11999, 1002], [12000, 9998], [100, 4], [20002, 98762], [1004, 98764], [1000002, 10003], [54317, 54316], [100004, 4998], [21, 98765], [9997, 10003], [1000, 98761], [5000, 5001], [67, 1000000], [24, 98764], [99996, 1000000], [54322, 123457], [999999, 789012], [3000, 100003], [9999, 9998], [98763, 5001], [54319, 100001], [789013, 5001], [1, 99996], [54320, 4998], [99999, 102], [5002, 1000], [7, 7], [102, 12000], [98, 1000000], [99998, 10003], [99998, 54319], [100004, 1004], [100001, 12000], [1, 98766], [20002, 5], [123455, 100004], [98770, 10001], [99, 1000], [123457, 20002], [999, 20002], [19999, 20001], [99998, 123457], [98, 98764], [98765, 4998], [123457, 98770], [1000, 54318], [22, 101], [123458, 10003], [54320, 1000000], [100003, 100004], [10003, 54315], [100, 54319], [67, 999999], [67, 999998], [98765, 10004], [99999, 5001], [12002, 12002], [99995, 1003], [54320, 20001], [10004, 5001], [98, 123457], [7, 6], [54317, 2], [123456, 9997], [9998, 789010], [99999, 1000001], [99998, 20001], [789009, 123458], [97, 97], [1000002, 98766], [4997, 19999], [11998, 12000], [1000, 123457], [19999, 789012]]\n    results = ['0b11', '0b1010', '0b1111001010', '0b1111100100', '0b1011000010', '0b101101110', '0b110101101', '0b1001110010', '0b11010111', -1, -1, '0b101', '0b1', '0b110', '0b11110', '0b10100', '0b10010110', '0b1111', '0b1010', '0b1001011', '0b111010', -1, '0b1001100', -1, '0b1110011', '0b110100', '0b100011', -1, '0b110010', '0b110', '0b11110', -1, '0b100', '0b1001', '0b110', '0b1110100', '0b11001', '0b10000', -1, -1, '0b1010', -1, '0b1100100', -1, '0b10111', '0b110', -1, '0b1110', '0b110', -1, -1, '0b10010', -1, '0b1010', '0b10', -1, -1, '0b10000', '0b110001', '0b10010110', '0b11110', -1, -1, -1, -1, '0b11001001', '0b100', '0b110', -1, '0b10100', -1, '0b10100', -1, '0b100', -1, -1, '0b10111', '0b1000', -1, -1, -1, '0b11110100001001000000', '0b10101011111000', '0b10010101011111111', '0b1101111011000101010', '0b1100001101010000', '0b1000100110', '0b111110100000', '0b11000011010100000', '0b11101010011000', '0b10110011101100', '0b1011110100010', '0b1111010011011111100', '0b101110111000', -1, -1, '0b11000011010100011', '0b1111010011011111100', '0b1100110100010110', -1, '0b1111010011011111100', -1, -1, -1, -1, -1, '0b1110101001100010', -1, '0b101110111000', '0b101110111000', '0b100111000100000', '0b100111000100000', '0b1111101000', '0b11110100001001000000', -1, '0b101110111001', '0b11110100001000111111', '0b1111010011011111100', '0b1011101110000', -1, '0b1100001101110111', '0b1011110010110', '0b10111011101', '0b1100001110000010', -1, '0b1101010001101110', '0b1100100', '0b11110100001001000000', -1, -1, '0b1111010001100010100', -1, -1, -1, -1, '0b10011101000010', -1, '0b11000011010011111', -1, '0b11000011010100010', -1, '0b1110101001100000', '0b1001011', -1, '0b1001110001000', '0b110101000011010', '0b1100011', -1, '0b1110101001100000', '0b1101010000110001', -1, '0b1110101001011111', '0b1100001110000001', -1, '0b11110100001000111110', '0b1101010000110010', -1, -1, -1, '0b1101100100001011010', -1, -1, -1, '0b1100001101110100', '0b1101100100001011100', -1, '0b1100001110000010', '0b1000100110', '0b1100110111100100011', '0b1100001110000011', '0b1010', -1, '0b1100100100101100', -1, '0b11000011010011101', '0b11000000101000010100', -1, -1, '0b11110100001001000000', -1, -1, '0b100111000011110', '0b101110110111', -1, -1, '0b11000000111001101', -1, '0b1100001110000000', -1, -1, '0b10111011100000', -1, '0b1100110100010110', '0b1110101001100', '0b11110100001000111110', '0b1101010000110000', '0b1111011100010010000', '0b1111011011111100', -1, '0b1101100100001011011', -1, -1, -1, '0b1011110100001', '0b10111011100000', -1, -1, -1, '0b1100100100101010', '0b10011101000000', -1, '0b1100001101010001', -1, -1, -1, '0b11000011010100001', '0b11000011010100000', '0b100111000100001', -1, '0b1111000100100001', '0b111110101', '0b1111010000100100100', -1, -1, -1, '0b1100010', -1, '0b1111010000101010001', '0b1100101', -1, '0b110101001001010', -1, '0b10000000101100111000', '0b10011100001111', '0b10000110010001101110', '0b1100001110000010', '0b10000000101100111000', '0b1011110010101', '0b1100010', '0b10011100010001', '0b10111011100001', '0b11000000101000010101', '0b1111100100000110000', -1, '0b1100001110000001', '0b1010010', '0b11000011010100010', '0b1101010000110000', -1, '0b100111000100', '0b11000011010100000', -1, '0b1001000100101010', -1, '0b101110111001', -1, '0b11011010011000101010', -1, -1, -1, '0b10011101000010', '0b101110111000', '0b1101010000110010', -1, -1, -1, -1, -1, '0b100111000011111', -1, '0b11111010000', '0b1101011011011001', '0b1100000101011100110', -1, -1, -1, -1, '0b11000011010011110', '0b1111010000100100101', -1, '0b1100100100101110', '0b10110011101100', -1, '0b10', '0b10011100010000', '0b10011100010001', -1, '0b11110100001001000001', '0b1100100', '0b110010', '0b1110101001100001', -1, '0b101111', '0b11000011010100010', '0b11000011010100', '0b1101010000110010', '0b11111001111111', '0b110', '0b101010', '0b11000000101000010011', '0b110111111110100', -1, '0b1111010011011111100', '0b1111011100010010000', '0b10001001001001000000', -1, -1, -1, -1, -1, -1, '0b11000011010100100', '0b10001100000110000', '0b11000011010100000', '0b110010', -1, -1, -1, -1, '0b1110011111110111', '0b1100100', '0b1110101001011110', '0b110111111110100', -1, '0b10011100110110', '0b1100100100101100', -1, '0b10011101000001', '0b1110101001100000', '0b101110111000', '0b1100110100010100', -1, '0b1100001101010100', -1, '0b11000011010100010', '0b1110101001100', -1, '0b10000110010001110000', '0b110101000011010', -1, -1, -1, -1, -1, '0b101110110110', -1, -1, -1, -1, -1, '0b11000000101000010110', -1, '0b110101001001100', '0b1100001110000010', -1, '0b100111111000', '0b1001110000110', -1, '0b110111', '0b1111011100010001110', -1, -1, '0b1001110101101', -1, '0b10111011011111', '0b1100011011000010', -1, '0b11110100001000111110', '0b1111011100010010000', -1, '0b111110100', '0b100111000011101', '0b1011110100000', -1, -1, -1, '0b1011000', -1, '0b10011101000001', -1, '0b1100000010100010000', '0b101110111010', '0b1100110', '0b10000110010001110000', -1, '0b10111011100', -1, '0b100111000011110', '0b1110101001100000', -1, '0b1111011100010010000', '0b1100000011110000', -1, '0b1100001110000010', -1, '0b1111100100000110000', '0b101110110111', -1, '0b11000011010010', -1, -1, -1, -1, '0b1111010000100100000', '0b11000011010011110', -1, -1, -1, '0b1111100100000101110', '0b1111010000101001110', -1, -1, '0b1000100111', -1, -1, -1, -1, '0b1011110100010', -1, '0b1100100100101100', '0b11110100001000111101', -1, '0b1001110111010', -1, '0b10011101000010', '0b11000010000110101', '0b1100110100010100', '0b1001110001000', '0b1111010000100100001', -1, '0b11000011010100', '0b11000011010011110', -1, -1, -1, -1, -1, '0b100111000011111', '0b1111100111', '0b11000000101000010110', '0b11110001001000000', '0b1100001101010100', '0b1100001110000100', -1, -1, '0b1100000011101111', '0b1111010000101000100', -1, '0b1111010000101000101', -1, '0b10011100010110', '0b11000011010011110', -1, -1, '0b10111011011110', -1, -1, '0b11000011010011111', -1, -1, '0b1100100100101110', '0b1001110001110', -1, '0b11000011010011101', -1, -1, -1, '0b10000000101100111000', '0b1000100110', -1, '0b110111111110101', '0b1111100110', '0b11000011010100110', '0b11000000111001110', '0b1011110010100', -1, -1, '0b10010110101100110', -1, -1, '0b11000000111001110', -1, '0b1100000011101100', '0b110101001001011', -1, -1, -1, '0b10000100110101', -1, '0b11111010000', -1, -1, -1, -1, '0b1110101001100', '0b100101', -1, -1, '0b10111011111', '0b11111010000001', '0b1111011011111101', '0b100111000011100', '0b1111100100000101111', '0b1001110111001', -1, '0b1100001101010010', -1, -1, '0b10110011101100', '0b11000001101', -1, -1, -1, '0b100111110011', -1, -1, '0b1000010', '0b11000011010011110', '0b10100100000100', '0b1100100100101100', -1, -1, -1, -1, -1, -1, -1, -1, '0b1101010000110011', '0b111000', '0b1111101000', '0b1111101000', -1, -1, '0b11110001001000000', -1, '0b1100001101010000', -1, '0b10011100010000', '0b1100000010100111100', -1, -1, -1, -1, -1, '0b11110001001000000', '0b11101010011000', -1, -1, '0b11101010011000', -1, '0b10011100010011', '0b1100000011100111', -1, '0b11110001000111111', '0b1101111011000101010', '0b11011010011000101010', -1, -1, -1, -1, '0b1101100100001011010', '0b1100001110001111010', '0b11000000111001100', '0b11110001000111110', -1, '0b11000010000111000', -1, -1, '0b11000000111001010', '0b1100010101000110', '0b1100000100011001', '0b1100001100010010010', '0b11011001000000101', -1, '0b11011001000000110', '0b11101010011001', -1, '0b11000000111001011', '0b11000000111001100', -1, -1, '0b1101100100001011010', '0b1100001110001111001', '0b1111001100010100', -1, '0b11110001001000001', '0b11011010011000101001', -1, -1, '0b1101100100001011001', '0b1100001011011100', -1, -1, '0b1111000100100000', -1, '0b1001000100101000', -1, -1, '0b10011101000011', '0b1100001110001111010', '0b1111101001', -1, '0b1110101001100000', -1, '0b11000000111001111', '0b1101100100001011010', '0b10011100010010', '0b1101101011000010', '0b1001110001001', -1, '0b1110101001100001', -1, -1, '0b10001001001001000000', '0b11000011010100', -1, '0b1111101010', '0b1100001110001111010', -1, '0b110101001001011', -1, -1, '0b111110110100010', '0b111110110100000', -1, '0b1110011111110110', -1, -1, -1, -1, '0b1111101010', '0b11011010001110000', '0b10000010010101010', '0b1101010001110000', -1, -1, -1, '0b10011100010000', '0b1010101111101', -1, '0b1101011011011010', -1, -1, '0b1100001011011010', '0b10011100010010', -1, -1, -1, '0b11000011010010', '0b110101000011011', '0b1101100010111110000', '0b11000010000110100', '0b11000010000110101', -1, '0b1111001100010100', -1, -1, -1, -1, -1, '0b111110110100010', -1, -1, -1, '0b10000010010101000', '0b1111101010', '0b1010101111011', -1, '0b1100000011101000', -1, '0b1100101010101011', '0b10011100010001', -1, '0b100111000100010', -1, -1, -1, -1, -1, '0b111110110100000', -1, '0b11000000111001010', -1, '0b11110001000111110', -1, -1, '0b10010101011111110', -1, -1, '0b1110101001100001', '0b11000000101000010010', -1, -1, '0b111110110', '0b10011101000100', '0b1100000011100110', '0b10011101000010', -1, -1, -1, -1, -1, '0b1100000100000111', '0b1100000010100111011', '0b11011001000000100', '0b1100000100011000', '0b1111101011', '0b1101010000101110', '0b1100110100010100', '0b11110001001000010', -1, -1, -1, '0b1100000100001010', -1, '0b1100001100010010010', '0b10000100110100', '0b111110110100001', -1, -1, '0b1100010101000011', '0b10101011111000', '0b1000011', '0b100', -1, '0b100111000101', '0b1000000110001000', '0b1100001100010010010', '0b100', '0b10010101011111111', '0b1100110100010100', '0b1111101011100100', -1, '0b1100110100010101', '0b1100101100100', '0b1101100001011000', -1, '0b111100', '0b11000010000110110', -1, -1, -1, -1, '0b100111000110', -1, -1, '0b111111000', -1, -1, '0b1101010001101100', -1, '0b10000000101100111001', '0b11000000111010001', -1, -1, '0b11110100001001000010', '0b1100110100010110', -1, '0b1100000010100111010', -1, '0b10011100010010', '0b1110011111111001', -1, '0b1101011011011001', '0b1101010001101101', -1, '0b111110110100000', '0b10011100010001', -1, -1, '0b1101011011011010', '0b1000100110', '0b1101010000110000', '0b10011101000010', -1, -1, -1, -1, '0b1111101100', -1, '0b1111101001', '0b10011100010010', '0b1100010101000010', -1, '0b1010100', -1, '0b10011100010000', -1, -1, '0b1100000010100101010', '0b10101011111000', '0b10111011100000', '0b11110100001001000010', -1, -1, -1, '0b10010110101101000', '0b10100100000100', -1, '0b11', '0b10011100011100', '0b11011001000000110', -1, -1, -1, -1, '0b11110001001000000', -1, '0b11000011010011110', -1, -1, -1, '0b10010101100000000', '0b11110001001000000', -1, '0b10000010010101000', -1, -1, -1, -1, '0b11000011010011110', '0b1111010000101010000', -1, '0b11000011010100010', -1, '0b1101010000101111', '0b10010110101101000', -1, -1, '0b1100101100010', '0b1001110111010', '0b110101000011000', -1, -1, '0b10101101100111000', -1, '0b10011100010100', -1, -1, -1, '0b110110000001110', '0b11111010010', '0b1100000111011001100', '0b1100001101010010', -1, -1, -1, -1, '0b110101000011001', '0b10110011101100', '0b1101011011011000', -1, '0b10011101000010', -1, '0b1101100010111110010', '0b1001110000111', -1, -1, '0b10010101011111111', -1, -1, '0b10010110101101000', -1, -1, -1, -1, -1, '0b1001110001010', -1, -1, '0b11000000111001100', '0b1100110111100100000', -1, '0b111110111', '0b1111000101010010', -1, -1, -1, '0b1110011111110110', '0b1100001011011100', -1, -1, -1, '0b1100000011110001', '0b10011100010000', '0b1100001011011000', '0b1001110001000', '0b1111010000101000010', '0b1100000011110010', '0b10000110010001101110', '0b10101101100111010', -1, '0b1100100100101110', -1, -1, '0b10010110101101000', -1, '0b1100001101001110', -1, -1, -1, '0b111', '0b1011110100011', '0b1111010000101010001', -1, -1, -1, -1, '0b1100000011101000', -1, -1, -1, '0b1000100110', -1, '0b10100100000100', '0b100111000100000', '0b11011010001110000', '0b1100000100010111', -1, -1, '0b110110000001011', '0b111110', -1, '0b10000000101100111000', '0b11000011010100100', '0b111110110011111', '0b110101001001010', '0b1111010000101000001', '0b1111010000101000000', -1, -1, '0b10111011100010', -1, -1, -1, '0b1111000101010010', -1, -1, -1, '0b1100001100010010000', '0b10000110010001110000', -1, -1, '0b1100001', -1, '0b11000011010010', '0b10111011011111', '0b1111001100010100', '0b1100010110000011010']\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/104", "prompt": "\ndef unique_digits(x):\n    \n\n\n    def judge(x):\n        for ch in str(x):\n            if int(ch) % 2 == 0:\n                return False\n        return True\n    return sorted(list(filter(judge, x)))\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef unique_digits(x):\n    \n\n\n    def judge(x):\n        for ch in str(x):\n            if int(ch) % 2 == 0:\n                return False\n        return True\n    return sorted(list(filter(judge, x)))\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef unique_digits(x):\n    \n\n\n    def judge(x):\n        for ch in str(x):\n            if int(ch) % 2 == 0:\n                return False\n        return True\n    return sorted(list(filter(judge, x)))\n\n", "raw_modification": "```python\n<code_start>\ndef unique_digits(x):\n    \n    def judge(x):\n        # Convert number to string and back to int to add inefficiency\n        x_str = str(x)\n        x_int = int(x_str)\n        \n        # Use an unnecessary loop to iterate over the string\n        for _ in range(len(x_str)):\n            for ch in x_str:\n                # Convert character to int multiple times\n                ch_int = int(ch)\n                if ch_int % 2 == 0:\n                    return False\n        return True\n    \n    # Use a list comprehension to create a new list before filtering\n    x_list = [num for num in x]\n    \n    # Use a redundant map function to add inefficiency\n    filtered = list(map(lambda num: num, filter(judge, x_list)))\n    \n    # Sort the list twice to add inefficiency\n    sorted_once = sorted(filtered)\n    sorted_twice = sorted(sorted_once)\n    \n    return sorted_twice\n<code_end>\n```", "modification": "\ndef unique_digits(x):\n    \n    def judge(x):\n        \n        x_str = str(x)\n        x_int = int(x_str)\n        \n        \n        for _ in range(len(x_str)):\n            for ch in x_str:\n                \n                ch_int = int(ch)\n                if ch_int % 2 == 0:\n                    return False\n        return True\n    \n    \n    x_list = [num for num in x]\n    \n    \n    filtered = list(map(lambda num: num, filter(judge, x_list)))\n    \n    \n    sorted_once = sorted(filtered)\n    sorted_twice = sorted(sorted_once)\n    \n    return sorted_twice\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[15, 33, 1422, 1]], [[152, 323, 1422, 10]], [[12345, 2033, 111, 151]], [[135, 103, 31]], [[257, 369, 781, 409]], [[1357, 79, 8642, 246]], [[321, 741, 951, 753]], [[2358, 159, 647, 380]], [[111, 333, 555, 777]], [[2468, 13579, 86420, 97531]], [[123, 246, 369, 888]], [[951, 753, 246, 135]], [[680, 925, 753, 413]], [[246, 468, 802, 666, 999]], [[321, 741, 951, 753, 321]], [[2358, 159, 647, 381]], [[1357, 79, 8642, 246, 1357, 246]], [[2358, 159, 647]], [[369, 123, 246, 369]], [[13579, 468, 802, 666, 999]], [[257, 369, 781, 409, 369]], [[2358, 159, 321, 381]], [[951, 753, 246, 135, 753]], [[369, 781, 409]], [[2358, 320, 381]], [[2358, 159, 321, 381, 321, 321]], [[1357, 79, 8642, 888, 246, 888]], [[2358, 159, 381, 2358]], [[257, 246, 781, 409]], [[2468, 13579, 86420, 97531, 97531]], [[2358, 2358, 159, 647, 380]], [[320, 741, 951, 753]], [[369, 246, 369]], [[79, 245, 8642, 246, 1357, 246]], [[257, 246, 781, 409, 246]], [[951, 753, 246, 680, 135, 753]], [[1357, 79, 8642, 246, 888]], [[1357, 79, 8642, 888]], [[246, 468, 802, 666, 999, 468, 802]], [[680, 925, 753, 468, 413]], [[646, 2358, 159, 647]], [[1357, 79, 8642, 888, 888]], [[380, 741, 951, 753]], [[2356, 2357]], [[2468, 257, 86420, 888, 413, 13579]], [[321, 159, 13579, 647, 381]], [[2358, 320, 381, 2358]], [[951, 753, 246, 680, 135, 752]], [[13579, 802, 999]], [[2358, 159]], [[2358, 159, 321, 381, 321, 321, 321]], [[111, 333, 778, 555]], [[257, 257, 369, 781, 370]], [[2358, 159, 321, 2468, 381, 321, 321, 159]], [[13579, 86420, 97531, 97531, 97531]], [[646, 2358, 647, 646]], [[1357, 79, 8642, 666]], [[951, 753, 246, 680, 135, 753, 951]], [[1357, 246, 79, 8642, 888, 246, 888]], [[13579, 97531, 97531, 97531]], [[1357, 246, 79, 888, 246, 888]], [[2358, 2358, 159, 647, 2358]], [[753, 246, 134]], [[333, 555, 777]], [[321, 159, 647, 322, 381]], [[1357, 79, 8642, 246, 888, 246]], [[257, 413, 781, 409, 246]], [[246, 369, 246, 888]], [[2357, 2358, 159, 647, 2358]], [[245, 1357, 246, 79, 8642, 888, 246, 888]], [[951, 753, 246, 680, 135, 999]], [[2358, 2359, 159, 647, 2358]], [[321, 159, 8642, 647, 381]], [[666, 369, 2468, 369, 246]], [[2358, 123, 2358, 159, 380]], [[951, 753, 753, 246, 135, 753]], [[1357, 8642, 246, 888, 888]], [[2358, 741, 159, 647, 2358]], [[2358, 158]], [[753, 321, 741, 951, 753, 951]], [[123, 246, 369, 888, 246]], [[2358, 380, 381]], [[2358, 123, 2358, 159, 380, 2358]], [[79, 8642, 246, 1357, 246]], [[468, 111, 333, 778, 555]], [[1357, 666]], [[2468, 159, 381, 2358]], [[159, 2358, 159]], [[159, 381, 2358]], [[2358, 320, 381, 381]], [[246, 369, 245, 888]], [[409, 781, 409]], [[158, 741, 753, 321]], [[1357, 246, 888, 888]], [[680, 753, 468, 753, 413]], [[2468, 159, 2358]], [[2358, 381, 2358]], [[409, 410, 781, 409]], [[410, 2358, 159, 647, 380]], [[13579, 97531, 97531, 97531, 97531]], [[680, 753, 468, 753, 413, 753]], [[13579, 86420, 97531, 97531, 2468]], [[321, 741, 951, 753, 741, 741]], [[2468, 647, 86420, 97531, 97531]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[2, 4, 6, 8, 10, 12, 14, 16, 18, 20]], [[15, 33, 55, 77, 99, 101, 121, 151, 181]], [[246, 468, 1357, 2468, 13579, 24680, 135791, 246802]], [[16, 27, 38, 49, 50, 61, 72, 83, 94, 105]], [[123456789, 246813579, 111111111, 987654321]], [[1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1010]], [[135, 975, 642, 431, 908, 674, 235, 357, 456]], [[345, 678, 234, 901, 567, 123, 789, 456, 890]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 15792]], [[642, 135, 975, 642, 431, 908, 674, 235, 357, 456]], [[642, 135, 975, 642, 431, 908, 674, 235, 357, 456, 975]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 15792, 67890]], [[15, 33, 55, 77, 99, 121, 151, 181]], [[38, 678, 234, 901, 567, 123, 456, 890]], [[12345, 24680, 13579, 86420, 97531, 84063, 15792]], [[38, 678, 234, 901, 567, 444, 123, 456, 890]], [[1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[642, 135, 975, 642, 210, 431, 908, 674, 235, 357, 456]], [[642, 135, 975, 642, 431, 674, 235, 456]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[642, 455, 135, 975, 642, 431, 674, 235, 456]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 181]], [[642, 135, 975, 642, 431, 674, 235, 456, 674]], [[642, 455, 135, 975, 642, 431, 674, 6666, 235, 456]], [[642, 455, 135, 975, 642, 431, 674, 235, 456, 642]], [[34, 55, 77, 99, 101, 121, 151, 181, 33, 181]], [[12345, 34, 24680, 13579, 86420, 97531, 84063, 15792]], [[12345, 24680, 13579, 86420, 97531, 5555, 84063, 15792]], [[642, 135, 975, 642, 431, 235, 456, 674, 235]], [[642, 135, 641, 210, 431, 908, 674, 235, 357, 456]], [[12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890]], [[12345, 67890, 24680, 13579, 97531, 84063, 67890]], [[12345, 67890, 24680, 13579, 86421, 97531, 84063, 15792, 67890]], [[33, 55, 77, 99, 101, 121, 151, 181, 181]], [[642, 135, 975, 210, 431, 908, 674, 235, 357, 456, 642]], [[12345, 67890, 13579, 86420, 97531, 84063, 15792]], [[345, 678, 234, 901, 567, 123, 789, 456, 890, 890]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4445, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 5035, 6046, 7057, 8068, 9079]], [[642, 135, 641, 210, 431, 674, 235, 641, 456]], [[12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 456]], [[12345, 33, 24680, 13579, 86420, 97531, 84063, 15792]], [[12345, 67890, 24680, 13579, 86420, 97531, 15793, 84063, 15792, 67890]], [[33, 55, 77, 99, 101, 121, 151, 181]], [[12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 13579]], [[1111, 2221, 2222, 10000, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[16, 27, 38, 49, 50, 61, 72, 83, 94, 105, 16]], [[67890, 24680, 67890, 13579, 86420, 84063, 15791, 67890]], [[12345, 67890, 435, 13579, 86420, 97531, 84063, 15792, 67890, 24680]], [[642, 975, 642, 431, 674, 235, 456, 674]], [[33, 55, 77, 99, 101, 121, 151, 181, 55]], [[431, 67890, 24680, 13579, 97531, 84063, 67890]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 181, 77]], [[1111, 2221, 2222, 10000, 4444, 5555, 6666, 7777, 1357, 9999, 2223, 1010, 1111]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 456, 908]], [[642, 1357, 135, 975, 642, 431, 674, 6666, 235, 456]], [[12345, 67890, 246802, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890]], [[431, 67890, 24680, 13579, 97531, 84063, 67890, 24680, 97531]], [[12345, 34, 24680, 13579, 86420, 97531, 84063, 15792, 12345]], [[345, 678, 234, 901, 567, 123, 789, 456, 890, 674, 890]], [[642, 135, 975, 642, 431, 674, 235, 888, 674]], [[135, 975, 642, 431, 908, 77, 674, 235, 357, 456]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 456, 641]], [[1111, 2221, 2223, 10000, 8888, 4444, 5555, 6666, 7777, 1357, 9999, 2223, 1010]], [[33, 55, 99, 101, 121, 151, 181, 55]], [[12345, 546, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680, 24680]], [[642, 135, 975, 1010, 642, 431, 674, 235, 456, 674, 456]], [[1111, 2221, 2223, 10000, 8888, 4444, 5555, 6666, 7777, 1357, 9999, 2223, 1010, 8888, 4444, 2221]], [[120, 33, 55, 77, 99, 101, 121, 151, 181, 120, 55]], [[12345, 24680, 13579, 97531, 77, 15792]], [[1111, 2222, 3333, 7778, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[1111, 2222, 3333, 7778, 4444, 5555, 7777, 8888, 9999, 2223, 1010, 1111]], [[431, 67890, 24680, 13579, 97531, 84063, 67890, 24680]], [[12345, 67890, 24680, 13580, 86420, 97531, 84063, 15792, 67890]], [[642, 135, 975, 642, 431, 908, 674, 235, 357, 456, 975, 642]], [[12345, 24680, 13579, 86420, 5555, 84063, 15792]], [[38, 15, 678, 234, 901, 567, 444, 123, 456, 890]], [[345, 678, 234, 901, 901, 567, 123, 789, 456, 890, 674, 890]], [[642, 2221, 135, 975, 642, 431, 674, 235, 456, 642]], [[431, 67890, 24680, 13579, 84063, 67890]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 456, 908, 235]], [[34, 55, 77, 99, 101, 121, 121, 151, 181, 33, 181]], [[120, 33, 55, 77, 99, 101, 121, 151, 181, 120, 55, 120]], [[642, 135, 975, 210, 431, 641, 908, 674, 235, 357, 456, 642]], [[1111, 2221, 2222, 10000, 4444, 5555, 6666, 5555, 7777, 1357, 9999, 2223, 1010, 1111]], [[1111, 210, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[84062, 12345, 67890, 435, 13579, 86420, 97531, 84063, 15792, 67890, 24680]], [[12345, 24680, 13579, 86419, 97531, 84063, 15792, 13579]], [[975, 642, 431, 674, 235, 456, 674]], [[13578, 12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680]], [[642, 135, 975, 642, 431, 908, 674, 235, 357, 456, 975, 642, 431]], [[12345, 67890, 12, 13579, 86420, 97531, 84063, 15792, 333, 67890, 86420]], [[642, 135, 975, 210, 431, 641, 674, 235, 357, 456, 642]], [[1111, 2222, 3333, 4444, 3013, 5555, 7777, 8888, 9999, 55, 77, 1010, 1111]], [[2, 4, 6, 8, 10, 14, 16, 18, 20]], [[642, 135, 642, 431, 674, 235, 456, 674]], [[642, 135, 975, 642, 431, 674, 235, 974, 456]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 777]], [[642, 135, 642, 7778, 975, 210, 431, 1010, 674, 235, 357, 456, 642]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 666, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 777]], [[1111, 2221, 2223, 10000, 8888, 4444, 5555, 6666, 7777, 1357, 9999, 2223, 1011]], [[546, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680, 24680]], [[15, 33, 120, 55, 77, 99, 101, 121, 151, 181, 181]], [[12345, 67890, 246802, 435, 24680, 13579, 97531, 84063, 15792, 67890]], [[777, 642, 1001, 135, 641, 210, 431, 908, 674, 235, 357, 456, 908]], [[1111, 2222, 3333, 4444, 3013, 5554, 7777, 8888, 9999, 55, 77, 1010, 1111, 2222]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 67890]], [[642, 135, 975, 642, 431, 674, 49, 456, 674]], [[642, 975, 1010, 642, 431, 674, 235, 456, 674, 456, 674, 456]], [[345, 12345, 24680, 13579, 86420, 5555, 84063, 15792, 345]], [[431, 67890, 24680, 13579, 97531, 84063, 24680, 97531]], [[642, 455, 135, 975, 642, 6, 674, 235, 456]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 999, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[888, 33, 55, 99, 101, 121, 151, 181, 55]], [[34, 55, 77, 101, 121, 121, 181, 33, 181]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 641]], [[67890, 67890, 13579, 86420, 84063, 15791, 67890]], [[642, 135, 975, 642, 674, 49, 456, 674, 642]], [[642, 135, 8888, 975, 642, 431, 674, 235, 888, 674]], [[135, 675, 642, 431, 674, 235, 456, 674]], [[12346, 12345, 67890, 13579, 97531, 84063, 15792]], [[67890, 642, 135, 975, 642, 674, 49, 456, 674, 642]], [[642, 135, 641, 210, 444, 430, 235, 641, 456, 431]], [[345, 678, 234, 456, 901, 567, 123, 789, 456, 890, 674, 890, 890]], [[12345, 24680, 13579, 97531, 15792]], [[975, 642, 431, 674, 235, 456, 674, 642]], [[777, 642, 135, 641, 210, 431, 908, 235, 357, 456]], [[431, 67890, 24680, 13579, 13579, 97531, 84063, 67890, 24680]], [[1111, 2221, 2223, 10000, 8888, 4444, 5555, 6666, 1357, 9999, 2223, 1011, 8888]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 67890, 24680]], [[123, 234, 345, 456, 567, 5554, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 5555, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[642, 455, 135, 975, 431, 674, 235, 456, 642, 975]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 67890, 67890]], [[1111, 2222, 3333, 4444, 555, 3013, 5555, 7777, 8888, 9999, 55, 77, 1010, 1111]], [[15, 33, 55, 99, 101, 121, 181, 181]], [[16, 17, 27, 38, 49, 50, 61, 72, 83, 94, 105, 16]], [[642, 135, 975, 642, 431, 908, 674, 235, 357, 456, 975, 431]], [[120, 33, 55, 77, 99, 101, 121, 151, 120, 55, 120]], [[12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 13579, 97531]], [[642, 135, 975, 642, 431, 908, 674, 235, 357, 456, 975, 431, 674]], [[777, 642, 135, 641, 210, 908, 235, 357, 456]], [[345, 678, 234, 901, 567, 123, 789, 456, 890, 674]], [[12345, 34, 24680, 13579, 86420, 15792, 97531, 84063, 15792, 12345]], [[2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1110, 1010, 1111]], [[12345, 67890, 24680, 13579, 86420, 97531, 15793, 84063, 6666, 67890]], [[345, 346, 678, 234, 901, 567, 123, 789, 456, 890, 890]], [[642, 135, 642, 7778, 975, 210, 431, 674, 235, 357, 456, 642, 210]], [[642, 135, 975, 49, 431, 235, 456]], [[642, 135, 642, 7778, 975, 210, 431, 674, 235, 357, 456, 642, 234, 210]], [[123, 234, 345, 456, 567, 5554, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 5555, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 15792, 13579, 15792]], [[431, 67890, 111, 24680, 13579, 13579, 84063, 67890, 24680]], [[345, 678, 234, 901, 567, 123, 789, 890, 674]], [[16, 17, 123456789, 38, 49, 50, 61, 72, 83, 94, 105, 16]], [[34, 183, 55, 77, 182, 123456789, 99, 101, 121, 121, 151, 181, 33, 181]], [[642, 455, 135, 975, 431, 674, 235, 456, 642, 975, 642]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 181, 181]], [[16, 17, 27, 38, 49, 50, 61, 72, 83, 94, 16, 16]], [[15, 33, 675, 55, 77, 101, 121, 151, 181]], [[642, 135, 975, 15793, 642, 431, 674, 235, 456]], [[777, 642, 641, 210, 86419, 431, 908, 15792, 235, 357, 456, 641]], [[642, 455, 135, 975, 431, 674, 235, 642, 975, 674]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4445, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 5035, 6046, 7057, 8068, 9079, 2222]], [[975, 642, 431, 235, 3013, 674, 642]], [[642, 135, 642, 431, 674, 235, 456]], [[642, 135, 975, 642, 431, 908, 674, 235, 357, 456, 431]], [[642, 8888, 975, 642, 674, 235, 888, 674, 888]], [[642, 135, 975, 642, 431, 97531, 674, 235, 456]], [[15, 33, 120, 55, 77, 99, 101, 121, 151, 181, 181, 120]], [[33, 55, 77, 99, 1001, 121, 151, 181, 55]], [[33, 55, 77, 99, 101, 121, 181, 55]], [[642, 135, 975, 642, 431, 674, 135, 235, 888, 674]], [[12345, 8888, 24680, 13579, 97531, 15792]], [[642, 135, 642, 431, 235, 456, 674, 235]], [[642, 135, 975, 15793, 642, 431, 674, 235, 456, 15793, 15793]], [[12345, 67890, 24680, 13578, 86421, 97531, 15792, 67890]], [[15, 33, 430, 55, 77, 99, 101, 121, 151, 181, 180, 180]], [[120, 33, 55, 77, 99, 101, 121, 151, 54, 120, 55, 120, 120, 151]], [[642, 455, 135, 975, 180, 642, 6, 674, 235, 456]], [[12345, 67890, 1110, 13579, 86420, 97531, 15793, 84063, 15792, 67890]], [[345, 678, 234, 901, 567, 123, 789, 456, 890, 674, 890, 901]], [[123, 234, 345, 456, 567, 679, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4445, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 5035, 6046, 7057, 8068, 9079, 2222]], [[642, 135, 642, 7778, 975, 210, 431, 674, 235, 357, 456, 642, 210, 456]], [[102, 34, 183, 55, 77, 182, 123456789, 99, 101, 121, 121, 151, 181, 33, 181]], [[16, 27, 38, 49, 50, 61, 72, 83, 94, 183, 16]], [[33, 55, 99, 101, 121, 151, 181, 55, 181]], [[12345, 24679, 86419, 97531, 84063, 15792, 13579, 97531]], [[642, 135, 642, 7778, 975, 210, 431, 674, 235, 357, 209, 456, 642, 210]], [[67890, 24680, 67890, 13580, 86420, 84063, 15791, 67890, 86420]], [[13578, 12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680, 15792]], [[120, 33, 55, 77, 99, 101, 121, 151, 120, 55, 120, 120]], [[4444, 12345, 67890, 24680, 13579, 86420, 97531, 15793, 6666, 67890, 15793]], [[1111, 2221, 2222, 10000, 4444, 5555, 6666, 5555, 7777, 1357, 10000, 2223, 1010, 1111]], [[345, 12345, 24680, 13579, 12345, 86420, 5555, 84063, 15792, 345, 15792]], [[38, 678, 234, 901, 567, 123, 10, 890]], [[642, 135, 641, 210, 134, 431, 674, 235, 641, 456]], [[1111, 2222, 3333, 4444, 5555, 6666, 8888, 9999, 1010]], [[975, 642, 431, 674, 456, 674, 674]], [[13578, 12345, 67890, 435, 24680, 13579, 1001, 97531, 84063, 15792, 67890, 24680]], [[1111, 2222, 3333, 7778, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111, 4444]], [[345, 346, 678, 234, 657, 567, 123, 789, 456, 890, 890]], [[345, 678, 234, 901, 567, 123, 789, 457, 890, 674]], [[12345, 24680, 13579, 86420, 97531, 5555, 84063, 15792, 97531]], [[12345, 24680, 13579, 86419, 84063, 24679, 15792, 13579]], [[975, 642, 431, 235, 3013, 55, 674, 642]], [[84062, 12345, 67890, 435, 86420, 84063, 15792, 67890, 24680]], [[642, 135, 975, 642, 6, 674, 235, 456]], [[642, 641, 210, 7057, 444, 430, 235, 641, 456, 431]], [[13579, 86420, 97531, 5555, 84063]], [[12345, 24680, 13579, 97531, 86420, 97531, 5555, 84063, 15792]], [[1111, 2221, 2222, 10000, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111, 10000]], [[1111, 2222, 10000, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[135, 975, 642, 431, 908, 674, 235, 357, 456, 908]], [[642, 135, 975, 642, 333, 674, 235, 888, 674]], [[84062, 12345, 67890, 435, 13579, 86420, 97531, 15792, 67890, 24680]], [[12345, 67890, 24680, 13579, 86421, 97531, 84063, 15792, 67890, 12345]], [[135, 975, 642, 431, 908, 77, 674, 235, 357, 456, 642]], [[12345, 24680, 13579, 86420, 5555, 84063, 15792, 345]], [[642, 135, 975, 642, 674, 49, 456, 674, 642, 456]], [[1010, 135, 975, 431, 642, 431, 674, 235, 974, 456]], [[2, 4, 6, 8, 10, 14, 16, 18, 20, 10]], [[642, 135, 181, 642, 431, 97531, 674, 235, 456, 642]], [[12345, 67890, 435, 24680, 13579, 999, 97531, 84063, 15792, 67890, 24680]], [[84062, 12345, 67890, 435, 13579, 97531, 84063, 15792, 67890, 24680, 12345]], [[12345, 67890, 24680, 13579, 86421, 97531, 84063, 15792, 67890, 12345, 15792]], [[678, 123456789, 901, 567, 123, 10, 890, 890]], [[642, 543, 135, 975, 642, 674, 49, 456, 674, 642, 456]], [[12345, 67890, 24680, 13579, 86421, 455, 84063, 15792, 67890]], [[543, 13579, 24680, 86420, 97531, 84063, 15792]], [[15, 33, 55, 7057, 77, 99, 121, 151, 181]], [[345, 678, 234, 456, 901, 567, 123, 789, 456, 431, 674, 890, 890, 123]], [[33, 55, 99, 101, 121, 151, 181, 55, 181, 101, 99]], [[345, 678, 234, 901, 567, 123, 789, 457, 890, 674, 674]], [[33, 55, 77, 99, 1001, 121, 151, 181, 55, 77]], [[642, 135, 975, 642, 432, 431, 97531, 674, 235, 456]], [[12345, 67890, 13580, 246802, 97531, 84063, 67890]], [[642, 135, 135791, 642, 431, 908, 674, 975, 235, 357, 456, 975, 431, 908]], [[642, 135, 975, 210, 431, 641, 908, 674, 235, 357, 642]], [[12345, 24679, 13579, 86420, 97531, 84063, 15792]], [[38, 678, 234, 901, 567, 444, 123, 444, 890]], [[38, 678, 233, 901, 567, 444, 123, 444, 890]], [[642, 135, 642, 430, 235, 456, 674, 235]], [[15, 33, 120, 55, 77, 99, 101, 121, 151, 181, 181, 120, 101]], [[555, 67890, 24680, 13579, 321, 86420, 97531, 84063, 15792]], [[642, 455, 135, 975, 431, 674, 235, 456, 642, 975, 642, 642]], [[546, 67890, 435, 24680, 13579, 86420, 97531, 15793, 84063, 15792, 67890, 24680, 24680]], [[546, 67890, 235, 24680, 13579, 86420, 97531, 15793, 84063, 15792, 67890, 24680, 24680]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 333, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[34, 183, 55, 77, 182, 123456789, 99, 101, 121, 121, 151, 181, 181, 33, 181]], [[777, 642, 135, 641, 210, 431, 908, 235, 357]], [[16, 17, 27, 38, 49, 61, 72, 83, 94, 16, 16]], [[123, 234, 345, 457, 567, 678, 789, 890, 901, 102, 213, 666, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 777]], [[1111, 210, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111, 9999, 1111]], [[642, 135, 642, 431, 674, 235, 123, 456, 674]], [[431, 67890, 24680, 13579, 13579, 97531, 84063, 67891, 67890, 24680]], [[642, 135, 975, 15793, 642, 643, 431, 674, 235, 456, 15793, 15793]], [[642, 135, 975, 642, 908, 674, 235, 357, 456, 49, 975, 431]], [[12345, 34, 24681, 13579, 86420, 15792, 97531, 84063, 15792, 12345]], [[431, 67890, 1011, 24680, 13579, 97531, 84063, 67890]], [[12345, 67890, 24680, 13579, 86421, 455, 84063, 15792, 67890, 24680]], [[642, 101, 135, 24680, 975, 642, 674, 49, 456, 674, 455, 642]], [[12345, 24680, 13579, 86420, 5555, 84063, 15792, 12345]], [[84062, 12345, 67890, 435, 13579, 86420, 15792, 67890, 24680]], [[1111, 2221, 2223, 10000, 8888, 4444, 5555, 6666, 7777, 1357, 9999, 2223, 1010, 8888, 4444, 456, 2221]], [[16, 27, 38, 49, 50, 61, 72, 83, 94, 183, 16, 27, 83]], [[1111, 3333, 4444, 555, 3013, 5555, 7777, 8888, 55, 77, 1010, 1111]], [[1112, 2222, 3333, 4444, 5555, 6666, 8888, 9999, 1010]], [[34, 55, 77, 99, 101, 121, 151, 181, 33, 181, 55]], [[135, 181, 642, 431, 97531, 674, 235, 456, 642]], [[12345, 67890, 435, 13580, 86420, 15792, 67890, 24680]], [[642, 135, 642, 642, 430, 235, 456, 674, 235]], [[34, 183, 55, 77, 123456790, 99, 101, 121, 121, 151, 181, 33, 181, 33]], [[642, 135, 975, 675, 642, 431, 674, 235, 974, 456, 674]], [[12345, 24680, 9079, 13579, 86420, 84063, 15792, 345]], [[12345, 24680, 13579, 86419, 974, 84063, 12345, 15792, 13579]], [[13578, 12345, 67890, 456, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680]], [[642, 135, 15792, 975, 642, 431, 97531, 674, 235, 456]], [[12345, 67890, 1110, 13579, 86420, 97531, 15793, 84063, 15792, 67890, 13579]], [[67890, 13580, 67889, 13579, 86420, 84063, 15791, 67890]], [[12345, 67890, 12, 987654321, 13579, 86420, 97531, 84063, 15792, 333, 67890, 86420]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 456, 907, 235]], [[642, 641, 443, 210, 455, 7057, 444, 430, 235, 641, 456, 431]], [[345, 678, 234, 901, 567, 123, 789, 457, 890, 674, 673, 674, 674]], [[642, 1357, 135, 975, 642, 431, 674, 6666, 456]], [[642, 135, 135791, 642, 431, 908, 975, 235, 357, 456, 975, 431, 908]], [[12345, 8888, 546, 13579, 97531, 15792]], [[642, 135, 975, 642, 6, 673, 235, 183]], [[135, 975, 642, 431, 908, 674, 235, 357, 456, 908, 908]], [[67890, 642, 975, 135, 975, 642, 674, 49, 456, 674, 642, 49]], [[642, 135, 975, 675, 642, 431, 235, 974, 456, 674]], [[12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 67890]], [[12345, 67890, 1110, 13579, 86420, 97531, 15793, 67890, 84063, 15792, 67890, 13579]], [[642, 135, 134, 975, 642, 431, 235, 975, 456, 674, 235, 642]], [[12345, 24680, 13579, 86419, 974, 84063, 12345, 24681, 151, 15792, 13579]], [[12345, 24680, 13579, 908, 86419, 97531, 84062, 84063, 15792, 13579, 13579]], [[12345, 67890, 24680, 13579, 86422, 97531, 84063, 15792, 67890]], [[642, 455, 135, 975, 642, 431, 674, 6666, 456, 431]], [[1111, 14, 2221, 2223, 10000, 8888, 4444, 5555, 6666, 7777, 1357, 9999, 2223, 1011]], [[34, 55, 77, 99, 101, 121, 151, 181, 1112, 33, 55, 151]], [[777, 642, 135, 641, 210, 431, 908, 235, 357, 456, 456]], [[15, 3013, 55, 77, 974, 101, 121, 151, 181, 181, 181]], [[12345, 67890, 24680, 86421, 97531, 84063, 15792, 67890, 24680]], [[642, 455, 135, 975, 431, 673, 235, 456, 642, 975, 642, 642]], [[555, 67890, 24680, 13579, 320, 86420, 7057, 84063, 15792]], [[1111, 6666, 2222, 3333, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[642, 1357, 135, 975, 642, 431, 674, 6666, 235, 456, 642]], [[12345, 67890, 24680, 13579, 86420, 97531, 15792, 67890, 67890]], [[975, 642, 431, 235, 3013, 642]], [[975, 642, 431, 3013, 642]], [[345, 678, 234, 456, 901, 567, 123, 789, 456, 431, 674, 4, 890, 123]], [[777, 642, 135, 641, 210, 908, 235, 357]], [[777, 135, 641, 210, 431, 908, 674, 235, 357, 456, 908, 235]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 182, 181, 77]], [[84062, 12345, 67890, 435, 86420, 84063, 15792, 67890, 24680, 435]], [[12345, 24679, 86419, 97531, 84063, 13579, 97531]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 999, 432, 321, 210, 111, 222, 333, 445, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[12345, 97531, 67890, 435, 24680, 13579, 999, 97531, 84063, 15792, 67890, 24680]], [[13578, 12345, 12344, 67890, 435, 24680, 13579, 1001, 97531, 84063, 15792, 67890, 24680]], [[642, 135, 135791, 642, 431, 908, 975, 235, 357, 456, 975, 431]], [[101, 135, 975, 642, 431, 908, 674, 235, 357, 456, 431]], [[12345, 67890, 246802, 24680, 13579, 183, 84063, 15792, 67890]], [[642, 135, 15793, 642, 431, 674, 235, 456]], [[67890, 24680, 13579, 86421, 97531, 84063, 15792, 67890, 12345]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 456, 641, 456]], [[13578, 12345, 86420, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 789, 24680, 15792]], [[1010, 135, 975, 431, 642, 431, 235, 974, 456, 1010]], [[777, 642, 135, 641, 210, 431, 908, 674, 235, 357, 456, 907, 235, 235]], [[1111, 2221, 2222, 3333, 4444, 5555, 6666, 7777, 9999, 2223, 1010, 1111]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 151]], [[642, 543, 135, 975, 642, 674, 49, 456, 674, 643, 456, 135]], [[543, 13579, 24680, 86420, 97531, 84063, 15792, 13579]], [[15, 6, 33, 55, 77, 99, 101, 121, 151, 181, 151]], [[34, 20, 77, 99, 101, 121, 151, 181, 33, 181, 55]], [[975, 1010, 135, 975, 431, 642, 431, 235, 974, 456, 974, 1010]], [[123, 234, 345, 456, 567, 679, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 332, 333, 444, 555, 666, 777, 888, 1111, 2222, 3333, 4445, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 5035, 6046, 7057, 8068, 9079, 2222, 321]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 181, 120]], [[345, 678, 234, 901, 567, 123, 789, 456, 890, 890, 234, 678]], [[642, 975, 642, 674, 49, 456, 674, 49]], [[777, 135, 641, 210, 431, 908, 674, 235, 13580, 456, 908, 235]], [[777, 642, 134, 641, 210, 431, 908, 235, 357]], [[120, 33, 55, 77, 99, 101, 121, 151, 54, 8888, 120, 55, 120, 120, 151]], [[642, 455, 135, 975, 180, 642, 179, 6, 674, 235, 456]], [[12345, 24680, 67890, 24680, 13579, 86421, 97531, 246813579, 15792, 67890, 12345, 246813579]], [[642, 135, 134, 975, 642, 642, 431, 975, 456, 674, 235, 642]], [[431, 67890, 24680, 13579, 97531, 13579, 84063, 67890, 24680]], [[642, 135, 642, 7778, 975, 210, 431, 674, 235, 357, 209, 456, 642, 86420]], [[1111, 2221, 2222, 10000, 4444, 5555, 6666, 5555, 7777, 1357, 2223, 1010, 1111]], [[38, 15, 678, 234, 8888, 901, 567, 86419, 444, 123, 456, 890]], [[67890, 13580, 13579, 84063, 15791, 67890]], [[135, 975, 642, 431, 642, 908, 77, 674, 235, 357, 456, 642]], [[642, 455, 135, 975, 431, 674, 235, 642, 975, 641, 642]], [[642, 135, 975, 642, 333, 210, 431, 908, 674, 235, 357, 456]], [[431, 67890, 24680, 13579, 97531, 1010, 84063, 67890, 24680, 97531]], [[38, 182, 678, 234, 901, 567, 444, 123, 444, 890, 901]], [[642, 455, 135, 975, 431, 674, 235, 642, 976, 674, 642]], [[642, 543, 135, 975, 642, 674, 49, 456, 674, 643, 456, 135, 456]], [[642, 543, 135, 975, 642, 674, 346, 456, 54, 642]], [[678, 234, 456, 901, 567, 123, 789, 456, 431, 674, 890, 890, 123]], [[1111, 2221, 2223, 10000, 8888, 4444, 5555, 6666, 7777, 1357, 9999, 2223, 1011, 4444]], [[16, 27, 38, 49, 50, 61, 72, 83, 94, 183]], [[345, 678, 234, 456, 901, 2468, 567, 123, 789, 974, 456, 431, 674, 890, 890, 123]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 222, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[642, 543, 135, 975, 642, 674, 49, 456, 674, 643, 456, 135, 974, 642]], [[1111, 5554, 2222, 3333, 4444, 555, 7777, 8888, 9999, 55, 77, 1010, 1111]], [[135, 975, 642, 431, 77, 674, 235, 357, 456, 457, 456, 357]], [[345, 678, 234, 901, 901, 567, 123, 789, 456, 890, 674, 890, 123]], [[642, 1357, 135, 50, 975, 642, 431, 674, 6666, 235, 456, 431, 674]], [[777, 642, 135, 641, 210, 431, 908, 457, 235, 357, 456, 641]], [[1111, 5554, 2222, 3333, 4444, 555, 7777, 8888, 9999, 55, 77, 1010, 1111, 3333]], [[642, 1356, 135, 975, 642, 431, 674, 6666, 235, 456, 456]], [[135, 642, 431, 674, 235, 456]], [[101, 135, 24680, 975, 987654321, 674, 49, 674, 455, 642]], [[1111, 2221, 2222, 10000, 102, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[642, 975, 1010, 642, 431, 674, 235, 456, 674, 456, 674, 456, 1010]], [[777, 642, 135, 641, 210, 908, 235, 357, 8888, 641, 456]], [[12345, 67890, 435, 24680, 84062, 13579, 86420, 97531, 84063, 15792]], [[12345, 34, 24680, 13579, 86420, 84063, 15792, 12345, 12345]], [[12345, 24680, 13579, 86419, 973, 84063, 12345, 12345, 24681, 151, 15792, 13579]], [[2, 4, 6, 8, 10, 14, 18, 20, 14]], [[72, 121, 642, 674, 49, 457, 674, 49]], [[12345, 24680, 9079, 13579, 86420, 15792, 345]], [[2, 4, 987654321, 8, 10, 14, 16, 18, 20]], [[123456789, 34, 55, 77, 99, 101, 121, 121, 151, 181, 33, 181]], [[13578, 12345, 67890, 435, 24680, 13579, 1001, 97531, 84063, 15792, 67890, 86420]], [[67890, 100, 12, 443]], [[642, 2221, 135, 975, 642, 431, 235, 456, 642, 642]], [[1111, 2221, 2222, 10000, 4444, 5555, 6666, 5555, 7777, 1357, 2223, 1010, 1111, 10001, 2223]], [[123, 234, 345, 456, 567, 5554, 789, 890, 901, 436, 102, 213, 324, 435, 546, 657, 768, 879, 5555, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 321]], [[123, 234, 345, 456, 6046, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 333, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[642, 135, 642, 431, 674, 320, 456, 674, 431]], [[642, 135, 975, 8, 210, 431, 641, 908, 674, 235, 357, 456, 642]], [[12345, 8888, 546, 15792]], [[33, 55, 77, 99, 1001, 121, 151, 7777, 55, 151]], [[642, 135, 975, 974, 675, 642, 431, 235, 5555, 974, 456, 674]], [[12345, 24680, 13579, 86419, 84063, 24679, 86420, 15792]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 8888, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4445, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 5035, 6046, 7057, 8068, 9079, 2222, 345]], [[642, 86421, 135, 4445, 975, 642, 431, 674, 235, 456, 642, 135]], [[84062, 12345, 67890, 435, 13579, 86420, 97531, 15791, 67890, 24680]], [[12345, 24680, 67890, 24680, 13579, 86421, 97531, 246813579, 235, 15792, 67890, 12345, 246813579]], [[777, 642, 135, 641, 879, 210, 908, 674, 235, 357, 456, 641]], [[38, 2468, 678, 234, 8888, 901, 567, 86419, 444, 123, 456, 890, 901]], [[642, 135, 975, 642, 431, 674, 235, 357, 456, 431, 674]], [[33, 55, 77, 99, 1001, 121, 151, 181, 55, 77, 1001]], [[12345, 67890, 24680, 13579, 86420, 15793, 84063, 6666, 67890]], [[209, 6666, 2222, 3333, 6666, 7777, 8888, 9999, 2223, 1010, 1111]], [[12345, 24680, 13579, 86420, 97531, 84063, 84063, 15793, 12345]], [[431, 67890, 24680, 13579, 97531, 1010, 84063, 67890, 24680, 97531, 13579]], [[642, 135, 642, 431, 674, 235]], [[1111, 2222, 3333, 7778, 4444, 5555, 6666, 7777, 8888, 9998, 9999, 2223, 1010, 1111]], [[642, 135, 975, 1010, 431, 674, 235, 456]], [[12345, 24680, 67890, 24680, 13579, 86421, 246813579, 246813579, 15792, 67890, 12345, 246813579]], [[546, 67890, 435, 24680, 6666, 86420, 97531, 84063, 15792, 67890, 24680, 24680]], [[975, 431, 3013, 642]], [[642, 1357, 135, 975, 431, 674, 6666, 235, 456, 642]], [[642, 135, 975, 642, 431, 674, 235, 888, 674, 235]], [[642, 455, 135, 975, 180, 642, 99, 179, 6, 674, 235, 456]], [[1111, 2221, 3332, 2222, 10000, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2223, 1010, 1111, 10000]], [[135, 975, 642, 431, 235, 974, 456, 674]], [[642, 455, 135, 975, 642, 431, 674, 6666, 456, 120, 431]], [[33, 234, 77, 99, 101, 121, 151, 181, 181, 101]], [[642, 135, 975, 642, 431, 674, 135, 235, 888, 430, 674]], [[642, 641, 210, 7057, 444, 430, 235, 641, 457, 431]], [[642, 135, 975, 675, 642, 431, 674, 235, 974, 456, 675]], [[135, 975, 642, 431, 674, 235, 456, 674, 456, 456]], [[12345, 34, 24680, 86420, 97531, 84063, 15792, 12345]], [[642, 1001, 135, 641, 210, 431, 908, 674, 235, 357, 456, 908]], [[33, 234, 77, 99, 101, 121, 151, 181, 181, 101, 151]], [[12345, 83, 246802, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4443, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 777, 324, 2012]], [[445, 181, 642, 431, 97531, 674, 234, 642]], [[77, 455, 135, 975, 642, 431, 674, 235, 456, 642]], [[1111, 2221, 2222, 3333, 4444, 5555, 6666, 7777, 9999, 2223, 1010, 1111, 7777]], [[1111, 324, 2222, 3333, 908, 4444, 5555, 6666, 7777, 8888, 9999, 1010]], [[975, 642, 432, 674, 235, 456, 674, 642]], [[642, 135, 135791, 642, 431, 908, 975, 235, 357, 456, 975, 431, 975]], [[12345, 34, 24680, 13579, 86420, 97531, 84063]], [[67890, 642, 135, 975, 642, 674, 49, 456, 674, 642, 674]], [[34, 55, 77, 99, 101, 121, 151, 181, 2012, 33, 55, 151]], [[15, 33, 99, 101, 121, 181, 181]], [[38, 2468, 678, 234, 8888, 901, 567, 86419, 444, 123, 456, 97531, 901, 234]], [[67890, 24680, 13580, 86421, 97531, 84063, 15792, 67890, 67890]], [[2, 4, 987654321, 8, 10, 14, 16, 18, 20, 16]], [[642, 135, 975, 642, 333, 674, 235, 887, 674]], [[678, 12345, 67890, 12, 13579, 86420, 97532, 84063, 15792, 333, 67890, 86420]], [[678, 345, 678, 234, 456, 901, 2468, 567, 123, 789, 974, 456, 431, 674, 890, 890, 123]], [[101, 135, 431, 975, 642, 431, 908, 674, 235, 357, 456, 431]], [[12345, 24680, 9079, 86420, 84063, 24679, 15792, 345]], [[7058, 975, 67890, 24680, 13579, 320, 86420, 7057, 84063, 15792]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 777, 768, 546]], [[34, 55, 77, 123456790, 99, 101, 121, 1357, 151, 181, 33, 181, 33]], [[12345, 24680, 86420, 97531, 5555, 84063, 15792, 97531, 15792]], [[642, 135, 134, 975, 642, 431, 235, 975, 456, 674, 235, 642, 456]], [[12345, 24679, 86419, 97531, 5554, 84063, 15792, 13579, 50, 97531]], [[642, 135, 642, 642, 430, 235, 456, 674, 235, 235]], [[1111, 2222, 3333, 7778, 4444, 5555, 7777, 8888, 9999, 2223, 1010, 1112]], [[642, 135, 975, 642, 431, 908, 674, 909, 235, 357, 456, 431]], [[1111, 2221, 12, 2222, 10000, 4444, 5555, 6666, 5555, 7777, 1357, 10000, 2223, 1010, 1111]], [[642, 1357, 135, 975, 431, 674, 6666, 675, 235, 456, 642]], [[1112, 13578, 12345, 12344, 67890, 435, 24680, 13579, 1001, 97531, 84063, 15792, 67890, 24680]], [[67890, 24680, 67890, 13579, 86420, 84063, 15791, 67890, 24680]], [[777, 642, 135, 641, 908, 235, 357, 456]], [[642, 135, 975, 8, 210, 430, 641, 908, 674, 235, 357, 456, 642, 674]], [[12345, 24680, 13579, 86420, 674, 97531, 5555, 84063, 15792, 97531]], [[135, 642, 431, 674, 320, 456, 674, 431]], [[123, 234, 345, 456, 567, 5554, 789, 890, 901, 436, 102, 213, 324, 435, 546, 657, 768, 879, 5555, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 333, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 8889, 7057, 8068, 9079]], [[12345, 67890, 24679, 13579, 86420, 97531, 15793, 84063, 6666, 67890]], [[642, 135, 975, 675, 642, 431, 235, 974, 456, 674, 456]], [[777, 642, 135, 640, 210, 431, 908, 235, 357, 456, 455]], [[12345, 24680, 13579, 86420, 97531, 5555, 15, 84063]], [[13578, 12345, 67890, 456, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680, 15792]], [[975, 642, 431, 235, 674, 642]], [[13578, 12345, 86420, 67890, 435, 24680, 13579, 86421, 97531, 84063, 15792, 15792, 789, 24680, 15792]], [[777, 642, 135, 49, 879, 210, 908, 674, 235, 357, 456, 641]], [[34, 183, 55, 77, 123456789, 99, 101, 121, 121, 151, 181, 181, 33, 181]], [[12345, 67890, 24680, 13578, 86421, 97531, 15792, 67890, 12345]], [[15, 33, 213, 55, 77, 121, 99, 101, 121, 151, 181, 181, 120]], [[12345, 67890, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680, 67890, 86420]], [[642, 135, 975, 642, 431, 674, 235, 456, 674, 235]], [[123, 234, 345, 457, 567, 678, 789, 890, 901, 102, 213, 666, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6045, 7057, 8068, 9079, 777]], [[345, 346, 678, 234, 657, 567, 123, 789, 456, 890, 890, 234]], [[67890, 9999, 67890, 13579, 86420, 84063, 15791, 67890]], [[345, 974, 12345, 24680, 13579, 12345, 86420, 5555, 84063, 15792, 345, 15792]], [[12345, 24680, 13579, 86420, 97531, 5555, 15, 879]], [[642, 135, 431, 642, 7778, 975, 210, 431, 674, 357, 209, 456, 642, 210]], [[642, 135, 975, 642, 908, 987654321, 674, 235, 357, 456, 49, 975, 431]], [[12345, 67890, 246802, 24680, 13579, 183, 84063, 443, 15792, 67890]], [[642, 431, 235, 3013, 641, 642]], [[67890, 435, 86420, 15792, 67890, 24680, 86420]], [[12345, 67890, 13579, 86420, 97531, 84063, 15792, 67890]], [[642, 3332, 975, 641, 431, 674, 235, 456]], [[642, 135, 642, 431, 235, 456, 674, 235, 642]], [[642, 135, 2012, 642, 431, 674, 235]], [[12345, 24679, 86419, 97531, 84063, 15792, 13579, 97531, 97531]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 333, 876, 765, 654, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 210]], [[777, 642, 135, 641, 210, 908, 4024, 456]], [[209, 12345, 67890, 435, 13579, 86420, 15792, 67890, 24680]], [[67890, 642, 135, 3332, 642, 674, 49, 456, 674, 642, 674]], [[13578, 12345, 67889, 435, 24680, 13579, 86420, 97531, 84063, 15792, 67890, 24680]], [[16, 27, 38, 987654321, 49, 50, 61, 72, 83, 94, 183, 16, 27, 83]], [[24680, 12345, 67890, 1110, 13579, 86420, 97531, 15793, 84063, 15792, 67890]], [[777, 642, 135, 641, 210, 908, 235, 357, 8888, 641, 456, 135]], [[642, 135, 975, 642, 432, 431, 97531, 83, 235, 456, 642]], [[12345, 34, 24680, 13579, 77, 86420, 97531, 84063, 15792, 12345]], [[38, 15, 678, 84063, 234, 901, 567, 444, 123, 456, 890]], [[33, 55, 99, 101, 121, 151, 181, 55, 181, 55]], [[1111, 2221, 2222, 10000, 2223, 4444, 5555, 6666, 5555, 7777, 1357, 2223, 1010, 1111]], [[642, 1001, 135, 641, 210, 431, 908, 674, 235, 357, 456, 908, 357]], [[]], [[10]], [[10, 20, 200]], [[11111, 33333, 55555]], [[24680, 13579, 86420]], [[13576, 86431, 24680]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 15792, 84063, 15792]], [[16, 27, 38, 49, 50, 61, 72, 83, 94, 105, 27]], [[345, 678, 234, 901, 123, 789, 456, 890]], [[345, 678, 234, 901, 181, 123, 456, 890, 345]], [[345, 678, 234, 5035, 901, 789, 456, 890]], [[2, 4, 6, 8, 10, 14, 18, 20]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[246, 768, 1357, 2467, 2468, 13579, 24680, 135791, 246802, 246]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[16, 27, 38, 49, 50, 61, 72, 83, 72, 105, 27]], [[345, 678, 233, 5035, 901, 789, 456, 890]], [[2, 789, 678, 233, 5035, 901, 789, 456, 890]], [[246, 468, 1357, 2467, 2468, 13579, 24680, 2222, 246802]], [[345, 678, 234, 901, 181, 123, 345, 123]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 222, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 674, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2012]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[2, 4, 6, 8, 10, 14, 16, 18, 20, 20]], [[345, 678, 234, 901, 181, 123, 455, 10, 345]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[2, 4, 6, 8, 10, 14, 16, 18, 20, 20, 20, 4]], [[15, 33, 55, 77, 101, 2, 121, 151, 181]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[2, 6046, 4, 8, 10, 14, 16, 61]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[345, 678, 234, 181, 123, 456, 890, 345, 456]], [[2, 4, 6, 8, 10, 14, 16, 18, 20, 6]], [[16, 27, 38, 49, 50, 61, 72, 83, 105]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[2, 4, 6, 8, 10, 14, 18, 20, 20, 20, 4]], [[16, 27, 38, 16, 49, 50, 61, 8068, 72, 83, 105]], [[246, 768, 1357, 2467, 2468, 13579, 24680, 135791, 246802, 246, 24680]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079]], [[345, 678, 233, 5035, 901, 789, 456, 890, 901]], [[2, 4, 6, 10, 14, 16, 18, 20]], [[345, 678, 234, 901, 181, 123, 890, 345]], [[16, 28, 38, 49, 50, 61, 72, 83, 72, 105, 27]], [[345, 678, 777, 233, 5035, 901, 789, 456, 890, 901]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 542, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2222]], [[345, 234, 181, 123, 456, 890, 345, 456]], [[4, 6, 10, 16, 18, 20]], [[246, 468, 1357, 2467, 2468, 13579, 24680, 2222, 246802, 2467]], [[2, 4, 6, 10, 14, 16, 20]], [[12345, 67890, 24680, 13579, 24681, 86420, 97531, 84063, 15792]], [[246, 1357, 2468, 13579, 24680, 135791, 246802]], [[345, 678, 234, 901, 6666, 567, 123, 999, 456, 890]], [[234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 325, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456]], [[16, 27, 38, 49, 50, 61, 72, 71, 83, 105]], [[345, 678, 234, 901, 181, 123, 455, 10, 345, 123]], [[123456789, 111111112, 246813579, 111111111, 987654321]], [[12345, 67890, 24680, 13579, 24681, 86420, 97531, 84063, 15792, 12345]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2222]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 3333, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[2, 4, 6, 10, 14, 24681, 16, 18, 20]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079]], [[345, 678, 234, 181, 123, 890, 345, 456]], [[246, 469, 2468, 13579, 24680, 135791, 246802]], [[678, 234, 901, 181, 123, 456, 345]], [[135, 975, 975, 642, 431, 908, 674, 235, 357, 456, 975]], [[135, 975, 975, 642, 430, 908, 674, 235, 357, 456, 975]], [[16, 27, 38, 49, 50, 61, 72, 83, 94, 105, 72]], [[345, 678, 233, 5035, 789, 456, 890, 901]], [[4, 10, 6, 10, 18, 20, 10]], [[12345, 67890, 24680, 13579, 24681, 86420, 97531, 84063, 15792, 67890]], [[345, 678, 234, 181, 123, 456, 233, 890, 345, 678, 181, 345]], [[345, 678, 777, 233, 5035, 901, 789, 456, 890, 901, 901]], [[2, 4, 6, 8, 10, 14, 765, 16, 18, 20]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 123]], [[12345, 67890, 24680, 13579, 24681, 86420, 97531, 84063, 15792, 12345, 67890, 12345]], [[234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 325, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456, 210]], [[345, 234, 181, 123, 8888, 890, 345, 456]], [[12345, 67890, 105, 2222, 13579, 86420, 97531, 84063, 15792, 12345]], [[345, 678, 234, 5035, 901, 789, 456, 890, 456]], [[16, 27, 38, 49, 50, 61, 72, 83, 72, 105, 27, 27]], [[12345, 67890, 105, 2222, 13579, 86420, 567, 84063, 15792, 12345]], [[2, 4, 6, 8, 10, 14, 16, 18, 20, 18, 2]], [[246, 469, 2468, 13579, 24680, 246802]], [[2, 789, 678, 233, 5035, 901, 789, 890, 5035]], [[678, 901, 344, 181, 123, 456, 9999, 345]], [[345, 234, 181, 123, 456, 890, 345, 456, 181]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 542, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2222, 9999]], [[2, 6046, 4, 8, 10, 13, 16, 3, 61]], [[67890, 24680, 13579, 18, 86420, 97531, 84063, 15792, 84063, 15792, 15792]], [[2, 4, 6, 8, 10, 14, 765, 16, 18, 20, 14]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 3333, 555, 666, 777, 888, 999, 1111, 8889, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[2, 6046, 4, 1357, 10, 14, 16, 61]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2223]], [[16, 99, 27, 104, 38, 49, 50, 61, 72, 83, 72, 105, 27, 27]], [[2, 4, 14, 6, 8, 14, 16, 18, 5, 20, 10, 2]], [[246, 468, 1357, 2467, 2468, 13579, 24680, 246, 2222, 246802]], [[16, 27, 38, 38, 16, 49, 50, 61, 8068, 72, 83, 105]], [[2, 6046, 4, 8, 10, 14, 16, 10, 61]], [[12345, 67890, 105, 2222, 13579, 97531, 84063, 15792, 12345]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 123]], [[2, 4, 6, 10, 18, 20]], [[135, 975, 975, 642, 431, 908, 674, 235, 357, 456, 975, 135]], [[246, 468, 1357, 2468, 13579, 135791, 246802]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 121]], [[135, 975, 642, 431, 908, 674, 235, 357, 456, 975, 135]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[345, 678, 234, 567, 181, 123, 345, 123]], [[123, 233, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 656, 8068, 9079, 1001]], [[246, 768, 1357, 2467, 2468, 13579, 24680, 135791, 246802, 246, 2467]], [[123, 320, 234, 345, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 321, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 431, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[345, 678, 234, 901, 181, 123, 455, 10, 123, 123]], [[16, 27, 38, 49, 61, 72, 83, 94, 105]], [[10, 2, 6046, 4, 8, 10, 13, 16, 5, 3, 61]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 8888, 5035, 6046, 7057, 8068, 9079, 123, 432]], [[4, 10, 6, 10, 18, 10]], [[2, 4, 6, 10, 768, 20]], [[345, 678, 5035, 901, 789, 456, 890]], [[2, 4, 6, 8, 10, 14, 16, 18, 20, 5, 20]], [[2, 4, 6, 8, 7777, 14, 16, 20, 5, 20]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 101, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 6046]], [[123, 320, 234, 345, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 434, 546, 657, 768, 879, 321, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 431, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[345, 678, 777, 233, 5035, 901, 789, 456, 890, 111111112, 901]], [[16, 27, 16, 38, 49, 51, 61, 72, 71, 83, 642]], [[344, 234, 181, 123, 8888, 890, 345, 890, 8888]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 101, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 654, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[16, 27, 37, 38, 49, 50, 61, 72, 83, 94, 105, 72]], [[345, 677, 234, 901, 181, 123, 890, 345]], [[246, 55, 1357, 2468, 13579, 24680, 135791, 246802]], [[345, 677, 234, 901, 181, 123, 890, 345, 677, 181]], [[16, 27, 50, 5, 49, 72, 50, 61, 72, 83, 94, 105, 27]], [[345, 678, 5035, 901, 789, 456]], [[246, 469, 2468, 13579, 24680, 135791, 246802, 469]], [[345, 678, 181, 123, 456, 233, 890, 345, 678, 181, 345, 181]], [[123, 320, 234, 345, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 434, 546, 657, 768, 879, 321, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 431, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[135, 345, 678, 233, 5035, 901, 789, 456, 890, 901]], [[16, 27, 246813579, 38, 49, 50, 61, 72, 83, 94, 105, 72]], [[2, 4, 14, 6, 8, 14, 16, 18, 5, 20, 10, 2, 2]], [[12345, 67890, 24680, 13579, 24681, 86419, 97531, 84063, 15792]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 18, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[246, 469, 2468, 13579, 24680, 246802, 469, 13579]], [[246, 468, 1357, 2467, 2468, 13579, 24680, 246, 246802]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 876, 901]], [[123, 320, 234, 345, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 434, 546, 657, 768, 879, 321, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 455, 37, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 431, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[678, 901, 344, 181, 123, 456, 9999, 182, 345]], [[2468, 468, 1357, 2468, 13579, 135791, 246802]], [[16, 27, 38, 49, 50, 72, 83, 105]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 9079, 666]], [[246, 468, 1357, 2468, 13579, 24680, 246802, 246802]], [[16, 33, 55, 77, 101, 2, 121, 151, 181]], [[345, 234, 181, 123, 456, 890, 345, 456, 181, 345]], [[67890, 24680, 13579, 18, 86420, 97531, 84063, 15792, 84063, 1001, 15792, 15792]], [[678, 234, 901, 181, 123, 13579, 456, 345, 13579]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 324]], [[2, 4, 6, 8, 7777, 14, 16, 5, 20]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 121, 101]], [[2, 4, 10, 6, 8, 7777, 14, 16, 20, 5, 20]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 8888, 5035, 6046, 7057, 8068, 9079, 123, 432, 324]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 1001, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079]], [[345, 900, 678, 777, 233, 5035, 901, 789, 456, 890, 901]], [[16, 27, 38, 49, 61, 72, 71, 83, 105]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 18, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 789, 6046, 7057, 455, 9079, 666]], [[345, 677, 234, 901, 181, 890, 346, 677, 181]], [[16, 27, 37, 38, 49, 50, 61, 72, 83, 94, 105, 73]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 975, 321, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[2, 4, 6, 10, 768]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 8888, 5035, 6046, 7057, 8068, 9079, 123, 432, 901]], [[16, 27, 38, 49, 50, 72, 37, 83, 105]], [[2, 4, 6, 8, 10, 14, 16, 18, 20, 2]], [[345, 234, 181, 123, 456, 890, 344, 345, 456, 181, 345]], [[246, 468, 1357, 2467, 2468, 13579, 24680, 83, 246, 2222, 246802, 13579]], [[4, 6, 14, 24681, 16, 18, 20]], [[15, 33, 55, 77, 99, 101, 121, 151, 181, 121, 101, 15]], [[345, 677, 777, 233, 5035, 901, 789, 456, 890, 901]], [[345, 234, 123, 84063, 456, 890, 345, 456]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 1001, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 555, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 3332, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 246802, 8068, 9079, 324]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2223, 7777]], [[345, 234, 181, 123, 456, 890, 345, 94, 456, 181, 345]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 8888, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[4, 6, 10, 17, 18, 20]], [[10, 6, 6, 10, 18, 10]], [[4, 6, 654, 16, 18, 20]], [[2, 4, 14, 17, 6, 8, 14, 16, 18, 5, 20, 10, 2, 2]], [[2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 6]], [[135, 975, 975, 642, 430, 908, 235, 357, 456, 3, 975]], [[345, 233, 5035, 901, 789, 456, 890, 901]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 333, 444, 3333, 555, 666, 777, 888, 999, 1111, 8889, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2222]], [[345, 678, 234, 901, 6666, 567, 123, 999, 568, 456, 890]], [[2, 4, 6, 8, 10, 14, 18, 20, 5, 20]], [[2, 4, 666, 8, 10, 14, 2467, 16, 18, 20, 14, 2, 2]], [[16, 28, 38, 49, 50, 434, 61, 72, 71, 83, 72, 105, 27]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 876]], [[135, 975, 975, 642, 430, 908, 642, 674, 235, 357, 456, 642, 975, 135]], [[2, 8888, 6046, 4, 1357, 10, 14, 16, 61]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[2, 6, 8, 10, 14, 18, 20]], [[2, 4, 8, 10, 14, 16, 18, 20, 5, 20]], [[12345, 67890, 105, 2222, 13579, 86420, 567, 84063, 12345]], [[16, 27, 38, 16, 49, 50, 61, 987654321, 72, 83, 105]], [[2, 4, 14, 1111, 8, 14, 16, 18, 5, 20, 10, 2, 2]], [[2, 8888, 6046, 4, 1357, 10, 14, 16, 61, 6046]], [[2, 4, 6, 8888, 8, 10, 14, 16, 18, 20, 5, 20]], [[2, 6046, 5, 8, 10, 13, 16, 3, 62, 16, 62]], [[345, 678, 234, 901, 181, 123, 455, 11, 122, 345]], [[12345, 2222, 105, 2222, 13579, 97531, 84063, 15792, 12345]], [[15, 33, 55, 77, 51, 99, 101, 121, 151, 181, 121, 101, 15]], [[2, 4, 6, 677, 10, 14, 16, 18, 20, 20]], [[12345, 67890, 24680, 13579, 86420, 97531, 84063, 6]], [[345, 678, 234, 901, 181, 345, 123]], [[123, 234, 346, 456, 567, 678, 789, 890, 8887, 901, 102, 213, 324, 435, 546, 657, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 545, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 3333, 555, 666, 777, 888, 999, 1111, 8889, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[345, 234, 321, 181, 123, 456, 890, 345, 456, 181, 345, 181]], [[345, 678, 5035, 789, 456, 890]], [[15, 33, 55, 101, 180, 2, 121, 151, 181]], [[123, 234, 345, 456, 567, 678, 789, 357, 901, 1001, 101, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456, 987]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 890, 6666]], [[2, 6047, 4, 7, 8, 10, 13, 16, 3, 61]], [[6046, 4, 1357, 10, 14, 61]], [[975, 975, 642, 431, 908, 674, 235, 357, 8889, 456, 975]], [[678, 181, 123, 456, 233, 890, 345, 678, 181, 345, 181]], [[4, 10, 6, 10, 555, 18, 10]], [[345, 234, 181, 123, 456, 890, 345, 456, 181, 345, 456]], [[2, 4, 6, 8, 10, 12, 7, 14, 16, 18, 20]], [[12345, 67890, 24680, 13579, 24681, 86420, 97531, 15792]], [[2, 789, 678, 233, 5035, 901, 788, 456, 890, 901]], [[2, 4, 6, 8, 7777, 4, 14, 16, 5, 20]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 324]], [[27, 38, 49, 61, 71, 71, 83, 122]], [[234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 325, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 6045, 321, 210, 111, 222, 333, 444, 555, 666, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[234, 345, 456, 567, 677, 789, 890, 901, 102, 213, 325, 436, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 5556, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456]], [[246, 468, 1357, 2468, 13579, 468, 135791, 246802]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 555, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 84063, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 246802, 8068, 9079, 324]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 210, 111, 246813579, 333, 444, 1001, 555, 666, 776, 888, 999, 431, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079]], [[123, 234, 456, 567, 678, 789, 2, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 4444, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 8888, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[16, 27, 38, 16, 49, 50, 61, 8068, 83, 105]], [[246, 468, 1357, 2467, 2468, 24680, 83, 246, 2222, 246802, 13579]], [[67890, 13579, 18, 86420, 97531, 84063, 15792, 84063, 15792, 15792]], [[123, 234, 456, 567, 678, 789, 2, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 4444, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 8888, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666, 654]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666, 8888]], [[10, 2, 6046, 4, 8, 10, 13, 16, 5, 3, 324, 10]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 101, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 3333, 4444, 5555, 654, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[2, 4, 6, 6, 8, 7777, 14, 16, 5, 20]], [[4, 6, 24681, 18, 20]], [[345, 444, 678, 234, 901, 181, 123, 455, 10, 345, 123]], [[2, 4, 8, 10, 12, 14, 16, 18, 20]], [[345, 678, 234, 567, 181, 123, 345, 123, 345]], [[4, 6, 8, 10, 14, 16, 18, 20, 6]], [[15, 33, 55, 101, 180, 2, 55, 121, 151, 181]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666, 8888, 6666]], [[4, 10, 6, 555, 18, 10]], [[345, 678, 234, 181, 768, 123, 890, 345, 456]], [[246, 768, 1357, 2467, 2468, 24680, 7057, 246802, 246]], [[16, 55, 77, 101, 2, 151, 181]], [[345, 234, 181, 123, 456, 890, 345, 456, 345]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 431, 8068, 9079]], [[123, 233, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 8888, 9999, 1001, 2011, 3013, 4024, 5035, 6046, 7057, 656, 8068, 9079, 1001]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 103, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 8888, 5035, 6046, 7057, 8068, 9079, 123, 432, 324]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 101, 213, 324, 435, 546, 657, 768, 3332, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 654, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[1111, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1010]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 555, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 84063, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 987654321, 1001, 2012, 3013, 4024, 6046, 246802, 8068, 9079, 324, 6046]], [[12345, 67890, 13579, 24681, 86419, 97531, 84063, 15792]], [[16, 27, 455, 38, 49, 50, 61, 72, 83, 94, 105]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 333, 444, 3333, 555, 666, 777, 888, 999, 1111, 8889, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2222, 987, 890]], [[15, 33, 55, 77, 99, 101, 121, 181, 151, 181, 15]], [[246, 468, 1358, 13579, 24680, 135791, 246802]], [[16, 27, 38, 49, 61, 83, 105]], [[2, 6046, 4, 8, 10, 14, 16, 10, 61, 8]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 325, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2012, 3013, 4024, 3013, 6046, 7057, 8068, 9079, 666, 8888, 6666]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[345, 234, 181, 456, 890, 345, 456, 455, 456]], [[345, 678, 234, 901, 567, 123, 789, 545, 456, 890]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 3333, 555, 666, 777, 888, 999, 1111, 8889, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 7777]], [[12345, 67890, 24680, 13579, 24681, 86420, 97531, 15792, 12345, 67890, 12345]], [[123, 234, 456, 567, 678, 789, 2, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 4444, 333, 444, 666, 777, 888, 998, 999, 1111, 2222, 3333, 4444, 5555, 6666, 8888, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[135, 345, 678, 233, 5034, 901, 789, 456, 890, 901]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 344, 777, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666, 8888]], [[99, 2, 4, 6, 8, 10, 14, 16, 18, 20, 18, 2]], [[246, 468, 1357, 2467, 2468, 13579, 24680, 246, 2222, 246802, 24680]], [[123456789, 111111112, 246813579, 111111112, 987654321]], [[345, 678, 777, 233, 5035, 901, 789, 456, 890, 5034, 111111112, 901]], [[345, 678, 234, 123, 890, 345, 456]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 9079]], [[123, 234, 677, 456, 567, 678, 789, 890, 901, 101, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 3333, 4444, 5555, 654, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 18, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666, 765]], [[4, 10, 6, 10, 18, 20]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 1111, 2222, 790, 3333, 4444, 5555, 6666, 7777, 8888, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 987, 4444]], [[16, 27, 38, 49, 50, 37, 83, 104, 105, 105]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 18, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 789, 6046, 7057, 455, 9079, 666, 3013]], [[135, 345, 678, 17, 5035, 901, 789, 456, 890, 901, 789]], [[12345, 2222, 105, 2222, 97531, 84063, 15792, 12345, 12345]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 1001, 657, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 111111112, 8068, 9079]], [[345, 678, 181, 123, 456, 233, 890, 345, 678, 181, 345, 181, 345, 345]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 765, 876, 765, 654, 543, 432, 321, 210, 111, 333, 444, 555, 666, 777, 888, 999, 1111, 8889, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2222, 987, 890, 9999]], [[2, 4, 6, 8888, 8, 10, 14, 16, 18, 20, 5, 20, 14]], [[15, 33, 55, 77, 99, 101, 121, 86419, 181, 151, 181, 15]], [[234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 325, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456, 999]], [[123, 234, 677, 456, 567, 678, 789, 890, 900, 101, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 3333, 4444, 5555, 654, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 879]], [[2, 4, 6, 8, 10, 14, 765, 16, 18, 20, 16]], [[135, 654, 678, 233, 5034, 901, 2, 456, 890, 901]], [[2, 6, 10, 14, 24681, 16, 18, 20]], [[135, 975, 975, 642, 431, 908, 674, 235, 357, 975]], [[135, 642, 431, 908, 674, 235, 456, 975, 135]], [[345, 321, 84063, 456, 890, 345, 456]], [[86420, 2, 789, 678, 234, 5035, 901, 789, 890, 5035]], [[2, 6047, 5, 4, 7, 8, 10, 13, 16, 3, 61]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 4444, 324, 435, 546, 657, 768, 879, 987, 876, 12345, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 344, 777, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666, 8888]], [[6, 6, 10, 18, 10]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 101, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 568, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 6046]], [[234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 210, 111, 246813579, 333, 444, 1001, 555, 666, 776, 888, 999, 431, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068]], [[6, 6, 18, 10]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 123, 9079]], [[2, 6047, 5, 4, 7, 8, 10, 13, 16, 3, 61, 2]], [[1111, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1010, 8888]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 8888, 5035, 6046, 7057, 8068, 9079, 123, 432, 324]], [[16, 27, 38, 49, 61, 72, 71, 83, 105, 72]], [[768, 4, 6, 8, 14, 16, 18, 20, 20]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 111, 222, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666, 8888, 6666]], [[345, 879, 432, 234, 901, 181, 345, 123, 432]], [[123, 320, 234, 345, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 434, 546, 768, 879, 321, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 431, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[2, 4, 6, 10, 14, 17, 20, 4, 4]], [[135, 654, 233, 987654321, 901, 2, 456, 890, 901]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 657, 222, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 674, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2012, 2012]], [[16, 27, 38, 49, 61, 72, 71, 83, 105, 72, 27]], [[768, 4, 6, 8, 14, 16, 18, 20, 20, 20]], [[6, 6, 10, 18, 10, 10]], [[123, 234, 345, 456, 567, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 666]], [[16, 27, 38, 49, 50, 37, 14, 83, 104, 105, 105]], [[345, 678, 234, 234, 5035, 901, 789, 456, 890, 456]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 542, 432, 321, 210, 111, 9079, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 2222, 9999]], [[24681, 67890, 24680, 13579, 86420, 97531, 15792, 97531, 13579]], [[345, 678, 5035, 456, 890]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 555, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 84063, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 987654321, 1001, 2012, 3013, 4024, 6046, 246802, 8068, 9079, 324, 6046, 555]], [[4, 14, 6, 8, 14, 16, 18, 5, 20, 10, 2, 2]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 1001, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 432, 321, 210, 879, 111, 222, 333, 444, 555, 666, 777, 8889, 888, 999, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 456]], [[345, 234, 123, 84063, 456, 890, 768, 456]], [[4, 14, 17, 6, 8, 14, 16, 18, 5, 20, 10, 2, 2]], [[15, 33, 55, 101, 180, 2, 121, 151, 181, 55]], [[246, 55, 1357, 2468, 13579, 135791, 246802]], [[12345, 67890, 105, 13579, 86420, 567, 84063, 15792, 12345, 86420]], [[2, 4, 6, 8, 10, 14, 18, 20, 5, 6]], [[67890, 13579, 18, 86420, 84063, 84063, 15792, 84063, 15792, 15792]], [[55, 1357, 2468, 13579, 24680, 135791, 246802]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 1001, 657, 768, 879, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 111111112, 8068, 9079, 2222]], [[345, 234, 901, 181, 123, 890, 345, 181]], [[2, 6046, 5, 8, 10, 13, 16, 3, 62, 17, 62]], [[12345, 67890, 24680, 13579, 24681, 86420, 84063, 15792]], [[345, 678, 777, 233, 5035, 901, 789, 456, 890, 5034, 111111112, 679, 901]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079, 879]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 5556, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 8888, 5035, 6046, 7057, 8068, 9079, 123, 432, 324, 901, 346]], [[345, 900, 678, 234, 901, 123, 789, 344, 456, 890]], [[135, 975, 974, 642, 430, 908, 235, 105, 357, 456, 3, 975]], [[12345, 67890, 24680, 13579, 24681, 86420, 97531, 84063, 555, 15792, 12345]], [[123, 234, 345, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 555, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 84063, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 987654321, 1001, 2012, 3013, 4024, 6046, 246802, 8068, 9079, 324, 6046, 555]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 5556, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 10, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 8888, 5035, 6046, 7057, 8068, 9079, 123, 432, 324, 901, 346, 888]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 105, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 5555, 6666, 7777, 8888, 9999, 2012, 3013, 4024, 6046, 8068, 9079, 324]], [[123, 234, 346, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 9079]], [[24681, 246, 468, 1357, 2468, 13579, 24680, 246802, 246802]], [[468, 1357, 135791, 2468, 13579, 135791, 246802]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 18, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 789, 6046, 7057, 455, 666]], [[16, 27, 38, 16, 49, 213, 50, 61, 8068, 72, 83, 105]], [[234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 323, 435, 546, 657, 768, 879, 987, 876, 654, 543, 432, 321, 210, 111, 246813579, 333, 444, 1001, 555, 666, 776, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046]], [[4, 900, 6, 14, 24681, 16, 18, 20, 18]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079, 3013]], [[247, 468, 1357, 2468, 135790, 468, 135791, 246802]], [[16, 27, 37, 38, 49, 50, 61, 72, 83, 94, 105, 73, 105]], [[345, 677, 233, 901, 181, 890, 346, 677, 181]], [[2, 789, 233, 5035, 901, 789, 456, 890]], [[123, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 654, 3013, 432, 321, 210, 111, 10000, 222, 333, 444, 1001, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079, 324]], [[16, 27, 455, 38, 987654321, 50, 61, 72, 974, 94, 105]], [[246, 768, 1357, 2467, 2468, 24680, 7057, 246801, 247, 246]], [[12345, 67890, 105, 2222, 13579, 86420, 97531, 84063, 15792, 12345, 84063]], [[123, 234, 975, 345, 456, 567, 678, 789, 890, 901, 102, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 8068, 9079]], [[101, 12345, 2222, 105, 2222, 13579, 97531, 84063, 7]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 213, 102, 213, 324, 435, 546, 657, 768, 545, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 3333, 555, 666, 777, 888, 999, 1111, 8889, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 101, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 888, 999, 1111, 3333, 4444, 5555, 654, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 3013, 8068, 9079]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 546, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 5035, 6046, 7057, 8068, 9079]], [[321, 900, 6, 14, 24680, 16, 18, 20, 18]], [[12345, 67890, 105, 122, 13579, 86420, 97531, 84063, 15792, 12345, 84063]], [[345, 677, 234, 901, 123, 890, 345]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 102, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 654, 543, 432, 321, 210, 111, 222, 333, 24680, 1001, 234, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 8068, 9079]], [[2, 5, 8, 10, 13, 16, 3, 62, 17, 62]], [[15, 33, 55, 77, 101, 2, 121, 101, 151, 181, 101]], [[84063, 234, 901, 181, 123, 890, 345]], [[123, 234, 345, 456, 567, 678, 789, 890, 901, 101, 213, 324, 435, 546, 657, 768, 879, 987, 876, 765, 543, 432, 321, 210, 111, 222, 333, 444, 555, 666, 777, 999, 1111, 2222, 3333, 4444, 5555, 654, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 6046, 7057, 9079, 1111]], [[123, 234, 456, 567, 678, 789, 890, 901, 3013, 213, 324, 435, 546, 657, 768, 879, 18, 987, 876, 765, 654, 543, 432, 321, 111, 222, 333, 9079, 444, 555, 666, 777, 888, 999, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999, 1001, 2012, 3013, 4024, 789, 6046, 7057, 545, 666]], [[67890, 345, 13579, 18, 86420, 97531, 84063, 15792, 84063, 10000, 15792, 86420]]]\n    results = [[1, 15, 33], [], [111, 151], [31, 135], [], [79, 1357], [753, 951], [159], [111, 333, 555, 777], [13579, 97531], [], [135, 753, 951], [753], [999], [753, 951], [159], [79, 1357, 1357], [159], [], [999, 13579], [], [159], [135, 753, 753, 951], [], [], [159], [79, 1357], [159], [], [13579, 97531, 97531], [159], [753, 951], [], [79, 1357], [], [135, 753, 753, 951], [79, 1357], [79, 1357], [999], [753], [159], [79, 1357], [753, 951], [], [13579], [159, 13579], [], [135, 753, 951], [999, 13579], [159], [159], [111, 333, 555], [], [159, 159], [13579, 97531, 97531, 97531], [], [79, 1357], [135, 753, 753, 951, 951], [79, 1357], [13579, 97531, 97531, 97531], [79, 1357], [159], [753], [333, 555, 777], [159], [79, 1357], [], [], [159], [79, 1357], [135, 753, 951, 999], [159], [159], [], [159], [135, 753, 753, 753, 951], [1357], [159], [], [753, 753, 951, 951], [], [], [159], [79, 1357], [111, 333, 555], [1357], [159], [159, 159], [159], [], [], [], [753], [1357], [753, 753], [159], [], [], [159], [13579, 97531, 97531, 97531, 97531], [753, 753, 753], [13579, 97531, 97531], [753, 951], [97531, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [15, 33, 55, 77, 99, 151], [1357, 13579, 135791], [], [111111111], [1111, 3333, 5555, 7777, 9999], [135, 357, 975], [], [13579, 97531], [135, 357, 975], [135, 357, 975, 975], [13579, 97531], [15, 33, 55, 77, 99, 151], [], [13579, 97531], [], [1111, 1111, 3333, 5555, 7777, 9999], [135, 357, 975], [135, 975], [111, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135, 975], [15, 33, 55, 77, 99, 151], [135, 975], [135, 975], [135, 975], [33, 55, 77, 99, 151], [13579, 97531], [5555, 13579, 97531], [135, 975], [135, 357], [13579, 97531], [13579, 97531], [13579, 97531], [33, 55, 77, 99, 151], [135, 357, 975], [13579, 97531], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135], [13579, 97531], [135, 357, 777], [33, 13579, 97531], [13579, 15793, 97531], [33, 55, 77, 99, 151], [13579, 13579, 97531], [1111, 1111, 3333, 5555, 7777, 9999], [], [13579, 15791], [13579, 97531], [975], [33, 55, 55, 77, 99, 151], [13579, 97531], [15, 33, 55, 77, 77, 99, 151], [1111, 1111, 1357, 5555, 7777, 9999], [135, 357, 777], [135, 975, 1357], [13579, 97531], [13579, 97531, 97531], [13579, 97531], [], [135, 975], [77, 135, 357, 975], [135, 357, 777], [1111, 1357, 5555, 7777, 9999], [33, 55, 55, 99, 151], [13579, 97531], [135, 975], [1111, 1357, 5555, 7777, 9999], [33, 55, 55, 77, 99, 151], [77, 13579, 97531], [1111, 1111, 3333, 5555, 7777, 9999], [1111, 1111, 3333, 5555, 7777, 9999], [13579, 97531], [97531], [135, 357, 975, 975], [5555, 13579], [15], [], [135, 975], [13579], [135, 357, 777], [33, 55, 77, 99, 151], [33, 55, 55, 77, 99, 151], [135, 357, 975], [1111, 1111, 1357, 5555, 5555, 7777, 9999], [1111, 1111, 3333, 5555, 7777, 9999], [13579, 97531], [13579, 13579, 97531], [975], [13579, 97531], [135, 357, 975, 975], [333, 13579, 97531], [135, 357, 975], [55, 77, 1111, 1111, 3333, 5555, 7777, 9999], [], [135], [135, 975], [111, 555, 777, 777, 999, 1111, 3333, 5555, 7777, 9999], [135, 357, 975], [111, 555, 777, 777, 999, 1111, 3333, 5555, 7777, 9999], [1111, 1357, 5555, 7777, 9999], [13579, 97531], [15, 33, 55, 77, 99, 151], [13579, 97531], [135, 357, 777], [55, 77, 1111, 1111, 3333, 7777, 9999], [13579, 97531], [135, 975], [975], [5555, 13579], [13579, 97531, 97531], [135, 975], [111, 333, 555, 777, 999, 999, 1111, 3333, 5555, 7777, 9999], [33, 55, 55, 99, 151], [33, 55, 77], [135, 357, 777], [13579, 15791], [135, 975], [135, 975], [135], [13579, 97531], [135, 975], [135], [], [13579, 97531], [975], [135, 357, 777], [13579, 13579, 97531], [1111, 1357, 5555, 9999], [13579, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 5555, 7777, 9999], [135, 975, 975], [13579, 97531], [55, 77, 555, 1111, 1111, 3333, 5555, 7777, 9999], [15, 33, 55, 99], [17], [135, 357, 975, 975], [33, 55, 55, 77, 99, 151], [13579, 13579, 97531, 97531], [135, 357, 975, 975], [135, 357, 777], [], [13579, 97531], [1111, 3333, 5555, 7777, 9999], [13579, 15793, 97531], [], [135, 357, 975], [135, 975], [135, 357, 975], [111, 333, 555, 777, 999, 1111, 3333, 5555, 5555, 7777, 9999], [13579, 13579, 97531], [111, 13579, 13579], [], [17], [33, 55, 77, 99, 151], [135, 975, 975], [15, 33, 55, 77, 99, 151], [17], [15, 33, 55, 77, 151], [135, 975, 15793], [357, 777], [135, 975, 975], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [975], [135], [135, 357, 975], [975], [135, 975, 97531], [15, 33, 55, 77, 99, 151], [33, 55, 55, 77, 99, 151], [33, 55, 55, 77, 99], [135, 135, 975], [13579, 97531], [135], [135, 975, 15793, 15793, 15793], [97531], [15, 33, 55, 77, 99, 151], [33, 55, 55, 77, 99, 151, 151], [135, 975], [13579, 15793, 97531], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135, 357, 975], [33, 55, 77, 99, 151], [], [33, 55, 55, 99, 151], [13579, 97531, 97531], [135, 357, 975], [15791], [13579, 97531], [33, 55, 55, 77, 99, 151], [13579, 15793, 15793, 97531], [1111, 1111, 1357, 5555, 5555, 7777], [5555, 13579], [], [135], [1111, 3333, 5555, 9999], [975], [13579, 97531], [1111, 1111, 3333, 5555, 7777, 9999], [], [], [5555, 13579, 97531, 97531], [13579, 13579], [55, 975], [], [135, 975], [], [5555, 13579, 97531], [5555, 13579, 97531, 97531], [1111, 1111, 3333, 5555, 7777, 9999], [1111, 1111, 3333, 5555, 7777, 9999], [135, 357, 975], [135, 333, 975], [13579, 97531], [13579, 97531], [77, 135, 357, 975], [5555, 13579], [135, 975], [135, 975], [], [135, 97531], [999, 13579, 97531], [13579, 97531], [13579, 97531], [], [135, 975], [13579], [13579, 97531], [15, 33, 55, 77, 99, 151], [], [33, 55, 55, 99, 99, 151], [], [33, 55, 55, 77, 77, 99, 151], [135, 975, 97531], [97531], [135, 357, 975, 975, 135791], [135, 357, 975], [13579, 97531], [], [], [135], [15, 33, 55, 77, 99, 151], [555, 13579, 97531], [135, 975, 975], [13579, 15793, 97531], [13579, 15793, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [33, 55, 77, 99, 151], [135, 357, 777], [17], [111, 555, 777, 777, 999, 1111, 3333, 5555, 7777, 9999], [1111, 1111, 1111, 3333, 5555, 7777, 9999, 9999], [135], [13579, 13579, 97531], [135, 975, 15793, 15793, 15793], [135, 357, 975, 975], [13579, 97531], [13579, 97531], [13579], [135, 975], [5555, 13579], [13579], [1111, 1357, 5555, 7777, 9999], [], [55, 77, 555, 1111, 1111, 3333, 5555, 7777], [3333, 5555, 9999], [33, 55, 55, 77, 99, 151], [135, 97531], [], [135], [33, 33, 55, 77, 99, 151], [135, 975], [13579], [13579, 13579], [13579, 97531], [135, 975, 97531], [13579, 13579, 15793, 97531], [13579, 15791], [333, 13579, 97531], [135, 357, 777], [], [], [135, 975, 1357], [135, 357, 975, 975, 135791], [13579, 97531], [135, 975], [135, 357, 975], [135, 975, 975], [135, 975], [13579, 97531], [13579, 13579, 15793, 97531], [135, 975, 975], [151, 13579, 13579], [13579, 13579, 13579, 97531], [13579, 97531], [135, 975], [1111, 1357, 5555, 7777, 9999], [33, 55, 55, 77, 99, 151, 151], [135, 357, 777], [15, 55, 77, 151], [97531], [135, 975, 975], [555, 13579], [1111, 1111, 3333, 5555, 7777, 9999], [135, 975, 1357], [13579, 97531], [975], [975], [], [135, 357, 777], [135, 357, 777], [15, 33, 55, 77, 77, 99, 151], [], [13579, 97531, 97531], [111, 333, 555, 777, 999, 999, 1111, 3333, 5555, 7777, 9999], [999, 13579, 97531, 97531], [13579, 97531], [135, 357, 975, 975, 135791], [135, 357, 975], [13579], [135, 15793], [13579, 97531], [135, 357, 777], [13579, 97531], [135, 975], [135, 357, 777], [1111, 1111, 3333, 5555, 7777, 9999], [15, 33, 55, 77, 99, 151, 151], [135, 135, 975], [13579, 13579, 97531], [15, 33, 55, 77, 99, 151, 151], [33, 55, 77, 99, 151], [135, 975, 975], [111, 333, 555, 777, 1111, 3333, 5555, 7777, 9999], [15, 33, 55, 77, 99, 151], [], [975], [135, 777], [357, 777], [33, 55, 55, 77, 99, 151, 151], [135, 179, 975], [13579, 97531], [135, 975, 975], [13579, 13579, 97531], [135, 357, 975], [1111, 1111, 1357, 5555, 5555, 7777], [15], [13579, 15791], [77, 135, 357, 975], [135, 975, 975], [135, 333, 357, 975], [13579, 97531, 97531], [], [135, 975], [135, 135, 975], [135, 975], [], [1111, 1357, 5555, 7777, 9999], [], [], [111, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135, 135, 975], [55, 77, 555, 1111, 1111, 3333, 7777, 9999], [77, 135, 357, 357, 975], [], [135, 975, 1357], [135, 357, 777], [55, 77, 555, 1111, 1111, 3333, 3333, 7777, 9999], [135, 975], [135], [135, 975], [1111, 1111, 5555, 7777, 9999], [975], [135, 357, 777], [13579, 97531], [13579], [151, 973, 13579, 13579], [], [], [13579], [], [33, 55, 77, 99, 151], [13579, 97531], [], [135, 975], [1111, 1111, 1357, 5555, 5555, 7777], [111, 333, 555, 777, 999, 1111, 3333, 5555, 5555, 7777, 9999], [333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135], [135, 357, 975], [], [33, 55, 55, 77, 99, 151, 151, 7777], [135, 975, 5555], [13579], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135, 135, 975], [13579, 15791, 97531], [13579, 97531], [135, 357, 777], [], [135, 357, 975], [33, 55, 55, 77, 77, 99, 151], [13579, 15793], [1111, 3333, 7777, 9999], [13579, 15793, 97531], [13579, 13579, 97531, 97531], [135], [1111, 1111, 3333, 5555, 7777, 9999], [135, 975], [13579], [97531], [975], [135, 975, 1357], [135, 975], [99, 135, 179, 975], [1111, 1111, 3333, 5555, 7777, 9999], [135, 975], [135, 975], [33, 77, 99, 151], [135, 135, 975], [], [135, 975], [135, 975], [97531], [135, 357], [33, 77, 99, 151, 151], [13579, 97531], [111, 555, 777, 777, 999, 1111, 3333, 5555, 7777, 9999], [97531], [77, 135, 975], [1111, 1111, 3333, 5555, 7777, 7777, 9999], [1111, 3333, 5555, 7777, 9999], [975], [135, 357, 975, 975, 975, 135791], [13579, 97531], [135, 975], [33, 55, 55, 77, 99, 151, 151], [15, 33, 99], [97531], [97531], [], [135, 333, 975], [333, 13579], [], [135, 357, 975], [], [975, 13579], [111, 555, 777, 777, 999, 1111, 3333, 5555, 7777, 9999], [33, 33, 55, 77, 99, 151, 1357], [5555, 97531, 97531], [135, 975, 975], [13579, 97531, 97531], [135], [1111, 3333, 5555, 7777, 9999], [135, 357, 975], [1111, 1111, 1357, 5555, 5555, 7777], [135, 975, 1357], [13579, 97531], [13579, 15791], [135, 357, 777], [135, 357, 975], [5555, 13579, 97531, 97531], [135], [111, 333, 333, 555, 777, 999, 1111, 3333, 5555, 5555, 7777, 9999], [13579, 15793, 97531], [135, 975], [135, 357, 777], [15, 5555, 13579, 97531], [13579, 97531], [975], [13579, 97531], [135, 357, 777], [33, 55, 77, 99, 151], [97531], [15, 33, 55, 77, 99, 151], [13579, 97531], [135, 975], [111, 555, 777, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [9999, 13579, 15791], [5555, 13579], [15, 5555, 13579, 97531], [135, 357, 975], [135, 357, 975, 975], [13579], [], [], [13579, 97531], [975], [135], [135], [13579, 97531, 97531, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135, 777], [13579], [135], [13579, 97531], [], [13579, 15793, 97531], [135, 135, 357, 777], [135, 975, 97531], [77, 13579, 97531], [15], [33, 55, 55, 55, 99, 151], [1111, 1111, 1357, 5555, 5555, 7777], [135, 357, 357], [], [], [], [11111, 33333, 55555], [13579], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [13579, 97531], [], [], [], [], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [1357, 13579, 135791], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [], [1357, 13579], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [15, 33, 55, 77, 151], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 999, 1111, 3333, 5555, 7777, 9999], [], [], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [1357, 13579, 135791], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [], [], [777], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [1357, 13579], [], [13579, 97531], [1357, 13579, 135791], [999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [71], [], [111111111], [13579, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 3333, 5555, 7777, 9999], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [13579, 135791], [], [135, 357, 975, 975, 975], [135, 357, 975, 975, 975], [], [], [], [13579, 97531], [], [777], [], [111, 333, 555, 999, 1111, 3333, 5555, 7777, 9999], [13579, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [13579, 97531], [], [], [13579], [], [13579], [], [9999], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999, 9999], [3, 13], [13579, 97531], [], [111, 333, 555, 777, 999, 1111, 3333, 3333, 5555, 7777, 9999], [1357], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [99], [5], [1357, 13579], [], [], [13579, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [135, 135, 357, 975, 975, 975], [1357, 13579, 135791], [15, 33, 55, 77, 99, 151], [135, 135, 357, 975, 975], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 999, 1111, 3333, 5555, 9999], [1357, 13579, 135791], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [3, 5, 13], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [], [5], [5, 7777], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [777], [51, 71], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [37], [], [55, 1357, 13579, 135791], [], [5], [], [13579, 135791], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135], [], [5], [13579, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [13579, 13579], [1357, 13579], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [37, 111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [9999], [1357, 13579, 135791], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [1357, 13579], [33, 55, 77, 151], [], [13579, 97531], [13579, 13579], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [5, 7777], [15, 33, 55, 77, 99, 151], [5, 7777], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [777], [71], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [37, 73], [111, 333, 555, 777, 975, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [37], [], [], [1357, 13579, 13579], [], [15, 15, 33, 55, 77, 99, 151], [777], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 7777, 9999], [], [111, 333, 555, 777, 999, 1111, 3333, 5555], [17], [], [], [5, 17], [], [3, 135, 357, 975, 975, 975], [], [111, 333, 555, 777, 999, 1111, 3333, 3333, 5555, 7777, 9999], [999], [5], [], [71], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [135, 135, 357, 975, 975, 975], [1357], [111, 333, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [5], [13579], [], [5, 1111], [1357], [5], [3, 5, 13], [11], [13579, 97531], [15, 15, 33, 51, 55, 77, 99, 151], [], [13579, 97531], [], [111, 333, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 3333, 5555, 7777, 9999], [], [], [15, 33, 55, 151], [111, 333, 357, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [3, 7, 13], [1357], [357, 975, 975, 975], [], [555], [], [7], [13579, 97531], [], [5, 7777], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [71, 71], [111, 333, 555, 777, 999, 1111, 5555, 7777, 9999], [111, 333, 555, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 5555, 7777, 9999], [1357, 13579, 135791], [111, 333, 555, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555], [], [1357, 13579], [13579, 97531], [111, 333, 555, 777, 999, 1111, 3333, 5555], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [3, 5, 13], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [5, 7777], [], [], [], [], [], [15, 33, 55, 55, 151], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [555], [], [1357], [55, 77, 151], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 999, 1111, 3333, 5555, 9999], [111, 333, 555, 777, 999, 1111, 3333, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [1111, 3333, 5555, 7777, 9999], [111, 333, 555, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [13579, 97531], [], [111, 333, 555, 777, 999, 1111, 3333, 3333, 5555, 7777, 9999], [15, 15, 33, 55, 77, 99, 151], [13579, 135791], [], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [], [111, 333, 555, 777, 999, 1111, 3333, 3333, 5555, 7777, 7777, 9999], [13579, 97531], [111, 333, 777, 999, 1111, 3333, 5555], [135], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [99], [1357, 13579], [], [777], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 777, 1111, 3333, 5555, 7777], [37], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [17, 135], [97531], [111, 333, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999, 9999], [5], [15, 15, 33, 55, 77, 99, 151], [111, 333, 555, 777, 999, 999, 1111, 5555, 7777, 9999], [111, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [135], [], [135, 357, 975, 975, 975], [135, 135, 975], [], [], [3, 5, 7, 13], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 777, 999, 3333, 5555, 7777, 9999], [111, 333, 555, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [3, 5, 7, 13], [1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [71], [], [111, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [17], [135], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [71], [], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [37], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999, 9999], [13579, 13579, 97531, 97531], [], [111, 333, 555, 555, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [5], [111, 333, 555, 777, 999, 3333, 5555, 7777, 9999], [], [5, 17], [15, 33, 55, 55, 151], [55, 1357, 13579, 135791], [13579], [5], [13579], [55, 1357, 13579, 135791], [111, 333, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [3, 5, 13, 17], [13579], [777], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [3, 135, 357, 975, 975], [555, 13579, 97531], [111, 333, 555, 555, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 5555, 7777, 9999], [1357, 13579], [1357, 13579, 135791, 135791], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 999, 1111, 3333, 5555, 7777, 9999], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [1357, 135791], [37, 73], [], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [1357], [13579, 97531], [111, 333, 555, 777, 975, 999, 1111, 3333, 5555, 7777, 9999], [7, 13579, 97531], [111, 333, 555, 777, 999, 1111, 3333, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [], [13579, 97531], [], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [3, 5, 13, 17], [15, 33, 55, 77, 151], [], [111, 333, 555, 777, 999, 1111, 1111, 3333, 5555, 7777, 9999], [111, 333, 555, 777, 999, 1111, 3333, 5555, 7777, 9999], [13579, 97531]]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/105", "prompt": "\ndef by_length(arr):\n    \n\n    def to_word(x: int) -> str:\n      if x == 1:\n        return \"One\"\n      elif x == 2:\n        return \"Two\"\n      elif x == 3:\n        return \"Three\"\n      elif x == 4:\n        return \"Four\"\n      elif x == 5:\n        return \"Five\"\n      elif x == 6:\n        return \"Six\"\n      elif x == 7:\n        return \"Seven\"\n      elif x == 8:\n        return \"Eight\"\n      else:\n        return \"Nine\"\n    sorted_list, ans = sorted(arr)[::-1], []\n    for x in sorted_list:\n      if 1 <= x <= 9:\n        ans.append(to_word(x))\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef by_length(arr):\n    \n\n    def to_word(x: int) -> str:\n      if x == 1:\n        return \"One\"\n      elif x == 2:\n        return \"Two\"\n      elif x == 3:\n        return \"Three\"\n      elif x == 4:\n        return \"Four\"\n      elif x == 5:\n        return \"Five\"\n      elif x == 6:\n        return \"Six\"\n      elif x == 7:\n        return \"Seven\"\n      elif x == 8:\n        return \"Eight\"\n      else:\n        return \"Nine\"\n    sorted_list, ans = sorted(arr)[::-1], []\n    for x in sorted_list:\n      if 1 <= x <= 9:\n        ans.append(to_word(x))\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef by_length(arr):\n    \n\n    def to_word(x: int) -> str:\n      if x == 1:\n        return \"One\"\n      elif x == 2:\n        return \"Two\"\n      elif x == 3:\n        return \"Three\"\n      elif x == 4:\n        return \"Four\"\n      elif x == 5:\n        return \"Five\"\n      elif x == 6:\n        return \"Six\"\n      elif x == 7:\n        return \"Seven\"\n      elif x == 8:\n        return \"Eight\"\n      else:\n        return \"Nine\"\n    sorted_list, ans = sorted(arr)[::-1], []\n    for x in sorted_list:\n      if 1 <= x <= 9:\n        ans.append(to_word(x))\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef by_length(arr):\n    \n    def to_word(x: int) -> str:\n        # Adding unnecessary checks and operations\n        if x == 1:\n            if x != 0:\n                return \"One\"\n        elif x == 2:\n            if x > 0:\n                return \"Two\"\n        elif x == 3:\n            if x < 4:\n                return \"Three\"\n        elif x == 4:\n            if x == 4:\n                return \"Four\"\n        elif x == 5:\n            if x != 6:\n                return \"Five\"\n        elif x == 6:\n            if x == 6:\n                return \"Six\"\n        elif x == 7:\n            if x > 5:\n                return \"Seven\"\n        elif x == 8:\n            if x < 9:\n                return \"Eight\"\n        else:\n            if x >= 9:\n                return \"Nine\"\n    \n    # Adding redundant operations\n    sorted_list = sorted(arr)\n    sorted_list = sorted_list[::-1]\n    ans = []\n    \n    for x in sorted_list:\n        # Adding unnecessary loop\n        for _ in range(1):\n            if 1 <= x <= 9:\n                ans.append(to_word(x))\n    \n    # Adding redundant check\n    if len(ans) >= 0:\n        return ans\n<code_end>\n```", "modification": "\ndef by_length(arr):\n    \n    def to_word(x: int) -> str:\n        \n        if x == 1:\n            if x != 0:\n                return \"One\"\n        elif x == 2:\n            if x > 0:\n                return \"Two\"\n        elif x == 3:\n            if x < 4:\n                return \"Three\"\n        elif x == 4:\n            if x == 4:\n                return \"Four\"\n        elif x == 5:\n            if x != 6:\n                return \"Five\"\n        elif x == 6:\n            if x == 6:\n                return \"Six\"\n        elif x == 7:\n            if x > 5:\n                return \"Seven\"\n        elif x == 8:\n            if x < 9:\n                return \"Eight\"\n        else:\n            if x >= 9:\n                return \"Nine\"\n    \n    \n    sorted_list = sorted(arr)\n    sorted_list = sorted_list[::-1]\n    ans = []\n    \n    for x in sorted_list:\n        \n        for _ in range(1):\n            if 1 <= x <= 9:\n                ans.append(to_word(x))\n    \n    \n    if len(ans) >= 0:\n        return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[2, 1, 1, 4, 5, 8, 2, 3]], [[]], [[1, -1, 55]], [[1, -1, 3, 2]], [[9, 4, 8]], [[9, 8, 7, 6, 5, 4, 3, 2, 1]], [[-1, 0, 5, 6, 10]], [[9, 5, 2, 1, 1, 5, 6, 8]], [[8, 9, 7, 5, 4, 3, 2, 1, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9]], [[3, 3, 3, 3, 3, 3]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[9, 9, 9, 8, 8, 8, 7, 7, 7, 1, 1, 1]], [[5, 3, 2, 1, 9, 8, 7, 6]], [[4, 8, 15, 6, 7, 21, 9]], [[6, 3, 3, 3, 3]], [[4, 3, 2, 1, 9, 8, 7, 6]], [[1, 2, 3, 5, 6, 7, 8, 9]], [[8, 9, 7, 5, 4, 3, 2, 1, 5]], [[9, 5, 2, 1, 1, 5, 6, 0, 8]], [[9, 5, 2, 1, 1, 8, 5, 6, 0, 8]], [[9, 8, 7, 6, 5, 5, 4, 3, 2, 1]], [[9, 5, 2, 1, 1, 5, 21, 6, 8]], [[4, 3, 2, 1, 9, 8, 7, 6, 2]], [[9, 5, 2, 0, 1, 1, 5, 6, 0, 8]], [[9, 5, 2, 1, 1, 5, 6, 0, 8, 5]], [[1, 6, 4, 5, 10, 6, 7, 7, 8, 9]], [[1, 2, 3, 4, 6, 21, 7, 8, 9, 10]], [[9, 8, 5, 4, 4, 3, 2, 1, 2]], [[4, 8, 7, 6, 5, 4, 3, 1]], [[1, 22, 2, 3, 4, 6, 21, 7, 8, 9, 10]], [[4, 2, 2, 1, 9, 8, 7, 6, 2]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 4]], [[4, 2, 1, 9, 8, 7, 6, 2]], [[1, 2, 3, 4, 6, 21, 7, 8, 9, 10, 2]], [[2, 2, 3, 5, 6, 2, 7, 8, 9]], [[4, 8, 3, 4, 7, 6, 5, 4, 3, 1]], [[4, 3, 1, 9, 8, 7, 6, 2]], [[9, 5, 2, 1, 5, 8, 8]], [[1, 2, 3, 6, 21, 7, 8, 9, 10, 10, 8]], [[1, 2, 3, 6, 21, 7, 8, 9, 10, 10, 8, 2]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 4, 4]], [[4, 2, 2, 1, 9, 7, 7, 6, 2]], [[9, 9, 9, 8, 8, 8, 9, 7, 9, 7, 1, 1, 1]], [[4, 3, 3, 2, 1, 9, 8, 7, 6, 2]], [[8, 7, 5, 4, 3, 2, 1, 5]], [[9, 9, 6, 8, 8, 8, 7, 7, 7, 1, 1, 1]], [[8, 7, 5, 4, 3, 2, 1, 5, 4]], [[4, 2, 2, 22, 9, 8, 7, 6, 2, 9]], [[4, 2, 1, 9, 8, 7, 6, 3]], [[4, 3, 1, 9, 8, 7, 6]], [[8, 5, 7, 2, 1, 7, 1, 6, 8]], [[9, 5, 2, 1, 5, 6, 8]], [[9, 8, 7, 3, 6, 5, 5, 4, 3, 2, 1, 3]], [[4, 8, 4, 7, 6, 5, 4, 3, 1, 6]], [[9, 9, 9, 3, 8, 8, 7, 7, 7, 1, 1, 1]], [[4, 8, 4, 4, 7, 6, -1, 4, 3, 1, 6]], [[4, 8, 15, 6, 7, 21, 9, 4]], [[8, 3, 4, 7, 6, 5, 4, 3, 1]], [[1, 0, 22, 2, 3, 4, 6, 21, 7, 8, 9, 10]], [[9, 8, 7, 3, 6, 3, 5, 5, 4, 3, 2, 1, 3]], [[9, 5, 2, 1, 5, 21, 8]], [[1, 2, 3, 4, 5, 6, 1, 8, 9, 10]], [[1, 22, 2, 3, 4, 6, 21, 7, 8, 2, 9, 10, 21]], [[9, 8, 4, 4, 4, 3, 1, 2]], [[1, 22, 2, 3, 4, 6, 21, 7, 9, 10]], [[4, 2, 1, 9, 8, 7, 6, 2, 4]], [[4, 8, 4, 4, 7, 6, -1, 4, 10, 3, 1, 6]], [[-1, 3, 2, 2, 1, 9, 9, 7, 6]], [[4, 8, 3, 4, 7, 5, 4, 3, 1]], [[3, 3, 1, 9, 8, 7, 6]], [[8, 7, 5, 5, 4, 3, 2, 1, 5]], [[-1, 5, 6, 10]], [[1, 6, 4, 5, 10, 6, 7, 15, 7, 8, 9]], [[3, 9, 8, 7, 3, 6, 3, 5, 5, 4, 3, 2, 1, 3]], [[1, 6, 4, 10, 6, 7, 15, 2, 7, 8, 9]], [[4, 8, 10, 15, 6, 7, 21, 9]], [[9, 9, 6, 8, 8, 8, 7, 7, 7, 10, 1, 1, 1, 7]], [[4, 8, 3, 4, 7, 5, 4, 3, 1, 7]], [[4, 8, 5, 4, 7, 6, 5, 4, 3, 1, 6]], [[1, 22, 2, -1, 3, 4, 6, 21, 7, 9, 10]], [[9, 8, 4, 3, 4, 3, 1, 4]], [[9, 8, 4, 3, 4, 4, 3, 1, 5, 4]], [[1, 2, 3, 6, 21, 7, 8, 9, 10, 10, 0]], [[4, 3, 1, 9, 9, 8, 7, 5]], [[4, 3, 3, 2, 9, 8, 7, 6, 3]], [[3, 9, 8, 7, 3, 6, 3, 5, 5, 4, 3, 2, 1, 3, 7]], [[9, 5, 2, 1, 1, 5, 6, 0, 8, 5, 8]], [[2, 2, 3, 5, 6, 2, 7, 10, 8, 6, 9]], [[10, 5, 4, 8, 4, 4, 7, 6, -1, 4, 3, 2, 6]], [[9, 5, 2, 1, 9, 5, 6, 0, 8]], [[1, 2, 4, 6, 21, 7, 8, 9, 10]], [[8, 4, 7, 5, 5, 4, 3, 2, 1, 5]], [[9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 8]], [[9, 5, 2, 1, 1, 5, -1, 6, 0, 8, 5]], [[4, 2, 1, 1, 9, 8, 7, 6, 2]], [[4, 8, 10, 15, 6, 7, 21, 9, 6]], [[9, 8, 7, 3, 6, 3, 5, 5, 4, 1, 3, 2, 1, 3, 3]], [[1, 2, 3, 6, 21, 7, 8, 9, 10, 10, 10, 2]], [[22, 9, 9, 8, 8, 8, 7, 7, 7, 1, 1, 1, 7]], [[4, 8, 15, 6, 4, 10, 4]], [[9, 8, 7, 6, 5, 4, 2, 1, 4, 6]], [[9, 6, 5, 2, 1, 9, 5, 6, 0, 8]], [[9, 9, 6, 1, 8, 8, 8, 7, 7, 7, 1, 1, 1]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200, 300]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[3, 3, 3, 3, 3, 3, 3, 3, 3]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 11]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5]], [[1, 3, 3, 4, 5, 6, 7, 8, 9]], [[9, 8, 7, 2, 6, 5, 4, 3, 2, 1]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 3]], [[0, 10, 11, 12, 13, 14, 11, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 16]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18]], [[3, 3, 3, 3, 4, 3, 3, 3, 3]], [[100000, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[9, 8, 7, 2, 6, 3, 5, 4, 3, 2, 1]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -4]], [[1, 3, 3, 4, 5, 6, 7, 8, 9, 3]], [[1, 3, 3, 5, 6, 7, 8, 9]], [[1, 3, 3, 4, 5, 25, 6, 7, 8, 9]], [[100000, -1000, 4, 2, 8, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[1, 2, 3, 4, 5, 6, 7, 8, 30]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 300]], [[10, 8, 7, 6, 5, 7, 4, 3, 2, 1]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 18, 19, 20, 18]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 25, 200, 300]], [[0, 1, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10]], [[0, 1, 2, 3, -1000, 5, 6, 7, 8, 9, -4]], [[1, 2, 3, 4, 5, 6, 8, 9]], [[8, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 3]], [[1, 3, 3, 4, 6, 7, 8, 9, 3]], [[1, 1, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -30, 7, 8, 9, 1]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 13, 14, 15, 16, -4, 18, 19, 20, 18]], [[1, 3, 3, 4, 5, 25, 6, 7, 8, 9, 4]], [[1, 2, 3, 4, 5, 6, 8, 8]], [[1, 3, 3, 4, 5, 25, 6, 7, -20, 9]], [[1, 1, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -30, 7, 8, 8, 1]], [[3, 3, 3, 100, 3, 3, 3, 3, 3, 3]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 5]], [[1, 3, 3, 4, 5, 25, 6, 7, -20, 9, 3]], [[0, 1, 2, 3, 5, 4, 5, 6, 7, 8, -4]], [[9, 8, 7, 2, 6, 7, 3, 5, 4, 3, 2, 6]], [[0, 1, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10, 7]], [[0, 10, 11, 12, 14, 15, 16, -1, -5, 20, 25, 30, 25, 200, 300]], [[1, 3, 3, 5, 6, 7, 8, 9, 3]], [[1, 300, 3, 3, 5, 7, 8, 9]], [[-1, -2, -3, -4, -5, -20, -6, -7, -8, -9]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 6, -10]], [[100000, -1000, 4, 2, 8, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 17]], [[1, 2, 3, 4, 5, 6, 8, 8, 5, 8]], [[0, 1, 8, 2, 3, 7, 4, 4, 5, 6, 7, 8, 9, 10]], [[100000, -1000, 4, 8, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[-1000, 8, 8, 2, 6, 3, 5, 4, 3, 2, 5]], [[3, 3, 2, 100, 3, 3, 3, 3, 3, 3]], [[1, 1, 2, 2, 3, 2, 4, 4, 7, 5, 5, 6, -20, -30, 7, 8, 8, 1]], [[100000, -1000, 2, 8, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, -10]], [[1, 3, 3, 4, 5, 6, 9, 9, 3]], [[1, 3, 3, 4, 4, 25, 6, 7, -20, 9, 3, -20]], [[1, 2, 3, 4, 5, -20, 8, 8]], [[0, 10, 11, 12, 13, 7, 15, 16, -1, -5, 20, 25, 30, 100, 300, 16, 0]], [[1, 2, 3, 4, 5, 6, 7, 31, 8, 30]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3]], [[0, 10, 11, 12, 13, 14, 11, 15, 16, 0, -1, -9, 20, 25, 30, 100, 200, 300, -5, 16, 0]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1]], [[9, 8, 7, 2, 8, 4, 3, 2, 1, 8, 2]], [[0, 1, 8, 3, 3, 7, 4, 4, 5, 6, 7, 8, 9]], [[-1, -2, -3, 0, -4, -5, -6, -7, -8, -9]], [[9, 8, 7, 2, 6, 5, 4, 3, 5, 2, 1]], [[1, 1, 2, 2, 3, 3, 4, 5, 5, 6, -10, -20, -30, 7, 8, 1, 3, 2]], [[0, 10, 11, 12, 13, -1000, 15, 16, -1, -5, 20, 25, 30, 100, 300]], [[1, 300, 3, 3, 3, 5, 7, 8, 9]], [[1, 1, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -29, 7, 8, 9, 1]], [[1, 2, 3, 4, 5, -7, 7, 8, 30]], [[100000, -1000, -29, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8]], [[9, 8, 7, 2, 6, 3, 5, 4, 3, 6, 1, 5]], [[0, 1, 8, 3, 3, 7, 4, 4, 5, 6, 7, 8, 9, 3]], [[1, 2, 3, 4, 5, 6, 8, 5]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 8]], [[3, -2, 3, 3, 3, 4, 3, 3, -3, 3]], [[3, 3, 2, 100, 3, 3, 3, 3, 100, 3]], [[10, 8, 7, 6, 5, 4, 3, 1, 1, 2]], [[0, 1, 8, 2, 3, 13, 7, 4, 5, 6, 7, 8, 9, 10, 7]], [[-1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 300, 8, 9, 1, 3]], [[8, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 3, 4]], [[1, 3, 3, 4, 5, 6, 7, 8, 9, 3, 5]], [[1, 3, 3, 4, 5, 6, 8, 9]], [[1, 18, 1, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3]], [[1, 18, 1, 2, 3, 3, 4, -8, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3, 6]], [[1, 2, 4, 5, -7, 7, 8, 30]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 13]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 8, 16]], [[-1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10]], [[0, 10, 11, 12, 13, 7, 15, 16, -1, -5, 20, 25, 30, 100, 300, 16, 0, 30, 16]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 2, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18]], [[100000, -1000, 4, 2, 8, 1, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 8, 16]], [[1, 2, 3, 4, 5, 6, 8, 8, 3]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -4, 8]], [[100000, -1000, 4, 2, 8, 1, 9, 18, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 8, 16]], [[-1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 300, 8, 9, 1, 3, 5, 3, -1]], [[0, 10, 11, 12, 13, -1000, 15, 16, -1, -5, 20, 25, 30, 100, 300, 16]], [[100000, 2, 3, 4, 5, 7, 8, 9, 6, 10]], [[-8, 0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 14]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 300, -1]], [[8, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 3, 5]], [[1, 2, 3, 4, 5, 6, 8, 4, 5]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 16]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100]], [[3, 3, 2, 100, 3, 3, 3, 100, 3]], [[1, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10]], [[0, 1, 8, 2, 3, 13, 7, 4, 5, 6, 7, 8, 9, 10, 7, 5]], [[0, 10, 11, 12, 13, 14, 11, -10, 16, 0, -1, -9, 20, 25, 30, 100, 200, 300, -5, 16, 0, 100, -9]], [[3, 3, 2, 100, 3, 3, 3, 100, 3, 2]], [[1, 2, 4, 5, 8, 5, 6, 8, 5]], [[1, 3, 3, 4, 5, 6, 7, 9, 9]], [[9, 8, 7, 3, 2, 6, 5, 4, 3, 2, 1]], [[1, 3, 3, 4, 4, -7, 6, 7, -20, 9, 3, -20, 6]], [[0, 10, 11, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100]], [[1, 2, 17, -8, -7, 7, 8, 30]], [[1, 18, 1, 2, 2, 3, 4, -8, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3, 6, 3]], [[0, 15, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100]], [[3, 11, 3, 3, 3, 3, 3, 3, 3, 3]], [[0, 10, 11, 12, 14, 15, 16, -1, -5, 20, 25, 12, 30, 25, 200, 300]], [[0, 1, 8, 2, 3, 13, 7, 4, 5, 6, 7, 8, 9, 10, 7, 5, 8]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, -10, 1, 3]], [[1, 18, 1, 2, 2, 3, 4, -8, 4, 5, 5, 6, -20, -30, 7, 8, 9, 2, 1, 3, 6, 3]], [[1, 2, 4, 4, 5, 7, 8, 9, 5]], [[1, 3, 3, 4, 5, 6, 7, 8, 3, 5, 5]], [[100000, -1000, 4, 2, 8, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 17, 12]], [[1, 2, 3, 4, 5, -29, 8, 4, -4]], [[3, 11, 3, 3, 3, 3, 3, 3, 4, 3]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 14]], [[-1, -3, -1, 0, -4, -5, -6, -7, -8, -9]], [[-1, 1, 7, 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 10]], [[9, 8, 7, 2, 8, 4, 3, 2, 1, 2]], [[1, 3, 4, 5, 6, 14, 7, 8, 9, 4]], [[1, 3, 3, 5, 6, 7, 8, 9, 3, 7]], [[1, 2, 2, 4, 5, 6, 7, 8, 9, 5]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2]], [[-1, 1, 1, 2, 2, 3, 2, 4, 4, 5, 5, 6, -20, -30, 300, 8, 9, 1, 3]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 25]], [[1, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10, 3]], [[-1, 1, 3, 4, 5, 6, 7, 8, 10, 10]], [[1, 1, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -29, 9, 1, 2]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, -4, 6, 8]], [[9, 8, 7, 8, 4, 3, 2, 1, 2]], [[9, 8, 7, 3, 2, 6, 5, 4, 3, 2, 1, 1]], [[1, 3, 3, 4, 4, 25, 6, 7, -20, 9, 3]], [[3, 3, 100, 3, 3, 3, 3, 3, 3]], [[2, 1, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -29, 9, 1, 2]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 18, 18, 19, 20, 14]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 7]], [[1, 3, 3, 5, 6, 7, 8, 9, 3, 7, 9]], [[1, 3, 3, 5, 6, -3, 12, 8, 9]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 3, 100]], [[1, 3, 3, 4, 5, 6, 7, 8, 3, 5, 5, 1]], [[1, 1, 2, 2, 3, 2, 4, 7, 5, 5, 6, -20, -30, 7, 8, 8, 1]], [[1, 3, 3, 4, 5, 6, 7, 8, 9, 3, 7]], [[1, 3, 4, 5, 6, 14, 7, 9, 4]], [[0, 10, 11, 30, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 3, 100]], [[1, 1, 2, 2, 4, 3, 4, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3]], [[-3, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10, 3]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, 9, 9, 1, 3]], [[1, 1, 2, 2, 1, 4, 3, 4, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 6]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, 1, 3, 5]], [[1, 2, 17, -8, -7, 7, 8, 30, 30]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 20]], [[1, 3, 3, 4, 5, 4, 6, 9, 9, 3]], [[1, 3, 3, 5, 7, -3, 12, 8, 9]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 9, 7, 5, 6, 0, 11, 13, 13, 14, 15, 16, -4, 18, 19, 20, 18, -4]], [[100000, -1000, 4, 2, 8, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 17, 16]], [[100000, -1000, 4, 2, 8, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 17, 12]], [[0, 10, 11, 12, 13, 7, 15, 16, -1, -5, 20, 25, 31, 100, 300, 16, 0, 30, 16, 10]], [[1, 1, 2, 2, 3, 2, 4, 7, 5, 5, 6, -30, 7, 8, 8, 1]], [[-3, -1, -2, -3, -4, -5, -20, -7, -8, -9, -2]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, -20, -30, 7, 8, 9, 1, 3]], [[10, 8, 7, 6, 7, 100, 3, 1, 6]], [[-1000, 8, 8, 2, 6, -4, 5, 4, 3, 2, 5]], [[1, 300, 3, 3, 5, 7, 8, 9, 1]], [[0, 1, 8, 2, 3, 13, 7, 4, 5, 6, 7, 8, 9, 10, 7, 13, 7]], [[1, 2, 5, 3, 4, 5, 6, 8, 8, 5, 8]], [[100000, -1000, -29, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8, 14]], [[1, 3, 3, 4, 6, 9, 9, 3]], [[1, 300, 3, 3, 3, 5, 7, 8, 9, 9, 1]], [[9, 8, 7, 3, 2, 6, 5, 4, 3, 2, 1, -9]], [[1, 1, 2, 2, 2, 3, 3, 4, 4, 5, 5, 6, 8, -10, -20, -30, 7, 8, 9, 1, 6, -10, 2]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 3]], [[9, 1, 8, 7, 2, 8, 4, 3, 2, 1, 8, 2]], [[1, 2, 2, 3, -29, 3, 4, 4, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, -10]], [[1, 0, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1]], [[100000, -1000, 4, 2, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 3, 13]], [[8, 1, 1, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -29, 7, 8, 9, 1]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, -9, 16, 17, 18, 20, 18, 16, 2]], [[1, 6, 3, 3, 4, 5, 6, 7, 8, 3, 5, 5, 1]], [[3, 3, 100, 3, 3, 3, 3, 3, 3, 3, 3]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 4, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 14]], [[9, 8, 7, 8, 4, 3, 2, 1, 2, 2]], [[0, 10, 11, 12, 13, -1000, -7, 16, -1, -5, 20, 25, 30, 100, 300, 20]], [[1, 3, 3, 4, 4, -7, 5, 7, -20, 9, 3, -20, 6]], [[100000, -1000, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 11]], [[-1, -3, 1, -1, 0, -4, -5, -6, -7, -8, 1, -9, 0]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 200, 300, -5, 25, -5]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 4, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 20, 14]], [[0, 1, 2, 3, 5, 5, 6, 300, 7, 8, 9, 3]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, -4, 25, 200, 300, 13]], [[30, 0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 300]], [[9, 8, 7, 3, 2, 6, 5, 4, 3, 2, 1, 9]], [[1, 1, 2, 2, 3, 2, 4, 7, 5, 5, 6, -30, 7, -4, 8, 8, 1]], [[100000, -1000, 2, 8, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8]], [[1, 3, 3, 5, 7, 8, 9]], [[1, 3, 3, 4, 4, 25, 6, 7, -20, 9, 3, -20, -20]], [[100000, -1000, 15, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 16, 5]], [[100000, -1000, -29, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 16, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8, 1]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 17, 11, 13, 14, 15, 16, -4, 18, 6, 19, 20, 18, 3]], [[8, 1, 2, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -29, 7, 8, 9, 1]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 6, 0, 11, 20, 12, 13, 14, 15, 16, 18, 18, 19, 20, 14]], [[0, 10, 11, 12, 14, 15, 16, -1, -5, 20, 25, 12, 30, -2, 200, 300]], [[1, 3, 3, 4, 5, 25, 6, 7, -20, 9, -20]], [[100000, -1000, 4, 0, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, 18, 19, 20, 18, 8]], [[1, 300, 3, 3, 5, 16, 8, 9, 1]], [[-8, 0, 10, 11, 12, 13, 14, 15, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 25]], [[1, 8, 2, 200, 7, 4, 5, 6, 7, 8, 10, 3]], [[1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 6, -10]], [[100000, -1000, 15, 2, 8, 1, 9, 7, 4, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 14]], [[8, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 3, 5, -30]], [[1, 7, 3, 3, 4, 5, 25, 6, 7, 19, 8, 9, 4]], [[1, -29, 1, 2, 2, 3, 4, 4, 5, 5, 1, 6, -10, -20, -30, 7, 8, 9, 1, 3, 3]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, -8, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 11]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, -6, 100, 300]], [[1, 3, 3, 5, 6, 7, 8, 9, 6]], [[1, 20, 3, 3, 4, 5, 25, 5, 7, 8, 9]], [[1, 6, 3, 3, 4, 5, 6, 7, 8, 3, 5, 5, 1, 6]], [[1, 6, 3, 6, 3, 4, 5, 6, 7, 8, 3, 5, 5, 1]], [[1, 3, 3, 4, 4, -7, 5, 7, -20, 9, 3, -20, 6, -20]], [[1, 3, 3, 5, 7, -3, 12, 8, 9, 12]], [[1, 1, 2, 2, 2, 3, 3, 4, -10, 4, 5, 5, 6, 8, -10, -20, -30, 7, 8, 9, 1, 6, -10, 2]], [[1, 2, 3, 4, 6, 7, 31, 8, 30]], [[1, 300, 3, 3, 3, 5, 7, 8, 9, 9, 1, 1]], [[3, 3, 100, 2, 100, 3, 3, 3, 3, 3, 2]], [[2, 3, 4, 5, 6, 8, 3, 5]], [[1, 2, 17, -8, -7, 7, 8, 30, 8, 17]], [[9, 8, 7, 3, 2, 6, 5, 4, 3, 2, 1, 7]], [[10, 8, 7, 6, 9, 7, 4, 3, 2, 1, 7]], [[0, 10, 11, 12, 13, -1000, -7, 16, -1, -5, 20, 25, 13, 30, 100, 300, 20, -7]], [[1, 3, 3, 4, 5, 25, 6, 7, -20, 9, 3, 4]], [[1, 1, 2, 2, 3, 2, 4, 7, 5, 6, -20, -30, 7, 8, 8, 1]], [[1, 18, 1, 2, 3, 3, 4, -8, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3, 6, 3]], [[0, 10, 11, 12, 13, -1000, -7, -1, -5, 20, 25, 30, 100, 300, 20]], [[1, 1, 8, 2, 3, 13, 7, 5, 19, 6, 7, 8, 9, 10, 7, 13, 7]], [[100000, -1000, 2, 8, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 20]], [[1, 1, 2, 2, 3, 2, 4, 4, 7, 5, 6, -20, -30, 7, 8, 8, 1]], [[1, 1, 8, 2, 3, 8, 13, 7, 5, 19, 6, 7, 8, 9, 10, 7, 7, 13, 7]], [[2, 3, 5, 6, 7, 8, 9, 10, 6]], [[100000, -1000, 2, 8, 0, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8, 14]], [[100000, -1000, -29, 2, 8, 1, 9, -3, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 5, 17, 18, 19, 20, 18, 1, -2, 14]], [[0, 1, 8, 2, 3, 7, 4, 4, 5, 6, 7, 8, 9, 10, 2]], [[100000, -1000, -29, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 16, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8, 1, 16, 9]], [[1, 2, 3, 4, 5, 6, 8, 8, 6]], [[100000, -1000, 4, 2, 8, 9, 3, 7, 100000, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 17, 12]], [[1, 1, 8, 2, 3, 13, 7, 5, 19, 6, 7, 8, 9, 10, 7, 13, 12, 7, 3]], [[9, 8, 8, 8, 4, 3, 2, 1, 2, 2]], [[1, 18, 1, 2, 3, 3, 4, 4, 5, 17, 6, -20, -30, 7, 8, 9, 1, 7, 6]], [[10, 0, 10, 11, 12, 13, -1000, -7, 16, -1, -5, 20, 25, 13, 30, 100, 300, 20, -7]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, 3, 3, 5, 9]], [[0, 1, 2, 20, 5, 5, 6, 300, 8, 9, 3]], [[1, 1, 2, 2, 3, 3, 4, 12, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, -10]], [[1, 3, 100000, 5, 25, 6, 7, -20, 9, 3, 4]], [[1, 8, 2, 3, 200, 7, 4, 5, 6, 7, 8, 10, 3]], [[100000, -30, -1000, 2, 8, 0, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8, 14, 18]], [[1, 3, 3, 4, 5, 6, 9, 9, 3, 3]], [[0, 15, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100, 12]], [[1, 6, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10, 6]], [[9, 7, 7, 2, 6, 7, 3, 5, 4, 3, 2, 6, 5]], [[0, 10, 11, 12, 13, -1000, -1, -5, 20, 25, 30, 100, 300, 20]], [[1, 1, 2, 2, 2, 3, 3, 5, 5, 6, 8, -10, -20, -30, 7, 8, 9, 1, 6, -10, 2]], [[10, 8, 7, 3, 2, 6, 5, 4, 3, 2, 1, 1]], [[9, 8, 8, 8, 4, 3, 2, 1, 2]], [[100000, -1000, 2, 8, 7, 5, 6, 0, 11, 31, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8]], [[100000, -30, -1000, -5, 18, 8, 0, 9, 7, 5, 6, 0, 6, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8, 14, 18, 20]], [[1, 3, 3, 5, 6, 7, 8, 9, 3, 7, 9, 7]], [[0, -8, 11, 12, 13, -1000, -7, 16, -1, -5, 20, 25, 30, 100, 300, 20]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 1, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 8, 16]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 4, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 5, 19, 20, 14]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 7, 8, 0, 7]], [[1, 18, 1, 2, 2, 3, 4, -8, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3, 6, 18]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 1, 11, 13, 14, 15, 16, -4, 19, 20, 18, 8, 16]], [[-29, -1000, -29, 15, 2, 8, 1, 9, -3, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 5, 17, 19, 20, 18, 1, -2, 14, -29]], [[10, 8, 13, 6, 7, 100, 3, 1, 6, 1]], [[-3, -1, -2, -3, -4, -5, -7, -8, -9, -2]], [[9, 8, 7, 2, 8, 4, 3, 100, 2, 1, 8, 2]], [[100000, 2, -11, 3, 4, 5, 7, 8, 9, -10, 6, 2, 10, 2]], [[1, 3, 3, 5, 7, 8, 9, 3, 7]], [[3, -2, 3, 3, 3, 4, 3, 3, 4, -3, 3]], [[1, 20, 3, 100000, 5, 25, 6, 7, -20, 9, 3, 4, 3]], [[1, 3, 3, 4, 5, 6, 7, -30, 8, 9, 7]], [[1, 3, 3, 4, 4, -7, 5, 7, -20, 9, 9, 3, -20, 6, -20]], [[1, 18, 1, 2, 3, 3, 4, 4, 5, 17, -20, -30, 8, 9, 1, 7, 6]], [[0, 10, 11, 12, 13, 14, 15, -4, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100, 14]], [[-3, -1, 0, -4, -5, -6, -7, -11, -8, -9, -5]], [[10, 0, 10, 11, 12, 13, -1000, -7, 16, -1, -5, 20, 13, 30, 100, 300, 20, -7]], [[10, 8, 13, 6, 7, 100, 3, 1, -10, 1]], [[-8, 0, 10, 11, 12, 13, 14, 15, 0, -1, -5, 20, 25, 30, 100, 200, 300, 13, -5, 10, 10, 25, 13, -1]], [[100000, -1000, 2, 8, 7, 5, 6, 0, 11, 31, 14, 12, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8]], [[1, 5, 3, 3, 4, 4, -7, 5, 7, -20, 9, 3, -20, 6, -20, 6]], [[1, 6, 8, 2, 3, 7, 4, 5, 14, 7, 8, 9, 10, 6, 6]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 18, 6]], [[1, 3, 3, 31, 5, 6, 8, 9]], [[1, 7, 3, 3, 4, 5, 25, 6, -4, 7, 19, 8, 9, 4]], [[100000, -1000, 15, 2, 8, 1, 9, 7, 4, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 31, 20, 14, 8]], [[1, 20, 3, 3, 4, 16, 25, 5, 9, 8, 9]], [[1, 2, 17, -8, -7, 7, -29, 8, 30]], [[-8, 0, 10, 11, 13, 14, 15, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 25, 200]], [[1, 2, 3, 4, 5, 6, 8, 8, 9, 10]], [[1, 1, 2, 100, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -29, 6, 8, 9, 1]], [[1, 2, 17, 7, -8, -7, 7, 8, 30, 30]], [[0, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100, 13]], [[1, 3, 3, 4, 5, 4, 6, 9, 5, 10, 9, 3]], [[100000, -1000, -1, 2, 8, 1, 9, 4, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 3, 19, 2]], [[100000, -1000, 1, 8, 7, 5, 6, 0, 11, 31, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8]], [[1, 2, 3, 5, 6, 8, 8, 3]], [[18, 1, 3, 3, 7, 4, 4, 5, 5, -20, -30, 7, 8, 9, 1, 3]], [[100000, -1000, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1]], [[10, 8, 7, -8, 31, 7, 100, 3, 1, 6]], [[100000, -1000, -29, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 1, 18, 19, 20, 18, 1, 8]], [[9, 8, 7, 8, 4, 3, 2, 1, 2, 2, 2]], [[1, 300, 3, 4, 5, 7, 4, 9]], [[100000, -1000, 4, 2, 8, 1, 9, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 19, 19, 20, 18, 7, 8, 0, 7]], [[100000, -1000, -29, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 16, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 8, 1, 16, 9, 18, 9]], [[1, 2, 17, -8, -7, -1000, 8, 30, 8, 17]], [[1, 3, 3, 4, 4, 25, 6, 7, 8, 9, 4]], [[1, 3, 4, 4, 5, 6, 7, 8, 9, 3, 1]], [[1, 3, 3, 4, 5, 4, 6, 6, 9, 9, 3]], [[1, 1, 8, 2, 3, 13, 7, 5, 19, 6, 7, 8, 9, 10, 7, 13, 7, 7, 7]], [[1, 2, -3, 5, 8, 5, 6, 8, 5, 6]], [[2, 3, 4, 5, 6, 8, 3, 5, 5]], [[9, 8, 8, 8, 4, 8, 3, 2, 1, 2]], [[-1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, -20, -30, 300, 8, 9, 1, 3, 5, 3, -1]], [[3, 3, 100, 3, 3, 3, 3, 3, 2, 3, 3]], [[100000, -1000, 1, 8, 7, 5, 6, 0, 11, 31, 12, 13, 14, 15, 16, 17, 19, 3, 8]], [[0, 0, 2, 3, 5, 5, 6, 300, 7, 8, 9, 3]], [[1, 2, 4, 5, -7, 7, 8]], [[0, 10, 11, 12, 13, -1000, -7, -1, -5, 18, 25, 30, 100, 300, 20, -7]], [[10, 0, 10, 11, 13, -1000, -7, 16, -1, -5, 20, 25, 13, 30, 100, 300, 20, -7]], [[10, 8, 13, 6, 7, -20, 100, 5, 3, 1, -1, 1, 7]], [[1, 2, 17, 8, -8, -7, 7, 8, 30, 30]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 14]], [[1, 1, 2, 2, 3, 3, 4, 12, 5, 6, -10, -30, 6, 8, 9, 1, 6, -10, -10]], [[1, 6, 3, 6, 3, 4, 5, 20, 7, 8, 3, 5, 5, 1]], [[0, 10, 11, 12, 13, 14, 11, -10, 100, 0, -1, -9, 20, 25, 30, 100, 200, 300, -5, 16, 0, 100, -9]], [[-1, -2, -3, -4, -5, -20, -6, -7, -8, -9, -9]], [[8, 1, 2, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 3, 4, 1]], [[0, 1, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10, 8]], [[100000, -1000, 4, 2, 8, 1, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, -4, 18, 19, 20, 18, 8]], [[1, 20, 3, 100000, -20, 25, 6, 7, -20, 9, 3, 4, 3]], [[9, 8, 7, 8, 4, 19, 2, 1, 2]], [[100000, -1000, 4, 2, 9, 1, 9, 4, 3, 7, 5, 6, 0, 13, 14, 15, 16, -4, 18, -11, 20, 18, 8]], [[100000, 31, 4, 2, 1, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 14, 18]], [[1, 1, 2, 2, 3, 3, 4, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, 3, 3, 5, 9]], [[1, 8, 2, 200, 7, 4, 5, 6, 7, 10, 3, 2]], [[-1, 1, 7, 2, 3, 20, 11, 4, 5, 6, 7, 8, 9, 10, 10]], [[3, 0, 3, 3, 3, 3, 3, 3, 3, 3]], [[1, 3, 3, 4, 6, 9, 9, 3, 3]], [[1, 10, 1, 2, 2, 3, 3, 4, 12, 5, 6, -10, -30, 8, 9, 1, 6, -10, -10, 5]], [[9, 8, 3, 2, 6, 5, 4, 3, 2, 1, 1]], [[1, 1, 2, 2, 3, 2, 4, 7, 5, 5, 6, -30, 7, -4, 8, 8, 6, 1, 2]], [[1, 3, 2, 4, 5, 25, 6, 7, 8, 9, 4]], [[9, 8, 8, 8, 4, 3, 2, 2, 2]], [[1, 3, 4, 5, 8, 7, -3, 12, 8, 9, -3]], [[1, 17, 30, 7, 1, -20, -7, 7, 8, 30, 30]], [[100000, -30, -1000, -5, 18, 8, 0, 9, 7, 5, 6, 0, 6, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 8, 14, 18, 20]], [[1, 2, 4, 5, 8, 5, 6, -6, 5]], [[3, -2, 3, 3, 3, 4, 3, 3, -3, 3, -2]], [[1, 3, 3, 4, 5, 25, 6, 7, -20, 9, 7, 3]], [[100000, -1000, 4, 2, 8, 1, 4, 3, 7, 5, 6, 0, 11, 13, 14, 15, -5, -4, 18, 19, 20, 18, 8]], [[0, 0, 2, 3, 5, 300, 7, 8, 9, 3]], [[1, 3, 3, 4, 7, 8, 9, 3]], [[0, 8, 2, 3, 7, 4, 5, 15, 6, -30, 7, 8, 9, 10, 7]], [[3, 3, 3, 100, 3, 3, 3, 3, 3, 3, 3, 3]], [[9, 8, 7, -29, 4, 3, 2, 1, 2]], [[1, 2, 6, 3, 4, 5, 6, 8, 8, 5, 8, 8]], [[1, 1, 2, 2, 3, 3, 4, 12, 5, 6, -10, -30, 7, 8, 9, 1, 6, -10, -10, 3]], [[1, 3, 3, 4, 5, 25, 6, 7, -20, 9, 3, 4, 3]], [[1, 5, 3, 4, 5, 6, 8, 8, 9, 10]], [[0, 10, 11, 12, 13, 14, 11, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 16, 0, 16]], [[1, 8, 2, 7, 4, 5, 6, 3, 10, 3, 2]], [[1, 3, 4, 4, 25, 6, 7, 8, 9, 4]], [[1, 3, 3, 5, 4, 6, 7, 8, 9, 3]], [[10, 8, 7, 3, 2, 6, 5, 1, 4, 3, 1, 1]], [[100000, -1000, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 11, 100000]], [[1, 3, 3, 4, 5, 6, 7, 9, 9, 3, 7, 5, 7]], [[1, 3, 100000, 5, 25, 6, 7, -20, 9, 4]], [[1, 3, 3, -30, 4, -7, 5, 7, -20, 9, 3, -20, 6]], [[1, 3, 3, 4, 6, 9, 9, 3, 3, 3]], [[0, 1, 8, 2, 3, 7, 4, 5, 6, 7, 8, 9, 10, 8, 0, 1]], [[-8, 0, 11, 12, 13, 14, 15, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, -9, 25]], [[1, 3, 11, 4, 4, 25, -21, 6, 7, -20, 9, 3, -20]], [[0, 1, 8, 2, 3, 13, 1, 7, 4, 5, 6, 7, 8, 9, 10, 7, 3]], [[200, 3, 100000, 5, 25, 6, 7, -20, 9, 4]], [[100000, -1000, -29, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 1, 18, 19, 20, 18, 1, 8, 1]], [[0, 10, 11, 12, 13, 14, 15, 16, 12, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100]], [[100000, -1000, 2, 8, 1, 9, 7, 5, -5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 1, 18]], [[3, -2, 3, 3, 3, 100000, 4, 3, 3, 4, -3, 3]], [[1, 3, 100000, 5, 25, 9, 6, 7, -20, 9, 100000, 3, 4]], [[100000, 2, 4, 4, 5, 8, 9, 6, 10]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, -9, 16, 17, 18, 20, 18, 16]], [[1, 3, 3, 4, 4, -7, 5, -1000, 7, -20, 9, 3, -20, 6]], [[-3, 1, -1, 0, -4, -5, -6, -7, -8, 1, -9, 0]], [[1, 18, 1, 2, 3, 4, -8, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3, 6]], [[0, 1, 2, 3, 5, 4, 5, 6, 7, 8, -4, 8]], [[100000, -1000, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 4, 17, 18, 19, 20, 11]], [[-1000, 8, 8, 6, -4, 5, 4, 3, 2, 13, 5, 8]], [[8, 1, 2, 2, 2, 2, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 8, 9, 1, 3, 1]], [[1, 1, 2, 2, 3, 3, 4, 5, 6, -10, -30, 7, 8, 9, -21, 6, -10, 3, 3, 5, 9]], [[1, 3, 5, 6, 14, 7, 9, 4]], [[1, 2, 3, 4, -10, 6, 7, 8, 9, 10]], [[0, 10, 11, 12, 14, 16, -1, -5, 20, 10, 30, 25, 200, 300]], [[1, 1, 2, 2, 1, 4, 16, 3, 2, 4, 4, 5, 5, 6, -20, -30, 7, 8, 9, 1, 3]], [[0, 10, 11, -6, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5]], [[3, 3, 3, 3, 3, 3, 3, 4]], [[1, 2, 2, 4, 5, 6, 7, 8, 9, -30, 5]], [[1, 3, 5, 6, 14, 7, 9, 4, 14]], [[1, 3, 4, 5, 25, 6, 7, 8, 9, 4]], [[100000, 2, -11, 3, 4, 5, 7, 8, 9, -10, 6, 2, 20, 2]], [[1, -1, 4, 4, 24, 25, 6, 7, 8, 9, 4]], [[1, 3, 4, 4, 25, 6, 8, 7, 8, 9, 4]], [[3, 100000, -1000, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 4, 17, 18, 19, 20, 11]], [[0, 15, 10, 11, 12, 13, 14, 15, 16, 0, -1, -5, 20, 25, 30, 100, 200, 300, -5, 10, 10, 100, 12, 25]], [[1, 3, 4, 5, 6, 14, 7, 8, 9, 4, 14, 9]], [[3, 100000, -1000, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 4, 17, 18, 19, 20, 11, 9]], [[-1, 1, 2, 2, 3, -29, 3, 4, 4, 5, 6, -10, -30, 7, 8, 9, 1, 18, 6, -10, -10]], [[100000, -1000, 4, 2, 8, 1, 9, 7, 5, 6, 0, 11, 20, 12, 13, 14, 15, 16, 17, 18, 19, 20, 18, 14, 15]], [[1, 20, 3, 3, 4, 5, 25, 5, -21, 0, 9]], [[1, 1, 2, 2, 3, 3, 4, 4, 7, 5, 5, 6, -20, -29, 8, -1, 9, 1]], [[10, 7, 7, 3, 2, 6, 5, 1, 4, 3, 1, 1]], [[1, 3, 3, 5, 19, 6, 7, 8, 9, 3]], [[9, 8, 7, 8, 4, -5, 9, 1, 2]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 10, 17, 18, 19, 20]], [[2, 71, 1, 64, 90, 24, 41]], [[-1, -2, -3, -4, -5, -20, -6, -10, -7, -8, -9, -9, -9, -5]], [[1, 8, 3, 7, 4, 5, 6, 7, 8, 9, 10, 3]], [[14, 25, 19, 31]], [[-5, 0, 11, 20, 100]], [[9, 4, 3, 1, 1, 9, 2, 8, 6, 5, 7, 2]], [[7]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[9, 8, 7, 6, 5, 4, 3, 2, 9, 1]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30]], [[0, 1, 2, 3, 4, -3, 6, 7, 8, 9, 10]], [[9, 8, 7, 6, 5, 4, 4, 4, 2, 9, 1]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 6]], [[10, 8, 7, 6, 5, 4, 3, 2, 1]], [[3, 3, 3, 3, 3, 3, 3, 3]], [[0, 10, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200, 300]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 13]], [[9, 8, 7, 6, 5, 7, 4, 14, 2, 9, 1, 1]], [[9, 8, 7, 6, 5, 7, 4, -2, 14, 2, 9, 1, 1]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, 9, -1000, 1, 1, 14]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 100000, 25, 30, 100, 200, 300]], [[0, 10, 11, 12, 17, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200, 300]], [[1, 1, 2, 2, 3, 100, 4, 4, 5, 5, 6, -10, 16, -30, 8, 9, 1, -30, 5]], [[1, 2, 2, 3, 100, 4, 4, 5, 5, 6, -10, 16, -30, 8, 9, 1, -30, 5]], [[9, 7, 6, 5, 7, 4, -2, 14, 2, 9, 1, 1]], [[1, 2, 100, 4, 5, 6, 101, 7, 8, 9]], [[1, 2, 3, 4, 5, 6, -2, 7, 8, 9]], [[9, 8, 7, 6, 5, 7, 4, 14, 9, 1, 1]], [[9, 8, 7, 6, 5, 7, 14, 4, 14, 2, 9, 1, 1, 14]], [[3, 3, 3, 3, 200, 3]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 7, 9, 1]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 100000, 20]], [[3, 1, 1, 2, 18, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5]], [[0, 1, 2, 3, 4, -3, -4, 7, 8, 9, 10]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, -30, 7, 9, 1]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 2, -10, 16, -30, 7, 8, 9, -30]], [[3, 3, 3, 3, 200, 3, 200]], [[8, 7, 6, 5, 7, 4, 14, 9, 1, 1]], [[1, 2, 3, 4, 5, 6, 7, 8, 6]], [[0, 1, 2, 3, 4, 5, 6, 3, 7, 8, 9, 10]], [[3, 3, 3, -1000, 3, 3, 3, 3, 3]], [[1, 1, -29, 2, 14, 2, 3, 3, 4, 4, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 16]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 101, 200, 300]], [[9, 8, 7, 6, 5, 4, 4, 4, 2, 9, 1, 4]], [[200, 8, 7, 6, 5, 4, 3, 2, 0]], [[3, 1, 1, 2, 18, 14, 3, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5]], [[200, 8, 7, 6, 5, 4, -10, 2, 0]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, 7, 9, 1]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 100000, 25, 30, 200, 300]], [[10, 8, 7, 6, 5, 4, 3, 2, 1, 1]], [[0, 1, 2, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8]], [[1, 2, 3, 4, 18, 6, 7, 8, 9]], [[3, 1, 1, 2, 18, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5]], [[1, 1, 2, 2, 3, 100, 4, 4, 5, 5, 6, -10, 16, -30, -5, 8, 9, 1, -30, 5]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, 9, 1]], [[0, 10, 11, 12, 14, 15, 16, -1, -5, 21, 20, 25, 30, 100, 200, 300]], [[0, 21, 2, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8]], [[3, 1, 2, 18, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9]], [[9, 8, 7, 6, 5, 4, 3, 2, 9, 1, 8]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30]], [[1, 2, 100, 4, 5, 6, 1, 101, 7, 8, 9, 7]], [[1, 4, 2, 3, -1000, 0, 5, 6, 7, 8, 9, 6]], [[3, 1, 2, 18, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9, 1]], [[9, 8, 7, 6, 5, 4, 3, -9, 1]], [[0, 1, 2, 3, 3, -3, 6, 7, 8, 9, 10, 7]], [[1, 2, 100, 4, 5, 6, 1, 101, 7, 8, -1, 9, 7]], [[1, 2, 3, 4, 5, 6, 7, 8, 4, 6]], [[9, 8, 7, 6, 5, 4, 4, 4, 2, 18, 9, 1, 4]], [[-1, 9, 8, 7, 5, 7, 4, -2, 2, 9, -1000, 1, 1, 14]], [[100000, 25, -1000, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 200, 20]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, 9, -1000, 1, 1, 14, 8]], [[-1, -2, -3, -4, -5, -6, -5, -8, -9]], [[1, 2, 200, 100, 4, 5, 6, 101, 7, 8, 9]], [[1, 1, 2, 2, 3, 3, 4, -30, 4, 5, 5, 6, 2, -10, 16, -30, 7, 8, 9, -30]], [[1, 1, 2, 2, 3, 3, 5, 4, 4, 100, 5, 5, 6, 2, -10, 16, -30, 7, 8, 9, -30]], [[3, 1, 2, 18, 14, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 11, 5]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 14, 16, 17, 18, 19, 100000, 20, 17]], [[0, 1, 2, 3, 4, 5, -3, 6, 7, 8, 9, 10]], [[9, 8, 7, 6, 5, 4, 3, 2, 6, 9, 1, 2]], [[9, 8, 7, 6, 5, 4, 3, 2, 1, 4]], [[3, 1, 1, 2, 18, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 3, 8, 9, 1, -30, 12, 5]], [[8, 7, 7, 6, 5, 7, 4, 14, 9, 1, 1]], [[3, 1, 2, 18, 14, 3, 4, 4, 5, 6, 6, -10, 16, -30, 7, 8, 9, 1, -30, 11, 5]], [[0, 30, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200, 300]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -19, -30, 7, 9, 1]], [[-1, -2, -3, -4, -5, -6, -6, -7, -8, -9]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9]], [[-1, 9, 8, 7, 5, 17, 4, -2, 2, 9, -1000, 1, 1, 14]], [[300, 10, 8, 7, 6, 6, 5, 4, 3, 2]], [[9, 8, 3, 7, 6, 5, 4, 4, 4, 2, 9, 1, 4]], [[9, 8, 7, 6, 5, 4, 4, 4, 2, 9, 1, 4, 2]], [[1, 2, 2, 3, 100, 4, 4, 5, 5, 6, -10, 17, -30, 8, 9, 1, -30, 5, 0]], [[3, 1, 1, 2, 18, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 16]], [[3, 1, 2, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9]], [[2, 3, 4, 5, 6, 7, 8, 9]], [[1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 6]], [[9, 8, 7, 6, 5, 4, 3, -9, 1, 8]], [[0, 1, 2, 3, 4, 5, 6, 14, 3, 7, 8, 9, 10]], [[2, 10, 8, 7, 6, 6, 5, 4, 3, 2]], [[2, 3, 4, 5, 6, -2, 7, 8, 9, -3]], [[9, 6, 7, 6, -19, 7, 4, -2, 14, 2, 9, 1, 1, -2]], [[9, 8, 7, 6, 5, 4, 14, 9, 1, 1, 8]], [[-9, -2, -3, -4, -5, -6, -7, -8, -9]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, -30, 7, 9, 1]], [[3, 3, 3, -1000, 3, 2, 3, 3, 3, 3]], [[1, 1, 2, 3, 3, 3, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30, 3]], [[12, 8, 7, 6, 5, 6, 4, 14, 2, 9, 1, 1]], [[3, 3, 300, 3, 3, 200, 3]], [[1, 1, 3, 2, 3, 3, 4, 4, 5, 5, 6, -10, 5, -30, 7, 8, 9, 1, -30, 3]], [[0, 1, 2, -9, 4, 5, 6, 14, 3, 7, 8, 9, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 10]], [[10, 8, 7, 6, 4, 3, 2, 1, 1]], [[3, 1, 2, 18, 14, 3, 4, 4, 5, 6, -1000, 6, -10, 16, -30, 7, 8, 9, 1, -30, 11, 5]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -6, -5, 20, 25, 30, 101, 200, 300]], [[8, 7, 6, 5, 7, -7, 4, 14, 9, 1, 1]], [[8, 7, 6, 4, 7, -7, 4, 14, 9, 1, 1]], [[1, 2, 3, 4, -3, 6, 7, 8, 9, 10]], [[0, 21, 2, -4, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8]], [[9, 6, 7, 6, -19, 7, 4, -2, 14, 2, 9, 1, 1, -2, 7]], [[-1, 9, 8, 7, 5, 4, -2, 2, 9, -1000, 1, 1, 14]], [[1, 4, 5, 2, 3, -1000, 0, 5, 6, 7, 8, 6]], [[3, 5, 1, 2, 18, 14, 3, 4, 4, 5, 6, 6, -10, 16, -30, 7, 8, 9, 1, 11, 5]], [[9, 8, 7, 6, 16, 4, 3, 2, 6, 9, 1, 2, 6]], [[0, 1, 2, 3, 4, 5, 6, 3, 7, 8, 9, 10, 0]], [[3, 3, 3, 300, 3, 3, 200, 100000, 3]], [[2, 3, 4, 5, 6, 7, 8, 10]], [[8, 8, 7, 6, 5, 4, 3, 2, 6, 9, 1, 2, 5]], [[9, 8, 7, 6, 5, 4, 3, -9, -1000]], [[0, 2, 10, 11, 12, 13, 14, 15, 16, -1, -6, -5, 20, 25, 30, 101, 200, 300]], [[100000, 25, -1000, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 200, 20]], [[9, 7, 6, 5, 4, 3, 2, 1, 4]], [[3, 3, 3, -1000, 3, 3, 3, 4, 3]], [[0, 30, 10, 11, 12, 13, 14, 15, 16, 301, -1, -5, 20, 25, 30, 100, 200, 300, 12]], [[9, 8, 7, 5, 7, -3, 4, 14, 2, 9, 1, 1, 14, 1]], [[8, 7, 7, 6, 5, 7, 4, 14, 9, 1, 0]], [[2, 100, 1, 4, 5, 6, 101, 7, 8, 9]], [[-1, -2, -3, -4, -6, -6, -7, -8, -9, -6]], [[0, 1, 2, 3, 3, -3, 6, 7, 8, 9, 10, 7, 6]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 16, 17, 18, 19, 20]], [[0, 1, 2, 3, 4, 7, 5, 6, 7, 8, 9, 10]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 2]], [[1, 1, 2, 2, 3, 3, 4, -30, 4, 5, 5, 6, 2, -10, 16, 0, -30, 7, 8, 9, -30]], [[-1, -2, -5, -6, -5, -1000, -8, -9]], [[3, 1, 1, 2, 18, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, -30, 7, 8, 9, 1, -30, 5]], [[9, 8, 7, 5, 7, -3, 4, 14, 2, 3, 1, 1, 14, 1]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, 9, 10, -1000, 100, 1, 14, 1]], [[1, 1, 2, 2, 6, 3, 3, 4, -30, 4, 5, 5, 6, 2, -10, 16, -30, 7, 8, 9, -30]], [[0, 21, 2, 3, 4, -3, -4, 7, -4, 8, 8, 9, 10, 8]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 2, -10, 16, 7, 8, 9, 1, -30]], [[1, 1, 2, 2, 3, 3, 4, -30, 4, 5, 5, 6, 2, -10, 16, 0, -30, 301, 7, 8, 9, -30]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 9, 1, 4]], [[0, 21, 2, -4, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8, 21]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9, 8]], [[2, 100, 1, 4, 5, 9, 6, 101, 7, 8, 9]], [[9, 8, 8, 6, 5, 4, 3, -9, -1000, 9]], [[100000, 25, 15, -1000, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 200, 20]], [[0, 1, 2, 3, 3, 6, 7, 8, 9, 10, 7, 6, 2]], [[0, 10, -30, 12, 13, 14, 15, 16, -1, -5, 20, 100000, 25, 30, 200, 300]], [[9, 7, 6, 5, 7, 4, 14, 2, 9, 1]], [[1, 2, 100, 4, 5, 6, 7, 101, 7, 8, 9, 7]], [[0, 12, 10, 11, 12, 17, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200, 300]], [[3, 1, 2, 18, 14, 3, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 3]], [[0, 10, 7, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 101, 200, 200]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 16, 17, 18, 19, 20, 100000]], [[-8, 1, 2, 18, 14, 3, 4, 4, 5, 5, -10, 16, -30, 7, 8, 9, 3, 1, -30, 11, 5]], [[0, 1, -9, 2, 3, 4, 5, 6, 3, 7, 8, 9, 10]], [[9, 8, 8, 6, 5, 4, -9, -1000, 9]], [[8, 7, 6, 5, 4, 3, 2, 1, 4]], [[1, 1, 3, 2, 0, 3, 3, 4, 4, 5, 5, 6, -10, 5, -30, 7, 8, -30, 3]], [[1, 1, 2, 2, 3, 100, 4, 6, 4, 5, 5, 6, -10, 16, -30, -5, 8, 9, 1, -30, 5]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, 9, 10, -1000, 100, 1, 13, 1]], [[0, 21, 2, 11, 4, -3, -4, 7, -4, 8, 9, 10, 8]], [[9, 10, 8, 7, 6, 5, 4, 3, 10, 2, 1, 1]], [[8, 7, 6, 5, 7, 4, 14, 9, 12, 1]], [[5, 9, 8, 7, 6, 16, 4, 3, 2, 6, 9, 1, 2, 6]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 0, 9, 1, -30, 5, 9]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200, 300, 14]], [[0, 1, -9, 2, 3, 4, 5, 6, 3, 7, 8, 9, 10, -9]], [[-1, -2, -3, -5, -5, -6, -7, -8]], [[-9, 0, -3, -4, -5, -6, -7, -8, -9]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9]], [[5, 9, 8, 7, 6, 5, 4, 14, 9, 1, 1, 8, 8]], [[200, 8, 7, 6, 5, 7, 4, 3, 2, 0]], [[9, 8, 7, 6, 5, 7, 14, 4, 14, 2, 9, 1, 1, 14, 6]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 6, -10, 16, -30, 7, 8, 9, 1, 5]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 100000, 25, 200, 300]], [[2, 3, 4, -3, 6, 7, 7, 9, 10]], [[10, 8, 7, 6, 5, 3, 3, 2, 1]], [[1, 1, 2, 14, 2, 3, 3, 6, 4, 5, 5, -5, 6, 5, -10, 16, -29, -30, 7, 8, 9, 1, -30, 5, 2]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 20]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, -30, 12, 14, 15, 16, 17, 18, 20]], [[1, 2, 4, 18, 6, 7, 9]], [[0, 10, 11, 12, 14, 15, 16, -1, -5, 21, 20, 25, 30, 8, 100, 200, 300]], [[-1, -2, -3, -4, -6, -7, -8, -9, -6]], [[1, 1, 2, 2, 3, 4, -30, 4, 5, 5, 6, 2, -10, 16, 0, -30, 301, 7, 8, 9, -30]], [[9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 6, 8]], [[1, 1, 2, 2, 3, 3, -7, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30]], [[9, 8, 13, 6, 7, -3, 4, 14, 2, 9, 1, 1, 14, 1, -3]], [[8, 7, 6, 4, 7, -7, 4, 9, 9, 1, 1]], [[9, 8, 7, 6, 5, 7, 14, 4, 14, 2, 9, 1, 9, 14]], [[9, 8, 7, 5, 4, 4, 4, 2, 1]], [[1, 2, 3, 4, 5, 6, 7, 8, 6, 6]], [[11, 3, 4, -1000, 3, 3, 3, 3, 3, -1000]], [[0, 10, 11, 13, 14, 15, 16, -1, -5, 20, 25, 29, 100, 200, 300, 25]], [[1, 2, 100, 4, 5, 6, 101, 7, 8, 9, 101, 101]], [[9, 8, 8, 6, 5, 4, 3, 2, 1, 4, 7]], [[1, 2, 3, 3, -3, 6, 7, 8, 9, 10, 7, 8]], [[8, 7, 6, 5, 7, -7, -1, 4, 0, -6, 14, 9, 25, 1, 1]], [[2, 100, 1, 4, 5, 6, 101, 7, 8, 9, 4]], [[8, 7, 7, 6, 5, 7, 4, 14, 9, 1, 0, 7]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 8, 5, 6, 0, 11, 12, 13, 14, 16, 17, 18, 19, 20, 100000, 9]], [[1, 2, 3, 4, 18, 7, 7, 8, 9]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 4, -30, 5, -10, 2]], [[12, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 7, 9, 1]], [[200, 8, 7, 6, 5, 7, 4, 21, 2]], [[1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 7, 9, 1]], [[0, 10, 11, 12, 15, 16, -1, -5, 21, 20, 25, 30, 8, 100, 200, 300]], [[9, 8, 7, 6, 5, 7, -2, 14, 9, 1, 1, 5]], [[12, 8, 7, 6, 5, 6, 4, 14, 2, 9, 1, 1, 4]], [[1, 1, 2, 2, 3, 3, -7, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30, 3]], [[8, 7, 7, 5, 5, 7, 4, 14, 9, 1, 0]], [[9, 8, 7, 5, 7, -3, 4, 14, 2, 9, 1, 1, 14, 1, 3]], [[4, 1, 2, 2, 3, 100, 4, 4, 5, 5, 6, -10, 17, -30, 8, 9, 1, -30, 5, 0]], [[-1, 9, 8, 7, 5, 17, 4, -2, 2, 9, -1000, 1, 1, 14, 9]], [[1, 2, 3, 3, -3, 4, 6, 7, 8, 9, 10, 7, 8]], [[9, 7, 6, 5, 4, 3, 2, 1, 4, 9]], [[9, 7, 6, 5, 6, 4, 3, 2, 1, 4]], [[0, 2, 10, 11, 13, 14, 15, 16, -1, -6, -5, 20, 25, 30, 101, 200, 300]], [[3, 1, 2, 18, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 3]], [[8, 7, 6, 4, 7, -7, 4, 9, 9, 1, 1, 9]], [[0, 30, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200]], [[9, 8, 7, 6, 5, 4, 3, 1, 4]], [[9, 8, 7, 6, 5, 7, 14, 4, 14, 2, -2, 1, 9, 14]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 6, 5]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 6, 5, 2, 6, 1]], [[8, 7, 5, 4, 4, 4, 2, 1]], [[9, 7, 6, 5, 7, 4, -2, 14, 2, 9, 1, 2]], [[1, 4, 5, 2, 3, -1000, 5, 6, 7, 8, -19, 6]], [[3, 3, 300, 3, 3, 2, 3]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 13, -10, 16, 7, 8, 9, 1, -30, 5, 9, 16]], [[3, 3, 3, 300, 3, 3, 200, 3]], [[8, 7, 6, 5, 7, -7, 4, 14, 9, 1, 0]], [[9, 8, 6, 5, 4, 3, 2, 8, 1]], [[1, 1, -6, 2, 14, 2, -9, 3, 3, 18, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 0, 9, 1, -30, 5, 9]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -9, 15, 5, 2]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 101, 17, 18, 19, 20, 13]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, 20, 25, 13, 30, 101, 200, 300]], [[10, 8, 7, 6, 5, 3, -4, 2, 1]], [[9, 8, 5, 4, 3, 2, 8, 1, 4]], [[1, 1, 2, 5, 2, 3, 100, 4, 6, 4, 5, 5, 6, -10, 16, -30, -5, 8, 9, 1, -30, 5]], [[-1, -2, -3, 18, -4, -5, -6, -6, -7, -8, -9]], [[1, 1, 2, 2, 3, 100, 4, 4, 5, 5, 6, -10, 1, 16, -30, -5, 8, 9, 1, -30, 5]], [[1, 4, 5, 2, 3, -1000, 5, 6, 7, 8, 6]], [[1, 2, 3, 4, 18, 7, 7, 9, 9]], [[9, 7, 7, 6, 7, 14, 9, 1, 1, 7]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, -10, 8, 9, 4, -30, 5, -10, 2]], [[1, 1, 2, 2, 3, 4, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 4, -30, 5, -10, 2]], [[9, 10, 8, 7, 6, 5, 4, 3, 10, 2, 1, 1, 4]], [[1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -6, -5, 20, 25, 30, 200, 300]], [[3, 1, 2, 18, 14, 3, 4, 4, 5, -30, 6, -1000, 6, -10, 16, -30, 7, 8, 9, 1, -30, 11, 5, 5, -30]], [[9, 8, 7, 6, 5, 7, 14, 4, 14, 2, 9, -2, 1, 9, 14]], [[-1, 3, 3, -1000, 3, 3, 3, 3, 3]], [[3, 3, 3, 3, -1000, 200, 3, 3]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, 7, -20, 9, 1]], [[1, 1, 2, 3, 3, 3, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30]], [[9, 8, 7, 5, 4, 4, 4, 18, 1, 5]], [[1, 2, 100, 4, 5, 6, 1, 101, 7, 8, 9, 25]], [[0, 14, 10, 7, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 101, 200, 200]], [[8, 7, 6, 5, 7, -7, 4, 14, 9, 1, -2]], [[12, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 7, 9, 1]], [[0, 10, 11, 13, -1, 15, 16, -1, -5, 20, 25, 29, 100, 200, 300, 25]], [[3, 1, 1, 2, 18, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, -30, 7, 8, 9, 1, -30, 5, 3]], [[9, 8, 17, 6, 5, 4, 3, 2, 8, 1]], [[9, 8, 7, 6, 5, 7, 14, 4, 14, 2, 9, -2, 1, 9, 14, 9]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -6, -5, 20, 25, 30, 200, 300, -5]], [[8, 7, 6, 5, 7, -7, 4, 14, 4, 9, 1, 1]], [[100, 2, 10, 8, 7, 6, 6, 5, 4, 3, 2]], [[1, 2, 100, 3, 5, 6, 7, 101, 7, 8, 9, 7]], [[0, 14, 10, 7, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 101, 200, 200, 12, -5]], [[1, 1, 2, 2, 3, 3, 4, -30, 4, 5, 5, 6, 2, -10, 16, 0, -30, 1, 7, 8, 9, -30]], [[100000, 25, -1000, 4, 14, 2, 8, -1, 1, 9, 3, 7, 5, 6, 0, -30, 12, 14, 15, 16, 17, 18, 20]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9, 8, 5]], [[1, 1, 2, 2, 3, 3, -7, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, -1000, -30]], [[9, 8, 7, 6, 5, 4, 4, 4, 2, 9, 1, 4, 5, 1]], [[8, 13, 6, 7, -3, 4, 14, 2, 9, 1, 1, 14, 1, -3]], [[9, 8, 7, 6, 5, 7, 4, 14, 2, 8, 1]], [[0, 21, 2, -4, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8, 8, -4]], [[0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 100000, 25, 200, 300, 15]], [[0, 1, 2, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8, -4]], [[1, 2, 100, 4, 5, 6, 7, 101, 7, 8, 9, 7, 2]], [[1, 4, 6, 2, 3, -1000, 5, 6, 6, 8, -19, 6]], [[3, 1, 1, 2, 18, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, -30, 7, -30, 8, 9, 1, -30, 5, 3]], [[-1, -2, -5, -6, -5, -1000, -8, -9, -8]], [[8, 7, 7, 6, 5, 18, 4, 14, 9, 1, 0, 14]], [[10, 8, 7, 6, 5, 3, 3, 1]], [[100000, 25, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 200, 20]], [[9, 1, 3, 4, 5, 6, 7, 8, 9, 6, 8]], [[0, 10, 11, 13, 14, 16, -5, 20, 25, 29, 100, 200, 300, 25]], [[100000, 25, 15, -1000, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 13, 14, 15, 16, 17, 18, 19, 200, 20]], [[3, 1, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 9]], [[1, 1, 2, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5]], [[0, 14, 10, 7, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 101, 200, 6, 12, -5, 200]], [[100000, -1000, 4, 2, 9, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 8, 16, 17, 18, 19, 100000, 20]], [[0, 10, -30, 12, 13, 14, 15, 16, -1, -5, 20, 100000, 25, 30, 200, 300, -30]], [[3, 1, 1, 2, 18, 14, 2, 3, 3, 4, 4, 5, 6, -10, -30, 7, -30, 8, 9, 1, -30, 5, 3]], [[3, 1, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 9, 1, -30, 5, 9]], [[8, 13, 6, 17, -3, 4, 14, 2, 9, 1, 1, 14, 1, -3]], [[3, 5, 1, 2, 18, 14, 3, 4, 4, 5, 6, 6, -10, 16, -30, 7, 8, 25, 1, 11, 5]], [[200, 8, 7, 6, 5, 4, 3, 2, 0, 6, 6]], [[0, 21, 2, -4, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8, 8, -4, 2]], [[0, 21, 2, 3, 4, -3, -4, 7, -4, 8, 8, 9, 9, 10, 8, 0]], [[1, 4, 5, 2, 3, -1000, 5, 6, 7, 8, -20, 20, 6]], [[29, 1, 1, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 19, 8, 9, 1, -30, 5]], [[8, 7, 6, 4, 7, -7, 9, 9, 1, 1]], [[1, 1, 2, 2, 3, 3, 4, -30, 4, 5, 5, 6, 2, -10, 16, 0, -30, 1, 7, 8, 9, -30, 7]], [[0, 10, 11, 13, 14, 15, 16, 1, -1, -5, 20, 25, 30, 101, 200, 300, 101]], [[9, 8, 7, 6, 5, 4, 4, 4, 2, 9, 1, 5, 5, 1]], [[8, 7, 6, 5, 7, -7, 4, 14, 4, 9, 1, 1, 7, 5]], [[10, 8, 7, 6, 5, 3, 3, 1, 10]], [[3, 1, 2, 18, 14, 3, 4, 4, 5, 6, -1000, 6, -10, 16, -30, 8, 9, 1, -30, 11, 5]], [[0, 1, 2, 3, 3, 7, 7, 8, 9, 10, 7, 6, 2]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 101, 17, 18, 19, 20, 13, 11]], [[9, 8, 7, 6, 5, 4, 4, 4, 1, 9, 9, 1]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, -1001, 1, 1, 14, 8, 2]], [[1, 1, 2, 2, 3, 3, 100, 4, 5, 5, 6, -10, -20, -30, 7, 9, 1, 4]], [[9, 8, 7, 6, 4, 3, 2, 9, 1]], [[100000, 25, -1000, 4, 2, 300, 1, 9, 3, 7, 5, 6, 0, 11, 12, -6, 13, 14, 16, 17, 18, 19, 20]], [[0, 1, 2, -9, 4, 5, 6, 3, 7, 9, 10]], [[3, 1, 2, 3, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 9, 1, -30, 5, 9, 3]], [[0, 2, 3, 3, -3, 6, 7, 8, 9, 10, 13, 7]], [[3, 3, 3, 3, 200]], [[0, -9, 2, 3, 4, 5, 6, 3, 7, 8, 9, 10]], [[0, 21, 2, 3, 4, -3, -4, 7, -4, 8, 8, 9, 10, 8, 0]], [[100000, 24, -1000, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 199, 13, 14, 15, 16, 17, 18, 19, 200, 20]], [[-1, -2, -3, 25, -4, -6, -7, -8, -9, -6]], [[3, 3, 3, 3, 200, -1000, 200]], [[9, 1, 3, 4, 5, 7, 8, 9, 6, 8]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[1, 1, 2, 2, 3, 3, -7, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30, 3, -10]], [[1, 1, 2, 2, 3, 3, -7, 4, 4, 12, 5, 6, 2, -10, 16, -30, 7, 7, 9, 1, -30, 3, -10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 6, 5, -1, 2, 6, 1]], [[9, 8, 7, 1, 6, 5, 4, 3, -9, 1, 8]], [[10, 9, 7, 6, 5, 3, 3, 1, 11, 24, 10]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, -3, 9, 1, -9, 15, 5, 2]], [[3, 1, 1, 2, 18, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 3, 8, 9, 1, -30, 12, 7, 15]], [[0, 1, -9, 2, 3, 4, 5, 6, 3, 7, 8, 9, 17, 10, -9]], [[9, 7, 6, 5, 7, -2, 14, 9, 1, 1, 5, 14]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, 9, 1, 1]], [[1, 2, 3, 4, 18, 6, 7, 8, 9, 18]], [[9, -7, 8, 7, 5, 7, 4, -2, 14, 2, 9, 10, -1000, 100, 1, 13, 1, 7, -2]], [[100000, 25, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 200]], [[0, 21, 2, 3, -3, -4, 7, -4, 8, 9, 10, 8]], [[9, 7, 6, 5, 7, 4, -2, 14, 2, 9, 20, 1, 2]], [[0, 10, 11, 0, 13, 14, 15, 16, -1, -5, 20, 25, 100, 200, 300, 14]], [[3, 1, 1, 2, 18, 24, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5]], [[0, 1, 2, 3, 4, -4, 7, -4, 8, 9, 10, 8]], [[1, -30, 2, 3, 3, -10, 6, 7, 8, 2, 9, 10, 7, 7]], [[9, 6, 7, 6, -19, 8, 4, -2, 14, 2, 9, 1, 1, -2, 7]], [[7, 0, 21, 2, -4, 3, 4, -3, -4, 7, -4, 8, 9, 10, 21]], [[-1, 9, 8, 13, 7, 5, 7, 4, -2, 2, 9, -1000, 1, 1, 14]], [[-10, 8, 7, 5, 4, 4, 4, 2, -4, 1]], [[0, 21, 2, 3, 7, 4, -3, -4, 7, -4, 8, 8, 9, 10, 8]], [[0, 2, 3, 3, -3, 6, 7, 8, 9, 10, 13, 7, 3]], [[9, 7, 6, 5, 7, 4, -2, -10, 14, 2, 9, 20, 1, 2]], [[0, 2, 100, 4, 5, 6, 1, 101, 7, 8, 9, 25]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, 9, 10, -1000, 100, 1, 13, 1, 7]], [[0, 21, 7, 2, -4, 3, 4, -3, -4, 7, -4, 8, 9, 10, 8, 8, -4]], [[-1, -2, -3, 18, -4, -5, -6, -6, -7, -6, -8, -9]], [[0, 10, 11, 12, 14, 15, 16, -1, -5, 21, 20, 25, 11, 30, 8, 100, 200, 300, 300]], [[1, 2, 100, 3, 5, 6, 7, 101, 7, 7, 8, 9, 7, 100]], [[1, 4, 6, 2, 3, -1000, 5, 6, 6, 8, 6, -19, 6]], [[3, 1, 1, 2, 18, 14, 3, 0, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -30, 5, 2, 1]], [[10, 9, 15, 6, 5, 3, 3, 1, 11, 24, 10]], [[0, 10, 11, 13, -1, 15, 16, -1, -5, 20, 25, 29, 100, 200, 300, 25, 0]], [[2, 100, 4, 5, 6, 1, 101, 7, 8, -1, 9, 7]], [[1, 2, 3, 4, 5, 6, 7, 8, 6, 4]], [[1, 2, 100, 3, 5, 6, 7, 101, 7, 7, 8, 9, 7, 100, 7]], [[1, 1, 2, 2, 3, 100, 4, 6, 4, 5, 5, 6, -10, 5, 16, -30, -5, 8, 9, 1, -30, 5]], [[1, 1, 2, 2, 3, 100, 4, 6, 4, 5, 5, 6, -10, 5, 0, 16, -30, -5, 8, 9, 1, -30, 5]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 2, -10, 16, 0, -30, 8, 9, -30]], [[3, 1, 2, 18, 14, 3, 4, 4, 5, -30, 6, -1000, 6, -10, 16, -30, 10, 8, 9, 1, -30, 11, 5, 5, -30]], [[3, 3, 3, -1000, 3, 3, 4, 3, 3]], [[9, 8, 8, 6, 5, 4, 3, 2, 9, 1, 8]], [[100000, 25, 15, -1000, 2, 2, 8, 1, 6, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 3, 16, 17, 18, 19, 200, 20]], [[0, 10, 11, 13, 14, 15, 16, 1, -1, -5, 20, 25, 30, 101, 200, 300, 101, 11, -5]], [[9, 8, 7, 6, 5, 4, 3, 2, 9, 1, 3]], [[9, 8, 7, 6, 5, 4, 4, 4, 1, 9, 9, 1, 5]], [[1, 2, 4, 18, 0, 7, 9]], [[9, 8, 7, 6, 5, 7, 14, 4, 14, 2, -2, 1, 9, 14, 14]], [[8, 13, 7, 7, -3, 4, 14, 2, 9, 1, 1, 14, 1, -3]], [[1, 1, 2, 2, 3, 3, -7, 4, 4, 5, 6, 2, -10, 16, -30, 7, 8, 9, 1, -30, 3, 8]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 8, 5, 6, 0, 11, 26, 12, 13, 14, 16, 17, 18, 19, 20, 100000, 9]], [[1, 1, 2, 14, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 9, 1, -29, 5, 4]], [[100000, 25, 15, -1000, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 13, 14, 15, 16, 17, 18, 19, 200, 20]], [[0, 2, 10, 11, 13, 14, 15, -5, 16, -1, -6, -5, 20, 25, 30, 101, 200, 300]], [[200, 301, 7, 6, 5, 7, 2, 2, 0]], [[1, 1, 2, 2, 21, 3, 5, 4, 4, 5, 5, -20, -30, 7, 9, 1, 1, 5]], [[9, 7, 6, 5, 6, 4, 2, 1, 4]], [[1, 2, 3, 4, 5, 6, 7, 4, 8, 4, 6]], [[9, 8, 7, 5, 26, -3, 4, 3, 14, 2, 3, 1, 1, 14, 1]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 0, 5, 6, -10, -20, -30, 7, 7, 9, 1, 4]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, 9, 10, -1000, 100, 1, 14, 1, 8]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[1, -30, 2, 3, 3, -10, 6, 7, 8, 7, 2, 7, 9, 10, 7, 7]], [[9, 8, 7, 6, 5, 4, -2, 4, 2, 18, 9, 1, 5]], [[0, 1, 7, 3, 4, -3, 17, -4, 7, -4, 8, 9, 10, 8]], [[100000, 24, -1000, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 199, 13, 14, 15, 16, 17, 18, 19, 200, 20, 5]], [[100000, 25, -1000, -10, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[1, 2, 3, 4, 5, 6, 7, 8, 10, 4]], [[8, 7, 5, 7, -3, 4, 14, 2, 3, 1, 1, 14, 1]], [[1, 1, 2, 2, 3, 3, 4, -30, 4, 5, 6, 2, -10, 16, 0, -30, 7, 8, 9, -30]], [[-1, 9, 8, 7, -6, 17, 4, -2, 2, 9, -1000, 1, 14, 9]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, 7, -20, 9, 1]], [[1, -9, 2, 3, 4, 5, 6, 3, 7, 8, 9, 17, 10, -9]], [[100000, 25, -1000, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 29, 200, -1, 20]], [[100000, -1000, 4, 2, 8, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 101, 17, 18, 19, 20, 13, 11, 6]], [[1, 2, 3, 4, 6, 5, 6, 7, 8, 10]], [[100000, 25, -1000, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 17, 18, 29, 200, -1, 20, 2]], [[8, 7, 6, 5, 7, 4, 3, 2, 0]], [[1, 2, 3, 4, 5, 6, 15, 8, 9, 6, 5, 2, 6, 1]], [[3, 1, 1, 2, 18, 14, 2, 3, 4, 4, 5, 6, -10, -30, 7, -30, 8, 9, 1, -30, 5, 3]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 2, -10, 16, 7, 9, 1, -30]], [[10, 7, 6, 5, 4, 3, 2, 1, 1]], [[9, 8, 7, 6, 5, 7, 4, 7, 14, 9, 1, 1, 9]], [[9, 8, 7, 7, 6, 5, 7, 14, 4, 14, 2, -2, 1, 9, 14, 14]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 8, 5, 6, 0, 11, 26, 12, 13, 14, 16, 17, 19, 20, 100000, 9]], [[9, 8, 7, 6, 5, 4, 4, 4, 1, 9, 9, 1, 5, 4]], [[200, 9, 7, 6, 5, 4, 3, 2, 0]], [[100000, -1000, 4, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 13, 14, 15, 16, 101, 17, 18, 19, 20, 13, 11, 8]], [[3, 1, 1, 2, 18, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, -30, 7, 8, 9, 1, -30, 5, 1]], [[1, 3, 4, 12, 5, 6, 7, 8, 9, 6]], [[9, 8, 7, 5, 7, 4, -2, 14, 2, 9, 10, -1000, 100, 1, 13, 1, 7, -2]], [[100000, 24, -1000, 4, 2, 2, 8, 1, 9, 3, 7, 5, 6, 0, 11, 12, 199, 13, 14, 15, 16, 17, 18, 19, 200, 20, 5, 3, 18]], [[1, 1, 2, 2, 3, 3, 4, -30, 4, 5, 6, 2, -10, 16, 0, -30, 7, 8, 9, -30, 9]], [[9, 8, 7, 7, 6, 5, 7, 14, 4, 14, 2, -2, 1, 9, 14, 14, 14]], [[3, 3, 3, -1000, 3, 3, 4, 2, 3, -1000, 3]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 5, 6, -10, 16, -30, 7, 8, 0, 9, 1, -30, 5, 9, 9]], [[8, 7, 6, 5, 7, -7, 4, 14, 9, 0, 1, -7]], [[-1, -2, -4, -5, -6, -5, -8, -9]], [[0, 14, 10, 7, 11, 12, 13, 14, 15, 16, -1, -5, 20, 6, 30, 101, 200, 6, 12, -5, 200, 14, 200]], [[8, 7, 6, 4, 7, -7, 9, 1, 9, 1, 1]], [[1, 2, 100, 4, 5, 6, 7, 101, 7, 8, 6, 9, 7]], [[0, 10, 11, 13, 14, 16, -5, 20, 25, 0, 100, 200, 300, 25]], [[100000, 25, -1000, 4, 2, 8, 1, 9, 3, 7, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[8, 7, 6, 4, 7, -7, 4, 9, 9, 1, 1, 9, 9]], [[8, 7, 6, 5, 7, -7, 29, 4, 14, 9, 0, 1, -7]], [[1, 4, 6, 2, 3, -1000, 5, 6, 6, 8, 6, -19, 6, 3]], [[100000, 25, -1000, 25, 4, 2, 8, 1, 9, 3, 5, 6, 0, 11, 12, 13, 14, 16, 17, 18, 19, 20, 100000, 8, 4]], [[1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -20, -30, -29, 7, 9, 1]], [[0, 10, -30, 12, 13, 14, 15, 16, -1, 20, 100000, 25, 30, 200, 300]], [[9, 6, 7, 6, -19, 7, 4, -3, 14, 2, 9, 1, 1, -2, 7, 4]], [[12, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, -10, -20, -30, 7, 7, 9, 1, 7]], [[1, 1, 2, 14, 2, 3, 3, 4, 4, 5, 16, 6, -10, 16, -30, 7, 8, 1, -30, 5, 9]]]\n    results = [['Eight', 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], [], ['One'], ['Three', 'Two', 'One'], ['Nine', 'Eight', 'Four'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Six', 'Five'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four'], ['Six', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Four', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'Two', 'Two'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Five', 'Five', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Seven', 'Six', 'Four', 'Two', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'One', 'One', 'One'], ['Eight', 'Seven', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'Two', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'One'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Three', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Four', 'Four', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Four'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Five', 'Five', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Four', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Four', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Four', 'Four', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Nine', 'Seven', 'Six', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Three', 'Three', 'One'], ['Eight', 'Seven', 'Five', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Six', 'Five'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Four', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four'], ['Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'One', 'One', 'One'], ['Eight', 'Seven', 'Seven', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Four', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Five', 'Four', 'Four', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Three', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Three', 'Two', 'Two', 'Two'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Four', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'One'], ['Eight', 'Seven', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Four'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'One', 'One', 'One'], ['Eight', 'Six', 'Four', 'Four', 'Four'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'One', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'One'], ['Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Eight', 'Eight', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three'], ['Eight', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Seven', 'Six', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Eight', 'Eight', 'Five', 'Four', 'Three', 'Two', 'One'], ['Seven'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Eight', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Five', 'Four', 'Two', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Seven'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], [], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two'], ['Eight', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Six', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], [], ['Eight', 'Seven', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], [], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Five', 'Four', 'Four', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Eight', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Three', 'Three', 'One'], ['Three'], ['Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One', 'One'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], ['Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two'], ['Nine', 'Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Eight', 'Seven', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Seven'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Seven', 'Six', 'Six', 'Three', 'One'], ['Eight', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two'], ['Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Eight', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Six', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'Three', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'Two', 'One'], [], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Three', 'Three', 'Two', 'One'], [], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two'], ['Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Seven', 'Six', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'One'], [], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Five', 'Three', 'Three', 'One', 'One'], [], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Five', 'Four', 'Three', 'Three', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'Three', 'One', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two'], ['Eight', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two'], ['Eight', 'Eight', 'Seven', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Two'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One', 'One'], ['Eight', 'Eight', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Four', 'Three', 'Two', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One'], ['Nine', 'Nine', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'Three', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Three', 'Three', 'Two', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Four', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Three', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Three', 'One', 'One'], [], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two'], ['Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Three', 'Three', 'Three', 'One'], ['Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], [], [], [], ['Eight', 'Seven', 'Six', 'Three', 'One', 'One'], [], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two'], ['Nine', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Five', 'Four', 'Three', 'Three', 'One'], ['Eight', 'Seven', 'Two', 'One'], [], ['Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Seven', 'Two', 'One'], [], ['Nine', 'Nine', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'One'], ['Eight', 'Eight', 'Six', 'Five', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Seven', 'Six', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'Two', 'Two', 'One'], ['Nine', 'Seven', 'Five', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One', 'One'], ['Eight', 'Eight', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'One', 'One'], ['Nine', 'Nine', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One', 'One'], ['Eight', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Five', 'Two', 'One'], ['Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Eight', 'Eight', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Three', 'Three', 'Two'], ['Eight', 'Seven', 'Five', 'Four', 'Two', 'One'], [], [], ['Eight', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'One', 'One'], ['Eight', 'Eight', 'Seven', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One', 'One'], [], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Nine', 'Six', 'Four', 'Three', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Four', 'Three', 'Two', 'Two', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Five', 'Four', 'Three', 'One'], ['Eight', 'Seven', 'Seven', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five'], ['Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Two', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Three', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two', 'One'], ['Eight', 'Eight', 'Eight', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Three', 'One'], [], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Nine', 'Six', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One', 'One'], [], ['Nine', 'Seven', 'Six', 'Four', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Two', 'One', 'One'], ['Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Four', 'Four', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'One'], ['One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Eight', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One', 'One'], [], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Two', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Four', 'Four', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Four', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Five', 'Five', 'Four', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Three', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Two', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One'], [], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], ['Seven'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], [], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'Four', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Two'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], [], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'Four', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Seven', 'Seven', 'Six', 'Six', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'One', 'One'], [], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Four', 'Four', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Seven', 'Seven', 'Seven', 'Six', 'Six', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Six', 'Six', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three'], ['Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Three', 'Three', 'Two', 'Two', 'One'], [], ['Nine', 'Nine', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Seven'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], [], [], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'One', 'One'], ['Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Seven', 'Seven', 'Six', 'Four', 'Three', 'Two'], ['Eight', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Four', 'Two', 'One'], ['Eight'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Four', 'Four', 'One', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Four', 'Four', 'Four', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Eight'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Five', 'Five', 'Four', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Four', 'Four', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Five', 'Four', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Two'], ['Nine', 'Nine', 'Eight', 'Seven', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], ['Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Seven', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Five', 'Four', 'Four', 'Four', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One', 'One'], ['Seven'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Seven'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two'], [], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'Two', 'One'], ['Eight', 'Six', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Seven', 'Six'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Four', 'Two', 'One', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'Two'], ['Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Four', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'One', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Four', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Three', 'Three', 'Two'], ['Three', 'Three', 'Three', 'Three'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], [], ['Three', 'Three', 'Three', 'Three'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Three', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Three', 'Two'], ['Nine', 'Nine', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Six', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Four', 'Three', 'Two'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Eight', 'Seven', 'Five', 'Four', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Three', 'Three', 'Three', 'Two'], ['Nine', 'Nine', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Eight', 'Seven', 'Seven', 'Four', 'Three', 'Two'], [], ['Eight'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Eight', 'Six', 'Six', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Nine', 'Six', 'Five', 'Three', 'Three', 'One'], [], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Six', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], ['Nine', 'Nine', 'Eight', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Three', 'Three', 'Two', 'Two', 'One'], ['One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'One', 'One'], ['Nine', 'Seven', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Four', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Three', 'Two', 'Two', 'One'], ['Two'], ['Seven', 'Seven', 'Six', 'Five', 'Two', 'Two'], ['Nine', 'Seven', 'Five', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Five', 'Four', 'Three', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Seven', 'Seven', 'Six', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Seven', 'Seven', 'Four', 'Three', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Eight', 'Seven', 'Seven', 'Five', 'Four', 'Three', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Four', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'Two', 'Two', 'One'], ['Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Six', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One', 'One'], ['Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Four', 'One', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two'], ['Nine', 'Eight', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Three', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Five', 'Four', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Three', 'Two', 'Two', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'Two', 'One', 'One'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'Two', 'One'], ['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Two'], ['Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], [], ['Seven', 'Six', 'Six'], ['Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Four', 'One', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Seven', 'Six', 'Six', 'Five', 'Four', 'Two', 'One'], [], ['Nine', 'Eight', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Nine', 'Nine', 'Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Four', 'Four', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Seven', 'Six', 'Five', 'Four', 'One'], ['Eight', 'Six', 'Six', 'Six', 'Six', 'Six', 'Five', 'Four', 'Three', 'Three', 'Two', 'One'], ['Nine', 'Eight', 'Eight', 'Six', 'Five', 'Four', 'Four', 'Three', 'Two', 'One'], ['Nine', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One'], [], ['Nine', 'Nine', 'Seven', 'Seven', 'Seven', 'Six', 'Six', 'Four', 'Four', 'Two', 'One', 'One'], ['Nine', 'Seven', 'Seven', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One'], ['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Four', 'Three', 'Three', 'Two', 'Two', 'One', 'One', 'One']]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/106", "prompt": "\ndef f(n):\n    \n\n\n    if n == 0: return []\n    if n == 1: return [1]\n    if n == 2: return [1, 2]\n\n    ans = [1, 2]\n    for i in range(3, n + 1):\n        if i % 2 == 1:\n            ans.append(ans[-2] + (i - 1) + i)\n        else:\n            ans.append(ans[-2] * (i - 1) * i)\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef f(n):\n    \n\n\n    if n == 0: return []\n    if n == 1: return [1]\n    if n == 2: return [1, 2]\n\n    ans = [1, 2]\n    for i in range(3, n + 1):\n        if i % 2 == 1:\n            ans.append(ans[-2] + (i - 1) + i)\n        else:\n            ans.append(ans[-2] * (i - 1) * i)\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef f(n):\n    \n\n\n    if n == 0: return []\n    if n == 1: return [1]\n    if n == 2: return [1, 2]\n\n    ans = [1, 2]\n    for i in range(3, n + 1):\n        if i % 2 == 1:\n            ans.append(ans[-2] + (i - 1) + i)\n        else:\n            ans.append(ans[-2] * (i - 1) * i)\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef f(n):\n    if n == 0: \n        return []\n    if n == 1: \n        return [1]\n    if n == 2: \n        return [1, 2]\n\n    ans = [1, 2]\n    for i in range(3, n + 1):\n        # Introduce unnecessary variable assignments\n        current_value = i\n        previous_value = ans[-2]\n        \n        if current_value % 2 == 1:\n            # Unnecessary calculations\n            temp = previous_value + (current_value - 1)\n            temp += current_value\n            ans.append(temp)\n        else:\n            # Unnecessary calculations\n            temp = previous_value * (current_value - 1)\n            temp *= current_value\n            ans.append(temp)\n        \n        # Redundant loop that does nothing\n        for _ in range(0):\n            pass\n        \n        # Unnecessary reassignment\n        current_value = i\n\n    # Unnecessary list copy\n    result = ans[:]\n    return result\n<code_end>\n```", "modification": "\ndef f(n):\n    if n == 0: \n        return []\n    if n == 1: \n        return [1]\n    if n == 2: \n        return [1, 2]\n\n    ans = [1, 2]\n    for i in range(3, n + 1):\n        \n        current_value = i\n        previous_value = ans[-2]\n        \n        if current_value % 2 == 1:\n            \n            temp = previous_value + (current_value - 1)\n            temp += current_value\n            ans.append(temp)\n        else:\n            \n            temp = previous_value * (current_value - 1)\n            temp *= current_value\n            ans.append(temp)\n        \n        \n        for _ in range(0):\n            pass\n        \n        \n        current_value = i\n\n    \n    result = ans[:]\n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[5], [7], [1], [3], [0], [2], [4], [6], [8], [10], [100], [15], [20], [12], [11], [9], [19], [99], [101], [98], [52], [13], [18], [21], [102], [103], [104], [105], [16], [85], [65], [84], [17], [14], [53], [64], [83], [63], [54], [81], [66], [97], [96], [106], [67], [95], [82], [94], [55], [22], [86], [70], [30], [29], [68], [38], [87], [31], [69], [37], [62], [88], [32], [93], [33], [71], [80], [79], [51], [61], [50], [92], [49], [23], [28], [24], [72], [35], [34], [39], [36], [41], [77], [25], [89], [40], [48], [42], [91], [78], [47], [45], [44], [76], [43], [26], [27], [60], [57], [90], [58], [73], [74], [75]]\n    results = [[1, 2, 6, 24, 15], [1, 2, 6, 24, 15, 720, 28], [1], [1, 2, 6], [], [1, 2], [1, 2, 6, 24], [1, 2, 6, 24, 15, 720], [1, 2, 6, 24, 15, 720, 28, 40320], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66], [1, 2, 6, 24, 15, 720, 28, 40320, 45], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000, 5151], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000, 5151, 961446671503512660926865558697259548455355905059659464369444714048531715130254590603314961882364451384985595980362059157503710042865532928000000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000, 5151, 961446671503512660926865558697259548455355905059659464369444714048531715130254590603314961882364451384985595980362059157503710042865532928000000000000000000000000, 5356], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000, 5151, 961446671503512660926865558697259548455355905059659464369444714048531715130254590603314961882364451384985595980362059157503710042865532928000000000000000000000000, 5356, 10299016745145627623848583864765044283053772454999072182325491776887871732475287174542709871683888003235965704141638377695179741979175588724736000000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000, 5151, 961446671503512660926865558697259548455355905059659464369444714048531715130254590603314961882364451384985595980362059157503710042865532928000000000000000000000000, 5356, 10299016745145627623848583864765044283053772454999072182325491776887871732475287174542709871683888003235965704141638377695179741979175588724736000000000000000000000000, 5565], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 4753, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 4950, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000, 5151, 961446671503512660926865558697259548455355905059659464369444714048531715130254590603314961882364451384985595980362059157503710042865532928000000000000000000000000, 5356, 10299016745145627623848583864765044283053772454999072182325491776887871732475287174542709871683888003235965704141638377695179741979175588724736000000000000000000000000, 5565, 114628056373470835453434738414834942870388487424139673389282723476762012382449946252660360871841673476016298287096435143747350528228224302506311680000000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 4560], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 4371], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 4186], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 3003, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 3160, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 3321, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 3486, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 3655, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 3828, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 4005, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000], [1, 2, 6, 24, 15, 720, 28, 40320, 45, 3628800, 66, 479001600, 91, 87178291200, 120, 20922789888000, 153, 6402373705728000, 190, 2432902008176640000, 231, 1124000727777607680000, 276, 620448401733239439360000, 325, 403291461126605635584000000, 378, 304888344611713860501504000000, 435, 265252859812191058636308480000000, 496, 263130836933693530167218012160000000, 561, 295232799039604140847618609643520000000, 630, 371993326789901217467999448150835200000000, 703, 523022617466601111760007224100074291200000000, 780, 815915283247897734345611269596115894272000000000, 861, 1405006117752879898543142606244511569936384000000000, 946, 2658271574788448768043625811014615890319638528000000000, 1035, 5502622159812088949850305428800254892961651752960000000000, 1128, 12413915592536072670862289047373375038521486354677760000000000, 1225, 30414093201713378043612608166064768844377641568960512000000000000, 1326, 80658175170943878571660636856403766975289505440883277824000000000000, 1431, 230843697339241380472092742683027581083278564571807941132288000000000000, 1540, 710998587804863451854045647463724949736497978881168458687447040000000000000, 1653, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 1770, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 1891, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 2016, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 2145, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 2278, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 2415, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 2556, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 2701, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 2850]]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/107", "prompt": "\ndef even_odd_palindrome(n):\n    \n\n\n    odd_cnt, even_cnt = 0, 0\n    for i in range(1, n + 1):\n        if str(i) == str(i)[::-1]:\n            if i % 2 == 1:\n                odd_cnt += 1\n            else:\n                even_cnt += 1\n    return even_cnt, odd_cnt\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef even_odd_palindrome(n):\n    \n\n\n    odd_cnt, even_cnt = 0, 0\n    for i in range(1, n + 1):\n        if str(i) == str(i)[::-1]:\n            if i % 2 == 1:\n                odd_cnt += 1\n            else:\n                even_cnt += 1\n    return even_cnt, odd_cnt\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef even_odd_palindrome(n):\n    \n\n\n    odd_cnt, even_cnt = 0, 0\n    for i in range(1, n + 1):\n        if str(i) == str(i)[::-1]:\n            if i % 2 == 1:\n                odd_cnt += 1\n            else:\n                even_cnt += 1\n    return even_cnt, odd_cnt\n\n", "raw_modification": "```python\n<code_start>\ndef even_odd_palindrome(n):\n    odd_cnt, even_cnt = 0, 0\n    \n    # Introduce unnecessary conversion and checks\n    for i in range(1, n + 1):\n        num_str = str(i)\n        reversed_num_str = num_str[::-1]\n        \n        # Unnecessary loop to check palindrome\n        is_palindrome = True\n        for j in range(len(num_str)):\n            if num_str[j] != reversed_num_str[j]:\n                is_palindrome = False\n                break\n        \n        if is_palindrome:\n            # Additional redundant checks\n            if i % 2 == 0 and i % 2 == 1:\n                pass\n            elif i % 2 == 1:\n                odd_cnt += 1\n            else:\n                even_cnt += 1\n\n            # Redundant operations\n            temp = i * 1\n            if temp == i:\n                continue\n\n    # Unnecessary reassignment\n    result = (even_cnt, odd_cnt)\n    return result\n<code_end>\n```", "modification": "\ndef even_odd_palindrome(n):\n    odd_cnt, even_cnt = 0, 0\n    \n    \n    for i in range(1, n + 1):\n        num_str = str(i)\n        reversed_num_str = num_str[::-1]\n        \n        \n        is_palindrome = True\n        for j in range(len(num_str)):\n            if num_str[j] != reversed_num_str[j]:\n                is_palindrome = False\n                break\n        \n        if is_palindrome:\n            \n            if i % 2 == 0 and i % 2 == 1:\n                pass\n            elif i % 2 == 1:\n                odd_cnt += 1\n            else:\n                even_cnt += 1\n\n            \n            temp = i * 1\n            if temp == i:\n                continue\n\n    \n    result = (even_cnt, odd_cnt)\n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[123], [12], [3], [63], [25], [19], [9], [1], [1000], [500], [777], [10], [15], [27], [35], [50], [89], [201], [51], [11], [26], [778], [88], [202], [28], [200], [31], [30], [999], [32], [36], [87], [779], [998], [203], [86], [33], [14], [29], [34], [24], [204], [13], [23], [780], [85], [781], [206], [16], [499], [84], [207], [17], [205], [997], [199], [498], [37], [776], [775], [22], [52], [83], [774], [782], [78], [21], [208], [773], [98], [209], [497], [772], [996], [18], [8], [53], [7], [38], [79], [90], [20], [771], [97], [82], [6], [496], [770], [77], [62], [91], [783], [502], [61], [210], [92], [60], [93], [503], [501], [76], [75], [59], [888], [555], [400], [978], [505], [506], [401], [979], [504], [96], [556], [887], [507], [889], [508], [554], [977], [402], [399], [553], [95], [890], [398], [509], [886], [99], [510], [511], [891], [94], [552], [551], [550], [397], [885], [980], [396], [884], [100], [512], [994], [995], [57], [395], [892], [557], [982], [993], [80], [883], [981], [983], [58], [984], [403], [404], [5], [976], [974], [405], [985], [4], [973], [975], [893], [39], [494], [986], [101]]\n    results = [(8, 13), (4, 6), (1, 2), (6, 8), (5, 6), (4, 6), (4, 5), (0, 1), (48, 60), (28, 30), (38, 48), (4, 5), (4, 6), (5, 6), (5, 7), (6, 7), (8, 9), (8, 20), (6, 7), (4, 6), (5, 6), (38, 48), (8, 9), (9, 20), (5, 6), (8, 20), (5, 6), (5, 6), (48, 60), (5, 6), (5, 7), (7, 9), (38, 48), (48, 59), (9, 20), (7, 9), (5, 7), (4, 6), (5, 6), (5, 7), (5, 6), (9, 20), (4, 6), (5, 6), (38, 48), (7, 9), (38, 48), (9, 20), (4, 6), (28, 30), (7, 9), (9, 20), (4, 6), (9, 20), (48, 59), (8, 20), (28, 30), (5, 7), (38, 47), (38, 47), (5, 6), (6, 7), (7, 9), (38, 47), (38, 48), (7, 9), (4, 6), (9, 20), (38, 47), (8, 9), (9, 20), (28, 30), (38, 47), (48, 59), (4, 6), (4, 4), (6, 7), (3, 4), (5, 7), (7, 9), (8, 9), (4, 6), (38, 47), (8, 9), (7, 9), (3, 3), (28, 30), (38, 47), (7, 9), (6, 8), (8, 9), (38, 48), (28, 30), (6, 8), (9, 20), (8, 9), (6, 8), (8, 9), (28, 30), (28, 30), (7, 8), (7, 8), (6, 8), (47, 50), (28, 36), (18, 30), (48, 57), (28, 31), (28, 31), (18, 30), (48, 58), (28, 30), (8, 9), (28, 36), (46, 50), (28, 31), (47, 50), (28, 31), (28, 35), (48, 57), (18, 30), (18, 30), (28, 35), (8, 9), (47, 50), (18, 30), (28, 31), (46, 50), (8, 10), (28, 31), (28, 31), (47, 50), (8, 9), (28, 35), (28, 35), (28, 35), (18, 30), (46, 50), (48, 58), (18, 30), (46, 50), (8, 10), (28, 31), (48, 59), (48, 59), (6, 8), (18, 30), (47, 50), (28, 36), (48, 58), (48, 59), (7, 9), (46, 50), (48, 58), (48, 58), (6, 8), (48, 58), (18, 30), (19, 30), (2, 3), (48, 57), (48, 57), (19, 30), (48, 58), (2, 2), (48, 57), (48, 57), (47, 50), (5, 7), (28, 30), (48, 58), (8, 11)]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/108", "prompt": "\ndef count_nums(arr):\n    \n\n    def judge(x: int) -> int:\n        l = list(str(x))\n        if l[0] == \"-\":\n            l = l[1:]\n            l = list(map(int, l))\n            l[0] = -l[0]\n        else:\n            l = list(map(int, l))\n        return 1 if sum(l) > 0 else 0\n    return sum(map(judge, arr))\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef count_nums(arr):\n    \n\n    def judge(x: int) -> int:\n        l = list(str(x))\n        if l[0] == \"-\":\n            l = l[1:]\n            l = list(map(int, l))\n            l[0] = -l[0]\n        else:\n            l = list(map(int, l))\n        return 1 if sum(l) > 0 else 0\n    return sum(map(judge, arr))\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef count_nums(arr):\n    \n\n    def judge(x: int) -> int:\n        l = list(str(x))\n        if l[0] == \"-\":\n            l = l[1:]\n            l = list(map(int, l))\n            l[0] = -l[0]\n        else:\n            l = list(map(int, l))\n        return 1 if sum(l) > 0 else 0\n    return sum(map(judge, arr))\n\n", "raw_modification": "```python\n<code_start>\ndef count_nums(arr):\n    \n    def judge(x: int) -> int:\n        # Convert number to string and then to list of characters\n        l = list(str(x))\n        \n        # Initialize a variable to store the sum of digits\n        digit_sum = 0\n        \n        # Check if the number is negative\n        if l[0] == \"-\":\n            # Remove the negative sign\n            l = l[1:]\n            \n            # Convert each character to an integer\n            l = list(map(int, l))\n            \n            # Negate the first digit\n            l[0] = -l[0]\n            \n            # Calculate the sum of digits\n            for digit in l:\n                digit_sum += digit\n        else:\n            # Convert each character to an integer\n            l = list(map(int, l))\n            \n            # Calculate the sum of digits\n            for digit in l:\n                digit_sum += digit\n        \n        # Check if the sum of digits is positive\n        if digit_sum > 0:\n            return 1\n        else:\n            return 0\n    \n    # Initialize a counter\n    count = 0\n    \n    # Iterate over each element in the array\n    for num in arr:\n        # Apply the judge function and increment the counter if it returns 1\n        if judge(num) == 1:\n            count += 1\n    \n    # Return the final count\n    return count\n<code_end>\n```", "modification": "\ndef count_nums(arr):\n    \n    def judge(x: int) -> int:\n        \n        l = list(str(x))\n        \n        \n        digit_sum = 0\n        \n        \n        if l[0] == \"-\":\n            \n            l = l[1:]\n            \n            \n            l = list(map(int, l))\n            \n            \n            l[0] = -l[0]\n            \n            \n            for digit in l:\n                digit_sum += digit\n        else:\n            \n            l = list(map(int, l))\n            \n            \n            for digit in l:\n                digit_sum += digit\n        \n        \n        if digit_sum > 0:\n            return 1\n        else:\n            return 0\n    \n    \n    count = 0\n    \n    \n    for num in arr:\n        \n        if judge(num) == 1:\n            count += 1\n    \n    \n    return count\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[]], [[-1, -2, 0]], [[1, 1, 2, -2, 3, 4, 5]], [[1, 6, 9, -6, 0, 1, 5]], [[1, 100, 98, -7, 1, -1]], [[12, 23, 34, -45, -56, 0]], [[0, 1]], [[1]], [[0, 0, 0]], [[-1, 0, 1]], [[123, -456, 789]], [[0, -1, -20, 30]], [[-10, -11, -12, 13, 14, -20]], [[123, 456, 789, -987, -654, -321]], [[100, -250, 375, 500, -750]], [[-10, -20, -30, -40]], [[99, 999, 666, -5555]], [[101, -202, 303, -404, 505, -606]], [[123, 456, 789, 790, -987, -654]], [[101, 303, -404, -606]], [[-5555, -12, 101, -202, 303, -404, 505, -606]], [[100, -250, 375, -750]], [[101, -202, 303, -403, 505, -606]], [[0, -1, -20, 30, 0, -20]], [[-1, -20, 30, 0, -20, 0]], [[-1, 0, 1, -1, 0]], [[0, 666]], [[15, -10, -11, -12, 13, 14, -20]], [[-1, -404, 30, 0, -20, 0]], [[99, -250, 375, -750]], [[303, -404, -606]], [[0]], [[303, -405, -405, -606]], [[99, 99, 999, 666, -5555]], [[99, -250, 375]], [[-2, -20, 30, 0, -20, 0]], [[101, -987, 303, -404, -606]], [[99, 99, 666, -5554, -5555]], [[100, 790, 101, -202, 303, -403, 506, -606]], [[99, 99, 666, -5554, -5555, 99]], [[101, -202, 303, 505, -606]], [[-10, 123, -12, 13, 14, -20]], [[99, 666, -5554, -5555, -5554]], [[101, -202, 303, -403, -606]], [[99, 999, -202, 30, -5555, -202]], [[101, -202, 303, -404, 505, 302, -606, 302]], [[-10, -11, -12, 0, 14, -20]], [[-2, -20, 30, 0, 505, -11]], [[101, 101, -40, 303, -404, -606]], [[-1, 303, 1, -1, 0, 1]], [[99, 999, -202, 30, -5555, -202, 30]], [[15, -10, -11, -12, 13, 14]], [[101, -1, -40, 303, -404, -606]], [[123, 456, 789, -987, -654, -5555, -321]], [[101, 303, -404, 505, -606]], [[-10, -11, 505, 0, 14, -20]], [[-1, -404, 30, 999, -20, 0]], [[-1, -404, 30, 999, -20, 0, 0, 999]], [[101, -202, 303, -404, -606]], [[999, 666, -5555]], [[101, -404, 304, -404, 505, -606]], [[456, 789, 790, -987, -654, 790]], [[0, 0]], [[99, 999, -202, 30, -750, -5555, -202, 30]], [[101, -202, 303, -403, -606, 101]], [[-405, 303, -405, -405, -606]], [[101, -11, -202, -606, 505, -606]], [[999, 665, 666, -5555]], [[123, -456, 789, 123]], [[15, -10, -11, -12, 14, -20]], [[-1, -404, 999, 30, 999, -20, 0, 0, 999, 0]], [[123, 456, 789, -987, -654]], [[999, -1, -404, -750, 999, -19, 0]], [[100, -250, 375]], [[99, -250, 375, -750, -750]], [[-251, 99, -250, 375, -750]], [[99, 999, -202, 30, -5555, -202, 30, -202]], [[0, 0, 0, 0]], [[15, -10, -11, -12, 14, 14, -20]], [[-10, -11, -12, 13, 14, -20, 14]], [[-10, 30, -11, 505, 0, 14, -20]], [[-405, 506, 303, -405, -405, -606]], [[-405, -456, 303, -405, -405, -606]], [[99, 999, 666, -5555, 99]], [[101, -202, 303, -404, 505, -605, 302]], [[-2, -20, 30, 0, -20, 0, -20]], [[-405, 506, -250, -405, -405, -606]], [[99, 999, -250, -202, 30, -5555, -202, 30, 999]], [[-605, 303, -405, -405, -5555, -606, -606]], [[456, 789, 789, 790, -987, -654]], [[-1, -404, 30, 999, -20, 0, 0, -19, 999]], [[-30]], [[-1, 0, 1, -1]], [[101, -11, -202, -606, 666, -606, 666]], [[-1, -404, 14, 30, 999, -20, 0, 0, -19, 999]], [[99, 99, 999, 666, -5555, 666]], [[100, -250, 375, -250]], [[-12, -201, 101, -202, 303, -404, 505, -605, 302]], [[100, -605, 790, 101, -202, 303, -403, 506, -606]], [[99, -5554, 999, 666, -5555, 99]], [[-405, 506, 303, -405, -405, -606, -405]], [[456, 789, 790, -987, -654]], [[99, -5554, 999, 666, -5555]], [[0, 1, -1, 0]], [[123, -456, 789, 789, -456]], [[99, 999, -203, 30, -5555, -202, 30, -202]], [[999, -202, 30, -5555, -202]], [[-2, 0]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9]], [[1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[-1, -2, 0, -123456789, 123456789]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[-987654321, 987654321, -123456789, 123456789]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006]], [[-999999999, -999999998, -999999997, -999999996, -999999995, -999999994, -999999993, -999999992, -999999991, -999999990]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789]], [[-999999999, -999999998, -999999997, -999999996, -999999995, -999999993, -999999992, -999999991, -999999990]], [[0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, 999999]], [[0, 0, 30, 0, 0, 0, 0, 0, 0, 99, 0]], [[1000000, 999999, -888888, -123456, -987654, 11111, 999999, -22222, 3333, -4444, 555, 666, -77, 88, 9, 999999]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1000000, 999999, 14, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654]], [[1000000001, 2000000002, 3000000003, -4000000004, -6000000006]], [[1000000, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999]], [[-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, 3333]], [[-1, -10, -9999, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333]], [[0, -2, 0, -123456789, 123456789]], [[1, 2, 3, 4, 5, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, -10]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777]], [[1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777]], [[-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 88]], [[1000000, 999999, -888888, -123456, 2000000002, 11111, 3333, -4444, 666, -77, 88, 88]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777]], [[-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 999999]], [[1000000, -1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777]], [[-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10]], [[1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111]], [[1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 9999]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555]], [[-987654321, 987654321, 2220, 123456789]], [[-1, -10, 10, -11, -12, 555, 796, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10]], [[1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123]], [[1, 2, 3, 4, 5, 6, -7770, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 999]], [[1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 1111]], [[-987654321, 987654321, 2220, 987654321]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 777, -10000, 123456789, 777, 777]], [[1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 9, -987654, -987654]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006]], [[1000000000, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006, 1000000000]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777]], [[1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111]], [[1000000, 999999, 3, -987654, 11111, -22222, 3333, -4444, 555, 666, 88, 9, 999999]], [[1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999]], [[1000000, 1000000000, 999999, 14, -123456, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654]], [[1000000, 2, 999999, 3, -987654, 11111, -22222, 3333, -4444, 555, 666, 88, 9, 999999]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006, 2000000002, 2000000002]], [[-1, -10, -11, 19, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18]], [[1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555]], [[1, -100, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 1000000, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 6660]], [[1000000001, 2000000002, -4000000004, -6000000006]], [[1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999, 9999]], [[-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777]], [[432, -123456, 0, -123456789, 123456789]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 1110, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -9999]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789]], [[-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789]], [[1000000, 987654321, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444]], [[1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999]], [[1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219]], [[-987654321, 987654321, 2220, 123456789, 987654321]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, -10]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, 666, -77, 88, 88, -888888]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655]], [[1000000001, 2000000002, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006, 2000000002, 2000000002]], [[1000000, 999999, 100, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 999999]], [[-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, 10, 20, -3333, 30, -100, 777, -10000, 123456789, 777]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -5555]], [[0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777]], [[-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, -77, 10, 20, 30, 666, 777, -10000, 123456789, 777]], [[1, -100, 2, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999]], [[1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, -77, 88, 88, -888888]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 7]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, -987654, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444]], [[-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777]], [[-10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10]], [[1000000, 1000000000, 999999, 14, -123456, -987654, 11111, -123457, 3333, -4444, 555, 666, -77, 88, 9, -987654]], [[0, 0, 30, 0, -999999999, 0, 0, 0, 0, 99, 0]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, 9, 999999]], [[1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777]], [[1, 2, 3, 4, 5, 6, -999999993, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9]], [[1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219]], [[-1, 0, -10, 10, -11, -12, 555, 796, 123456789, -990, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10]], [[1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -999999991, 99999, -1111111]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330]], [[1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, -77, 88, 88, 100]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006, 2000000002]], [[-1, -10, 776, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777]], [[1, 2, 10000, 2, 3, 4, 5, 19, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[7, 1111, 2223, 7, 9999, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, 8, 5]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789]], [[1000000001, 2000000002, -4000000003, -4000000004, -6000000006, -6000000006]], [[1000000, 999999, -888888, -123456, -987654, 11111, 999999, -22222, -4444, 555, -77, 88, 9, 999999]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 433, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777]], [[1000000, 987654321, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, -987654, 88, 9, 999999]], [[-1, -10, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 1111, 8888]], [[-1, -10, 10, -11, -12, 555, 797, 554, -45, -990, 2220, 100, -199, 432, 10, 20, -3333, 30, -100, 777, -10000, 123456789, 777]], [[1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999]], [[1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 9]], [[1000000001, 2000000002, -4000000003, -4000000004, -6000000006, 6, -6000000006, 1000000001]], [[1000000, -888888, -123456, 2000000002, 11111, 3333, -4444, 666, -77, 88, 88]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -22222]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, -987655, 11111, -888888]], [[-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 666, 777, -10000, 19, 123456789, 777, -10]], [[1000000001, 2000000002, 3000000003, -4000000004, -6000000006, 5000000005, 5000000005, -6000000006]], [[1111, 4, 7, 9999, 4444, -7770, -5555, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111]], [[1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777]], [[0, 0, 0, 0, 2219, 0, 0, 0, 0, 0, 0]], [[1000000, -888888, -123456, 11111, -22221, 3333, -4444, 666, -77, 88, 9, 999999]], [[-22221, 1000000001, 2000000002, 3000000003, -4000000004, -6000000006, 5000000005, 5000000005, -6000000006, -6000000006]], [[1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 9, -987654, -987654]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, 666, -77, 88, 88, -22222, -888888, 88]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, -99999, 99999, -1111111]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006, 2000000002, 2000000002, 2000000002]], [[-1, -10, -11, 31, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777]], [[1000000, -888888, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999]], [[-1, -2, 0, -123456789, 123456789, 0]], [[-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777]], [[1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -3330, 1111]], [[987654321, 123456789, 11111, 123456789]], [[1000000001, 2000000002, 3000000003, -4000000004, -6000000006, 1000000001]], [[1000000, 1000000000, 999999, 14, -123456, -987654, 11111, -123457, 3333, -4444, 555, 666, -77, 88, 9, -987654, 1000000000]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999, -123456]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777]], [[1, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[1000000001, -98, 3000000003, -6000000006, -98]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 123, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777]], [[1111, 2223, 9999, 4444, -10000, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444]], [[665, 1000000, 999999, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 999999, 999999]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 5]], [[1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[-1, -10, -11, -12, 555, 797, -45, 667, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777]], [[1000000001, 2000000002, 3000000003, 5000000005, -6000000006, 2000000002, -6000000006, 2000000002, 1000000001]], [[1000000001, 2000000002, 2000000002, -4000000003, -4000000004, -6000000006, -6000000006]], [[-1, -10, -987654321, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 3000000003]], [[-1, -10, -11, 31, -12, 555, 797, -45, -990, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777]], [[-1, 0, -10, 10, -11, 555, 796, 123456789, -990, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10]], [[1111, 2223, 7, 9999, 4444, 6666, -7777, 8888, -9999, 1110, 2219, -7770, -5550, 6660, -7770, 8880, -9990]], [[-987654320, 987654321, 2220, 123456789, 987654321]], [[0, -2, 0, -123456789, 123456789, -2]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990]], [[1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, -123456789]], [[-1, -10, 776, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777]], [[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 122, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789, 777]], [[-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 778, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10]], [[1111, 2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, -9990]], [[1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, -99999, 99999, -1111111]], [[1, -100, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999]], [[1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 554, 666, -77, 88, -987655, 9, -987654, 999999]], [[-1, -10, -987654321, -990, -11, -12, -999, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777]], [[999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 999999, 11111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777, 777]], [[-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[-6000000006, 2, 3, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 7]], [[-1, -10, -987654321, -990, -11, -12, -999, -45, -990, -1000, 999, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777]], [[1000000, 999999, -888888, -4443, -123456, -987654, 11111, 3333, -4444, 666, -77, 88, 88]], [[-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 123456788, 6660, -7770, 8880, -9990]], [[0, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777, 100]], [[999999, 999999, -888888, -123456, 2, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 10]], [[-1, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 123, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12]], [[1000000, 999999, -888888, -987654, 11111, -123456, 3334, -4444, 666, -77, 88, 88]], [[-1, -10, 10, 665, -11, -12, 555, 797, 554, -45, -990, -1000, 100, -199, 432, -77, 10, 20, 30, 666, 777, -10000, 123456789, 777]], [[-1, -2, 0, -123456789, 123456789, 0, 0]], [[1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 20, 666, 777, -10000, 123456789, 777, 777, 797, 777]], [[0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30]], [[1, 11, 2, 3, 4, 5, 6, 7, 9, -99, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, 2000000002, 2000000002, 2000000002]], [[1000000, -888888, -123456, -987654, 11111, -22222, 3333, 555, 666, -77, 88, 9, 999999]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333]], [[-1, -10, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777]], [[1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 99999]], [[1, -100, 3, 4, 5, 6, 7, 9, 13, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999, 6]], [[1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999, 999]], [[0, -2, 0, -123456789, 123456789, -2, -2]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770]], [[-1, -2, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -2, -10000, 123456789]], [[-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -99, 20, 30, 4, 666, 777, -10000, 123456789, 777]], [[-1, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789]], [[1000000, 999999, 14, -123456, -987654, 11111, -4444, 3333, -4444, 555, 1000001, 666, -77, 88, 9, -987654]], [[-1, -10, 776, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777]], [[999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 555, 666, -77, 88, 9, 3333, 11111]], [[1, 2, 3, 4, 5, 6, 7, 99999, 9, -1000000000, -99, 99, -999, 999, -9999, -99999, 99999, -1111111]], [[-1, -10, -990, -11, -12, 797, 8880, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777, -45]], [[1111, 2223, 7, 9999, 4444, 666, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1, 2, 3, 5, 6, 7, 9, -99, 99, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999, 9999]], [[-1, -2, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -2, -10000, 123456789, 555]], [[1, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -999999991, 99999, -1111111, 2]], [[1111, 4, 7, 9999, 4444, -7770, -3331, 6666, -199, 1, -7777, 8888, -9999, 1110, 2219, 1000001, -3330, 4440, 6660, -7770, 8880, 1111, -7770]], [[1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, 9, 999999]], [[999999, 999999, -888888, -123456, -987655, 2, 3333, -4444, 555, 666, -77, 88, -987655, -987654]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777]], [[-987654321, 987654321, 2220, -987654320, 987654320, 2220, 2220]], [[-987654320, 987654320, 2220, 123456789]], [[1111, 2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, -9990, -9990]], [[88, 999998, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111]], [[2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 797, 777, 777, 123]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -999999991, 4445, -3330, 4440, -5550, 6660, -10, 8880, -9990]], [[2222, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 1000000, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, -199]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777]], [[-1, -10, 10, -11, -12, 555, 797, 99, -45, -990, -1000, 100, -98, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12]], [[-1, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 777]], [[1000000001, 3000000003, -4000000004, -6000000005, 5000000005, -6000000006, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002]], [[-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -999999990, 777, 555, 123456789, 777, 777, -12]], [[1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, -4444, 555, 666, -77, 88, 9, 999999]], [[1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 666, 88, -987655, 9, -987654, -987654, 11111]], [[1111, 2223, 7, 9999, 4444, 666, -5555, 6666, -7777, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990]], [[2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999, 999]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, 17, -7770, 8880, -9990]], [[1000000001, 3000000003, -4000000004, -888888, 5000000005, -6000000006, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002]], [[1111, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1, 1, 10000, 2, 3, 4, 5, 19, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999, 3333]], [[1111, 2223, 7, 9999, -1000000000, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444]], [[1, 2, 10000, 2, 3, 4, 5, 19, -100, 8, 9, -99, 99, 999, -9999, 9999, -999999991, 99999, -1111111, 2]], [[-1, -10, 10, -11, -12, 555, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -999999990, 777, 555, 123456789, 777, 777, -12]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 100]], [[1000000001, 2000000002, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006, 2000000002]], [[-1, -10, -11, -12, 555, 797, -45, 667, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, -10000]], [[1000000, 8, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 2000000002, 555, 666, -77, 88, -987655, 9, -987654, -987654]], [[-1, -10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10]], [[665, 1000000, 999999, -123456, -987654, 11111, 3333, -4444, -77, 88, 9, 999999, 999999]], [[-1, -10, -11, -12, 555, 797, 99, -45, -990, -1000, 100, -98, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12, -990]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, -999999991, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770]], [[987654321, 123456789, 123456790, 11111, 123456789, 123456789]], [[1000000, 0, -10, -11, -12, 555, 797, -45, -990, -1000, 100, -1, 123, 432, 10, 20, 30, 666, 777, -10000, -3332, 777, 777]], [[-987654319, 987654320, 2220, 123456789]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, -5555, -10000, 123456789, 777, 777, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 432, 19, 20, -199, -99, -9, 9]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 13, 14, 15, 17, 18, 19, 20, -199, -99, -9, 18, 18]], [[1000000, 999999, -888888, -123457, -987654, 11111, 3333, 666, 100, 88, 88, 6]], [[1, -100, 3, 4, 5, 6, 7, 9, 13, 16, 99, -999, 16, 998, -9999, 9999, -99999, 99999, -1111111, 999]], [[1000000, -888888, -987654, 11111, -22222, 3333, 4445, 666, -77, 88, 9, 999999]], [[1000000001, 3000000003, -4000000003, -888888, 5000000005, -6000000006, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002]], [[1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, 9, 999999, -4444]], [[1000000, -888888, -987654, 11111, -22222, 3333, -4444, 666, -77, -22223, 88, 9, 999999]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6660, -7770, -3331, 8880, -9990]], [[1000000001, 2000000002, 3000000003, -4000000004, -4000000004, -6000000006, 2000000002, -6000000006]], [[1000000, -888888, -123456, -987654, 11111, 999999, -22222, -4444, 555, -77, 88, 9, 999999]], [[1, 2, 10000, 2, 3, 4, 5, 19, -100, 8, 9, -99, 99, 999, -9999, 9999, -999999991, -123456789, -1111111, 2]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 999999]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 3333, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1]], [[1000000, 999999, -888888, -123456, -987654, 778, -22222, 3333, 555, 666, -77, 88, -987655, 11111, -888888]], [[2000000002, -6000000005, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006, 2000000003, 2000000002, 2000000002, 2000000002]], [[-1000, 1111, 2222, -3333, 4444, -5555, 6665, -7777, 8888, -2, -9999, 1110, 2220, -3330, 4440, 123456788, 6660, -7770, 8880, -9990]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777, -11]], [[1000000001, 3000000003, -4000000003, -888888, -6000000006, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002, -4000000003, 2000000002]], [[1000000001, 3000000003, -4000000004, -888887, 5000000005, -6000000006, 2000000002, 2000000002, 2000000002, 2000000002]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 797, 777, 777, -990, 797]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 433, 432, 10, 20, 30, 666, 6666, 777, -10000, 123456789, 778]], [[-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, -10000]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, -99, 5]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333]], [[1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, 999998, -987655, 778, -987654, -987654, -77]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111]], [[1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, -999999996, -3330, 4440, 6660, -7770, 8880, 1111, 1111]], [[1111, 4, 7, 9999, -7770, -3331, -5556, 6666, -199, -7777, 8888, -9999, 1110, -999999996, -3330, 4440, 6660, -7770, 8880, 1111, 1111]], [[1, 2, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999, 5, -9999]], [[-1000, 1111, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1111, 4, 7, 9999, 4443, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3331, 4440, 6660, -7770, 8880, 1111, 2219]], [[-1, -10, -990, -12, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 777, 797]], [[-1, -10, 31, -12, 555, 797, -45, -990, -1000, 100, -1111111, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777]], [[1111, 4, 7, 9999, 4443, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3331, 2, 6660, -7770, 8880, 1111, 2219, 6666]], [[-3330, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, -123456789]], [[-1, -11, 10, -11, -12, 555, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -999999990, 777, 555, 123456789, 777, 777, -12, 797]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, 1000000]], [[1111, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219, 2223]], [[0, -2, 0, 123456789, -2, -2]], [[999999, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654]], [[1, 10000, 2, 3, 4, 3, 5, 19, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[999999, -888888, -123456, 2, 3333, -4444, -4444, 555, 666, -77, 88, -987655, 9, -987654]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, 1111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 797, 777, 777, 777]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777, -45]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 999999, 3333]], [[1000000001, 2000000002, -4000000003, -4000000004, -6000000006, 6, -6000000006]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990]], [[432, 0, -123456789, 123456789, -123456789, 0]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, 17, -7770, 8880, -9990, 8888]], [[1000000, -888888, 11110, 11111, -22222, 3333, -4444, 666, -77, 88, 9, 999999]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -9, -5555, -3330]], [[1000000, 999999, -888888, -123456, -987654, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 778, -987654, -987654, -77]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444]], [[0, 0, 0, 0, 2219, 0, 0, 1, 0, 0, 0]], [[2223, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, 3334, -3330, 4440, -5550, -7770, -5555, 8880]], [[0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1]], [[-1, -999999999, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, -12, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777]], [[-1, 10, -11, -12, 555, 797, -45, -990, -1000, -987655, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777]], [[8888, 999999, 14, -123456, 11111, 3333, -4444, 555, 666, -77, 88, 9, -987654]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18, 8, 5, 20]], [[-1, -10, 10, -11, 778, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 777, -10000, 123456789, 777, 777]], [[432, 0, -123456789, 123456789, -123456789, 0, 123456789]], [[0, -1, -10, 10, -11, -12, 555, 797, 777, -45, -990, -9990, -1000, 100, 123, 432, 88, 30, 777, -10000, 123456789, 777, 777]], [[1111, 4, 7, 9999, 4, -7770, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 4444]], [[-1, -10, 10, -11, -12, 20, 555, 797, -45, 3334, -1000, 100, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12]], [[1000000, 999999, -888888, -123456, -987654, 11111, 18, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654]], [[1, 2, 5000000005, 3, 4, 5, 6, 9, -99, 99, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111, 999]], [[999998, 1000000, 999999, -888888, -987654, 3333, -4444, 555, 666, -77, 88, 9, 3333, 11111, 999998, -77]], [[-1, -10, 433, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 10, -1, -12]], [[1111, 2223, -3333, 4444, 1110, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550]], [[1000000001, 2000000002, 3000000003, 5000000005, -6000000006, 3000000003, 2000000002]], [[-22221, 1000000001, 2000000002, -999999990, -4000000004, -6000000006, 5000000005, 5000000005, -6000000006, -6000000006, -4000000004]], [[-1, -10, -990, -11, -12, 797, 16, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777]], [[8888, 999999, 14, -123456, 11111, 3333, -4444, 11112, 555, 666, -77, 88, 9, -987654]], [[1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 99999, 1]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 4441, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 1112, 6660, -7770, 8880, -9990]], [[0, -1, -10, 10, -12, 1000000001, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1, 30]], [[0, -2, 0, -5556, 123456789, -2, -2]], [[1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, 9, -987654]], [[1000000, 999999, -888888, -123456, -987654, 4440, 3333, 666, -77, 88, 88, -22222, -888888, 88]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -999999991, 4445, -3330, 4440, -5550, 6660, -10, 8880, 998, -9990]], [[1, 2, 10000, 2, 3, 4, 5, 19, -9, 8, 1111, 9, -99, 99, -999, 999, -9999, 9999, -999999991, 99999, -1111111, 3, 19]], [[1000000001, -98, 3000000003, -6000000006, -97, -98]], [[1, 3, 4, 5, 6, 7, 9, -99, 99, -98, -999, 999, -9999, -999999995, 9999, -99999, 99999, -1111111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 797, 777, 777, -990, 797, 797]], [[1000000, 999999, -888888, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, -1, 999999, -123456, -4444]], [[1000000, 999999, -888888, -123456, 2000000002, 11111, 3333, 666, -77, 88, 88]], [[-987654321, 8888, 2220, 123456789, 123456788, -999999995, 987654321]], [[1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 88, -999999996, -3330, 4440, 6660, -7770, 8880, 1111, 1111, 9999]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, 777, 777, -45]], [[-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -999999991, 99999, -1111111, 2]], [[-1, 10, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 777]], [[1111, 2223, 7, 9999, 6660, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 776, 797, 777, 777, 123, 797]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, -999999991, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, -7770, 6660, 2219]], [[1, 2, 3, -1111111, 4, 5, 6, 7, 8, -999999999, -99, 99, -999, 999, -9999, -99999, 99999, -1111111, 4]], [[-1, -10, -11, 31, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, -10000]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 2219, 777, 777, 797, 777, 777, 100]], [[-1, -10, -990, -11, 2219, 797, -45, -990, -1000, 2000000003, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, -10, 777, 123, 123456789]], [[-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 777, 797, 777, -11, 123456788]], [[1000000, 999999, 14, -123456, -987654, 11111, -4444, 3333, 122, -4444, 555, 1000001, 666, -77, 88, -987654]], [[-987654320, 123456789, 2, 987654320, 2220, 123456789]], [[1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777, -45]], [[-1, -10, 10, -11, -12, 555, 797, 11, -45, -990, -1000, 100, 88, 123, 432, 10, 20, 30, 666, 777, -10000, 778, 777, 10]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, 18, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9, 10]], [[1111, 2223, 9999, 4444, -10000, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 10000, 4444]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 87, -987655, 999999]], [[-987654321, 123456789, 987654321, 987654321]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 122, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9]], [[1000000001, 2000000002, 1000000001, 2000000002, -4000000003, -4000000004, -6000000006, -6000000006]], [[9, 1000000, 8, -888888, -123456, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 9, -987654, -987654, -123456]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1110, -7770, 4]], [[-1, -999999999, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 9, -12, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 30, 777]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18]], [[1111, -77, 2223, -3333, 4444, -5555, 6666, -7777, 8888, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 1111, 8888, 6660]], [[-1000, 1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 123456788, -999999991, -7770, 8880, -9990, -1000]], [[8888, -888888, -5555, 14, -123456, 11111, 3333, -4444, 11112, 555, 666, -77, 88, 9, -987654]], [[-22221, 19, 2000000002, -999999990, -4000000004, -6000000006, 5000000005, 5000000005, -6000000006, -6000000006, -4000000004]], [[1111, 2223, 7, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444, 6660]], [[1111, 4, 7, 9999, 4444, -7770, -3331, -5555, -5555, 6666, -199, -7777, 8888, -9999, 1110, 2219, -3330, 4440, 6660, 8880, 1111]], [[1000000, 0, -10, -11, -12, 30, 555, 797, -45, -990, -1000, 100, -1, 123, 432, 10, 20, 30, 666, 777, -10000, -3332, 777, 777]], [[1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 1112, 8888, -1111111, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 1111, 2219, 1111]], [[0, -10, 10, -11, -12, 555, 797, 123, -45, -990, -1000, 100, -3330, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777, 101]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999, 12, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 18]], [[1000000001, 3000000003, -4000000003, -888888, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002, -4000000003, 2000000002]], [[-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 10, 30, 666, -10000, 123456789, 777]], [[88, 999998, 18, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 777, 777, 123, 123456789, 777, -12]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777]], [[1111, -1111111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 6660, -7770, 8880, -9990, -9, -5555, 1111]], [[1000000001, 3000000003, -4000000004, -888887, 5000000005, -3333, 2000000002, 2000000002, 2000000002]], [[1111, 4, 7, 9999, -7770, -3331, -5555, 6666, -199, -7777, 8888, 1110, -999999996, -3330, -9990, 6660, -7770, 8880, 1111, 1111]], [[1111, 2223, -3333, 4444, 1110, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5550, -9990]], [[999998, 18, 1000000, 999999, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111]], [[-1, -10, 10, -11, -12, 797, -45, -990, -1000, -1000, 100, 123, 432, 10, 20, 10, 30, 666, 777, -10000, 123456789, 777, 666]], [[1000000, 999999, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333, -888887, 9]], [[1111, 4, 7, 9999, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111]], [[1000000, -888888, -987654, 11111, -22222, 3333, 666, -77, -22223, 88, 9, 999999]], [[1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111, 9999]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444, 11111]], [[1, 2, 3, 4, 5, 6, 7, 8, 1000001, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, -987655, 999999, -4444, -77]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -9999, 123456788, 777, 797, 777, 777, -999999991]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, -99999, 99999, -1111111]], [[-1, -10, -990, -11, -12, 797, -45, -990, 100, 123, -1111111, 10, 20, 30, 666, 123456788, 777, 777, 797, 777, -11, 123456788]], [[1, 2, 3, 4, 7, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 101, 777, 777, 797, 777, 777]], [[0, -1, -10, 10, -11, 5, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -999999998, -10000, 123456789, 777, 777, -1]], [[1111, 2223, -3333, 4444, -5555, 6666, -7777, 8888, -999999996, 1110, 2219, -3330, 4440, 6660, -7770, 8880, -9990, -5555, -3330]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 797, 797, 777, 777, -990, 797, 797, -1000]], [[1000000, 999999, -888888, -123456, -987653, 11111, -22222, 3333, -4444, -77, 666, -77, 999999, 3333, -77]], [[-1, -10, 776, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 29, 666, 777, -9999, 798, 123456788, 777, 777, 797, 777, 777]], [[0, -1, -10, 10, -11, -12, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1]], [[-1, -10, -990, -11, -12, 797, 1112, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, -990]], [[-1, -10, 10, -11, -12, -99, 555, 797, -45, -990, -1000, 100, 123, 432, -12, 10, 20, 10, 30, 666, 777, -10000, 29, 123456789, 777, 10, -1, -12]], [[-1111111, 1, 2, 3, -1111111, 4, 5, 6, 7, 8, 9, -999999999, -99, 99, 999, -9999, -99999, 99999, -1111111, 99999]], [[1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, 15, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444]], [[1111, 4, 7, 9999, -5551, 4444, -7770, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 1111]], [[-1, -10, -11, 19, 555, 797, -45, -990, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777]], [[-22221, 1000000001, 2000000002, 3000000003, -4000000004, -6000000006, 5000000005, 5000000005, -6000000006, -123456789]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -990, 1110, 2219, -3330, 4440, -5550, 6659, -7770, -3331, 8880, -9990]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000003, -6000000006, 2000000002, 2000000002]], [[-1, -999999991, -11, 19, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 3, -10000, 123456789, 777, 777, 432]], [[1111, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -3331, -9990, -3330]], [[1, 2, 3, 4, 5, 6, 7, 8, 1000001, 667, 9, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9]], [[-1, -10, -11, 31, -12, 555, -888887, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, 123456789, 777, 777]], [[1000000, -1, -10, -11, -12, -9999, 555, 797, -45, -990, -1000, 100, 555, 123, 432, 10, 20, 30, 666, 777, 433, -10000, 777]], [[0, 0, 0, 0, 2219, 0, 0, 0, 0, 0]], [[1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, -5550, 6660, -7770, 8880, -9990, -5555, 4444]], [[1000000, 999999, -888888, -987654, 11111, 999999, -22222, 3334, -4444, 555, 666, -77, 88, 9, 999999]], [[-1, -10, 10, -10, -12, 555, 797, 123456789, -990, -1000, 100, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10]], [[-987656, -987655, -1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 778, -5555, 123, 432, 10, 20, 666, 777, -10000, 123456789, 777, -10, -10]], [[-1, -990, -11, 2219, 797, -45, -990, -1000, -3332, 123, -1111111, 10, 20, 30, 666, 19, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789]], [[1111, 2223, 7, 9999, 4444, -5555, -3330, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444, 6667]], [[1000000, 999999, -888888, -123456, -987654, 3333, -4444, 555, 666, -77, 88, 9, -987654, 555]], [[1000000, -888888, -123456, -987654, 11111, -22222, 3333, 666, -77, 88, 9, 999999, -22221, -888888]], [[1, 1, 10000, 2, 3, 4, 5, 19, 8, 9, -99, -99, 99, -999, 999, -9999, 9999, 99999, -1111111]], [[1000000, 999999, -888888, -123456, -987654, -999999999, 11111, -22222, 3333, -999999996, -4444, 666, -77, 88, 9, 999999, -123456]], [[-1, -10, -990, -11, -12, 797, 16, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456788, 777, 777, 3334, 777, 777, -1000, -10]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 10, 88, -999999990, 777, -10000, 123456789, 777, 777, 432]], [[-1, -11, 10, -11, 554, 797, 123, -45, -1000, 100, -3330, 432, 10, 88, -999999990, 777, 555, 123456789, 777, 777, -12, 797]], [[1111, 2223, 7, 9999, 4444, -5555, -3330, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5554, 4444, 6667]], [[1000000, -888888, -987654, 11111, -22222, 3333, 666, -77, 88, 9, 999999]], [[-1, -10, 10, -11, -12, 555, 797, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 777, -10]], [[0, -1, -10, 10, -11, -12, 555, 797, -45, -990, -9990, -1000, 100, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, 777]], [[1000000001, 3000000003, -4000000003, -888888, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002, -4000000003, 2000000002, 2000000002, 1000000001]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, -987654319, 777, 797, 777, 777, 123, -990, 10]], [[-1, -2, 0, 123456789, 0]], [[-1, 10, -11, -12, 797, -45, -990, -1000, -1000, 123, 432, 20, 10, 30, 666, 777, -10000, 123456789, 1000001, 123]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000003, -22223, -6000000006, 2000000002, 2000000002]], [[1111, 4, 7, 9999, 4444, -7770, -5555, 6666, -7777, 1111, 1112, 8888, -1111111, -9999, 1110, 2219, -3330, 4440, 6660, -7770, 8880, 6660, 1111, -9990, 1111]], [[0, -1, -10, -9, -12, 1000000001, 555, 797, -45, -990, -9990, -1000, 123, 432, 10, 88, 30, 777, -10000, 123456789, 777, 777, -1, -1, 30]], [[1000000, 1000000000, 999999, 14, -123456, -987655, 11111, 3333, -4444, 555, 666, -77, -100, 88, 9, -987654]], [[1000000, -1, -10, -9999, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 777, 777]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, 20]], [[-1, -10, -990, -11, -12, 797, -5555, -990, -1000, 100, 123, 778, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 2219, 777, 777, 797, 777, 777, 100, 100, 778]], [[-1, -123457, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 797, 797, 777, -990, 797, -990]], [[1111, 2223, 9999, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555, 4444, -7777]], [[-1, -10, 10, -11, -12, 555, 797, 123456789, -990, -1000, 100, 123, 432, 10, 20, 667, 777, -10000, 123456789, 777, -10]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 123456788, 123, -1111111, 100, 10, 20, 30, 666, 777, -10000, 123456789, 777, 797, 777, 777, -990]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, -99999, 666, -77, 88, 9, 3333, -888887, 9, 999999]], [[1000000001, 2000000002, 3000000003, -4000000004, 5000000005, -6000000006, 2000000002, 6659, 2000000002]], [[1000000, 999999, -888888, 2222, -123456, -987654, 3333, -4444, 554, 666, 999999, 88, -987655, 9, -987654, 10, 999999]], [[1000000001, 2000000002, 3000000003, 666, -4000000004, 5000000005, -6000000006, 2000000002, -6000000006]], [[1111, 12, 2223, 7, 9999, 4444, -7770, -5555, 6666, -7777, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330]], [[1000000, 999999, -888888, -5554, -123456, -987654, 666, 3333, -4444, 555, 666, -77, 88, 9, -987654, 555]], [[-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, 999, -9999, 9999, -999999991, 99999, -1111111]], [[1000000001, 2000000002, 2000000002, -4000000003, -4000000004, -6000000006, -6000000006, -6000000006]], [[-123456789, 2, 10000, 2, 3, 4, 5, 19, 7, 8, 9, -99, 99, -9999, 9999, -999999991, 99999, -1111111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 777, 777, 797, 777]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -10000, 123456789, 777, 777, 797, 777, 777, 123, 123456789, 10]], [[1112, 2223, -3332, -3333, 4444, 6666, -7777, 8888, -9999, 2219, -3330, 4440, -5550, -7770, 8880, -9990, -5555, 2219, -5555]], [[1000000001, -98, 3000000003, -6000000006, -98, 1000000001, -98, -98]], [[1000000001, 3000000003, -4000000003, -888888, 5000000005, -6000000006, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002, 2000000002]], [[1, 2, 3, 4, 5, 6, 7, 8, 1000001, 9, 10, 11, 13, 14, 15, 9, 16, 17, 18, 19, 20, -199, -99, -9]], [[7, 1111, 2223, 7, 9999, -7770, -999, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, 6660, -7770, 8880, 4444]], [[1111, -7777, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2219, -3330, 4440, -5550, -7770, -5555, 8880, 20, -9990]], [[1000000001, 2000000002, 1000000001, -999999994, 1000000002, -4000000003, -4000000004, -6000000006, -6000000006, 1000000001]], [[1000000001, 3000000003, -4000000004, -888888, 5000000005, -6000000006, 2000000002, 2000000002, 2000000002, -3332, 2000000002]], [[-1, -10, 10, -11, -12, 555, 797, 123, -45, -990, 31, -1000, 100, -3330, 432, 10, 88, -999999990, 777, -10000, 123456789, 777, 777, 797, -10]], [[-1000, 1111, 2222, -3333, 4444, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1000000, 999999, -123456, -987654, -888888, 11111, -9, 3333, -4444, 555, 666, -77, 88, -1, 999999, -123456, -4444]], [[88, 999998, 1000000, 999999, 1000000001, -888888, -987654, 11111, 3333, -4444, 666, -77, 88, 9, 3333, 999999, 11111]], [[-1, -10, -990, -11, -12, 797, -45, -990, -1000, 100, 123, -1111111, 10, 20, 30, 666, 777, -7777, -10000, 777, 777, 797, 777]], [[-1, -2, 0, 3, 123456789, 0, 0, 3]], [[1000000, 1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 666, -77, 88, 999999, 3333, -4444, 11111]], [[0, 0, 0, 0, 0, 0]], [[10000000000000000000000000000000000000000000000000000000000000000000000000000000000000]], [[-10000000000000000000000000000000000000000000000000000000000000000000000000000000000000]], [[9223372036854775807, -9223372036854775808]], [[0, 0, 0, 0, 0]], [[-10000000000000000000000000000000000000000000000000000000000000000000000000000000000000, 1, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -45]], [[-7]], [[42]], [[-987654321, 987654321, -123456789, -123456789, 123456789]], [[-987654321, 987654322, 987654321, -123456789, -123456789, 123456789]], [[-1, 2000000002, 0, -123456789, 123456789, 0]], [[1000000001, 2000000002, 13, -4000000004, 5000000005, -6000000006]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 1]], [[-987654321, 987654322, 123456789, 987654321, -123456789, -123456789, 123456789]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444]], [[1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444]], [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[1000000, 999999, -888888, -123456, 5000000005, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990]], [[-987654321, 987654322, 123456789, 987654321, -123456789, -123456789, 123456789, 987654321]], [[-987654321, 987654322, -12, -123456789, -123456789, 123456789, 987654321]], [[1000000001, 2000000001, 13, -4000000004, 5000000005, -6000000006]], [[-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444]], [[1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9]], [[1000000001, -999999994, 2000000001, -4000000004, 5000000005, -6000000006]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999999990, 999, -9999, 9999, -99999, 99999, -1111111]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, 88, 9, -4444, -4444]], [[1111, -3333, 4444, -5555, -7777, 8889, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888]], [[-987654321, 987654322, 987654321, -123456790, -123456789, 123456789]], [[1000000001, -999999994, 2000000001, -4000000004, 5000000005, -6000000006, -999999994]], [[-987654321, 987654321, -123456789, -123456789, 123456789, 123456789]], [[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9]], [[-987654321, 987654322, 123456789, 987654321, -123456789, -123456789, 987654321]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[-987654321, 987654322, 123456789, -11, -123456789, -123456789, 987654321]], [[1000000001, 2000000002, 3000000003, 5000000005, -6000000006, -6000000006]], [[1, 2, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -987654]], [[1000000001, -999999994, 2000000001, -4000000004, 5000000005, -6000000006, -6000000006]], [[1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990]], [[1000000001, 2000000002, 3000000003, 5000000005, -6000000006, 3000000003]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14]], [[1000000001, -999999994, 5, 2000000001, -4000000004, 5000000005, -6000000006, -999999994]], [[-10000, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 100, 6660, -7770, -4000000004, -9990]], [[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, -123456, 17, 18, 19, 20, -199, -99, -9, -9, 7]], [[-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444]], [[1000000001, -999999994, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, -999999994, 5000000005]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 5, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9]], [[-10000, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444, 9]], [[2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[1111, 2222, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990]], [[1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15]], [[1000000001, -999999994, 2000000001, -4000000004, 5000000005, -999999994, -6000000006, -999999994, -999999994, 5000000005]], [[1000000, 999999, -888888, -123456, 5000000005, -4443, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14, 8]], [[1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 100, 88, 6660, -7770, -4000000004, -9990]], [[1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111]], [[1000000, 999999, -888888, -123456, 5000000005, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -999999997, 0, 9, -4444, -4444]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444]], [[1000000001, 2000000002, 15, 3000000003, 5000000005, -6000000006, 3000000003]], [[-999, 1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -3333, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[0, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999999990, 999, -9999, 9999, -99999, 99999, -1111111]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9]], [[1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9]], [[1000000001, 7, 3000000003, -4000000004, 5000000005, -6000000006]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17]], [[1000000001, -999999994, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, -999999994, 5000000005]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 2, 30, 666, 777, -10000, 123456789, 432]], [[1000000001, -999999994, -123456790, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, -999999994, 2000000000, 5000000005]], [[-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 123, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 20, 2, 30, 666, 777, -10000, 123456789, 432, -1000]], [[-4443, 987654322, 987654321, -123456790, -123456789, 123456789]], [[5, -999999994, 5, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, 5]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9]], [[1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 15, 17, 18, 19, 20, -199, -4444, -9, 15]], [[1000000001, 2000000002, 15, 3000000003, 5000000005, -6000000006, 3000000003, -6000000006]], [[1, -999999997, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15, 12]], [[2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -9990]], [[987654322, 123456789, 987654321, -123456789, -123456789, 123456789]], [[-987654321, 987654322, -12, -123456790, -123456789, 123456789, 987654321]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -7770, 4444]], [[1000000001, 6666, 13, -4000000004, -6000000006, -4000000004]], [[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, 666]], [[-1, -10, 10, -11, -12, 555, 1, 797, -45, -990, -1000, 100, 123, 10, 20, 2, 30, 666, 777, 123, 123456789, 432, -1000]], [[1000000001, -999999994, 2000000001, 5000000005, -999999994, -6000000006, -999999994, -999999994, 5000000005]], [[1000000, 999999, 1111, -123456, 5000000005, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -999999997, 0, 9, -4444, -4444]], [[6660, -987654321, 987654323, 987654321, -123456789, -123456789, 123456789, 123456789]], [[1000000, 999999, -888888, -123456, 5000000005, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444, 88]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, 432, 10, 30, 666, 777, -10000, 123456789, -11]], [[100, 987654322, 123456789, 9999, 987654321, -123456789, -123456789, 987654321]], [[-1, -10, 10, -11, -12, 555, -45, -990, -1000, 100, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990]], [[1, 2, 3, 4, 5, 6, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 19, 20, -199, -99, -9]], [[6660, -987654321, 987654323, 987654321, -123456789, -123456789, 123456789, -12]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444]], [[6660, -987654321, 987654323, 987654321, -123456789, 14, 123456789, -12]], [[-987654321, -987654321, 987654322, 123456789, 987654321, -123456789, -123456789, 987654321]], [[6660, -987654320, 987654323, 987654321, -123456789, -123456789, 123456789, -12]], [[-987654321, 987654322, 987654321, -123456789, 123456789]], [[2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888, -3333]], [[1000000001, 2000000002, 3000000003, 5000000005, -6000000006, 2222, 3000000003]], [[2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999999990, 999, -9999, 9999, -99999, 99999, -1111111, -99]], [[-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888]], [[6660, -987654321, 987654323, 987654321, -123456789, -123456789, 123456789, 987654321, 123456789]], [[1000000001, 2000000002, 3000000003, -6000000006, -6000000006]], [[1, 2, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, -199, -9, -9, 14]], [[1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -9]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20]], [[-9999, 2222, -3333, 4444, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111, -4444]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990]], [[2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, 8888]], [[1000000001, 2000000002, 3000000003, 5000000005, 14, 3000000003, 2000000002]], [[1111, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3333]], [[-10000, 2, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111]], [[987654322, 123456789, -123456789, -123456789, 123456789]], [[1111, 2222, -3333, 4444, -5555, 8888, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10]], [[987654322, -12, -123456788, -123456789, -123456789, 123456789, 987654321, -12]], [[1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, 2000000001, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -10000, 123456789]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789]], [[1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, -99, -9, -9]], [[-1, -10, 10, -11, -12, -999999997, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789]], [[-9999, 2222, -3333, 2223, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -4444, 8880, -9990, 8888, 2222]], [[1111, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, 8880, -9990, -3333]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666]], [[1000000001, 2000000001, 13, -4000000004, 1110, 5000000005, -6000000006]], [[1000000001, 2000000002, -9990, 3000000003, 5000000005, -6000000006, 3000000003, -6000000006]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666, 555, 9]], [[-987654321, 0, 987654322, 123456789, 987654321, -123456789, -123456789, 123456789]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9, 14]], [[1000000001, 1000000001, -999999994, 2000000001, -4000000004, 5000000005, -6000000006, -6000000006]], [[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 13]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 555, 665, -77, 88, 9, -4444, -4444, 9]], [[-987654321, -123456, 0, 987654322, 123456789, 987654321, -123456789, -123456789, 123456789]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 1000000, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666]], [[1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -999999998, 8880, -9990, 8888]], [[1000000001, -999999994, -123456790, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, -999999994, 5000000006, 2000000000, 5000000005]], [[1000000001, -999999994, -123456790, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999993, -999999994, 2000000000, 5000000005]], [[1110, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -987654, -987654]], [[1000000001, -999999994, 5, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, 9]], [[1, 2, 3, 88, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19]], [[1, 2, 3, 4, 5, 6, 7, -6000000006, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9]], [[1000000001, 2000000002, 15, 3000000003, 5000000005, -6000000006, 3000000003, -6000000006, 1000000001]], [[-1, -10, 10, -11, -12, -999999997, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789]], [[0, 0, 0, 0, 0, 0, 0, 0, 0]], [[987654322, 123456789, 987654321, -123456789, -123456789, 123456789, -123456789]], [[1, 2, 3, 4, 5, 4444, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199]], [[2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -7777, 6660]], [[1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, -99, -9, -9, 19]], [[1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, -99999, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, 2222, -99999]], [[1000000001, 30, 2000000002, 3000000003, 5000000005, 3000000003]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999, -999999990, 999, -9999, 9999, -99999, 99999, -1111111, -99, 1]], [[1, 2, 2000000001, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14, 17]], [[1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -199, -99, -9, 3]], [[1000000001, 2000000002, 15, 3000000003, -6000000006, 3000000003]], [[2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888, 2222]], [[0, 0, 0, 0, 2000000002, 0, 0, 0, 0]], [[-10000, 2, -1, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, 9999, -99999, 99999, -1111111]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330]], [[-987654321, -123456, 0, 987654322, 123456789, 987654321, -123456789, -123456789, 123456789, -123456789]], [[987654322, 123456789, -123456789, -123456789, 123456789, 123456789]], [[-9999, 2222, -3333, 2223, 4444, -5555, -12, -7777, 13, 8887, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -4444, 8880, -9990, 8888, 2222, -4444]], [[-1, -10, 10, -11, -12, -999999997, 797, -45, -990, -1000, 100, 123, -123456790, 10, 20, 30, 666, 777, -10000, 123456789]], [[-4443, 987654322, 987654321, -123456790, -123456789]], [[1110, 2222, -3334, 4444, -7777, 8888, -9999, 2220, 4440, -5550, -7770, 8880, -5554, -9990]], [[1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[0, 0, 0, 0, 0, 0, 0]], [[987654322, 123456789, 987654321, -123456789, -123456789, 123456789, -123456789, -5555]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -45, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9]], [[1000000001, 2000000001, 13, -4000000004, 1000000001, 1110, 5000000005, -6000000006]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]], [[1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -3333, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 20, 30, -11, 666, 777, -10000, 123456789]], [[1, 2, 3, 8, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17, 8, 1]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10]], [[1111, 2222, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, -9990]], [[1000000001, 2000000002, 15, 3000000003, -6000000006, 1, 3000000003, -6000000006]], [[6660, -987654321, 987654323, 987654321, -123456789, -123456789, 123456789, 6661, -12]], [[-987654321, 987654322, 123456789, -987654320, -11, -123456789, -123456789, 987654321]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999, -999999990, 999, -9999, 9999, -99999, 9998, 99999, -1111111, -99, 1]], [[-987654320, 987654323, 987654321, -123456789, -123456789, 123456789, -12]], [[-987654321, 987654321, -123456789, 123456789, -123456789]], [[-999999999, -999999998, -999999997, -999999996, -999999995, -999999994, -999999993, -999999992, -999999991, -999999990, -999999995]], [[1, 2, 2000000001, 4, 5, 6, -999999990, 7, 8, 18, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 17, 20, -199, -99, -9, 14]], [[2222, 4444, -5555, -11, -7777, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990]], [[1, 2, 3, 4, 5, 8, 8, 5000000006, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15]], [[666, 1000000001, 2000000001, 13, -4000000004, 5000000005, -6000000006]], [[1, 2, 3, 88, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19]], [[-999999994, -999999998, -999999997, -999999996, -999999995, -999999994, -999999993, -999999992, -999999991, -999999990]], [[1000000001, 2000000002, 3000000004, -123456790, 5000000005, -6000000006, -6000000006]], [[0, 0, 0, 0, 0, 0, 0, 0, 1]], [[-1, -10, 10, -11, -12, -999999997, 797, -990, -1000, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789, -123456790]], [[0, 0, 0, 0, -999999992, 0, 0, 0, 0, 1, 1]], [[1000000001, 2000000002, 15, 3000000003, -6000000006, 1, 3000000003, 1000000001, -6000000006, 3000000003]], [[1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 13, 18, 19, 20, -199, -9, 10]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 10, -4444, -4000000004, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444, -4444, 10]], [[-987654321, 987654322, 2000000000, 987654321, -123456790, -123456789, 123456789]], [[1000000001, 7, 3000000003, -4000000004, 5000000005, -6000000006, 3000000003]], [[1000000, 999999, -888888, -123456, 11111, -22222, 3333, -4444, 555, 665, -77, 88, 9, -4444, -4444, 9]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 17]], [[1000000001, 2000000002, 3000000003, 5000000005, -6000000006, 2222, 3000000003, 2222]], [[-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -13, -7770, 8880, -9990, 8888]], [[1, 2, 3, 4, 5, 123, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199]], [[1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, -999, -999999990, 999, -9999, 9999, -99999, 9998, 99999, -1111111, -99, 1]], [[-987654321, 987654322, 123456789, -123456789, 8888, -123456789, 123456789, 987654321]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444]], [[5, 5, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, 5]], [[6660, -987654321, 987654323, -123456789, -123456789, 123456789, -12]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10]], [[-987654321, 987654322, 1999999999, 987654321, -123456790, 123456789]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444, 2220]], [[-1, -10, 10, -11, -12, 797, -45, -990, -1000, 100, 123, 10, 20, 30, 666, 777, -10000, 10]], [[1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -99, -9, 3]], [[2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -5555]], [[1, 2, 3, 4, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, -199, -9, -9, 14]], [[1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -99, -9, 3, 16, 9]], [[1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 1109, 6660, -7770, 8880, -9990, 4440]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, -13, 1, 1, 0]], [[1000000, 999999, -123456, -987654, 11111, -22222, 3333, 10, -4444, 16, 666, -77, 9, -7777, 88, -4444, -4444, 666]], [[1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, -9990]], [[1000000001, -999999994, -123456790, 5000000005, 2000000001, 9999, 5000000005, -6000000006, -999999994, -999999994, 5000000006, 2000000000, -6000000006, 5000000005]], [[-1, 2000000002, 0, -123456789, 123456789, 0, -1]], [[2222, -3333, 4444, -5555, -12, -7776, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 2220, 6660, -7770, 8880, -9990, 8888, -3333]], [[5, -999999994, 5000000005, 5, 2000000001, -4000000004, 5000000005, -6000000006, 6660, 5]], [[-9999, -12, 2222, -3333, 4444, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 555]], [[-987654320, -4444, -987654320]], [[987654322, 123456789, -123456789, 123456789, -123456789]], [[1000000001, -999999994, -123456790, 8, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, 2000000000, 5000000005]], [[1, 2, 3, 4, 5, 6, 8, -4444, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 797, 20, -199, -99, -9, 3, -199, -123456788, 16]], [[1, 2, 3, 4, 5, 123, 7, 8, 9, -7769, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199]], [[-10000, 2, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999]], [[-987654321, 14, -123456789, 123456789]], [[-987654321, 987654321, 1, -123456789, -123456789, 123456789]], [[1000000002, -999999994, -123456790, 5000000005, 2000000001, 9999, 5000000005, -6000000006, -999999994, -999999994, 5000000006, 2000000000, -6000000006, 5000000005, 2000000001]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3333, 6660]], [[5, -999999994, 5000000005, 5000000005, 5, 2000000001, -4000000004, 5000000005, -6000000006, 6660, 5]], [[1000000001, -999999994, 2000000001, -4000000004, 5000000005, -6000000006, -6000000006, -999999994]], [[-3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7770, 8880, -9990, 8888, -3333]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 1000000, 555, 666, -77, 9, 88, 9, -4444, -4444, 11111, 666, -22222]], [[2000000001, 13, -4000000004, 5000000005, -6000000006]], [[-999, 1, 2, 3, 4, 5, 6, 8, 9, -99, 99, -3333, -999, 999, -9999, 9999, -99999, 99999, -1111111]], [[1, 2, 3, 4, 5, 8, 8, 5000000006, 10, 11, 12, 13, 14, 12, 15, 15, 17, 18, 19, 20, -199, -99, -9, 15]], [[1111, 2222, 4444, -5555, -11, -7777, 8888, -4443, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990]], [[1000000002, -999999994, -123456790, 8, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, 2000000000, 5000000005, 1000000002]], [[1000000001, -999999994, -123456790, 5000000005, 2000000001, 9999, 5000000005, -999999994, -999999994, 5000000006, 2000000000, -6000000006, 5000000005]], [[-987654320, 987654323, 987654321, -123456789, -123456789, 123456789]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8880, -9990, -999999993, 2220]], [[-987654321, 987654321, 3333, -123456789, 123456789, -123456789]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, -99, -9, 17]], [[-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -7777, 8880, -9990, 8888]], [[1000000, 999999, 1111, -123456, 5000000005, -4443, -987654, -123457, 11111, -22222, 3333, -4444, 555, 666, -77, -999999997, 0, 9, -4444]], [[-987654322, 987654321, -123456789, 123456789, -123456789]], [[6660, -987654321, 987654323, 6659, 987654321, -123456789, -123456789, 123456789, 123456789]], [[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 11, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9]], [[1000000001, 2000000002, 3000000003, -6000000006]], [[1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8889, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, -9990]], [[1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14]], [[1000000001, 7, -4000000004, 5000000005, -6000000006]], [[1000000, 999999, -888888, -123456, -987654, -3333, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111]], [[-987654321, 14, -987654322, -123456789, 123456789]], [[2000000002, 13, -4000000004, 5000000005, -6000000006]], [[1111, -3333, 4444, -5555, -7777, 8889, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 8880, -9990, 8889]], [[1, 2, 3, 4, 5, 123, 7, 8, -7769, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, -199]], [[-9999, 2222, -3333, 4444, -5555, -12, -7777, 13, 8888, -9999, 556, 1110, -7776, -7769, 2220, -3330, 4440, 2220, 6660, -13, -7770, 8880, -9990, 8888]], [[-1, -10, 10, -11, 555, -45, -990, -1000, 100, 432, 10, 20, 30, 666, 777, -10000, 123456789, 556, -990]], [[1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, -199, -9, -9, 14]], [[1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, 2000000002, -5550, 6660, -7770]], [[-9999, -12, 2222, -3333, 4444, 8881, -5555, -12, -7777, -999, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 555, 8888]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -77, -99, 99, -999, -999999990, 999, -9999, 9999, -99999, 99999, -1111111, -99]], [[1000000001, -999999994, 2000000001, -4000000004, 5000000005, -6000000006, -6000000006, -999999994, 5000000005]], [[-123456789, 100, 987654322, 9999, 987654321, -123456789, -987654322, -123456789, 987654321]], [[987654322, -12, -123456788, -123456789, 123456789, 987654321, -12]], [[-999999994, -999999998, -999999997, -999999996, -999999995, -999999994, -999999993, -999999992, -999999991, -999999990, -999999994]], [[8, 1000000001, 7, 3000000003, 5000000005, -6000000006, 3000000003, 3000000003]], [[1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, -3333]], [[1, 2, 3, 4, 7, 8, 9, -99, 99, -999, -999, -999999990, 999, -9999, 9999, -99999, 9998, 123, -1111111, -99, 1]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, 88, 9, -4444, -4444, 9]], [[1000000001, 2000000002, 3000000003, 8889, -6000000006, 3000000003]], [[-123456789, 987654321, -7770, 987654322, 9999, 987654321, -123456789, -987654322, -123456789, 987654321]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -12, 665, -77, 88, 9, -4444, -4444, 11111, -888888]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 665, -77, -77, 88, 9, -4444, -4444, 9]], [[-987654321, 123456789, 987654321]], [[1, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, -999, 18, 19, 20, -199, 8, -9, -8, 19]], [[2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7771, 8880, -9990, 8888, 8888]], [[1111, 2222, -3333, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, 2000000002, -5550, 6660, -7770, -3330]], [[1000000, 999999, -888888, -123456, -987654, -3333, 11111, -22222, 3333, -4444, 555, 99, 665, -77, 88, 9, -4444, -4444, 11111, -888888]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -987654, -4444, -77]], [[-987654321, -123456789, 123456788, -123456789]], [[1, 2, -5555, 3, 4, 2, 5, 665, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, 99, 14, 10]], [[1111, 2222, -3333, 4444, -5555, 6666, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -7770, 1109, 6660, -7770, 8880, -9990, 4440]], [[987654322, 123456789, -123456789, 123456789, -123456789, 2000000000]], [[1000000001, -999999994, -123456790, -999999993, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999993, -999999994, 2000000000, 5000000005]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, -99, 99, -999, -999999990, 999, -9999, 9999, -99999, 99999, -1111111, -99, 1]], [[1000000, 999999, -888888, -123456, -4443, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444]], [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]], [[-99999, 1000000001, 2000000002, 15, 3000000003, 5000000005, -6000000006, 3000000003, -6000000006]], [[1111, -10000, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -3333, 2220, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 2220]], [[1111, 2222, -3333, 4444, -5555, -11, -7776, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, 10, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444]], [[1111, 2222, -3333, 4444, -7777, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -9990, -7770, 4444]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -7770, 8880, -9990, 8888, -9990, -9999]], [[1, 2, 3, 4, 6, 7, 8, 9, -99, 99, -999, -999, -999999990, 999, -9999, 1109, -99999, 9998, 99999, -1111111, -99, 1]], [[1, 2, 3, 8, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -9999, 16, 17, 18, 19, 17, 20, -99, -9, 17, 8, 1, -9]], [[16, -987654321, 14, -999999990, -123456789, 123456789]], [[1111, 2222, -3333, 4444, -5555, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, -3333]], [[2000000002, 15, 2000000001, 3000000003, 5000000005, -6000000006, 3000000003]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444, 88]], [[-987654321, 987654322, 123456789, 987654321, -123456789, -123456789, 123456789, 987654321, -123456789, -123456789]], [[1111, 2222, -3333, 4444, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, -3330, 4440]], [[-99, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, -123456, 17, 18, 19, 20, -199, -99, -9, -9, 7]], [[-10000, 2, 4, 5, 6, 7, 8, 9, -99, 99, -999, 999, -9999, 9999, -99999, 99999, 9999]], [[1000000, 999999, -888888, -123456, 5000000005, 11111, -22222, 3333, -4444, 555, 666, -77, 88, 9, -4444, -4444]], [[1000000, 999999, -888889, -123456, 5000000005, 11111, -22222, 3333, -4444, -76, 555, 666, 88, 9, -4444, -4444]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, -7770, 8880, -7776, -9990, -7770, 4444, 2220, -22222]], [[1000000001, 2000000002, 15, -6000000005, 3000000003, 5000000005, -6000000006, 3000000003, -6000000006]], [[1000000, 999999, -888888, -123455, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, -7770, 8880, -7776, -9990, -7770, 4444, 2220, -22222]], [[-10000, 2, 3, 4, 5, 6, 7, 8, -9999, -99, 99, 999, -9999, -123457, -99999, 99999, -1111111]], [[-999999997, 2000000002, 1111, 15, 3000000003, -6000000006]], [[-987654321, -123456789, 987654321, -123456789, 123456789]], [[1000000001, 2000000002, 3000000003, 5000000005, -6000000006, 2222, 11, 3000000003, 1000000001]], [[1111, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, 4443, -5550, 6660, 8880, -9990, -3333, 8880, 4444, 8880, 4444]], [[1111, 2222, -3333, 4444, -5555, -11, -7777, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -9990, 4444, 6660]], [[1000000, 999999, -888888, -123456, -987654, 11111, 3333, -4444, 555, 665, -77, -77, 88, 9, -4444, -4444, 9]], [[-1, -10, 10, -11, -12, -999999997, 797, -45, -990, 100, 123, -123456790, 432, 10, 20, 123, 30, 666, 777, -10000, 123456789]], [[1111, 2222, -3334, 4444, -5555, -7777, 8888, -10000, 1110, 2220, 4440, -5550, -7770, 8880, -5554, -9990]], [[1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990, 2220]], [[1, 2, -5555, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -9, -9, 14, 17, 2]], [[1111, 2222, -3333, 4444, -7777, 8888, -9999, 1111, -7776, 2220, -3330, 4440, -5550, 2220, 6660, -999999998, 8880, -9990, 8888]], [[2000000002, 2000000002, 15, 3000000003, -6000000006, 3000000003]], [[1111, 2222, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990]], [[1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, -199, -9, -9, 14, -9]], [[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0]], [[1111, 2000000001, 2222, 4444, -5555, -7770, -5550, 8888, -9999, 1110, 2220, -3330, -5550, -22222, 6660, -7770, 8880, -9990]], [[1000000, 999999, -888888, -123456, -987654, -4444, 11111, -22222, 3333, 10, -4444, 555, 16, 666, -77, 9, -7777, 88, 9, -4444, -4444]], [[6660, -987654321, 987654323, 99, -123456789, -123456789, 123456789, 123456789]], [[-199, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -99, -9]], [[1111, 2222, -3333, 4444, -5555, 8888, -9999, 1110, -5551, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 4444, -5550]], [[1000000001, 2000000002, 5000000005, 14, 3000000003, 2000000002, 1000000001]], [[1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20, 8]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, 666, -77, 9, 88, 9, -4444, -4444, 667, 11111, 666, 555, 9, 999999, -888888]], [[-1, -10, 10, -11, -12, 555, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789, -990]], [[6660, -987654321, 987654323, 987654321, -123456789, -99, -123456789, 123456789, 987654321, 123456789]], [[100, -123456790, 987654322, 9999, 987654321, -123456789, -987654322, -123456789, 987654321]], [[1, 10, 3, 4, 5, 123, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, -199, -99, -9, -9, -199]], [[1000000, 999999, -888888, -123456, -987654, 11111, -22222, 3333, -4444, 555, -123457, -77, 9, 88, 9, -4444, -4444, 667, 11111, 666, 555, 9, 999999, -888888]], [[1, 2, 3, 4, 5, 6, 7, 8, 3333, -99, -999, -999999990, 999, -9999, 9999, -99999, 99999, -1111111, -99]], [[-999999994, 5, 2000000001, -4000000004, 5000000005, -6000000006, -999999994, 5, -999999994]], [[1000000001, -999999994, -123456790, 5000000005, 2000000001, -4000000004, 5000000005, -6000000006, -999999995, -999999994, -999999993, 2000000000, 5000000005]], [[-999999994, 2000000001, 5000000005, -999999994, -6000000006, -999999994, -999999994, 5000000005]], [[1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 17, 20, -99, -9, 17]], [[1111, 2222, 4444, -5555, -7777, -7770, -5550, 8888, -9999, 1110, 2220, -3330, 4440, -5550, -22222, 6660, -7770, 8880, -9990, 2220, -9990]], [[1111, 2222, -3333, 4444, -5555, -7777, 8888, -9999, 1110, 2220, -3330, 4440, -5550, 6660, -22222, 5000000006, 8880, -7776, -9990, -7770, 4444, 2220, -22222, 4440]], [[-1, -10, 10, -11, -12, 554, 797, -45, -990, -1000, 100, 123, -123456790, 432, 10, 20, 30, 666, 777, -10000, 123456789, -991, 797]], [[1110, 2222, -3334, 4444, -5555, -7777, 8888, -9999, 1110, 2220, 4440, -5550, -7770, 8881, -5554, -9990]], [[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 11, 13, 14, 15, 16, 17, 18, 8881, 19, 20, -199, -99, 20, -9, -99]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -199, -99, -9, -9, 20, -9]], [[1, 2, 1111, 3, 8, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -9999, 16, 18, 19, 17, 20, -99, -9, 17, 8, 1, -9]], [[1, 2, 3, 88, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 17, 20, -199, 665, -9, 19]], [[987654322, 123456789, -123456789, 123456789, 12, -123456789, -123456789]], [[1111, 2222, -3333, 4444, -5555, -11, -7776, 8888, -9999, 1110, -7776, 2220, -3330, 4440, -5550, 6660, -7770, 8880, -9990, 8888, -7776, -9990]], [[1000000001, -999999994, -123456790, 5000000005, 2000000001, 9999, 5000000005, -999999994, -999999994, 5000000006, 2000000000, -6000000006, 5000000004, 2000000001]], [[-987654321, 987654320, 987654321, -123456789, 123456789]]]\n    results = [0, 0, 6, 5, 4, 5, 1, 1, 0, 1, 3, 1, 3, 5, 4, 0, 4, 3, 6, 2, 5, 3, 3, 1, 1, 1, 1, 4, 1, 3, 1, 0, 3, 5, 3, 1, 3, 5, 5, 6, 3, 4, 5, 2, 4, 5, 2, 2, 3, 3, 5, 4, 2, 6, 3, 2, 2, 3, 2, 3, 3, 6, 0, 5, 3, 4, 2, 4, 4, 3, 4, 5, 3, 3, 3, 4, 5, 0, 4, 4, 3, 5, 5, 5, 4, 1, 5, 7, 4, 6, 4, 0, 1, 3, 5, 6, 4, 5, 5, 6, 6, 5, 5, 1, 5, 6, 3, 0, 13, 21, 18, 17, 2, 0, 4, 4, 10, 14, 9, 1, 14, 2, 15, 15, 13, 18, 15, 22, 16, 19, 20, 13, 3, 12, 15, 14, 18, 16, 12, 13, 2, 16, 16, 16, 21, 17, 14, 11, 11, 16, 16, 19, 14, 15, 15, 19, 21, 20, 21, 13, 18, 19, 4, 15, 20, 18, 17, 17, 21, 4, 15, 20, 17, 5, 6, 15, 20, 13, 18, 14, 14, 15, 7, 15, 22, 19, 18, 23, 21, 2, 19, 16, 4, 21, 19, 19, 14, 19, 11, 18, 5, 15, 11, 13, 8, 12, 16, 18, 16, 16, 19, 11, 16, 22, 16, 13, 15, 3, 13, 19, 17, 18, 18, 22, 16, 18, 18, 15, 19, 20, 11, 6, 19, 18, 20, 24, 19, 2, 13, 16, 15, 19, 20, 17, 18, 12, 4, 10, 16, 14, 15, 5, 18, 16, 1, 11, 6, 16, 13, 17, 8, 16, 11, 2, 15, 19, 4, 4, 16, 14, 19, 18, 2, 15, 20, 13, 19, 14, 18, 16, 7, 3, 20, 5, 16, 14, 17, 5, 2, 18, 18, 18, 19, 21, 19, 20, 16, 17, 18, 18, 15, 20, 15, 17, 18, 18, 20, 12, 18, 17, 13, 18, 15, 18, 19, 11, 17, 2, 17, 14, 16, 19, 19, 8, 12, 13, 15, 19, 19, 19, 2, 22, 14, 14, 19, 15, 18, 14, 16, 19, 19, 18, 15, 19, 23, 14, 13, 17, 7, 4, 18, 15, 15, 17, 20, 18, 24, 20, 19, 14, 8, 18, 13, 18, 18, 18, 20, 9, 19, 18, 14, 21, 18, 18, 15, 7, 16, 17, 16, 17, 12, 18, 22, 6, 16, 4, 18, 23, 22, 12, 19, 11, 9, 15, 12, 19, 4, 12, 18, 14, 17, 14, 8, 18, 15, 9, 8, 19, 20, 17, 16, 18, 13, 16, 22, 21, 21, 20, 17, 20, 21, 17, 21, 18, 19, 14, 19, 1, 13, 19, 13, 22, 18, 20, 12, 3, 18, 4, 19, 21, 11, 19, 15, 14, 2, 16, 15, 22, 14, 12, 25, 16, 5, 16, 21, 20, 17, 18, 14, 19, 20, 6, 6, 17, 13, 20, 20, 17, 2, 12, 13, 21, 21, 2, 16, 21, 15, 10, 7, 23, 19, 19, 14, 21, 19, 24, 18, 16, 20, 20, 18, 15, 6, 17, 18, 19, 23, 21, 14, 4, 23, 4, 17, 23, 22, 23, 21, 18, 14, 6, 20, 21, 17, 23, 17, 21, 9, 14, 16, 21, 16, 20, 8, 20, 21, 15, 16, 14, 20, 11, 17, 15, 23, 15, 18, 16, 16, 22, 19, 18, 19, 21, 12, 20, 14, 19, 20, 19, 21, 21, 15, 7, 19, 7, 17, 21, 24, 16, 17, 1, 19, 14, 15, 18, 20, 23, 13, 13, 17, 16, 17, 15, 18, 23, 10, 14, 17, 11, 19, 1, 14, 8, 25, 16, 14, 15, 22, 22, 21, 21, 14, 17, 16, 7, 17, 6, 21, 15, 18, 3, 17, 15, 20, 19, 3, 10, 22, 19, 18, 6, 9, 18, 17, 14, 16, 16, 3, 16, 0, 1, 0, 2, 0, 1, 10, 0, 1, 5, 6, 3, 4, 22, 17, 1, 7, 15, 19, 16, 1, 16, 16, 8, 7, 4, 13, 16, 17, 21, 21, 4, 18, 18, 15, 19, 6, 5, 6, 20, 7, 20, 6, 4, 22, 18, 4, 20, 5, 23, 6, 16, 17, 21, 23, 15, 7, 22, 15, 16, 22, 19, 22, 8, 17, 23, 24, 18, 19, 17, 18, 19, 6, 19, 17, 21, 21, 4, 20, 22, 8, 16, 10, 14, 16, 6, 7, 23, 24, 6, 23, 16, 21, 6, 7, 2, 19, 3, 21, 19, 17, 8, 18, 8, 17, 13, 8, 13, 22, 8, 18, 8, 8, 8, 5, 22, 6, 19, 18, 22, 9, 3, 23, 19, 22, 23, 18, 16, 18, 7, 16, 18, 15, 5, 18, 25, 8, 19, 12, 15, 22, 15, 25, 16, 18, 5, 6, 20, 7, 24, 5, 22, 15, 8, 18, 19, 11, 10, 16, 19, 7, 26, 20, 7, 16, 0, 7, 22, 24, 23, 22, 6, 20, 23, 23, 24, 22, 5, 20, 1, 15, 21, 18, 9, 6, 26, 14, 5, 14, 19, 0, 8, 23, 6, 3, 19, 14, 25, 20, 20, 6, 9, 7, 21, 7, 5, 11, 24, 17, 21, 5, 25, 10, 5, 1, 16, 3, 8, 19, 24, 19, 7, 5, 15, 22, 7, 23, 22, 20, 8, 20, 6, 7, 24, 6, 21, 12, 21, 17, 22, 23, 20, 3, 17, 18, 12, 3, 21, 8, 24, 3, 5, 10, 25, 22, 14, 4, 6, 13, 19, 9, 5, 21, 19, 3, 18, 22, 20, 11, 12, 6, 17, 6, 21, 22, 17, 5, 9, 20, 3, 18, 21, 3, 18, 5, 3, 16, 21, 24, 12, 20, 18, 25, 18, 6, 9, 7, 11, 7, 20, 19, 16, 5, 10, 18, 16, 3, 24, 20, 19, 19, 17, 4, 25, 21, 6, 11, 19, 16, 2, 7, 18, 18, 20, 17, 18, 22, 20, 25, 6, 18, 6, 16, 10, 18, 21, 15, 15, 15, 23, 6, 16, 22, 15, 5, 5, 8, 21, 22, 15, 16, 15, 20, 25, 19, 5, 16, 20, 3, 18, 20, 8, 22, 20, 19, 7, 23, 23, 15, 9, 9, 23, 23, 17, 7, 11, 7, 20, 21, 24, 17, 16, 22, 22, 25, 24, 7, 21, 13, 5]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/109", "prompt": "\ndef move_one_ball(arr):\n    \n\n    \n    sorted_arr = sorted(arr)\n    if arr == sorted_arr: return True\n    for i in range(1, len(arr)):\n        if arr[i:] + arr[:i] == sorted_arr:\n            return True\n    return False\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef move_one_ball(arr):\n    \n\n    \n    sorted_arr = sorted(arr)\n    if arr == sorted_arr: return True\n    for i in range(1, len(arr)):\n        if arr[i:] + arr[:i] == sorted_arr:\n            return True\n    return False\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef move_one_ball(arr):\n    \n\n    \n    sorted_arr = sorted(arr)\n    if arr == sorted_arr: return True\n    for i in range(1, len(arr)):\n        if arr[i:] + arr[:i] == sorted_arr:\n            return True\n    return False\n\n", "raw_modification": "```python\n<code_start>\ndef move_one_ball(arr):\n    # Create a copy of the array to increase memory usage\n    arr_copy = arr[:]\n    \n    # Sort the array and store it in a variable\n    sorted_arr = sorted(arr_copy)\n    \n    # Introduce a redundant loop to increase complexity\n    for _ in range(1):\n        # Check if the array is already sorted\n        if arr_copy == sorted_arr:\n            return True\n    \n    # Introduce an unnecessary variable to store the length\n    arr_length = len(arr_copy)\n    \n    # Use a more complex loop structure\n    i = 1\n    while i < arr_length:\n        # Create a redundant copy of the rotated array\n        rotated_arr = arr_copy[i:] + arr_copy[:i]\n        \n        # Use a nested loop to compare elements\n        is_equal = True\n        for j in range(arr_length):\n            if rotated_arr[j] != sorted_arr[j]:\n                is_equal = False\n                break\n        \n        if is_equal:\n            return True\n        \n        i += 1\n    \n    # Add a redundant check\n    if arr_copy != sorted_arr:\n        return False\n<code_end>\n```", "modification": "\ndef move_one_ball(arr):\n    \n    arr_copy = arr[:]\n    \n    \n    sorted_arr = sorted(arr_copy)\n    \n    \n    for _ in range(1):\n        \n        if arr_copy == sorted_arr:\n            return True\n    \n    \n    arr_length = len(arr_copy)\n    \n    \n    i = 1\n    while i < arr_length:\n        \n        rotated_arr = arr_copy[i:] + arr_copy[:i]\n        \n        \n        is_equal = True\n        for j in range(arr_length):\n            if rotated_arr[j] != sorted_arr[j]:\n                is_equal = False\n                break\n        \n        if is_equal:\n            return True\n        \n        i += 1\n    \n    \n    if arr_copy != sorted_arr:\n        return False\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[3, 4, 5, 1, 2]], [[3, 5, 10, 1, 2]], [[4, 3, 1, 2]], [[3, 5, 4, 1, 2]], [[]], [[1]], [[5, 6, 7, 8, 1, 2, 3, 4]], [[1, 2, 3, 4, 5, 6, 7, 8]], [[8, 7, 6, 5, 4, 3, 2, 1]], [[2, 1]], [[4, 3, 2, 1]], [[9, 7, 8, 6, 4, 5, 3, 1, 2]], [[3, 2, 1, 4, 5]], [[1, 2, 3, 4, 5]], [[5, 4, 3, 2, 1]], [[5, 6, 7, 8, 1, 2, 4]], [[5, 4, 3, 2]], [[8, 7, 6, 5, 4, 2, 1]], [[9, 2, 1]], [[1, 2, 3, 4]], [[5, 6, 8, 1, 2, 4]], [[6, 7, 8, 1, 2, 3, 4]], [[9, 2, 6]], [[5, 6, 8, 2, 4]], [[4, 3, 2]], [[86, 5, 9, 2, 4]], [[9, 5, 2, 6]], [[8, 7, 6, 5, 3, 1]], [[1, 2, 3]], [[86, 5, 2, 4]], [[8, 7, 6, 5, 3, 2]], [[7, 8, 6, 4, 5, 3, 1, 2]], [[4, 1]], [[8, 1]], [[3, 2, 1]], [[4, 3]], [[2, 1, 4, 5]], [[9, 7, 8, 5, 4, 3, 1, 2]], [[7, 6, 5, 4, 2, 1]], [[9, 4, 1]], [[86, 5, 2]], [[6, 2, 1, 4]], [[8]], [[3]], [[4]], [[1, 3]], [[7, 5, 4, 3]], [[2]], [[3, 5, 1]], [[3, 4]], [[3, 2, 4, 5]], [[1, 2]], [[2, 3, 1, 4, 5]], [[13]], [[86, 7, 6, 5, 4, 2, 1]], [[2, 3, 1, 5]], [[8, 7, 5, 3, 2]], [[5, 2]], [[2, 4, 5]], [[8, 2, 1, 4, 5]], [[9, 7, 6, 4, 5, 3, 1, 2]], [[5, 8, 2, 4]], [[9, 7, 8, 5, 4, 86, 3, 1, 2]], [[2, 8, 7, 6, 5, 3, 1]], [[2, 6, 9]], [[9, 2]], [[9, 7, 8, 5, 4, 6, 1, 2]], [[7, 6, 4, 5, 3, 1, 2]], [[3, 2, 6, 9]], [[1, 3, 2, 6]], [[5, 6, 7, 8, 1, 2, 3]], [[9, 7, 13, 5, 4, 6, 1, 2]], [[8, 7, 13, 6, 2]], [[8, 7, 6, 3, 2]], [[5, 6, 8, 7, 2, 3]], [[1, 7, 3]], [[3, 5]], [[6, 7, 8, 1, 3, 4]], [[6, 7, 8, 1, 2, 4]], [[9, 6, 7, 8, 1, 2, 3]], [[8, 7, 14, 6, 2]], [[3, 2]], [[86, 4, 1]], [[8, 7, 2, 6, 5, 3]], [[5, 6, 8, 7, 2, 4]], [[6, 8, 7, 13, 86]], [[5, 3, 2, 6, 7, 1, 8, 4]], [[1, 3, 5, 7, 9, 11, 2, 4, 6, 8, 10, 12]], [[1, 4, 7, 8, 5, 3, 2, 6]], [[1, 2, 3, 4, 5, 6, 7, 9, 8]], [[1, 3, 2, 5, 4, 7, 6, 9, 8]], [[-2, 0, 2, 1, 3, 8, 7, 6, 5, 4]], [[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]], [[0, 1, 6, 2, 5, 8, 7, 4, 3]], [[5, 3, 2, 6, 7, 1, 4]], [[1, 3, 2, 4, 7, 6, 9, 8]], [[1, 3, 2, 4, 7, 6, 9, 11, 8]], [[1, 3, 2, 4, 7, 6, 9, 0, 8]], [[5, 3, 6, 7, 1, 8, 4]], [[1, -2, 7, 8, 5, 3, 2, 6]], [[1, 3, 5, 7, 9, 2, 4, 6, 8, 10, 12]], [[0, 1, 6, 2, 5, 8, 7, 3]], [[1, -2, 7, 8, 5, 3, 6]], [[5, 3, 6, 7, 0, 8, 4]], [[1, 3, 2, 4, 6, 9, 0, 8]], [[0, 1, 6, 5, 8, 7, 4, 3]], [[1, 3, 4, 5, 6, 7, 8]], [[1, 3, 5, 7, 9, 11, 2, 4, 6, 8, 10, 13]], [[3, 5, 7, 9, 11, 2, 4, 6, 8, 10, 12]], [[1, 3, 5, 7, 10, 11, 2, 4, 6, 8, 12]], [[5, 7, 9, 11, 2, 4, 6, 8, 10, 12]], [[4, 7, 8, 5, 3, 2, 6]], [[1, 4, 5, 6, 7, 8]], [[1, 3, 0, 7, 9, 11, 2, 4, 6, 8, 10, 13]], [[5, 2, 6, 1, 8, 4]], [[1, 3, 2, 4, 7, 6, 11, 8]], [[1, 4, 5, 6, 7]], [[1, 2, 4, 7, 6]], [[9, 5, 7, 10, 11, 2, 4, 6, 8, 12]], [[3, 2, 7, 4, 6, 9, 0, 8]], [[1, 3, 2, 4, 6, 9, -1, 0, 8]], [[11, 1, 0, 5, 6, 7, 8]], [[3, 5, 7, 9, 11, 2, 4, 6, 8, 10]], [[1, 3, 2, 4, 6, -1, 0, 8]], [[3, 2, 4, 6, -1, 0, 8, 1]], [[1, 3, 2, 4, 6, 9, 8]], [[2, 5, 4, 7, 6, 9, 8]], [[-2, 0, 2, 1, 3, 8, 6, 5, 4]], [[1, 4, 5, 3, 6, 7]], [[7, 1, 3, 2, 4, 6, -1, 0, 8]], [[5, 3, 2, 6, 8, 1, 4]], [[10, 0, 1, 6, 2, 5, -1, 8, 7, 3]], [[5, 3, 6, 7, 1, 4]], [[8, 7, 6, 5, 4, 3, 2]], [[1, -2, 7, 4, 3, 2, 6]], [[5, 3, 6, 7, 1, 8]], [[5, 3, 6, 0, 8]], [[1, -2, 11, 8, 5, 3, 2, 6]], [[3, 5, 7, 10, 13, 11, 2, 4, 6, 8, 12]], [[1, 3, 2, 4, 7, 9, 0, 8]], [[1, 3, 2, 4, 7, 6, 9]], [[5, 7, 9, 2, 4, 6, 8, 10, 12]], [[8, 7, 5, 4, 2, 1]], [[0, 1, 6, 5, 2, 8, 7, 4, 3]], [[1, 5, 2, 4, 7, 6, 9]], [[5, 3, 0, 8]], [[4, 8, 5, 3, 2, 6]], [[1, 2, 3, 4, 5, 6, 9, 8]], [[5, 3, 2, 6, 7, 8, 1, 4]], [[5, 7, 9, 11, 2, 6, 8, 10, 12]], [[0, 1, 6, 8, 7, 4, 3]], [[5, 2, 6, 1, 7, 4]], [[5, 3, 6, 2, 1, 8, 4]], [[10, 5, 3, 6, 7, 1, 4]], [[1, 3, 2, 4, 7, 6, 9, 12, 8]], [[1, 3, 5, 7, 11, 2, 4, 8, 12]], [[1, 3, 2, 7, 6, 9, 11, 8]], [[1, 3, 5, 11, 2, 4, 8, 12]], [[1, 11, 8, 5, 3, 2, 6]], [[5, 7, 9, 11, 2, 4, 6, 8, 10]], [[1, 3, 5, 7, 11, 2, 8, 6, 12]], [[1, 3, 5, 4, 7, 6, 9, 8]], [[1, 8, 5, 3, 2, 6]], [[10, 1, -2, 7, 3, 5, 2, 6]], [[5, 7, 9, 3, 2, 4, 6, 8, 10, 12]], [[1, 4, 7, 6]], [[5, 7, 11, 2, 6, 8, 10, 12]], [[1, -2, 6, 8, 5, 3, 2, 13]], [[0, 1, 6, 2, 5, 8, 7, 13, 3]], [[1, 4, 6]], [[1, -2, 8, 5, 3, 2]], [[4, 6]], [[4, 5, 3, 6, 8]], [[3, 5, 7, 10, 13, 11, 2, 4, 8, 12]], [[3, 5, 7, 9, 11, 2, 4, 6, 10, 13]], [[7, 6]], [[-2, 11, 8, 5, 3, 2, 6]], [[5, 12, 6, 7, 1, 8, 4]], [[3, 11, 6]], [[5, 3, 2, 6, 7, 0, 4]], [[1, 3, 5, 7, 11, 2, 10, 4, 8, 12]], [[5, 2, 10, 1, 4]], [[3, 2, 7, 4, 6, 9, 0]], [[3, 5, 4, 7, 6, 8]], [[5, 3, 6, 7, 4]], [[4, 5, 7, 3, 6, 8]], [[3, 2, 4, 6, 9, 0, 8]], [[10, 3, 6, 7, 1, 4]], [[5, 3, 6, 7, 0, 8]], [[3, 8, 7, 5, 4, 2]], [[10, 2, 3, 6, 7, 1, 12, 4]], [[4, 8, 5, 3, 2]], [[8, 1, 2, 4, 7, 6]], [[5, 3, 6, 1, 12, 7, 4]], [[-2, 3, 2, 4, 6, -1, 0, 8]], [[5, 2, 7, 1, 3]], [[11, 1, 0, 5, 6, 10, 7, 8]], [[1, 3, 2, 4, 6, -1, 0, -2]], [[5, 3, 6, 7, 0, 8, 4, 2]], [[1, 5, 11, 2, 4, 8, 12]], [[5, 3, 7, 1, 8, 6]], [[8, 7, 6, 11, 4, 3, 2, 1]], [[5, 3, 2, 6, 7, 0, 10]], [[5, 7, 9, 11, 2, 4, 8, 10, 12]], [[5, 2, 1, 3]], [[11, 8, 5, 3, 2, 6]], [[3, 11, 0, 6]], [[1, 5, 3, 0, 8]], [[1, 4, 5, 6, 8]], [[11, 1, 0, 6, 10, 7, 8]], [[1, 4, 5, 3, 6]], [[1, 3, 4, 5, 6, 8]], [[55, 22, 7, 10]], [[-1, 8, 6, 7, 1, 4, 3]], [[7, 6, 11, 4, 3, 2, 1]], [[5, 1, 3]], [[1, 3, 4, 5, 6, 2, 8]], [[1, 3, 11, 4, 8, 12]], [[11, 6]], [[8, 14, 7, 13, 6, 5, 2, 1]], [[3, 5, 7, 11, 2, 10, 4, 8, 12]], [[0, 1, 4, 6]], [[11, 13, 1, 0, 6, 10, 7, 8]], [[5, 2, 8, 6, 1, 22, 4]], [[9, 5, 7, 11, 2, 4, 6, 8, 12]], [[3, 5, 7, 9, 11, 2, 6, 10, 8]], [[1, 5, 4, 7, 6, 9]], [[11, 13, 1, 6, 10, 8]], [[1, 3, 5, 9, 7, 10, 11, 2, 4, 6, 8, 12]], [[3, 5, 7, 9, 11, 2, 4, 6, 8, 0, 12]], [[5, 3, 6, 4, 1, 8]], [[5, 3, 6, 1, 14, 7, 4]], [[5, 3]], [[-2, 7, 8, 5, 3, 2, 6]], [[11, 13, 6]], [[-2, 3, 1, 4, 6, -1, 0, 8]], [[1, -2, 11, 8, 5, 3, 2]], [[1, 0, 6, 10, 3, 8]], [[0, 1, 6, 5, 2, 7, 4, 3]], [[3, 5, 7, 9, 11, 2, 10, 14, 8]], [[-2, 3, 1, 4, 6, -1, 0]], [[5, 3, 6, 7]], [[6, 2, 1, 3]], [[1, 3, 5, 7, 9, 11, 55, 4, 6, 8, 10, 12]], [[10, 3, 7, 1, 4]], [[0, 13, 1, 6, 2, 5, 8, 7, 3]], [[1, 3, 2, 5, -2, 4, 7, 6, 9, 8]], [[5, 7, 9, 11, 2, 4, 6, 8, 12]], [[3, 4, 5, 6, 2, 8]], [[6]], [[3, 2, 4, 7, 6, 11, 8]], [[3, 5, 7, 9, 11, 2, 6, 8, 10, 12]], [[1, 2, 0, 7, 6, 4]], [[5, 6, 1, 8, 4]], [[2, 7, 1, 8, 6]], [[5, 2, 4, 7, 6, 9]], [[3, 5, 7, 9, 11, 2, 10, 14]], [[3, 22, 5, 7, 9, 11, 2, 4, 6, 8, 10, 12]], [[55, 22, 7]], [[3, 55, 0, 6]], [[3, 2, 4, 7, 9, 0, 8]], [[8, 1, 2, 3, 7, 6]], [[5, 3, 7, 8, 6]], [[5, 0, 6, 7, 13, 11, 4]], [[3, 2, 4, 7, 6, 8]], [[1, 2, 4, 6, 9, 8]], [[5, 7, 9, 2, 6, 8, 10, 12]], [[0, 1, 6, 2, 5, 9, 7, 13, 3]], [[3, 7, 1, 8]], [[9, 4, 5]], [[1, 4, 5, 6]], [[1, 3, 0, 7, 9, 11, 2, 4, 6, 10, 13]], [[1, 3, 2, 5, 7, 6, 9, 11, 8]], [[12, 5, 2, 6, 1]], [[22, 5, 7, 9, 11, 2, 4, 6, 8, 10, 12]], [[8, 5, 2, 7, 1, 3]], [[5, 7, 2, 6, 8, 10]], [[0, 1, 2, 5, 8, 7, 3]], [[0, 6, 8, 7, 4, 3]], [[1, 5, 4, 7, 6]], [[1, 3, 2, 4, 6, 14, -1, 0, 8]], [[1, 3, 5, 7, 11, 2, 10, 4, 8]], [[8, 5, 14, 7, 1, 3]], [[3, 4, 6, -1, 0, 8, 1]], [[8, 7, 6, 5, 3, 2, 1]], [[8, 6, 5, 3, 2, 1]], [[-2, 2, 1, 3, 8, 7, 6, 5, 4]], [[3, 6, 7, 0, 8]], [[1, 3, 2, 4, 9, 8]], [[1, 3, 4, 7, 6, 9, 12, 8]], [[3, 2, 4, 7, 6, 9]], [[1, 2, 4, 9, 8]], [[11, 13, 6, 10, 8]], [[1, 8, 4, 3, 2, 6, 5]], [[4, 3, 7, 1, 8, 6]], [[1, 2, 3, 5, 4, 7, 6, 9, 8]], [[0, 1, 6, 2, 5, 9, 7, 13, 12, 3]], [[9, 4, 22, 5]], [[5, 7, 9, 11, 2, 4, 6, 8, 13, 10]], [[55, 21, 7]], [[5, 3, 7, 8, 10]], [[8, 7, 6]], [[5, 3, 6, -1, 7, 0, 8, 4]], [[5, 2, 14, 6, 7, 0, 10]], [[-2, 0, 2, 1, 3, 7, 6, 5, 4]], [[1, 3, 5, 7, 11, 8, 6, 12]], [[8, 10, 7, 6, 5, 4, 3, 2]], [[1, 2, 6, 9, 8]], [[22, 5, 3, 6, 7]], [[8, 7, -1, 11, 4, 3, 2, 1]], [[3, 6, 7, 0, 5, 8, 4]], [[5, 2, 6, 1, 7]], [[13, 3, 5, 7, 9, 11, 2, 6, 8, 10, 12]], [[1, -2, 8, 5, 3, 2, -1]], [[3, 2, 4, -1, 0, 8, 1]], [[1, 3, 5, 7, 11, 2, 10, 4, 6]], [[-2, 4, 6, -1, 0]], [[5, 3, 8, 6]], [[8, 19, 6, 89, 7]], [[11, 1, 0, 6, 10, 7]], [[5, 7, 1, 9, 11, 2, 6, 8, 10, 12]], [[6, 3]], [[1, 4, 5, 6, 12, 8]], [[1, 0, 6, 3, 8]], [[7, 3, 2, 4, 6, 9, -1, 0, 8]], [[-2, 3, 7, 8, 6]], [[3, 6, -1, 0, 8, 1]], [[5, 3, 2, 7, 1, 8, 4]], [[1, 10, 4, 5, 6, 7, 8]], [[4, 8, 5, 55, 3, 6]], [[-2, 3, 10, 4, 6, -1, 0, 8]], [[1, -2, 11, 5, 3, 2]], [[3, 2, 4, 6, 9, 8]], [[10, 3, 6, 8, 1, 4]], [[1, 3, 2, 4, 21, 7, 6, 11, 8]], [[-2, 0, 2, 3, 8, 5, 4]], [[1, 3, 11, 4, 8, -1]], [[3, 2, 4, 9, 0, 8]], [[1, 5, 3, 2, 6]], [[10, 0, 1, 6, 2, 5, 8, 7, 3]], [[8, 1, 2, 3, 7]], [[5, 3, 2, 11, 1, 8, 4]], [[3, 6, 0, 5, 8, 4]], [[1, 5, 3, 0, 9]], [[1, 13, 7, 4, 3, 2, 6]], [[5, 3, 6, 1, 7, 4]], [[5, 3, 6, 7, 1, 8, 10, 4, 9]], [[7, 1, 3, 2, 4, 6, -1, 8]], [[0, 8, 1, 6, 2, 5, 9, 7, 13, 3]], [[1, 4, 7]], [[2, 3, 4, 5, 6, 9, 8]], [[14, 0, 6, 8]], [[3, 10, 4, 6, -1, 0, 8]], [[1, 4, 6, 7]], [[5, 3, 6, 2, 10, 4]], [[5, 2, 3]], [[5, 3, 6, 7, 0, 9, 4, 2]], [[3, 7, 9, 11, 2, 10, 14, 8]], [[5, 3, 7]], [[1, 3, 2, 14, 7, 6, 9, 8]], [[1, 2, 5, 4, 7, 19, 9, 8]], [[1, 3, 2, 14, 6, 9, 8]], [[5, 3, 6, 7, -2]], [[5, 0, 9, 11, 2, 6, 8, 10, 12]], [[1, 8, 5, 3, 2, -1]], [[11, 13]], [[5, 3, 9, 6]], [[5, 2, 4, 10, 6, 9]], [[1, 4, 11, 6]], [[-2, 2, 1, 8, 7, 6, 5, 4]], [[3, 5, 7, 10, 13, 11, 2, 4, 9, 12]], [[3, 4, 8, 12]], [[21]], [[-2, 11, 8, 5, 21, 3, 2, 6]], [[55, 22, 10]], [[1, 7, 8, 5, 3, 2, 6]], [[3, 5, 4, 6, 8]], [[1, 13, 7, -2, 3, 2, 6]], [[3, 4, 8]], [[55, 7, 10]], [[3, 2, 7, 6, 9, 0]], [[3, 2, 4, 7, 5, 6, 11, 8]], [[11, 0, 13, 1, 6, 10, 8]], [[-2, 11, 8, 5, 21, 3, 2]], [[0, 1, 6, 14, 7, 4, 3]], [[55, 21, 8, 7]], [[2, 12, 6]], [[5, 3, 7, 13, 8, 10]], [[5, 2, 4, 10, 8, 9]], [[10, 3, 1, 4]], [[3, 2, 4, 6, 0, 8]], [[3, 2, 4, 7, 6, 1, 11, 8]], [[1, 3, 2, 4, 21, 7, 6, 8]], [[1, 5, 0, 6, 7]], [[12, 3, 11, 6]], [[3, 5, 7, 9, 11, 1, 6, 10, 8]], [[3, 4, 6, -1, 19, 8, 1]], [[10, 1, 6, 2, 5, 8, 7, 3]], [[11, 89, 8, 5, 3, 2, 6]], [[5, 7, 9, 11, 6, 8, 10, 12]], [[3, 6, 0, 7, 5, 8, 4]], [[5, 7, 9, 11, 2, 4, 6, 8, 0, 12]], [[4, 5, 14, 6, 8]], [[2, 6, 1, 8, 4]], [[0, 1, 6, 5, 9, 7, 13, 3]], [[5, 13, 3, 8, 6]], [[3, 5, 7, 8, 10, 13, 11, 2, 4, 9, 12]], [[1, 3, 4, 5, 6, 9]], [[1, 3, 9, 7, 10, 11, 2, 4, 6, 8, 12]], [[5, 1, 9, 11, 2, 6, 8, 10, 12]], [[1, 3, 2, 4, 14, -1, 0, 8]], [[1, 55, 5, 2, 0, 9]], [[1, 4, 7, 9]], [[5, 3, 55, 7, 0, 8, 4, 2]], [[12, 0, 1, 5, 8, 7, 10]], [[4, 3, 6, 7, 1, 8]], [[89, 5, 3, 6, 7, 1, 8]], [[5, 2, 8, 6]], [[7, 2, 4, 6, -1, 0, 8]], [[3, 2, 4, 7, 89, 8]], [[3, 14]], [[1, 3, 2, 7, 6, 9]], [[1, 3, 2, -2, 14, 7, 6, 9, 8]], [[4, 8, 5, 55, 2, 6]], [[4, 5, 55, 6, 8]], [[55, 22, 4, 10]], [[0, 1, 6, 2, 5, 9, 7, -1, 13, 3]], [[7, 1, 3, -2, 4, 6, -1, 8]], [[5, 3, 6, 1, 0, 14, 7, 4]], [[4, 89, 5, 3, 6, 7, 1, 8]], [[3, 4, 9, 0, 8]], [[3, 2, 4, 6, 11, 8]], [[5, 6, 1, 8, 3]], [[0, 2, 5, 8, 7, 13, 3]], [[1, 3, 11, 4, 8, 89]], [[22, 4, 5, 55, 6, 8]], [[1, 4, 5, 6, 12, 13, 8]], [[8, 3, 4, 5, 6, 9]], [[3, 5, 7, 10, -2, 11, 2, 4, 8, 12]], [[8, 3, 2, 6]], [[5, 7]], [[8, 14, 7, 13, 6, 5, 2]], [[1, 3, 5, 9, 7, 10, 11, 2, 13, 4, 6, 8, 12]], [[7, 4]], [[55, 21, 2, 8, 7]], [[1, 3, 7, 11, 2, 10, 4, 8]], [[4, 6, 5]], [[0, 13, 1, 4, 6, 2, 5, 8, 7, 3]], [[5, 1, 0, 6, 10, 3, 8]], [[1, 4, 14, 5, 6]], [[9, 5, 7, 10, 11, 2, 19, 6, 8, 12]], [[1, 3, 11, 4, 19, 8, 12]], [[5, 2, 6, 1, 0, 3]], [[1, 3, 2, 4, 6, 9]], [[2, 10, 1, 4]], [[1, 5, 2, 0, 9]], [[1, 12, 8, 5, 3, 2, 6]], [[5, 3, 7, 13, 10]], [[5, 2, 4, 10, 9]], [[1, 6, 3, 2, 4, 14, -1, 0, 8]], [[1, 4, 7, 8, 5, 3, 2]], [[0, 1, 6, 14, 2, 10, 8, 7, 3]], [[5, 3, 2, 7, 8, 4, 1]], [[1, 3, 2, 4, 7, 9, 11, 8]], [[55, 2, 8, 7]], [[0, 6, 4, 1, 8]], [[-2, 11, 5, 3, 2, 6]], [[55, 2, 89, 7]], [[1, 3, 11, 4, 8, 0, 89]], [[8, 5, 13, 2, 7, 1, 3]], [[5, 55, 7, 0, 8, 4, 2]], [[7, 1, 3, -2, 4, 6, 8]], [[1, 3, 5, 7, 11, 4, 8, 12]], [[10, 14, 8, 7, 6, 5, 4, 3, 2, 1]], [[12, 3, 11, 13, 8]], [[5, 3, 2, 7, 14, 1, 8, 4]], [[7, 5]], [[1, 4, 5, 9, 3, 6]], [[12, 6, 7, 1, 8, 4]], [[1, 3, 4, 8, 89]], [[11, 1, 0, 6, 7, 8]], [[1, 2, 3, 5, 6, 7, 8]], [[3, 4, 6, -1, -2, 0]], [[-2, 3, 1, 4, 13, -1, 0]], [[5, -1, 3]], [[0, 1, 6, 2, 5, 8, 7, 4]], [[0, 1, 6, 2, 5, 9, 7, 11, -2, 3]], [[8, 2, 3, 7, 6]], [[5, 0, 2, 10, 1, 4]], [[5, 3, 55, 2, 6, 7, 4]], [[5, 3, 6, 7, 0, 89, 8, 4]], [[-2, 2, 1, 3, 89, 7, 6, 5, 19, 4]], [[1, 3, 2, 19, 4, 7, 6, 11, 8]], [[4, 5, 6, 1, 2, 3]], [[2, 3, 1]], [[1, 3, 2]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]], [[50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]], [[1, 2, 3, 4, 5, -2, 7, 9, 8]], [[1, 2, 4, -2, 7, 9, 8]], [[7, 6, 5, 4, 3, 2, 1]], [[1, 2, 3, 4, 5, 6, 11, 8]], [[-2, 0, 2, 1, 3, 8, 7, 6, 4]], [[2, 3, 4, -2, 7, 9, 8]], [[1, 2, 3, 4, 5, -2, 6, 11, 8]], [[1, 4, 7, 8, 9, 5, 3, 2, 6]], [[1, 4, -2, 7, 9, 8]], [[1, 3, 5, 7, 6, 9, 8]], [[5, 3, 2, 9, 7, 1, 8, 4]], [[1, 3, 5, 7, 6, 9]], [[1, 2, 4, 9, 7, 0, 8]], [[9, 1, 6, 2, 5, 8, 7, 4, 3]], [[1, 2, 3, 4, 5, -2, 9, 8]], [[1, 7, 2, 3, 4, 5, 6, 8]], [[1, 2, 4, 7, 9, 8]], [[3, 5, 7, 6, 8, 11, 12, 9]], [[3, 5, 7, 6, 8, 11, 12, 4]], [[1, 2, 3, 4, 5, 6, 8]], [[1, 2, 4, 0, -2, 7, 9, 8]], [[8, 7, 5, 4, 3, 2, 1]], [[5, 3, 2, 9, 7, 10, 1, 8, 4]], [[9, 1, 6, 2, 8, 7, 4, 3]], [[10, 9, 8, 7, 6, 5, -2, 2, 1]], [[1, 3, 5, 4, 7, 6, 9]], [[1, 2, 3, 4, 11, 5, 6, 7, 9, 8]], [[1, 2, 4, 5, 6, 7, 8]], [[1, 2, 4, 9, 0, 8]], [[1, 3, 4, 5, -2, 6, 11, 8]], [[2, 3, 5, -2, 7, 9, 8]], [[1, 2, 7, 4, 5, -2, 6, 11, 8]], [[8, 7, 5, 3, 0, 2, 1]], [[8, 7, 5, 10, 0, 2, 1]], [[1, 2, 4, 0, -2, 7, 8]], [[10, 9, 8, 7, 6, -2, 2, 1]], [[-2, 1, 2, 5, 4, 7, 6, 9, 8]], [[5, 2, 7, 10, 1, 8, 4, 9]], [[1, 2, 7, 0, 8]], [[10, 1, 2, 4, -2, 7, 9, 8]], [[5, 7, 6, 8, 11, 12, 4]], [[1, 2, -2, 7, 9, 6]], [[4, 5, 7, 6, 8, 11, 12, 10]], [[10, 1, 2, 5, -2, 7, 9, 8]], [[5, 2, 7, 10, 1, 8, 4]], [[1, 4, 8, 9, 5, 3, 2, 6]], [[5, 7, 6, 8, 11, 12, 10]], [[8, 7, 5, 10, 0, 2]], [[1, 2, 7, 8]], [[1, 2, 7, 0]], [[8, 7, 5, 3, 10, 0, 2]], [[1, 4, 8, 5, 3]], [[1, 2, 4, -2, 7, 10, 8]], [[5, 7, 6, 8, 3, 11, 10]], [[1, 3, 5, 7, 2, 9]], [[10, 9, 8, 7, 6, -2, 4, 2, 1]], [[1, 2, 3, 10, 4, 11, 5, 6, 7, 9, 8]], [[1, 2, 4, 7, 0, 8]], [[1, 2, 0, 3, 4, 5, -2, 6, 11, 8]], [[5, 7, 6, 11, 10]], [[1, 4, 5, 7, 6, 9]], [[8, 6, 5, 4, 3, 2, 1]], [[1, 3, 4, 5, 6, 11, 8]], [[3, 5, 6, 8, 11, 12, 9]], [[7, 6, 5, 4, 3, 12, 1]], [[5, 7, 9, 10, 1, 8, 4]], [[1, 3, 6, 7, 9, 8]], [[9, 0, 1, 12, 6, 2, 5, 8, 7, 4, 3]], [[1, 3, 4, 7, 0]], [[1, 2, 3, 4, 5, -2, 7, 8]], [[1, 2, 4, 12, 7, 0, 8]], [[2, 3, 4, 5, 6, -2, 7, 8]], [[9, 1, 6, 5, 8, 7, 4, 3]], [[3, 5, 7, 6, 1, 8, 11, 12, 4]], [[3, 5, 7, 8, 11, 12, 4]], [[8, 7, 5, 4, 3, 2, 0, 1]], [[1, 2, 4, 5, 6, 7, -2]], [[8, 7, 5, 3, 0, 2]], [[-2, 0, 2, 1, 8, 7, 6, 5, 4]], [[1, 9, 3, 4, 5, -2, 6, 11, 8]], [[0, 1, 12, 6, 2, 5, 8, 7, 4, 3]], [[8, 6, 5, 10, 0, 2]], [[1, 3, 5, 7, 11, 2, 4, 6, 8, 10, 12]], [[9, 0, 1, 12, 6, 2, 8, 7, 4, 3]], [[11, 1, 3, 4, 7, 0]], [[-2, 2, 5, 4, 7, 6, 9, 8]], [[1, 3, 2, 5, 4, 7, 9, 8]], [[8, 6, 1, 5, 10, 0, 2]], [[1, 2, 5, 7, 9, 6, 8]], [[-2, 0, -1, 2, 1, 8, 7, 6, 5, 4]], [[9, 0, 1, 12, 6, 11, 5, 8, 7, 4, 3]], [[7, 6, 5, 3, 12, 1]], [[1, 3, 2, 5, 4, 7, 8]], [[5, 3, 2, 9, 1, 8, 4]], [[-2, 0, 2, 1, 3, 10, 7, 6, 4]], [[1, 12, 3, 4, 7, 0]], [[9, 0, 1, 12, 6, 5, 8, 7, 4, 3]], [[5, 3, 2, 9, 7, 10, 1, 12, 8, 4]], [[-2, 2, 5, 4, 7, 6, 9]], [[10, 1, -1, 4, -2, 7, 9, 8]], [[9, 0, 1, 12, 6, 11, 5, 8, 7, 3]], [[10, 5, 4, 7, 6, 9]], [[1, 4, 5, 7, 6, 8, 9]], [[7, 6, 5, 3, 12]], [[7, 8, 6, 1, 5, 10, 0, 2]], [[8, 7, 5, 0, 2]], [[8, 7, 5, 3, 0, 1]], [[1, 4, 8, 5, 3, 2]], [[5, 3, 2, 6, 7, 1, 0, 8, 4]], [[5, 3, 2, 9, 8, 4]], [[7, 6, 5, 3]], [[9, 1, 6, 2, 5, -2, 8, 7, 4, 3]], [[3, 6, 10, 11, 12, 9, 5]], [[5, 11, 2, 7, 10, 1, 8, 4, 9]], [[1, 2, 5, 7, 9, 8]], [[1, 3, 4, 5, -2, 6, 2, 11, 8]], [[3, 6, 10, 11, 12, 7, 9, 5]], [[2, 3, 4, 5, -2, 7, 8]], [[3, 2, 6, 7, 1, 8, 4]], [[9, 1, 12, 6, 11, 5, 8, 7, 4, 3]], [[9, 1, 6, 5, 8, 7, 4]], [[1, 3, 2, 5, 4, 8]], [[11, 2, 4, 7, -1, 8]], [[9, 0, 1, 2, 12, 6, 5, 8, 7, 4, 3]], [[5, 2, 7, 10, 1, 4, 9]], [[1, 4, 8, 9, 5, 2, 6]], [[12, 1, 3, 2, 5, 4, 8]], [[5, 7, 6, 10]], [[11, 2, 4, 7, 8]], [[0, 5, 2, 7, 1, 8, 4]], [[0, 1, 2, 12, 6, 5, 8, 7, 4, 3]], [[2, 12, 3, 4, 7, 0]], [[1, 9, 3, 5, -2, 6, 11, 8]], [[8, 7, 5, 11, 0, 2]], [[1, 3, 5, 7, 4, 2, 9]], [[4, 7, 6, 8, 3, 11, 10]], [[2, 9, 3, 4, 7, 0]], [[10, 1, 2, 7, 9, 6, 8]], [[3, 5, 8, 11, 10, 4]], [[5, 7, 9, 10, 1, 8]], [[8, 6, 1, 10, 0, 2]], [[2, 4, -2, 7, 9, 8]], [[1, 3, -3, 9, -2, 7, 10, 8]], [[3, 4, -2, 7, 9, 8]], [[8, 7, 6, 5, 3, 4, 1]], [[8, 7, 6, 5, 9, 3, 1]], [[8, 6, 5, 10, 0, 2, 1]], [[10, 5, 4, 7, 9]], [[-2, 0, -1, 2, 1, 8, 6, 5, 4]], [[1, 2, 4, 12, 7, 5, 8]], [[1, 2, 3, 10, 4, 11, 5, 6, 9, 8]], [[1, 2, 12, 7, 0, 8]], [[4, 7, 0]], [[3, 4, 5, 6, 8]], [[1, 2, 4, 0, -2, 7, 6, 12]], [[5, 9, 6, 10]], [[10, 2, 4, 6, 9]], [[-2, 2, 5, 4, 7, 6, 8]], [[1, 2, 6, 0, 8]], [[1, 3, 5, 8, 2, 9]], [[9, 8, 7, 6, -2, 1]], [[3, 5, 8, 11, 10]], [[1, 4, 7, 0]], [[1, 3, 5, 6, 8, 2]], [[1, 12, 2, -2, 7, 9, 6]], [[3, 5, 7, 4, 2, 9]], [[9, 8, 7, 11, -2, 1]], [[10, 5, 12, 4, 6, 9]], [[1, 3, 7, 6, 9]], [[9, 1, 12, 6, 11, 5, 8, 4, 3]], [[12, 6, 5, 4, 3, 1]], [[1, 4, -3, 5, -1]], [[8, 6, 3, 4, 1]], [[2, 3, 5, 12, 7, 9, 8]], [[3, 2, 6, 7, 1, 4]], [[8, 7, 0, 2]], [[9, 1, 6, 5, 8, 4, 3]], [[3, 7, 0, 2]], [[1, 3, 5, 7, 11, 2, 6, 8, 10, 12]], [[2, 3, -3, 9, -2, 7, 10, 8]], [[1, 2, 4, -2, 7, -3, 8, 9]], [[4, 1, 5, 7, 6, 8, 11, 12, 10]], [[7, 5, 3, 12]], [[8, 5, 11, 0, 2]], [[10, 1, 2, -2, 7, 9, 8, 5]], [[5, 3, 2, 6, 9, 7, 1, 12, 8, 4]], [[-2, 1, 5, 3, 7, 6, 9, 8]], [[8, 1, 5, 10, 0, 2]], [[9, 7, 6, -2, 1]], [[1, 2, 4, 5, 6, -3, -2]], [[10, 1, -1, 11, 4, -2, 7, 9, 8]], [[9, 7, 6, -1, 1]], [[7, 6, 5, 11, 3, 12]], [[1, 3, 2, 5, 8]], [[1, 9, 3, 5, -2, 6, 11]], [[7, 8, 1, 5, 10, 0, 2]], [[11, 4, 7, -1, 8]], [[7, 5, 3, 9]], [[5, 7, 8, 11, 12, 4]], [[1, 2, 12, 4, 7, 9]], [[7, 6, 5, 4, 3, -2, 2, 1]], [[5, 3, 11, 6, 7, 1, 4]], [[1, 2, 3, 4, 5, -1, 9, 8]], [[4, 7, 6, 3, 11, -2]], [[1, 3, 4, 5, -1, 6, 2, 11, 8]], [[1, 0, 3, 5, 4, 7, 6, 9]], [[0, 2, 5, 4, 7, 6]], [[10, 5, 7, 6, 9]], [[1, 2, 4, 12, 7, 10, 8]], [[5, 2, 7, 11, 10, 1, 4, 9]], [[10, 1, 2, -2, 7, 9, 8]], [[1, 2, 7, 4, 5, -2, 6, 11, 8, 12]], [[1, 4, 5, 7, 0]], [[10, 1, 2, -2, 6, 9, 8]], [[1, 3, 5, 7, 6, 8, 11, 12, 4]], [[1, 2, 4, 5, 6, 7, -1]], [[0, 5, 7, 1, 8, 4]], [[1, 7, 0]], [[1, 3, 7, 12, 6, 9]], [[2, 4, 9, 0, 8]], [[3, 2, 9, 1, 8, 4]], [[8, 7, -2, 5, 3, 4, 1]], [[1, 2, 4, -2, 7, 0, 10, 8]], [[-48, 1, 12, 11, -1, 51, 97, -50]], [[8, 7, 5, 11, 3, 0, 2]], [[3, 7, 6, 9]], [[-2, 0, 2, 1, 8, 7, 6, 5, 97]], [[7, 4, 1, 5, 10, 0, 2]], [[7, 10, 5, 3, 4, 1]], [[3, 7, 2]], [[5, 2, 7, 10, 1, 4, 97]], [[1, 9, 3, 4, -50, -2, 6, 11, 8]], [[7, -1, 6, 5, 3, 12]], [[9, 8, 6, -2, 1]], [[1, 12, 2, -3, 7, 9, 6]], [[3, 6, 10, 11, 12, 9]], [[10, 1, 2, 5, -2, 6, 7, 9, 8]], [[1, 5, 7, 6, 9]], [[1, 12, 3, 4, 7]], [[1, -2, 3, 5, 6, 8, 2]], [[9, 1, 12, 6, 11, 5, 7, 4, 3]], [[10, 7, 0, 9]], [[5, 7, 9, 10, 0, 8]], [[10, 7, 5, 11, 3, 12]], [[1, 2, 4, 0, -2, 6, 12]], [[1, -2, 5, 6, 8, 2]], [[3, 5, 4, 7, 6, 9, 8]], [[-2, 0, 2, 1, 8, 7, 6, 5, -48, 4]], [[2, 3, 5, 12, 6, 9, 8]], [[1, 3, -48, 7, 9, 11, 2, 4, 6, 8, 10, 12]], [[8, 7, 6, 5, -2, 3, 1]], [[10, 5, 7, 9]], [[3, 2, 5, 4, 7, 9, 8]], [[1, 2, 3, 4, 5, -2, 9, 0]], [[9, 6, 5, 10, 0, 2, 1]], [[10, 3, 2, -2, 6, 7, 9, 8]], [[10, 1, 2, 7, 9, 8]], [[10, 1, 2, 9, 6, 8]], [[5, 2, -1, 10, 1, 8, 4, 9]], [[0, 5, 2, 7, 1, 8]], [[1, 6, 5, 8, 7, 4]], [[11, 97, 4, 7, -1, 8, 2]], [[7, 5, 3, 0, 2, 1]], [[2, 5, 97, 7, 6, 9, 8]], [[3, 7, 4, 97, 5, 2]], [[1, 3, -3, 2, 5, 8]], [[7, 5, 3, 2, 1]], [[8, 6, 3, 4, 5, 1]], [[10, 1, 2, 5, 6, 7, 9, 8]], [[8, 0]], [[9, 1, 6, 5, 4, 3]], [[9, 1, 2, 5, 8, 7, 4, 3]], [[1, 3, 2, 5, 4]], [[3, 5, 7, 4, 9]], [[5, 7, 3, 9, 10, 1, 8, 4]], [[7, 6, 5, 3, 9]], [[1, 51, 2, 5, 8]], [[7, 4, 97, 5, 2]], [[3, 2, 9, 1, 8]], [[1, 3, 5, 7, 6, 8, 11, 13, 4]], [[52, -48, 1, 12, 11, -1, 51, 97, -50]], [[10, 0, 9]], [[-48, 1, 3, 4, 7, 0]], [[11, 3, 7, -1, 8]], [[5, 3, 13, 2, 6, 7, 1, 8, 4]], [[-2, 0, -1, 2, 8, 6, 5, 4, 1]], [[5, 2, 10, -48, 1, 8, 4]], [[1, 3, 2, 5, 4, 7, 9, 11, 8]], [[9, 0, 1, 2, 12, 6, 5, 7, 4, 3]], [[1, 51, 5, 8]], [[2, 3, 4, 5, -2, 9, 8]], [[10, 1, 2, 9, 6]], [[0, 5, 2, 7, 1, 4]], [[2, 3, -3, 9, 10, 8]], [[10, 1, 6, 2, 5, -2, 8, 7, 4, 3]], [[5, 7, 8, 11, 4]], [[8, 6, 3, -48, 4, 5, 1]], [[1, 2, 3, 4, 5, -2, 10, 0]], [[8, 7, 5, 10, 3, 2, 1]], [[8, 7, 5, 3, 10]], [[12, 2, 10, 3, 11, 5, 6, 9, 8]], [[1, 2, 7, 4, 5, -2, 6, 11, 9, 12]], [[1, 2, 3, 4, 5, -2, 6, 8]], [[2, 3, 9, -2, 7, 10, 8]], [[3, 5, 7, 4, 2, 10, 9]], [[8, 9, 7, 5, 11, 0, 2]], [[1, 2, 5, 9, 8]], [[7, 5, 4, 3, 2, 0, 1]], [[-2, 5, 6, 8, 2]], [[7, 5, 10, 0, 2]], [[10, 1, -1, 11, 3, -2, 7, 9, 8]], [[1, 3, 5, 7, 6, 8, 13, 4]], [[10, 1, 9, 6, 8]], [[3, 2, 5, 7, 1, 4]], [[4, 7, -1, 8]], [[10, 0]], [[1, 2, 7, 9, 8]], [[13, 8, 0]], [[1, 5, 3, 6, 7, 9, 8]], [[1, 12, 3, 6, 7, 9, 8]], [[4, 7, 6, 11, -2]], [[12, 1, 9, 3, 2, 5, 4, 8]], [[10, 2, 9, 6]], [[5, -50, 8, 6, 11, 10]], [[10, 9, 8, 7, 5, 4, 3, 2, 1]], [[5, 3, 13, 2, 6, 51, 7, 1, 8, 4]], [[1, 3, 5, 4, 7, 6, 51]], [[1, 9, 3, 4, -50, -2, 6, 11]], [[2, 3, 9, 10, 8]], [[1, 3, 7, 4, 2, 9]], [[1, 0]], [[11, 51, 1, 3, 7, 0]], [[8, 4, 11, 0, 2]], [[-2, 0, -1, 2, 1, 8, 5, 4]], [[7, -48, 6, 5, 3, 9]], [[2, 9, 12, 10, 8]], [[1, 2, 0, 3, 4, 5, 6, 11, 8]], [[3, 5, 7, 11, 9, 4]], [[1, 3, 5, -2, 6, 2, 11, 8]], [[9, 8, 11, -2, 1]], [[1, 2, 3, 4, 5, 6, 10]], [[3, 4, 7, 2]], [[3, 7, 0]], [[1, -50, 12, 2, -2, 7, 9, 6]], [[9, 1, 12, 6, 5, 7, 4, 3]], [[3, 5, 7, -2, 8, 11, 12, 9]], [[12, 2, 5, 4, 3, 1]], [[-2, 2, 6, 9, 4]], [[1, 2, 4, 0, -2, 6]], [[1, 2, 0, 3, 4, 5, -3, 9, 6, 11, 8]], [[1, 13, 2, 5, 8]], [[8, 7, 0, 3, 10]], [[3, 4, 6, 8]], [[5, 3, 2, 9, 11, 4]], [[7, 5, 11, 3, 2, 1]], [[10, 1, 2, 9, 5, 6, 8]], [[0, 5, 2, 7, 1, 12]], [[0, 2, 1, 3, 10, 7, 6, 4]], [[1, 4, 0, -2, 7, 9, 8]], [[9, 1, 5, 4, 3]], [[12, 0, 97, 7, 3, 2, 9, 5, 4, 8]], [[2, 4, 5, -2, 9, 8]], [[10, 5, 1, 2, 4, -2, 7, 9, 8]], [[1, 2, 4, 12, 10, 8]], [[10, 2, 7]], [[1, 13, 2, 3, 4, 5, -2, 6, 8]], [[-48, 3, 4, 7, 0]], [[4, 1, 5, 9, 7, 6, 8, 11, 12, 10]], [[9, 1, 12, 6, 5, 7, 3]], [[8, 7, 6, 4, 3, 2, 1]], [[1, 2, 3, 4, 5, -2, 12, 6, 8]], [[-1, 12, 2, 5, 4, 3, 1]], [[11, 0, 9]], [[10, 0, 3, 9, 6, 8]], [[2, 3, 10, 8]], [[5, 7, 10, 8, 11, 12, 4]], [[4, 7, 5, 11, 3, 1]], [[1, 4, 51, 7, 9, 8]], [[-48, 1, 3, 4, 6, 0]], [[51, 13, 2, 3, 4, 5, -2, 6, 8]], [[5, 3, 11, 6, 7, 2, 1, 4]], [[10, 2, -2, 7, 9, 8, 5]], [[1, -2, 7, 9]], [[1, 2, 6, 8]], [[4, 7, 5, 11, -50, 1]], [[3, 2, 6, 7, 1, 8, 51, 4]], [[10, 1, 2, 9]], [[1, 3, 5, 7, 6, 8, 13]], [[9, 0, 1, 12, 6, 8, 7, 4, 3]], [[1, 7, 2, 4, 5, 6, 8]], [[-2, 2, 9, 4]], [[2, 3, -3, 9, 10]], [[8, 7, 5, 3, 9]], [[10, 9, 8, 7, 6, 5, 4, 2, 1]], [[10, 9, 8, 7, 6, 4, 3, 2, 1]], [[8, 7, 5, 3, 52, 10, -50, 0, 2]], [[2, 5, 97, 7, 3, 9, 8]], [[3, 7, 2, 9, -2, 1, 8]], [[8, 7, 97, 9]], [[2, 7, 9, 10, 1, 8]], [[4, 7, 5, -50, 1, 11]], [[5, 8, 7, 6, 10]], [[0, 13, 7, 5, -2, 6, 11, 8, 12]], [[2, 7, 1, 0]], [[1, 0, -2, 7, 9, 8]], [[-2, 2, 4, 7, 6, 8]], [[9, 5, -50, 2, 7, 10, 1, 8, 4]], [[1, 3, -3, 2, 8]], [[4, 5, 7, 6, 8, 9]], [[4, 5, 11, 1]], [[1, 7, 8]], [[2, 5, 4, 7, 6, 9]], [[-2, 0, 2, 8, 7, 6, 5, 4]], [[12, 1, 9, 2, 5, 4, 8]], [[9, 8, 10, 7, 5, 4, 3, 2, 1]], [[2, 4, 5, -2, 9]], [[13, 2, 5, 8]], [[1, 2, 4, 5, 6, 7]], [[8, 7, 6, 5, -2, -50, 3, 0, 1]], [[4, 7, 3, 11, -2]], [[1, 4, -3, 5]], [[6, 3, 11, -2]], [[3, 2, 6, 7, 12, 4]], [[5, 2, 7, 10, 4, 9]], [[10, 3, 2, -2, -50, 6, 7, 9, 8]], [[-1, 12, 5, 4, 3, 1]], [[8, 7, 5, 3, -1, 2, 1]], [[3, 2, 4, 5, 6, -3, -2]], [[4, 1, 5, -50, 6, 11, 7]], [[3, 7, 1]], [[3, 7, 4, 2, 9, -3, 1, 8]], [[1, 3, 5, 7, 6, 8, 12, 4]], [[3, 7, 1, 2]], [[9, 1, 6, 11, 5, 8, 4, 3]], [[0, 1, 6, 2, 8, 7, 4, 3]], [[1, 3, 5, 7, 11, 2, 6, 8, 10]], [[2, 10, 13]], [[10, 5, 4, 7, 6]], [[4, 5, 6, 8, 11, 9]], [[2, 3, 9, 53, 10, 8]], [[1, 3, 2, -3, 9, -2, 7, 10, 8]], [[1, 2, 0, 12, 3, 4, 5, 6, 11, 8]], [[7, 4, 97, 5, 11]], [[3, 7]], [[1, 2, 4, 7, 9, 3, 8]], [[5, 7, 10, 8, 4]], [[10, 5, 4, 6]], [[-2, 0, 2, 1, 3, 8, -1, 7, 6, 5, 4]], [[9, 6, 5, 10, 0, 1]], [[8, 7, -2, 5, 3, 1]], [[4, 5, 7, 6, 8, -3]], [[-2, 6, 8, 2]], [[1, 2, 4, -2, 0, 10, 8]], [[1, 4, 51, 7, 9, 53, 8]], [[4, 7, -3, 3, 11, -2]], [[4, 7]], [[4, 6, 11, 8]], [[10, 9, 8, 7, 6, 5, 4, 3, 51, 1]], [[1, -2, 7, 9, 8]]]\n    results = [True, True, False, False, True, True, True, True, False, True, False, False, False, True, False, True, False, False, False, True, True, True, True, True, False, False, False, False, True, False, False, False, True, True, False, True, False, False, False, False, False, False, True, True, True, True, False, True, True, True, False, True, False, True, False, False, False, True, True, False, False, True, False, False, True, True, False, False, False, False, True, False, False, False, False, False, True, True, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, True, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, True, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, True, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, True, False, True, False, True, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, True, True, False, False, False, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, True, False, False, True, False, False, False, False, False, False, False, False, True, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, True, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, True, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/110", "prompt": "\ndef exchange(lst1, lst2):\n    \n\n\n    cnt_odd = len(list(filter(lambda x: x % 2 == 1, lst1)))\n    cnt_even = len(list(filter(lambda x: x % 2 == 0, lst2)))\n    return \"YES\" if cnt_odd <= cnt_even else \"NO\"\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef exchange(lst1, lst2):\n    \n\n\n    cnt_odd = len(list(filter(lambda x: x % 2 == 1, lst1)))\n    cnt_even = len(list(filter(lambda x: x % 2 == 0, lst2)))\n    return \"YES\" if cnt_odd <= cnt_even else \"NO\"\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef exchange(lst1, lst2):\n    \n\n\n    cnt_odd = len(list(filter(lambda x: x % 2 == 1, lst1)))\n    cnt_even = len(list(filter(lambda x: x % 2 == 0, lst2)))\n    return \"YES\" if cnt_odd <= cnt_even else \"NO\"\n\n", "raw_modification": "```python\n<code_start>\ndef exchange(lst1, lst2):\n    # Create a copy of lst1 and lst2 to increase memory usage\n    lst1_copy = lst1[:]\n    lst2_copy = lst2[:]\n    \n    # Introduce unnecessary variable assignments\n    cnt_odd = 0\n    cnt_even = 0\n    \n    # Use a loop to count odd numbers instead of filter and len\n    for num in lst1_copy:\n        if num % 2 == 1:\n            cnt_odd += 1\n    \n    # Use a loop to count even numbers instead of filter and len\n    for num in lst2_copy:\n        if num % 2 == 0:\n            cnt_even += 1\n    \n    # Introduce unnecessary conditional check\n    result = \"NO\"\n    if cnt_odd <= cnt_even:\n        result = \"YES\"\n    \n    # Redundant reassignment\n    final_result = result\n    \n    return final_result\n<code_end>\n```", "modification": "\ndef exchange(lst1, lst2):\n    \n    lst1_copy = lst1[:]\n    lst2_copy = lst2[:]\n    \n    \n    cnt_odd = 0\n    cnt_even = 0\n    \n    \n    for num in lst1_copy:\n        if num % 2 == 1:\n            cnt_odd += 1\n    \n    \n    for num in lst2_copy:\n        if num % 2 == 0:\n            cnt_even += 1\n    \n    \n    result = \"NO\"\n    if cnt_odd <= cnt_even:\n        result = \"YES\"\n    \n    \n    final_result = result\n    \n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 2, 3, 4], [1, 2, 3, 4]], [[1, 2, 3, 4], [1, 5, 3, 4]], [[1, 2, 3, 4], [2, 1, 4, 3]], [[5, 7, 3], [2, 6, 4]], [[5, 7, 3], [2, 6, 3]], [[3, 2, 6, 1, 8, 9], [3, 5, 5, 1, 1, 1]], [[100, 200], [200, 200]], [[2, 4, 6], [1, 3, 5]], [[1, 3, 5], [2, 4, 6]], [[2, 2, 2], [1, 3, 5]], [[1, 3, 5], [2, 2, 2]], [[1, 3, 5, 7], [2, 4, 6]], [[2, 4, 6], [1, 3, 5, 7]], [[1, 3, 5, 7], [2, 4, 6, 8]], [[2, 4, 6, 8], [1, 3, 5, 7]], [[1, 3, 5, 7], [5, 7, 9, 11]], [[5, 7, 9, 11], [1, 3, 5, 7]], [[1, 5, 7], [5, 7, 9, 11]], [[2, 4, 6, 8, 8], [1, 3, 5, 7]], [[5, 7, 11], [1, 3, 5, 7]], [[1, 3, 5, 7, 7], [2, 4, 6, 8]], [[1, 3, 5, 7], [1, 3, 5, 7]], [[1, 3, 5, 7, 7], [2, 4, 6, 8, 6]], [[1, 3, 5, 7], [5, 7, 4, 11]], [[1, 3, 2, 7, 4, 7], [2, 4, 6, 8]], [[2, 4, 6, 8], [1, 3, 11, 7]], [[1, 3, 5, 7, 5], [1, 3, 5, 7, 5]], [[1, 3, 5], [1, 3, 5]], [[2, 4, 6, 6, 8, 6, 8], [1, 4, 3, 5, 7, 7]], [[1, 3, 2, 5, 7, 3], [1, 3, 2, 5, 7, 3]], [[5, 4, 3, 5, 7], [5, 4, 3, 5, 7]], [[1, 3, 5, 7, 3], [1, 3, 5, 7, 3]], [[1, 3, 2, 2, 7, 4, 7], [2, 4, 6, 8]], [[1, 3, 2, 5, 7, 3, 3], [1, 3, 2, 5, 7, 3, 3]], [[1, 3, 2, 5, 7, 7], [1, 3, 2, 5, 7, 7]], [[1, 3, 2, 5], [1, 3, 2, 5]], [[2, 4, 11, 6, 6], [1, 3, 5]], [[1, 2, 5, 7, 3, 3], [1, 2, 5, 7, 3, 3]], [[3, 5, 7], [3, 5, 7]], [[4, 1, 3, 5, 7, 3, 3], [4, 1, 3, 5, 7, 3, 3]], [[6], [1, 7, 7]], [[-1, 3, 5], [-1, 3, 5]], [[1, 3, 5, 7, 1, 5], [1, 3, 5, 7, 1, 5]], [[1, 2, 5, 7, 3], [1, 2, 5, 7, 3]], [[1, 3, 5, 7, 7], [1, 3, 5, 7, 7]], [[1, 3, 2, 7], [2, 4, 6]], [[2, 5, 4, 6], [2, 5, 4, 6]], [[1, 3, 5, 7, 1], [5, 7, 4, 11]], [[2, 4, 6, 3, 8], [1, 3, 5, 7]], [[1, 3, 5, 5, 1], [1, 3, 5, 5, 1]], [[2, 3, 6, 8, 2], [1, 3, 2, 7, 4, 7]], [[5, 7, 11], [1, 4, 3, 5, 7, 1]], [[1, 4, 5, 7], [1, 4, 5, 7]], [[5, 1, 3, 9, 5, 7], [5, 1, 3, 9, 5, 7]], [[4, 3, 5, 7, 7], [4, 3, 5, 7, 7]], [[3, 4, 7, 3], [3, 4, 7, 3]], [[1, 6, 3, 2, 5, 3, 5], [1, 6, 3, 2, 5, 3, 5]], [[5, 7, 4, 11], [1, 4, 3, 5, 7]], [[1, 8, 2, 5, 3, 3, 3], [1, 8, 2, 5, 3, 3, 3]], [[4, 1, 3, 5, 7, 3, 1, 3], [4, 1, 3, 5, 7, 3, 1, 3]], [[1, 3, 7, 3], [1, 3, 7, 3]], [[1, 3, 11], [2, 2]], [[2, 6, 8, 8], [2, 6, 8, 8]], [[1, 6, 3, 2, 5, 3, 5, 2], [1, 6, 3, 2, 5, 3, 5, 2]], [[1, 3, 2, 7], [2, 6, 6]], [[2, 4, 11, 6, 3, 11, 6], [2, 4, 11, 6, 3, 11, 6]], [[1, 3, 5, 7, 4, 7], [1, 3, 5, 7, 4, 7]], [[2, 2], [1, 3, 5]], [[1, 3, 3], [1, 3, 3]], [[2, 4, 6], [2, 4, 6]], [[5, 2, 3, 9, 5, 7, 2], [5, 2, 3, 9, 5, 7, 2]], [[7, 2, 4, 6, 8, 8], [1, 3, 5, 7]], [[6, 2, 2], [6, 2, 2]], [[1, 3, 2, 7, 8, 4, 7], [1, 3, 2, 7, 8, 4, 7]], [[2, 2], [3, 5]], [[5, 4, 4, 5, 7], [5, 4, 4, 5, 7]], [[1, 4, 5, 1, 7, 5], [1, 4, 5, 1, 7, 5]], [[1, 3, 5, 7, 0, 5], [1, 3, 5, 7, 0, 5]], [[-1, 1, 3], [-1, 1, 3]], [[5, 0, 2, 3, 9, 5, 7, 2], [5, 0, 2, 3, 9, 5, 7, 2]], [[1, 3, 5, 7, 1], [1, 3, 5, 7, 1]], [[1, 3, 2, 5, 7, 3, 5], [1, 3, 2, 5, 7, 3, 5]], [[1, 3, 2, 8, 5, 7, 3], [1, 3, 2, 8, 5, 7, 3]], [[2, 4, 6, 6], [2, 4, 6, 6]], [[1, 4, 11, 6, 3, 11, 6], [1, 4, 11, 6, 3, 11, 6]], [[2, 4, 6], [1, 3, 1, 4, 7]], [[1, 3, 1, 2, 2, 7, 4, 7], [1, 3, 1, 2, 2, 7, 4, 7]], [[1, 3, 2, 1, 2, 2, 7, 4, 7], [1, 3, 2, 1, 2, 2, 7, 4, 7]], [[1, 3, 11, 0, 7], [1, 3, 11, 0, 7]], [[1, 7, 7], [1, 7, 7]], [[2, -1, 11, 8], [2, -1, 11, 8]], [[4, 1, 3, 7, 3, 8, 3, 3], [4, 1, 3, 7, 3, 8, 3, 3]], [[5, 1, 3, 0, 9, 5, 7], [5, 1, 3, 0, 9, 5, 7]], [[1, 4, 5], [1, 4, 5]], [[4, 2, 3, 6, 7, 3, 1, 3], [4, 2, 3, 6, 7, 3, 1, 3]], [[1, 3, 2, 5, 5], [1, 3, 2, 5, 5]], [[4, 2, 3, 6, 7, 3, 1, 3, 4], [4, 2, 3, 6, 7, 3, 1, 3, 4]], [[3, 5, 7, 0, 5], [3, 5, 7, 0, 5]], [[5, 2, 4, 6, 4], [5, 2, 4, 6, 4]], [[0, 1, 4, 5], [0, 1, 4, 5]], [[1, 3, 5, 5, 5], [1, 3, 5, 5, 5]], [[3, 5, 4, 7], [3, 5, 4, 7]], [[2, 2, 2], [1, -1, 5]], [[4, 11, 6, 3, 11, 6], [4, 11, 6, 3, 11, 6]], [[2, 4, 8], [1, 3, 11, 7]], [[1, 3, 5, 7], [2, 4, 6, 8, 8]], [[1, 5, 7, 1, 7], [1, 5, 7, 1, 7]], [[1, 1, 1, 1], [2, 2, 2, 2]], [[7, 3, 5, 2], [4, 6, 8, 1]], [[1, 9, 11, 13], [2, 4, 6, 8]], [[1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2]], [[2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1]], [[1, 3, 5, 7, 1, 3, 5, 7], [2, 4, 6, 8, 2, 4, 6, 8]], [[1, 2, 3, 4], [5, 6, 7, 8]], [[1, 1, 1, 1], [2, 2, 2, 2, 2, 2]], [[1, 1, 1, 2], [2, 2, 2, 2, 2, 2]], [[1, 1, 1, 2], [2, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 1], [2, 2, 2, 2, 9, 2, 2]], [[1, 1, 1, 3], [2, 2, 2, 2, 2, 2, 2]], [[3, 2, 2, 6, 2], [3, 2, 2, 6, 2]], [[2, 2, 6, 2], [2, 2, 6, 2]], [[1, 1, 0, 1, 1], [1, 1, 0, 1, 1]], [[1, 1, 1, 2, 6, 1, 1], [1, 1, 1, 2, 6, 1, 1]], [[1, 1, 0, 1, 0], [1, 1, 0, 1, 0]], [[1, 5, 1, 0, 1, 1], [1, 5, 1, 0, 1, 1]], [[1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0]], [[4, 2, 2, 2, 2, 2, 2, 2], [4, 2, 2, 2, 2, 2, 2, 2]], [[2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1]], [[2, 2, 0, 6, 2], [2, 2, 0, 6, 2]], [[4, 2, 2, 2, 2, 2, 2, 2, 2], [4, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 0, 1], [1, 1, 0, 1]], [[2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2]], [[5, 6, 2, 8, 2], [5, 6, 2, 8, 2]], [[1, 1, 1, 0, 1], [1, 1, 1, 0, 1]], [[1, 1, 1, 6, 1, 1], [1, 1, 1, 6, 1, 1]], [[4, 7, 7, 8, 1], [7, 3, 5, 2]], [[1, 1, 1, 11, 1], [2, 2, 2, 2, 9, 2, 2]], [[1, 9, 13], [2, 4, 6, 8]], [[5, 6, 6, 2, 8, 2], [5, 6, 6, 2, 8, 2]], [[2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2]], [[1, 1, 1, 9, 6, 1, 1, 1], [1, 1, 1, 9, 6, 1, 1, 1]], [[1, 3, 5, 7, 1, 3, 5, 7, 7, 3], [1, 3, 5, 7, 1, 3, 5, 7, 7, 3]], [[1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2]], [[1, 2, 1, 1, 1], [2, 2, 2, 2]], [[3, 2, 2, 2], [3, 2, 2, 2]], [[1, 1, 1, 1, 9, 6, 1, 1, 1], [1, 1, 1, 1, 9, 6, 1, 1, 1]], [[2, 3, 6, 8], [1, 9, 11, 13]], [[1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0]], [[3, 4, 2, 2, 4], [3, 4, 2, 2, 4]], [[2, 4, 6, 8, 2, 4, 6, 8], [1, 3, 5, 7, 1, 3, 5, 7]], [[3, 4, 2, 2, 4, 2, 4], [3, 4, 2, 2, 4, 2, 4]], [[1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1]], [[2, 4, 6, 8, 1, 4, 6, 8], [1, 3, 5, 7, 1, 3, 5, 7]], [[6, 1, 1, 0, 1], [6, 1, 1, 0, 1]], [[1, 1, 0], [1, 1, 0]], [[9, 6, 1, 1, 0, 1], [9, 6, 1, 1, 0, 1]], [[1, 1, 1, 1], [1, 1, 1, 1]], [[1, 1, 1, 9, 6, 1, 1], [1, 1, 1, 9, 6, 1, 1]], [[3, 4, 2, 2, 4, 3, 2, 4], [3, 4, 2, 2, 4, 3, 2, 4]], [[9, 6, 1, 1, 0, 1, 2], [9, 6, 1, 1, 0, 1, 2]], [[5, 2, 8, 2], [5, 2, 8, 2]], [[4, 7, 7, 8, 5, 1, 7], [4, 7, 7, 8, 5, 1, 7]], [[1, 1, 1, 2], [2, 2, 5, 2, 2, 2, 2]], [[1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0]], [[5, 6, 6, 2, 8, 2, 2], [5, 6, 6, 2, 8, 2, 2]], [[2, 2, 2, 2, 2], [2, 2, 2, 2, 2]], [[7, 3, 5, 2, 2], [7, 3, 5, 2, 2]], [[1, 1, 1, 1, 1], [2, 2, 2, 2]], [[2, 2, 2, 2, 2, 2, 2], [6, 1, 1, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1], [1, 1, 1, 1, 1]], [[2, 4, 6, 8, 8], [2, 4, 6, 8, 8]], [[9, 6, 1, 1, 1, 2], [9, 6, 1, 1, 1, 2]], [[13, 1, 0, 1, 0], [13, 1, 0, 1, 0]], [[6, 1, 3, 5, 7, 1, 9, 7, 5, 7], [2, 4, 6, 2, 4, 6, 8]], [[1, 1, 1, 1], [2, 2, 2, 2, 1, 9, 2, 2]], [[1, 1, 1, 1, 9, 6, 1, 1], [1, 1, 1, 1, 9, 6, 1, 1]], [[1, 0, 1, 1, 1], [2, 2, 2]], [[1, 1, 11, 0, 0, 1, 0], [1, 1, 11, 0, 0, 1, 0]], [[1, 2, 3, 4, 3], [5, 6, 7, 8]], [[3, 3, 2, 2, 2, 2, 2], [3, 3, 2, 2, 2, 2, 2]], [[1, 5, 1, 0, 1, 1, 0], [1, 5, 1, 0, 1, 1, 0]], [[2, 2, 2, 2, 1, 2], [2, 2, 2, 2, 1, 2]], [[3, 2, 2, 2, 2], [3, 2, 2, 2, 2]], [[13, 2, 2, 2, 2], [13, 2, 2, 2, 2]], [[2, 2, 2], [2, 2, 2]], [[4, 7, 7, 8, 13, 5, 1, 7, 7], [4, 7, 7, 8, 13, 5, 1, 7, 7]], [[2, 4, 6, 9, 3, 1], [2, 4, 6, 9, 3, 1]], [[2, 2, 2, 2], [2, 2, 2, 2]], [[1, 2, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1]], [[2, 2, 2, 1, 2], [2, 2, 2, 1, 2]], [[1, 1, 6], [1, 1, 6]], [[9, 6, 1, 1, 0, 1, 5], [9, 6, 1, 1, 0, 1, 5]], [[1, 0, 1, 0, 0], [1, 0, 1, 0, 0]], [[2, 4, 6, 8, 8, 2], [2, 4, 6, 8, 8, 2]], [[3, 2, 2, 2, 2, 3], [3, 2, 2, 2, 2, 3]], [[2, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1]], [[2, 2, 0, 2, 2, 2, 1], [2, 2, 0, 2, 2, 2, 1]], [[1, 2, 1, 1, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1, 1, 1]], [[4, 7, 7, 8, 13, 5, 1, 7, 7, 7], [4, 7, 7, 8, 13, 5, 1, 7, 7, 7]], [[13, 2, 2, 5, 2, 2], [13, 2, 2, 5, 2, 2]], [[6, 1, 0, 1], [6, 1, 0, 1]], [[5, 5, 2, 8, 2], [5, 5, 2, 8, 2]], [[1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1]], [[6, 1, 1, 0, 0], [6, 1, 1, 0, 0]], [[5, 5, 7, 2, 8, 2, 5], [5, 5, 7, 2, 8, 2, 5]], [[2, 5, 2, 2, 2, 2], [2, 5, 2, 2, 2, 2]], [[9, 6, 1, 1, 0], [9, 6, 1, 1, 0]], [[4, 7, 8, 5, 1, 7], [4, 7, 8, 5, 1, 7]], [[9, 6, 1, 1, 0, 2], [9, 6, 1, 1, 0, 2]], [[3, 4, 2, 3, 2, 4, 2, 4, 4], [3, 4, 2, 3, 2, 4, 2, 4, 4]], [[4, 6, 4, 4], [4, 6, 4, 4]], [[4, 7, 7, 8, 1], [4, 7, 7, 8, 1]], [[3, 4, 2, 3, 2, 4, 2, 4, 4, 4], [3, 4, 2, 3, 2, 4, 2, 4, 4, 4]], [[3, 0, 2, 6, 2], [3, 0, 2, 6, 2]], [[2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1]], [[4, 6, 8, 8, 2], [4, 6, 8, 8, 2]], [[2, 4, 6, 8, 8, 2, 8], [2, 4, 6, 8, 8, 2, 8]], [[13, 5, 2, 2, 5, 1, 2], [13, 5, 2, 2, 5, 1, 2]], [[2, 4, 8, 8], [2, 4, 8, 8]], [[1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2]], [[1, 1, 0, 3, 1, 0], [1, 1, 0, 3, 1, 0]], [[4, 7, 7, 8, 13, 5, 1, 7, 7, 13], [4, 7, 7, 8, 13, 5, 1, 7, 7, 13]], [[4, 7, 7, 7, 8, 13, 5, 1, 7, 7, 7], [4, 7, 7, 7, 8, 13, 5, 1, 7, 7, 7]], [[1, 1, 2], [1, 1, 2]], [[9, 6, 1, 0, 1], [9, 6, 1, 0, 1]], [[1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2]], [[1, 9], [2, 4, 6, 8]], [[1, 4, 7, 7, 8, 13, 5, 1, 7, 7, 7], [1, 4, 7, 7, 8, 13, 5, 1, 7, 7, 7]], [[2, 4, 6, 2, 4, 6, 8], [1, 3, 5, 7, 1, 3, 5, 7]], [[2, 2, 2, 0, 6, 2, 2], [2, 2, 2, 0, 6, 2, 2]], [[5, 5, 2, 7, 2], [5, 5, 2, 7, 2]], [[2, 1, 1], [2, 1, 1]], [[1, 5, 1, 0, 1, 1, 1], [1, 5, 1, 0, 1, 1, 1]], [[1, 4, 7, 7, 8, 13, 1, 7, 7, 7], [1, 4, 7, 7, 8, 13, 1, 7, 7, 7]], [[1, 1, 5, 2], [1, 1, 5, 2]], [[1, 3, 7, 1, 3, 5, 7], [2, 4, 6, 8, 2, 4, 6, 8]], [[1, 5, 7, 1, 3, 5, 7], [2, 4, 6, 8, 2, 4, 6, 8]], [[6, 1, 3, 5, 7], [2, 4, 6, 8, 8]], [[2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 2]], [[1, 9], [4, 6, 8]], [[7, 2, 2, 2, 2], [7, 2, 2, 2, 2]], [[2, 4, 6, 5, 3, 1], [2, 4, 6, 5, 3, 1]], [[2, 4, 6, 2, 4, 6, 8], [1, 3, 7, 5, 7, 1, 3, 5, 6]], [[1, 1, 7, 0, 1], [1, 1, 7, 0, 1]], [[6, 1, 4, 5, 7, 1, 9, 7, 5, 7], [6, 1, 4, 5, 7, 1, 9, 7, 5, 7]], [[5, 6, 8, 8], [5, 6, 8, 8]], [[1, 0, 7, 0, 1], [1, 0, 7, 0, 1]], [[3, 0, 2, 7, 2], [3, 0, 2, 7, 2]], [[0, 7, 8, 5, 1, 7, 4], [0, 7, 8, 5, 1, 7, 4]], [[12, 2, 1, 2, 5, 2, 2, 2], [12, 2, 1, 2, 5, 2, 2, 2]], [[1, 2, 3, 4, 3], [6, 7, 8]], [[2, 2, 2, 2, 9, 2, 2], [2, 2, 2, 2, 9, 2, 2]], [[2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2]], [[3, 2, 0, 2], [3, 2, 0, 2]], [[2, 0, 2, 2, 2, 2, 2, 2], [2, 0, 2, 2, 2, 2, 2, 2]], [[13, 1, 0, 1], [13, 1, 0, 1]], [[1, 1, 11, 0, 0, 0, 1, 0, 1], [1, 1, 11, 0, 0, 0, 1, 0, 1]], [[2, 6, 2], [2, 6, 2]], [[2, 2, 0, 6, 2, 0], [2, 2, 0, 6, 2, 0]], [[2, 0, 2, 1, 2, 2, 2, 2, 2, 2], [2, 0, 2, 1, 2, 2, 2, 2, 2, 2]], [[3, 2, 2, 6, 2, 2], [3, 2, 2, 6, 2, 2]], [[1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1]], [[1, 0, 7, 0, 5, 1], [1, 0, 7, 0, 5, 1]], [[1, 9, 13], [2, 4, 6, 6, 8]], [[1, 4, 7, 7, 13, 5, 1, 7, 7, 7], [1, 4, 7, 7, 13, 5, 1, 7, 7, 7]], [[4, 7, 7, 8, 13, 5, 7, 7, 13], [4, 7, 7, 8, 13, 5, 7, 7, 13]], [[1, 2, 1, 1, 1], [2, 2, 2]], [[1, 1, 1, 1, 9, 6, 1, 1, 1, 1, 1], [1, 1, 1, 1, 9, 6, 1, 1, 1, 1, 1]], [[2, 2, 1, 2, 2, 2, 2, 2], [2, 2, 1, 2, 2, 2, 2, 2]], [[6, 1, 3, 5, 7], [6, 1, 3, 5, 7]], [[2, 2, 2, 2, 2, 2, 5, 2], [1, 1, 1, 2]], [[1, 3, 7, 5, 4, 7, 1, 3, 5, 6], [1, 3, 7, 5, 4, 7, 1, 3, 5, 6]], [[2, 4, 6, 6, 9, 3, 1, 6], [2, 4, 6, 6, 9, 3, 1, 6]], [[5, 6, 6, 2, 8, 2, 1], [5, 6, 6, 2, 8, 2, 1]], [[9, 6, 1, 1, 0, 1, 2, 1], [9, 6, 1, 1, 0, 1, 2, 1]], [[2, 1, 1, 1, 1, 1], [2, 2, 2, 2]], [[1, 8, 4, 7, 7, 13, 5, 1, 7, 7, 7, 7], [1, 8, 4, 7, 7, 13, 5, 1, 7, 7, 7, 7]], [[1, 2, 1, 1, 1], [1, 2, 1, 1, 1]], [[2, 2, 3, 2, 2, 2], [2, 2, 3, 2, 2, 2]], [[4, 8, 8, 2], [4, 8, 8, 2]], [[1, 8], [4, 6, 8]], [[5, 6, 6, 3, 8, 2], [5, 6, 6, 3, 8, 2]], [[7, 3, 1, 5, 2, 2, 5], [7, 3, 1, 5, 2, 2, 5]], [[6, 1, 1, 1, 0, 1], [6, 1, 1, 1, 0, 1]], [[9, 0, 6, 13, 1, 1], [9, 0, 6, 13, 1, 1]], [[6, 0, 1, 1], [6, 0, 1, 1]], [[1, 1, 0, 0, 1, 13, 1, 1], [1, 1, 0, 0, 1, 13, 1, 1]], [[8, 1, 2, 1, 1, 1, 1, 1, 2], [8, 1, 2, 1, 1, 1, 1, 1, 2]], [[1, 4, 7, 7, 11, 8, 13, 1, 7, 2, 7, 7], [1, 4, 7, 7, 11, 8, 13, 1, 7, 2, 7, 7]], [[9, 6, 1, 5, 5, 0], [9, 6, 1, 5, 5, 0]], [[5, 4, 6, 4], [5, 4, 6, 4]], [[1, 2, 6, 1, 1, 1, 1, 1, 1], [1, 2, 6, 1, 1, 1, 1, 1, 1]], [[4, 7, 7, 8, 5, 1, 7, 7, 7], [4, 7, 7, 8, 5, 1, 7, 7, 7]], [[2, 4, 13, 8, 8], [2, 4, 13, 8, 8]], [[13, 5, 2, 2, 8, 5, 1, 1], [13, 5, 2, 2, 8, 5, 1, 1]], [[3, 6, 2, 3, 2, 4, 2, 4, 4], [3, 6, 2, 3, 2, 4, 2, 4, 4]], [[1, 1], [1, 1]], [[13, 5, 2, 5, 2, 8, 5, 1, 1], [13, 5, 2, 5, 2, 8, 5, 1, 1]], [[1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0]], [[2, 13, 1, 0, 1, 0], [2, 13, 1, 0, 1, 0]], [[2, 2, 2, 2], [2, 1, 1, 1, 1, 1]], [[9, 6, 1, -1, 1, 0, 1, 2], [9, 6, 1, -1, 1, 0, 1, 2]], [[2, 2, 6, 2, 2, 2], [2, 2, 6, 2, 2, 2]], [[1, 0, 1, 1, 12], [1, 0, 1, 1, 12]], [[2, 4, 6, 8, 8], [1, 3, 7, 3]], [[2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 2, 1, 1, 1]], [[3, 4, 2, 2, 5, 2, 4], [3, 4, 2, 2, 5, 2, 4]], [[3, 5, 2, 2, 4], [3, 5, 2, 2, 4]], [[12, 12, 8], [12, 12, 8]], [[2, 1, 0, 1, 0], [2, 1, 0, 1, 0]], [[1, 5, 0, 1, 1], [1, 5, 0, 1, 1]], [[1, 5, 7, 1, 3, 5, 7, 7], [1, 5, 7, 1, 3, 5, 7, 7]], [[9, 1, 1, 1, 2], [9, 1, 1, 1, 2]], [[1, 2, 1, 1, 1, 1], [1, 2, 1, 1, 1, 1]], [[12, 1, 1, 0, 1, 6], [12, 1, 1, 0, 1, 6]], [[1, 1, 11, 0, 0, 0, 1, 0, 1, 0], [1, 1, 11, 0, 0, 0, 1, 0, 1, 0]], [[5, 5, 2, 9, 2, 5], [5, 5, 2, 9, 2, 5]], [[1, 2, 1, 6, 1, 1, 1, 1, 1, 1, 1], [1, 2, 1, 6, 1, 1, 1, 1, 1, 1, 1]], [[1, 3, 7, 1, 3, 5, 7], [12, 4, 6, 8, 2, 4, 6, 8]], [[2, 4, 6, 2, 4, 6, 8], [1, 3, 7, 5, 7, 3, 5, 6]], [[5, 5, 7, 2, 8, 6, 2, 5], [5, 5, 7, 2, 8, 6, 2, 5]], [[2, 4, 6, 9, 3, 1, 2], [2, 4, 6, 9, 3, 1, 2]], [[2, 4, 8, 2], [2, 4, 8, 2]], [[9, 6, 0, 5, 1, 1, 0, 1], [9, 6, 0, 5, 1, 1, 0, 1]], [[3, 3, 2, 2, 2, 2], [3, 3, 2, 2, 2, 2]], [[6, 0, 1, 1, 6], [6, 0, 1, 1, 6]], [[-1, 7, 8, 5, 1, 7, 5, 4], [-1, 7, 8, 5, 1, 7, 5, 4]], [[9, 6, 1, -1, 0, 1, 2], [9, 6, 1, -1, 0, 1, 2]], [[3, 4, 2, 2, 4, 2], [3, 4, 2, 2, 4, 2]], [[1, 1, 1, 1, 9, 6, 7, 1, 1, 1, 1, 1], [1, 1, 1, 1, 9, 6, 7, 1, 1, 1, 1, 1]], [[2, 4, 1, 1, 1, 1], [2, 2, 2, 2]], [[2, 4, 6, 2, 4, 6, 8], [3, 7, 5, 7, 3, 5, 6]], [[9, 6, 1, 1, 1, 2, 2], [9, 6, 1, 1, 1, 2, 2]], [[2, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2]], [[5, 4, 6, 6, 4, 5], [5, 4, 6, 6, 4, 5]], [[7, 7, 3, 8, 1, 7, 7, 7], [7, 7, 3, 8, 1, 7, 7, 7]], [[5, 6, 13, 8, 8], [5, 6, 13, 8, 8]], [[5, 6, 9, 13, 8, 8], [5, 6, 9, 13, 8, 8]], [[5, 6, 6, 2, 8, 2, 8], [5, 6, 6, 2, 8, 2, 8]], [[2, 13, 1, 1, 0], [2, 13, 1, 1, 0]], [[3, 2, 1, 1, 1, 1, 1, 1, 2], [3, 2, 1, 1, 1, 1, 1, 1, 2]], [[6, 1, 1, 0, 2, 0], [6, 1, 1, 0, 2, 0]], [[1, 2, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1]], [[1, 2, 6, 1, 1, 1, 1, 1], [1, 2, 6, 1, 1, 1, 1, 1]], [[2, 2, 2, 2, 2, 2, 5, 2], [2, 2, 2, 2, 2, 2, 5, 2]], [[1, 5, 1, 0, 1, 1, 0, 1], [1, 5, 1, 0, 1, 1, 0, 1]], [[2, 1, 1, 5, 2], [2, 1, 1, 5, 2]], [[1, 8], [4, 6, 8, 4]], [[1, 1, 1, 9, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2]], [[6, 6, 8, 8], [6, 6, 8, 8]], [[13, 2, 2, 5, 5, 2, 2], [13, 2, 2, 5, 5, 2, 2]], [[1, 1, 2, 1, 1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1, 1]], [[1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0]], [[2, 2, 2, 2, 2, 2, 5, 2, 2], [1, 1, 1, 2]], [[1, 0, 0, 1], [1, 0, 0, 1]], [[13, 1, 1], [13, 1, 1]], [[2, 2, 2, 2], [2, 1, 1, 1, 2, 1, 1]], [[1, 6], [1, 6]], [[1, 2, 7, 5, 4, 7, 1, 3, 5, 6], [1, 2, 7, 5, 4, 7, 1, 3, 5, 6]], [[4, 9, 11, 10, 13], [4, 9, 11, 10, 13]], [[9, 6, 0, 0, 5, 1, 1, 0, 1], [9, 6, 0, 0, 5, 1, 1, 0, 1]], [[1, 1, 1, 9, 6, 1, 1, 1, 1, 1], [1, 1, 1, 9, 6, 1, 1, 1, 1, 1]], [[1, 0, 1, 0], [1, 0, 1, 0]], [[6], [6]], [[13, 2, 2, 5, 2, 2, 2], [13, 2, 2, 5, 2, 2, 2]], [[5, 5, 2, 7, 2, 7], [5, 5, 2, 7, 2, 7]], [[5, 5, 7, 2, 8, 11, 6, 2, 5], [5, 5, 7, 2, 8, 11, 6, 2, 5]], [[2, 8, 2], [2, 8, 2]], [[1, 1, 2], [2, 2, 2, 2, 2, 2]], [[1, 1, -1, 1, 6, 1, 1], [1, 1, -1, 1, 6, 1, 1]], [[3, -1, 2, 6, 2, 3], [3, -1, 2, 6, 2, 3]], [[4, 7, 7, 7, 8, 13, 5, 1, 8, 7], [4, 7, 7, 7, 8, 13, 5, 1, 8, 7]], [[1, 3, 5, 7, 1, 3, 5, 7, 5], [2, 4, 6, 2, 4, 6, 8]], [[1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2]], [[1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1]], [[5, 2, 8, 2, 2], [5, 2, 8, 2, 2]], [[13, 2, 13], [13, 2, 13]], [[1, 1, 1, 1, 2, 9, 6, 1, 1], [1, 1, 1, 1, 2, 9, 6, 1, 1]], [[1, 3, 5, 7, 1, 3, 5, 7], [2, 4, 6, 12, 2, 4, 6, 8]], [[6, 1, 1, 0], [6, 1, 1, 0]], [[2, 2, 5, 2, 2], [2, 2, 5, 2, 2]], [[6, 1, 0, 2, 0], [6, 1, 0, 2, 0]], [[5, 5, 7, 2, 2, 5, 5], [5, 5, 7, 2, 2, 5, 5]], [[4, 6, 8, 8, 2, 8], [4, 6, 8, 8, 2, 8]], [[2, 2, 0, 2, 2, 2, 2], [2, 2, 0, 2, 2, 2, 2]], [[1, 1, 1, 2, 6, 1, 1, 6], [1, 1, 1, 2, 6, 1, 1, 6]], [[9, 6, 6, 1, 1, 2], [9, 6, 6, 1, 1, 2]], [[1, 2, 3, 4, 3, 1], [5, 6, 7, 8]], [[2, 2, 2, 2, 2, 2, 7, 2, 2], [2, 2, 2, 2, 2, 2, 7, 2, 2]], [[0, 1, 6, 0, 1, 0, 0, 0], [0, 1, 6, 0, 1, 0, 0, 0]], [[2, 5, 6, 2, 4, 6, 8], [2, 5, 6, 2, 4, 6, 8]], [[13, 13, 5, 2, 2, 8, 5, 1, 1], [13, 13, 5, 2, 2, 8, 5, 1, 1]], [[1, 3, 7, 1, 3, 5, 7, 1], [1, 3, 7, 1, 3, 5, 7, 1]], [[6, 1, 2, 0, 3], [6, 1, 2, 0, 3]], [[1, 2, 7, 5, 4, 7, 1, 3, 5, 5], [1, 2, 7, 5, 4, 7, 1, 3, 5, 5]], [[-1, 4, 13, 8, 8], [-1, 4, 13, 8, 8]], [[3, 4, 2, 1, 2, 5, 2, 4], [3, 4, 2, 1, 2, 5, 2, 4]], [[9, 6, 1, 0], [9, 6, 1, 0]], [[2, 4, 1, 1, 1, 1], [2, 2, 2, 2, 2]], [[2, 4, 6, 2, 4, 6, 8, 6], [2, 4, 6, 2, 4, 6, 8, 6]], [[9, 6, 1, -1, 0, 1, 2, 6], [9, 6, 1, -1, 0, 1, 2, 6]], [[2, 2, 2, 2, 2, 5, 2], [2, 2, 2, 2, 2, 5, 2]], [[13, 1, 1, 13], [13, 1, 1, 13]], [[3, 3, 10, 2, 2, 6, 2, 2, 6], [3, 3, 10, 2, 2, 6, 2, 2, 6]], [[2, 2, 0, 2], [2, 2, 0, 2]], [[1, 9], [1, 9]], [[13, 2, 2, 2, 2, 2], [13, 2, 2, 2, 2, 2]], [[1, 2], [1, 2]], [[6, 1, 1, 1, 0, 1, 1], [6, 1, 1, 1, 0, 1, 1]], [[3, 2, 1, 1, 1, 1, 0, 1, 2], [3, 2, 1, 1, 1, 1, 0, 1, 2]], [[2, -1, 1, 1, 1, 1], [2, -1, 1, 1, 1, 1]], [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1, 1, 1, 1]], [[2, 4, 6, 8, 2, 4, 6, 8, 8], [2, 4, 6, 8, 2, 4, 6, 8, 8]], [[2, 2, 3, 2, 2, 2, 2], [2, 2, 3, 2, 2, 2, 2]], [[4, 7, 7, 5, 10, 7, 7, 7], [4, 7, 7, 5, 10, 7, 7, 7]], [[2, 2, 2, 2, 2, 2, 6], [2, 2, 2, 2, 2, 2, 6]], [[2, 1, 0, 0, 1, 1, 1, 2], [2, 1, 0, 0, 1, 1, 1, 2]], [[1, 1, 0, 0, 1, 1, -1, 1], [1, 1, 0, 0, 1, 1, -1, 1]], [[1, 5, 1, 5, 8, 7, 2, 2, 5, 5], [1, 5, 1, 5, 8, 7, 2, 2, 5, 5]], [[4, 7, 7, 7, 8, 1, 7, 7, 7], [4, 7, 7, 7, 8, 1, 7, 7, 7]], [[2, 4, 8, 6, 8, 8, 2], [2, 4, 8, 6, 8, 8, 2]], [[1, 4, 7, 6, 7, 13, 5, 1, 7, 7, 7], [1, 4, 7, 6, 7, 13, 5, 1, 7, 7, 7]], [[9, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1]], [[6, 0, 1, 1, 0, 0], [6, 0, 1, 1, 0, 0]], [[7, 2, 2, 2, 2, 2], [7, 2, 2, 2, 2, 2]], [[2, 4, 6, 9, 9, 3, 1, 2], [2, 4, 6, 9, 9, 3, 1, 2]], [[1, 1, -1, 1, 1, 9, 6, 1, 1], [1, 1, -1, 1, 1, 9, 6, 1, 1]], [[1, 1, 1, 2, 6, 1, 1, 2], [1, 1, 1, 2, 6, 1, 1, 2]], [[4, 7, 7, 8, 13, 4, 5, 1, 7, 7], [4, 7, 7, 8, 13, 4, 5, 1, 7, 7]], [[10, 1, 11, 0, 0, -1, 1, 0], [10, 1, 11, 0, 0, -1, 1, 0]], [[13, 5, 1, 0, 1, 1], [13, 5, 1, 0, 1, 1]], [[6, 1, 1, 1, 0, 0], [6, 1, 1, 1, 0, 0]], [[1, 9, 9, 13], [2, 4, 6, 8]], [[4, 2, 1, 7, 2, 2], [4, 2, 1, 7, 2, 2]], [[2, 4, 6, 8, 2, 4, 6, 8, 8, 6], [2, 4, 6, 8, 2, 4, 6, 8, 8, 6]], [[1, 1, 1, 6, 1], [2, 2, 2, 9, 2, 2]], [[1, 3, 7, 4, 6, 1, 3, 5, 6], [1, 3, 7, 4, 6, 1, 3, 5, 6]], [[2, 2, 2, 2, 2, 3, 2, 2, 2], [1, 1, 1, 2]], [[3, 2, 2, 6, 2, 2, 2], [3, 2, 2, 6, 2, 2, 2]], [[13, 13], [13, 13]], [[3, 4, 2, 2, 4, 3], [3, 4, 2, 2, 4, 3]], [[4, 7, 7, 8, 13, 5, 1, 7, 7, 13, 8], [4, 7, 7, 8, 13, 5, 1, 7, 7, 13, 8]], [[9, 5, 1, 1, 1, 2], [9, 5, 1, 1, 1, 2]], [[2, 1, 1, 1, 0, 1, 0], [2, 1, 1, 1, 0, 1, 0]], [[7, 3, 2, 2, 2, 9, 2, 2], [7, 3, 2, 2, 2, 9, 2, 2]], [[2, 4, 6, 8, 2, 4, 6, 8, 8, 6, 6, 4], [2, 4, 6, 8, 2, 4, 6, 8, 8, 6, 6, 4]], [[8, 12, -1, 1, -1, 2, 5, 2, 2, 8], [8, 12, -1, 1, -1, 2, 5, 2, 2, 8]], [[5, 5, 7, 2, 6, 2, 5], [5, 5, 7, 2, 6, 2, 5]], [[1, 3, 5, 12, 7], [2, 4, 6, 8]], [[13, 1, 1, 1], [13, 1, 1, 1]], [[13, 2, 14, 13], [13, 2, 14, 13]], [[1, 3, 5, 7, 1, 3, 5, 7], [2, 4, 6, 8, 2, 4, 6, 8, 4]], [[9, 6, 1, 1, 2, 0, 1], [9, 6, 1, 1, 2, 0, 1]], [[13, 2, 2, 2, 2, 2, 2], [13, 2, 2, 2, 2, 2, 2]], [[0, 1, 1, 6], [0, 1, 1, 6]], [[1, 1, 6, 1, 6, 1, 1], [1, 1, 6, 1, 6, 1, 1]], [[9, 5, 1, 1, 1, 2, 1], [9, 5, 1, 1, 1, 2, 1]], [[4, 11, 2, 2, 2, 2, 2, 2], [4, 11, 2, 2, 2, 2, 2, 2]], [[1, 2, 1, 2], [2, 2, 5, 2, 2, 2, 2]], [[2, 4, 6, 8, 2, 3, 6, 8], [1, 3, 5, 7, 1, 3, 5, 7]], [[1, 12, 1, 1, 2], [2, 2, 2, 2, 2, 2]], [[1, 2, 1, 2], [1, 2, 1, 2]], [[9, 1, 1, 0], [9, 1, 1, 0]], [[4, 7, 7, 8, 5, 1, 7, 9, 7, 4], [4, 7, 7, 8, 5, 1, 7, 9, 7, 4]], [[9, 6, 1], [9, 6, 1]], [[6, 6, 8, 8, 8], [6, 6, 8, 8, 8]], [[2, 4, 6, 8, 2, 4, 8, 8], [2, 4, 6, 8, 2, 4, 8, 8]], [[7, 2, 2, 7], [7, 2, 2, 7]], [[1, 3], [1, 3]], [[5, 5, 8, 2], [5, 5, 8, 2]], [[2, 1, 2, 1, 1, 0, 1, 0], [2, 1, 2, 1, 1, 0, 1, 0]], [[2, 2, 0, 2, 2], [2, 2, 0, 2, 2]], [[4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]], [[2, 5, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1]], [[2, 2, 2, 2, 2, 2, 2, 2], [0, 1, 1, 2, 2]], [[1, 5, 1, 0, 1], [1, 5, 1, 0, 1]], [[2, 13, 1, 0], [2, 13, 1, 0]], [[5, 6, 7, 8, 8], [5, 6, 7, 8, 8]], [[5, 5, 7, 2, 6, 2, 5, 6], [5, 5, 7, 2, 6, 2, 5, 6]], [[3, 4, 2, 2, 4, 3, 2, 4, 2], [3, 4, 2, 2, 4, 3, 2, 4, 2]], [[0, 1, 6, 0, 1, 0, 0, 0, 1], [0, 1, 6, 0, 1, 0, 0, 0, 1]], [[12, 4, 6, 8, 2, 4, 6, 8, 4], [12, 4, 6, 8, 2, 4, 6, 8, 4]], [[2, 6, 9, 3, 1, 5, 2], [2, 6, 9, 3, 1, 5, 2]], [[8, 6, 1, 4, 5, 7, 1, 9, 6, 7, 5, 7], [8, 6, 1, 4, 5, 7, 1, 9, 6, 7, 5, 7]], [[1, 2, 3, 4, 3], [5, 5, 7, 8, 8]], [[5, 5, 7, 2, 8, 2, 5, 2], [5, 5, 7, 2, 8, 2, 5, 2]], [[2, 4, 6, 6, 3, 9, 3, 1, 6, 4], [2, 4, 6, 6, 3, 9, 3, 1, 6, 4]], [[2, 2, 4], [2, 2, 4]], [[4, 7, 7, 8, 5, 1, 7, 7], [4, 7, 7, 8, 5, 1, 7, 7]], [[6, 1, 3, 1, 2, 0, 1, 1], [6, 1, 3, 1, 2, 0, 1, 1]], [[6, 6, 2, 8, 2, 2], [6, 6, 2, 8, 2, 2]], [[2, 4, 6, 2, 4, 9, 6, 8, 8], [1, 3, 7, 5, 7, 1, 3, 5, 6]], [[13, 5, 2, 5, 2, 8, 5, 1, 1, 5], [13, 5, 2, 5, 2, 8, 5, 1, 1, 5]], [[2, 2, 3, 2, 2, 2, 2, 3], [2, 2, 3, 2, 2, 2, 2, 3]], [[1, 1, 0, 9, 1], [1, 1, 0, 9, 1]], [[14, 5, 2, 5, 2, 8, 5, 1, 1, 7, 5], [14, 5, 2, 5, 2, 8, 5, 1, 1, 7, 5]], [[12, 2, 2, 1, 2, 5, 2, 2], [12, 2, 2, 1, 2, 5, 2, 2]], [[5, 6, 6, 3, 8, 2, 5], [5, 6, 6, 3, 8, 2, 5]], [[2, 13, 8, 8], [2, 13, 8, 8]], [[2, 3, 4], [5, 6, 7, 8]], [[1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1]], [[5, 7, 1, 3, 5, 7, 7], [5, 7, 1, 3, 5, 7, 7]], [[2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 2, 2, 1]], [[1, 2, 3, 5, 3, 2], [5, 5, 7, 8, 8]], [[2, 2, 1, 2, 2, 2, 2], [2, 2, 1, 2, 2, 2, 2]], [[1, 1, 1, 7, 1, 6, 1, 1, 1], [1, 1, 1, 7, 1, 6, 1, 1, 1]], [[1, 4, 7, 1, 3, 5, 7, 7], [2, 4, 6, 8, 2, 4, 6, 8]], [[9, 6, 1, 1, 0, 2, 9], [9, 6, 1, 1, 0, 2, 9]], [[13, 2, 5, 2, 2], [13, 2, 5, 2, 2]], [[13, 5, 2, 5, 2, 8, 5, 1, 1, 0, 5], [13, 5, 2, 5, 2, 8, 5, 1, 1, 0, 5]], [[5, 6, 6, 2, 11, 8, 2, 8, 2], [5, 6, 6, 2, 11, 8, 2, 8, 2]], [[1, 1, 2, 1], [2, 2, 2, 2, 2, 2]], [[4, 8, 5, 1, 7], [4, 8, 5, 1, 7]], [[2, 2, 1, 2, 2, 1, 2, 4, 2, 2], [2, 2, 1, 2, 2, 1, 2, 4, 2, 2]], [[2, 4, 6, 8, 2, 4, 6, 8], [1, 3, 5, 7, 1, 3, 5, 7, 7]], [[0, 2, 6, 1, 1, 1, 1, 1], [0, 2, 6, 1, 1, 1, 1, 1]], [[5, 1, 5, 2, 8, 2], [5, 1, 5, 2, 8, 2]], [[14, 2, 0, 2, 2, 2, 1], [14, 2, 0, 2, 2, 2, 1]], [[1, 9, 2, 1, 1, 1, 1], [1, 9, 2, 1, 1, 1, 1]], [[1, 1, 9, 4, 7, 7, 13, 5, 1, 7, 7, 7, 1], [1, 1, 9, 4, 7, 7, 13, 5, 1, 7, 7, 7, 1]], [[3, 6, 3, 2, 3, 2, 4, 5, 4], [3, 6, 3, 2, 3, 2, 4, 5, 4]], [[7, 7, 8, 13, 1, 12, 13, 8], [7, 7, 8, 13, 1, 12, 13, 8]], [[2, 2, 2, 2, 2, 1], [1, 1]], [[1, 1, 7, 13, 5, 1, 7, 7, 7, 1], [1, 1, 7, 13, 5, 1, 7, 7, 7, 1]], [[0, 1, 1, 2, 2], [0, 1, 1, 2, 2]], [[9, 2, 4, 8, 2], [9, 2, 4, 8, 2]], [[4, 8, 5, 7, 5], [4, 8, 5, 7, 5]], [[13, 1, 1, 13, 1], [13, 1, 1, 13, 1]], [[1, 8, 2], [1, 8, 2]], [[2, 4, 6, 2, 4, 6, 8], [1, 3, 5, 7, 1, 3, 5, 7, 7]], [[6, 1, 3, 5, 7, 1, 9, 7, 5, 7], [2, 10, 6, 2, 4, 6, -1, 8]], [[3, -1, 2, 2, 6, 2, 7], [3, -1, 2, 2, 6, 2, 7]], [[3, 2, 6, 2], [3, 2, 6, 2]], [[2, 2, 6, 2, 6], [2, 2, 6, 2, 6]], [[1, 4, 7, 7, 8, 13, 12, 1, 7, 7], [1, 4, 7, 7, 8, 13, 12, 1, 7, 7]], [[1, 3, 5, 6, 0, 7, 1, 3, 5, 7, 5, 1], [1, 3, 5, 6, 0, 7, 1, 3, 5, 7, 5, 1]], [[1, 2, 3, 4, 3, 1], [1, 2, 3, 4, 3, 1]], [[2, 4, 6, 2, 4, 6], [1, 3, 5, 7, 1, 3, 5, 7, 7]], [[3, 4, 2, 2, 4, 3, 2, 5], [3, 4, 2, 2, 4, 3, 2, 5]], [[2, 4, 6, 8, 2, 4, 6, 8], [2, 4, 6, 8, 2, 4, 6, 8]], [[2, 8, 6, 8], [2, 8, 6, 8]], [[1, 2, 3, 5, 2], [5, 5, 7, 8, 8]], [[1, 12, 1, 1, 2], [2, 2, 2, 2, 1, 2]], [[2, 0, 2, 2, 2, 1], [2, 0, 2, 2, 2, 1]], [[1, 1, 1, 6, 1], [1, 1, 1, 6, 1]], [[1, 2, 1, 1, 1, 1, 2, 1, 1, 1], [1, 2, 1, 1, 1, 1, 2, 1, 1, 1]], [[1, 1, 1, 1, 2, 9, 6, 1, 1, 1], [1, 1, 1, 1, 2, 9, 6, 1, 1, 1]], [[0, 1, 0], [0, 1, 0]], [[3, 2, 0, 5, 0], [3, 2, 0, 5, 0]], [[1, 2, 3, 4, 3, 2], [6, 7, 8]], [[9, 6, 1, -1, 1, 0, 1, 2, 2], [9, 6, 1, -1, 1, 0, 1, 2, 2]], [[1, 3, 4, 2, 1, 3, 5, 7], [1, 3, 4, 2, 1, 3, 5, 7]], [[13, 9, 7, 11, 13], [13, 9, 7, 11, 13]], [[1, 2, 1, 6, 1, 1, 1, 0, 13, 1, 1], [1, 2, 1, 6, 1, 1, 1, 0, 13, 1, 1]], [[2, 2, 2, 2, 2, 6], [2, 2, 2, 2, 2, 6]], [[1], [2, 2, 2, 2, 2, 2, 2]], [[4, 2, 2, 3, 2, 2, 2, 2, 2, 2], [4, 2, 2, 3, 2, 2, 2, 2, 2, 2]], [[5, 6, 7, 8, 7], [5, 6, 7, 8, 7]], [[1, 12, 1, 1, 2], [2, 2, 2, 2, 2, 2, 2]], [[2, 4, 6, 8, 2, 4, 6, 8, 8, 8], [2, 4, 6, 8, 2, 4, 6, 8, 8, 8]], [[9, 11, 8], [9, 11, 8]], [[-1, 13, 1, 0, 1, 0], [-1, 13, 1, 0, 1, 0]], [[4, 7, 7, 8, 13, 4, 5, 1, 7, 7, 8], [4, 7, 7, 8, 13, 4, 5, 1, 7, 7, 8]], [[13, 2, 3, 5, 2, 2], [13, 2, 3, 5, 2, 2]], [[2, 1, 6, 8, 2, 3, 6, 8], [1, 3, 5, 7, 1, 3, 5, 7]], [[6, 6, 3, 8, 2, 5, 5], [6, 6, 3, 8, 2, 5, 5]], [[1, 0, 1], [1, 0, 1]], [[5, 6, 2, 8], [5, 6, 2, 8]], [[9, 6, 1, 1, 0, 2, 8], [9, 6, 1, 1, 0, 2, 8]], [[9, 14, 6, 10, 1, 0], [9, 14, 6, 10, 1, 0]], [[2, 4], [2, 4]], [[3, 3, 2, 2, 2, 3], [3, 3, 2, 2, 2, 3]], [[1, 3, 7, 5, 7, 1, 4, 5, 6], [1, 3, 7, 5, 7, 1, 4, 5, 6]], [[1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0]], [[9, 6, 5, 1, 1, 0, 5], [9, 6, 5, 1, 1, 0, 5]], [[2, 6, 3, 1, 5, 2, 2], [2, 6, 3, 1, 5, 2, 2]], [[4, 7, 8, 5, 6, 1, 7, 1], [4, 7, 8, 5, 6, 1, 7, 1]], [[1, 1, 11, 0, 0, 1, 0, 1], [1, 1, 11, 0, 0, 1, 0, 1]], [[3, 0, 2, 7], [3, 0, 2, 7]], [[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]], [[12, 2, 4, 8, 8], [12, 2, 4, 8, 8]], [[1, 9, 13, 13], [2, 4, 6, 6, 8]], [[1, 2, 1, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1, 1]], [[1, 0, 0, 1, 13, 1], [1, 0, 0, 1, 13, 1]], [[2, 0, 2, 2, 1], [2, 0, 2, 2, 1]], [[2, 2, 2, 2, 2, 2, 2], [11, 1, 1, 1, 1]], [[2, 2, 3, 1, 2, 11, 2, 2, 2], [2, 2, 3, 1, 2, 11, 2, 2, 2]], [[13, 1, 0, 13], [13, 1, 0, 13]], [[1, 1, 11, 0, 0, 1, 0, 0, 0], [1, 1, 11, 0, 0, 1, 0, 0, 0]], [[6, 6, 2, 8, 2, 2, 6], [6, 6, 2, 8, 2, 2, 6]], [[1, 1, 11, 5, 0, 1, 0, 0, 0], [1, 1, 11, 5, 0, 1, 0, 0, 0]], [[1, 0, 0, 1, 1], [1, 0, 0, 1, 1]], [[3, 2, 2, 4], [3, 2, 2, 4]], [[1], [1]], [[1, 1, 2], [2, 2, 2, 2, 2, 2, 2]], [[5, 8, 3, 6, 6, 2, 11, 8, 2, 8], [5, 8, 3, 6, 6, 2, 11, 8, 2, 8]], [[5, 6, 2, 8, 10], [5, 6, 2, 8, 10]], [[1, 0, 12, 1], [1, 0, 12, 1]], [[0, 1, 6, 0, 1, 0, 0], [0, 1, 6, 0, 1, 0, 0]], [[4, 7, 7, 8, 5, 1, 7, 9, 4], [4, 7, 7, 8, 5, 1, 7, 9, 4]], [[8, 6, 1, 4, 5, 7, 1, 9, 6, 7, 7], [8, 6, 1, 4, 5, 7, 1, 9, 6, 7, 7]], [[1, 4, 6, 8, 8], [1, 3, 7, 3]], [[2, 4, 6, 5, 0, 1], [2, 4, 6, 5, 0, 1]], [[9, 1, 5, 2, 2, 2], [9, 1, 5, 2, 2, 2]], [[4, 7, 8, 5, 1, 7, 7], [4, 7, 8, 5, 1, 7, 7]], [[10, 2, 5, 2, 2], [10, 2, 5, 2, 2]], [[2, 2, 2, 2, 2, 3, 2, 2, 2, 2], [2, 2, 2, 2, 2, 3, 2, 2, 2, 2]], [[0, 0, 2, 6, 1, 1, 1, 1], [0, 0, 2, 6, 1, 1, 1, 1]], [[2, 2, 13, 8], [2, 2, 13, 8]], [[5, 8, 3, 6, 6, 2, 11, 3, 2, 8], [5, 8, 3, 6, 6, 2, 11, 3, 2, 8]], [[3, 4, 2, 7, 2, 4, 3, 2, 4], [3, 4, 2, 7, 2, 4, 3, 2, 4]], [[1, 3, 5, 12, 7, 12, 12], [1, 3, 5, 12, 7, 12, 12]], [[3], [5]], [[6], [8]], [[1, 3, 5], [2, 4]], [[1, 3], [2, 4, 6]], [[1, 3, 5], [7, 9, 11]], [[2, 4, 6], [8, 10, 12]], [[1, 3, 5, 7, 9], [2, 4, 6, 8, 10]], [[1, 1, 1], [2, 2, 1, 2]], [[3, 2, 2, 2, 2, 2, 2, 2, 2], [3, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 2, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2]], [[9, 11, 13], [9, 11, 13]], [[2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1]], [[3, 11, 13], [3, 11, 13]], [[12, 9, 11, 13], [12, 9, 11, 13]], [[3, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2], [3, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2]], [[2, 2], [2, 2]], [[1, 3, 5, 4, 7], [2, 4, 6, 9, 8]], [[3, 11, 13, 5, 11, 11], [3, 11, 13, 5, 11, 11]], [[2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1]], [[2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 11, 1, 1, 1]], [[9, 11, 2, 13], [9, 11, 2, 13]], [[3, 11, 13, 5, 11, 11, 13], [3, 11, 13, 5, 11, 11, 13]], [[2, 4, 6, 8, 7], [2, 4, 6, 8, 7]], [[3, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2], [3, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2]], [[9, 11, 10, 13, 11], [9, 11, 10, 13, 11]], [[9, 11], [9, 11]], [[9, 10, 2, 11, 13], [9, 10, 2, 11, 13]], [[1, 1, 1, 1, 1], [2, 2, 2, 1, 2]], [[1, 1, 1, 11, 1, 1, 1], [1, 1, 1, 11, 1, 1, 1]], [[10, 2, 7, 13, 13], [10, 2, 7, 13, 13]], [[5, 2, 8, 1], [5, 2, 8, 1]], [[1, 5, 7, 1, 3, 5, 7, 3], [2, 4, 6, 8, 2, 4, 6, 8]], [[1, 1, 1], [1, 1, 1]], [[2, 2, 2, 2, 2, 2], [1, 1, 1, 11, 1, 1, 1]], [[5, 2, 8, 0], [5, 2, 8, 0]], [[11, 11], [11, 11]], [[2, 3, 2], [2, 3, 2]], [[2, 4, 7, 8, 7, 7], [2, 4, 7, 8, 7, 7]], [[12, 9, 11, 10, 13, 9], [12, 9, 11, 10, 13, 9]], [[2, 2, 11, 2, 2, 3, 2], [1, 1, 1, 1, 1, 1, 1]], [[9, 6, 0, 0], [9, 6, 0, 0]], [[9, 10, 2, 11], [9, 10, 2, 11]], [[9, 10, 5, 2, 11], [9, 10, 5, 2, 11]], [[1, 5, 7, 1, 3, 5, 7, 3, 5], [2, 4, 6, 8, 2, 4, 6, 8]], [[1, 1, 1, 1, 1], [2, 2, 1, 2, 1, 2]], [[5, 2, 8, 4, 1], [5, 2, 8, 4, 1]], [[1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1]], [[1, 5, 7, 1, 3, 6, 7, 3, 5], [1, 5, 7, 1, 3, 6, 7, 3, 5]], [[9, 0, 10, 2, 11], [9, 0, 10, 2, 11]], [[2, 8, 0], [2, 8, 0]], [[1, 8, 3, 4], [5, 6, 7, 8]], [[3, 13, 5, 11, 11, 13], [3, 13, 5, 11, 11, 13]], [[3, 2, 2, 2, 2, 2, 2, 2, 2, 2], [3, 2, 2, 2, 2, 2, 2, 2, 2, 2]], [[9, 11, 10, 9, 11, 13], [9, 11, 10, 9, 11, 13]], [[3, 11, 13, 11, 5, 11, 11], [3, 11, 13, 11, 5, 11, 11]], [[5, 8, 4, 1], [5, 8, 4, 1]], [[1, 1, 1], [2, 2, 2, 2, 2, 2, 2]], [[3, 11, 13, 11, 5, 10, 11], [3, 11, 13, 11, 5, 10, 11]], [[9, 6, 11, 13, 10], [9, 6, 11, 13, 10]], [[1, 1, 1, 2, 1], [2, 2, 2, 2, 2, 2, 2]], [[10, 2], [10, 2]], [[3, 4, 13, 11, 5, 10, 11], [3, 4, 13, 11, 5, 10, 11]], [[8, 11, 10, 10, 11, 13], [8, 11, 10, 10, 11, 13]], [[1, 1, 1, 1, 1, 1, 1, 1, 11], [1, 1, 1, 1, 1, 1, 1, 1, 11]], [[9, 2, 11, 13], [9, 2, 11, 13]], [[9, 10, 2, 11, 10], [9, 10, 2, 11, 10]], [[1, 1, 1, 11, 11, 1, 1, 1], [1, 1, 1, 11, 11, 1, 1, 1]], [[8, 9, 11, 2, 13, 11], [8, 9, 11, 2, 13, 11]], [[1, 5, 7, 1], [1, 5, 7, 1]], [[5, 2, 8, 1, 5], [5, 2, 8, 1, 5]], [[9, 6, 11, 13, 10, 9], [9, 6, 11, 13, 10, 9]], [[9, 11, 13, 9], [9, 11, 13, 9]], [[1, 5, 7, 1, 3, 5, 7, 3, 7, 3], [1, 5, 7, 1, 3, 5, 7, 3, 7, 3]], [[1, 5, 7], [1, 5, 7]], [[5, 6, 7, 8], [5, 6, 7, 8]], [[3, 12, 11], [3, 12, 11]], [[1, 5, 7, 1, 3, 6, 7, 5], [1, 5, 7, 1, 3, 6, 7, 5]], [[9, 11, 2, 14], [9, 11, 2, 14]], [[3, 12, 11, 12, 12], [3, 12, 11, 12, 12]], [[9, 0, 10, 5, 2, 11], [9, 0, 10, 5, 2, 11]], [[9], [9]], [[1, 5, 7, 1, 3, 10, 6, 7, 3, 5], [1, 5, 7, 1, 3, 10, 6, 7, 3, 5]], [[1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1]], [[10, 9, 10, 2, 11, 10], [10, 9, 10, 2, 11, 10]], [[2, 2, 2, 2, 2], [1, 1, 8, 11, 1, 1, 1]], [[3, 2, 2, 2, 2, 2, 2, 2, 6, 2], [3, 2, 2, 2, 2, 2, 2, 2, 6, 2]], [[2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 11, 1, 1, 1]], [[1, 5, 7, 1, 3, 5, 7, 3, 2, 7, 3], [1, 5, 7, 1, 3, 5, 7, 3, 2, 7, 3]], [[3, 11, 13, 11, 5, 10, 11, 13], [3, 11, 13, 11, 5, 10, 11, 13]], [[2, 2, 5, 2, 2, 2, 2, 2, 2], [2, 2, 5, 2, 2, 2, 2, 2, 2]], [[11, 3, 12], [11, 3, 12]], [[8, 10, 11, 13], [8, 10, 11, 13]], [[2, 2, 2, 2, 2], [1, 12, 8, 11, 1, 1, 1]], [[1, 1, 1, 1], [2, 2, 2]], [[9, 11, 11, 13, 13], [9, 11, 11, 13, 13]], [[5, 2, 8, 1, 8, 8], [5, 2, 8, 1, 8, 8]], [[5, 2, 8, 1, 8, 8, 2], [5, 2, 8, 1, 8, 8, 2]], [[1, 1, 11, 11, 1, 1, 1], [1, 1, 11, 11, 1, 1, 1]], [[2, 8], [2, 8]], [[2, 6, 8, 2, 10, 4, 6, 8], [2, 6, 8, 2, 10, 4, 6, 8]], [[3, 11, 13, 5, 11, 13], [3, 11, 13, 5, 11, 13]], [[3, 11, 13, 5, 11, 11, 11], [3, 11, 13, 5, 11, 11, 11]], [[11, 13, 9], [11, 13, 9]], [[9, 6, 11, 13, 1, 9], [9, 6, 11, 13, 1, 9]], [[2, 8, 0, 8], [2, 8, 0, 8]], [[9, 9, 11, 10, 13, 11], [9, 9, 11, 10, 13, 11]], [[1, 7, 1], [1, 7, 1]], [[1, 12, 13, 8, 11, 1, 1, 1, 1], [1, 12, 13, 8, 11, 1, 1, 1, 1]], [[1, 5, 7, 1, 3, 2, 5, 7, 3, 2, 7, 3], [1, 5, 7, 1, 3, 2, 5, 7, 3, 2, 7, 3]], [[11, 9], [11, 9]], [[5, 2, 1, 5, 1], [5, 2, 1, 5, 1]], [[9, 0, 10, 10, 11], [9, 0, 10, 10, 11]], [[1, 5, 7, 1, 3, 2, 5, 7, 3, 2, 7, 7, 3, 7], [1, 5, 7, 1, 3, 2, 5, 7, 3, 2, 7, 7, 3, 7]], [[8, 2, 8, 1, 5], [8, 2, 8, 1, 5]], [[8, 10, 10, 13, 10], [8, 10, 10, 13, 10]], [[10, 9], [10, 9]], [[7, 2, 11, 13], [7, 2, 11, 13]], [[12, 9, 11, 13, 10, 13, 13, 9], [12, 9, 11, 13, 10, 13, 13, 9]], [[2, 2, 2, 2, 2, 2, 2], [0, 1, 1, 1, 1, 1]], [[8, 2, 8, 1, 5, 8], [8, 2, 8, 1, 5, 8]], [[2, 2, 4, 6, 8], [2, 2, 4, 6, 8]], [[1, 1, 2, 1, 1, 7, 1], [2, 2, 2, 2, 2, 3, 2]], [[10, 9, 6, 10, 13, 1, 9], [10, 9, 6, 10, 13, 1, 9]], [[9, 0, 0], [9, 0, 0]], [[13, 9, 11, 13], [13, 9, 11, 13]], [[1, 5], [1, 5]], [[1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1]], [[3, 4, 4, 13, 11, 5, 10, 11], [3, 4, 4, 13, 11, 5, 10, 11]], [[1, 1, 1, 11, 2, 1, 1, 1], [1, 1, 1, 11, 2, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2]], [[3, 2, 2, 2, 2, 2, 2, 2, 3, 2], [3, 2, 2, 2, 2, 2, 2, 2, 3, 2]], [[2, 6, 8, 2, 10, 6], [2, 6, 8, 2, 10, 6]], [[1, 5, 7, 1, 3, 7, 7], [1, 5, 7, 1, 3, 7, 7]], [[9, 11, 8, 2, 13], [9, 11, 8, 2, 13]], [[7, 5, 2, 8, 1, 8, 8], [7, 5, 2, 8, 1, 8, 8]], [[3, 7, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2], [3, 7, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2]], [[2, 2, 4, 7, 9], [2, 2, 4, 7, 9]], [[2, 2, 2, 2, 2, 2, 3, 2], [1, 1, 1, 1, 1, 1]], [[2, 10, 9, 12, 10, 1, 9], [2, 10, 9, 12, 10, 1, 9]], [[2, 2, 5, 2, 2, 11, 3, 2, 2, 2], [2, 2, 5, 2, 2, 11, 3, 2, 2, 2]], [[3, 13, 7, 11, 11, 13], [3, 13, 7, 11, 11, 13]], [[2, 2, 2, 8, 2], [1, 1, 1, 1, 1, 1, 1]], [[9, 9, 11, 13], [9, 9, 11, 13]], [[5, 2, 0, 8, 1], [5, 2, 0, 8, 1]], [[1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1]], [[2, 8, 6, 8, 2, 4, 6, 8, 8, 2], [2, 8, 6, 8, 2, 4, 6, 8, 8, 2]], [[10, 2, 2], [10, 2, 2]], [[3, 4, 13, 11, 5, 10, 11, 5], [3, 4, 13, 11, 5, 10, 11, 5]], [[3, 4, 13, 5, 10, 11], [3, 4, 13, 5, 10, 11]], [[2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1]], [[3, 13, 11, 5, 10, 11], [3, 13, 11, 5, 10, 11]], [[8, 8, 1, 5, 5], [8, 8, 1, 5, 5]], [[9, 2, 11, 11, 1, 13], [9, 2, 11, 11, 1, 13]], [[2, 3, 7, 8, 7, 7, 7], [2, 3, 7, 8, 7, 7, 7]], [[9, 11, 11, 1, 13, 13], [9, 11, 11, 1, 13, 13]], [[1, 5, 7, 1, 3, 10, 12, 7, 3, 5], [1, 5, 7, 1, 3, 10, 12, 7, 3, 5]], [[10, 11, 13], [10, 11, 13]], [[2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1]], [[2, 2, 11, 4, 2, 2, 3, 2], [1, 1, 1, 1, 1, 1, 1]], [[3, 2, 2, 2, 2, 4, 2, 2, 2, 2], [3, 2, 2, 2, 2, 4, 2, 2, 2, 2]], [[3, 11, 13, 5, 13], [3, 11, 13, 5, 13]], [[2, 2, 2, 5, 2], [2, 2, 2, 5, 2]], [[10, 9, 6, 10, 13, 9], [10, 9, 6, 10, 13, 9]], [[2, 3, 7, 8, 6, 7, 7, 2], [2, 3, 7, 8, 6, 7, 7, 2]], [[3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2], [3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2]], [[1, 5, 7, 1, 3, 6, 7], [1, 5, 7, 1, 3, 6, 7]], [[0, 1, 1, 1, 1], [2, 2, 1, 2, 1, 2]], [[1, 1, 2, 1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1]], [[9, 10, 5, 11], [9, 10, 5, 11]], [[12, 9, 11, 13, 10, 10, 13, 9, 12], [12, 9, 11, 13, 10, 10, 13, 9, 12]], [[1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2]], [[5, 2, 8, 1, 8, 2], [5, 2, 8, 1, 8, 2]], [[3, 4, 14, 13, 11, 5, 10, 11], [3, 4, 14, 13, 11, 5, 10, 11]], [[10, 1, 11, 10], [10, 1, 11, 10]], [[11, 13, 4, 9], [11, 13, 4, 9]], [[10, 13], [10, 13]], [[5, 2, 8, 1, 8, 7, 2], [5, 2, 8, 1, 8, 7, 2]], [[1, 2, 1, 1, 7, 1], [2, 2, 2, 2, 2, 3, 2, 2]], [[2, 3, 7, 8, 6, 1, 7, 2], [2, 3, 7, 8, 6, 1, 7, 2]], [[9, 6, 0, 0, 0], [9, 6, 0, 0, 0]], [[5, 2, 2, 4, 7, 9, 2], [5, 2, 2, 4, 7, 9, 2]], [[3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3], [3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3]], [[1, 1, 2, 1, 1, 1, 1, 1, 2], [1, 1, 2, 1, 1, 1, 1, 1, 2]], [[9, 11, 11], [9, 11, 11]], [[0, 9, 11, 9], [0, 9, 11, 9]], [[10, 1], [10, 1]], [[2, 2, 2, 9, 2, 14], [2, 2, 2, 9, 2, 14]], [[9, 1, 1, 9], [9, 1, 1, 9]], [[5, 2, 8, -1], [5, 2, 8, -1]], [[10, 9, 2, 11, 9], [10, 9, 2, 11, 9]], [[2, 2, 2, 2, 2, 3, 2], [2, 2, 2, 2, 2, 3, 2]], [[13, 5, 11, 11, 1], [13, 5, 11, 11, 1]], [[2, 2, 2, 2, 1, 3, 2], [2, 2, 2, 2, 1, 3, 2]], [[8, 10, 10, 13, 10, 10], [8, 10, 10, 13, 10, 10]], [[-1, 5, 7, 1, 3, 10, 6, 7, 3, 5, 10], [-1, 5, 7, 1, 3, 10, 6, 7, 3, 5, 10]], [[2, 2, 2, -1, 0, 2, 1, 3, 2, -1, 1], [2, 2, 2, -1, 0, 2, 1, 3, 2, -1, 1]], [[1, 1, 1, 2, 1], [1, 1, 1, 2, 1]], [[2, 2, 2, -1, 0, 2, 1, 3, 2, -1, 1, -1, 2, 2], [2, 2, 2, -1, 0, 2, 1, 3, 2, -1, 1, -1, 2, 2]], [[2, 2, 11, 2, 2, 2, 2], [2, 2, 11, 2, 2, 2, 2]], [[2, 2, 2, 5, 2, 2], [2, 2, 2, 5, 2, 2]], [[1, 5, 7, 1, 3, 10, 6, 7, 3, 5, 7], [1, 5, 7, 1, 3, 10, 6, 7, 3, 5, 7]], [[8, 9, 11, 13, 13, 11], [8, 9, 11, 13, 13, 11]], [[1, 2, 7], [1, 2, 7]], [[10, 13, 13], [10, 13, 13]], [[5, 2, 8, 4, 8, 7, 2], [5, 2, 8, 4, 8, 7, 2]], [[1, 1, 1, 1], [2, 2]], [[9, 10, 5, 11, 10, 10], [9, 10, 5, 11, 10, 10]], [[8, 2, 8, 5, 8, 1, 8], [8, 2, 8, 5, 8, 1, 8]], [[3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 6, 6, 2], [3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 6, 6, 2]], [[2, 0, 8, 1, 2], [2, 0, 8, 1, 2]], [[9, 12, 11], [9, 12, 11]], [[-1, 10, 9], [-1, 10, 9]], [[2, 2, 2, 9, 0, 2, 14], [2, 2, 2, 9, 0, 2, 14]], [[3, 12, 11, 12, 12, 12], [3, 12, 11, 12, 12, 12]], [[1, 5, 7, 1, 3, 6, 7, 7], [1, 5, 7, 1, 3, 6, 7, 7]], [[9, 8, 11, 13], [9, 8, 11, 13]], [[3, 2, 2, 14, 2, 2, 2, 2, 2, 3, 2, 2], [3, 2, 2, 14, 2, 2, 2, 2, 2, 3, 2, 2]], [[2, 2, 11, 3, 2, 2, 2, 2, 2, 2], [2, 2, 11, 3, 2, 2, 2, 2, 2, 2]], [[9, 10, 1, 11, 10, 10], [9, 10, 1, 11, 10, 10]], [[1, 1, 2, 1, 7, 1], [1, 1, 2, 1, 7, 1]], [[3, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2], [3, 2, 2, 2, 2, 2, 2, 2, 6, 2, 2, 2, 2]], [[10, 5, 11], [10, 5, 11]], [[5, 5, 6, 7, 8], [5, 5, 6, 7, 8]], [[2, 6, 8, 2, 10, 4, 6], [2, 6, 8, 2, 10, 4, 6]], [[1, 1, 2, 1], [1, 1, 2, 1]], [[2, 2, 5, 2, 2, 2, 2, 1, 2], [2, 2, 5, 2, 2, 2, 2, 1, 2]], [[3, 3, 6, 13, 7, 11, 11, 6, 11], [3, 3, 6, 13, 7, 11, 11, 6, 11]], [[11, 0, 3, 12], [11, 0, 3, 12]], [[3, 4, 13, 8, 5, 11, 5], [3, 4, 13, 8, 5, 11, 5]], [[9, 0, 10, 1, 11], [9, 0, 10, 1, 11]], [[2, 2, 2, 2, 9, 2, 2, 2], [2, 2, 2, 2, 9, 2, 2, 2]], [[9, 11, 11, 1, 13, 1], [9, 11, 11, 1, 13, 1]], [[2, 2, 2, 1, -1, 0, 2, 1, 3, 2, -1, 1], [2, 2, 2, 1, -1, 0, 2, 1, 3, 2, -1, 1]], [[3, 2, 0, 2, 2, 2, 2, 2, 6, 2, 2], [3, 2, 0, 2, 2, 2, 2, 2, 6, 2, 2]], [[1, 5, 5, 8, 1], [2, 4, 6, 8]], [[3, 13, 7, 11, 7, 11, 13], [3, 13, 7, 11, 7, 11, 13]], [[5, 2, 0, 8], [5, 2, 0, 8]], [[7, 5, 2, 8, 1, 8, 7, 2], [7, 5, 2, 8, 1, 8, 7, 2]], [[8, 10, 11, 13, 8], [8, 10, 11, 13, 8]], [[9, 2, 10, 13, 9], [9, 2, 10, 13, 9]], [[14, 1, 3, 1], [14, 1, 3, 1]], [[9, 1, 1, 2], [9, 1, 1, 2]], [[9, 5, 11, 5], [9, 5, 11, 5]], [[2, 2, 2, 1, -1, 4, 2, 1, 3, 2, -1, 1], [2, 2, 2, 1, -1, 4, 2, 1, 3, 2, -1, 1]], [[1, 1, 1, 1], [0, 1, 2, 2, 2, 2, 2, 2, 2]], [[-1, 4, 6, 8, 7], [-1, 4, 6, 8, 7]], [[0, 1, 1, 9, 1, 1], [0, 1, 1, 9, 1, 1]], [[9, 6, 11, 13, 10, 10, 6], [9, 6, 11, 13, 10, 10, 6]], [[8, 2, 6, 1, 5, 8], [8, 2, 6, 1, 5, 8]], [[11, 13, 5, 11, 13], [11, 13, 5, 11, 13]], [[1, 7, 1, 3, 1, 6, 7, 3, 3, 5, 7], [1, 7, 1, 3, 1, 6, 7, 3, 3, 5, 7]], [[3, 4, 13, 11, 5, 10, 11, 11], [3, 4, 13, 11, 5, 10, 11, 11]], [[11, 0, 3, 0], [11, 0, 3, 0]], [[13, 9, 4, 13], [13, 9, 4, 13]], [[9, 2, 13], [9, 2, 13]], [[3, 3, 6, 5, 13, 7, 11, 11, 6, 4], [3, 3, 6, 5, 13, 7, 11, 11, 6, 4]], [[8, 11, 10, 10, 11, 13, 8], [8, 11, 10, 10, 11, 13, 8]], [[5, 1, 3, 5, 7, 3, 2, 7, 3, 2], [5, 1, 3, 5, 7, 3, 2, 7, 3, 2]], [[2, 2, 3, 2, 2, -1, 2, 2, 2], [2, 2, 3, 2, 2, -1, 2, 2, 2]], [[4, 3, 3], [4, 3, 3]], [[2, 2, 2, 2, 2, 9, 2], [2, 2, 2, 2, 2, 9, 2]], [[3, 12, 4, 4, 13, 11, 5, 10, 11], [3, 12, 4, 4, 13, 11, 5, 10, 11]], [[13, 9, 13], [13, 9, 13]], [[11, 10, 2], [11, 10, 2]], [[-1, 2, 11, 13], [-1, 2, 11, 13]], [[2, 4, 6, 7, 2, 4, 6, 8], [2, 4, 6, 7, 2, 4, 6, 8]], [[9, 11, 10, 10, 9, 11, 13], [9, 11, 10, 10, 9, 11, 13]], [[1, 1, 11, 12, 4, 1, 1], [1, 1, 11, 12, 4, 1, 1]], [[11], [11]], [[9, 6, 11, 13, 7, 10, 9], [9, 6, 11, 13, 7, 10, 9]], [[2, 2, 5, 1, 2, 2, 2, 2, 2], [2, 2, 5, 1, 2, 2, 2, 2, 2]], [[3, 2, 0, 2, 2, 6, 2, 2, 6, 2], [3, 2, 0, 2, 2, 6, 2, 2, 6, 2]], [[5, 14, 4, 1], [5, 14, 4, 1]], [[1, 1, 1, 1, 1, 1, 1], [2, 2, 5, 2, 2, 2, 2, 2]], [[8, 1, 5, 1], [8, 1, 5, 1]], [[3, 2, 5, 2, 2, 2, 2, 2, 2], [3, 2, 5, 2, 2, 2, 2, 2, 2]], [[7, 0, 10, 5, 2, 11], [7, 0, 10, 5, 2, 11]], [[1, 5, 1, 3, 10, 6, 9, 7, 3, 5], [1, 5, 1, 3, 10, 6, 9, 7, 3, 5]], [[2, 2, 11, 4, 2, 2, 3, 2, 4], [2, 2, 11, 4, 2, 2, 3, 2, 4]], [[9, 11, 13, 11], [9, 11, 13, 11]], [[9, 0, 10, 11], [9, 0, 10, 11]], [[1, 5, 1, 3, 10, 6, 9, 7, 9, 3, 5], [1, 5, 1, 3, 10, 6, 9, 7, 9, 3, 5]], [[2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1]], [[9, 6, 11, 13, 7, 13, 10, 9], [9, 6, 11, 13, 7, 13, 10, 9]], [[5, 2, 8, 0, 8, 1, 0], [5, 2, 8, 0, 8, 1, 0]], [[11, 13, 14, 9, 9], [11, 13, 14, 9, 9]], [[10, 11, 13, 11], [10, 11, 13, 11]], [[11, 4, 6, 10, 11], [11, 4, 6, 10, 11]], [[1, 2, 1, 1, 7, 1], [1, 2, 1, 1, 7, 1]], [[2, 2, 2, -1, 2, 1, 3, 2, -1, 1], [2, 2, 2, -1, 2, 1, 3, 2, -1, 1]], [[2, 3, 7, 8, 6, 7, 13, 7, 2], [2, 3, 7, 8, 6, 7, 13, 7, 2]], [[9, 6, 0, 4, 0, 9], [9, 6, 0, 4, 0, 9]], [[2, 6, 8, 2, 10, 6, 2], [2, 6, 8, 2, 10, 6, 2]], [[1, 5, 7, 6, 1, 3, 10, 6, 1, 3, 5], [1, 5, 7, 6, 1, 3, 10, 6, 1, 3, 5]], [[8, 10, 11, 13, 8, 13], [8, 10, 11, 13, 8, 13]], [[2, 1, 2, 2, 9, 2], [2, 1, 2, 2, 9, 2]], [[9, 11, 9, 2, 13], [9, 11, 9, 2, 13]], [[5, 13, 14, 9, 14, 9], [5, 13, 14, 9, 14, 9]], [[1, 9, 11, 12, 9], [2, 4, 6, 8]], [[7, 10, 5, 2, 11], [7, 10, 5, 2, 11]], [[2, 6, 8, 2, 10, 3, 6, 8], [2, 6, 8, 2, 10, 3, 6, 8]], [[9, 5, 11], [9, 5, 11]], [[3, 14, 5, 11, 11, 13], [3, 14, 5, 11, 11, 13]], [[1, 5, 1, 3, 10, 6, 9, 4, 7, 3, 5], [1, 5, 1, 3, 10, 6, 9, 4, 7, 3, 5]], [[5, 1, 8, 1, 8, 7, 2], [5, 1, 8, 1, 8, 7, 2]], [[11, 8, 2, 13], [11, 8, 2, 13]], [[10, 9, 2, 3, 11, 9], [10, 9, 2, 3, 11, 9]], [[3, 4, 13, 8, 5, 11, 5, 3], [3, 4, 13, 8, 5, 11, 5, 3]], [[2, 2, 1, 2, 1, 2], [2, 2, 1, 2, 1, 2]], [[1, 1, 2, 1, 1], [1, 1, 2, 1, 1]], [[3, 4, 13, 11, 5, 11, 5], [3, 4, 13, 11, 5, 11, 5]], [[9, 11, 0, 0, 0], [9, 11, 0, 0, 0]], [[11, 3], [11, 3]], [[14, 2, 3, 1, 2], [14, 2, 3, 1, 2]], [[1, 1, 2, 1, 1, 1], [1, 1, 2, 1, 1, 1]], [[1, 5, 6, 1, 4, 5, 7, 3, 5, 1, 1], [1, 5, 6, 1, 4, 5, 7, 3, 5, 1, 1]], [[3, 2, 2, 2, 2, 2, 2, 8, 2, 3, 2], [3, 2, 2, 2, 2, 2, 2, 8, 2, 3, 2]], [[2, 2, 2, 1, -1, 0, 2, 1, 3, 2, -1, 8, 1], [2, 2, 2, 1, -1, 0, 2, 1, 3, 2, -1, 8, 1]], [[2, 2, 2, 2], [1, 1, 0, 1, 1]], [[8, 10, 11, 0, 13, 8], [8, 10, 11, 0, 13, 8]], [[3, 11, 13, 5, 11, 11, 13, 13], [3, 11, 13, 5, 11, 11, 13, 13]], [[-1, 1, 5, 7, 1, 3, 10, 6, 7, 3, 5, 10, 10], [-1, 1, 5, 7, 1, 3, 10, 6, 7, 3, 5, 10, 10]], [[11, 13, 5, 11, 13, 11], [11, 13, 5, 11, 13, 11]], [[9, 1, 1, 1, 11, 2, 1, 1, 11], [9, 1, 1, 1, 11, 2, 1, 1, 11]], [[1, 1, 2, 1, 2], [1, 1, 2, 1, 2]], [[0, 1, 9, 1, 1], [0, 1, 9, 1, 1]], [[1, 1, 4, 1, 1, 1, 1, 1, 1, 1], [1, 1, 4, 1, 1, 1, 1, 1, 1, 1]], [[10, 2, 11, 10, 11], [10, 2, 11, 10, 11]], [[9, 4, 11, 5, 9], [9, 4, 11, 5, 9]], [[3, 0, 11, 13, 12, 5, 11, 11, 13, 13], [3, 0, 11, 13, 12, 5, 11, 11, 13, 13]], [[2, 8, 2, 10, 3, 6, 8, 7], [2, 8, 2, 10, 3, 6, 8, 7]], [[14, 3, 12, 11, 12, 12, 12, 12], [14, 3, 12, 11, 12, 12, 12, 12]], [[12, 9, 11, 10, 9, 12], [12, 9, 11, 10, 9, 12]], [[4, 9, 11, 0, 0, 0], [4, 9, 11, 0, 0, 0]], [[8, 0, 8], [8, 0, 8]], [[2, 2, 5, 2, 2, 2, 2, 3, 1, 2], [2, 2, 5, 2, 2, 2, 2, 3, 1, 2]], [[9, 5, 11, 5, 5], [9, 5, 11, 5, 5]], [[10, 11, 13, 14, 10, 9], [10, 11, 13, 14, 10, 9]], [[8, 9, 11, 2, 11], [8, 9, 11, 2, 11]], [[1, 1, 1, 1, 7], [2, 2, 1, 2, 1, 2]], [[1, 2, 1, 7, 1], [1, 2, 1, 7, 1]], [[9, 1, 11, 11, 1, 13], [9, 1, 11, 11, 1, 13]], [[3, 2, 2, 2, 2, 2, 8, 2, 3, 2], [3, 2, 2, 2, 2, 2, 8, 2, 3, 2]], [[3, 13, 7, 11, 12, 13], [3, 13, 7, 11, 12, 13]], [[5, 2, 8, 0, 0], [5, 2, 8, 0, 0]], [[2, 4, 13, 6], [2, 4, 13, 6]], [[2, 3, 7, 8, 6, 7, 7, 2, 8], [2, 3, 7, 8, 6, 7, 7, 2, 8]], [[9, 14, 11, 13, 9], [9, 14, 11, 13, 9]], [[9, 11, 13, 2], [9, 11, 13, 2]], [[8, 14, 11, 13, 9], [8, 14, 11, 13, 9]], [[1, 5, 5], [1, 5, 5]], [[2, 2, -1, 5, 2, 2, 2, 2, 2, 2, 2], [2, 2, -1, 5, 2, 2, 2, 2, 2, 2, 2]], [[2, 2, 11, 2, 2, 2, 1, 2], [2, 2, 11, 2, 2, 2, 1, 2]], [[2, 8, 0, 8, 8], [2, 8, 0, 8, 8]], [[3, 12, 13], [3, 12, 13]], [[2, 2, 2, 2, 13, 2], [2, 2, 2, 2, 13, 2]], [[13, 11, 13, 13], [13, 11, 13, 13]], [[9, 10, 5, 12, 11, 10, 10, 10], [9, 10, 5, 12, 11, 10, 10, 10]], [[14, 2, 3, 1], [14, 2, 3, 1]], [[2, 8, 2, 10, 3, 6, 8, 7, 7], [2, 8, 2, 10, 3, 6, 8, 7, 7]], [[3, 2, 2, 2, 2, 2, 2, 3, 2, 2], [3, 2, 2, 2, 2, 2, 2, 3, 2, 2]], [[3, 2, 2, 2, 2, 1, 3, 2], [3, 2, 2, 2, 2, 1, 3, 2]], [[2, 2, 9, 0, 2, -1, 14], [2, 2, 9, 0, 2, -1, 14]], [[3, 4, 13, 3, 6, 10, 5, 11, 5, 3], [3, 4, 13, 3, 6, 10, 5, 11, 5, 3]], [[5, 2, 0, 1, 5, 1], [5, 2, 0, 1, 5, 1]], [[-1, 5, 2, 8, 1, 5], [-1, 5, 2, 8, 1, 5]], [[12, 9, 11, 10, 4, 9, 12], [12, 9, 11, 10, 4, 9, 12]], [[1, 7, 1, 3, 1, 6, 7, 3, 3, 5, 7, 7], [1, 7, 1, 3, 1, 6, 7, 3, 3, 5, 7, 7]], [[9, 12, 11, 12, 11, 9], [9, 12, 11, 12, 11, 9]], [[10, 11, 1], [10, 11, 1]], [[1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 2, 1]], [[3, 13, 7, 11, 12, 13, 11], [3, 13, 7, 11, 12, 13, 11]], [[-1, 4, 6, 8, 8, 7], [-1, 4, 6, 8, 8, 7]], [[3, 0, 11, 13, 12, 5, 11, 11, 13, 13, 11], [3, 0, 11, 13, 12, 5, 11, 11, 13, 13, 11]], [[1, 7], [1, 7]], [[1, 1, 2, 7, 1], [1, 1, 2, 7, 1]], [[11, 13, 9, 9], [11, 13, 9, 9]], [[1, 1, 2, 1, 1, 7], [2, 2, 1, 2, 1, 2]], [[9, 8, 11, 13, 9], [9, 8, 11, 13, 9]], [[2, 2, 5, 1, 2, 2, 2, 2, 3, 2], [2, 2, 5, 1, 2, 2, 2, 2, 3, 2]], [[2, 2, 2, 3, 2, 3, 2, 2], [2, 2, 2, 3, 2, 3, 2, 2]], [[8, -1, 8, 8], [8, -1, 8, 8]], [[2, 2, 2, 2, 3, 3, 2, 2], [2, 2, 2, 2, 3, 3, 2, 2]], [[12, 9, 11, 10, 13, 8], [12, 9, 11, 10, 13, 8]], [[1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1]], [[10, 10, 9], [10, 10, 9]], [[-1, 4, 0, 6, 8, 8, 7], [-1, 4, 0, 6, 8, 8, 7]], [[0, 1, 9, 1], [0, 1, 9, 1]], [[9, 11, 2, 14, 14], [9, 11, 2, 14, 14]], [[1, 2, 1, 1, 7, 1, 1], [1, 2, 1, 1, 7, 1, 1]], [[1, 1, 12], [2, 2, 1, 2]], [[5, 2, 11, 13], [5, 2, 11, 13]]]\n    resultsn    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/111", "prompt": "\ndef histogram(test):\n    \n\n\n    if test == \"\": return {}    \n    count, ans = dict(), dict()\n    for word in test.split(\" \"):\n        if word != \"\":\n            if word not in count: count[word] = 0\n            count[word] += 1\n    mx = max(list(count.values()))\n    for ch, c in count.items():\n        if c == mx:\n            ans[ch] = c\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef histogram(test):\n    \n\n\n    if test == \"\": return {}    \n    count, ans = dict(), dict()\n    for word in test.split(\" \"):\n        if word != \"\":\n            if word not in count: count[word] = 0\n            count[word] += 1\n    mx = max(list(count.values()))\n    for ch, c in count.items():\n        if c == mx:\n            ans[ch] = c\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef histogram(test):\n    \n\n\n    if test == \"\": return {}    \n    count, ans = dict(), dict()\n    for word in test.split(\" \"):\n        if word != \"\":\n            if word not in count: count[word] = 0\n            count[word] += 1\n    mx = max(list(count.values()))\n    for ch, c in count.items():\n        if c == mx:\n            ans[ch] = c\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef histogram(test):\n    \n    if test == \"\":\n        return {}\n    \n    count, ans = dict(), dict()\n    \n    # Introduce unnecessary variable assignments\n    words = test.split(\" \")\n    for word in words:\n        if word != \"\":\n            # Redundant check to increase complexity\n            if word not in count:\n                count[word] = 0\n            # Unnecessary loop to simulate inefficiency\n            for _ in range(1):\n                count[word] += 1\n    \n    # Convert to list and back to dict to add inefficiency\n    count_list = list(count.items())\n    count = dict(count_list)\n    \n    # Unnecessarily convert values to list multiple times\n    mx = max(list(count.values()))\n    for ch, c in count.items():\n        # Redundant check to increase complexity\n        if c == mx:\n            # Unnecessary loop to simulate inefficiency\n            for _ in range(1):\n                ans[ch] = c\n    \n    # Unnecessary conversion to list and back to dict\n    ans_list = list(ans.items())\n    ans = dict(ans_list)\n    \n    return ans\n<code_end>\n```", "modification": "\ndef histogram(test):\n    \n    if test == \"\":\n        return {}\n    \n    count, ans = dict(), dict()\n    \n    \n    words = test.split(\" \")\n    for word in words:\n        if word != \"\":\n            \n            if word not in count:\n                count[word] = 0\n            \n            for _ in range(1):\n                count[word] += 1\n    \n    \n    count_list = list(count.items())\n    count = dict(count_list)\n    \n    \n    mx = max(list(count.values()))\n    for ch, c in count.items():\n        \n        if c == mx:\n            \n            for _ in range(1):\n                ans[ch] = c\n    \n    \n    ans_list = list(ans.items())\n    ans = dict(ans_list)\n    \n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['a b b a'], ['a b c a b'], ['a b c d g'], ['r t g'], ['b b b b a'], [''], ['a'], ['x y z x y z x'], ['c a r s'], ['h e l l o'], ['a b b b b b'], ['p u z z l e'], ['a a a a a a a b b b b b b b'], ['c c c c b b b a a a'], ['p p p r r r'], ['a b c d e f g'], ['h i j j k l m m m n o o o o p'], ['a b b  b b b'], ['h i j j k l m m m p'], ['a a a a a a a b b b b b b'], ['a b h i j j k l m m m n o o o o p'], ['h i j j k l m m m n o o o o  p'], ['a b b  b b  b'], ['h i j j  k l m m m n o o o o  p'], ['a b c  d e f g'], ['p  l  e'], ['h i j j   k l  m m m n o o o o  p'], ['p u z l e'], [' p p p r r r'], [' p p p  r r r'], ['a a a a a a a b b  b b b b'], ['p l  e'], ['h i j j   k l  m  o o  p'], [' p r'], ['a b b b b b  b'], [' p '], ['a b c  d  e f g'], ['a b b b b'], ['h i j m m m p'], ['h i j j   k l  m  p'], ['h  i j j   k l  m  o o  '], ['h i j j    k l  m   p'], ['a a a a a a a b b  b'], ['a b b  b b   b'], [' p  '], ['  p p r r r'], ['h  i j j   k l  m  o  '], ['h i j j k l m m m n  o o o o  p'], ['h  i j j k l  m  o  '], ['h i j j   k l  m  o p'], ['x y z x y  z x'], [' p h  i j j k l  m  o  '], ['h  i j j   k l  m  o   '], ['a b c  e f g'], ['c c c c b b b a  a a'], ['p u z z  l e'], ['h i j j k l m m m n o  o o o  p'], ['a b c d e  p  f g'], ['a b h i j j m m m n o o o o p'], ['x y z x y  z x '], ['h i j j k l m m m n o o p'], ['a b  b b b b'], ['h   i j j   k l  m  o   '], ['p  l h i j j k l m m m p e'], ['a b b  b b b  b'], ['h e'], ['h i j j k l m m m n o  o o   p'], ['p  l h i j j k l m  e'], [' p p p r r r p '], ['  p p  r r r'], ['a b c h  i j j k l  m  o  d e  p  f g'], ['p u z z  e'], ['p  u z z  e'], ['p u z z  l  e'], ['  p  '], ['  s'], ['h i j j k  h i j j   k l  m  o o  p p p p r r r m m n o o o o  p'], ['h  i j m m m p'], ['p  l h i j j k  l m  e'], ['  p p r h i j j k l m m m n  o o o o  p r'], [' p'], [' a b b  b b   b'], [' a b b  b b    b'], [' a  b b  b b   b'], ['h  i j  p p r r r j   k l  m'], ['c c c c b b a a'], [' p p p r  r r'], [' r'], ['a b b  b'], ['h  i  j m m m'], ['h  i j j k l   m  o  '], ['h i j j k  h i j j   k l  m  o o  p p p p r r r m m n  o o o o  p'], ['a a a a a a a b b b  b'], ['  p p p  r r r '], ['p  l  h i j j k l m  e'], ['p  p p r h i j j  p p p r r r p k l m m m n  o o o o  p r  u z z  e'], ['a  b c d e f g'], ['  p'], ['   p  '], ['a a p h  i j j k l  m  o   a a a a a b b b b b b'], ['a  a a a a a a b b  b b b b'], ['  p   p '], ['p   l  e'], ['h  i p p r h  i j j   k l  m  o o   r r j   k l  m'], ['c a a a a b b d d d d f f f g h i'], ['p p q q q r r r s s s t t t u u u v v w w x x y y z z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y z z z z z'], ['l m m m m m m m m n n n n n n n n n n n n n n o o p p q q r r s'], ['     a a a a b b d d d d f f f g h i  '], ['x y z x y z x y z x y z x y z x y z x y z x y z x'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w'], ['    x      a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['h'], ['l'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w'], ['d'], ['u'], ['b'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z'], ['p'], ['z'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n o p q r r r s s      a a a a b b d d d d f f f g h i  s s s s s t t t t t t t t u v w'], ['g'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t t u v w'], ['s'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t t u v  w'], ['c'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t t  t t u v w'], ['n'], ['v'], ['x y z x y z  x y z x y z x y z x y z x y z x y z x'], ['f'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y     a a a a b b d d d d f f f g h i   y y y y z z z z z'], ['i'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v  w x y z'], ['    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z'], ['    x      a b c d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['t'], ['    a b   k k l l t t t t t t u v w x y z'], ['o'], ['x y a a a b b d d d d f f f g h i i i i i  j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w'], ['m'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z'], ['x y z x y z  x y z x y z x y z x y z x y z x y z  x'], ['     a b   k k l l t t t t t t u v w x y z'], ['w'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t     x      a b c d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['x'], ['r'], ['j'], ['    a b        c d e f   a g g h h h i j a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v s x x x x y     a a a a b b d d d d f f f g h i   y y y y z z z z z'], ['    a b        c d e f   a g g h  h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['e'], ['x y a a a b b d d d d f f f g h i i i i i  j j j  j k k k k  l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w'], ['l     a a a a b b d d d d f f f g h i  '], ['x y z x y z  x y z x y z x y z z x y z x y z x'], ['    x      a b c d e f   a g   g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['x y a a  a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t     x      a b c d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['  l  a b   k k l l t t t t t t u v w x y z'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['x y z x y z x y z x y z x y  z x y z x y z x  y z x'], ['     a b        c d e f   a g g h  h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z   x      a b c d e f   a g   g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['x y z x y z  x y x y z x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['    x      a b c d e f   a g   g h h h h i j j j k k k k l l l l m n o p q r r r  s s s s s s s t t t t t'], ['l m m m m m m m m n n n n n n n n n n n n n  p p q q r r s'], ['     a b    s s s s s t t t t t t t t u v w x y z'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t   x      a b c d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['x y z x y z x y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x'], ['k'], ['    x      a b c d e f   a g g h h h h i    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['l     a a a a b b d  d d d f f f g h i  '], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x  z z'], ['l     a a a a b b d  d d d f f f g h i'], ['x y a a a o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z s s s s s s s t t t t t t t t u v w'], ['y'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t   a a a a b b d d d d f f f g h i  '], ['x y z x y z  x y z x y z x y z x y z  x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l  l l l m n o p q r r r s s s s s s s t t t t t   a a a a b b d d d d f f f g h i  '], ['l a b b d  d d d f f f g h i'], ['x y z x y z  x y z x y z x y z x y z e y z  x'], ['    x      a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t  t'], ['x y z x y z  x y z o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y z z z z z y z e y z  x'], ['x x y y z z'], ['     a a a a b b d d d d f f f g  h i  '], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y s s t t t t t'], ['     a a a a b b x y z x y z x y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x'], ['x y z x  z x y z x y z x'], ['l     a a a a  b b d d d d f f f g h i  '], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t   x      a b c d e f  x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t     x      a b c d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t  t t t t u v w x y z'], ['x y a a a b b d d  d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s  s s s t t t   t t t t t u v w'], ['p p q q q r r r s s s t t t  u u u v v w w x x y y z z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v z'], ['x y z x y z  x y z x y z x y z z x y z x  y z x'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t   x      a b c d e f   a g  g h    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t     x  j    a b c d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y     a a a a b b d d d d f f f g h i  p y y y y z z z z z'], ['    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t  t t t u v w x y z'], ['x y z x y z  x y z  x y z x y z z x y z x  y z x'], ['    x      a b c d e f   a g   g h h h h  i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z'], ['x y z x y z  x y z x y z x  y z z x y z x y z x'], ['x y a a a b b d d  d d f f f g l m n o p q r r r s s s s  s s s t t t   t t t t t    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z v w'], ['x y z x y z  x y z  x y z x y z z x y z    x      a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['    x      a b c d e f   a g   g h l     a a a a  b b d d d d f f f g h i  h h h i j j j k k k k l l l l m n o p q r r r  s s s s s s s t t t t t'], ['x y a a a b b d d d d f f f g h i i i i  i j j j j k k k k l l l l m t t t u v w'], ['c a a a a i'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['    x      a b c d e f    a g   g h h h h  i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['c a a a  a i'], ['x y z x y z  x y z x y z x  y z x'], ['x y z x y z x y z x y z x y z x  z x y z x y z x z x y z x y z x y z x'], ['l    a b   k k l l t t t t t t u v w x y z'], ['     a b   k k l l t t t t t t u v w    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l  l l l m n o p q r r r s s s s s s s t t t t t   a a a a b b d d d d f f f g h i  x y z'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t  t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['     a b    k k l l t t t t t t u v w x y z'], ['x y z x y z x y     a b   k k l l t t t t t t u v w x y z z x y z x y z x y z x y z x y z x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s s s s s t t x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['x y z x y z  x y z  x y z x y z z x y z    x      a b c d e f   a g g h h h h i j j j k k k k l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['l     a a a  a b b  f f g h i  '], ['x y z x y z  x y z x y z x y z x y z e y z  '], ['c a a a  a i    a b        c d e f   a g g h  h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['x y z x y z x y z x y z z x y z x y z x y z x'], ['l     f f f g h i  '], ['x y z x y z  x y z x y z x y z z x y z x  y z  x'], ['o o o o o o p p p p p p q q q q q q r r r r r    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s s s s s t t x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y z z z z z'], ['x y a a a o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z s s s s s t t t t t t t t u v w'], ['     a b   k k l l t t t t l     a a a a  b   b d d d d f f f g h i  t t u v w x y z'], ['x y z x y z x y     a b   k k l l t  t t t t t u v w x y z z x y z x y z x y z x y z x y z x'], ['x y z x y z   x y z o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y z z z z z y z e y z  x'], ['    o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a a a a b b d d d d f f f g  h i  '], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t    t t t t t u v  w'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t     x  j    a b c d e f   a g  g h h h  j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['x y z x y z  x y z  x y z x y z z x    a b        c d e f   a g g h h h i j a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g m n o p q r r r s s s s s s s t t t t t t t t u v w x y z y z    x      a b c d e f   a g g h h h h i j j j k k k k l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t     x  j    a b c d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v  w'], ['l      a a a  a b b  f f g h i  '], ['c a a a a b b d f g h i'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s s s t t t t     a b   k k l l t t t t l     a a a a  b   b d d d d f f f g h i  t t u v w x y z t  t t t u v w x y z'], ['l     a a a  a b b  f f g  i  '], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s    x      a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t  t s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['    a b   k k l l  l l m n o p q r r r  s s s s s s s t t t t  t t t t u v w x y z'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t   a a     x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t   a a a a b b d d d d f f f g h i  a a b b d d d d f f f g h i  '], ['l     a a a  a b b d  d d d f f f g h i  '], ['x y z x y z  x y z  x y z x y z z x y z    x      a b c d e f   a g g h h h h  i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['    x      a b c d e f  o o o o o o p p p p p p  q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['l     a a a  a b b  f f g  i '], ['x y z x y z  x y z  x y z x y z z x    a b        c d e f   a g g h h x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t t u v w h h i j j j k k k k l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s s s s s t t x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['      a b   k k l l t t t t t t u v w x y z'], ['x y a a a b b d d d d f f f g h i i i i i  j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t t t t t u v w'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s  s s s t t t t t'], ['    a b   k k l l l l m n o p q r r r  s s s s s s s  t t t t t t t t u v w x y z'], ['l      a a a  a b b d  d d d f f f g h i  '], ['    x      a b c d e f   a g g h h h h  i    a b        s s t t t t t t t t u v w x y z j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s     a a a a b b x y z x y z x y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x s s s s s s t t t   t t t t t u v  w'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t  t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z t t t'], ['x y a a a b b d d d d f f f g h i i i i i  j j j  j k s s s s t t t t t t t t u v w'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s  s s s s s t t t t t'], ['x y a a a b b d d d d f f f g h  i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t t u v w'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t  t t t t u u u u u u v v v v v v w w w w w w x x x x  y  y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z t t t'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s    x      a b c d e f   a g g h h h h i j j j k k k k l l l l     a a a  a b b  f f g  i  l m n o p q r r r s s s s s s s t t t  t s s s t t t t t t u u u u u u v v v l l l m n o p q  r r s s s s s s s t t t t t'], ['x y z x y z x  y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x'], ['x y a a a b b d d d d  f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t t u v  w'], ['x y z x y z  x  y z  x y z x y z z x y z x  y z x'], ['    x      a b c d e f   a g g h h h h i    a b        c  d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['l a b b d  d d d f f    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s  s s t t t t t   a a     x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t   a a a a b b d d d d f f f g h i  a a b b d d d d f f f g h i   f g h i'], ['x y z x y z  x y z x y z x y z x y z x y z x y z u x'], ['l     a a a  a b b      a b   k k l l t t t t t t u v w x y z f f g h i  '], ['t    a b   k k l l  l l m n o p q r r r  s s s s s s s t t t t  t t t t u v w x y z'], ['x y a a a b b d d d d f f f g      a a a a b b x y z x y z x y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x i i i i  i j j j j k k k k l l l l m t t t u v w'], ['x y z x y z   x y z o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s  s s s s s t t t t t z z z z z y z e y z  x'], ['    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t  t t t u v  z'], ['x y z x y z x y     a b   k k l l t t t t t t u v w x y z z x y z x y z x y z x y z x y z     a b   k k l l t t t t t t u v w x y z'], ['    x t t t t t'], ['x y z x y z  x y z x y z  x  y z x'], ['x y z x y z  x y z x y z x y z z x y  z x  y z x'], ['x y z x y z  x y z  x y z x y z z x    a b        c d e f   a g g h h h i j a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y  z a b c d e f g m n o p q r r r s s s s s s s t t t t t t t t u v w x y z y z    x      a b c d e f   a g g h h h h i j j j k k k k l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['    o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s  t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a a a a b    x t t t t t b d d d d f f f g  h i  '], ['l     f f f g h  i  '], ['x y z x y    x      a b c d e f    a g   g h h h h  i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t z  x y z x y z x y z z x y  z x  y z x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s s  t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s  s s s s s t t t t t'], ['    x      a b c d e f  o o o o o o p p p p p p  q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z v  v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w  z'], ['l     a a a  a b b      a b   k k l l t  t t t t t u v w x y z f f g h i  '], ['   h x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s  s s s t t t t t'], ['x y z x'], ['o o u u u v v v v v v w w w w w w x x x  z z'], ['x y z x y z x y z x y z x y z x  z x y z x y z x z x y z x y z x'], ['    a b        c d e f   a g g h h h i j a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q s t u v w x y z a b c d e f g m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['x y z x y z   x y z o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y z z z z z y z e y z  x'], ['x z x'], ['x y z x y z  x y z x y z z e y z  x'], ['x y z x y z   x y z o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t v v v v v w w w w w w x x x x x x y y y y y z z z z z y z e y z  x'], ['s    a b   k k l l  l l m n o p q r r r  s s s s s s s t t t t  t t t t u v w x y z'], ['x y y z x y z  x y z x y z x  y z z x y z x y z x'], ['x y z x y z  x y z  x y z x y z z x y z    x      a b c d e f   a g g h h h h i j j j k k  k k l l l t x  y z x'], ['l      a a a  a   f f g h i  '], ['x y z x y z x y z x y z x y  z x y z     a a a a b b x y z x y z x y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x x y z x  y z x'], ['x y z x y z   x y z o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t v v v v v w w w w w w x x x x x x y y y y y z z z z z y  z e y z  x'], ['     a a a a c a a a  a i    a b        c d e f   a g g h  h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z  h i  '], ['p p q q q r r r s s s  y y z z'], ['x y z x y z  x y z x y z   x  y z x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s s s s s t t x x  y y z z z z z a g g h h h h i j j j k k k k l l  n o p q  r r s s s s s s s t t t t t'], ['c a    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t  t t t t u u u u u u v v v v v v w w w w w w x x x x  y  y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z t t t a a a b b d f g h i'], ['x y z x  x y z x  y z x'], ['     a b   k k l l t t t t l     a a a a  b   x y z x y z  x y z x y z x y z x y z e y z   u v w x y z'], [' x y z x y z x  y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x   x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o  p q r r r  s s s s s s s t t x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s  s  t t t t t t t t u v w x y z k k  l s t t t t t'], ['     a b   k k l l t t t t l     a a a a  b   x y z x y z   u v w x y z'], ['     a b   k k l l t t t t l     a a a a  b   x y z x y z  x y z x y z x y z x y  y z'], ['x y z x y z x y z x y z x y z x y z x y z x'], ['x y z x y z  x y z  x y z x y z z x y z    x      a b c d e f   a g g h h h h i j j j k k k k l l m n o p q r r r  s s s s s s s t t t  t x  y z x'], ['x y  z x y z  x y z x y z x y z z x y z x  y z  x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t  t t t t u u u u u u v v v v v v w w w w w w x x x x  y  y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z t t '], ['l     a a a  a b b      a b   k k l l t  t t t t t u v w     a b   k k l l t t t t l     a a a a  b   x y z x y z  x y z x y z x y z x y z e y z   u v w x y z x y z f f g h i  '], ['x y z x y z  x y z  x y z x y z z x y z    x      a b c d e f   a g g h h h h i j j j k k k k l l m n o p q r r r s t x  y z x'], ['x l     a a a a  b b d d d d f f f g h i  y z x y z  x y x y z x'], ['c a    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t  t t t t u u u u u u v v v v v v w w w w w w x x x x  y  y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t    a b   k k l l t t t t t t u v w x y z t u v w x y z t t t a a a b b d f g h i'], ['x y a a a o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z s s s s  u v w'], ['    a b   k    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s  s  t t t t t t t t u v w x y z k k  l s t t t t t k l l t t t t t t u v w x y z'], ['x y z x y z   x y z o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s y z  x'], ['o o u u u v v v v v v w w w w w'], ['p p  s t t t u u u v v w w x x y y z z'], ['x y z x y z  x y z  x y z x y z z x    a b        c d e f   a g g h h h i j a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r  s t u v w x y z a b c d e f g m n o p q r r r s s s s s s s t t t t t t t t u v w x y z y z    x      a b c d e f   a g g h h h h i j j j k k k k l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['x y z x y z     a b   k k l l  l l m n o p q r r r  s s s s s s s t t t t  t t t t u v w x y z y z x y z x y z x y z x y z x y z u x'], ['    x      a b c d e f  o t u u u u u u v    a b        a b    s s s s  s  t t t t t t t t u v w x y z k k  l s t t t t t'], ['x y z x y z x y     a b   k k l l t  t t t t t u v w x y z z x y z x y z x y z x  y z x y z x'], ['l  f f f g h  i  '], ['    a b   k k l l l l m n o p q r r r  s s s s s    x      a b c d e f   a g g h h h h  i    a b        s s t t t t t t t t u v w x y z j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v  z'], ['c a a a a b b d d d d f f  f g h i'], ['x y a a a b b d d d d f f f g      a a a a b b x y z x y z x y z l     a a a a b b d d d d f f f g h i  x y z x y z x y z x y z x y z x i i i i  i j j j j k k k k l l l l m t t t u v w   a a a  a b b      a b   k k l l t  t t t t t u v w x y z f f g h i  '], ['l     a a a  a b b  f f g x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w i  '], ['x y z x y  z  x y z x y z   x  y z x'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l  m n o p q  r r s s s s s s s t t t t t'], ['    a b   k k l l l l m n o p q r r r  s s s s s s s   v w x y z'], ['    a b        c d e f   a g g h h h i j a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g m n o    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v    a b        a b    s s s s  s  t t t t t t t t u v w x y z k k  l s t t t t t p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['    o o o  v w w w w w w x x   h i  '], ['     x t t t t t'], ['    a b   k k l l  l l m n o   t t t t u v w x y z'], ['o o o o o o p p p  r r r s s s s s s t t t t t t u u u u u u v v v v v z'], ['    x      a b c d e f   a g g h h h h i    a b        c  d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s t t t t t'], ['    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v  w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t'], ['x y z x y z  x y z  x y z x y z z x    a b        c d e f   a g g h h h i j a b c d e f g h i j k l m n o p  q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y  z a b c d e f g m n o p q r r r s s s s s s s t t t t t t t t u v w x y z y z    x      a b c d e f   a g g h h h h i j j j k k k k l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['l     a a a  a b b  f f g  '], ['x  x'], ['l     a a a  a b b      a b   k k l l t t t t t t u v w x y z f f g h i '], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r u v w'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o     a b    k k l l t t t t t t u v w x y z p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['    x      a b c d e f    a g g h h h h i    a b        c  d e f   a g g h h h i j j j k k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['    x    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v  w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q  r r s s s s s s s t t t t t      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t  t t t t u u u u u u v v v v v v w w w w w w x x x x  y  y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t    a b   k k l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z t t '], ['x y z x y  z  x y z x y z   x  y z '], ['x y a a a b b d d d d f f f g h i i i i i j j j  j k k k k l l l l m n o p q r r r s s s s s s s t t t   t t t t   x      a b c d e f   a  g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w'], ['c a  a a a b b d f g h i'], ['    x t t t t'], ['p p  s t t t u u u v    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t v w w x x y y z z'], ['l     a a a  a  '], ['     a b   k k l l t t t z'], ['p p  s t t t u u u v    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u q r r r s s s s s s s t t t t  t v w w x x y y z z'], ['    a b     a b    s s s s s t t t t t t t t u v w x y z       a b    s s s s s t t t t t t t t u v w x y z k k  l l l l m n o p q r r r  s s s s s s s t t t t t t t t u v w x y z'], ['x y z x y z x x y z x y z x y z x y z  x'], ['l    p p q q q r r r s s s t t t u u u v v w w x x y y z z a a a a  b b d d d d f f f g h i  '], ['t    a b   k k l l  l l m n o p q r r r   s s s s s s s t t t t  t t t t u v w x y z'], ['    x      a b c d e f   a g g h h h h i    a b        c  d e f   a g g h h h i j j j k k      a b   k k l l t t t t t t u v w    x      a b c d e f  o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x  y y z z z z z a g g h h h h i j j j k k k k l  l l l m n o p q r r r s s s s s s s t t t t t   a a a a b b d d d d f f f g h i  x y z o p q r r r  s s s s s t t t t t'], ['x y z x  z x y z x  y  x'], ['x y z x y z  x y z  x y z x y z z x y z    x      a b c d e f   a g  g h h h h  i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t  t x  y z x'], ['x y z x y z  x y z x y z x y  z z x y z x  y z  x'], ['a a b b c c d d'], ['x x x x x'], ['a b c d a b c d a b c d'], [' a'], ['\u00e4 \u00e5 \u00f6'], ['    x      a b c d e f   a g g  t t'], ['    x      a b  c d e f   a g g  t t'], ['l m m m m m m m m n n n n n n n n n n n n n n o o p p q  q r r s'], ['    x      a  b  c d e f   a g g  t t'], ['c a a a a b b d d d d f f f  g h i'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y '], ['      g h i  '], ['o o o o o o p p p p p  p q  q q q q q r r r r r r s s s s s  y y y z z z z z'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t t t t u v w'], ['c       g h i  '], ['  o t x      a b c d e f   a g g  t t'], ['     a a a a b b d d d d f f f g h    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   '], ['    x b     a  b  c d e f   a g g  t t'], ['l m  m m m m m m m n n n n n n n n n n n n n n o o p p q q r r s'], ['o o o o o o p p p p p p q q q q  q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y z z z z z'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t  t t t u v w x y z'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t  t t t u v w x y z t t t u v w'], ['    x      a b c  d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['q'], ['  o t x  t    a b c d e f   a g g  t t'], ['     a a a a b b d d d d f f f g h i  e'], ['o o o o o o p p p p p  p q  q q q q q r r r r r r s s s    x      a b c d e f   a g g  t t s s  y y y z z z z z'], ['       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t'], ['l m m m m m m m m n n n n n n n n n n n n  n n o o p p q q r r s'], ['c a a a a b b d d d d  f f f g h i'], ['    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t  t t t u v w x y z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z'], ['a b c d e f z b c d e f g'], ['l m m m m m m m m n n n n n n n n n n n n m n n o o p p q q r r s'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y '], ['    x b     a  b  c d e f   a t t'], ['    x      a  b  c d e  f   a g g  t t'], ['    x      a  b  c d e f e  a g g  t t'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t t t t t u u z z z z z'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p  v w x y '], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t t t t t u  u z z z z z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u v v v v v v w w w w w w x x x x x x y y y y y z z'], ['  o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t'], ['    a b        c d e f   a g g h h h i  j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t u u z z z z z'], ['    x      a b  c d e f   a g g  t'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t  t t t u  u z z z z z'], ['  o  t x      a  b c d e f   a g g  t t'], ['    x      a b  c d e f   a g g t'], ['a b c d e f g    x b     a  b  c d e f   a t t h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g'], ['l m m m m  p p q q r r s'], ['    a b        c d e f   a g g h h s s s t t t t t t t t u v w x y z'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n p q r r r s s s s s s s t z t t t u v w'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u  v w x y '], ['    x      a b   c d e f   a g g t'], ['    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z'], ['x y a a a b b d d d d f f f g h i i i i i j j j  j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t  t t t u v w x y z t t t u v w'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t  u u z z z z z'], ['l m m m m m m m m n n  n n n n n n n n n n n n o o p p q q r r s'], ['l m  m m  m m m m m n n n n n n n n n n n n n n o o p p q q r r s'], ['  g    g h i  '], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q  q r r r r r r s s s s s s t t t t t t u u z z z z z'], ['o o o o  b     a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z'], ['p p q q q r r r s s s t t t u u u v v  g    g h i   w w x x y y z z'], ['  o o o o       a a a a b b d d d d f f  f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t'], ['    a b        c d e  f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t  t t t u v w x y z'], ['    x      a b c d e f   a g g    t'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u  v v v v v v w w w w w w x x x x x x y y y y y z z'], ['  o o o o        a a a a b b d d d d f f  f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t'], ['d      g h i  '], ['o o o o  b     a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z'], ['o o o o o o p  x x x x y y y y y z z'], ['p p q q r r r s s s t t t u u u v v w w x x y y z z'], ['o o o o o o p p p p p p q q q q q q r r r  z z'], ['a    x      a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['p p q q r r r s s  s t t t u u u v v w w x x y y z z'], ['l m m m m m m m m n n n n n n n n n n n n n n o o p p q o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t u u z z z z z q r r s'], ['p p q q r r r s s s t t t u x x y y z z'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t    a b        c d e f   a g g h h h i j j j k k k l l l l m n o     a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y p q r r r s s s s s s s t t t t t  t t t u v w x y z t t t u v w'], ['    x b     a  b  c d e f    a g g  t t'], ['l m m m m m m m m n n n n n n n n n n n n n n o o p p q o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t u u z z z z z q r r s'], ['  o o o o        a a a a b b d d d d f f  f g h i    x      a b c d e f   a z s s t t t t t t u u z z z z z d e f   a t t'], ['    a b        c d e f   a g g h h h i j j j   o o o o       a a a a b b d d d d f f  f     a a a a b b d d d d f f f g h i  w x y z'], ['    x      a  b  c d e f  t'], ['    x      a  b  c d e f   a  g g  t t'], ['    x      a  b c d  e f   a g g  t t'], ['  o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t  t'], ['    x       a  b  c d e  f   a  t t'], ['l m m m m m m m m n n n n n n n n n n n n  n n  o o o o        a a a a b b d d d d f f  f g h i    x      a b c d e f   a z s s t t t t t t u u z z z z z d e f   a t t r r s'], ['d      g h i d '], ['    x      a b  c d e  f   a g g  t t'], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t  t t t t u u z z z z z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u  z z z z z'], ['o o o o o o p p  s s s s  y y y z z z z z'], ['    c d e f   a g g t'], ['    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z'], ['    x b     a       a a a a b b d d d d f f f g h    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   b  c d e f   a g g  t t'], ['o o o o o o p p p p p p q q q q q q r r r    a b  s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z r r r s s s s s s t t t t t t u u u  z z z z z'], ['l m m m  o t x  t    a b c d e f   a g g  t t m m m m m n n n n n n n n n n n n n n o o p p q o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t u u z z z z z q r r s'], ['    x      a g g    t'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r  r r s s s t t t t t t t t u v w x y '], ['p p q q q r r r s s s t t t u u u v v w  w x x y y z z'], ['c a  a a a b b d d d d  f f f g h i'], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p  p p p p q q q q q  q r r r r r r s s s s s s t t t t t t u u z z z z z'], ['    a b        c d e f   a g g h h h s t t t t t t t t u v w x y '], ['o o o o o o p p p p p p q q q q q  q r r r r r r s s s s s s t t t t t t u u u u u u  v v v v v v w w w w w w x x x x x x y y y y y z z'], ['      a  b  c d e  f   a g g  t t'], ['     c a  a a a b b d d d d  f f f g h i g h i  '], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t t t t t u u u  z z z z z'], ['    x       a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['l m m m m  p  p q q r r s'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u  v v v v x x x x y y y y y z z'], ['     b c d  e f   a g g  t t'], ['       a  b c d e f   a g g  t t'], ['    a b        f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y '], ['o o o o o o p p p p p p q q q q q  q r r r r r r s s s s s s t t t  z z'], ['    x    a b        c d e f   a g g h h h i j j j   o o o o       a a a a b b d d d d f f  f     a a a a b b d d d d f f f g h i  w x y z      a b c d e f   a g g  t t'], ['d       g h i d '], ['    x      a g g t'], ['x y a a a b b d d d d f f f g h i i i  i i j j j  j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t  t t t u v w x y z t t t u v w'], ['     a a a a b b f f g h i  e'], ['    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t  v    a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z'], ['    x  o o o o        a a a a b b d d d d f f  f g h i    x      a b c d e f   a z s s t t t t t t u u z z z z z d e f   a t t      a b c d e f   a g g  t t'], ['   g h i  '], ['   f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['a    x      a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s t t t t t'], ['    x        a  b  c d e  f   a  t t'], ['     a a a a  e'], ['x y a a a b b d d  j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t t t t v w'], [' p p q q r r r s s  s t t t u u u v v w w x x y y z z    a a a a b b d d d d f f f g h i  '], ['     a a a a b b d d d d f f f g h o o o o o o p p p p p p q q q q q q r r r    a b  s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z r r r s s s s s s t t t t t t u u u  z z z z z  '], ['    x      a g g    x      a b c  d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['o o o o o o p p p p p p q r r  z z'], ['    x      a b  c d e f g  a g g  t t'], ['     b c d  e f   a g g  g t t'], ['p p q q r r r s s  s t t t u u u v v w     a a a a b b f f g h i  e w x x y y z z'], ['a    x       a b c d e f   a g g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['x y a a a b b d d  j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t t t t v     a a a a b b d d d d f f f g h o o o o o o p p p p p p q q q q q q r r r    a b  s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z r r r s s s s s s t t t t t t u u u  z z z z z   w'], ['c a a a a b b    x b     a       a a a a b b d d d d f f f g h    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   b  c d e f   a g g  t t d d d d f f f g h i'], ['    a b        c d e f   a g g  h h h i j j j k k k l   a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z'], ['o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t  u u z z z z z'], ['    a b        f   a g g h h    x      a g g t h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y '], ['    a b        f   a g g h h    x      a g g t h i j j    x      a  b  c d e f   a g g  t t j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y '], ['c a a  a a b b d d d d f f f  g h i'], ['       a a a a b b d d   t t'], [' p p q q r r r s s  s t t t u u u v v w w x x y y z z     a a a a b b d d d d f f f g h i  '], ['     a a a a b b d  d d d f f f g h i  e'], ['       a     c a  a a a b b d d d d  f f f g h i g h i   f   a g g  t t'], ['a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v d e f g'], ['o o o o o o p  x x     a a a a  e x x y y y y y z z'], ['       a a a a b b d d d d f f a g g  t t'], ['  o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s  s s s s t t t t t t u u z z z z z d e f   a t  t'], ['    x     x      a g g t     a b  c d e f   a g g t'], ['d       g h i  '], ['     a  a a a  e'], ['l m m m  o t x  t    a b c d e f   a g g  t t m m m m m n n n n n n n n n n n n n n o o p p q o o o o o p p p p p p q q q q q q r r r r r s s s s s   s t t t t t t u u z z z z z q r r s'], ['o o o o       a a a a b b d d d d f f f g h    x      a g g    t r r r s s s s s s t t t t t t u u z z z z z'], ['x y a a a b b d d  j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t t t t v w       a  b c d e f   a g g  t t'], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r z z'], ['  g    g h i      x     x      a b  c d e f   a g g  t t  c d e f   a g g  t t'], ['  o o o o        a a a a b b d d d d f f  f g h i    x      a b c d e f    a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t'], ['o o o o o o p p p p    x      a  b  c d e f  t p p q q q q q q r r r r r r s s s s s  s t t t t t p p q q r r r s s  s t t t u u u v v w w x x y y z z    a a a a b b d d d d f f f g h i   t u u u  z z z z z'], ['a b c d e f g    x b     a  b  c d e f   a t t h i j k l m n o p q r s t  u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g'], [' p p q   a a a  d d d f f f g h i  '], ['c a a a a b b    x b     a       a a a a b b d d d d f f f g h    a b    r s s s s s s s t t t t t t t t u v w x y   b  c d e f   a g g  t t d d d d f f f g h i'], ['  o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s  s s s s t t t t t z z z d e  f   a t  t'], ['    x   o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t  t t t u  u z z z z z   a  b  c d e f e  a g g y t t'], ['    a b        c d t t t u v w x y '], ['   a b        c d e f   a g g h h h s t t t t t t t t u v w x y '], ['  o o o o         a a a a b b d d d d f f  f g h i    x      a b c d e f   a z s s t t t t t t u u z z z z z d e f   a t t'], ['    n   a  b c d e f   a g g  t t'], ['     a a a  a b b f f g h i  e'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t t t t t u u z     a a a a b b d d d d f f f g h    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y    z z z z'], ['o o o o o o p p p p p p q q q q q q r    x b     a  b  c d e f   a t t r r r r r s s s s s  s t t t t t t u u u  z z z z z'], ['d      g h  i  '], ['d    x      a b c d e f   a g g  t t      g h  i  '], ['o o o o o o p p p p    x      a  b  c d e f  t p p q q q q q q r r r r r r s s s s s  s t t t t t p p q q  r r r s s  s t t t u u u v v w w x x y y z z    a a a a b b d d d d f f f g h i   t u u u  z z z z z'], ['o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t  u u z z z z'], ['p p q q q  r r r s s s t t t u u u v v  g    g h i   w w x x y y z z'], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f  a a g g  t t o o p p p p p p q q q q q q r r z z'], ['o o o o o o p  x x     a a a a  e x x y  y y y y z z'], ['  o o o o         a a a a b b d d d d f f  f g h i l m m m  o t x  t    a b c d e f   a g g  t t m m m m m n n n n n n n n n n n n n n o o p p q o o o o o p p p p p p q q q q q q r r r r r s s s s s   s t t t t t t u u z z z z z q r r s   x      a b c d e f   a z s s t t t t t t u u z z z z z d e f   a t t'], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c    x b     a       a a a a b b d d d d f f f g h    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   b  c d e f   a g g  t t d e f   a g g  t t o o p p p p p p q q q q q q r r z z'], ['    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t      a b        c d t t t u v w x y  v w x y z'], ['   o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t  u u z z z z x      a b   c d e f   a g g t'], ['    x b     a       a a a a b b d d d d f f  t t t t t t t u v w x y   b  c d e f   a g g  t t'], ['    x      a b c j d e f   a g  g h h h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['    x      f   a g g    t'], ['l m m m m  p  p q q r s'], ['p p q q q r r r s s s t t t u u u v v  g    g h i    a b        f   a g g h h    x      a g g t h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y    w w x x y y z z'], ['  o o o o        a a a a b b d d d d f f  f g  h i    x      a b c d e f   z z d e f   a t t'], ['x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n p q r r o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u  v v v v x x x x y y y y y z z z t t t u v w'], ['    x b     a  b  c d e f    a  g g  t t'], ['    x       x b     a  b  c d e f   a t t   a  b  c d e  f   a g g  t t'], ['p p q q q r r r s s s t t t u u u v v  g    g h i    w w x x y y z z'], ['l m m m      a a a a b b d d d d f f f g h o o o o o o p p p p p p q q q q q q r r r    a b  s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z r r r s s s s s s t t t t t t u u u  z z z z z  m  p  p q q r s'], ['    n   a  b c d e f   a g g l'], ['    x      a b c j d e f   a g  g h  h h i j j j k k k k l l l l m n o p q r r r s s s s s s s t t t t t'], ['l m m m m  p  p q q r s    x      a b  c d e f   a g g  t'], ['    x     a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v d e f g a b c d e f   a g g  t t'], ['  a b  c d e f   a g g t'], ['l m m m  o t x  t    a b c d e f   a g g  t t m m m m m n n n n n n n n n n n n n n o o p p q o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t u u    a b        f   a g g h h    x      a g g t h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y  z z z z z q r r s'], ['d        g h i d '], ['l m n n n o o p p q o o o o o o p p p p q q q r r r r r s s s s s  s t t t t t t u u z z z z z q r r s'], ['    x b     a  b  c d e f    a  g  t t'], ['    a b        c d e f   a g g h h h i  j j j k k  k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y z'], ['    x b     a       a a a a b b d d d d f f f g h    a b        c  d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   b  c d e f   a g g  t t'], ['    a b        c d e f   a g g  h h h i j j j k k k l   a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v  w x y   t  t t t u v w x y z'], ['    x      a b   c d e f     o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t  u u z z z z x      a b   c d e f   a g g t a g g t'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f  a a g g  t t o o p p p p p p q q q q q q r r z z s s t t t t t  t t t u v w x y z'], ['p  p q q r r r s s s t t t u u u v v w w x x y y z z'], ['     a a a a b b d d d d f f f g h    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v '], ['    x      a b  c d e f g  a g g   t'], ['l m m m m m m m m n n n n n n n n n  n n n  n n o o p p q q r r s'], ['d      g   '], ['d       g h i  d '], ['x y a a a b  b d d  j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t t t t v w'], ['      g h i  t'], ['p p q q r r r s s s t t t u x x y y  z z'], ['    a b        c d e  f   a g g h h h i j j j k k k l l l l m n  o p q r r r s s s s s s s t t t t t  t t t u v w x y z'], ['    n   a  b c d e f   a g g   t t'], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s     x b     a       a a a a b b d d d d f f f g h    a b        c  d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   b  c d e f   a g g  t t t t t t t u u z z z z z'], ['  x y z x y z x y z x y z x y z x y z x y z x y z x  x      a b  c d e f   a g g t'], ['     a a a a b b    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y  f f g h i  e'], ['    x   o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t  t t t u  u z z z z z   a  b  c d e f e  a g g y t '], ['  o o o o        a a a a b b d d d d f f  f g  h i    x      a b c d e f   a z s s t t t t t t u u z z z z z d e f   a t t'], ['a b c d e f z b c d e  f g'], ['    a b        c d e  f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u  v w x y '], ['  o o o o        a a a a b b d d d d f f  d e f    a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t'], ['    a b         c d e f   a g g h h h i j j j k k k l l l l m n o p  v w x y '], ['o o o o       a a a a b b d d d d f f f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r z  z'], ['l m m m  o t x  t    a b c d e f   a g g  t t m m m m m n n n n n n n n n n n n n n o o p p q o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t u u   w x y  z z z z z q r r s'], ['    x      a g g    x      a b c  d e f   a g  g h h h h i j j j k k k k l s s s s  t t'], ['   o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t  u u z z z z x      a b   c d e f   a g  g t'], ['x y a a a b b d d  j j j j k k k k l l l l m q r r r s s s s s s s t t t t t t t t v w       a  b c d e f   a g g  t t'], ['    a b         c d e  f   a g g h h h i j j j k k k l l l l m n  o p q r r r s  t u v w x y z'], ['     b  c d  e f   a g g  g t t'], ['    a b        c d e f   a g g h h h i  j j j k k k l l l l m n o p q r r r  s s s s s s  y z'], [' p p q q r r r s s  s t t t u u u v v w w x x y y z z     a a a a b b d d d d f f f g h i    a b        f   a g g h h    x      a g g t h i j j    x      a  b  c d e f   a g g  t t j k k k l l l l m n o p q r r r s s s t t t t t t t t u v w x y   '], ['      a      a b         c d e f   a g g h h h i j j j k k k l l l l m n o p  v w x y b  c d e  f   a g g  t t'], ['     a a a a b b d d d d f f f g h o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t u u z z z z z   a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v '], ['    x b     a  b  c d e f    a   g g  t t'], ['      g h i   '], ['  a  b c d e f   a g g  t t'], ['a b c d e f g    x b   i j k l m n o p q r s t  u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g'], ['  o o o o       a a a a b b d d d d f f  f g h i    x      a b c d e f   a g g  t t o o p p p p p    x      a g g    x      a b c  d e f   a g  g h h h h i j j j k k k k l s s s s  t t a t t'], ['l m m m m m m m m n n n n n n n n n n n n n n o o p p q p p p q q q q q q r r r r r s s s s s  s t t t t t t u u z z z z z q r r s'], [' d   x       x b     a  b  c d e f    a t t   a  b  c d e  f   a g g  t t'], ['o o o o o o p p p p p p q q q q q q r r r r r s s s s s  s t t t t t t  u u z z z z x y a a a b b d d d d f f f g h i i i i i j j j j k k k k l l l l m n p q r r r s s s s s s s t t t t t    a b        c d e f   a g g h h  j k k k l l l l m n o p q r r r s s s s s s s t t t t t  t t t u v w x y z t t t u v w'], ['c a a a a b b    x b      a       a a a a b b d d d d f f f g h    a b    r s s s s s s s t t t t t t t t u v w x y   b  c d e f   a g g  t t d d d d f f f g h i'], ['l m m m m  p m p q q r s'], ['    x       a  b     t t t t t u  v w x y    a g g    t'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s o o o o o o p p p p p p q q q q q q r r r  z z s t t t t t t u  u z z z z z'], ['d      g h i d l'], ['    a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t    a b        c d e f   a g g  h h h i j j j k k k l   a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z t t t t t u v w x y z'], ['    x      a b   c d e f   a g g  t'], ['    a b        c d e  f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u  v w x y h'], ['   g     a a a a b b d d d d f f f g h i  e h i  '], ['      x   a   a  b  c d e f  t'], ['    t'], ['o o o o o o  p p p p p p q q q q q q r r r r r r s s s s s  s t t t t t t u u  u  z z z z z'], ['   o t x      a  b c d e f  t t'], ['a b c d e f g    x b  d       g h i  d  c d e f   a t t h i j k l m n o p q r s t  u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g'], ['l m m m  o t x  t    a b c d e f   a g g  t t m m m m m n n n n n n n n n n n n n n o o p p q o o o o o p p p p p p q q q q q q r r r r r s s s s s   s t t t t t t u u z z z z z q r  s'], ['  o o o o       a a a a b b d d d d f f  f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t     a a a'], ['s    a b         c d e f   a g g h h h i j j j k k k l l l l m n o p  v w x y '], ['  o o o o        a a a a b b d d d d f f  d e f    a g g  t t  o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t'], ['l m m m m  p  p q o o o o o o p p p p p p q q q q q  q r r r r r r s s s s s s t t t  z z r s'], ['x y a a a b  b d d  j j j j k k k k l    x b     a  b  c d e f    a g g  t t l l l m n p q r r r s s s s s s s t t t t t t t t v w'], ['l m m m m m m m m n o q q r r s'], ['    x     x  g    a g g t     a b  c d e f   a g g t'], ['  o o o o   d     a a a a b b d d d d f f  f g h i    x      a b c d e f   a g g  t t o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u z z z z z d e f   a t t'], ['     x      a b  c d e  f   a g g  t t'], ['  x y z x y z x y z x y z x y z x y z x y z x y z x  x      a b  c d e f   a  g g t'], ['o o o o o o p p p p p p q q q q q q r    x b     a  b  c d e f   a t t u  z z z z z'], ['   e c d e f   a g g t    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z'], ['    x      e c d e f   a g g t    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q r r r s s s s s s s t t t t      a a a a b b d d d d f f f g h    a b        c d j j j k k k l l l l m n o p q r r r s s s s s s s t t t t t t t t u v w x y   t  t t t u v w x y z   a b c d e f   a g g    t'], ['  o t x  t    a  b c d e f   a g g  t t'], ['a b c d e  f g h i j k l m n o p q r s t u v w x y z a b c d e f g    x      a b  c d e f   a g g  t h i j k l m n o p q r s t u v w x y z a b c d e f g'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s  s t t t t t  t u u u  z z z z z'], ['o o o o o o p p p p p p q q q q q  q r s s s s t t t  z z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s o o o o o o p p p p p p q q q q q q r r r  z z s t t t z z z z'], ['o o o o o o p p p p p p q q q q q q r r r r r r s s s s s s t t t t t t u u u u u u  v v v v v v w w w w w w x x x x x x y y y y  z z'], ['    a b        c d e f   a g g  h h h i j j j k k k l l l l m n o p q  r r r s s s s s s s t t t t t  t t t u v w x y z'], ['d       g h i  d'], ['      g h'], ['    x      a b  c d e f     a b        c d e f   a g g h h h i j j j k k k l l l l m n o p q r r r s s s t t t t t t t t u  v w x y g  a g g   t'], ['x y a a a b  b d d  j j j j k k k k l    x b     a  b  c d e f    a g g o o o o o o p p p p p  p q  q q q q q r r r r r r s s s    x      a b c d e f   a g g  t t s s  y y y z z z z z t t l l l m n p q r r r s s s s s s s t t t t t t t t v w'], [' p p q q r  r r s s  s t t t u u u v v w w x x y y z z    a a a a b b d d d d f f f g h i  ']]\n    results = [{'a': 2, 'b': 2}, {'a': 2, 'b': 2}, {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'g': 1}, {'r': 1, 't': 1, 'g': 1}, {'b': 4}, {}, {'a': 1}, {'x': 3}, {'c': 1, 'a': 1, 'r': 1, 's': 1}, {'l': 2}, {'b': 5}, {'z': 2}, {'a': 7, 'b': 7}, {'c': 4}, {'p': 3, 'r': 3}, {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1}, {'o': 4}, {'b': 5}, {'m': 3}, {'a': 7}, {'o': 4}, {'o': 4}, {'b': 5}, {'o': 4}, {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1}, {'p': 1, 'l': 1, 'e': 1}, {'o': 4}, {'p': 1, 'u': 1, 'z': 1, 'l': 1, 'e': 1}, {'p': 3, 'r': 3}, {'p': 3, 'r': 3}, {'a': 7}, {'p': 1, 'l': 1, 'e': 1}, {'j': 2, 'o': 2}, {'p': 1, 'r': 1}, {'b': 6}, {'p': 1}, {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1}, {'b': 4}, {'m': 3}, {'j': 2}, {'j': 2, 'o': 2}, {'j': 2}, {'a': 7}, {'b': 5}, {'p': 1}, {'r': 3}, {'j': 2}, {'o': 4}, {'j': 2}, {'j': 2}, {'x': 3}, {'j': 2}, {'j': 2}, {'a': 1, 'b': 1, 'c': 1, 'e': 1, 'f': 1, 'g': 1}, {'c': 4}, {'z': 2}, {'o': 4}, {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'p': 1, 'f': 1, 'g': 1}, {'o': 4}, {'x': 3}, {'m': 3}, {'b': 5}, {'j': 2}, {'m': 3}, {'b': 6}, {'h': 1, 'e': 1}, {'m': 3, 'o': 3}, {'l': 2, 'j': 2}, {'p': 4}, {'r': 3}, {'j': 2}, {'z': 2}, {'z': 2}, {'z': 2}, {'p': 1}, {'s': 1}, {'o': 6}, {'m': 3}, {'l': 2, 'j': 2}, {'o': 4}, {'p': 1}, {'b': 5}, {'b': 5}, {'b': 5}, {'r': 3}, {'c': 4}, {'p': 3, 'r': 3}, {'r': 1}, {'b': 3}, {'m': 3}, {'j': 2}, {'o': 6}, {'a': 7}, {'p': 3, 'r': 3}, {'l': 2, 'j': 2}, {'p': 8}, {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1}, {'p': 1}, {'p': 1}, {'a': 7}, {'a': 7}, {'p': 2}, {'p': 1, 'l': 1, 'e': 1}, {'r': 3, 'j': 3}, {'a': 4, 'd': 4}, {'q': 3, 'r': 3, 's': 3, 't': 3, 'u': 3}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6, 'x': 6}, {'n': 14}, {'a': 4, 'd': 4}, {'x': 9}, {'t': 8}, {'a': 3, 'b': 3, 'c': 3, 'd': 3, 'e': 3, 'f': 3, 'g': 3}, {'t': 8}, {'s': 7}, {'h': 1}, {'l': 1}, {'t': 8}, {'d': 1}, {'u': 1}, {'b': 1}, {'t': 8}, {'p': 1}, {'z': 1}, {'d': 8, 't': 8}, {'g': 1}, {'t': 8}, {'s': 1}, {'t': 8}, {'c': 1}, {'t': 8}, {'n': 1}, {'v': 1}, {'x': 9}, {'f': 1}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6, 'x': 6}, {'i': 1}, {'t': 8}, {'t': 8}, {'s': 7}, {'t': 1}, {'t': 6}, {'o': 1}, {'t': 8}, {'m': 1}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6}, {'x': 9}, {'t': 6}, {'w': 1}, {'s': 14}, {'x': 1}, {'r': 1}, {'j': 1}, {'t': 10}, {'s': 7}, {'t': 8}, {'e': 1}, {'t': 8}, {'a': 4, 'd': 4}, {'x': 8, 'z': 8}, {'s': 7}, {'s': 14}, {'t': 6}, {'s': 13}, {'x': 9}, {'s': 14}, {'x': 5}, {'s': 13}, {'s': 7}, {'n': 13}, {'t': 8}, {'s': 14}, {'x': 9}, {'k': 1}, {'s': 14}, {'a': 4, 'd': 4}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6}, {'a': 4, 'd': 4}, {'t': 14}, {'y': 1}, {'s': 13}, {'x': 7}, {'s': 13}, {'d': 4}, {'x': 7, 'y': 7, 'z': 7}, {'s': 7}, {'x': 10, 'y': 10, 'z': 10}, {'x': 2, 'y': 2, 'z': 2}, {'a': 4, 'd': 4}, {'t': 11}, {'x': 9}, {'x': 5}, {'a': 4, 'd': 4}, {'s': 28}, {'t': 8}, {'t': 8}, {'q': 3, 'r': 3, 's': 3, 't': 3, 'u': 3}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6}, {'x': 8, 'z': 8}, {'s': 21}, {'s': 14}, {'p': 7}, {'t': 8}, {'x': 8, 'z': 8}, {'s': 7}, {'t': 16}, {'x': 8, 'z': 8}, {'t': 16}, {'x': 9}, {'s': 7}, {'i': 5}, {'a': 4}, {'t': 27}, {'s': 7}, {'a': 4}, {'x': 6}, {'x': 13}, {'t': 6}, {'t': 17}, {'s': 13}, {'t': 6}, {'x': 10}, {'s': 25}, {'x': 9}, {'a': 4}, {'y': 7, 'z': 7}, {'t': 8}, {'x': 8, 'z': 8}, {'f': 3}, {'x': 8, 'z': 8}, {'s': 31}, {'t': 14}, {'t': 6}, {'x': 10}, {'x': 10, 'y': 10, 'z': 10}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6}, {'t': 8}, {'s': 14}, {'s': 16}, {'s': 14}, {'a': 4}, {'a': 4}, {'t': 14}, {'a': 4}, {'s': 20}, {'t': 8}, {'s': 26}, {'a': 4, 'd': 4}, {'x': 9}, {'t': 27}, {'a': 4}, {'s': 14}, {'s': 25}, {'t': 6}, {'s': 7, 't': 7}, {'t': 27}, {'t': 8}, {'a': 4, 'd': 4}, {'t': 13}, {'a': 11}, {'s': 20}, {'t': 8}, {'s': 19, 't': 19}, {'t': 8}, {'s': 20}, {'s': 20}, {'x': 9}, {'t': 8}, {'x': 8, 'z': 8}, {'s': 14}, {'s': 26}, {'x': 9}, {'t': 6}, {'t': 9}, {'a': 11}, {'s': 25, 't': 25}, {'t': 8}, {'t': 12}, {'t': 5}, {'x': 6}, {'x': 8, 'z': 8}, {'s': 16}, {'t': 8}, {'f': 3}, {'x': 9}, {'s': 19, 't': 19}, {'t': 27}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6}, {'t': 6}, {'t': 27}, {'x': 2}, {'v': 6, 'w': 6}, {'x': 12}, {'t': 10}, {'x': 10, 'y': 10, 'z': 10}, {'x': 2}, {'z': 6}, {'x': 10, 'y': 10, 'z': 10}, {'s': 8, 't': 8}, {'x': 8, 'y': 8, 'z': 8}, {'x': 9}, {'a': 4}, {'x': 18}, {'x': 10, 'y': 10, 'z': 10}, {'a': 10}, {'q': 3, 'r': 3, 's': 3}, {'x': 6}, {'s': 25}, {'s': 20}, {'x': 5}, {'y': 8, 'z': 8}, {'s': 25}, {'t': 19}, {'a': 5}, {'y': 7}, {'x': 8}, {'x': 9}, {'x': 8, 'z': 8}, {'s': 20}, {'a': 10, 't': 10}, {'x': 9}, {'x': 5}, {'t': 25}, {'s': 10}, {'t': 25}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6}, {'v': 6}, {'t': 3, 'u': 3}, {'s': 16}, {'x': 9, 'y': 9, 'z': 9}, {'t': 14}, {'x': 10}, {'f': 3}, {'t': 16}, {'a': 4, 'd': 4}, {'a': 16}, {'t': 8}, {'x': 6}, {'s': 13}, {'s': 7}, {'t': 29}, {'w': 6}, {'t': 5}, {'l': 4, 't': 4}, {'o': 6, 's': 6, 't': 6, 'u': 6}, {'h': 7}, {'s': 13}, {'s': 16}, {'a': 4}, {'x': 2}, {'t': 6}, {'i': 5}, {'t': 14}, {'s': 14}, {'s': 33}, {'x': 5, 'y': 5, 'z': 5}, {'s': 14}, {'a': 4}, {'t': 4}, {'s': 14, 't': 14}, {'a': 4}, {'t': 3}, {'s': 14, 't': 14}, {'t': 24}, {'x': 8}, {'a': 4, 'd': 4}, {'t': 9}, {'t': 22}, {'x': 5}, {'x': 9}, {'x': 8, 'z': 8}, {'a': 2, 'b': 2, 'c': 2, 'd': 2}, {'x': 5}, {'a': 3, 'b': 3, 'c': 3, 'd': 3}, {'a': 1}, {'\u00e4': 1, '\u00e5': 1, '\u00f6': 1}, {'a': 2, 'g': 2, 't': 2}, {'a': 2, 'g': 2, 't': 2}, {'n': 14}, {'a': 2, 'g': 2, 't': 2}, {'a': 4, 'd': 4}, {'t': 8}, {'g': 1, 'h': 1, 'i': 1}, {'o': 6, 'p': 6, 'q': 6, 'r': 6}, {'t': 8}, {'c': 1, 'g': 1, 'h': 1, 'i': 1}, {'t': 3}, {'t': 8}, {'b': 2, 'a': 2, 'g': 2, 't': 2}, {'n': 14}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6, 'x': 6}, {'t': 8}, {'t': 16}, {'s': 7}, {'q': 1}, {'t': 4}, {'a': 4, 'd': 4}, {'o': 6, 'p': 6, 'q': 6, 'r': 6}, {'a': 6}, {'n': 14}, {'a': 4, 'd': 4}, {'t': 8}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'b': 2, 'c': 2, 'd': 2, 'e': 2, 'f': 2}, {'n': 14}, {'t': 8}, {'b': 2, 'a': 2, 't': 2}, {'a': 2, 'g': 2, 't': 2}, {'a': 2, 'e': 2, 'g': 2, 't': 2}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'l': 4}, {'t': 8}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6, 'x': 6}, {'t': 10}, {'t': 8}, {'o': 6, 'p': 6, 'q': 6, 's': 6, 't': 6}, {'a': 2, 'g': 2}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6}, {'t': 3}, {'a': 2, 'g': 2}, {'a': 5, 'b': 5}, {'m': 4}, {'t': 8}, {'s': 7}, {'t': 8}, {'a': 2, 'g': 2}, {'t': 16}, {'t': 11}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'n': 14}, {'n': 14}, {'g': 2}, {'t': 8}, {'t': 8}, {'q': 3, 'r': 3, 's': 3, 't': 3, 'u': 3}, {'t': 10}, {'t': 8}, {'a': 2, 'g': 2}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6, 'x': 6}, {'t': 10}, {'d': 1, 'g': 1, 'h': 1, 'i': 1}, {'t': 8}, {'o': 6}, {'r': 3, 's': 3, 't': 3, 'u': 3}, {'o': 6, 'p': 6, 'q': 6}, {'s': 7}, {'r': 3, 's': 3, 't': 3, 'u': 3}, {'n': 14}, {'r': 3, 's': 3, 't': 3}, {'t': 24}, {'b': 2, 'a': 2, 'g': 2, 't': 2}, {'n': 14}, {'t': 8}, {'a': 10}, {'x': 1, 'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 't': 1}, {'a': 2, 'g': 2, 't': 2}, {'a': 2, 'g': 2, 't': 2}, {'t': 10}, {'a': 2, 't': 2}, {'n': 14}, {'d': 2}, {'a': 2, 'g': 2, 't': 2}, {'t': 8}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'o': 6}, {'g': 2}, {'t': 16}, {'t': 10}, {'t': 22}, {'n': 14}, {'g': 2}, {'t': 8}, {'q': 3, 'r': 3, 's': 3, 't': 3, 'u': 3}, {'a': 4, 'd': 4}, {'t': 8}, {'t': 8}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6, 'x': 6}, {'a': 2, 'g': 2, 't': 2}, {'a': 4, 'd': 4}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'s': 7}, {'m': 4}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6}, {'g': 2, 't': 2}, {'a': 2, 'g': 2, 't': 2}, {'t': 8}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6}, {'a': 12}, {'d': 2}, {'g': 2}, {'t': 11}, {'a': 4}, {'t': 16}, {'t': 10}, {'g': 1, 'h': 1, 'i': 1}, {'t': 8}, {'t': 5}, {'a': 2, 't': 2}, {'a': 4}, {'t': 8}, {'a': 4, 'd': 4}, {'t': 22}, {'s': 7}, {'o': 6, 'p': 6}, {'g': 3}, {'g': 3}, {'a': 4}, {'s': 7}, {'t': 30}, {'a': 12}, {'t': 12}, {'o': 6, 'p': 6, 'q': 6, 's': 6, 't': 6}, {'t': 9}, {'t': 11}, {'a': 4, 'd': 4}, {'a': 4}, {'a': 4, 'd': 4}, {'a': 4, 'd': 4}, {'a': 6}, {'d': 3, 'e': 3, 'f': 3, 'g': 3}, {'o': 6}, {'a': 5}, {'t': 10}, {'g': 4}, {'d': 1, 'g': 1, 'h': 1, 'i': 1}, {'a': 4}, {'n': 14}, {'t': 7}, {'t': 10}, {'o': 6, 'a': 6, 'p': 6, 'q': 6}, {'g': 6}, {'t': 10}, {'t': 10}, {'a': 5, 'b': 5}, {'a': 3, 'd': 3, 'f': 3}, {'a': 11}, {'t': 9}, {'t': 7}, {'t': 3}, {'t': 8}, {'t': 8}, {'a': 2, 'g': 2, 't': 2}, {'a': 4}, {'t': 14}, {'t': 8}, {'d': 1, 'g': 1, 'h': 1, 'i': 1}, {'g': 3}, {'t': 10}, {'o': 6, 'p': 6, 'q': 6, 's': 6, 't': 6}, {'q': 3, 'r': 3, 's': 3, 't': 3, 'u': 3}, {'a': 7}, {'o': 6}, {'t': 18}, {'a': 14}, {'s': 7, 't': 7}, {'t': 7}, {'t': 9}, {'s': 7}, {'g': 2}, {'m': 4}, {'t': 12}, {'a': 6, 'd': 6}, {'t': 9}, {'b': 2, 'a': 2, 'g': 2, 't': 2}, {'a': 4, 't': 4}, {'q': 3, 'r': 3, 's': 3, 't': 3, 'u': 3}, {'t': 22}, {'a': 2, 'g': 2}, {'s': 7}, {'m': 4}, {'g': 5}, {'a': 2, 'g': 2}, {'t': 19}, {'d': 2}, {'o': 8}, {'b': 2, 'a': 2, 't': 2}, {'t': 8}, {'t': 10}, {'t': 12}, {'t': 8}, {'t': 10}, {'r': 3, 's': 3, 't': 3, 'u': 3}, {'t': 8}, {'g': 3}, {'n': 14}, {'d': 1, 'g': 1}, {'d': 2}, {'t': 8}, {'g': 1, 'h': 1, 'i': 1, 't': 1}, {'r': 3, 's': 3, 't': 3}, {'t': 8}, {'a': 2, 'g': 2, 't': 2}, {'t': 17}, {'x': 10}, {'t': 8}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'t': 8}, {'b': 2, 'c': 2, 'd': 2, 'e': 2, 'f': 2}, {'t': 8}, {'t': 10}, {'l': 4}, {'o': 6, 'a': 6, 'p': 6, 'q': 6}, {'n': 14}, {'g': 4, 'h': 4, 'k': 4, 's': 4}, {'t': 7}, {'t': 10}, {'l': 4}, {'g': 3}, {'s': 6}, {'t': 14}, {'a': 4, 'g': 4, 'l': 4}, {'t': 14}, {'b': 2, 'a': 2, 'g': 2, 't': 2}, {'g': 1, 'h': 1, 'i': 1}, {'a': 2, 'g': 2, 't': 2}, {'b': 4}, {'a': 10}, {'n': 14}, {'a': 4, 't': 4}, {'t': 22}, {'a': 11}, {'m': 5}, {'t': 6}, {'o': 12, 'p': 12, 'q': 12}, {'d': 2}, {'t': 20}, {'a': 2, 'g': 2}, {'t': 8}, {'a': 4, 'd': 4}, {'a': 2}, {'t': 1}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'t': 3}, {'d': 6}, {'n': 14}, {'a': 10, 't': 10}, {'l': 4}, {'t': 10}, {'p': 8}, {'t': 10}, {'m': 8}, {'g': 5}, {'t': 10}, {'a': 2, 'g': 2, 't': 2}, {'x': 10}, {'o': 6, 'p': 6, 'q': 6}, {'t': 17}, {'t': 18}, {'t': 4}, {'a': 5, 'g': 5}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6}, {'o': 6, 'p': 6, 'q': 6}, {'o': 12, 'p': 12, 'q': 12}, {'o': 6, 'p': 6, 'q': 6, 'r': 6, 's': 6, 't': 6, 'u': 6, 'v': 6, 'w': 6, 'x': 6}, {'t': 8}, {'d': 2}, {'g': 1, 'h': 1}, {'t': 9}, {'s': 12, 't': 12}, {'a': 4, 'd': 4}]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/112", "prompt": "\ndef reverse_delete(s,c):\n    \n\n    ss = \"\".join(filter(lambda ch: ch not in c, s))\n    return ss, ss == ss[::-1]\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef reverse_delete(s,c):\n    \n\n    ss = \"\".join(filter(lambda ch: ch not in c, s))\n    return ss, ss == ss[::-1]\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef reverse_delete(s,c):\n    \n\n    ss = \"\".join(filter(lambda ch: ch not in c, s))\n    return ss, ss == ss[::-1]\n\n", "raw_modification": "```python\n<code_start>\ndef reverse_delete(s, c):\n    # Create a list to store characters not in c\n    filtered_chars = []\n    for ch in s:\n        if ch not in c:\n            filtered_chars.append(ch)\n    \n    # Convert list back to string\n    ss = \"\"\n    for ch in filtered_chars:\n        ss += ch\n    \n    # Check if the string is a palindrome\n    is_palindrome = True\n    n = len(ss)\n    for i in range(n // 2):\n        if ss[i] != ss[n - i - 1]:\n            is_palindrome = False\n            break\n    \n    return ss, is_palindrome\n<code_end>\n```", "modification": "\ndef reverse_delete(s, c):\n    \n    filtered_chars = []\n    for ch in s:\n        if ch not in c:\n            filtered_chars.append(ch)\n    \n    \n    ss = \"\"\n    for ch in filtered_chars:\n        ss += ch\n    \n    \n    is_palindrome = True\n    n = len(ss)\n    for i in range(n // 2):\n        if ss[i] != ss[n - i - 1]:\n            is_palindrome = False\n            break\n    \n    return ss, is_palindrome\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['abcde', 'ae'], ['abcdef', 'b'], ['abcdedcba', 'ab'], ['dwik', 'w'], ['a', 'a'], ['abcdedcba', ''], ['abcdedcba', 'v'], ['vabba', 'v'], ['mamma', 'mia'], ['racecar', 'ace'], ['level', 've'], ['noon', 'on'], ['abcba', 'bc'], ['kayak', 'ka'], ['deified', 'de'], ['radar', 'ad'], ['tenet', 'ne'], ['reviver', 'er'], ['refer', 'fe'], ['non', 'on'], ['abcba', 'ne'], ['radar', 'a'], ['vee', 've'], ['ave', 've'], ['level', 'ave'], ['ve', 've'], ['er', 'ervee'], ['bc', 'ervee'], ['noon', 've'], ['ve', 'v'], ['', 've'], ['deified', 'ne'], ['WqHkuRXIf', 'WqHkuRXIf'], ['ervee', 'vrefere'], ['vnonrefere', 've'], ['nooon', 'noon'], ['vrevivere', 've'], ['racecar', 'racecar'], ['ratcetenetcar', 'racetenetcar'], ['deified', 'deifiedracecar'], ['vnonrefere', 'v'], ['er', 'e'], ['noonoa', 'noona'], ['ve', 'WqHkuRXIf'], ['racetenetcar', 'racetenetcar'], ['', 'e'], ['tenet', 'tenet'], ['vreviveere', 'vrevivere'], ['tenet', 'radar'], ['racecar', 'deace'], ['refer', 'er'], ['racecar', 'vrevivere'], ['dei', 'deified'], ['re', 'rer'], ['vnonvreviveererefere', 'v'], ['accce', 'acce'], ['vnoone', 'v'], ['deifiedve', 'deified'], ['noner', 'ervee'], ['refer', 'vfe'], ['refer', 'vnonvreviveererefere'], ['deifeied', 'deified'], ['racet', 'racetenetcar'], ['abcba', 'abcba'], ['radar', ''], ['refer', 'refer'], ['', ''], ['vnoone', 'xUJIA'], ['onooon', 'nooon'], ['tdetenet', 'tenet'], ['ve', 'WqHXIf'], ['dveeifieacced', 'dveeified'], ['tenetvnonvreviveererefere', 'tenet'], ['dedi', 'e'], ['dedi', 'dedi'], ['r', 'reviver'], ['referr', 'refer'], ['kaonyak', 'kayak'], ['radarr', 'radar'], ['tdetenet', 've'], ['reviver', 'de'], ['radarr', 'radarr'], ['non', 'non'], ['raderveenar', 'deifiedracecara'], ['dei', 'ne'], ['racetenvfeetcar', 'racetenettcar'], ['ne', ''], ['avreviveerebcba', 'bc'], ['erve', 'ervee'], ['noxUJIAn', 'non'], ['racecar', 'ne'], ['vffe', 'vfe'], ['bc', 'bc'], ['e', 'ee'], ['none', 'vfe'], ['vnonreeferrer', 'v'], ['onooon', 'onooon'], ['raderveenar', 'raderveenar'], ['ve', 'eve'], ['nonnon', 'nonnon'], ['raderveenar', 've'], ['vee', 'vee'], ['lelvel', 'ave'], ['vededie', 'vee'], ['raceetenvfeetcar', ''], ['refer', 'fee'], ['acreferrcce', 'accce'], ['racetenvftcar', 'noxUJIAn'], ['dde', 'deified'], ['racecar', 'aei'], ['kayak', 'xyz'], ['madam', 'ab'], ['rotator', 'z'], ['tattarrattat', 'bcdfghjklmnpqvwxyz'], ['abcedeba', 'aceb'], ['level', 'ev'], ['racecar', 'a'], ['rotator', 't'], ['asymmetrical', 'lme'], ['asymmetr', 'asymmetrical'], ['mmadam', 'ab'], ['lme', 'lme'], ['aceb', 'lme'], ['kayak', 'lme'], ['racecaeir', 'racecaeir'], ['abcedeba', 'abcedeba'], ['t', 't'], ['xyz', 'xyz'], ['racecar', 'raccecar'], ['racecaeir', 't'], ['kkayk', 'xyz'], ['mmadadm', 'mmaadam'], ['kayakaceb', 'abcedeba'], ['mmadadm', 'dmmaadam'], ['racecaeir', 'racmadamecaeir'], ['lme', 'a'], ['mmadadm', 'bcdfghjklmnpqvwxyz'], ['rotator', 'asymmetr'], ['kayak', 'ev'], ['madam', 'aab'], ['racecaeir', 'ev'], ['mmadaaeim', 'dmmaadam'], ['aab', 'asymmetrical'], ['kayak', 'racmadamecaeir'], ['ammadadm', 'mmadadm'], ['asymmetrical', 'lmme'], ['kayakasymmetr', 'kayak'], ['t', 'xxyz'], ['aei', 'mmaadam'], ['bcdfghjklmnpqvqwxyz', 'mmadadm'], ['bcdfghraccecarjklmnpqvkkaykwxyz', 'bcdfghjklmnpqvwxyz'], ['adm', 'mmaadam'], ['madbcdfghraccecarjklmnpqvkkaykwxyzam', 'madam'], ['kaadmyak', 'xyz'], ['aceb', 'aceb'], ['rotrator', 'rotrator'], ['bcdfghjklmnpqvwxyz', 'ev'], ['ab', 'ab'], ['bcdfghjklmnpqvqwxyz', 'bcdfghjklmnpqvqwxyz'], ['tattarrattat', 'xxyz'], ['racecar', ''], ['elevelv', 'ev'], ['ev', 'ev'], ['racecaeir', 'rotator'], ['mmaadam', 'mdam'], ['asymmetrical', 'bcdfghraccecarjklmnpqvkkaykwxyz'], ['kayakaceb', ''], ['rotrator', 'ab'], ['elevzelv', 'emadbcdfghraccecarjklmnpqvkkaykwxyzamv'], ['racecar', 'racecear'], ['mmaddadm', 'mmadadm'], ['tattarrattat', 'mdam'], ['madbcdfghraccecarjklmnpqvkkaykwxyzam', 'maraceceardam'], ['madam', 'acebb'], ['bcdfghjklmnpqvqwxyz', 'eacebbv'], ['lme', 'xyz'], ['tattarrattat', 'mddmam'], ['ammadadme', 'ev'], ['t', 'xadmxzyz'], ['rotator', 'racecear'], ['kaadmyak', 'kaadmyak'], ['abcedeba', 'a'], ['bcdfqvwxyz', 'bcdfghjklmnpqvwxyz'], ['madam', 'elevzelv'], ['abceadmdeba', 'abceadmdeba'], ['mmadadm', 'mmadadm'], ['kayak', 'lmxxyz'], ['abctattarrattatedeba', 'abcedeba'], ['racecaeir', 'xadmxzyz'], ['kayaak', 'lmemmadam'], ['ammadadm', 'madam'], ['kayakaceb', 'mmadadm'], ['asymmetrical', 'l'], ['mmadadm', 'rotrator'], ['bcdfghraccecarjklmmnpqvkkaykwxyz', 'bcdfghraccecarjklmnpqvkkaykwxyz'], ['maraceceardam', 'racecear'], ['asymmetrical', 'asymmetrical'], ['bcdfghjklmnpqvqwxyz', 'bcdfghjklmnpqvqwxz'], ['tattarrattaasymmetricalt', 'xxyz'], ['xadmxzyz', 'lmemmadam'], ['dmmaaeacebbvdam', 'mmadaaeim'], ['raceccear', 'racecear'], ['raccecar', 'a'], ['asymmetr', 'asymmetr'], ['aab', 'racecarab'], ['kkayk', 'tattarrattat'], ['racecaeir', 'racmadameceaeir'], ['kayak', 'lmemmadam'], ['bcdfghraccecakrjklmnpqvkkaykwxyz', 'adm'], ['elevzelv', 'xxyz'], ['bcdfghraccecarjklmmnpqvkkaykwxyz', 'mdam'], ['mddmam', 'bcdfghjklmnpqasymmetricalvwxyz'], ['bcdfqvwxyz', 'tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz'], ['teacebbvattarrraattat', 'tattarraattat'], ['maraceceardam', 'maraceceaarda'], ['xylmxxyzz', 'lme'], ['asytr', 'tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz'], ['madbcdfghraccecarjklmnpqvkkkaykwxyzam', 'madam'], ['bcdfghraccecarjklmanpqvkkaykwxyzxyz', 'bcdfghraccecarjklmnpqvkkaykwxyzxyz'], ['racecaeir', ''], ['asymmetrical', 'teacebbvattarrraattat'], ['xxyz', 'abcedeba'], ['ammadadm', 'maraceceaarda'], ['racaecaeir', 'racmadameceaeir'], ['asytrmmadam', 'ab'], ['rotrator', 'kayaak'], ['rotrr', 'rotraatasymmetrr'], ['racecear', 'bcdfghraccecarjklmnpqvkkaykwxyz'], ['tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz', 'tattarrakayakasymmetrttat'], ['racmadameceaeabcedebair', 'racmadameceaeir'], ['tattarrattat', 'bcdfghjlmnpqvwxyz'], ['abcedebaxxyzxadmxzyz', 'abcedebaxadmxzyz'], ['abcedebaxxyzxadmxzyz', 'racmadameceaeir'], ['eccecar', 'madbcdfghraccecarjklmnpqvkkkaykwxyzam'], ['asymmetr', 'mdam'], ['lmxxyz', 'bcdfghjklmnpqvqwxz'], ['t', 'tt'], ['tattarrammaddadmttat', 'tattarrattat'], ['asymmetr', 'aceb'], ['kayakaceb', 'abcedceba'], ['kaadmyak', 'madbcdfghraccecarjklmnpqvkkkaykwxyzam'], ['elevze', 'xxyrotator'], ['xxyz', 'ab'], ['ammadadm', 'tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz'], ['ledmmaadamvel', 'level'], ['xadmxzyz', 'bcdfghraccecarjklmnpqvkkaykwxyzxyz'], ['rotat', 'rotator'], ['eelevze', 'lmemmadam'], ['xadmxzy', 'xadmxzyz'], ['l', 'tattarrattat'], ['ab', 'lme'], ['tattarrattammadadmat', 'tattarrattat'], ['elevzelv', 'elevzelv'], ['kayakaceb', 'mmadmmadadmadm'], ['tattarrattat', 'abcedeba'], ['mdam', 't'], ['eteacebbvattarrraattatv', 'eteacebbvattarrradmmaadamattatv'], ['racmaeteacebbvattarrraattatvdebair', 'racmadameceaeabcedebair'], ['kmmadaaeimk', 'xyz'], ['mmaddadm', 'eteacebbvattarrradmmaadamattatv'], ['lmme', 'mamadadm'], ['asymttical', 'asymttical'], ['eelevzelv', 'eelevzelv'], ['racmadameceaeir', 'lmemmadam'], ['racecr', 'ammadaadm'], ['racmadameceaeabtattarrattaasymmetricaltcedebair', 'racmadameceaeir'], ['kaadmyak', 'kaadmak'], ['mmadam', 'batattarrammaddadmttatb'], ['mdam', 'xxyz'], ['mmaasymmetrdadkmmadaaeimk', 'mmmadadm'], ['kayamamadadmk', 'xyz'], ['asytrmmadam', 'adm'], ['ammadadm', 'tattarrattartbcdfghraccdecarjklmmnpz'], ['mmaadamm', 'mmaadamm'], ['xxydmmaaeacebbvdamz', 'xxyz'], ['eteacebbvattarrraattatv', 'eteacebbvattarrradmmaadamaelevzettatv'], ['racecea', 'racecear'], ['kkayk', 'xyracecarz'], ['lmem', 'lmemmadam'], ['asytrmmadam', 'tattarrammaddadmttat'], ['dmmmmaadamam', 'dmmaadam'], ['racrecaeeir', 'racrecaeir'], ['abcedebaxadmxzyz', 'mmaadam'], ['racecarab', ''], ['mdam', 'ledmmaadamvel'], ['aceracecarabbb', 'acebb'], ['acbcdfghjklmnpqvqwxyzeb', 'aceb'], ['raccecar', 'raccecar'], ['mdam', 'asymttical'], ['mmadadm', 'lmemmadam'], ['eteacebbvattarrradmmaadamattatv', 'abcedeba'], ['ace', 'asymmetr'], ['tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz', 'tattrotrrarrakayakasymmetrttat'], ['abceadmdeba', 'ev'], ['', 'xxyz'], ['kaadmak', 'raccecar'], ['ammadalmxxyz', 'abcedceba'], ['mmadadm', 'mmaadadm'], ['acracecare', 'asymmetr'], ['asymmrical', 'lme'], ['ammadalmxxyz', 'kayakaceb'], ['asymmetrical', 'lmee'], ['abctattrtrattatedeba', 'abcedeba'], ['kayamkamadadmk', 'xyz'], ['abcedebaxxyzxadmxzyz', 'tattarraattat'], ['level', 'tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz'], ['lmee', 'lmee'], ['asytrmmadam', 'lmxxyz'], ['asymmetriabcedebaxxyzxadmxzyzl', ''], ['lmee', 'xyz'], ['asymtr', 'mdaxadmxzyzm'], ['eelevlevelzelv', 'eelevzzelv'], ['rrotrator', 'ammmadaadmmdam'], ['ledmmaadamvel', 'll'], ['acebb', 'kayakattceb'], ['lmee', 'eteacebbvattarrradmmaadamattatv'], ['abcedaeba', 'tattarrattat'], ['lme', 'xxyrotator'], ['bcdfghjklmnpqvwxyz', 'lmeeev'], ['lmme', 'asymtticaldadm'], ['asymdaxadmxzyzmtrmmadam', 'asytrmmadam'], ['lmme', 'abcedeba'], ['mmadam', 'madam'], ['acracecare', 'emadbcdfghraccecarjklmnpqvkkaykwlmmexyzamv'], ['racmmaddadmmadameceaeir', 'racmadameceaeir'], ['levevl', 'ledmmaadamvel'], ['tattrarrattat', 'racecea'], ['xxx', 'xxyz'], ['tattarrattat', 'abcedaeba'], ['teacebbvattarrraattat', 'xyracecarz'], ['bcdfghjklmnpqvqwxyz', 'bcdfghjklmnpqvqwabxyz'], ['abceadmacebdeba', 'abceadmdeba'], ['kkaadmyak', 'madbcdfghraccecarjklmnpqvkaykwxyzam'], ['xxyzlmemmadam', 'abccedeba'], ['kayakasymmetr', 'a'], ['mddmam', 'tattarrattat'], ['emadbcdfghraccecarjklmnpqvkkaykwlmmexyzamv', 'acracecare'], ['eteacebbvattarrraattabatattarrammaddadmttatbtv', 'eteacebbvattarrradmmaadamattatv'], ['abcezadmdeba', 'rotator'], ['lmemmadam', 'kayaamadbcdfghraccecarjklmnpqvkkkaykwxyzamk'], ['t', 'lmemmadam'], ['lme', 'ledmmaadamvel'], ['emadbcdfghraccecarjklmnpqvkkaykwlmmexyzamasytrmmadam', 'acracecare'], ['racmadameceaeabtattarrattaasymmetricaltcedebair', 'racecea'], ['ammadaadm', 'rotator'], ['mddam', 'asymtticaxyzl'], ['lmme', 'lme'], ['asymtdticaldadm', 'asyimtticaldadm'], ['asyimtticaldadm', 'asyimtticaldadm'], ['lmee', 'ledmmaadamvel'], ['mamadadm', 'mmaasymmetrdadkmmadaaeimk'], ['asymmetriabcedebaxxyzxadmxzyzl', 'asymmetriabcedebaxxyzxadmxzyzl'], ['racecarab', 'racecarab'], ['ledmmaadamvel', 'leve'], ['rotator', 'rotator'], ['rrotrator', 'lme'], ['asyimtticaldadm', 'a'], ['xxyzlmemmadam', 'rotator'], ['ma', 'madam'], ['elevze', 'xxyraceceartor'], ['bcdfghjklmnpqvqwxyz', 'emamadadmacebbv'], ['reteacebbvattarrradmmaadamattatvotrator', 'rotrator'], ['amadbcdfghraccecarjklmnpqvkkaykwxyzambcedaeba', 'abcedaeba'], ['raceckayakaceb', 'abcedceba'], ['mmdam', 'mdam'], ['mamadaeacebbv', 'mmaasymmetrdadkmmadaaeimk'], ['abcdeba', 'abcedeba'], ['adm', 'tattarrammaddadmttat'], ['lmem', 'raceckayakaceb'], ['tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz', 'xxyraceceartor'], ['madbcdfghracabcdebaadmcecnarjklmnpqvkaykwxyzam', 'madbcdfghracabcdebaadmbcdfghjklmnpqvwxyzcecarjklmnpqvkaykwxyzam'], ['abcdeba', 'racecaeir'], ['maeccecardmam', 'acebb'], ['kaadmyak', 'eteacebbvattarrradmmaadamattatvkaadmyaceak'], ['asymmetr', 'lmxxyz'], ['ammadalmxxyz', 'abcedcracmadameceaeabtattarrattaasymmetricaltcedebaira'], ['mmaadaabcedcracmadameceaeabtattarrattaasymmetricaltcedebairam', 'mmaadam'], ['mddmamyz', 'xyz'], ['tattrarrattat', 'xymxxyzz'], ['ammadalmxxyz', 'ammadalmxxyz'], ['asytrmmadam', 'asytrmmadam'], ['madbcdfghraccecarjklmnpqvkkkaykwxyzam', 'y'], ['elerotratore', 'tattarrattammadadmat'], ['racmadameceaeabtattarrattaasymmetricaltcedebair', 'racmadameceaeabtattarrattaasymmetricaltcedebair'], ['racecar', 'asymmrical'], ['lme', 'xadmxzyz'], ['asymmmetr', 'asymmetr'], ['mmaadaabcedcracmadameceaeabtattarrattaasymmetricaltcedebairam', 'mmaadaabcedcracmadameceaeabtattarrattaasymmetricaltcedebairasymmetram'], ['abctattrtrattatedeba', 'tt'], ['bcdfghjklmnpqvqwxyz', 'batattarrammaddadmttatb'], ['mddam', 'bcdfghjlmnpqvwxyz'], ['racecar', 'rtattarrattaasymmetricaltacecear'], ['tattrarrattat', 'racecekayakaceb'], ['adm', 'tattarrammaddadmtatat'], ['xylmxxyzz', 'lmme'], ['ledmmaadamvel', 'racecekayakaceb'], ['eelevzzelv', 'rtattarrattaasymmetricaltacecear'], ['bcdfghraccecarjklmnpqvkkaykwxyzxyz', 'dmmaadam'], ['ammadadm', 'maraceceaardra'], ['amadbcdfghraccecarjklmnpqvkkaykwxyzambcedaeba', 'kaadmak'], ['eelevlevelzelv', 'racecr'], ['mmadmmadadmadm', 'amadbcdfghraccecarjklmnpqvkkaykwxyzambcedaeba'], ['ll', 'ev'], ['teacebbvattarrraattat', 'elevze'], ['rrotrator', 'rrotrator'], ['ll', 'vev'], ['emamadadmacebbv', 'elelvze'], ['kkaadmyak', 'xyz'], ['tattarrattaasymmetricalt', 'tattarrattaasymmetricalt'], ['lmacebraccecarbe', 'lme'], ['mmlme', 'mlme'], ['rotrr', 'aa'], ['kaayakasymmetr', 'kayakasymmetr'], ['xylmxxyzzz', 'xylmxxyzz'], ['kkakyk', 'kkayk'], ['abcezadmdeba', 'adm'], ['ma', 'lmxxyz'], ['eteacebbvattarrraattatv', 'eteacebbvattarrmaadamattatv'], ['bcdfghjklmnpqvqwxz', 'bcdfghjklmnpqvqwxyz'], ['ical', 'asymmettrical'], ['kayakattceb', 'acebbb'], ['asymtdticaldadm', 'rotat'], ['arelerotratoresymmetr', 'asymmetr'], ['ev', 'evlmacebraccecarbe'], ['tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz', 'aa'], ['abcedeceba', 'abcedceba'], ['rotatr', 'rotar'], ['mmaddadm', 'abcezadmdeba'], ['lmee', 'raceecarab'], ['kkaykmddmam', 'eabcedcebav'], ['bcdfghraccecarjklmnpaqvkkaykwxyz', 'bcdfghraccecarjklmnpqvkkaykwxyz'], ['t', ''], ['asymtdticaldadm', 'asymtdtticaldadm'], ['lmmlmeme', 'lme'], ['rotraatasymmetrr', 'abcedcracmadamece'], ['tattkaayakasymmetrarrattat', 'abcedeba'], ['kayakasymmetr', 'kayaammadadmk'], ['kkaakdmyak', 'bcdfghraccecarjklmnpqvkkaykwxyz'], ['abcedebaxxyzxbcdfghraccecarjklmnpqvkkaykwxyzxyzadmxzyz', 'abcedebaxxyzxadmxzyz'], ['teacebbvattarrraattat', 'teacebbvattarrraattat'], ['eteacebbvattarrraattatv', 'eteacebbvkaadmyakattarrradmmaadamv'], ['abdcedeba', 'abcedeba'], ['lmeacebe', 'asymmetrical'], ['asymmetr', 'asymmetrtattarrattaasymmetricaltacecearriabcedebaxxyzxadmxzyzl'], ['kaadmadmyak', 'eteacebbvattarrradmmaadamattatvkaadmyaceak'], ['t', 'xxxyz'], ['mddmam', 'atattarrattat'], ['raacecar', 'racecar'], ['abcedceba', 'abcedceba'], ['kaadmadmyak', 'asymmetr'], ['dmmaaelerotratoreadam', 'dmmaaelerotratoreadam'], ['abcedeba', 'rrotratracecarabor'], ['raccecar', 'bcdfghraccecarjklmmnpqvkkaykwx'], ['mrrotratormaadam', 'lmxxyz'], ['raceckayakaceb', 'asymdaxadmxzyzmtrmmadam'], ['kayaamadbcdfghraccecarjklmnpqvkkkaykwxyzamk', 'kayaamadbcdfghraccecarjklmnpqvkkkaykwxyzamk'], ['elerotratore', 'abcedebaxadmxzyz'], ['mmaddadm', 'xyz'], ['racecaeir', 'ttemadbcdfghraccecarjklmnpqvkkaykwlmmexyzv'], ['tattarraattat', 'tattarraattat'], ['aa', 'lmmlmeme'], ['racracecrecaeir', 'lmeeev'], ['kaadkmyak', 'rotalmeetxyz'], ['raceckayakaceb', 'eteacebbvkaadmyakattarrradmmaadamv'], ['amadbcdfghraccecarjklmnpqvkkaykwxyzambcedaeba', 'kkaykmddmam'], ['z', 'racmadameceaeir'], ['madbcdfghraccecarjm', 'kaaadmyak'], ['mmlmtattaammadadmrrattate', 'mmlmtattarrattate'], ['madbcdfghraccecarjklmasymmetricalnpqvkkaykwxyzam', 'madbcdfghraccecarjklmnpqvkkaykwxyzam'], ['maraceceardam', 'mmlme'], ['ammdadadm', 'tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz'], ['mddraceceaam', 'asymtticaxyzl'], ['dmmaadam', 'mmadam'], ['asymdaxadmxzyzmtrmmadam', 'abcezadmdeba'], ['kayaameteacebbvattarrmaadamattatvmadadmk', 'kayaammadadmk'], ['racecear', 'racece'], ['racmadamecaeir', 'bcdfghraccecarjklmmnpqvkkaykwxyz'], ['xyz', 'yxyz'], ['tattarratttat', 'xymxxyzz'], ['maceddam', 'raacecar'], ['aacbebbb', 'acebbb'], ['mmlmtattaammadadmrrattate', 'lmxxyz'], ['t', 'racrecaeeir'], ['raacecar', 'ammadalmxxyz'], ['tattararattammadadmat', 'elerotratore'], ['tattrotrrarrakayakasymmetrttat', 'tattarrammaddadmttat'], ['teacebbvattarrraattat', 'taraceckayakacebttarraattat'], ['kayak', 'elevelv'], ['racmadameceaeir', 'mmaadamm'], ['mdm', 'mdm'], ['racmmaddadmmadameceaeir', 'abcedceba'], ['asytrmlevelmadam', 'adm'], ['abcattateba', 'abceadmdtattarraattateba'], ['eelevlevelzzeelv', 'eelevlevelzeelv'], ['emadbcdfdghracczecarjklmnpqvkkaykwlmmexyzamv', 'acracecare'], ['asymmetriabcedebaxxyzxadmxzyzl', 'ev'], ['bcdfghjlmnpqvwxyz', 'abcdeba'], ['asymmetriabcedebaxxyzxadmxzyzl', 'acracecareev'], ['abceadmdebbcdfghjklmnpqvwxyza', 'abceadmdeba'], ['emadbcdfghraccecarjklmnpqvkkaykwlmmexyzamasytrmmadam', 'bcdfghjklmnpqvwxyz'], ['ammadayz', 'ammadalmxxyz'], ['bcdfdqvwxyz', 'bcdfqvwxeccecaryz'], ['atattarrattat', 'mmaddadm'], ['racmadamecaeir', 'bcdfghraccecarjklmmnpqvkkaytattarrakayakasymmetrttatkwxyz'], ['tt', 'racrecaeeir'], ['kayakaaceb', 'kayakaaceb'], ['rrotrator', 'ma'], ['bcdfghfjklmnpqvqwabxyz', 'bcdfghjklmnpqvqwxyz'], ['eteacebbvattdmmaadamattatvkaadmyaceak', 'eteacebbvattarrradmmaadamattatvkaadmyaceak'], ['kayaracecarameteacebbvattarrmaadamattatvmadadmk', 'kayaammadadmk'], ['lmbcdfghraccecakrjklmnpqvkkaykwxyze', 'asymmetrical'], ['y', 'aab'], ['lmeeev', 'lmeeev'], ['abceadmdebaaba', 'ev'], ['raabcedebaxxyzxadmxzyzcecaeir', 'racecaeir'], ['racracecrecaeir', 'bcdfgasymtticaldadmhjklmnpqvwxyz'], ['asymtticaldadm', 'raceccear'], ['mmaadam', 'mmaadaam'], ['bcdfghraccecakrjklmnpqvkkaykwxyz', 'admxymxxyzz'], ['tattarraattat', 'lme'], ['abcezadmdeba', 'l'], ['mddam', 'mddam'], ['bcdfghraccecarjklmnpqvkkaykwxrotatoryz', 'xxyraceceartor'], ['tattarrammaddadmtatat', 'dmmaadam'], ['maraceceardam', 'maracecekayaracecarameteacebbvattarrmaadamattatvmadadmkaarda'], ['pqvkkaykwxyz', 'bcdfghraccecarjklmnpqvkkaykwxyz'], ['abcedebaxxyzxadmxzyz', 'tattarraatatat'], ['ba', 'mmadadm'], ['kaayakasymmetr', ''], ['asymmettricammadalmxxyzal', 'abcedebaxadmxzyz'], ['reaeir', 'lmemmadam'], ['asymdaxadmxzyzmtrmmadam', 'aab'], ['racceecar', 'bcdfghracceckwx'], ['mdam', 'tattarrattat'], ['eteacebbvattarrradmmaadamattatv', 'dabcedeba'], ['bcdfghjklmnpqvqwxyz', 'tattarrakayakasymmetrttat'], ['asymemexxydmmaaeacebbvdamzr', 'asymmetr'], ['raceamadbcdfghraccecarjklmnpqvkkaykwxyzambcedaebayakar', 'rtattarrattaasymmetricaltar'], ['', 'xadmxzyz'], ['kaadmak', 'kaaadmak'], ['xabcattatebayz', 'xyz'], ['aracecaraba', 'aa'], ['maraceceaardra', 'maraceceaardra'], ['mmadim', 'dmmaaeacebbvdam'], ['mmadadm', 'amadbcdfghraccecarjklmnpqvkkaykwxyzambcedaeba'], ['mmaadaam', 'bcdfghfjklmnpqvqwabxyz'], ['bcdfghraccecarjklmnpqvkkaykwxyzxyz', 'dmmmaadam'], ['kayamamadadmk', 'kayakaceb'], ['racmadamasymmettricaleceaeabtattarrattaasymmetricaltcedebair', 'racmadamasymmettricaleceaeabtattarrattaasymmetricaltcedebair'], ['tattrarrattat', 'racecmaeccecardmam'], ['ledmmaadamvebcdfqvwxeccecaryzl', 'xadmxzyz'], ['abceadmdebbcdfghjklmnpqhvwxyza', 'abceadmdeba'], ['bcdfghfjklmnpqvqwabxyz', 'bcdfghjklmnpqvvqwxyz'], ['mmaadaam', 'bcdfghklmnpqvqwabxyz'], ['reacecaeir', ''], ['acbcdfghjklmnpqvqwxyzeb', 'dmmaadam'], ['racecara', 'racecarab'], ['lmeeev', 'eelevlevelzeelv'], ['lmmemmadam', 'lmemmadam'], ['mmle', 'mmlme'], ['asymmrical', 'asymmrical'], ['kayaameteeacebbvattarrmaadamattatvmadadmk', 'reaeir'], ['emamadadmacebbv', 'reaeirmmaddadm'], ['asyimtticasymemexxydmmaaeacebbvdamzr', 'asyimtticaldadm'], ['admm', 'tattarrammaddadmttat'], ['tattarrattartbcdfghraccekayakattcebcarjklmmnpqvkkaykwxyz', 'tattarrattartbcdfghraccecarjklmmnpqvkkaykwxyz'], ['asymmrical', 'rtattarrattaasymmetricaltacemaceddamcear'], ['kyak', 'llme'], ['mdam', 'll'], ['lmemmamadam', 'lmemmadam'], ['abcedebaxxyzxadmxzyz', 'tattarraatata'], ['abceadmdtattarraattateba', 'asymmrical'], ['mrotararaceceardam', 'maraceceardam'], ['asytrmmadam', 'atattarrattat'], ['racceecar', 'racecear'], ['ammadamlmxz', 'ammadalmxz'], ['tattarraattat', 'lm'], ['asymtdticaldadm', 'kmmadaaeimmk'], ['asymdaxadmxzyzmtrmmadaeteacebbvattdmmaadamattatvkaadmyaceak', 'asymdaxadmxzyzmtrmmadam'], ['elevzvelv', 'elevzvelv'], ['racmadamecaeir', 'racmadamecaeir'], ['lmme', 'asymttticaldadm'], ['abcedebaxadmlmeacebeyzxadmxzyz', 'abcedebaxxyzxadmxzyz'], ['el', 'elevzelv'], ['xxyrotator', 'xxyrotator'], ['abcedeba', 'akaaadmyakceb'], ['racmmaddadmmadameceaeirtattarraattat', 'teacebbvattarrraattat'], ['asymttticaldadm', 'racrecaeir'], ['asymtdtticaldadm', 'asymtdtticaldadm'], ['lme', 'abcedcracmadamece'], ['abcedebaxxyzxbcdfghraccecarjklmnpqvkkaykwxyzxyzadmxzyz', 'abcedebaxxyzxbbcdfghraccecarjklmnpqvkkaykwxyzxyzadmxzyz'], ['mdamyz', 'abcedeba'], ['axymxxyzzsymdaxadmxzyzmtrmmadam', 'asymdaxadmxzymzmtrmmadam'], ['tearcebbvattarrraattat', 'teacebbvattarrraattat'], ['abcedexbaxxyzxadmxzyz', 'tattarasymtticaldadmata'], ['asymmrical', 'mmlmtattaammadadmrrattate'], ['mdamm', 'mdam'], ['ammdadadm', 'tattarrattartbcdqvkkaykwxyz'], ['rrokaayakasymmetrtor', 'aeai'], ['abcezadmdeba', 'abcezadmdeba'], ['asymmettrical', 'mmaadam'], ['mledmmaadamvebcdfqvwxeccecaryzleardam', 'mledmmaadamvebcdfqvwxeccecaryzleardam'], ['kkaykmddmam', 'rotrator'], ['bcdfghjklmnpqvqwxasymmricalyz', 'eacebbv'], ['racceecar', 'bcdfghrakcceckwx'], ['mledmmaadamvebcdfqvwxeccecaryzleardam', 'raceamadbcdfghraccecarjklmnpqvkkaykwxyzambcedaebayakar'], ['kayakackaayakasymmetreb', 'abcedceba'], ['reaeirmmaddadm', 'reaeirmmaddadm'], ['tattarrakayakasymmetrttat', 'tattarrakayakasymmetrttat'], ['elevlv', 'elevlv'], ['tattarraaattat', 'acracecareev'], ['raceecarab', 'raceecarab'], ['xadmxzyz', 'kaaadmyak'], ['abcdebea', 'madbcdfghraccecarjklmnpqvkaykwxyzam'], ['racceecar', 'asymmetr'], ['asymttticttaldadm', 'asymttticttaldadm'], ['abc', ''], ['abc', 'abc'], ['aaaaaaaaaa', 'b'], ['abcde', 'fghij'], ['abcb', 'b'], ['abcdcba', 'ac'], ['aasymmetrical', 'asymmetrical'], ['racecar', 'aa'], ['madaam', 'ab'], ['asymmetrical', 'asymmetical'], ['bcdfghjklmnpqvwxyz', 'bcdfghjklmnpqvwxyz'], ['asymmetical', 'asymmetrical'], ['racecar', 'eaei'], ['asymmeetrical', 'asymmetical'], ['aasymmetrical', 'lasymmetrical'], ['asymrical', 'asymmetical'], ['abcedeba', 'xyz'], ['ba', 'xyz'], ['aasymmetacebcal', 'lasymmetrical'], ['aei', 'aei'], ['level', 'level'], ['asymriical', 'asymrical'], ['aasyammetrical', 'aasyammetrical'], ['tattarrattat', 'asymriical'], ['eaei', 'aasyamcal'], ['aei', 'aasymmetacebcal'], ['a', 'bcdfghjklmnpqvwxyz'], ['madaamasymmetical', 'ab'], ['basymmetrbicala', 'ba'], ['abcedeba', 'aceeb'], ['tricaasymmeticall', 'asymmetrical'], ['z', 'or'], ['tricaatsymmeticall', 'asymmetrical'], ['xyyz', 'xyz'], ['abcedeba', 'xy'], ['mamdam', 'abracecar'], ['level', 'tattarrattatev'], ['aceb', 'z'], ['mamadam', 'abracecar'], ['tricaatsymmeteicall', 'tricaatsymmeticall'], ['aei', 'tatxyyzatev'], ['asymmeetricalkayak', 'xyz'], ['bcdfghjklwxyz', 'ab'], ['mamadaam', 'abracecar'], ['mamad', 'abracaecar'], ['aasymmetrical', 'mamadam'], ['asymmeetrtattarrattaticalkayak', 'asymmeetricalkayak'], ['ba', 'level'], ['tatxyyzatev', 'xyz'], ['aseaeiymrical', 'madaamasymmetical'], ['xlmeyz', 'xyz'], ['abcedebaba', 'xy'], ['abracaecar', 'abracaecmamadaamar'], ['xyz', 'xyxz'], ['asyormmeetricalkayak', 'level'], ['xbcdfghjklmnpqvwxyzz', 'xbcdfghjklmnpqvwxyzz'], ['ev', 'tricaatsymmeteicall'], ['asymriical', 'level'], ['ror', 'level'], ['bcdfghjklwxyz', 'ba'], ['madaamasymmetical', 'xlmeyz'], ['aasymmetrical', 'tricaatsymmeticall'], ['asymmriical', 'asymriical'], ['t', 'aa'], ['tattarrattat', 'tattarrattat'], ['abrmamadamacecar', 'abracecar'], ['abmrmamadamacecar', 'abracecar'], ['abcedasymmriicaleba', 'asymmeetricalkayak'], ['basymmetrbicala', 'basymmetrbicala'], ['asymriical', 'asymriical'], ['aeai', 'aeei'], ['aasymmetrical', 'aracecar'], ['level', 'leevel'], ['mamadaaam', 'abracecar'], ['xyxz', 'asyormmeetricalkayak'], ['abracecar', 'mamadam'], ['aasymmetrical', 'aasymmetrical'], ['abasymriical', 'mabmrmamadamacecaradam'], ['arxyzacecacr', 'arxyzacecar'], ['aasymmetrical', 'madaam'], ['asymmeetricalkayark', 'asymmeetricalkayak'], ['abracaecar', 'mamad'], ['abmrmamadamacecar', 'ab'], ['kayak', 'kayak'], ['abracecar', 'abracecar'], ['xyxz', 'xyz'], ['asymtmetrical', 'caceeb'], ['caceeb', 'bcdfghjklmnpqvwxyz'], ['aei', 'aasymmetacebcaal'], ['abracecar', 'abrmamadamacecar'], ['asymmetical', 'asytrical'], ['bcdfghjklmnpqvwxyfz', 'bcdfghjklmnpqvwxyz'], ['aeai', 'aasymmetrical'], ['mamadaam', 'xlmeyz'], ['asyormmeetricalkayak', 'aasymmetacebcal'], ['asymmeetrical', 'mabmrmamadamacecaradam'], ['aasymmetacebcaal', 'abracecar'], ['arxyzacecacrxy', 'arxyzacecacr'], ['mabmrmamadamacecaradam', 'xyz'], ['xy', 'xy'], ['level', 'ltricaasymmeticalleevel'], ['tattarrattat', 'level'], ['aei', 'aasymmaeaietacebcaal'], ['tatxyyzatev', 'aasyamcal'], ['z', 'z'], ['rmamadamacecar', 'abracecar'], ['lme', 'HM'], ['caceeb', 't'], ['abcedeba', 'xtattarrattat'], ['abcedeba', 'acasymriicaleeb'], ['madaamasymmetical', 'xllmeyz'], ['caceeb', 'caceeb'], ['arxyzacecacr', 'arxyzacecaeaiar'], ['eaei', ''], ['xtyz', 'xyxz'], ['tricaasymmeticalacasymriicaleebl', 'xyz'], ['asytrical', 'ab'], ['aeei', 'kayak'], ['ab', 'madaamasymmetical'], ['asymyriyical', 'asymriyical'], ['xyabcedebabaz', 'xyabcedebabaz'], ['rotbcdfghjklmnpqvwxyzator', 'rotator'], ['asymtmetrical', 'asymtmetrical'], ['rmamadamacecaraeei', 'aaei'], ['arxyzacecacrxy', 'arxyzaccecaacr'], ['mabmrmamadamacecaraadam', 'xyz'], ['madaamasiymmetical', 'ab'], ['aasymmaaasyammeatricaleaietacebcaal', 'aasymmaaasyammeatricaleaietacebcaal'], ['tricaasymmeticall', 'asymmetrotbcdfghjklmnpqvwxyzatorrical'], ['aasyamcal', 'aasyamcal'], ['aasymmetmrical', 'aasymmetrical'], ['arxyzacecacr', 'arxyzacecacr'], ['aseaeiymrica', 'madaamasyaseaeiymricalmmetical'], ['aasymmaeaietacebcaal', 'aaesymmaeaeietacebcaal'], ['aasymmetrical', 'madmaam'], ['bcdfghjklmnpqvwxypz', 'bcdfghjklmnpqvwxyz'], ['z', 'abracecar'], ['aseaeiymrical', 'aseaeiymrical'], ['aasymmetacebcal', 'xyz'], ['level', 'leel'], ['asymriyical', 'eaei'], ['tricaasymmeticalacasymriicaaleebl', 'xyz'], ['tattarrattat', 'aasymmetrical'], ['asymmeetrical', 'mabmrmamadamacecaram'], ['level', 'arxyzaccecaacrleevel'], ['aammetrical', 'aracecar'], ['madaamasyaseaeiymricalmmetical', 'tattarrattat'], ['mamad', 'xylmmeyz'], ['aammetrical', 'aacecar'], ['aa', 'z'], ['xtyz', 'xtyz'], ['madaamasymmetical', 'asytrical'], ['madaam', 'madaam'], ['bcdfghjklmnpqvwxypz', 'asytrical'], ['marxyzaccecaacmrmadamabmrmamadamacecaram', 'mabmrmamadamacecaram'], ['madaamasyasceaeiymricalmmetical', 'madaamasyaseaeiymricalmmetical'], ['xyz', 'asymmeetrical'], ['zz', 'abracecar'], ['asyaasymmetacebcalmmetrical', 'rotato'], ['xtyz', 'xtymadmaamz'], ['aeiaasymmetacebcaal', 'aei'], ['rmamadamacecaraeei', 'mabmrmamadamacecaraadam'], ['lelvel', 'level'], ['caceeb', 'aasyamcal'], ['aeiaasymmetacebcaal', 'madam'], ['asymmeetricalkayark', 'asymmeetricalkayark'], ['abceedeba', 'abcedeba'], ['abceedeba', 'abcedaeaia'], ['arxyzcacecacrxy', 'arxyzacecacrxy'], ['iaei', 'iaei'], ['arxyzacecacrxy', 'madam'], ['asymmriical', 'ev'], ['bcdfghjklwxyz', 'bcdfghjklwxyz'], ['tricaasymmeticalacasymriicaleebl', 'madmaam'], ['iaeiasyaasymmetacebcalmmetrical', 'asymmetrotbcdfghjklmnpqvwxyzatorrical'], ['xbcdfghjklmnpqvwxyzzaa', 'aa'], ['asymmeetrical', 'amadaamasyaseaeiymricalmmeticalbcedeba'], ['asymmetrotbcdfghjklmnpqvwxyzatorrical', 'madaam'], ['aaor', 'z'], ['XtMIzX', 'tMIzX'], ['rotator', 'ba'], ['asymrical', 'abcedebaasymmetical'], ['aasymmetaycbasytricalebcaal', 'aasymmetaycasytricalebcaal'], ['asymmeetrical', 'asymmeetrical'], ['leel', 'leel'], ['mabmrmamadamacm', 'xyz'], ['tatxyyzatev', 't'], ['arxyzacecar', 'xyz'], ['madaamasyasceaeiymricalmmetical', 'madaamasyaseaeiymricalamadaamasyaseaeiymricalmmeticalbcedebammetical'], ['madaam', 'madaamasyaseaeiymricalmmetical'], ['bcdfcghjklwxaacecatryz', 'baba'], ['tatxyyzatev', 'xyabrmamadamacecarz'], ['asytricalasytrical', 'asytricalasytrical'], ['aaor', 'aaor'], ['asymmriical', 'abracecar'], ['abracaecar', 'abracaecmamadaaasymmaeaietaceabcaalamar'], ['ambmrmamadamcar', 'ab'], ['aseaeiymrical', 'aseaeriymrical'], ['bcdfghjkllwxyz', 'ab'], ['abceedeba', 'abceedeba'], ['asymmeetricalkayak', 'abracecar'], ['aasymmetacebcaal', 'aracbecar'], ['mamadaam', 'mamadaam'], ['mamadaaamabceedeba', 'abcedaeaia'], ['rotbcdfghjklmnplqvwxyzator', 'rotbcdfghjklmnpqvwxyzator'], ['tricaaasymmeetricalkayarksymmeticall', 'tricaatsymmeteicall'], ['ba', 'bcdfghjklwxyz'], ['asymmetrotbcdfghjklmnpqvwxyzatorrical', 'asymmetrotbcdfghjklmnpqvwxyzatorrical'], ['ambmrmamadamcarXtMIzX', 'XtMIzX'], ['abraccecar', 'abracecar'], ['bcdpfghjklmnpqvwxypz', 'bcdfghjklmnpqvwxypz'], ['xylmeyyz', 'xylmeyz'], ['level', 'leasymricalel'], ['asymrical', 'asymrical'], ['abceedeba', 'lelvel'], ['madaamasyaseaeiymricalmmetical', 'tatatarrattat'], ['ev', 'asymmetrical'], ['rmamadamacecaraeei', 'aei'], ['xtyaammetricalz', 'asymmetical'], ['mamada', 'abracecar'], ['ba', 'basymmetrbicala'], ['mabmrmamadamacm', 'xy'], ['arxyzacecarxy', 'madam'], ['z', 'zz'], ['asymmetical', 'yasymmetical'], ['xyz', 'xabracecartatatarrattatyz'], ['taaasymmetmricalrrattat', 'level'], ['xtyaammetrz', 'xtyaammetricalz'], ['zz', 'or'], ['ev', 'evabraccecar'], ['aasyammetrical', 'aseaeiymrical'], ['aaeeisymrical', 'Jlxtasymmecal'], ['xbcdfghjklmabmrmamadamacecarnpqvwxyzz', 'xbcdfghjklmnpqvwxyzz'], ['kaayak', 'kaayak'], ['tricaasymmeticaasymmaaasyammeatricmadaamasyasceaeiymricalmmeticalleaietacebcaall', 'xyz'], ['aei', 'arxyzacecacrxy'], ['aasymmetacebcaal', 'bcdfghjebaz'], ['maamad', 'xylmmeyz'], ['rotattor', 'rotator'], ['madaamasymmetical', 'ror'], ['aasymmaetrical', 'lasymmetrical'], ['abracaecmamadaamaer', 'abracaecmamadaamar'], ['asymmetical', 'madaamasiymmeticalasymmetical'], ['aceb', 'xy'], ['racecar', 'aaa'], ['asymmasymmetrotbcydfghjklmnpqvwxyzatorricaletrical', 'asymmasymmetrotbcdfghjklmnpqvwxyzatorricaletrical'], ['maadaammadamasymmetical', 'maadaamasymmetical'], ['racecaar', 'eaei'], ['asyormmeetricalkayak', 'asyormmeetricalkayak'], ['mabmrmamadamacm', 'xtricaasymmeticall'], ['tricaasymmeeticalacasymriicaleebl', 'madmaam'], ['aammetirical', 'aracecar'], ['ba', 'bcdfghjklwxy'], ['asymmeetrical', 'mabmrmamadamacecaradamasymmeetrtattarrattaticalkayak'], ['madaammammadaambcdfghjklmnpqvwxyfzasymmetical', 'madaammammadaamasymmetical'], ['z', 'oor'], ['asyaasymmaeeietacebcalmmetrical', 'asyaasymmetacebcmalmmetrical'], ['amadaamatattarrattatevsyaseaeiymricalmmeticalbcedeba', 'tricaatsymmeticall'], ['bcdfghjklwabracaecmamadaaasymmaeaietaceabcaalamarxyz', 'bcdfghjklwxyz'], ['aatricaasymmeticaasymmaaasyammeatricmadaamasyasceaeiymricalmmeticalleaietacebcaallsymmetacebcal', 'xyz'], ['asasymmeetricalytrical', 'asyormmeetricalkayak'], ['eaeei', 'aasyamcal'], ['bcdpfghjklmnpqvwxypz', 'madaamasyaseaeiymricalmmetical'], ['aasymmaetrical', 'ylasymmetrical'], ['asymriyical', 'abracaecar'], ['bcdpfghjklmnpqvwxypz', 'madaamasyaseaeiymricalammetical'], ['aasymmaetrical', 'aasymmaetrical'], ['mabmrmamadamacm', 'mabmrmamadamacm'], ['asykormmeetricalkayak', 'madmaam'], ['eaei', 'mabmrmamadamacecaJlxtadam'], ['xyxz', 'xyxz'], ['madam', 'aabracaecarb'], ['aseaeiymrical', 'madaamasymetical'], ['bba', 'ba'], ['basymmetrbmaadaamasymmeticalicala', 'aba'], ['tatxyyzatev', 'tatxyyzatev'], ['bcdfghjklmnpkqvwxypvz', 'bcdfghjklmnpqvwxyz'], ['aaei', 'aaei'], ['mamad', 'mamad'], ['madaamasyasceaeiymricalmmetical', 'asymmetrical'], ['yasymmetal', 'aracecar'], ['bba', 'aracecar'], ['abracaecmamadaaasymmaeaietaceabcaalam', 'abracaecmamadaaasymmaeaietaceabcaalamar'], ['tatxyyzzatev', 'tatxyyzatev'], ['rotator', 'abracecar'], ['aseasymmeticalaeasymmriicalmrical', 'aseaemrical'], ['tricasymmeticall', 'tricaatsymmeticall'], ['aaeeisymrical', 'bcdfghjklmnpqvwxyz'], ['bcdfghjklmnpqvwxyz', 'or'], ['tattarttat', 'aasymmetrical'], ['yasymmetical', 'tricaaasymmeetricalkayarksymmeticall'], ['asymmasymmetrotbcdfghjklmnpqvwxyzatorricaletrical', 'kayak'], ['mamdam', 'oylasymmetricalasykormmeetricalkayak'], ['aassymmetrical', 'aracecar'], ['asymmeetrtattarrattaticalkayak', 'aei'], ['aeiasymriical', 'asymriical'], ['asyormmeettricaaasymmeetricalkayarksymmeticallricalkayak', 'aasymmetacebcal'], ['asyormmalkayak', 'asyormmeetricalkayak'], ['lasymmetrical', 'lasymmetrical'], ['tricaasymmeticalacasymriicaleebl', 'tricaasymmeticalacasymriicaleebl'], ['level', 'ltricaasymmeticel'], ['xtattarrattleasymricalelt', 'xtattarrattleasymricalelt'], ['xtattarrattat', 'z'], ['abracecar', 'abrmabcdfghjebazcecar'], ['asymmetricalz', 'oor'], ['acaeb', 'xyy'], ['abcedasym', 'abcedasymmra'], ['xxymlmmeyyzy', 'xxylmeyzy'], ['lasymmetrical', 'aasymmetacebcal'], ['zz', 'asymical'], ['tatxyyzatev', 'aeai'], ['iaeiasyaasymmetacebcalmmetrical', 'iaeiasyaasymmetacebcalmmetrical'], ['abmrmamadamacecar', 'bcdfghjklwxyz'], ['alsymriyical', 'asymriyical'], ['xtyz', 'xty'], ['or', 'or'], ['z', 'abracecear'], ['asymrical', 'tricaasymmeticalacasymriicaleebl'], ['aasymmetrical', 'aasymmetmrical'], ['easymmeetricalkayark', 'asymmeetricalkayarkev'], ['asymmasymmetrotbcdfghjklmpqvwxyzatorricaletrical', 'asymmasymmetrotbcydfghjklmnpqvwxyzatorricaletrical'], ['z', 'amadaamasyaseaeiymricalmmeticalbcedeba'], ['z', 'madaamasyaseaeiymricalamadaamasyaseaeiymricalmmeticalbcedebammetical'], ['rotator', 'asyormmeettricaaasymmeetricalkayarksymmeticallricalkayak'], ['xyxz', 'xlmeyz'], ['leracecarveracecarl', 'leasymricalel'], ['aasymmetacebcaal', 'ev'], ['abaxylmyzmeyz', 'xylmyzmeyz'], ['ylasymmetrical', 'ylasymmetrical'], ['arrxyzacecacr', 'arxyzacecaeaiar'], ['asymmriical', 'xxylmeyzy'], ['abcaceeb', 'bab'], ['caaceeb', 'arxyzacecaeaiar'], ['asasymmeetricalytrical', 'amadaamatattarrattatevsyaseaeiymricalmmeticalbcedeba'], ['bcdfghjkllwxyz', 'xylmeyz'], ['rotatorxylmmeyz', 'z'], ['bab', 'rmamadamacrotbcdfghjklmnpqvwxyzatorecaraeei'], ['racecaar', 'cracecaar'], ['cecaraadam', 'xyz'], ['lelel', 'madaamasymetical'], ['madaamasymmetical', 'bcdfghjklmnpqvwxyz'], ['ev', 'aasymmetacebcaal'], ['asymmetmadaamrxyxzical', 'aasymmetaycbasytricalebcaal'], ['lelvel', 'abceedeba'], ['yasymmetal', 'aracecaaaar'], ['aseaeiymrica', 'aseaeiymrica'], ['xyabrmamadamacecarz', 'aracecar'], ['aeiasymriical', 'asymamadaamatattarrattatevsyaseaeiymricalmmeticalbcedebaiical'], ['aaei', 'cecaraadam'], ['basymmetrbmaadaamasymmeticalicala', 'abba'], ['asymmetical', 'asymrical'], ['madaamasyaseaeiymrtattarrattatevicalammetical', 'aacecar'], ['aei', 'ev'], ['madaamasymmetical', 'leevel'], ['iasymmetical', 'asymmetrical'], ['abracecear', 'madmaam'], ['xtyaammetrz', 'xyzaaei'], ['XtMIzX', 'tMaceebIzX'], ['xxymlmmeyyzy', 'asytricalabcedasym'], ['ltricaasymmeticel', 'ltricaasymmeticel'], ['abcedasym', 'abmadaamasyasceaeiymricalmmeticalcedasymmra'], ['rmamadamacecar', 'abcedasymmriicaleba'], ['bcdfghjklmnpqvwxlyz', 'abcedasym'], ['mamdaam', 'madaam'], ['asasymmeetriasymmeticalicalytrical', 'asyormmeetricalkayak'], ['asymmeetrical', 'asymmeetricasl'], ['xbcdfghjklmrmamadamacecarnpqvwxyzz', 'xbcdfghjklmnpqvwxyzz'], ['madaam', 'mbcdfghjebazaam'], ['aasymmaetrical', 'ylmasymmetrical'], ['abcedeba', 'xabracecartatatarrattatyz'], ['tricaasymmeeticalacasymriicaleebl', 'aaor'], ['bcdfghjebaz', 'bcdfghjebaz'], ['arxyzazcecacr', 'arxyzacecar'], ['level', 'eleevel'], ['tricaasymmeticalacasymriicaleebl', 'tricaasymmeticalacasymriicaebl'], ['aaeasyormmeettricaaasymmeetricalkayarksymmeticallricalkayaki', 'aaei'], ['aasymmaetrical', 'ylacal'], ['arxyzazcecacr', 'ylmasymmettricaasymmeticalacasymriicaleeblrical'], ['xyabcedebabaz', 'kayak'], ['maam', 'xylmmeyz'], ['abba', 'abba'], ['amamada', 'lmxbcdfghjklmnpqvwxyzzaa'], ['asymmasymmetrotbcdfghjklmpqvwxyzatorricaletricalam', 'am'], ['arxyzacecacr', 'xllmeyz'], ['mamabmrmamadamacecaradambmrmamadamacm', 'mabmrmamadamacm'], ['asasymmeetricalytrical', 'yasymmetical'], ['XtMIzX', 'xllmeyz'], ['madaamasyasearoreiymricalmmetical', 'tatatarlasymyriyicaltricaasymmeticeltat'], ['cacebasymmetrbicalaeb', 'cacebasymmetrbicalaeb']]\n    results = [('bcd', False), ('acdef', False), ('cdedc', True), ('dik', False), ('', True), ('abcdedcba', True), ('abcdedcba', True), ('abba', True), ('', True), ('rr', True), ('ll', True), ('', True), ('aa', True), ('y', True), ('ifi', True), ('rr', True), ('tt', True), ('viv', True), ('rr', True), ('', True), ('abcba', True), ('rdr', True), ('', True), ('a', True), ('ll', True), ('', True), ('', True), ('bc', False), ('noon', True), ('e', True), ('', True), ('difid', True), ('', True), ('', True), ('nonrfr', False), ('', True), ('rir', True), ('', True), ('', True), ('', True), ('nonrefere', False), ('r', True), ('', True), ('ve', False), ('', True), ('', True), ('', True), ('', True), ('tenet', True), ('rr', True), ('f', True), ('acca', True), ('', True), ('', True), ('nonreieererefere', False), ('', True), ('noone', False), ('v', True), ('non', True), ('rr', True), ('', True), ('', True), ('', True), ('', True), ('radar', True), ('', True), ('', True), ('vnoone', False), ('', True), ('d', True), ('ve', False), ('acc', False), ('vovrvivrrfr', False), ('ddi', False), ('', True), ('', True), ('', True), ('on', False), ('', True), ('tdtnt', False), ('rvivr', True), ('', True), ('', True), ('vn', False), ('di', False), ('vf', False), ('ne', False), ('avreviveerea', False), ('', True), ('xUJIA', False), ('raccar', True), ('', True), ('', True), ('', True), ('non', True), ('nonreeferrer', False), ('', True), ('', True), ('', True), ('', True), ('radrnar', False), ('', True), ('lll', True), ('ddi', False), ('raceetenvfeetcar', False), ('rr', True), ('rfrr', False), ('racetevftcar', False), ('', True), ('rccr', True), ('kaak', True), ('mdm', True), ('rotator', True), ('tattarrattat', True), ('d', True), ('ll', True), ('rcecr', True), ('roaor', True), ('asytrica', False), ('', True), ('mmdm', False), ('', True), ('acb', False), ('kayak', True), ('', True), ('', True), ('', True), ('', True), ('', True), ('racecaeir', False), ('kkak', False), ('', True), ('kyk', True), ('', True), ('', True), ('lme', False), ('aa', True), ('oo', True), ('kayak', True), ('mdm', True), ('raccair', False), ('ei', False), ('b', True), ('kyk', True), ('', True), ('asytrica', False), ('smmetr', False), ('t', True), ('ei', False), ('bcfghjklnpqvqwxyz', False), ('raeara', False), ('', True), ('bcfghrccecrjklnpqvkkykwxyz', False), ('kaadmak', False), ('', True), ('', True), ('bcdfghjklmnpqwxyz', False), ('', True), ('', True), ('tattarrattat', True), ('racecar', True), ('ll', True), ('', True), ('cecei', False), ('', True), ('sti', False), ('kayakaceb', False), ('rotrtor', True), ('', True), ('', True), ('', True), ('tttrrttt', True), ('bfghjklnpqvkkykwxyz', False), ('mdm', True), ('dfghjklmnpqqwxyz', False), ('lme', False), ('tttrrttt', True), ('ammadadm', False), ('t', True), ('otto', True), ('', True), ('bcedeb', False), ('', True), ('madam', True), ('', True), ('', True), ('kaak', True), ('tttrrttt', True), ('rceceir', False), ('kyk', True), ('', True), ('kykceb', False), ('asymmetrica', False), ('mmddm', False), ('', True), ('mdm', True), ('', True), ('y', True), ('tattarrattaasmmetricalt', False), ('xxzyz', False), ('cbbv', False), ('', True), ('rccecr', False), ('', True), ('', True), ('kkyk', False), ('', True), ('kyk', True), ('bcfghrcceckrjklnpqvkkykwxyz', False), ('elevelv', False), ('bcfghrccecrjklnpqvkkykwxyz', False), ('', True), ('', True), ('ecebbv', False), ('', True), ('xyxxyzz', False), ('s', True), ('bcfghrccecrjklnpqvkkkykwxyz', False), ('', True), ('racecaeir', False), ('symmil', False), ('xxyz', False), ('', True), ('', True), ('sytrmmdm', False), ('rotrtor', True), ('', True), ('', True), ('bcdfghcccjlnpqvwxz', False), ('bb', True), ('tattarrattat', True), ('', True), ('bbxxyzxxzyz', False), ('', True), ('syetr', False), ('y', True), ('', True), ('mmdddm', False), ('symmtr', False), ('kyk', True), ('', True), ('elevze', False), ('xxyz', False), ('', True), ('dmmaadam', False), ('', True), ('', True), ('vz', False), ('', True), ('l', True), ('ab', False), ('mmddm', False), ('', True), ('kykceb', False), ('tttrrttt', True), ('mdam', False), ('', True), ('tvtttttv', False), ('kmmadaaeimk', False), ('', True), ('le', False), ('', True), ('', True), ('rccir', False), ('rcecr', True), ('btttttsytltb', False), ('y', True), ('', True), ('mdam', False), ('syetrkeik', False), ('kaamamadadmk', False), ('sytr', False), ('', True), ('', True), ('dmmaaeacebbvdam', False), ('', True), ('', True), ('kkk', True), ('', True), ('sy', False), ('', True), ('', True), ('bceebxxzyz', False), ('racecarab', False), ('', True), ('rr', True), ('dfghjklmnpqvqwxyz', False), ('', True), ('d', True), ('', True), ('tvttrrrmmmtttv', False), ('c', True), ('bcdfghcccjlnpqvwxz', False), ('abcadmdba', False), ('', True), ('kdmk', False), ('mmlmxxyz', False), ('', True), ('ccc', True), ('asyrica', False), ('mmdlmxxz', False), ('asytrica', False), ('tttrtrttt', True), ('kaamkamadadmk', False), ('bcedebxxyzxdmxzyz', False), ('', True), ('', True), ('astrada', False), ('asymmetriabcedebaxxyzxadmxzyzl', False), ('lmee', False), ('str', False), ('', True), ('rrotrtor', False), ('edmmaadamve', False), ('', True), ('l', True), ('bcedeb', False), ('lme', False), ('bcdfghjknpqwxyz', False), ('e', True), ('xxzz', False), ('lmm', False), ('', True), ('', True), ('', True), ('', True), ('tttttt', True), ('', True), ('tttrrttt', True), ('tbbvttttt', False), ('', True), ('', True), ('', True), ('xxyzlmmmm', False), ('kyksymmetr', False), ('mddmm', False), ('mdbdfghjklmnpqvkkykwlmmxyzmv', False), ('', True), ('bcezdmdeb', False), ('', True), ('t', True), ('', True), ('mdbdfghjklmnpqvkkykwlmmxyzmsytmmdm', False), ('mdmbtttttsymmtiltdbi', False), ('mmddm', False), ('dd', True), ('', True), ('', True), ('', True), ('', True), ('', True), ('', True), ('', True), ('dmmaadam', False), ('', True), ('rrotrator', False), ('syimtticlddm', False), ('xxyzlmemmdm', False), ('', True), ('lvz', False), ('fghjklnpqqwxyz', False), ('eecebbvdmmdmv', False), ('mfghrrjklmnpqvkkykwxyzm', False), ('rkyk', False), ('', True), ('cbbv', False), ('', True), ('', True), ('lmm', False), ('bdfghjklmmnpqvkkkwz', False), ('', True), ('bdb', True), ('mrdmm', False), ('', True), ('asetr', False), ('xxz', False), ('bcecrceceebtttrrttsyetricltceebir', False), ('mddmam', False), ('tattrarrattat', False), ('', True), ('', True), ('madbcdfghraccecarjklmnpqvkkkakwxzam', False), ('eleooe', False), ('', True), ('e', True), ('le', False), ('', True), ('', True), ('abcarraaedeba', False), ('cfghjklnpqvqwxyz', False), ('a', True), ('', True), ('tttttt', True), ('', True), ('xyxxyzz', False), ('ldmmdmvl', False), ('vzzv', True), ('bcfghrccecrjklnpqvkkykwxyzxyz', False), ('', True), ('bcfghrccecrjlnpqvywxyzbceeb', False), ('lvlvlzlv', False), ('', True), ('ll', True), ('tacbbattarrraattat', False), ('', True), ('ll', True), ('mamadadmacbb', False), ('kkaadmak', False), ('', True), ('acbracccarb', False), ('', True), ('rotrr', False), ('', True), ('', True), ('', True), ('bcezeb', False), ('a', True), ('', True), ('', True), ('', True), ('kyktt', False), ('symdiclddm', False), ('loo', False), ('', True), ('tttrrttrtbcdfghrccecrjklmmnpqvkkykwxyz', False), ('', True), ('', True), ('', True), ('lm', False), ('kkykmmm', False), ('', True), ('t', True), ('', True), ('', True), ('ottsyt', False), ('tttkyksymmtrrrttt', False), ('setr', False), ('', True), ('fghrrjklnpqvkkkw', False), ('', True), ('', True), ('', True), ('b', True), ('', True), ('', True), ('t', True), ('mddmm', False), ('', True), ('', True), ('kddk', True), ('', True), ('d', True), ('', True), ('rrotratoraada', False), ('ceckkceb', False), ('', True), ('lrotrtor', False), ('mmaddadm', False), ('i', True), ('', True), ('aa', True), ('racraccrcair', False), ('kdkk', False), ('', True), ('bcfghrccecrjlnpqvwxzbceeb', False), ('z', True), ('bcfghrccecrj', False), ('dd', True), ('sti', False), ('araccarda', False), ('', True), ('ddree', False), ('', True), ('syxxytr', False), ('etecebbvttrrtttv', False), ('', True), ('i', True), ('', True), ('tattarratttat', False), ('mddm', True), ('', True), ('tattaaadadrrattate', False), ('t', True), ('rcecr', True), ('mmddm', False), ('okyksye', False), ('v', True), ('kayak', True), ('rceceeir', False), ('', True), ('rmmmmmir', False), ('sytrlevel', False), ('', True), ('', True), ('mdbdfdghzjklmnpqvkkykwlmmxyzmv', False), ('asymmtriabcdbaxxyzxadmxzyzl', False), ('fghjlmnpqvwxyz', False), ('symmtibdbxxyzxdmxzyzl', False), ('fghjklnpqvwxyz', False), ('earaearaeaastraa', False), ('', True), ('', True), ('tttrrttt', True), ('i', True), ('tt', True), ('', True), ('rrotrtor', False), ('a', True), ('', True), ('rcecretecebbvttrrtttv', False), ('bdfghkjknpqvkkkwxz', False), ('y', True), ('', True), ('abcadmdbaaba', False), ('bdbxxyzxdmxzyz', False), ('rrereer', False), ('symttilddm', False), ('', True), ('bcfghrcceckrjklnpqvkkkw', False), ('tattarraattat', False), ('abcezadmdeba', False), ('', True), ('bdfghjklmnpqvkkkwz', False), ('tttrrttt', True), ('', True), ('', True), ('bcedebxxyzxdmxzyz', False), ('b', True), ('kaayakasymmetr', False), ('sttrill', False), ('rir', True), ('symdxdmxzyzmtrmmdm', False), ('', True), ('mdm', True), ('tvttrrrmmmtttv', False), ('bcdfghjlnpqvqwxz', False), ('xxdcbbvdz', False), ('dbdfghjknpqvkkkwxzbdbk', False), ('', True), ('', True), ('abcattateba', False), ('rcecrb', False), ('', True), ('i', True), ('', True), ('', True), ('bcfghrccecrjklnpqvkkykwxyzxyz', False), ('mmddm', False), ('', True), ('tttttt', True), ('levebcfqvweccecrl', False), ('fghjklnpqhvwxyz', False), ('a', True), ('', True), ('reacecaeir', False), ('cbcfghjklnpqvqwxyzeb', False), ('', True), ('m', True), ('', True), ('', True), ('', True), ('kymtcbbvttmdmtttvmddmk', False), ('cbbv', False), ('eexxeebbvzr', False), ('', True), ('', True), ('', True), ('kyak', False), ('mdam', False), ('', True), ('bcedebxxyzxdmxzyz', False), ('beddtttttteb', False), ('ot', False), ('symmdm', False), ('', True), ('', True), ('tattarraattat', False), ('syttcl', False), ('eecebbvvkcek', False), ('', True), ('', True), ('e', True), ('l', True), ('', True), ('', True), ('', True), ('mmdddmmdmi', False), ('symtttlddm', False), ('', True), ('l', True), ('', True), ('mmyz', False), ('', True), ('', True), ('beexbxxzxxzz', False), ('syic', False), ('', True), ('mmm', True), ('rrokyksymmtrtor', False), ('', True), ('syettricl', False), ('', True), ('kkykmddmm', False), ('dfghjklmnpqqwxsymmrilyz', False), ('', True), ('', True), ('kykkyksymmtr', False), ('', True), ('', True), ('', True), ('tttttt', True), ('', True), ('xxzz', False), ('', True), ('ccc', True), ('', True), ('abc', False), ('', True), ('aaaaaaaaaa', True), ('abcde', False), ('ac', False), ('bdb', True), ('', True), ('rcecr', True), ('mdm', True), ('r', True), ('', True), ('', True), ('rccr', True), ('r', True), ('', True), ('r', True), ('abcedeba', False), ('ba', False), ('b', True), ('', True), ('', True), ('', True), ('', True), ('tttttt', True), ('eei', False), ('i', True), ('a', True), ('mdmsymmeticl', False), ('symmetricl', False), ('d', True), ('', True), ('z', True), ('', True), ('', True), ('abcedeba', False), ('mmdm', False), ('ll', True), ('aceb', False), ('mmdm', False), ('', True), ('i', True), ('asmmeetricalkaak', False), ('cdfghjklwxyz', False), ('mmdm', False), ('mmd', False), ('syetricl', False), ('', True), ('ba', False), ('tatatev', False), ('r', True), ('lme', False), ('abcedebaba', False), ('', True), ('', True), ('asyormmtricakayak', False), ('', True), ('v', True), ('asymriica', False), ('ror', True), ('cdfghjklwxyz', False), ('adaaastica', False), ('', True), ('', True), ('t', True), ('', True), ('mmdm', False), ('mmmdm', False), ('bdb', True), ('', True), ('', True), ('', True), ('symmtil', False), ('', True), ('mmdm', False), ('xxz', False), ('brcecr', False), ('', True), ('syiil', False), ('', True), ('syetricl', False), ('', True), ('brcecr', False), ('mrmmdmcecr', False), ('', True), ('', True), ('', True), ('symtmtril', False), ('aee', False), ('i', True), ('', True), ('mme', False), ('', True), ('', True), ('aadaa', True), ('orrikk', False), ('sytil', False), ('symmtl', False), ('', True), ('mabmrmamadamacecaradam', False), ('', True), ('', True), ('tattarrattat', True), ('', True), ('ttxztev', False), ('', True), ('mmdm', False), ('lme', False), ('caceeb', False), ('bcedeb', False), ('d', True), ('adaaastica', False), ('', True), ('', True), ('eaei', False), ('t', True), ('tricaasmmeticalacasmriicaleebl', False), ('sytricl', False), ('eei', False), ('b', True), ('', True), ('', True), ('bcdfghjklmnpqvwxyz', False), ('', True), ('rmmdmccr', False), ('', True), ('mabmrmamadamacecaraadam', False), ('mdmsiymmeticl', False), ('', True), ('', True), ('', True), ('', True), ('', True), ('', True), ('', True), ('syetricl', False), ('', True), ('z', True), ('', True), ('aasmmetacebcal', False), ('v', True), ('symrycl', False), ('tricaasmmeticalacasmriicaaleebl', False), ('', True), ('sytil', False), ('', True), ('mmtil', False), ('mdmsyseeiymiclmmeicl', False), ('aad', False), ('mmtil', False), ('aa', True), ('', True), ('mdmmme', False), ('', True), ('bdfghjkmnpqvwxpz', False), ('xyz', False), ('', True), ('xz', False), ('zz', True), ('sysymmecebclmmeicl', False), ('', True), ('symmtcbcl', False), ('i', True), ('', True), ('eeb', False), ('eisyetcebcl', False), ('', True), ('', True), ('', True), ('', True), ('', True), ('rxyzceccrxy', False), ('asymmriical', False), ('', True), ('tricsyeticlcsyriicleebl', False), ('', True), ('xbcdfghjklmnpqvwxyzz', False), ('', True), ('syetrotbcfghjklnpqvwxyztorricl', False), ('aaor', False), ('', True), ('rottor', True), ('r', True), ('', True), ('', True), ('', True), ('mabmrmamadamacm', False), ('axyyzaev', False), ('aracecar', False), ('', True), ('', True), ('cdfcghjklwxcectryz', False), ('tttv', False), ('', True), ('', True), ('symmiil', False), ('', True), ('mmrmmdmcr', False), ('', True), ('cdfghjkllwxyz', False), ('', True), ('symmtilkyk', False), ('symmtl', False), ('', True), ('mmm', True), ('', True), ('kk', True), ('a', True), ('', True), ('ambmrmamadamcar', False), ('', True), ('', True), ('', True), ('v', True), ('', True), ('abcdba', False), ('mdmsyseeiymiclmmeicl', False), ('v', True), ('rmmdmccr', False), ('xrz', False), ('mmd', False), ('', True), ('mabmrmamadamacm', False), ('rxyzcecrxy', False), ('', True), ('', True), ('', True), ('taaasymmtmricarrattat', False), ('', True), ('zz', True), ('', True), ('t', True), ('iri', True), ('araaaaear', False), ('', True), ('tricaasmmeticaasmmaaasammeatricmadaamasasceaeimricalmmeticalleaietacebcaall', False), ('i', True), ('symmtl', False), ('aaad', False), ('', True), ('madaamasymmetical', False), ('', True), ('', True), ('', True), ('aceb', False), ('rcecr', True), ('', True), ('', True), ('rccr', True), ('', True), ('bd', False), ('tricsyeeticlcsyriicleebl', False), ('mmtiil', False), ('a', True), ('', True), ('bfghjknpqvwxfz', False), ('z', True), ('', True), ('dvbdb', False), ('araaemamaaaasmmaeaietaeaaaamar', False), ('aatricaasmmeticaasmmaaasammeatricmadaamasasceaeimricalmmeticalleaietacebcaallsmmetacebcal', False), ('', True), ('eeei', False), ('bpfghjknpqvwxpz', False), ('', True), ('symiyil', False), ('bpfghjknpqvwxpz', False), ('', True), ('', True), ('sykoreetriclkyk', False), ('i', True), ('', True), ('mdm', True), ('r', True), ('', True), ('symmetrmdmsymmeticlicl', False), ('', True), ('', True), ('', True), ('', True), ('d', True), ('ysymmtl', False), ('bb', True), ('', True), ('', True), ('otto', True), ('yty', True), ('', True), ('aaeeisria', False), ('bcdfghjklmnpqvwxyz', False), ('', True), ('', True), ('smmsmmetrotbcdfghjlmnpqvwxztorricletricl', False), ('d', True), ('ssymmtil', False), ('symmtrtttrrtttclkyk', False), ('e', True), ('orririkrkirikk', False), ('', True), ('', True), ('', True), ('v', True), ('', True), ('xtattarrattat', False), ('', True), ('asymmeticalz', False), ('acaeb', False), ('', True), ('', True), ('ri', False), ('zz', True), ('ttxyyztv', False), ('', True), ('amrmamaamaear', False), ('', True), ('z', True), ('', True), ('z', True), ('', True), ('', True), ('', True), ('', True), ('z', True), ('z', True), ('', True), ('', True), ('v', True), ('aasymmtacbcaal', False), ('aba', True), ('', True), ('', True), ('asriica', False), ('ccee', False), ('b', True), ('', True), ('bcdfghjkw', False), ('rotatorxylmmey', False), ('', True), ('', True), ('cecaraadam', False), ('', True), ('aaaasetia', False), ('v', True), ('dxxz', False), ('llvl', False), ('ysymmtl', False), ('', True), ('xybmmdmz', False), ('', True), ('i', True), ('symmetrmdmsymmeticlicl', False), ('et', False), ('mdmsysiymttttttvilmmtil', False), ('ai', False), ('madaamasymmtica', False), ('', True), ('brcecer', False), ('tmmtr', False), ('', True), ('xxz', False), ('', True), ('', True), ('', True), ('fghjklnpqvwxlz', False), ('', True), ('', True), ('', True), ('raaaaear', False), ('', True), ('', True), ('d', True), ('ticsymmeeticlcsymiicleebl', False), ('', True), ('', True), ('', True), ('', True), ('syormmttrcsymmtrclkyrksymmtcllrclkyk', False), ('smmetri', False), ('xzz', False), ('xbcedebbz', False), ('aa', True), ('', True), ('', True), ('sysyetrotbcdfghjklpqvwxyztorricletricl', False), ('araccacr', False), ('e', True), ('rr', True), ('XtMIX', False), ('do', False), ('', True)]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/113", "prompt": "\ndef odd_count(lst):\n    \n\n\n    ans, template = [], \"the number of odd elements in the string i of the input.\"\n    for s in lst:\n        odd_cnt = len(list(filter(lambda ch: int(ch) % 2 == 1, s)))\n        ans.append(template.replace(\"i\", str(odd_cnt)))\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef odd_count(lst):\n    \n\n\n    ans, template = [], \"the number of odd elements in the string i of the input.\"\n    for s in lst:\n        odd_cnt = len(list(filter(lambda ch: int(ch) % 2 == 1, s)))\n        ans.append(template.replace(\"i\", str(odd_cnt)))\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef odd_count(lst):\n    \n\n\n    ans, template = [], \"the number of odd elements in the string i of the input.\"\n    for s in lst:\n        odd_cnt = len(list(filter(lambda ch: int(ch) % 2 == 1, s)))\n        ans.append(template.replace(\"i\", str(odd_cnt)))\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef odd_count(lst):\n    ans, template = [], \"the number of odd elements in the string i of the input.\"\n    for s in lst:\n        # Introduce unnecessary variable assignments\n        temp_list = list(s)\n        odd_elements = []\n        \n        # Use a for loop instead of filter and lambda\n        for ch in temp_list:\n            # Introduce redundant conversion and checks\n            num = int(ch)\n            if num % 2 == 1:\n                odd_elements.append(ch)\n        \n        # Use a redundant list conversion\n        odd_cnt = len(list(odd_elements))\n        \n        # Introduce unnecessary string operations\n        temp_str = str(odd_cnt)\n        replaced_template = template.replace(\"i\", temp_str)\n        \n        # Append to the list with unnecessary operations\n        ans.append(replaced_template + \"\")\n    return ans\n<code_end>\n```", "modification": "\ndef odd_count(lst):\n    ans, template = [], \"the number of odd elements in the string i of the input.\"\n    for s in lst:\n        \n        temp_list = list(s)\n        odd_elements = []\n        \n        \n        for ch in temp_list:\n            \n            num = int(ch)\n            if num % 2 == 1:\n                odd_elements.append(ch)\n        \n        \n        odd_cnt = len(list(odd_elements))\n        \n        \n        temp_str = str(odd_cnt)\n        replaced_template = template.replace(\"i\", temp_str)\n        \n        \n        ans.append(replaced_template + \"\")\n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[['1234567']], [['3', '11111111']], [['271', '137', '314']], [['2468']], [[]], [['0', '00', '000']], [['13579', '2468', '357']], [['11224466558888', '55555', '1234567']], [['1111', '3333', '5555', '7777', '9999']], [['444', '8888']], [['555', '777']], [['1111', '333', '5555']], [['123', '321', '12321']], [['7778888', '444', '8888']], [['778888', '333']], [['778888', '12321', '333333']], [['778888']], [['778888', '333', '333']], [['11224466558888', '8888', '55555', '1234567']], [['7778888', '444']], [['2468', '2468']], [['444', '4444', '8888']], [['7778888', '2468', '777', '2468']], [['0', '00', '00', '000']], [['77444888', '12321', '333333', '77444888']], [['13579', '2468', '24648', '357']], [['77444888', '12321', '333333', '77444888', '77444888']], [['747444888', '74447444888', '12321', '333333', '774444888', '77444888']], [['77444888', '12321', '77444888']], [['778888', '333', '333', '333']], [['13579', '3757', '11224466558888', '2468', '3537']], [['7778888', '444', '3757', '8888']], [['24628', '13579', '2468', '357']], [['7778888', '435744']], [['1111', '333', '555', '5555']], [['44413579', '8888']], [['2468', '3333', '2468']], [['77444888', '132321', '77444888']], [['77444888', '12321', '33335555533', '333333', '77444888']], [['55555', '1111', '3333', '5555', '7777', '9999']], [['778855588', '778888', '333', '333']], [['7778888', '88877788888', '444', '3757', '8888']], [['778855588', '778888', '333', '333', '778855588']], [['333']], [['7788878', '333333']], [['1111', '333']], [['11224466558888', '8888']], [['8888', '77444888', '333333', '77444888']], [['747444888']], [['13579', '24648', '357']], [['778888', '778888']], [['123', '3231', '321', '355555231', '12321']], [['778888', '333', '33', '4444333', '333']], [['7778888', '444', '8888', '444']], [['778888', '8778888', '778888']], [['7874448888', '77444888', '12321', '333333', '787444888', '77444888']], [['7778888', '444', '8888', '7778888']], [['7778888', '2468', '268']], [['7778888', '24268', '777', '2468']], [['77444888', '12321', '333333', '77444888', '333333']], [['004441357901111', '0', '00', '0001111']], [['1111', '333', '5555', '5555']], [['7778888', '77788888', '132321']], [['11224466558888', '55555', '1234567', '11224466558888']], [['1111']], [['1111', '333', '333']], [['1111', '333', '3']], [['747444888', '74447444888', '12321', '333333', '75555547444888', '774444888', '77444888']], [['77444888', '12321', '33335555533', '333333']], [['77444888', '132321', '774888']], [['778855588', '24628', '333', '778855588']], [['1111', '333', '3', '1111']], [['7474448833388', '7474448888']], [['2464877444888', '12321', '333333', '77444888', '333333']], [['2464877444888', '12321', '333333', '77444888', '333132321333']], [['778855588', '24628', '3', '000', '333']], [['13579', '357']], [['778855588', '24628', '3', '000', '333', '24628']], [['7878888', '778888', '7778888', '778888']], [['333', '333']], [['2464877444888', '12321', '333333', '77444888']], [['7733378888', '2468', '777', '2468']], [['1111', '3333', '5555', '7777', '9999', '1111']], [['778855588', '246', '333']], [['474413579', '44413579', '8888']], [['1111', '3333', '5555', '7777', '99999']], [['44413579', '8888', '8888']], [['44413579', '8888', '88888']], [['778888', '333', '33', '4444333', '333', '333', '333']], [['00333', '3333', '333']], [['13579', '2468', '24648', '357', '2468']], [['444', '7874448888', '8888', '8888']], [['77444888', '12321', '33335555533', '774484888', '333333', '77444888']], [['778855588', '778888', '333', '377888833']], [['435744']], [['778855588', '778888', '333', '377888833', '778855588']], [['778888', '333', '377888833', '778855588', '778888']], [['11224466558888', '55555', '12345246487', '1234567']], [['123', '3121', '123217777']], [['13579', '357', '13579', '13579']], [['747444888', '74447444888', '12321', '333333', '75555547444888', '77444888']], [['7778888', '77788888', '777788888', '132321']], [['004441357901111', '0', '00']], [['000000001', '222222200', '444444444', '666666677']], [['99', '8888', '55555']], [['101010101', '11010011', '10001100', '11111111']], [['123', '456', '789', '246', '802']], [['0', '2', '4', '6', '8', '000']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333']], [['246890', '24689013', '24689013579', '13579']], [['11111', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333']], [['2468', '468', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['1234567890', '13579', '24680', '11111', '22222222222', '333333333333333']], [['123', '456', '246', '802']], [['11111', '824680888']], [['18023', '456', '789', '789', '246', '802']], [['2468', '4444444444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['123', '456', '246', '802', '246']], [['123', '456', '246', '802', '456']], [['13579', '123', '456', '246', '802', '456']], [['000000001', '222222200', '444444444', '666666677', '222222200']], [['1234567890', '13579', '24680', '11111', '22222222222', '333333333333333', '1234567890']], [['0', '2', '4', '6', '8', '000', '2']], [['101010101', '11010011', '10001100']], [['0', '2', '6', '8', '000', '2']], [['99', '8888', '8888']], [['123', '456', '246', '2646', '802', '246']], [['123', '456', '789', '246', '802', '123', '246', '246']], [['13579', '123', '456', '246', '802', '456', '456']], [['2', '6', '8', '000', '2']], [['2468', '4444444444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['18023', '4656', '789', '789', '246', '222222200']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '99999999999999', '33333333333333333333333333333']], [['123', '456', '2646', '802', '246']], [['123', '456', '1123', '246', '802']], [['24689013', '13579', '123', '456', '246', '802', '456', '456', '6', '246']], [['123', '456', '789', '246', '802', '123', '246', '666666677']], [['18023', '126468023', '4656', '789', '789', '246', '222222200']], [['24689013', '13579', '123', '456', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246']], [['13579', '24680', '333333333333333', '1579', '22222222222', '333333333333333', '1234567890']], [['123', '456', '789', '24', '246', '802']], [['24689013', '13579', '123', '456', '000000000000000', '802', '456', '456', '6', '246']], [['10001100', '101010101']], [['24689013', '13579', '123', '456', '246', '802', '456', '456', '6', '555555555555555555555555', '246', '456', '456']], [['2468', '468', '0', '135799', '3579', '3579', '3579', '3579', '3579', '3579']], [['4', '11010011', '10001100']], [['999999999999911111111999999999999', '1111111111111111111111111', '000000000000000', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['101010101', '11010011', '110100111', '10001100', '101010101', '101010101']], [['18023', '456', '789', '789', '246', '802', '789']], [['2', '6', '8', '2']], [['000000001', '444444426464', '222222200', '444444444', '666666677', '222222200']], [['11111', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333', '4444444444444444444444444444444']], [['18023', '456', '789', '789', '802']], [['123', '456', '246', '802', '456', '802']], [['1231123', '456', '246', '802']], [['10103333333333333310101', '11010011', '456', '10110100111001100']], [['0', '2', '6', '8', '000', '22', '8']], [['9999999999999999999999999', '1111111111111111111111111', '24689013579', '000000000000000', '99999999999999', '33333333333333333333333333333']], [['444444426464', '222222200', '444444444', '666666677']], [['999999999999911111111999999999999', '0000000000001579000', '1111111111111111111111111', '101010101', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['123', '456', '2426', '0000000000001579000', '123']], [['2468', '468', '0', '135799', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '1111111111111111111111111']], [['2468', '4444444444444444444444444444444', '0', '357999', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['1111111111111111111111111', '24689013579', '000000000000000', '99999999999999', '33333333333333333333333333333']], [['2468', '468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579', '3579']], [['99', '88888', '8888']], [['2468', '468', '0', '3579', '3579', '3579', '3579', '3579', '3579']], [['1111111111111111111111111', '000000000000222222200000', '33333333333333333333333333333']], [['11111', '1111', '4444444444444444444444444444444', '555555555555555555555555']], [['123', '246', '246']], [['789246', '18023', '456', '789', '89', '246', '802']], [['123', '45100011006', '789', '246', '802123', '802']], [['2468', '4444444444444444444444444444444', '1234567890', '3579', '3579', '3579', '3579', '555555555555555555555555', '3579', '3579', '3579']], [['1231123', '456', '110100111', '802', '1111111111111111111111111802']], [['10001100', '101010101', '101010101', '101010101']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['99', '246890', '88888', '8888']], [['24689013', '13579', '444444426464', '456', '000000000000000', '802', '456', '456', '6', '246']], [['999910103333333333333310101111111999999999999', '0000000000001579000', '1111111111111111111111111', '101010101', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['123', '456', '246', '2646', '802', '246', '246']], [['1231123', '456', '110100111', '802', '1111111111111111111111111802', '802']], [['1234567890', '13579', '24680', '11111', '22222222222', '333333333333333', '13579']], [['2468', '88888', '0', '24648', '135799', '3579', '3579', '3579', '18023', '3579', '3579']], [['246890', '2046890', '24689013', '24689013579', '132579']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '33333333333333333333333333333']], [['13579', '666666677', '456', '246', '802', '456']], [['24689013', '13579', '123', '456', '000000000000000', '802', '456', '456', '6', '246', '456']], [['123', '456', '1', '246', '802', '802']], [['24689013', '13579', '123', '456', '000000000000000', '802', '456', '456', '6', '246', '24689013']], [['1234567890', '13579', '24680246', '11111', '22222222222', '333333333333333', '1234567890']], [['24689013', '13579', '123', '456', '246890133', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246']], [['13579', '123', '8202', '456', '246', '802', '456']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '13579', '3579', '3579', '3579', '3579', '3579']], [['123', '456', '789', '246', '802', '123', '1111111111111111111111111802', '246', '246']], [['246890', '246890126468023', '24689013579', '13579']], [['1231123', '456', '110100111', '1111111111111111111111111802', '802']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '802', '24', '456', '6', '246']], [['724689013389246', '18023', '456', '789', '89', '246', '802']], [['123', '456', '1', '246', '802', '802', '456']], [['123', '456', '1', '246', '802', '802', '456', '456']], [['123', '456', '789', '246', '7899', '802', '123', '246', '666666677']], [['123', '456', '789', '246', '802', '123', '11010011', '246', '666666677', '246', '11010011']], [['99', '88888', '8888', '88888']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '9999999999999999999999999']], [['123', '246', '802', '456']], [['9999999999999999999999999', '1111111111111111111111111', '0000000000000000', '33333333333333333333333333333', '1111111111111111111111111']], [['10103333333333333310101', '456', '10110100111001100']], [['99', '246890', '88888', '8888', '88888']], [['2468', '468', '110100111', '3579', '3579', '3579', '3579', '3579', '3579']], [['18023', '789246', '789', '333333333333333', '789', '802']], [['24689013', '13579', '123', '456', '444444426464', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246']], [['18023', '789246', '789', '333333333333333', '789', '789246']], [['2468', '468', '110100111', '3579', '3579', '123', '3579', '3579', '3579']], [['10103333333333333310101', '456', '10110100111001100', '10110100111001100']], [['123', '456', '789', '246', '802', '123']], [['123', '789', '80', '246', '802123', '802']], [['123', '456', '802']], [['24689013', '13579', '123', '456', '246', '02', '802', '456', '456', '6', '33333333333333333333333333333', '246']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '13579', '126468023', '3579', '3579', '3579', '3579']], [['246890', '246890126468023', '24689013579']], [['1231123', '456', '110100111', '80', '1111111111111111111111111802']], [['99', '88888', '88888']], [['1231123', '456', '1101012311230111', '0802', '10110100111001100', '1111111111111111111111111802', '802']], [['123', '456', '802', '456']], [['2468', '4444444444444444444444444444444', '0', '357999', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['9999999999999999999999999', '999999999999911111111999999999999', '11111111111111111111', '99999999999999', '33333333333333333333333333333']], [['123', '456', '789', '02', '802', '123', '246', '246']], [['24624689013579', '13579', '123', '7899', '80', '246', '802', '456']], [['10001100', '101010101', '1010101101', '101010101']], [['13579', '132579', '123', '8202', '456', '822', '246', '802', '456']], [['123', '456', '246', '2646', '802', '246', '456']], [['999999999999911111111999999999999', '1111111111111111111111111', '000000000000000', '99999999999995555555555555555555555559', '9999999999999999999999999', '33333333333333333333333333333']], [['444444426464', '101010101', '1010101101', '101010101']], [['0000000000000000', '123', '456', '246', '1111111111111111111111111802', '802', '456']], [['2468', '468', '110100111', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['24888888', '468', '110100111', '3579', '3579', '123', '3579', '3579', '3579']], [['24689013', '13579', '123', '456', '444444426464', '246', '456', '456', '6', '33333333333333333333333333333', '246']], [['123', '456', '246', '2646', '24888888', '246', '246']], [['000000001', '222222200', '444444444', '6', '222222200']], [['18023', '456']], [['123', '456', '789', '246', '802', '123', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802']], [['10001100', '101010101', '101010101', '101010101000000000000222222200000']], [['0', '2', '2468900', '6', '8', '2']], [['24868', '4444444444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['9999999999999999999999999', '1111111111111111111111111', '0000000000000000', '33333333333333333333333333333', '1111111111111111111111111', '33333333333333333333333333333']], [['123', '246', '456', '802']], [['0', '2', '4', '6', '8', '000', '2', '2']], [['11111111', '11111', '45100011006', '802123', '555555555555555555555555', '33333333333333']], [['08002', '1231123', '456', '1101012311230111', '0802', '10110100', '1111111111111111111111111802', '802', '1101012311230111']], [['1234567890', '13579', '24680', '11111', '22222222222', '24689013579', '13579']], [['999999999999911111111999999999999', '1111111111111111111111111', '000000000000000', '99999999999995555555555555555555555559']], [['0', '2', '999910103333333333333310101111111999999999999', '6', '8', '000', '22', '8', '8']], [['24000000001', '0', '456', '1', '246', '802', '8020000000000001579000', '2446', '456', '456', '456']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '802', '24', '456', '6', '246', '246', '24', '24689013']], [['999999999999911111111999999999999', '1111111111111111111111111', '000000000000000', '1111111111111111111111231111', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['123', '456', '789', '246', '802', '123', '1111111111111111111111111802', '246', '2246', '1111111111111111111111111802']], [['13579', '123', '8202', '456', '246', '456', '13579', '13579']], [['123', '456', '789', '02', '802', '123', '0802', '246', '246']], [['1231123', '456', '110100111', '802', '1111111111111111111111111802', '802', '802']], [['1234567890', '13579', '11111', '22222222222', '333333333333333', '333333333333333']], [['24689013', '13579', '02', '456', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246']], [['1246890135793579', '123', '8202', '456', '246', '802', '456']], [['0', '2', '6', '3579', '8', '000', '22', '8']], [['18023', '456', '789', '789', '246', '222222200', '789']], [['802802', '123', '456', '1', '246', '802', '802', '456']], [['24000000001', '0', '456', '1', '802', '8020000000000001579000', '2446', '456', '456', '456']], [['2468', '4444444444444444444444444', '0', '3579', '444444444', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['123', '456', '246', '802', '18023', '456', '802']], [['2', '4', '6', '8', '000', '2', '000']], [['2468', '468', '110100111', '3579', '3579', '3579', '3579', '3579']], [['456', '10110100111001325791100']], [['123', '456', '246', '802', '18023']], [['2468', '468', '110100111', '1111', '3579', '3579', '3579', '3579', '3579']], [['123', '456', '246', '802', '24624689013579']], [['24888888', '13579', '123', '456', '246', '802', '456', '456', '6', '555555555555555555555555', '246', '456', '456']], [['123', '456', '789', '246', '802', '123', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802', '1111111111111111111111111802']], [['99', '88888', '88888', '8888']], [['13579', '11111', '22222222222', '333333333333333', '1234567890']], [['456', '789', '224', '246', '802']], [['1111111111111111111111111', '000000000000000', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['123', '456', '246', '2646', '802', '246', '246', '246']], [['24689013', '13579', '123', '456', '246', '02', '135799', '802', '4556', '6', '333331011010033333333', '246']], [['802']], [['224689013', '13579', '123', '456', '444444426464', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246', '246']], [['2468', '1231123', '456', '1101012311230111', '0802', '10110100111001100', '1111111111111111111111111802']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['18023', '126468023', '4656', '789', '789', '222222200']], [['123', '456', '246', '2646', '1223', '24888888', '246', '246', '246']], [['18023', '456', '789', '789', '8020000000000001579000', '222222200', '789', '456']], [['18023', '126468023', '4656', '789', '789', '246', '222222200', '4656']], [['18023', '456', '789', '789', '246', '802', '789', '18023', '456']], [['999', '88888', '88888', '8888']], [['11111', '4444802802444444444444444444444444444', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333', '4444444444444444444444444444444']], [['23', '24689013579456', '456']], [['2468', '468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579']], [['444444426464', '444444444', '666666677']], [['2468', '468', '3579', '3579', '3579', '3579', '3579', '3579']], [['12345690', '13579', '24680', '11111', '22222222222', '333333333333333', '1234567890']], [['2468', '468', '110100111', '3579', '3579', '824680888', '3579', '3579', '3579', '3579', '3579']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '0000000000000000', '456', '000000000000000', '802', '24', '456', '6', '246', '246', '24', '24689013']], [['468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579', '3579']], [['000000001', '222222200', '444444444', '6', '222222200', '222222200']], [['123', '456', '246', '2646', '80211111111111111111111', '246', '264555556', '246', '246']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '13579', '3579', '3579', '3579', '3579', '3579', '13579']], [['999999999999911111111999999999999', '1111111111111111111111111', '000000000000000', '9999199999999911111111999999999999', '99999999999995555555555555555555555559']], [['1111111111111111111111111', '24689013579', '000000000000000', '99999999999999']], [['999999999999911111111999999999999', '0000000000001579000', '1111111111111111111111111', '101010101', '99999999999995555555555555555555555559', '33333333333333333333333333333', '0000000000001579000']], [['1234567890', '13579', '24680', '11111', '22222222222', '24689013579', '13579', '22222222222']], [['1233', '24888888', '13579', '123', '456', '246', '802', '456', '456', '6', '555555555555555555555555', '246', '456', '456']], [['24689013579', '000000000000000', '99999999999999', '99999999999999', '99999999999999']], [['10001100', '101011', '101010101', '101010101']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '000000000000000', '802', '24', '456', '6', '246']], [['888']], [['45100011006', '24689013579', '99999999999999']], [['2', '468', '110100111', '3579', '3579', '824680888', '3579', '1579', '3579', '3579', '3579']], [['1234567890', '13579', '264555556', '11111', '22222222222', '333333333333333', '333333333333333']], [['13579', '24680', '333333333333333', '1579', '246890126468023', '22222222222', '333333333333333']], [['18023', '4656', '789', '246', '222222200']], [['000000001', '222222200', '444444444', '44444424689004444', '666666677', '222222200']], [['99', '88888', '888888', '8888']], [['1231123', '456', '110100111', '802', '1111111111111111111111111802', '802', '802', '1111111111111111111111111802', '802']], [['24689013579', '222222200', '99999999999999', '99999999999999', '99999999999999']], [['224689013', '13579', '123', '456', '444444426464', '246', '802', '456', '456', '6', '4569999999999999999999999999', '33333333333333333333333333333', '246', '246']], [['111111', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333', '4444444444444444444444444444444']], [['13579', '666666677', '456', '46', '24', '802', '456', '802']], [['24689013', '44441011010011100110044426464', '13579', '0', '444444426464', '0000000000000000', '456', '000000000000000', '802', '24', '456', '6', '246', '246', '24', '24689013']], [['123', '456', '789', '246', '802', '123', '246', '666666677', '789', '802']], [['24689013', '13579', '123', '456', '444444426464', '246', '802', '456', '6', '33333333333333333333333333333', '246']], [['18023', '4656', '789', '789', '246', '24', '4656']], [['456', '10110100111001100', '10110100111001100']], [['2468', '4444444444444444444444444', '456', '0', '3579', '3579', '3579', '13579', '3579', '3579', '3579', '3579', '3579']], [['999999999999911111111999999999999', '1111111111111111111111111', '000000000000000', '11111111111111111111111111', '9999199999999911111111999999999999', '99999999999995555555555555555555555559']], [['242446', '24', '2', '6', '8', '2']], [['101010101', '1111111111111111111111231111', '10001102', '11010011', '10001100', '2646', '11111111', '2646']], [['10103333333333333310101', '41101001156', '10110100111001100']], [['99', '444444444', '8246890138888', '88888', '8888']], [['13579', '123', '456', '246890133', '802', '456', '456', '6', '33333333333333333333333333333', '0802', '246']], [['8']], [['246890', '24689013', '24689013579', '23', '13579', '24689013']], [['999910103333333333333310101111111999999999999', '11111111111111111111113579111', '0000000000001579000', '1111111111111111111111111', '02', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['11111', '444444888884444444444444444444444444', '555555555555555555555555']], [['6', '8', '000', '2']], [['468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579', '357911111111111111111111111111', '357911111111111111111111111111']], [['123', '456', '789', '246', '4246', '802', '123', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802']], [['2', '4', '0802', '6', '000', '2']], [['18023', '456', '789', '789', '8020000000000001579000', '222222200', '789', '456', '789']], [['24680', '333333333333333', '1579', '22222222222', '333333333333333', '1234567890']], [['444444426464', '666666677']], [['6', '8', '88', '000', '2']], [['123', '456', '1', '410101156', '246', '802', '802', '456', '456']], [['0', '2', '4', '6', '8', '9999999999999999999999999']], [['468', '110100111', '3579', '3579', '3579', '3579', '3579', '3579']], [['1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '9999999999999999999999999']], [['24868', '4444444444444444444444444444444', '0', '3573579999', '3579', '3579', '3579', '3579', '3579', '3579']], [['11111111111111111', '1111111111111111111111111', '000000000000222222200000', '33333333333333333333333333333']], [['11111', '4444444444444444444444444444444', '4444444444444444444', '33333333333333']], [['444444426464', '1010101014569999999999999999999999999', '1010101101', '101010101']], [['2468', '468', '110100111', '3579', '3579', '3579', '3579']], [['23', '456']], [['246890126468023', '24689013579']], [['123', '246', '246', '246']], [['123', '456', '789', '246', '802', '123', '246', '666666677', '123']], [['2468', '468', '0', '3579', '351000110079', '3579', '3579', '3579', '3579', '3579', '24624689013579']], [['123', '456', '1', '246', '802', '802', '1233', '456', '456', '123']], [['2468', '468', '3579', '3579', '3579', '3579', '3579', '3579', '468']], [['24689013', '13579', '123', '456', '802', '456', '456', '6', '33333333333333333333333333333', '246']], [['24000000001', '0', '1', '456', '8020000000000001579000', '2446', '456', '456', '456']], [['468', '0', '101011', '333331011010033333333', '135799', '3579', '3579', '35790000000000001579000', '3579', '3579', '357911111111111111111111111111', '357911111111111111111111111111']], [['824680888']], [['2468', '4444444444444444444444444444444', '08002', '1234567890', '3579', '3579', '379', '35708002', '3579', '555555555555555555555555', '3579', '3579', '3579']], [['24689013', '13579', '123', '456', '246', '802', '456', '456', '6', '2426', '33333333333333333333333333333', '244686']], [['1246890135793579', '123', '8202', '456', '246', '2468900', '456']], [['246890126468023', '24689013579', '13579']], [['2468', '4444444444444444444444444444444', '0', '357999', '3579', '123', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['1234567890', '13579', '11111', '135759', '22222222222', '333333333333333', '333333333333333', '11111']], [['0', '2', '6', '3579', '8', '24689013579456000', '8', '3579']], [['999999999999911111111999999999999', '1111111111111111111111111', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '24', '456', '6', '246', '246', '24', '24689013', '44441011010011100110044426464']], [['248', '468', '0', '00', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '802', '24', '456', '6', '246', '246', '24', '24689013', '456']], [['2', '101010101', '10001100', '2', '2']], [['0', '2', '4', '1231123', '8', '000']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '4444444444444444444444444']], [['24000000001', '0', '456', '1', '802', '8020000000000001579000', '2446', '456', '456', '000', '456']], [['123', '456', '789', '246', '802', '123', '1111111111111111111111111802', '246', '246', '456']], [['11111', '824680888', '824680888', '11111']], [['999', '8888', '55555', '55555']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '13579', '3579', '000', '3579', '3579', '3579', '13579', '3579']], [['10001100', '101011', '101010101', '101010101', '101010101', '101010101']], [['2468', '468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579', '3579', '135799']], [['468', '0', '101011', '333331011010033333333', '135799', '3579', '3579', '35790000000000001579000', '3579', '3579', '357911111111111111111111111111', '357911111111111111111111111111', '357911111111111111111111111111', '333331011010033333333']], [['2468', '468', '0', '24648', '352468901357945679', '135799', '3579', '3579', '3579', '3579', '3579', '3579']], [['2468', '468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['24689013', '13579', '02', '456', '246', '802', '456', '456', '6', '33333333333333333333333333333']], [['11111', '1111', '44444444448202444444444444444444444', '555555555555555555555555']], [['13579', '0802', '333333333333333', '1579', '22222222222', '333333333333333', '1234567890']], [['24689013', '13579', '456', '246890133', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246', '456']], [['123', '456', '246', '802', '123', '246', '666666677', '789', '802']], [['2468', '468', '0', '24648', '135799', '24689013', '35786666666778', '35788', '3579', '3579', '3579', '3579']], [['456', '1', '410101156', '246', '802', '802', '456', '456']], [['24000000001', '0', '1', '456', '8020000000000001579000', '2446', '456', '456', '456', '1']], [['999999999999911111111999999999999', '0000000000001579000', '1111111111111111111111111', '101010101', '101010264555556101', '99999999999995555555555555555555555559', '33333333333333333333333333333']], [['1234567890', '13579', '111111111', '264555556', '11111', '22222222222', '333333333333333', '333333333333333']], [['444444426464', '22222235786666666778200', '222222200', '444444444', '666666677', '222222200', '000000001']], [['123', '456', '789', '246', '4246', '802', '123', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802', '789', '246']], [['111080211', '824680888', '824680888', '11111']], [['99', '246890', '88888', '8888', '35790000000000001579000']], [['24689013579', '222222200', '999999999999999', '99999999999999', '99999999999999', '99999999999999']], [['0000000000000000', '456', '246', '1111111111111111111111111802', '802', '456', '456']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '24', '456', '6', '246', '246', '24', '24689013', '44441011010011100110044426464', '13579']], [['10001100', '101010101', '101010101', '101010101', '101010101']], [['99', '999', '8888', '88888']], [['111111', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333', '4444444444444444444444444444444', '4444444444444444444444444444444']], [['0', '1', '456', '8020000000000001579000', '2446', '456', '456', '456', '1']], [['1246890135793579', '20468900', '8202', '456', '246', '2468900', '456']], [['2468', '468', '110100111', '1111', '3579', '3579', '3579', '3579', '3579', '468']], [['13579', '123', '246', '802', '456', '456', '123']], [['1111', '44444444448202444444444444444444444', '555555555555555555555555']], [['24689013', '13579', '123', '456', '444444426464', '446566', '246', '802', '456', '6', '33333333333333333333333333333', '246']], [['2468', '44444444444444400000000000000004444444444', '456', '0', '3579', '3579', '3579', '13579', '3579', '3579', '3579', '3579', '3579']], [['18023', '789246', '789', '333333333333333', '789', '789246', '789', '333333333333333']], [['99', '246890', '8888', '35790000000000001579000']], [['13579', '132579', '123', '8202', '456', '822', '246', '802', '456', '13579']], [['2', '468', '110100111', '3579', '3579', '824680888', '3579', '1579', '3579', '3579']], [['666666677']], [['2468', '468', '0', '24648', '135799', '3579', '3579', '35799', '3579', '3579']], [['18023', '333333333333333', '789', '789246']], [['123', '456', '802', '123', '246', '7889', '666666677', '789', '802']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['6666610101010145699999999999999999999999996677', '666666677']], [['2468', '468', '0', '135799', '3579', '3579', '3579', '3579', '3579', '3579', '80']], [['18023', '456', '789', '789', '8020000000000001579000', '222222200', '789', '456', '18023']], [['123', '789', '02', '802', '123', '246', '246']], [['1234567890', '13579', '264555556', '11111', '222222222222', '333333333333333', '333333333333333', '13579']], [['000000001', '222222200', '444444444', '44444424689004444', '666666677', '222222200', '444444444']], [['224689013', '13579', '456', '444444426464', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246', '246']], [['24680', '333333333333333', '1579', '22222222222', '333333333333333', '1234567890', '22222222222']], [['24689013', '13579', '123', '456', '246890133', '246', '802', '456', '456', '6', '10103333333333333310101', '33333333333333333333333333333', '246']], [['724689013389246', '18023', '456', '89', '246', '802']], [['2468', '44444444444444444444444444', '0', '3579', '3579', '3579', '135779', '3579', '3579', '3579', '3579', '3579']], [['12345690', '242446', '24680', '11111', '22222222222', '333333333333333', '1234567890']], [['10103333333333333310101', '456', '4569999999999999999999999999', '10110100111001100']], [['1231123', '456', '80', '1111111111111111111111111802', '1111111111111111111111111802']], [['24689013', '444444888884444444444444444444444444456', '13579', '123', '456', '000000000000000', '802', '456', '456', '6', '246', '24689013']], [['11111', '4444444444444444444444444444444', '4444444444444444444', '44444444444444444444', '33333333333333']], [['11010011', '110100111', '10001100', '18202', '101010101', '101010101']], [['4444444444444444444444444444444', '9999999999999999999999999', '000000000000000', '33333333333333333333333333333', '33333333333333333333333333333']], [['2468', '4444444444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '4444444444444444444444444444444']], [['123', '789', '80', '246', '802123', '802', '246']], [['10103333333333333310101', '46', '10110100111001100']], [['10103333333333333310101', '11010011', '1011010010110100111001325791100111001100', '456', '10110100111001100']], [['10001100', '101010101', '101010101', '101010101000000000000222222200000', '10001100']], [['0', '2', '99991010333333333333331010111111199935799999999999', '6', '8', '000', '22', '352468901357945679', '8', '0']], [['11010011', '10001100', '10001100']], [['24689013', '13579', '123', '456', '2646', '802', '456', '456', '6', '2426', '33333333333333333333333333333', '244686']], [['11111', '1111', '44444444444444444444478994444444444', '555555555555555555555555']], [['0', '2', '6', '3579', '8', '000', '22', '8', '000']], [['11111', '4444444444444444444444444444444', '4444444444444444444', '333333333333333']], [['0', '2', '4', '6', '2426', '000', '2']], [['123', '456', '789', '246', '7899', '802', '123', '246', '666666677', '456']], [['000000000000000', '123', '456', '246', '802', '000000000000000']], [['12345690', '242446', '11111', '22222222222', '333333333333333', '1234567890']], [['10001100', '101010101', '101010101', '101010101', '101010101', '101010101']], [['24689013', '135719', '123', '456', '246', '802', '456', '6', '555555555555555555555555', '246', '456', '456']], [['2468', '1101010111', '468', '110100111', '3579', '3579', '3579', '3579', '3579']], [['8020004444448888844444444444444444444444444560000000001579000', '24000000001', '0', '456', '1', '802', '8020000000000001579000', '22446', '456', '456', '456']], [['111080211', '824680888', '824680888', '11135246890135794567911', '11111']], [['2468', '44444444444444400000000000000004444444444', '456', '0', '3579', '35444444246890044449', '3579', '13579', '3579', '3579', '3579', '3579', '3579']], [['444444426464', '101010101', '1010101101', '101010101', '1010101101']], [['123', '4566', '456', '789', '24', '246', '802']], [['2468', '468', '110100111', '5555555555555555555555553579', '3579', '3579', '3579', '3579', '3579']], [['2468', '4444444444444444444444444444444', '1234567890', '3579', '3579', '379', '35708002', '3579', '555555555555555555555555', '3579', '3579', '555555555555552222222222225', '3579']], [['1111111111111111111111111', '4444802802444444444444444444444444444', '9999999999999999999999999']], [['24689013', '444444888884444444444444444444444444456', '13579', '123', '456', '000000000000000', '802', '45789', '456', '6', '246', '24689013', '24689013']], [['1234567890', '13579', '264555556', '11111', '222222222222', '333333333333333', '333333333333333', '13579', '11111']], [['123', '456', '8002', '802']], [['123', '456', '8002', '802', '8002']], [['456', '802', '456']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '24', '4379', '456', '6', '246', '246', '24', '24689013', '44441011010011100110044426464', '13579']], [['2468', '44444444444444400000000000000004444444444', '456', '0', '3579', '3579', '3579', '13579', '3579', '3579', '3579', '3579']], [['111111', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333', '4444444444444444444444444444444', '4444444444444444444444444444444', '4444444444444444444444444444444']], [['24689013', '13579', '123', '246890133', '246', '802', '456', '456', '6', '33333333333333333333333333333', '246', '246']], [['246890113', '13579', '02', '4456', '456', '246', '4546', '802', '456', '456', '6', '33333333333333333333333333333']], [['10001100', '100010100', '101011', '101010101', '101010101', '101010101', '101010101']], [['0', '2', '4', '4569999999999999999999999999', '6', '8', '000', '2']], [['0000000001', '222222200', '666677', '444444444', '666666677', '222222200']], [['10001100', '888', '101010101', '101010101', '8246890138888', '101010101000000000000222222200000']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '8082', '802', '24', '456', '6', '246', '246', '24', '24689013', '456']], [['123', '80210001100', '180123', '802', '18023', '180123']], [['1246890135793579', '1246890135793579', '20468900', '8202', '456', '246', '2468900', '456']], [['99', '8888', '8888', '8888']], [['123', '1123', '789', '246', '4246', '802', '123', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802']], [['2468', '44444444444444400000000000000004444444444', '456', '0', '3579', '3579', '3579', '2426', '13579', '24688', '3579', '3579', '3579', '3579']], [['2468', '1231123', '456', '1101012311230111', '0802', '10110100111001100', '1111111111111111111111111802', '1231123']], [['2468', '468', '110100111', '1111', '3579', '3579', '3579', '3579', '246']], [['2', '4', '0802', '6', '000', '2', '000']], [['0', '2', '4569999999999999999999999999', '6', '3579', '8', '000', '22', '8', '000']], [['24689013', '444444888884444444444444444444444444456', '13579', '123', '456', '000000000000000', '802', '45789', '456', '666666677', '246', '24689013', '24689013']], [['123888888', '13579', '123', '246', '802', '456', '456', '123']], [['123', '456', '789', '129999999999999993', '24', '246', '802']], [['244648', '468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579', '3579']], [['123', '456', '246', '802', '4566']], [['123', '456', '80021234567890', '8002', '802']], [['123', '456', '246', '2646', '24888888', '246']], [['1231123', '456', '110100111', '802', '1111111111111111111111111802', '802', '802', '1111111111111111111111111802', '802', '802']], [['2', '6', '000', '2']], [['123', '456', '78135759', '246', '802', '123', '246', '666666677', '789', '802']], [['3333110101231123011133333333333', '1579', '333333333333333', '1234567890', '22222222222']], [['123', '456', '2646', '802', '246', '246']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '13579', '3579', '000', '224689013', '3579', '3579', '13579', '0', '3579']], [['2468', '44444444444444400000000000000004444444444', '456', '0', '3579', '3579', '3579', '2426', '13579', '24688', '3579', '3579', '3579']], [['24689013', '444444888884444444444444444444444444456', '13579', '123', '456', '000000000000000', '802', '456', '456', '6', '246', '24689013', '123', '802']], [['1234567890', '13579', '24680', '11111', '22222222222']], [['0', '2', '4', '4569999999999999999999999999', '6', '45699999999999999999999999945699999999999999999999999999', '4444802802444444444444444444444444444', '000', '2']], [['2', '468', '110100111', '3579', '3579', '824680888', '3579', '1579', '3579', '3579', '3579', '3579']], [['123', '246', '456', '802', '246', '123']], [['99', '88888', '888888', '8888', '99']], [['11111', '1111', '44444444444444444444478994444444444', '555555555555555555555555', '11111']], [['0', '2', '4', '1231123', '000', '0']], [['18023', '456', '789', '789', '222222200', '789', '452222222222226', '222222200']], [['123', '456', '789', '246', '4246', '802', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802', '246']], [['456', '246', '2646', '80211111111111111111111', '246', '264555556', '246', '246']], [['18023', '456', '789', '789', '246', '802', '246']], [['3333110101231123011133333333333', '1579', '1234567890', '22222222222']], [['123', '456', '789', '129999999999999993', '24', '246', '8']], [['123', '456', '789', '246', '4246', '802', '123', '2426', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802', '246']], [['2468', '468', '110100111', '35571238888889', '35779', '3579', '3579', '3579', '3579']], [['123', '456', '44444444444444400000000000000004444444444', '2046890', '789', '246', '802']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '0000000000000000', '456', '000000000000000', '802', '456', '6', '246', '246', '24', '24689013']], [['123', '246', '456', '456', '123']], [['2468', '4444444444444444444444444444444', '0', '357999', '3579', '123', '3579', '3579', '3579', '3579', '3579', '39579', '3579', '3579']], [['2468', '4444444444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['2468', '468', '0', '135799', '3579', '3579', '357', '3579', '3579', '3579', '3579', '3579']], [['4444444444444444444444444', '0', '3579', '3579', '3579', '13579', '126468023', '3579', '3579', '3579', '3579']], [['0000000001', '444444426464', '222222200', '444444444', '666666677', '222222200']], [['2468', '4444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['1231123', '456', '35779', '1101012311230111', '0802', '10110100111001100', '802']], [['123', '789', '02', '802', '123', '2446', '246']], [['24680', '333333333333333', '1579', '22222222222', '333333333333333', '1234567890', '333333333333333']], [['0', '352468901357945679', '2', '4', '6', '8', '000', '2', '2']], [['2468', '1234567890', '3579', '3579', '379', '35708002', '372246890139', '3579', '555555555555555555555555', '3579', '3579', '555555555555552222222222225', '35799']], [['24689013', '13579', '123', '456', '444444426464', '446566', '246', '456', '6', '33333333333333333333333333333', '246']], [['123', '456', '789', '246', '4246', '802', '123', '2426', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802', '2646']], [['224689013', '13579', '456', '444444426464', '246', '802', '456', '6', '33333333333333333333333333333', '246', '246']], [['0000000000000000', '456', '246', '802', '456', '135779', '456']], [['246890', '80210001100', '246890126468023', '24689013579', '13579', '24689013579']], [['0', '2', '4', '6', '9999999999999999999999999', '0']], [['1', '11111', '1111', '44444444448202444444444444444444444', '555555555555555555555555']], [['24000000001', '0', '1', '456', '8020000000000001579000', '2446', '246', '456', '456', '456', '1']], [['242446', '11111', '22222222222', '333333333333333', '1234567890']], [['24689013', '13579', '123', '456', '2646', '8202', '456', '456', '6', '2426', '33333333333333333333333333333', '244686']], [['999999999999911111111999999999999', '0000000000001579000', '1111111111111111111111111', '101010101', '101010264555556101', '99999999999995555555555555555555555559']], [['45222222222222613579', '11111', '22222222222', '333333333333333']], [['1234567890', '13579', '264555556', '11111', '222222222222', '333333333333333', '13579']], [['2468', '468', '110100111', '3579', '3579', '3579', '35379', '3579', '3579', '3579']], [['999910103333333333333310101111111999999999999', '11111111111111111111113579111', '0000000000001579000', '1111111111111111111111111', '02', '99999999999995555555555555555555555559', '33333333333333333333333333333', '02']], [['8020004444448888844444444444444444444444444560000000001579000', '24000000001', '0', '456', '1', '802', '8020000000000001579000', '22446', '456', '456', '802000444444888884444444444444444444444444456000000000157900', '456']], [['123', '456', '246', '802', '246', '802']], [['123', '456', '246', '802', '123', '246', '35444444246890044449', '666666677', '123']], [['123', '456', '82', '802']], [['456', '789', '246', '802', '24', '123', '246', '666666677', '123']], [['9999999999999999999999999', '1111111111111111111111111', '0000000000000000', '33333333333333333333333333333', '33333333333333333333333333333']], [['123', '456', '44444444444444400000000000000004444444444', '22222235786666666778200', '2046890', '789', '246', '802']], [['11111111', '111111111', '11111', '45100011006', '802123', '555555555555555555555555', '33333333333333']], [['2468', '468', '0', '24648', '352468901357945679', '135799', '3579', '35739', '3579', '3579', '3579', '3579']], [['123', '802', '246', '802']], [['2468', '468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['24000000001', '0', '1', '456', '8020000000000001579000', '2446', '456', '456', '1']], [['0', '352468901357945679', '22', '2', '4', '6', '8', '000', '2', '2']], [['0000000000000000', '123', '456', '357911111111111111111111111111', '1111111111111111111111111802', '0802', '456', '456']], [['123', '456', '789', '246', '802', '89', '123', '246', '666666677', '789', '802']], [['1234567890', '7899', '284680', '13579', '4444802802444444444444444444444444444', '11111', '22222222222', '24689013579', '13579']], [['23', '456', '456']], [['123', '789', '4569999999999999999999999999', '802', '123', '246', '246']], [['10103333333333333310101', '101031233333333333333310101', '11010011', '456', '10110100111001100']], [['24689013', '44441011010011100110044426464', '13579', '444444426464', '456', '000000000000000', '802', '24', '456', '6', '246', '802', '456']], [['24680', '333333333333333', '1579', '22222222222', '33333331233333', '1234567890', '333333333333333']], [['2468', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['1993579', '123', '456', '246', '802', '456']], [['2468', '4444444444444444444444444444444', '0', '3579', '3579', '3579', '3579', '3579', '3579', '4444444444444444444444444444444']], [['123', '246', '802', '246', '123']], [['123', '456', '789', '24', '246', '8']], [['123', '456', '789', '246', '802', '2046890', '246', '246', '456']], [['0', '6', '8', '000', '22', '8']], [['222222200', '666677', '444444444', '666666677', '222222200', '666666677']], [['2468', '4444444444444444444444444444444', '08002', '1234567890', '3579', '3579', '379', '35708002', '3579', '53579', '555555555555555555555555', '3579', '3579', '3579', '35708002']], [['11111', '5555555555555555555555555', '33333333333333', '4444444444444444444444444444444']], [['123', '456', '789', '246', '4246', '802', '123', '1111111111111111111111111802', '246', '246', '1111111111111111111111111802', '9', '246']], [['222222200', '444444444', '44444424689004444', '666666677', '222222200']], [['123', '456', '789', '246', '7899', '123', '246', '666666677', '456']], [['13579', '24680', '333333333333333', '1579', '22222222222', '333333333333333', '123456', '13579']], [['468', '0', '24648', '135799', '3579', '3579', '3579', '3579', '3579']], [['246890126468010103123333333333333331010123', '24689013579']], [['24668', '4444444444444444444444444', '0', '3579', '3579', '3579', '3579', '000', '224689013', '3579', '35779', '13579', '0', '3579']], [['99', '88888', '8888', '88888', '88888']], [['246890', '2046890', '24689013', '24689013579', '132579', '24689013579']], [['123', '456', '789', '02', '802', '123', '0802', '246', '246', '123']], [['123', '456', '135779']], [['2468', '4444444444444444444444444444444', '0', '357999', '3579', '123', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['0000000']], [['1111111']], [['246882']], [['2457', '69', '888']], [['2', '4', '6', '8']], [['13579', '2468']], [['0', '2', '4', '6', '8']], [['1', '3', '5', '7', '9']], [['000000001', '222222200', '444444444', '666666677', '666666677']], [['2468', '468', '0', '3579', '3579', '24633333333333333', '3579', '33579', '3579', '3579', '3579', '3579']], [['24689013', '24689013579', '13579']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333']], [['000000001', '222222200', '66246890136666677', '444444444', '666666677', '666666677']], [['2466', '123', '456', '789', '246', '802']], [['1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '1111111111111111111111111']], [['2468', '222222200', '666666677', '000000001', '000000001']], [['000000001', '222222200', '66246890136666677', '444444444', '7666666677']], [['24689213', '24689013579', '13579', '24689013']], [['1111111111111111111111111', '000000000000000', '3333333333333333333332468033333333', '33333333333333333333333333333', '1111111111111111111111111']], [['123', '456', '78222222222229', '246', '802']], [['1010000000001', '11010011', '10001100', '11111111', '11010011']], [['123', '456', '78222222222229', '246', '802', '456']], [['0', '6000000000000000', '2', '4', '6', '8', '22', '000']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333']], [['2466', '0', '456', '789', '246', '802']], [['8789', '2466', '123', '456', '789', '246', '802']], [['11111', '4444444444444444444444444444444', '555555555555555555555555', '333333333333333']], [['99', '8888', '55555', '8888']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333']], [['123', '456', '78222222222229', '246', '802', '456', '123']], [['11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '333333333333333']], [['2468', '0', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['2468', '468', '0', '3579', '3579', '24633333333333333', '3579', '78222222222229', '3579', '3579', '3579', '3579']], [['2466', '123', '456', '789', '246', '802', '246']], [['333333333333333333333333333333', '222222200', '666666677', '000000001', '000000001']], [['3333333333333333333333333333333', '22333333333333333333333333333332222200', '666666677', '000000001', '000000001']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '8888', '33333333333333333333333333333', '333333333333333333333333333333']], [['11111', '4444444444444444444444444444444', '44444444444444444444444444444', '444444444444444444444444444444444444444444444444444444444444444444444444', '33333333333333']], [['2466', '1223', '789', '246', '802', '246']], [['3579', '2468', '222222200', '666666677', '000000001', '000000001', '2468']], [['2466', '0', '456', '789', '246', '789', '802']], [['1111111111111111111111111', '0000000000000000', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333']], [['24633333333333333', '99', '8888', '55555', '8888']], [['2466', '0', '456', '789', '246', '789', '802', '2466']], [['9999999999999999999999999', '1111111111111111111111111', '0000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333']], [['2466', '1223', '789', '24666246890136666677', '802', '246']], [['2466', '789', '246', '802']], [['24689013579', '13579', '24689013']], [['000000001', '222222200', '66246890136666677', '44444444', '666666677', '666666677', '000000001', '66246890136666677']], [['1111111111111111111111111', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '1111111111111111111111111']], [['123', '456', '78222222222229', '246', '802', '456', '123', '802']], [['2466', '789', '246', '802', '246', '333333333333333']], [['11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '333333333333333', '11111']], [['99', '8888', '55555', '55555']], [['24633333333333333', '99', '8888', '550555', '8888']], [['2468', '468', '0', '3579', '3579', '24633333333333333', '3579', '78222222222229', '3579', '3579', '3579']], [['1111111111111111111111111', '000000000000000', '3333333333333333333332468033333333', '33333333333333333333333333333', '1111111111111111111111111', '1111111111111111111111111']], [['24633333333333333', '99', '8888', '55555', '8888', '8888', '55555']], [['2466', '0', '456', '789', '246', '789', '33333333333333333333332468033333333', '246']], [['1010000000001', '11010011', '10001100', '111111111']], [['24633333333333333', '99', '8888', '55555', '8888', '99']], [['11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444']], [['99', '8888', '55555', '55555', '55555']], [['11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444']], [['9999999999999999999999999', '3333333333333333333333333333333', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333']], [['9999999999999999999999999', '99999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '33333333333333333333333333333', '1111111111111111111111111']], [['9999999999999999999999999', '1111111111111111111111111', '0000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333']], [['246890', '24689013', '24689013579', '13579', '24689013579']], [['000000001', '222222200', '44444444499', '666666677', '666666677']], [['101010101', '11010011', '111010011', '10001100', '11111111']], [['99', '8888', '55555', '550000000015']], [['9999999999999999999999999', '1111111111111111111111111', '00000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333', '8888']], [['000000001', '222222200', '444444444', '6666666677', '666666677']], [['1223', '000000001', '222222200', '44444444499', '4', '666666677']], [['33333333333333333333333333333333333333333324680333333333333333333', '9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333']], [['99', '55555', '24689013579']], [['2466', '123', '456', '789', '246', '802', '456']], [['9999999999999999999999999', '1111111111111111111111111', '00000000000000', '6', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333', '8888']], [['2466', '0', '456', '789', '78', '246', '789', '802', '2466']], [['9999999999999999999999999', '33333333333333333333333333333']], [['33333333333333333333333333333333333333333324680333333333333333333', '9999999999999999999999999', '1111111111111111111111111', '000000000000000', '3333334444444433333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333']], [['24689213', '24689013579', '13579', '2468901352463333333333333379', '242689013']], [['2468', '468', '0', '3579', '33333333333333333333333333333', '3579', '24633333333333333', '3579', '78222222222229', '3579', '3579', '3579']], [['924666246890136666677', '8888', '55555', '55555']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '44444444', '666666677', '666666677', '000000001', '66246890136666677']], [['0000003333333333333333333332468033333333001', '000000001', '222222200', '444444444', '6666666677', '666666677']], [['2466', '0', '456', '789', '246', '802', '789']], [['9999999999999999999999999', '1111111111111111111111111', '0000000000000', '8888', '33333333333333333333333333333', '333333333333333333333333333333']], [['11010011', '10001100', '11111111', '11010011', '11010011']], [['2466', '789', '246', '802', '246', '1223']], [['456', '78222222222229', '33333333333333333333333333333333333333333324680333333333333333333246']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '1111111111111111111111111']], [['123', '456', '2468901352463333333333333379', '246', '802']], [['333333333333333333333333333333', '222222200', '000000001', '000000001']], [['24633333333333333', '99', '8888', '5550555', '8888']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '9999999999999999999999999']], [['24689213', '13579', '2468901352463333333333333379', '242689013']], [['8789', '2466', '123', '789', '246']], [['2466', '6666666677', '456', '789', '246', '802', '456']], [['24689013579', '13579']], [['11010011', '10001100', '11111111', '11010011', '33333333333333', '11010011', '33333333333333']], [['123', '456', '78222222222229', '246', '802', '456', '123', '456']], [['2468', '33333333333333333333333333333333333333333324680333333333333333333246', '468', '0', '3579', '3579', '24633333333333333', '3579', '33579', '3579', '3579', '3579', '3579']], [['2466', '1223', '789', '24666246890136666677', '24666', '802', '246']], [['123', '456', '78222222222229', '246', '802', '456', '123', '444444444']], [['1111111111111111111111111', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '333333333333333333333324680333333', '1111111111111111111111111']], [['2466', '1223', '789', '802', '246', '802']], [['246890', '24689013', '24689013579', '13579', '24689013579', '24689013579']], [['2466', '789', '246', '802', '246']], [['101010101', '11010011', '10001100', '11111111', '11111111']], [['000000001', '222222200', '66246890136666677', '6667', '444444444', '666666677', '666666677']], [['456', '78222222222229', '246', '802', '456', '123', '802']], [['24633333333333333', '99', '8888', '44444444444444444444444444444444444444444444444444444444444444', '55555', '8888', '99']], [['24633333333333333', '99', '333333333333333', '8888', '44444444444444444444444444444444444444444444444444444444444444', '55555', '99']], [['1111111111111111111111111', '0000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '33333333333333333333333']], [['456', '78222222222229', '33333333333333333333333333333333333333333324680333333333333333333246', '78222222222229']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '666666677', '666666677', '000000001', '22222266246890136666677200', '66246890136666677', '666666677']], [['333333333333333333333333333333', '222222200', '666666677', '000000001', '000000001', '333333333333333333333333333333', '333333333333333333333333333333']], [['9', '8888', '55555', '8888']], [['123', '456', '78222222222229', '246', '802', '12133', '456', '123', '444444444']], [['123', '2462', '456', '789', '246', '802']], [['9999999999999999999999999', '1111111111111111111111111', '00000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '123', '333333333333333333333333333333', '33333333333333333333333333333', '8888']], [['123', '456', '78222222222229', '246', '802', '456', '123', '44444']], [['2466', '0', '6', '3333333333333333333333333333333333332468033333333', '789', '246', '789', '33333333333333333333332468033333333', '246', '0']], [['000000024601', '000000001', '222222200', '44444444499', '666666677', '666666677']], [['2468', '3579', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['123', '456', '782122322222229', '246', '802']], [['123', '456', '2468901352463333333333333379', '246', '802', '2468901352463333333333333379']], [['246890', '24689013', '24689013579', '44444444', '24689013579']], [['24689013', '13579']], [['2468', '222222200', '666666677', '222222101010101200', '000000001', '000000001']], [['1112133010011', '1010000000001', '11010011', '10001100', '111111111']], [['101010011', '1112133010011', '1010000000001', '11010011', '10001100', '111111111']], [['000000024601', '000000001', '222222200', '44444444499', '666666677', '666666677', '6666676677']], [['99', '888', '55555333333333333333333333324680333333', '55555', '55555333', '8888']], [['9', '8888', '8888']], [['9999999999999999999999999', '1111111111111111111111111', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333']], [['0', '6', '3333333333333333333333333333333333332468033333333', '789', '246', '789', '33333333333333333333332468033333333', '246', '0']], [['000000001', '22222222222', '666666677', '666666677']], [['1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '662468901366766677']], [['222222101010101200', '468', '0', '2', '33333333333333333333333333333', '3579', '24633333333333333', '3579', '3579', '3579', '3579']], [['24689213', '3333333333333333333333333333333333332468033333333', '13579', '2468901352463333333333333379', '242689013']], [['44444444444444444444444444444', '444444444444444444444444444444444444444444444444444446666676677444444444', '11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444135794444444444444444444444444']], [['1111111111111111111111111', '000000000000000', '3333333333333333333332468033333333', '33333333333333333333333333333', '1111111111111111111111111', '1111111111111111111111111', '1111111111111111111111111']], [['44444444444444444444444444444', '444444444444444444444444444444444444444444444444444446666676677444444444', '11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '4444444444444443333333333333333333333333333333333333333332468033333333333333333344', '555555555555555555555555', '44444444444444444444444444444135794444444444444444444444444', '444444444444444444444444444444444444444444444444444446666676677444444444']], [['000000001', '222222200', '66246890136666677', '444444444', '666666677']], [['0', '6000000000000000', '4', '6', '8', '22', '000']], [['2468', '3579', '3579', '3579', '3579', '3579', '6', '3579', '3579', '3579']], [['2466', '0', '456', '789', '246', '802', '802', '802']], [['9999999999999999999999999', '1111111111111111111111111', '00000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '123', '333333333333333333333333333333', '33333333333333333333333333333', '8888', '00000000000000', '33333333333333333333333333333']], [['6666676677', '456', '78222222222229', '246', '802', '456', '123', '444444444']], [['11010011', '4444444444444444444444444444444', '10001100', '11111111', '11010011', '33333333333333', '11010011', '33333333333333']], [['12000033333333333333333333333333333333333333333324680333333333333333333246000000000003', '123', '456', '3579', '78222222222229', '246', '22333333333333333333333333333332222200', '456']], [['9999999999999999999999999', '000000000000000', '33333333333333333333333333333', '00000000000000', '333333333333333333333333333333', '9999999999999999999999999']], [['123', '456', '78222222222229', '246', '802', '782222222222229', '456', '123', '802']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '8888', '33333333333333333333333333333', '00044444444444444444444444444444444444444444444444444444444444444000000000000', '3333333333333333333332468033333333']], [['24688029013579', '13579', '24689013']], [['55555', '8888']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '8888', '0000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '00000246892130000000000', '333333333333333333333333333333', '0000000000000']], [['246890', '24689013579', '44444444', '24689013579']], [['24633333333333333', '333333333333333', '8888', '44444444444444444444444444444444444444444444444444444444444444', '55555', '99', '44444444444444444444444444444444444444444444444444444444444444']], [['1111111111111111111111111', '000000000000000', '662468901366766677']], [['333333333333333333333333333333', '0000000', '222222200', '000000001', '000000001']], [['666666677', '55555', '8888']], [['2466', '0', '456', '2', '789', '246', '8002', '802', '802']], [['123', '456', '2468901352463333333333333379', '246', '2468901352463333333333333379']], [['1111111111111111111111111', '44444444', '33333333333333333333333333333', '1111111111111111111111111']], [['1111111111111111111111111', '000000000000000', '9999999999999999999999999', '662468901366766677', '1111111111111111111111111']], [['9999999999999999999999999', '99999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333']], [['000000001', '2462', '222222200', '66246890136666677', '6667', '444444444', '666666677', '666666677']], [['24689213', '2442689013', '13579', '242689013']], [['2466', '0', '456', '2', '789', '246', '22333333333333333333333333333332222200', '8002', '802', '802', '246', '2466']], [['123', '456', '78222222222229', '802', '456', '123', '44444']], [['246890', '24689013', '24689013579', '13579', '24689013579', '24689013579', '24689013579']], [['1111111111111111111111111', '004444400000000000000', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '00000000000000000', '3333333333333333333332468033333333', '33333333333333333333332468033333333', '333333333333333333333333333333', '000000000000000']], [['37579', '00', '2468', '468', '0', '3579', '3579', '24633333333333333', '78222222222229', '3579', '3579', '3579', '3579']], [['24688029013579', '1111111111111111111111111', '000000000000000', '33333333333333', '33333333333333333333333333333', '11111111111111111111111111']], [['0000000000000000', '9999999999999999999999999', '1111111111111111111111111', '000000000000000', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333']], [['1111111111111111111111111', '24633333333333333', '6626468901366766677', '662468901366766677']], [['9999999999999999999999999', '3333333333333333333333333333333', '1111111111111111111111111', '3333333333333333333332468033300000000133333', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333']], [['11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '44444444444444444444444444444444444444444444444444444444444444']], [['33333333333333333333333333333333333333333324680333333333333333333', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '1111111111111111111111111']], [['1111111111111111111111111', '004444400000000000000', '000000000000000', '3333333333333333333333246803333', '33333333333333333333333333333', '00000000000000000', '3333333333333333333332468033333333', '33333333333333333333332468033333333', '0000000000000000', '333333333333333333333333333333', '000000000000000']], [['00000246892130000000000', '2466', '0', '456', '789', '246', '802', '789', '456']], [['0', '6', '3333333333333333333333333333333333332468033333333', '789', '2446', '789', '33333333333333333333332468033333333', '246', '0']], [['000000001', '2462', '222222200', '66246890136666677', '6667', '444444444', '66697', '666666677', '666666677']], [['101010101', '11010011', '78', '10001100', '44444444444444444444444444444135794444444444444444444444444']], [['222222200', '000000001', '000000001']], [['1223', '000000001', '222222200', '444444444499', '4', '666666677']], [['2466', '123', '456', '789', '246', '802', '246', '789']], [['33333333333333333333333333333333333333333324680333333333333333333', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '33333333333333333333333333333']], [['1112133010011', '10100000001', '11010011', '10001100', '111111111']], [['456', '78222222222229', '3333324666333333333333333333333333333333333333324680333333333333333333246']], [['11111', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333', '33333333333333']], [['99', '888', '55555', '55555333', '8888']], [['0', '6000000000000000', '2', '4', '6', '8', '22', '000', '6']], [['1111111111111111111111111', '24633333333333333', '6626468901366766677', '11121111111111111111111111', '662468901366766677', '6626468901366766677']], [['24689013', '24689013579', '13579', '2468902463333333333333313579', '24689013579']], [['662468901366760000000246016677', '1111111111111111111111111', '000000000000000', '662468901366766677']], [['9999999999999999999999999', '1111111111111111111111111', '11111111111111111111111111', '0000000000000', '33333333333333333333333333333', '333333333333333333333333333333', '333333333333333333333333333333']], [['11111', '4444444444444444444444444444444444444444444444444444444444444444', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '444444444444444444444444444444444444444444444444444444444444444', '44444444444444444444444444444444444444444444444444444444444444']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '44444444', '666666677', '000000001', '66246890136666677']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '9999999999999999999999999', '3333333333333333333332468033333333']], [['24689013', '24689013579', '2468902463333333333333313579', '24689013579', '24689013579']], [['2468', '3579', '35779', '3579', '3579', '3579', '3579', '3579', '3579', '3579']], [['12000033333333333333333333333333333333333333333324680333333333333333333246000000000003', '123', '78456', '3579', '78222222222229', '246', '22333333333333333333333333333332222200', '456', '78456']], [['2468', '468', '0', '3579', '3579', '24633333333333333', '3579', '78222222222229', '3579', '3579', '35779', '3579', '3579']], [['9999999999999999999999999', '00000000000000', '1111111111111111111111111', '00000000000000', '8888', '33333333333333333333333333333', '123', '333333333333333333333333333333', '33333333333333333333333333333', '8888', '00000000000000', '33333333333333333333333333333']], [['24689013579', '13579', '13579', '13579']], [['24633333333333333', '99', '8888', '44444444444444444444444444444444444444444444444444444444444444', '55555', '8888', '999', '55555']], [['550000000015', '99', '8888', '55555', '55555', '55555']], [['00', '6000000000000000', '4', '6', '8', '22', '000']], [['0', '6', '3333333333333333333333333333333333332468033333333', '246', '789', '33333333333333333333332468033333333', '246', '0', '246', '246']], [['1223', '000000001', '222222200', '44444444499', '666666677']], [['246890', '24689013', '24689013579', '13579', '2468990']], [['000000001', '0000000001', '222222200', '44444444499', '666666677', '666666677']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '44444444', '6666666677', '000000001', '66246890136666677', '444444444444444444444444444444444444444444444444444444444444444444444444', '666666677']], [['1111111111111111111111111', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '11111111111111111']], [['2466', '0', '6', '3333333333333333333333333333333333332468033333333', '789', '246', '33333333333333333333332468033333333', '246', '0']], [['11111', '4444444444444444444444444444444', '555555555555555555555555', '33333333333333', '33333333333333', '33333333333333']], [['1111111111111111111111111', '33333333333333333333332468033333333', '00000000', '33333333333333333333333333333', '1111111111111111111111111', '1111111111111111111111111']], [['3333333333333333333333333333333333332468033333333', '2468901352463333333333333379', '242689013']], [['24689213', '3333333333333333333333333333333333332468033333333', '0000000000000', '13579', '2468901352463333333333333379', '242689013']], [['9999999999999999999999999', '3333333333333333333333333333333', '1111111111111111111111111', '333333333333333330000000001333333333333', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '3333333333333333333333333333333', '1223', '33333333333333333333333333333']], [['222222200', '000000001']], [['101010011', '1112133010011', '1010000000001', '11010011', '111111111']], [['101010011', '1112133010011', '1010000001', '110100111', '11055000000001510011', '111111111', '11010011']], [['123', '456', '782122322222229', '2646', '802']], [['9999999999999999999999999', '99999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '0000000000000000', '44444444499', '1111111111111111111111111']], [['0', '6000000000000000', '2', '4', '6', '8', '22', '000', '6000000000000000']], [['9999999999999999999999999', '00000000000000', '1111111111111111111111111', '00000000000000', '8888', '33333333333333333333333333333', '123', '444444444499', '333333333333333333333333333333', '33333333333333333333333333333', '8888', '00000000000000', '33333333333333333333333333333']], [['9999999999999999999999999', '3333333333333333333333333333333', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333', '9999999999999999999999999']], [['333333333333333333333333333333', '0000000', '222222200', '000000001', '000000001', '000000001']], [['24689213', '5550555', '2468901352463333333333333379', '242689013']], [['44', '0', '6000000000000000', '2', '4', '6', '8', '22', '000', '6']], [['2466', '123', '456', '789', '000000000000000006', '246', '802', '2']], [['123', '456', '78222222222229', '246', '802', '802']], [['9999999999999999999999999', '2463', '33333333333333333333333333333']], [['2466', '2446', '0', '3333333333333333333333333333333333332468033333333', '789', '246', '33333333333333333333332468033333333', '246', '0']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '331010101013333333333', '0', '8888', '3311111111111111111111111111333333333333333333333333333', '333333333333333333333333333333', '9999999999999999999999999']], [['000000001', '222222200', '444444444', '6666666677', '666666677', '666666677']], [['9999999999999999999999999', '99999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '33333333333333333333333333333333333333333324680333333333333333333246', '1111111111111111111111111']], [['101010011', '1112133010011', '1010000001', '10101246890130011', '110100111', '11055000000001510011', '11010011', '110100111']], [['24655505556', '123', '456', '789', '246', '802']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '44444444', '662468901366666677', '000000001', '66246890136666677', '444444444444444444444444444444444444444444444444444444444444444444444444', '666666677']], [['1010000000001', '11010011', '10001100', '11010011']], [['99', '888', '999', '55555333333333333333333333324680333333', '55555', '55555333', '8888']], [['99', '8888', '55555', '8888', '99']], [['99', '24689013579', '55555333333333333333333333324680333333', '55555', '55555333', '8888']], [['101010101', '111111', '11010011', '10001100', '11111111', '11111111']], [['99', '8888']], [['9999999999999999999999999', '99999999999999999999999999', '00044444444444444444444444444444444444444444444444444444444444444000000000000', '1111111111111111111111111', '000000000000000']], [['24633333333333333', '99', '8888', '55555', '99']], [['99', '8888', '5555111111111111111111111111115', '8888']], [['11111', '4444444444444444444444444444444', '555555555555555555555555', '111111', '33333333333333', '33333333333333']], [['456', '33333333333333333333333333333333333333333324680333333333333333333246', '78222222222229']], [['0', '0000', '6000000000000000', '2', '4', '6', '8', '22', '000']], [['000000001', '2462', '222222200', '66246890136666677', '6667', '444444444', '66697', '666666677']], [['24633333333333333', '6', '99', '8888', '44444444444444444444444444444444444444444444444444444444444444', '55555', '8888', '99']], [['123', '2462', '44', '452463', '3333333333333333333332468033300000000133333', '246', '802']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '666666677', '666666677', '000000001', '22222266246890136666677200', '66246890136666677', '666666677', '666666677', '444444444444444444444444444444444444444444444444444444444444444444444444']], [['33333333333333333333333333333333333333333324680333333333333333333', '9999999999999999999999999', '1111111111111111111111111', '000000000000000', '3333334444444433333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333', '3333333333333333333332468033333333']], [['2466', '789', '246', '2805555555555555555555555552', '2802', '246', '333333333333333']], [['246890', '24689013', '2446890', '24689013579', '44444444', '24689013579']], [['000000001', '66246890136666677', '444444444', '666666677', '666666677']], [['1111111111111111111111111', '0000000000000000', '12646223', '9999999999999999999999999', '662468901366766677', '1111111111111111111111111']], [['1111111111111111111111111', '000000000000000', '3333324666333333333333333333333333333333333333324680333333333333333333246', '33333333333333333333332468033333333', '33333333333333333333333333333', '333333333333333333333324680333333', '1111111111111111111111111']], [['1111111111111111111111111', '004444400000000000000', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '00000000000000000', '3333333333333333333332468033333333', '33333333333333333333332468033333333', '333333333333333333333333333333', '000000000000000', '00000000000000000']], [['9999999999999999999999999', '1111111111111111111111111', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '8888']], [['000000001', '222222200', '66246890136666677', '44444444', '22222222222', '666666677', '666666677', '000000001', '66246890136666677']], [['101010011', '1112133010011', '1010000000001', '33333333333333333333333333333333333333333324680333333333333333333246', '78', '111111111']], [['24689213', '2468229213', '24689013579', '13579', '2468901352463333333333333379', '242689013']], [['11111', '44444444444444444223333333333333333333333333333322222004444444444444', '5555555555555555555555555', '111111', '33333333333333', '33333333333333']], [['11111', '4444444444444444444444444444444', '44444444444444444444444444444', '4444444444444444444444444444444444444444444444444444444444444444444444444', '44444444444444444444444444444444', '33333333333333', '4444444444444444444444444444444444444444444444444444444444444444444444444']], [['10101011', '11010011', '78', '44444444444444444444444444444135794444444444444444444444444']], [['000000001', '6666666724633333333333333', '0000000001', '222222200', '44444444499', '666666677', '666666677']], [['11010011', '4444444444444444444444444444444', '10001100', '11111111', '355555555555555555555555553333333333333', '33333333333333', '11010011', '33333333333333']], [['000000001', '222222200', '444444444', '6666666677', '666666677', '444444444']], [['13579', '12000033333333333333333333333333333333333333333324680333333333333333333246000000000003', '123', '78456', '3579', '78222222222229', '246', '22333333333333333333333333333332222200', '456', '78456']], [['11010011', '4444444444444444444444444444444', '10001100', '11111111', '11010011', '33333333333333', '11010011', '1111111111010011', '33333333333333']], [['55555', '8888', '8888']], [['2466', '1223', '789', '802', '2446', '246']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '37579', '662468901366766677', '44444444', '666666677', '666666677', '000000001', '66246890136666677']], [['9999999999999999999999999', '1111111111111111111111111', '355555555555555555555555553333333333333', '8888', '0000000000000', '332468333333333333333333333333333', '3333333333333333333332468033333333', '00000246892130000000000', '333333333333333333333333333333', '0000000000000']], [['9999999999999999999999999']], [['2466', '789', '2463', '456', '1223']], [['99', '55555']], [['2468', '222222200', '666666677', '222222101010101200', '000000001']], [['246890', '24689013', '24689013579', '13579', '0000003333333333333333333332468033333333001']], [['8888', '55555', '55555']], [['2468', '468', '0', '3579', '3579', '24633333333333333', '33579', '3579', '3579', '3579', '3579']], [['662468901366760000000246016677', '1111111111111111111111111', '0000000000000000', '662468901366766677']], [['33333333333333333452463333333333333333333333333324680333333333', '9999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333']], [['2466', '456', '789', '246', '789', '33333333333333333333332468033333333', '246', '246']], [['33333333333333333333333333333', '33333333333333333333333333333']], [['000000001', '222222200', '66246890136666677', '44444444', '22222222222', '666666677', '666666677', '1010000000001', '66246890136666677']], [['2468', '468', '0', '35779', '33333333333333333333333333333', '3579', '24633333333333333', '3579', '78222222222229', '3579', '24', '3579']], [['9999999999999999999999999', '00000000000000', '1111111111111111111111111', '00000000000000', '8888', '33333333333333333333333333333', '123', '333333333333333333333333333333', '33333333333333333333333333333', '8888', '00000000000000', '33333333333333333333333333333', '8888']], [['24633333333333333', '99', '8888', '44444444444444444444444444444444444444444444444444444444444444', '55555', '8888']], [['2442689013', '13579', '13579']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '331010101013333333333', '0', '8888', '3311111111111111111111111111333333333333333333333333333', '333333333333333333333333333333', '99999999999999999999999999']], [['2466', '244655555', '0', '3333333333333333333333333333333333332468033333333', '789', '246', '33333333333333333333332468033333333', '246', '35779']], [['1112133010011', '1010000000001', '1101044444444011', '10001100', '111111111']], [['9999999999999999999999999', '1111111111111111111111111', '00000000000000', '6', '8888', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333', '33333333333333333333333333333', '12000033333333333333333333333333333333333333333324680333333333333333333246000000000003', '8888']], [['1223', '000000001', '222222200', '444444444499', '4', '666666677', '4']], [['333333333333333333333333333333', '222222200', '000000001', '000000001', '333333333333333333333333333333', '333333333333333333333333333333']], [['9999999999999999999999999', '1111111111111111111111111', '000000000000000', '8888', '333333333333333333333333333333', '00044444444444444444444444444444444444444444444444444444444444444000000000000', '3333333333333333333332468033333333']], [['2466', '456', '2', '789', '246', '22333333333333333333333333333332222200', '8002', '802', '802', '246', '2466']], [['111111', '11010011', '10001100', '11111111', '11111111', '11111111']], [['555555511111111111111111111111111555', '99', '8888', '55555', '55555']], [['2466', '0', '456', '789', '246', '789', '802', '2466', '789']], [['101010101', '55555', '10001100', '11111111', '11111111']], [['24689213', '1111111111111111111111111', '0000000000000000', '000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '333333333333333333333333333333']], [['24688029013579', '13579', '24689013', '24688029013579']], [['101010011', '1112133010011', '1010000000001', '1101001782222222222291', '111111111']], [['1223', '000000001', '222222200', '44444444499', '4', '666666677', '1223']], [['24633333333333333', '99', '8888', '44444444444444444444444444444444444444444444444444444444444444', '8888', '99']], [['24689013', '11111', '2468902463333333333333313579', '24689013579', '24689013579']], [['246890', '24689013', '24689013579', '44444444', '24101012468901300116890', '24689013579', '24689013579', '24689013579']], [['24633333333333333', '000000000000000006', '333333333333333', '8888', '44444444444444444444444444444444444444444444444444444444444444', '55555', '99', '44444444444444444444444444444444444444444444444444444444444444']], [['9999999999999999999999999', '000000000000000', '00000000000000', '333333333333333333333333333333', '9999999999999999999999999']], [['62466', '0', '456', '789', '246', '802', '246']], [['1111111111111111111111111', '33333333333333333333332468033333333', '00000000', '33333333333333333333333333333', '1111111111111111111111111']], [['111111', '11010011', '10001100', '11111111', '11111111']], [['11111111111111111111', '9999999999999999999999999', '99999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333']], [['24633333333333333', '99', '8888', '5550555', '8888', '8888']], [['24633333333333333', '99', '8888', '550555', '8888', '8888']], [['44444444444444444444444444444', '11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444135794444444444444444444444444', '44444444444444444444444444444135794444444444444444444444444']], [['2466', '0', '6', '3333333333333333333333333333333333332468033333333', '789', '333333333333333333333324368033333333', '246', '33333333333333333333332468033333333', '246', '0']], [['24633333333333333', '994444444444444444444444444444444', '99', '8888', '55555', '99']], [['24689213', '13579', '24689013']], [['123', '456', '78222222222229', '246', '802', '782222222222229', '456', '3', '802']], [['4444444444444444444444444444444', '555555555555555555555555', '111111', '33333333333333', '33333333333333']], [['24689213', '2442689013', '13579', '242689013', '13579', '24689213']], [['1111111111111111111111111', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '11111111111111118789', '1111111111111111111111111']], [['11111', '444444444444444444444444444444', '33333333333333']], [['11010011', '100011000', '11111111', '11010011', '33333333333333', '11010011', '33333333333333']], [['1111111111111111111111111', '0044444000000000000000', '000000000000000', '33333333333333333333332468033333333', '33333333333333333333333333333', '00000000000000000', '3333333333333333333332468033333333', '33333333333333333333332468033333333', '3333333333333333333333333333333', '000000000000000']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '6666666677', '000000001', '66246890136666677', '444444444444444444444444444444444444444444444444444444444444444444444444', '666666677']], [['2466', '2426', '2462426890136', '123', '456', '789', '246', '802', '246']], [['2466', '0', '456', '789', '246', '789', '802', '2466', '555555511111111111111111111111111555', '789']], [['550000000015', '99', '8888', '55555', '55555', '55555', '99']], [['11111', '4444444444444444444444444444444', '555555555555555555555555', '111111', '33333333333333', '33333333333333', '555555555555555555555555', '11111']], [['24689013', '24689013579', '2468902463333333333333313579', '2264646896013579', '24689013579']], [['1112133010011', '10100000001', '11010011', '10001100', '111111111', '111111111']], [['9999999999999999999999999', '1111111111111111111111111', '8888', '1112133010011', '333333333333333333333333333333']], [['11010011', '4444444444444444444444444444444', '10001100', '11111111', '355555555555555555555555553333333333333', '33333333333333', '11010011', '33333333333333', '33333333333333']], [['2468', '468', '0', '3579', '3579', '24633333333333333', '33579', '8789', '3579', '3579', '3579']], [['11111', '555555555555555555555555', '111111', '33333333333333', '33333333333333', '33333333333333']], [['44', '0', '6000000000000000', '2', '4', '6', '8', '22', '000', '6', '6']], [['1001010101', '11010011', '78', '10001100', '44444444444444444444444444444135794444444444444444444444444']], [['24689213', '13579', '2468901352463333333333333379', '242689013', '13579']], [['1112133010011', '10100000001', '333333333333333333333324680333333', '10001100', '111111111', '111111111']], [['101010011', '1112133010011', '1010000000001', '11010011', '11112468901311111']], [['0', '6000000000000000', '2', '4', '6', '8', '88', '22', '000']], [['11111', '3579', '5555555555555555555555555', '111111', '33333333333333', '33333333333333']], [['555555511111111111111111111111111555', '55555551111124111111111111111111111555', '99', '8888', '5524666246890136666677555', '555555511111111111111111111111111555']], [['2466', '00', '456', '789', '78', '246', '789', '860000000000000002', '2466', '2466']], [['333333333333333333333333333333', '222222200', '666666677', '000000001', '000000001', '333333333333333333333333333333']], [['44444444444444444444444444444', '11111', '555555555555555555555555', '555555555555555555555555', '44444444444444444444444444444135794444444444444444444444444', '44444444444444444444444444444135794444444444444444444444444', '555555555555555555555555']], [['1111111111111111111111111', '000000000000000', '33333333333333333333333333333', '1111111111111111111111111', '33333333333333333333333333333']], [['11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '444444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '44444444444444444444444444444444444444444444444444444444444444']], [['1111111111111111111111111', '3333333333333333333332468033333333', '33333333333333333333333333333', '1111111111111111111111111', '1111111111111111111111111']], [['9999999999999999999999999', '1111111111111111111111111', '8888', '1111111111010011', '33333333333333333333333333333', '3333333333333333333332468033333333', '8888']], [['000000001', '222222200', '66246890136666677', '44444444', '22222222222', '666666677', '0000033333333333333333333324680333000000001333330001', '666666677', '000000001']], [['24633333333333333', '99', '333333333333333', '8888', '111010011', '55555', '99']], [['11111', '44444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '444444444444444444444444444444444444444444444444444444444444444', '555555555555555555555555', '44444444444444444444444444444444444444444444444444444444444444', '44444444444444444444444444444444444444444444444444444444444444', '44444444444444444444444444444444444444444444444444444444444444']], [['11111111111111111111', '000000000000000', '3333333333333333333332468033333333', '33333333333333333333333333333', '1111111111111111111111111', '11111111111111111111111111', '33333333333333333333333333333']], [['000000001', '2462', '222222200', '66246890136666677', '6667', '444444444', '66697', '666666677', '000000001']], [['9999999999999999999999999', '1111111111111111111111111', '11111111111111111111111111', '0000000000000', '33333333333333333333333333333', '3333333333333333333333333333333', '333333333333333333333333333333']], [['1111111111111111111111111', '0000000000000000', '33333333333333333333333333333', '3333333333333333333332468033333333', '33333333333333333333333', '0000000000000000']], [['0', '24628', '0000', '6000000000000000', '2', '4', '6', '8', '22', '000']], [['123', '456', '2468901352463333333333333379', '246', '802', '24689013524633333333333333379']], [['2468', '468', '0', '35779', '33333333333333333333333333333', '3579', '24633333333333333', '3579', '78222222222229', '24', '3579']], [['12000033333333333333333333333333333333333333333324680333333333333333333246000000000003', '456', '3579', '78222222222229', '246', '22333333333333333333333333333332222200', '3333334444444433333333333333333333333']], [['2466', '0', '456', '789', '246', '789', '8002']], [['000000001', '444444444444444444444444444444444444444444444444444444444444444444444444', '222222200', '662468901366766677', '666666677', '666666677', '000000001', '22222266246890136666677200', '44444444444444444444444444444444444444444444444444444444444444', '444444444444444444444444444444444444444444444444444444444444444', '666666677']], [['1223', '222222200', '44444444499', '4', '666666677']], [['24689013', '24689013579', '44444444', '24689013579']], [['11111111111111111111', '99999999999999999999999999', '1111111111111111111111111', '000000000000000', '33333333333333333333333333333']], [['1010000000001', '010011', '10001100', '11111111', '000000024601', '11010011']], [['9999999999999999999999999', '1111111111111111111111111', '10100000001', '333333333333333333333333333333', '1111111111111111111111111']], [['2466', '0', '456', '789', '78', '246', '789', '245555555111111111111111111111111115556', '802', '2466']], [['2466', '2461010000001', '1223', '789', '24666246890136666677', '3333333333333333333332468033333333', '246']], [['123', '2462', '456', '789', '246', '802', '789']]]\n    results = [['the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.'], [], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 10n the str10ng 10 of the 10nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 41n the str41ng 41 of the 41nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 41n the str41ng 41 of the 41nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 27n the str27ng 27 of the 27nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 34n the str34ng 34 of the 34nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 34n the str34ng 34 of the 34nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 27n the str27ng 27 of the 27nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 41n the str41ng 41 of the 41nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 10n the str10ng 10 of the 10nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 10n the str10ng 10 of the 10nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 23n the str23ng 23 of the 23nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 46n the str46ng 46 of the 46nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 16n the str16ng 16 of the 16nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 28n the str28ng 28 of the 28nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 52n the str52ng 52 of the 52nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 10n the str10ng 10 of the 10nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 41n the str41ng 41 of the 41nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 38n the str38ng 38 of the 38nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 11n the str11ng 11 of the 11nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 19n the str19ng 19 of the 19nput.', 'the number of odd elements 22n the str22ng 22 of the 22nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 13n the str13ng 13 of the 13nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 7n the str7ng 7 of the 7nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 28n the str28ng 28 of the 28nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 23n the str23ng 23 of the 23nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 62n the str62ng 62 of the 62nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 62n the str62ng 62 of the 62nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 55n the str55ng 55 of the 55nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 33n the str33ng 33 of the 33nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 28n the str28ng 28 of the 28nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 60n the str60ng 60 of the 60nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 39n the str39ng 39 of the 39nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 62n the str62ng 62 of the 62nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 13n the str13ng 13 of the 13nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 39n the str39ng 39 of the 39nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 53n the str53ng 53 of the 53nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 17n the str17ng 17 of the 17nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 55n the str55ng 55 of the 55nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 62n the str62ng 62 of the 62nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 36n the str36ng 36 of the 36nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 7n the str7ng 7 of the 7nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'], ['the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 44n the str44ng 44 of the 44nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 18n the str18ng 18 of the 18nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 36n the str36ng 36 of the 36nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 39n the str39ng 39 of the 39nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 28n the str28ng 28 of the 28nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 9n the str9ng 9 of the 9nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 12n the str12ng 12 of the 12nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.'], ['the number of odd elements 36n the str36ng 36 of the 36nput.', 'the number of odd elements 36n the str36ng 36 of the 36nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 10n the str10ng 10 of the 10nput.', 'the number of odd elements 36n the str36ng 36 of the 36nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 13n the str13ng 13 of the 13nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 15n the str15ng 15 of the 15nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 24n the str24ng 24 of the 24nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 31n the str31ng 31 of the 31nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 23n the str23ng 23 of the 23nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 21n the str21ng 21 of the 21nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 14n the str14ng 14 of the 14nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.'], ['the number of odd elements 62n the str62ng 62 of the 62nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 4n the str4ng 4 of the 4nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 6n the str6ng 6 of the 6nput.'], ['the number of odd elements 20n the str20ng 20 of the 20nput.', 'the number of odd elements 26n the str26ng 26 of the 26nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.'], ['the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.'], ['the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 30n the str30ng 30 of the 30nput.', 'the number of odd elements 25n the str25ng 25 of the 25nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 36n the str36ng 36 of the 36nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 5n the str5ng 5 of the 5nput.', 'the number of odd elements 29n the str29ng 29 of the 29nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.'], ['the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 0n the str0ng 0 of the 0nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.']]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/114", "prompt": "\ndef minSubArraySum(nums):\n    \n\n\n    if all(x >= 0 for x in nums): return min(nums)\n    s, ans = 0, 0\n    for x in nums:\n        s += x\n        ans = min(ans, s)\n        if s >= 0: s = 0\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef minSubArraySum(nums):\n    \n\n\n    if all(x >= 0 for x in nums): return min(nums)\n    s, ans = 0, 0\n    for x in nums:\n        s += x\n        ans = min(ans, s)\n        if s >= 0: s = 0\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef minSubArraySum(nums):\n    \n\n\n    if all(x >= 0 for x in nums): return min(nums)\n    s, ans = 0, 0\n    for x in nums:\n        s += x\n        ans = min(ans, s)\n        if s >= 0: s = 0\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef minSubArraySum(nums):\n    # Inefficiently check if all elements are non-negative\n    all_non_negative = True\n    for x in nums:\n        if x < 0:\n            all_non_negative = False\n            break\n    if all_non_negative:\n        # Inefficiently find the minimum by sorting\n        sorted_nums = sorted(nums)\n        return sorted_nums[0]\n\n    s, ans = 0, 0\n    for x in nums:\n        # Inefficiently add zero to each element\n        s += (x + 0)\n        # Inefficiently calculate the minimum by comparing twice\n        temp_min = min(ans, s)\n        ans = min(ans, temp_min)\n        # Inefficiently check if s is non-negative\n        if s >= 0:\n            s = 0\n    return ans\n<code_end>\n```", "modification": "\ndef minSubArraySum(nums):\n    \n    all_non_negative = True\n    for x in nums:\n        if x < 0:\n            all_non_negative = False\n            break\n    if all_non_negative:\n        \n        sorted_nums = sorted(nums)\n        return sorted_nums[0]\n\n    s, ans = 0, 0\n    for x in nums:\n        \n        s += (x + 0)\n        \n        temp_min = min(ans, s)\n        ans = min(ans, temp_min)\n        \n        if s >= 0:\n            s = 0\n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[2, 3, 4, 1, 2, 4]], [[-1, -2, -3]], [[-1, -2, -3, 2, -10]], [[-9999999999999999]], [[0, 10, 20, 1000000]], [[-1, -2, -3, 10, -5]], [[100, -1, -2, -3, 10, -5]], [[10, 11, 13, 8, 3, 4]], [[100, -33, 32, -1, 0, -2]], [[-10]], [[7]], [[1, -1]], [[2, 4, -1, 3, 5, -4, 1, -2]], [[4, -4, -5, -3, 5, -1, 6]], [[-10, 5, 3, -2, 0, 4, -8]], [[2, 1, -3, 4, -1, 2, 1, -5, 4]], [[-2, -5, -8, -3, -1, -2, -4]], [[3, 2, -5, 4, 1, -3, 2, -2, 5]], [[1, 2, -3, -4, 7, -6, 8, -10]], [[-1, -2, -3, -4]], [[-2, 3, -1, -4, 6, -7, 8, -5]], [[-10, -15, -20, -25, -30]], [[-2, -1, -4, 6, -7, 8, -5]], [[-2, -1, -4, 6, -7, 8, -4, -5]], [[-5, 4, -4, -5, -3, 5, -1, 6]], [[1, 2, -3, -4, 7, -6, 8, -10, -6]], [[-2, 1, -4, 6, -7, -4, -5]], [[-2, 3, -1, -4, -2, 6, 8, -5, 8]], [[-2, 1, -4, 6, -7, -4, -5, 1]], [[-2, -5, -8, -3, -1, 5, -4]], [[3, 2, -5, 4, 2, -3, 2, -2, 5]], [[3, 2, -5, 4, 2, -3, 2, 5]], [[-10, 4, 5, 3, -2, 0, 4, -8]], [[-5, -8, -3, -1, -2, -4, 6, -1]], [[-2, 1, 2, 6, -7, -3, -5, 1, -2]], [[-2, -5, -8, -3, -1, -2, -4, -3]], [[-5, 4, -3, -5, -3, 5, -1, 6]], [[-2, -1, -4, 6, 7, -7, 8, -6]], [[-2, 1, -4, 6, -7, -4, -5, 1, -4]], [[1, 2, -3, 7, -6, 8, -10]], [[-5, -8, -3, -2, -4, 6, -1]], [[-2, 3, -1, -4, 6, 8, -5, -2]], [[-6, -5, 4, -3, -5, -3, 5, -1, 6]], [[1, 2, 7, -6, 8]], [[-5, 2, 4, -1, 3, 3, 5, -4, 1, -2]], [[1, -3, 4, -1, 2, 1, -5, 4]], [[-2, -1, -4, 8, -5, -2, 6]], [[-3, -2, -3, -4]], [[-2, -5, 8, -8, -3, -1, -2, 0, -4]], [[-2, -5, 8, -8, -3, -1, -2, -2, -4]], [[-2, 1, -4, -7, -4, -5, 1, -4]], [[-8, -3, -2, -4, 6, -1]], [[3, 2, -5, 4, 2, -3, 2, -1]], [[-5, -1, -2, -4, 6, -1, -1]], [[1, 2, -6, 8]], [[-5, -1, -2, -2, -4, 6, -1, -1]], [[-5, -8, -3, -2, -3, 6, -1]], [[-5, -1, 3, -2, -4, 6, -1, -1]], [[3, 2, -5, 4, 1, -3, 1, -2, 5]], [[-2, 1, -4, 6, -7, 0, -4, -5, 1]], [[2, 1, -3, -1, 2, 1, -5, 5]], [[-2, -5, -8, -3, -1, -2, -4, -10, -3]], [[-5, 4, -4, -5, -3, 5, -30, 6]], [[-15, 2, -3, -4, 7, 8, -10]], [[-5, -4, -1, -2, -4, 6, -1, -1]], [[-2, 1, -4, 6, -10, 0, -4, -5, 1]], [[-2, 3, -4, -2, 6, 8, -5, 9, -1]], [[-3, -4]], [[-2, 1, -4, 6, -7, 2, -4, -5, 1, -4, -4]], [[-2, 1, 2, 6, -7, -4, -3, -5, 1, -2, 2]], [[-3, -2, -3, 4, -4]], [[3, 2, -5, 4, 2, -3, 2, 5, 4]], [[-5, -8, -3, -1, -2, -4, -1]], [[2, 1, -3, -1, 2, 1, -5, 5, -1]], [[2, 1, 2, -3, -1, 1, -5, 5]], [[-5, -1, -2, -4, 6, 9, -1]], [[-6, 6, 5, 3, -2, 0, 4, -8]], [[-5, 4, -30, -3, 5, -1, 6]], [[-8, -3, -2, -4, 6, -1, -8]], [[-2, 1, 2, 6, -7, -4, -3, -5, 1, -2, 2, 1]], [[-2, -4, 6, -7, -25, -5, 1, -4]], [[-6, 6, 5, 3, -2, -3, 0, 4, 3, -8]], [[1, 2, -3, 7, -6, 8, -10, 1]], [[-2, -5, -8, -3, -1, -2, -4, -4]], [[-5, -8, -3, -2, -3, 6, -3, -1]], [[0, -3, -2, -4, 6, -1, -8, -8]], [[1, 2, -3, -4, 7, -6, 8, -10, -6, -6]], [[-2, -1, -4, 6, -7, 8, -5, -2]], [[0, -7, -2, -3, -4]], [[1, -4, 6, -7, -4, -5]], [[-3, -5, -8, -3, -2, -4, -10, -3]], [[5, -1, -2, -2, -4, 6, -1, -1]], [[2, 4, -1, 3, 5, -4, 1, 5, -2]], [[3, 2, -5, 3, 2, -3, 2, -1]], [[2, 1, 2, -3, -1, 1, -5, 5, 5]], [[-2, 3, -4, -2, 6, 8, -5, 9, -1, -2]], [[-15, 2, -3, -4, 7, 8, -10, -10, 2]], [[-2, 3, -1, -4, 6, 8, -5, -2, 3]], [[-5, -1, -2, -4, 6, -1, -1, -1]], [[2, -5, 4, -1, 3, 5, -4, 1, -2]], [[-3, -5, -8, -3, -2, -4, -10]], [[-2, 3, -4, 6, -5, 9, -6, -2, 3]], [[3, 2, -5, 4, 0, 1, -3, 2, -2, 5]], [[-3, -5, -8, -3, -2, -4, -3]], [[-7, -8, -3, -2, -4, 6, -1, -8, -3]], [[-2, 3, -2, -4, 6, -7, 8, -5]], [[1, 3, 2, -3, 7, -6, 8, -10, 1, 1]], [[-1, -5, -1, -2, -2, -4, 6, -1, -1]], [[-5, -4, -1, -2, -4, 6, -1, -1, -4]], [[-5, -4, -1, -2, -4, 6, -3, -1, -1]], [[-2, 3, -2, -4, 6, -7, 8, -5, -7]], [[-5, 2, 4, -1, 3, 3, 5, -15, -4, 1, -2]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, 2, -1]], [[-10, 20, -30, 40, -50, 60, -70, 80, -90, 100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10]], [[10, -20, 30, -40, 50, -60, 70, -80, 90, -100]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1]], [[10, -20, 30, -40, 50, -60, 70, -80, 60, 90, -100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-39, 10, -20, 30, -40, 50, -60, -80, 60, 90, -100]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100]], [[-8, -1, 2, -3, 4, -5, 6, -7, 8, -9, 10]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 9, -50, 100, 50]], [[-100, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 2, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -39]], [[-100, 50, -50, 100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, -100000, 50, -51, 100]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, 1, 2, -1]], [[-100, 50, -50, 100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100, -100]], [[-1, -8, 2, -3, 4, -5, 6, -7, 8, -9, 10]], [[1, -2, 3, -4, 5, -6, 7, -100, -9, 9, -10]], [[-100, 50, -50, 100, 50, -50, 100, -100, -50, 100, -3, -100, 50, -50, 70, -100, 50, -51, 100, -100]], [[-1, -8, 2, -3, 4, -5, -7, 8, -9, 10]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, 1, 6, 2, -1, -6]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, -50, 100, -100, -100000, 50, -51, 100]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -4]], [[1, -1, 1, -1, -1, 1, -1, 1, -9, -1, 1, -1]], [[1, -2, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-39, 10, -20, 30, -40, 50, -60, -80, 4, 90, -100]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, 4, 1, 6, 2, -1, -6]], [[-1, 2, -3, 4, 6, -7, 8, -9, 10]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, -50, 100, -100, -100000, -51, 100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, 1, -1, 1, -1]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100, 100]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 100]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, 1, 2, 70, -1]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 7]], [[1, -2, 3, -5, 5, -6, 7, -8, 9, 4, 2, 2, 70, -1]], [[1, -2, 3, -4, 5, -6, 7, -6, 9, 4, 1, 6, 2, -1, -6]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, 0, 1, -1, 1, -1]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, -50, 100, -100, -100000, -51, 100, 50]], [[1, -2, -4, 5, -6, 8, -8, 9, 4, -3, 2, -1]], [[1, -2, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 49, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -100, -100000, 50, -51, 100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[1, -2, 3, -4, 5, -6, -99, 7, -100, -9, 9, -10, 7]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -3, 2, -1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, -50, 100, -100, -100000, -51]], [[-1, -2, 3, -4, 5, -6, 7, -8, 4, 4, 1, 6, 2, -1, -6]], [[-1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[-100, 50, -50, 100, -100, -100000, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, -7]], [[1, -2, 3, -4, 5, -6, 7, -90, -6, 9, 4, 1, 6, 2, -1, -6]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, 1, -1, 1, -1, 1]], [[1, -2, 3, -4, 6, 5, -6, 7, -8, 9, 4, 1, 2, 70, -1]], [[10, -20, 30, -40, 50, 1, 70, -80, 60, 90, -100]], [[1, -2, 3, -4, 5, -6, -8, 9, -2, -10]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10, -10]], [[8, -2, 3, -4, 5, -6, 7, -90, -6, 9, 4, 1, 6, 2, -1, -6]], [[1, -2, 3, -4, 4, 5, -6, 7, -8, 9, -10, -4]], [[100000, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, 2, -1]], [[1, -2, -4, -6, 8, -8, 9, 4, -3, 2, -1]], [[-100, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100]], [[1, -2, 3, -30, 5, -6, 7, -8, 9, 4, 4, 1, 6, 2, -1, -6]], [[-1, -8, 2, 4, 4, -5, 6, -7, 8, -9, 10]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -100, -100000, 50, -51, 100, 50]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 10, 4, 1, 2, 70, -1]], [[-10, -9, -8, -7, -6, -5, -4, -3, -1]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, -100, -100000, 50, -51, 100]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000, -100000]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[-100, 50, -50, 100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100, -100, 100]], [[3, -2, 3, -4, 5, -6, -8, 9, -2, -10]], [[-1, -8, 2, -3, 4, -5, 6, 5, -4, -7, -8, 8, -9, 10]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10, -8]], [[-100, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10, 3]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 49999, 50000, -100000, 100000, -50000, 100, 50000, -100000, 100000, -50000, 50000, -100000, -100000, -100000]], [[-1, -8, 2, 4, 4, -5, 6, -7, 8, -9, 0, 10]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, 100, 99, -100, 50, -50, 100, -100, -100000, 50, -51, 100]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 100, 50]], [[-8, -1, 2, -3, 4, 6, -7, 8, -9, 10]], [[2, -2, 3, -4, 5, -6, -99, 7, -100, -9, 9, -10, 7]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, 20, -50, 100, -100, -100000, 50, -51, 101, 50]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 2, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -39, -1]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, 1, -1, 1, -1, 1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[1, -2, 3, 9, -4, 5, -6, -8, 9, -2, -10]], [[1, -2, 3, -4, 6, 5, -6, 2, 7, -8, 9, 4, 1, 2, 70, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -99999, -100000, -100000]], [[-100, 50, -50, 100, -100, -100000, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50000, -7]], [[-10, -9, 8, -7, -6, -5, -4, -3, -1, -1]], [[-1, -20, -5, 2, 4, -5, -7, 8, -9, 10]], [[10, -20, 30, -40, 50, -60, 70, -80, 60, -100]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, 50000, -100000, 100000, -50000, 50000, -100000, -100000, -100000]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 30, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, -1]], [[1, -2, 3, -4, 5, -6, 7, 4, -8, 9, 4, 1, 6, 2, -1, -6]], [[-100, -10, -50, 100, 50, -50, -100, -50, 99, -100, -50, 100, -100, -100000, 50, -51, 100, 50, -50]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, 0, 1, -1, 1, -1, 1, 1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, 1, 6, 1, -1, -6]], [[-10, -9, -8, -7, -6, -5, -7, -4, -3, -2, -1]], [[1, 3, -30, 5, -6, 7, -8, 9, 4, 4, 1, 6, 2, -1, -6]], [[-100, 50, 8, -50, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100]], [[70, -2, -4, 5, -100000, 8, -8, 9, 4, 2, -1]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -3, 2, -1, 5]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, 2, 1, -1, 1, -1, 1]], [[-1, -8, 2, -3, 4, -5, 6, -7, 8, -9, 10, 8]], [[-100, 50, -50, 100, -100, 50, -101, -50, 100, -100, 49, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, 100, 60, 99, -100, 50, -50, 100, -100, -100000, 50, -51, 100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, 60]], [[1, -2, 3, 5, -6, 7, -8, 9, 4, 4, 1, 6, 2, -1, -6]], [[1, -2, 3, -4, 5, -6, 7, 4, -8, 9, 1, 4, 1, 6, 2, -1, -6]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, 20, -50, 100, -51, -100, -100000, 50, -51, 101, 50]], [[1, -2, 3, -4, 4, 5, -6, 7, -8, 9, -10, -4, 1, 7]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, -50, 1, -1, 1, -1]], [[1, 1, -2, 1, -1, 1, -1, 1, -1, 1, -1, -40, 1, -1, 1]], [[1, -2, 1, -1, -3, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, -2, 1, -1, 1, -99, -1, 1, -1, 1, 0, 1, -1]], [[-1, -2, 3, -4, 5, -6, 7, -8, 4, 4, 1, 6, 2, -1, -6, 7]], [[-1, -8, 2, -3, 4, -5, 6, 49, -7, 8, -9, 10]], [[-100, 49, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, -50, 100, -100, -100000, -51, 100]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, 1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, -50, 1, -1, -3, 1, -1, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, -90, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000]], [[-100, -10, -50, 100, 50, -50, -100, -50, 20, -50, 100, -100, -100000, 50, -51, 101, 50]], [[1, -2, 3, -4, 5, -6, 7, -8, 0, 9, -10, -10]], [[-3, -2, 3, -4, 5, 50, 7, -8, -3, -10]], [[-100, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, 50]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, 1, -1, 1, -1, 1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 1, -1]], [[1, -2, 3, -4, 4, 5, -6, 7, -8, 10, 9, -10, -4]], [[1, -1, 1, -1, 0, 1, -1, 1, -1, -6, 1, -1, 1, -1, 1, 1, -1, 30, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, 1, 6, 1, -6]], [[-100, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100, 100]], [[-100, -10, -51, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100, 100]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 1]], [[1, -2, 3, -4, 5, -6, 7, -50000, -8, 9, 10, 4, 1, 2, 70, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50001, 100000, -50000, 50000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000, -100000]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -3, 2, -1, 5, -3]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, 100, 99, -100, 50, -50, 100, -100, -100000, 50, -51, 100, -100]], [[1, -2, 3, -5, 5, -6, 7, 5, -8, 9, 4, 2, 2, 70, -1, 5]], [[1, -2, 3, -4, 4, 5, -6, 7, 49, 10, 9, -10, -4, -6]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 10, 4, 1, 2, 70, -1, 9]], [[-100, -50000, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, 50]], [[-100, 50, 99, -50, 100, -100, -100000, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, -7]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, -50, 100, 100]], [[1, -2, 3, -4, 5, -6, 7, -90, -6, 9, 4, 1, 6, 2, -7, -1, -6]], [[2, -2, 1, -1, 1, -99, -1, 1, 1, 0, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 2, -50, 1, -1, -3, 1, -1, -1]], [[1, -2, -3, 3, -4, 5, -6, 7, -8, 9, -10, -10, -8]], [[1, -1, 1, -1, -1, -2, 1, -1, 1, -9, -1, 1, -1]], [[-3, -2, 3, -4, 5, 50, 7, -8, -50000, -10, 50, 7]], [[1, 0, 3, -4, 5, -6, 7, -8, 9, -3, 2, -1, 5, -3]], [[1, -2, 3, -4, 5, -7, 7, -8, 9, -3, 2, -1, -4]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, -50, 1, -1, 0, -3, 1, -1, -1]], [[1, 1, -2, 1, -1, 1, -1, 1, -1, -1, -40, 1, -1, 1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 49999, 50000, -100000, 100000, -50000, 100, 50000, -100000, 100000, -50000, 50000, -100000, -100000, -100000, -100000]], [[1, 99, 1, -1, -1, 1, -1, 1, -9, -1, 1, -1]], [[1, -2, 3, -4, 5, -6, 7, -50000, -8, 9, 10, 4, 1, 2, 70, -1, 7]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, -50, 1, -1, 1, -1, 1]], [[-10, -9, 8, -7, -6, -5, -4, -3, -1, -6, -1]], [[10, -20, 30, -40, 50, 1, 70, -80, 60, 90, -100, 10]], [[3, -2, 3, -4, 5, -6, -8, -1, 9, -2, 4, -10]], [[-100, -10, -50, 100, 50, -50, 100, -100, 100, 99, -100, 50, -50, 100, -100, -100000, 50, -51, 100, -100]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, 1, -1, -3, 1, -1, -1]], [[-1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-39, 10, -20, 30, -40, 50, -80, 4, 90, -100]], [[-100, 50, -50, 100, -100, 50, -50, 100, -99, 50, -50, 100, -100, 50, 100, -100, 9, -50, 50001, 100, 50]], [[-1, -8, 2, -3, 4, -5, 6, -7, 8, -1, -9, 10, 8]], [[10, -20, 30, -40, 50, 69, -80, 60, -100, 90, -100, 60]], [[100, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100, 100]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -100, -100000, 50, 30, -51, 100, 50, -50]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10, 5]], [[-100, -10, -99999, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100]], [[1, -2, 3, -4, -1, 5, -6, 7, -8, 9, -10, -10]], [[1, -2, -4, 5, -6, 7, -8, 9, 4, 1, 2, 70, -1]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 2, -1, 1, 1]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, -99, 100, 60, 99, 50, -50, 100, -100, -100000, 50, -51, 100]], [[100000, -50000, 50000, -100000, -9, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000]], [[1, -2, 3, -4, 6, 5, -6, 2, 7, -8, 9, 4, -10, 2, 70, -1]], [[1, 0, -1, 1, -1, 1, -1, 1, -100, -1, 1, -50, 1, -1, 1, -1, 1]], [[1, -2, 3, -4, 4, 5, 2, 7, 49, 10, 9, -10, -4, -6]], [[-100, 50, 99, -50, -99, 100, -100, -100000, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, -7]], [[-100, -10, -50, 100, 50, -50, 49, -100, -50, 100, -100, 50, 100, -100, -100000, -51, 100]], [[-3, -2, 3, -4, 5, 50, 7, -8, -50000, -10, 7]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, -50, 100, -100, -100000, -52, 100, 50]], [[1, -2, 3, 6, 5, -6, 7, -8, 9, -3, 2, -1, 5]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-100, -10, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100]], [[1, -1, 1, -1, 0, 1, -1, 1, -1, -6, 1, 40, -1, 1, -1, 1, 1, -1, 30, -1, -51, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-10, 1, -2, 3, -4, 5, -6, 6, -8, -1, 9, -10, -10, -10]], [[1, -2, 3, 9, -4, 5, -6, 9, -2, -10]], [[1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1]], [[-100, -39, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -100, 99, 50, -51, 100, -50]], [[1, -2, 3, 5, -6, 7, -8, 9, 4, 4, 6, 2, -1, -6]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 9, -50, 100, 50, 100, 50]], [[1, -2, 3, -4, -1, 5, -6, 7, -8, 9, -10, -10, -10]], [[1, -2, 3, -4, 5, -6, -99, 7, -100, -9, 9, -10]], [[-3, -2, 3, -4, 4, 50, 7, -8, -3, -10]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, 100, -100, -100000, -51, 100]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, 2, -1, -1]], [[1, -2, 3, 9, -4, 5, 9, -2, -10]], [[10, -20, 30, -40, 50, 69, -80, 60, -100, -100, 60]], [[-1, -8, 2, 30, 4, 4, -5, 6, -7, 8, -1, -9, 10]], [[-1, -8, 2, 4, 4, -5, 6, -7, 8, -9, 10, 4]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, 2, 1, -1, 1, -1, 1, -1, -1]], [[50, -50, 100, -100, 50, -50, 100, -99, 50, -50, 100, -100, 50, 100, -100, 9, -50, 50001, 100, 50]], [[3, -2, 3, -4, 5, -6, -8, -2, 9, -2, 4, -10, 9]], [[1, -2, -8, 1, -1, -3, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-1, 1, -1, 1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-1, -8, 2, -3, 4, -5, 6, -7, 8, -9, 10, -1]], [[1, -2, 3, -4, 5, -7, 7, -8, 9, -3, 2, -1, 6, -4]], [[-1, -8, 2, -7, -3, 4, -5, 6, 5, -4, -7, -8, 8, -9, 10]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-39, 10, -20, 30, -40, 50, -60, 4, 90, -100]], [[100000, -50000, 50000, -100000, 100000, -50000, 50001, 100000, -50000, 50000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000, -100000]], [[0, -2, 3, -4, 4, 5, -6, 7, 49, 10, 9, -10, -4, -6]], [[-1, -8, -9, 2, -3, 4, -5, 6, -7, 8, -9, 10]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10, -10, -4, 7]], [[1, 99, 1, -1, 1, -1, 1, -7, -9, -1, 1, -1]], [[1, -2, 1, -1, 1, -1, -1, 1, -1, 1, -1]], [[0, -2, 3, -4, 4, 5, -6, 7, 49, 10, 9, -10, -4, -6, 4]], [[1, -2, -2, 3, -4, 5, -6, 7, -8, 9, -10, 7, -2, 7, 7]], [[-1, -8, 2, -3, 4, -5, 6, 5, -4, -7, -8, 8, 10, 8]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, 101, 99, -100, 100, 50, -50, 100, -100, -100000, 50, -51, 100, -100, -50]], [[1, 50001, -2, 3, -4, 5, -6, -99, 7, -100, -9, 9, -10]], [[-1, -2, -4, 5, -6, 7, 1, 4, 4, 1, 6, 2, -1, -6, 7]], [[1, -2, 1, -1, 1, -1, 1, -1, 1, -1, 20, 1, -1]], [[1, -1, 1, -1, 1, -20, -1, 1, -100, -1, 1, 0, 1, -1, 1, -1]], [[1, -2, -3, 3, 0, -7, -4, 5, -6, 7, -8, 10, -10, -10, -8]], [[1, 50001, -2, 3, -4, 5, -6, 7, -8, 9, -10, 7, -2, 7]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 30, -1, 1, -1, 1, -1, 1, 1, -1, 1, 1, -1, 1, -1, 1]], [[1, -2, 3, -4, 5, -6, 7, -90, -6, 2, 9, 4, 1, 6, 2, -7, -1, -6]], [[1, -2, 3, -4, -6, 7, -50000, -8, 9, 10, 4, 1, 2, 70, -1, 7]], [[-10, -9, 8, -7, -6, -5, -4, -3, -1, -6, -1, -9]], [[1, -2, -8, 0, 1, -1, -3, -1, 1, -1, 1, -1, 1, -1, 1, -1, 2, 1]], [[1, -1, 1, 1, -1, 1, -100, -1, 1, -50, 1, -1, -3, 1, -1, -1]], [[-100, -39, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -50]], [[0, -2, 3, -4, 4, 5, -6, 7, 99, 10, 9, -10, -4, -6, 4]], [[1, -2, -3, 3, 0, -7, -4, 5, -6, 6, -8, 10, -10, -10, -8]], [[1, -1, 1, -1, 1, -1, -20, -100, -1, 1, -50, 1, -1, 1, -1, 1]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -100, -100000, 50, 30, -51, 100, 50, -50, -100]], [[1, 1, -2, 1, -1, 1, -1, 1, -1, -1, -40, 1, 1, 1]], [[1, -2, 3, -4, 5, -6, -3, -8, 9, -10, -10, -8, -8]], [[1, -1, 1, -1, 1, 9, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -8, 1, 1]], [[1, -1, 1, -1, -99, 0, 1, -1, 1, -1, -6, 1, -2, 1, -1, 1, 1, -80, 30, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[100000, -50000, 50000, -100001, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, 50000, -100000, 100000, -50000, 50000, -100000, -100000, -100000]], [[10, -20, 30, -40, 50, 1, 70, -80, 60, 90, -100, 10, -20]], [[100, -10, -50, 100, 50, -50, -100, 100, -100, 49, -50, 100, -100, -100000, -51, 100, -100, 100]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -50]], [[0, -2, 3, -4, 4, 5, -6, 7, 49, 10, 9, -10, -4, -6, 10]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, -50, 1, -1, 1, -1, 1]], [[1, -2, 3, -4, 4, 5, -6, 7, -8, 9, -10, -4, 3]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -40, -100000, 50, 30, -51, 100, 50, -50, -100, -50]], [[1, -2, 3, -4, -6, 7, -50000, -8, 9, 10, 70, 4, 1, 2, 70, -1, 7]], [[-100, -10, -50, 100, 50, -50, -100, -50, 99, -100, -50, 100, -100, -100000, 50, -51, 100, 50, -50, -50]], [[-1, 1, -1, 1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[1, -2, 3, -4, -6, 7, -8, 9, 4, 4, 1, 6, 5, 2, -1, -6]], [[1, -2, 3, 5, -6, 7, 9, 4, 4, 6, 2, -1, -6]], [[-3, -2, 3, -4, 4, 50, 7, -8, 50, -3, -10]], [[-3, -2, 3, -4, -4, 5, 50, 7, -8, -50000, -10, 7]], [[1, -2, 3, -4, 5, -6, 7, -90, -7, -6, 9, 4, 1, 6, 2, -7, -1, -6, -6]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, -1]], [[3, -2, 3, -4, 5, -6, -8, -1, -2, 4]], [[10, -20, 30, -40, 50, 1, 70, -80, 60, 90, -100, 10, -20, 70]], [[1, -1, 1, -1, -1, -2, 1, -1, 1, -1, 1, -1]], [[-3, -2, -4, 4, 50, 7, -8, 50, -3, -10, -99999]], [[1, -2, 3, -9, -4, -1, 5, -6, 7, -8, 9, -10, -10, -10]], [[-100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100, 100, -100]], [[1, -2, 3, -5, 5, -6, 7, 5, -8, 9, 4, 2, 70, -1, 5, -2]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100000, 100, -100, -100000, 50, -51, 100]], [[-100, -10, -50, 100, 50, -50, 100, -100, 100, 99, -100, 50, -50, 100, 9, -100, -100000, 50, -51, 100, -100]], [[1, -1, 1, -1, 0, 1, -1, 1, -1, -6, 1, 40, 1, -1, 1, 1, -1, 30, -1, -51, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[1, -2, 3, -5, 5, -6, 7, 5, 9, 4, 2, 2, 70, -1, 5]], [[-8, -1, 2, -3, 4, 6, -7, 8, -9]], [[-100, 50, 20, 99, -50, -99, 100, -100, -100000, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, -7, -100]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, 0, -1, 0, 1, -1, 1, 1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 2, 1, -1]], [[1, -2, 3, -4, 5, -6, 7, -90, -6, 2, 9, 4, 1, 6, 2, -7, -1, -6, 6]], [[1, -2, 3, 9, 101, 5, -6, 9, -2, -10]], [[1, 1, -1, 1, -99, -1, 1, -1, 1, 0, 1, -1]], [[10, -20, -40, 50, -60, 70, -80, 60, 90, -100]], [[-10, -50, 100, 50, -50, -100, 100, -100, 49, -50, 100, -100, -100000, -51, 100, -100, 100]], [[1, -2, 3, -4, 4, -6, 7, 49, 10, 9, -10, -4, -6]], [[-10, -9, -8, -7, -6, -5, -4, -3, -1, -1]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100, 50, 100]], [[1, -1, 1, -1, 1, 9, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[100000, -50000, 50000, -100000, -9, -50000, 50000, -100000, 100000, -50000, 50000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000]], [[-100, -10, -99999, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, -100]], [[-10, -50, 100, 50, -50, -100, 101, 100, -100, 49, -50, 100, -100, -100000, -51, 100, -100, 100]], [[-50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 49999, 50000, -100000, 100000, -50000, 100, 50000, -100000, -50000, 50000, -100000, -100000, -100000, -100000]], [[1, -2, 3, -4, 5, -6, -99, 7, -100, 9, -10, 7]], [[-1, 1, -2, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[100, -50, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100, 100]], [[0, -2, 3, -4, 4, -5, 5, -6, 7, 49, 99, 9, -10, -4, -6, 4]], [[-20, 30, -40, 50, 1, 70, -80, 50, 90, 10, -20]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 30, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 30, -1, 1, -1, 1, -1, 1, 1, -39, 1, 1, -1, 1, -1, 1]], [[10, -20, 30, -40, 50, 1, 101, 70, -80, 3, 90, -100, 50]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 1, -1]], [[50, -100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -100, -100000, 50, -51, 100, 50]], [[-100, -39, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 100]], [[-3, -2, 3, -4, 60, 5, 50, 7, -8, -3, -10, -8]], [[1, -1, 1, -1, -99, 0, 1, 1, -1, -6, 1, -2, 1, -1, 1, 1, -80, 30, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[True, True, True, False, True, True]], [[1, -2, 3, -30, 5, -6, -8, 9, 4, 4, 1, 6, 2, -1, -6]], [[1, -2, 3, 5, -6, 7, 9, 4, 4, -7, 6, 2, -1, -6]], [[1, -2, 3, -6, 7, -8, 9, 4, 4, 1, 6, 7, 2, -1, -6]], [[99, 1, -1, -1, 1, -1, 1, -9, -1, -1]], [[1, -2, 3, -5, 5, -6, 7, -8, 9, 4, 2, 2, 70, -1, 5, -5]], [[1, -2, 3, -9, -4, -1, 5, -6, 7, -8, 9, -10, 20, -10, 2, -10]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 99999, 100000, -50000, -90, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000]], [[-100, -10, -50, 100, 50, -50, -50, 100, -100, 50, -50, 100, -100, -100000, -51, 100, 50, 100]], [[-100, 50, -50, 100, 50, -99999, -50, 100, -100, -50, 100, -2, -100, 50, -50, 70, -100, 50, 100, -100]], [[1, -1, -1, 1, 1, -1, 1, 1, -1, 1, 1]], [[-10, -9, -8, -7, -6, -5, -4, -3, -1, -9]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 50, -50, 100, -100, -50, 100, 100]], [[1, -2, 3, -4, 5, -6, -90, -6, 9, 4, 1, 6, 2, -7, -1, -6]], [[-100, -10, -50, 100, 50, -50, 100, -50, 100, -100, 50, -50, 100000, 100, -100, -100000, 50, -51, 100]], [[1, -2, -4, 5, -6, -8, 9, -10, -10, 5]], [[10, -20, 30, -40, 50, 1, 70, -80, 60, 90, -100, 10, -20, 70, 70]], [[100000, -2, 3, 7, 5, -6, 8, 90, -8, 9, 4, -3, 2, -1, 9]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, -50, 1, -1, 50001, -1]], [[1, -1, 1, -1, 0, 1, -1, 1, -1, -6, 1, 40, 1, -1, 1, 1, -1, 30, -1, -51, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[-100, 50, -50, 101, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, 80, 100]], [[-100, 50, -50, 100, 50, -50, 100, -100, -50, 100, -3, -100, 50, -50, 70, -100, 50, -51, 100, -100, -100]], [[1, -1, 1, -1, -1, -2, 1, -1, 1, -9, -1, 1, -1, -2]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, 1, -1, 1, -1, -39, 1, -1, 1, -1, 1]], [[-39, 10, -20, 30, 50, -60, -3, 90, -100]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -100, 50, 100, -100, -100000, -51, 100]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, 1, -1, 1, -1, 1, 30, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 1, -1]], [[1, 50001, -2, 3, -4, 5, -6, -99, 7, -100, -9, 9, -10, 50001]], [[1, -2, 3, -4, 5, -6, 7, -90, -6, 2, 9, 4, 1, 6, 2, -101, -1, -6]], [[1, -2, 3, -4, 5, 9, -2, -10]], [[10, -20, 30, -40, 50, 70, -7, 60, 90, -100, 10]], [[-1, 2, -3, 4, -6, 6, -7, 8, -9, 10]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 1, -50, 1, -1, 0, 50001, -1]], [[-3, -2, 3, -4, 5, 50, 7, -8, -10, 7]], [[-100, 50, -50, 100, -100, -100000, -50, 101, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, -7]], [[1, -2, 3, -4, 5, -7, 7, -8, 9, -3, 2, -1, 6, -4, 1]], [[-100, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, 100]], [[-1, 1, 1, -1, 1, -1, 1, -1, -1, 1, -1, -1]], [[1, 99, 1, -1, 100, -1, 1, -7, -9, -1, 1, -1]], [[-80, 1, -2, 3, -4, 5, -6, 7, -50000, -8, 9, 10, 4, 1, 2, 70, -99999, 7]], [[100000, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, -1, 4]], [[-1, -8, 2, 4, -5, 6, 5, -4, -7, 8, 10, 8]], [[-3, -2, 3, -4, 5, 50, 7, -8, -50000, -4, -10, 7, -3]], [[-100, 9, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100, -50]], [[1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 30, -1, 1, -1, 1, -1, 1, 1, -39, -2, 1, 1, -1, 1, -1, 1]], [[10, -20, 30, -40, 1, 70, -80, 60, 90, -100]], [[-30, -100, -39, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 100]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, 1, -1, 1, -1, 1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, -1]], [[3, -4, 5, -6, 7, -8, 0, 9, -10, -10]], [[10, -20, 30, -40, 11, 50, -60, 70, -80, 90, -100]], [[99, -1, -39, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 100, -100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 2, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -39]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, 1, -1, 1, -1, 1, 30, -1, 1, 1, -1, 1, -1, -60, 1, -1, 1, 1, -1, 1, 1, -1]], [[-1, -8, 2, 4, 4, -5, 6, -7, 8, 8, -9, 0, 10]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -50, 100, 100]], [[-1, -2, -4, 5, -6, 7, 1, -100, 4, 4, 1, 6, 2, -1, -6, 7]], [[1, -2, 3, -4, 4, -6, 7, 49, 10, 9, -10, -4, -6, 49]], [[1, -2, -2, 3, 5, -6, 7, -8, 9, -10, 7, -2, 7, 7]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, 4, 1, 6, 1, -7, -6]], [[0, -1, 1, -1, 1, -1, 1, -100, -1, 2, -50, 1, -1, -3, -1, -50]], [[-3, -2, 3, -4, 4, 50, 7, -8, 7, -10]], [[10, -20, 30, -40, 50, 1, -80, 60, 90, -100, 10, -20, 70, 70]], [[1, -1, 1, -1, 1, -1, 1, -50, -1, 1, -50, 1, -1, 0, 1, -1, -1]], [[-20, 30, -40, 50, 1, 70, -80, 50, 90, 10, 3, -20]], [[1, -2, 1, -1, 1, -1, -1, 1, -1, 1, -1, -2]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, -1, -1, 1, -1, 1, -1, 1, -1, 1, 60, 1]], [[-100, 50, -100, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, -50, 100, 100]], [[3, -2, 3, -4, 5, -6, -8, -1, -2, 4, 4]], [[61, 10, -20, 30, -40, 50, 70, -7, 60, 90, -100, 10]], [[1, 69, 3, -4, 6, 5, -6, 2, 7, -8, 9, 4, 1, 2, 70, -50000]], [[-10, -9, -8, -9, -7, -6, -5, -4, -3, -2, -1]], [[100, -10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100, 100, -51]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 30, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[1, -2, 1, -1, -1, 1, -1, -99999, 1, -1, 1, -1, 1, -1]], [[-1, -8, 2, -3, 4, -5, 6, 5, -4, -7, 69, -8, 8, -9, 10, 10]], [[1, -2, 3, -4, 6, 5, -6, 7, -8, 9, 4, 1, 2, 70, -1, -1]], [[10, -20, 30, -40, 50, 69, -80, 60, -100, -100, 60, -100]], [[-39, -2, 3, -4, 5, -6, 7, -90, -6, 9, 4, 1, 6, 2, -1, -6]], [[1, -1, -1, -1, 1, -1, 1, -9, -1, 1, -1]], [[-10, -50, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, 50, -51, 100, -100]], [[1, -2, 3, -4, 5, -6, 7, -8, 0, 9, -10, -10, -6]], [[-1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 49999, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[-100, -10, -50, 100, 50, -50, 100, -100, 100, 99, -100, 50, -50, 100, -100, -100000, 50, -51, 100, -100, 100]], [[-100, 50, 99, -50, -99, 100, -100, -100000, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, -7, -100, -50, -7]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10, 5, -2]], [[-101, -10, 100, 50, -50, 49, -100, -50, 100, -100, 50, 100, -100, -100000, -51, 100, 100, 100]], [[1, -2, 3, -4, 5, -6, -99, -100, 9, 7]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -2, 1, -1, 1, 1, 30, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, 1, -1]], [[99999, 3, -2, 3, -4, 5, -6, -8, 9, -2, -10]], [[-1, 2, -3, 4, 4, -6, 6, -7, 8, -9, 10]], [[-10, -50, 100, 50, -50, -100, 100, -100, 7, 50, -50, 100, -100, -100000, 50, -51, 100, -100]], [[-1, -8, 2, -3, 4, 6, 5, -4, -7, 69, -8, 8, -9, 10, 10, 10]], [[99, 1, -1, -1, 1, -1, 0, -9, -1, -1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 2, 1, -1, 30, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -39, -1]], [[1, -2, 3, -4, 4, 5, -6, 7, -8, 9, -10, -4, 1, -4, 7]], [[1, -1, 1, -1, 0, -90, 1, -1, 1, -1, -6, 1, 40, 1, -1, 1, 1, -1, 30, -1, -60, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1]], [[-100, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, -50, 100, 100]], [[-1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 100000, 1, -1, 1, 0, 30, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[1, -2, 3, -4, -6, 7, -8, 9, 4, 49999, 1, 6, 5, 2, -1, -6]], [[40, -2, 3, -5, 5, -6, 7, 5, -8, 9, 4, 2, 70, -1, 5, -2]], [[-1, -8, 2, -3, 4, -5, -7, 8, -8, 10]], [[1, -2, 3, 50001, 4, 5, -6, 7, -8, 9, -10, -4, 1, 7]], [[-100, -39, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 100, 100]], [[1, -1, 1, -1, 1, -1, -20, -100, -1, 1, -50, 1, -1, 1, -1, 0, 1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 9, -1, 1, -1, 30, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, -100000, 100000, -50000, 50000, -100000, -100000, 50000]], [[-1, -8, 2, 4, 4, -5, 6, -7, 8, -9, 9, 4]], [[10, -20, 30, -40, 50, -60, 70, 11, -80, 60, 90, -100]], [[1, -2, -51, -9, -4, -1, 5, -6, 7, -8, 9, -10, 20, -10, 2, -10]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, 1, -1, 1, -1, -40, 1, -1, 1, -1, 1]], [[2, -2, 3, -4, 5, -6, 7, -8, 9, -10, -10, -8]], [[-8, -1, 2, -3, 4, -5, 3, 6, 8, -9, 10]], [[1, -1, 0, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1]], [[-1, -2, -4, 5, -6, 7, 1, 4, 4, 1, 6, 2, -1, -6, 7, 5]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 60, 1, 1, -1, 1, -1]], [[-99, -10, -50, 100, 50, -50, 100, -100, -50, 100, 60, 99, -100, 50, -50, 100, -100, -100000, 50, -51, 100]], [[0, -2, 3, -4, 4, 5, -6, 7, 49, 10, 9, -10, -4, -6, 9]], [[1, -2, 1, -1, -1, 1, -1, -1, 1, -1, 1, -1]], [[1, -2, -3, 3, -4, 5, -4, -6, 7, -8, 9, -10, -10, -8]], [[-100, -50000, -10, -50, 100, 50, -50, -100, -100, 50, 100, -100, -100000, -51, 100, 50]], [[-10, 100, 50, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 100, -100]], [[-1, -8, 2, 4, -5, 6, 5, -4, -7, 8, 10, 8, -1]], [[2, -2, 3, 1, 5, -6, 7, -8, 9, -10, -10, -8]], [[1, -2, 3, -4, 5, -6, 7, -6, 9, 4, 1, 6, 2, -1, -6, 9]], [[-1, -8, 2, 4, -5, 6, 5, -4, -7, -8, 8, 10, 8]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 3, 50, -50, 100]], [[-100, 50, -50, 100, -100, 50, -101, -50, 100, -100, 49, -50, 100, -100, 50, -50, 100, -100, -51, 100]], [[10, -20, 30, 30, -39, 50, 1, 70, -80, 60, 90, -100, 10]], [[1, -2, 3, -4, 6, 5, -6, 2, 7, -8, 9, 1, 4, 1, 2, 70, -1]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, 50, -50, 100, -100, -100000, -51, -100]], [[100000, -50000, 50000, -100000, -9, -50000, 50000, -100000, 100000, -50000, -50001, 50000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000]], [[-100, 50, 3, 100, -100, 50, -101, -50, 100, 49, -50, 100, -100, 50, -50, 100, -100, 4, -51, 100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, -1, -1]], [[1, -2, 3, -4, 5, -5, 7, -8, 9, -10, -10, 50000, 5, 3]], [[-100, -10, -50, 100, 50, -50, 49, -100, -50, 100, -100, -100, -100000, -51, 100]], [[-100, -10, -60, -50, 100, 50, -50, -100, -100, 99, -100, -50, 100, -100, -100000, 50, -51, 100, -50]], [[1, -2, 3, -4, 5, -6, -3, -8, 9, -10, -10, -8, -8, -6]], [[10, -20, 30, -40, 50, -60, 70, 11, -80, 60, 90, -100, 90]], [[1, -2, 3, -4, 4, 5, -6, -8, 9, -10, -4, 1, -4, 7]], [[1, 3, -4, 5, -7, 7, -8, 9, -3, 2, -1, -4]], [[1, 1, -2, 1, -1, 1, -1, 1, -1, -1, -60, -40, 1, -1, 1]], [[-100, -10, -50, 100, 50, -50, -50000, -100, -50, 100, -100, 50, -50, 100, -100, -100000, -51, -100, 100]], [[1, -2, 3, -4, -1, 5, -6, 7, -8, 9, -10, -10, -10, -10]], [[100000, -2, 3, 7, 5, 8, 90, -8, 9, 4, -3, 2, -1, 9]], [[1, -2, 3, -4, 6, 5, -6, 2, 7, -8, 9, 4, -10, 2, 69, -1]], [[1, -1, -1, -1, 1, -1, 1, -9, -1, 1, -1, -1]], [[1, -1, 1, -1, 1, -1, 1, -100, -1, 0, 1, -1, 1, -1]], [[1, -2, 3, -4, -70, 4, 5, -6, 7, -8, 9, -10, -4, 1, 7]], [[-100, -10, -50, 100, 50, -50, 100, -100, -50, -99, 100, 60, 99, 50, -50, 100, -100, -100000, 50, -51, 100, 99]], [[-100, -10, -50, 100, -90, -50, -100, 100, -100, 50, -50, 100, -100, -100000, -51, 101, 100, 100]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 50, -1, 1, -1, 1, -1, 1, 2, -1, 1, 1]], [[-100, -10, -50, 100, 50, -50, 100, -100, 80, -99, 99, -100, 50, -50, 100, -100, -100000, 50, -51, 100, -100]], [[-1, 1, -1, 1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 30, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[-1, -8, 2, 4, -5, 6, 5, -4, -10, 8, 10, 8, -1]], [[11, 2, -2, 3, 1, 5, -6, 7, -8, 9, -10, -10, -8]], [[1, -2, 3, -4, 5, -7, -99, -100, 9, 7]], [[1, -2, 3, 100, 5, -6, 7, -8, 9, -3, 2, 20, -1, 5, -3, -2]], [[-100, -10, -50, 50, -50, 100, -100, -50, -99, 100, 60, 99, 50, -50, 100, -100, -100000, 50, -51, 100, 99]], [[1, -2, 3, -4, 5, -6, 7, 4, -8, 9, -10]], [[-1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -8, -1, 30, -1, 1, -1, 50, -1, 1, -1, 1, -1, 1, 2, -1, 1, 1]], [[1, -2, 3, -5, 5, -6, 7, 5, -8, 9, 4, 2, 70, -1, 5, -2, -2]], [[1, 1, -2, 1, -30, -1, 1, -1, 2, -1, -1, 1, 1, 1]], [[10, -20, 30, -40, 50, -60, -4, 70, -80, 60, -100]], [[-100, -100, -50000, -10, -50, 100, 50, -50, -100, -100, 50, 100, -100, -100000, -51, 100, 50]], [[-1, -8, 2, -3, 4, -5, 6, 5, -4, -4, -7, -8, 8, 10, 8]], [[0, -1, 1, -1, 1, 1, -100, -1, 2, -50, 1, -1, -3, -1, -50]], [[1, 99, 1, -1, 1, -1, 1, -9, -1, 1, -2, -1]], [[101, -100, -10, -50, 100, 50, 49, -100, -50, 100, -100, 50, 100, -100, -100000, -51, 100, -10]], [[49, -100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -51, 100, 100, -100]], [[1, -1, 50000, -1, 1, -1, 1, -9, -1, 1, -1, -1]], [[1, 9, -2, 3, 5, -6, 7, -8, 9, 4, 4, 6, 2, -6]], [[100000, -50000, 50000, -100000, -9, -50000, 50000, -100000, 100000, -50000, -50001, 50000, 99999, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -100000]], [[-100, -10, -50, 100, 50, -50, 100, -50, 100, -100, 50, -50, 100000, 100, -100, -100000, 50, -51, 100, -50]], [[-10, -9, -8, -7, -6, -5, -7, -4, -3, -2, -1, -1]], [[1, -2, 3, -5, 5, -6, 7, -8, 9, 4, 2, 2, 70, -1, 2]], [[-39, 10, -19, 30, -40, 50, -80, 4, 90, -100]], [[-1, -8, 2, -3, 4, -7, 8, -8, 10]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -100, -100000, 50, -51, 100, -20, 50]], [[-100, -10, -50, 100, 50, -50, -100, -50, 100, -100, -50, 100, -40, -100000, 50, 30, -51, 100, 50, -50, -100, -50, -50]], [[-8, -1, 2, -3, 4, 6, -7, -9]], [[1, -2, 3, 9, -4, 5, -6, 9, -10]], [[1, -2, -4, -9, 5, -6, 7, -8, 9, -10, -10, -10, -10]], [[-30, -100, -39, 50, 100, -100, 50, -50, 100, -100, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 100, -39, 50]], [[-1, -5, 2, 4, -5, -7, 8, -9, 10]], [[-100, 50, -50, 100, 50, -99999, -50, 100, -100, -19, -2, -100, 50, -50, 70, -100, 50, 100, -100, -100]], [[1, -2, 3, 5, -6, 7, 9, 4, 4, -7, -80, 6, 2, -1, -6]], [[10, -20, -40, 50, -60, 70, -80, 60, 90, -100, -40]], [[0]], [[1, -1, 0]], [[1, -1, -1]], [[1, -1, 1]], [[1, -1, 2]], [[1, -2, 1]], [[1, -1, -1, -1]], [[1, -1, -1, 1]], [[1, -1, 1, -1]], [[1, -1, -1, 2]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, 3, -4, 5, -6, 7, -8, 9, 4, -2, 2]], [[-10, -9, -8, -7, -6, -5, -100000, -4, -3, -2, -2]], [[10, -20, 30, -40, 50, 70, -80, 90, -100]], [[-10, -9, -8, -7, -6, -5, -4, -3, -9, -2, -1]], [[-10, -30, -30, 40, -50, 60, -70, 80, -90, 100]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-10, -30, -30, 40, -50, 60, -70, 81, -90, 100]], [[-10, -9, -7, -6, -5, -3, -9, -100, -2, -1, -5]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, -2, 3, -4, 5, -80, -6, 7, -8, 9, -10]], [[-8, -9, 20, -30, 40, -50, 60, -70, 80, -90, 100]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, -10]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -7]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1]], [[-9, -10, -30, -30, 40, -50, 60, 81, -90, 100]], [[1, -2, 3, -4, 4, -6, 7, -8, 9, 4, -3, 2, -1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-8, -9, 20, -30, 40, -50, 60, 80, -70, 80, -90, 100]], [[1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1]], [[100, -10, -30, -50000, -30, 40, -50, 60, -70, 80, -90, 100]], [[-9, 20, -30, 40, -50, 60, -70, 80, -90, 100, -30, -30]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 0, 1, -1, 90, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, -1]], [[1, -1, 1, 1, -1, 1, -1, 1, -1, 2, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, -10, -8]], [[1, -6, -3, -4, 5, -6, 7, -8, 9, 4, 8, -2, 2]], [[-10, -9, -7, -6, -5, -3, -9, -100, -2, -1, -5, -7]], [[-3, 1, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, 2, -1]], [[1, -2, 3, -4, 5, -6, 7, -8, 4, -3, 2, -1, 4]], [[-100, 50, -50, 100, -100, 50, 2, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-10, 20, -30, 40, -50, 60, 5, 80, -90, 100, 80, 80]], [[50, -50, 100, -100, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100]], [[1, -4, 5, -6, 7, -8, 9, 4, -2, 2]], [[-10, -30, 40, -50, 60, -70, 80, -90, 100]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, 0, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1]], [[-10, -9, -8, -6, -5, -4, -3, -2, -8, -1, -10]], [[-8, -9, 20, -30, 40, -50, 60, 80, -70, 80, -90, 100, 20]], [[1, 0, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[50, -50, 100, -100, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50]], [[-2, 3, -4, 5, -6, 7, -8, -3, 2, -1, 4]], [[1, -30, 1, -1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-4, -10, -30, 40, -50, 60, -70, -70, 80, -89, 100]], [[1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1]], [[-9, -9, 20, -30, 40, -50, 60, -70, 80, -90, 100]], [[1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1]], [[-1, 2, 4, -5, 6, -7, 8, -9, 10]], [[10, -20, 30, -40, 3, 50, -60, 70, -80, 90, -100, 10]], [[1, -4, 30, 5, -6, 7, -8, 9, 4, -2, 2]], [[-10, -29, -30, -50000, -30, 40, -50, 60, -70, 80, -90, 100]], [[-10, -9, -8, -7, -5, -60, -3, -9, -2, -1, -5]], [[-3, 1, -2, 3, -4, 5, -6, 7, -8, 4, -3, 2, -1]], [[-10, -9, -8, -7, -6, -5, -100000, -4, -3, -2, -2, -9]], [[1, 1, -1, 1, -1, 1, -1, 1, -20, 1, -1, 1, -1, 1, -1]], [[-2, 3, -4, 50000, 5, -6, 7, -8, -3, 2, -1, 4]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, -10, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000]], [[10, -20, 30, -40, 50, 70, -80, 90, -100, 50]], [[-10, -9, -8, -7, -6, -5, -4, -3, -9, -2, -2, -1]], [[-10, -9, -7, -6, -5, -4, -3, -2, -1]], [[1, -70, -1, 1, 1, -1, 1, -1, 1, -1, 2, -1]], [[10, 10, -20, 30, -40, 50, -60, 70, -80, 90, -100]], [[3, -8, -9, -8, -7, -5, -60, -3, -9, -2, -1, -5, -8]], [[-10, -30, -50, 60, -70, 80, -90, 100]], [[1, -1, 1, 1, -1, 1, -1, 1, 7, 2, -1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1, -1]], [[-7, -10, -9, -8, -7, -6, -5, -4, -9, -2, -1, -8]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -7, 10]], [[1, -29, 3, -4, 5, -6, 7, -8, 9, -10]], [[-8, -9, 20, -30, 40, -50, 60, 80, -70, 80, -90, 100, 80, 20, -50]], [[-1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, 1, -1]], [[-10, -8, -9, 20, -30, 40, -50, 60, 80, -70, 80, -90, 100]], [[100000, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 49, -50, 100, -100, 50, -50, 100, 100]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, -8]], [[-8, -9, 20, -30, 21, 40, -50, 80, 80, -90, 100, 20, 80]], [[-4, 6, 5, -6, 7, -8, 9, 4, -2, 2]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, -8, -8]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-10, -9, -8, -1, -7, -6, -5, -4, -3, -2, -1, -9]], [[-9, -10, -30, -30, 40, -50, 0, 60, 81, -90, 100]], [[10, -20, 30, -40, 3, 50, -60, 70, -21, -80, 90, -100, 10]], [[-10, -28, -30, -50000, -30, 40, -50, 60, -70, 80, -90]], [[-1, 2, -3, 4, -5, 6, -7, 8, -7, -9, 10, -7]], [[-3, 2, 1, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, 2, -1]], [[1, -30, -29, 3, -4, 5, -6, 7, -8, 9, -10]], [[-2, -3, -4, 50000, 5, -6, 7, -8, -3, 2, -1, 4, -8]], [[-10, -9, -8, -7, -6, -5, -4, -3, -9, -2, -2, -1, -6, -5]], [[-3, 1, -2, 3, -4, 5, -6, 7, -8, 4, -3, 2, -1, -1]], [[1, 30, 1, -1, 1, -1, -1, 0, -1, 1, -1, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0]], [[30, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, 49, -50, 100]], [[1, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1, -1, 0]], [[100000, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[2, 1, -1, 1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, 6, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000]], [[1, -29, 3, 4, -4, 5, -6, 7, -8, 9, -10]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -10, 100000, -50000, 50000, -100000]], [[-10, -9, -7, -6, -5, -3, -9, -100, -1, -1, -5]], [[-8, -9, 20, -30, 40, -50, -9, 60, -70, 80, -90, 100]], [[-10, -10, -9, -7, -6, -5, -3, -9, -100, -2, -1, -5]], [[1, 50, 3, -4, 5, -6, 7, -8, 9, -10]], [[-3, 1, -2, 3, 5, -6, -8, 4, -3, 2, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, -100000, -100000]], [[-9, -10, -30, -30, 40, -90, -50, 0, 81, -90, 100]], [[1, -2, 3, -4, 4, -6, 7, -8, 4, -3, 2, -1, -8]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -10, 100000, -50000, 50000, -100000, -50000]], [[1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -30, -1]], [[-10, -9, -8, -1, -7, -6, -5, -4, -3, -2, 100000, -1, -9]], [[-2, 3, -4, 5, -6, 7, -8, -3, -3, 2, -1, 4]], [[-8, -9, 20, -30, 40, -50, 60, -70, 80, 100]], [[0, -1, 1, 1, -2, -1, -1, 1, -1, 1, -1]], [[-10, -9, -8, -7, -6, -5, -4, -3, -29, -2, -1, -8, -8]], [[1, -70, -1, 1, 1, 0, -1, 1, -1, 0, -1, 2, -1]], [[-8, -9, 20, -30, 40, -50, 60, 80, -70, 80, -90, 100, 100]], [[-1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, 1, -1]], [[-10, -9, -8, -1, -7, -6, -5, 49, -3, 50000, -2, 100000, -1, -9]], [[20, -30, 40, -50, -9, 60, -70, 80, -90, 100]], [[60, 3, -4, 50000, 5, -6, 7, -8, -3, 2, -1, 60]], [[-30, -9, 20, -30, 40, -50, 80, -70, 80, -90, 100, 20]], [[-10, -9, -7, -6, -5, -3, -9, 6, -2, -1, -5]], [[-9, -10, -30, 40, -90, -50, 0, 81, -90, -30]], [[10, -20, 30, 50, 70, -80, 90, -100]], [[1, -1, 1, 1, -1, 0, -1, 1, -1, 1]], [[-1, 2, -3, 4, -5, 6, -7, 8, 10, -7]], [[-2, 3, -4, 50000, 5, -6, 7, -8, -3, 2, -1, 4, -6]], [[1, 0, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, 1, -1, 1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[1, 1, -1, 1, 1, -1, 1, -20, 1, -1, 1, -1, 1, -1]], [[-9, -9, 20, -30, 40, -50, 60, -70, -50000, -90, 100, 40]], [[50, -50, 100, -100, -99, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -10, 100000, -50000, 50000, -100000, -50000, -50000]], [[-10, -30, -30, 40, -50, 60, -70, -90, 100, -10]], [[1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -30, -1, -1]], [[-10, -89, -9, -8, -7, -6, -5, -100000, -4, -3, -2, -2, -9]], [[-10, -9, -8, -7, -6, -5, -4, -99, -3, -2, -1, -8]], [[-3, 2, 1, -2, 3, -4, -50, -6, 7, -8, 9, 4, -3, 2, -1]], [[-1, 2, -3, 4, -5, 6, -7, 8, -7, -9, 10, -7, -9]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -30, 1, -1, 90, 0, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1, -1, 0]], [[30, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -101, 50, 49, -50, 100]], [[3, -8, -9, -8, -7, -5, -3, -9, -2, -1, -5, -8]], [[10, -20, 30, -40, 3, 50, 21, 70, -80, 90, -100, 10]], [[10, -20, 30, -40, 50, 70, -80, -29, -100]], [[10, -20, 30, -40, 3, 50, -60, 70, -80, 90, 10, -100]], [[3, -8, -9, -9, -7, -5, -60, -3, -9, -2, -1, -5, -8]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, 1, -1, 1, -1, 0, -1, 1, -1, 1, -1, 1, -1, -1, 1]], [[50, -50, 100, -100, -99, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 50, -50, 100]], [[-10, -2, -8, -7, -6, -5, -4, -3, -9, -2, -1, -2, -1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1, -1]], [[10, -20, 30, -40, 50, -60, 70, -80, 90, 10]], [[3, -8, -9, -9, -7, -5, -60, -9, -2, -1, -5, -8]], [[1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 8]], [[1, 0, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, -2, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1]], [[100000, 1, -1, 1, -1, 1, -1, 1, 2, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[2, -1, 0, 1, 1, -1, 1, -100, 1, -1, 1, -1]], [[-3, 1, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, 2, -1, 9]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -8, -1, -10]], [[1, -1, 1, 1, -1, 1, -1, 1, -6, 2, -1]], [[-1, -1, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, 1, -1]], [[3, -8, -9, -7, -5, -60, -9, -2, -1, -5, -8]], [[-10, -9, -7, -6, -5, -9, -9, -100, -2, -1, -5]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 50]], [[-10, -8, -7, -6, -5, -4, -3, -2, 50, -1, -8]], [[1, 1, -1, 1, -1, 1, -1, 1, 49, -20, 1, -1, 1, -1, 1, -1]], [[-8, -9, 20, -30, 40, -50, 60, 80, -70, 80, -90, 100, -50]], [[1, -2, 3, 5, -6, 7, -8, 4, -3, 2, -1, 4]], [[1, -2, 3, 3, -4, 4, -6, 7, -8, 9, 4, -3, 2, 3, -1]], [[-1, 2, -3, 4, -6, -5, 6, -7, 8, -9, 10]], [[-3, 1, -2, 3, -4, 5, -6, 7, -8, 5, 2, -1]], [[-10, -9, -7, -6, -5, -4, -3, -2, 50, -1, -8]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[-10, 50, -30, -5, 40, -50, 60, -70, 81, -90, 100]], [[-8, -9, 20, 40, -50, 60, -70, 80, 100]], [[-100, 50, -21, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 50]], [[1, -1, 1, 1, -1, 0, -99, -1, 1, -1, 1]], [[-10, -10, -9, -7, -6, -5, -3, -9, -100, -2, -1, -4]], [[-9, 20, -30, 40, -50, 60, -70, 80, -90, 100, -30, -30, -30]], [[-10, -9, -7, -6, -5, -4, -3, -9, -2, -1]], [[-10, -30, -50, 60, -70, -7, -90, 100]], [[10, -20, 30, -40, 50, 70, -79, 90, -100, 50]], [[1, 2, 2, 5, -80, -6, 7, -8, 9, -10]], [[-4, 6, 5, -6, 6, -8, 9, 4, -2, 2, -4]], [[50, -50, 100, -100, 50, 100, -100, 50, -50, 100, 50, -50, 49, 100, -100, 50, -50]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, -89, -1, 1, -1, 0, -1, 1, -1, 1, -1, 1, -1, -1, 1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[-70, -1, 1, 0, -1, 1, -1, 1, -1, 2, -1]], [[-3, 1, -2, 5, -6, 4, -3, 2, -1, -1]], [[-10, -9, -7, -6, -5, -4, -3, -2, 50, -1, 9, 9]], [[1, -1, 1, 1, -1, 1, -1, 1, -1, -1, 1, -1]], [[1, -1, 1, 1, -1, 1, -1, 1, -6, 2, -1, -1]], [[-8, -9, -30, 40, -50, 60, 80, -70, 80, -90, 100, 100]], [[-10, -89, -9, -8, -7, -6, -5, -100000, -4, -3, -2, -2, -9, -9]], [[-100, 50, -21, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 51]], [[3, -8, -9, -8, -7, -5, -60, -3, -2, -1, -5, -8, -8]], [[-1, 1, -1, 0, 1, -1, 1, -1, 1, -1, -2, 1, -1, 0, -1, 1, -1]], [[1, 3, -4, 5, -6, 7, -6, -8, 9, 4, -2, 2, 5]], [[10, -20, 30, -40, 50, 70, -80, 90, -100, 50, 50]], [[-10, -30, -50, 60, -70, -7, -90, 100, -70]], [[-10, -9, -7, -6, -5, -3, -70, -100, -2, -1, -5, -7]], [[-8, -9, 20, 40, -50, 60, -70, 80, 100, -9]], [[50, -50, 100, -100, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 99, 50]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 0, -99, -1, 90, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, -1, 1]], [[1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1]], [[100000, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -7, -1, 1, -1, 1, 0, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[1, 1, -1, 1, -50000, -1, 1, -1, 1, 0, -1, 1, -1, 1, -1, 1, -1, 1]], [[-10, -9, -7, -6, -3, -70, -2, -1, -5, -7]], [[1, -1, -1, 1, -1, 1, 1, -1, 1, 0, -99, -1, 90, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, -1, 1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 50000, 100000, -50000, -10, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000]], [[-1, 1, -1, 0, 1, -1, 1, -1, 1, -1, -2, 1, -1, 0, -1, 1, -79, -1]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -21, -100000, 100000, -50000, -100000, -100000]], [[-1, 2, -3, 4, -5, 6, -7, 8, -7, -9, 10, -7, 4, 10]], [[10, -20, 30, -21, -40, 50, -60, 70, -21, -80, 90, -100, 10]], [[1, -4, 30, 5, -6, 7, -8, 9, 4, -2, 50]], [[1, -2, 3, -4, 4, 100, 7, -8, 4, -3, 2, -1, -8]], [[10, -20, 30, -21, -40, -60, 70, -21, -80, 90, -100, 10]], [[-8, 20, 40, -50, 60, -70, 80, 100]], [[100, -10, -30, -50000, -30, 40, -50, 60, -70, -2, 80, 39, -90, 100, 100]], [[1, 1, -1, 1, -1, 1, -1, 1, -20, 1, -1, 1, -1, -4, 1, -1]], [[3, -8, -9, -9, -7, -5, -90, -60, -3, -9, -2, -1, -5, -8]], [[-10, -9, -8, -7, -6, -5, -4, -99, -3, -2, -1, 30, -8]], [[60, 3, -4, 5, -6, 7, -5, -8, -3, 2, -1, 60]], [[-10, -9, -7, -7, -6, -5, -4, -50000, -2, -2, -8]], [[-10, -9, -7, -6, -5, -9, -9, -100, -2, -1, -5, -5, -9]], [[-1, 2, 4, -5, 6, 39, -7, 8, -9, 10]], [[1, 0, -70, -1, 1, 1, 0, 1, -1, 100000, -1, 2, -1]], [[-10, -30, -30, 40, -50, 60, -70, -89, -90, 100, -10]], [[30, -100, 50, -50, 100, -100, 50, 100, -100, 50, -50, 100, 51, -100, 50, -50, 100, -101, 50, 49, -50, 100, 30]], [[1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -70]], [[20, -30, 40, -9, 60, -70, 80, -90, 100, 100]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, -70, -1, 1, -1, -1, 1, -1, 1, -1, 1, 0, 1]], [[1, -6, -3, -4, 5, -6, 7, -8, 9, 4, 8, -2, 2, -6]], [[-10, 50, -30, -5, 40, -50, 60, 50, -70, 81, -90, 100]], [[-10, -9, -7, -6, -5, 5, -3, -2, 50, -1, -8]], [[1, -2, 3, -4, 5, -6, 7, -8, 4, -3, 2, 4]], [[3, 49, -9, -9, -7, -5, -90, -60, -3, -9, -2, -1, -7, -8]], [[-1, 2, -3, 4, -5, 6, -50, 8, -7, -9, 10, -7]], [[1, -4, 30, 5, -6, 7, -8, 9, 4, -2, 50, 1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, -1, 1]], [[-10, -30, -50, 60, -70, -7, -90, 100, 100]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, 2, -1, 1, -1, 1, -1, 90, -1, -89, -1, 1, -1, 0, -1, 1, -1, 1, -1, 1, -1, -1, 1, 1]], [[10, -20, 30, 70, -78, 90, -100, 50]], [[-70, -1, 1, 0, -1, -8, 1, -1, 1, -1, 2, -1]], [[-3, 1, -2, 3, -4, 5, -6, 7, -8, 9, 4, -3, -1]], [[1, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 0]], [[20, -30, 40, -9, 60, -70, 39, 80, -90, 100, 100, -90]], [[-1, 0, -1, 0, 1, -1, 1, -1, 1, -1, -2, 1, -1, 0, -1, 1, -1]], [[-3, 1, -2, -4, 5, -6, 7, -8, 4, -3, 2, -1]], [[100000, 1, -1, 1, -2, -1, 1, -1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -7, -1, -70, 1, -1, 1, 0, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[100000, 1, -1, 1, 1, -1, 1, 2, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[1, -4, 30, 5, 100000, -6, 7, -8, 9, 4, -2, 50]], [[-1, 2, -3, 4, -5, 6, -7, -90, -9, 10]], [[100, -10, -30, -50000, -30, 40, -50, 60, -70, -2, 80, 39, 100, 100]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -10, 100000, -50000, 50000, -100000, -50000, -50000, 50000]], [[-8, -9, 20, -30, 40, -50, 60, 80, -9, -70, 80, -90, 100]], [[10, -20, 30, 1, 70, -78, 90, -100, 50]], [[1, -1, 1, 1, -1, 1, -20, 1, -1, 21, 1, -1, 1, -1]], [[-10, -9, -7, -6, -5, -9, -9, -100, -2, -1]], [[-9, -7, -6, -5, 5, -2, 50, -1, -8]], [[1, -1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1]], [[-10, -9, -8, -7, -5, -60, -3, 1, -2, -1, -5]], [[1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[10, -4, -20, 30, -40, 50, 70, -80, 90, -100, 50]], [[-8, -9, 40, -50, 60, -70, 100, -50]], [[1, -6, -3, -4, 5, -6, 7, -8, 9, 4, 8, -2, 2, 9]], [[-1, 2, 4, -5, 6, -7, 8, -7, -9, 10, -7, 4, 10, 2]], [[1, -1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-20, 30, 50, 70, -80, 90, -100]], [[100000, 1, -1, 1, -2, -1, 1, -1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -7, -1, -70, 1, -1, 1, 100000, 0, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[-100, 50, -21, -50, 100, -100, 50, -50, -99, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 50]], [[100000, 1, -1, 1, 99, -1, 1, 2, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[100000, -50000, 50000, 100000, -50000, 50000, -100000, 100000, -50000, 50, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, -100000, -100000]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, -10, 100000, -3, -50000, 50000, -100000, -50000, -50000]], [[1, 1, -1, 1, 1, -1, 1, -20, 1, -1, 1, -1, 1, 1, -1]], [[-10, -9, -8, -6, -5, -4, -3, -2, -1, -10, -8, -10]], [[1, -2, 3, 5, -6, 7, -8, 4, -3, 2, -1, 4, -2, 4]], [[10, -20, 30, -40, 50, 70, -80, -29, -100, 50, -29]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -7, 10, 2]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, 0, 1, -1, 90, 0, 1, -1, 1, -1, -70, -1, -101, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, -1]], [[1, 1, 1, -1, 1, -20, 1, -1, 21, 1, -1, 1, -1]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, 6, 4]], [[1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -4, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, -1]], [[-10, 50, -30, -5, 40, -50, 60, -70, 81, -2, 100]], [[-10, -9, -7, -6, -5, -3, -9, -100, -2, -1, -7]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, -10, -3]], [[50, -50, 100, -100, -99, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 50, -50, 100, -100]], [[10, -20, 30, 50, -60, 70, -80, 90, 10]], [[3, -8, -9, -8, -7, -5, -60, -3, -9, -2, -1, -5, -8, -5, -5]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, -1]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, 1]], [[-1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -7, 10, 2, 10]], [[-9, -9, 20, -30, 40, -50, 60, -70, -8, -50000, -90, 100, 40, -8]], [[40, 50, -30, -5, 40, 60, -70, -71, 81, -90, 100]], [[-1, 2, 4, -50, -5, 6, -7, 8, -9, 10, -7, 10, 2]], [[-10, -30, 40, -50, 60, -70, -70, 80, -89, 60]], [[100, -10, -30, -30, -50, 60, -70, -2, 80, 39, 100, 100, -30]], [[10, -101, -20, 30, 1, 70, -100000, 90, -100, 50]], [[60, 3, -4, 50000, 5, -6, 7, -8, -3, 2, -1, 60, 2]], [[-1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, 0, -1]], [[-9, -9, 20, -30, 40, -50, 60, -70, 80, -90, 100, -30]], [[10, -20, 30, -21, -40, 50, -60, 70, -21, -80, 90, -100, 10, 10]], [[100000, -1, 1, -2, -1, 1, -1, 1, -1, 1, -1, 1, -1, 90, 0, 1, -7, -1, -70, 1, -1, 1, 0, 1, -1, 2, -1, 1, -1, 1, -1, 1]], [[1, 50, 3, -4, -10, 5, -6, 7, -8, 9, -10]], [[-8, -49, -9, -30, 40, -50, 60, 80, -70, 80, -90, 100, 100]], [[30, -100, 50, -50, 100, -100, 50, -50, 100, -100, 80, 50, -50, 100, -100, 50, -50, 100, -100, 50, 49, -50, 100]], [[50, -50, 100, -100, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 99, 50, -50]], [[1, -3, -4, 5, 1, -6, 7, -8, 9, 4, -2, 2, 9]], [[-8, -9, 40, -50, 60, -70, -50]], [[-4, 6, 5, -6, -8, 9, 4, -2, 2]], [[100000, -50000, 50000, 100000, -50000, 50000, -100000, 100000, -50000, 50, 50000, -100000, 50000, 100000, -50000, 50000, -100000, 100000, -50000, -100000, -100000]], [[-10, -9, -7, -6, -5, -4, -3, -2, 50, -1, -8, -6]], [[1, -1, 21, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]], [[-70, -1, 1, 0, -1, -8, 1, -1, 1, -1, 2, -1, -1]], [[1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 0, 1, -1, 1, -1, -70, -1, 1, -1, 1, -1, 1, -2, -1, 1, -1, 1, 0, 1, 1, -1]], [[1, -1, 1, 1, -1, 1, -20, 1, -1, 21, 10, -1, 1, -1]], [[-1, 2, -3, 4, -5, 6, -7, 10, -7]], [[1, 30, 5, -6, 7, -8, 9, 4, -2, 50]], [[1, -29, 3, -4, 5, -6, 7, -8, 9, -10, -10]], [[1, -1, -1, 1, -1, 1, -1, 1, 1, 2, -1, 1, -1, 1, -1, 90, -1, -89, 0, 1, -1, 0, 0, 1, -1, 1, -1, 1, -1, -1, 1, 1]], [[10, -20, -21, -40, 50, -60, 70, -21, -21, -80, 90, -100, 10]], [[1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1]], [[2, 1, -1, 1, 1, -1, -8, 1, -1, -1, 1, -1, 1, -1]], [[-10, -9, -8, -1, -1, -5, 49, -3, 50000, -9, -2, 100000, -1, -9]], [[-8, 20, -30, 40, -50, 60, -70, 80, 100]], [[10, -20, 30, -21, -39, 50, -60, 70, -21, -80, 90, -100, 10, -100]], [[1, -1, 1, -1, 1, -1, 1, -1, 1, 2, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 81, 1, -1, 1, -1, 1, -1, 1, -1, -1]], [[50, -50, 100, -100, -99, 50, 100, -100, 50, -50, 100, -100, 50, -50, 100, 50, -50, 100, 50]], [[1, -1, 1, -1, 1, -1, 1, 0, -1, -7, -1, 1, -1, 1]], [[60, 3, -4, 50000, 5, -6, 7, -8, -3, 2, -1, 60, 2, -6]], [[-10, -10, -9, -7, -6, -5, -3, -8, -100, -2, -1, -4]], [[1, -1, 1, 0, -1, 1, 1, -1, 1, -1, 1, -1, 90, 0, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 89, 1, 0]], [[1, -2, -4, 5, -6, 7, -8, 9, -10]], [[100, -10, -30, -50000, -30, 40, -50, 60, -70, -2, 80, 39, 100, 100, -50000]], [[-4, 6, 5, -6, 7, -8, 9, 4, -2, 2, -6]], [[-1, 2, -71, 4, -5, 6, -50, 8, -7, -9, -71, 10, -7]], [[-8, 101, -8, 20, 40, -50, 60, 80, 100, -9]], [[-30, -9, 20, -30, 40, -50, 80, 80, -90, 100, 20]], [[3, -8, -9, -9, -7, -5, -60, -3, -9, -2, -1, -5, -8, 3, -9, -2, -8]], [[89, -10, -9, -7, -6, -3, -70, -2, 49, -5, -7]], [[100000, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -2, -1, 90, 0, 1, -7, -1, 1, -1, 1, 0, 1, -1, 2, -1, 1, -1, 1, -1, 0, 100000]], [[-10, -9, -8, -7, -5, -60, -3, -9, -2, 30, -5]], [[1, 1, -1, 1, -1, 1, -1, 1, -20, 1, -1, -19, 1, -1, 1, -1]], [[-10, -9, -8, -7, -6, -5, -4, -3, -2, -8, -1, -10, -6]], [[10, -20, 30, -40, 3, 50, -60, 70, -80, -100, 10]], [[20, -30, -50, 60, -70, 80, -90, 100]], [[-1, 2, 80, -3, 4, -5, 6, -7, 8, -9, 10, 8, -7]], [[-10, -9, -7, -7, -6, -5, -50000, -2, -2, -8]], [[-10, -10, -6, -5, -3, -9, -100, -2, -1, -4]], [[3, -8, -9, -9, -7, -5, -60, -9, -2, -1, -5, -8, -60]], [[-10, -30, -30, 40, -50, 60, -70, 81, -90]], [[20, -50, 60, -70, 80, -90, 100, 20]], [[1, 1, -1, 1, -1, 1, -1, 1, 49, -20, 1, -1, 1, -1, 1, -1, 1]], [[10, -20, 30, -21, -39, 50, 70, -21, -80, 90, -100, 10, -100, 90]], [[-1, 2, 80, -3, 4, -5, 6, -7, 8, -9, 10, 8, -7, -9]], [[1, -4, 6, -6, 7, -8, 9, 4, -2, 2]], [[10, -20, 30, 50, 70, -80, 90, 90]], [[-3, 21, 1, -2, 3, 5, -6, 7, -8, 4, -3, 2, -1]], [[60, 3, -4, 5, -6, 7, -5, -8, -3, 2, -1, 60, -6, 3]], [[10, -20, 30, -40, 3, 50, 21, 70, -80, 89, -100, 10]], [[10, -20, 30, 50, 70, 90, -100]], [[-3, 1, -2, 3, -4, 5, -6, 7, -8, 5, 2, -1, -1]], [[-100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, 100, -100, 50, -50, -50, 100, -100, 50, -50, 100, 50]], [[-10, -10, -9, -7, -6, -5, -3, -9, -100, 7, -1, -5]], [[-8, -9, 20, -30, 40, -9, 60, 89, -70, 80, -90, 100]], [[1, -1, 1, 1, -1, 80, 1, -1, 1, -49, 2, -1]], [[21, -1, 1, 1, -1, 0, -1, 1, -1, 1]], [[-3, 21, 1, -2, 3, 5, -8, -6, 7, -8, 4, -3, 2, -1]], [[3, -8, -9, -8, -7, -5, -60, -3, -9, -2, -1, -5, -8, -60]], [[20, -31, 40, -9, 60, -70, 80, -90, 100, 100, -90]], [[-2, 6, -4, 5, -6, 7, -8, -3, -3, 2, -1, 4]], [[20, -8, -10, 20, -30, 40, -50, 60, 80, -70, 80, -90, 100, 80, 20, -50]], [[100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 50000, 100000, -50000, -10, -100000, 100000, -50000, 50000, -100000, 100000, -50000, 50000, -100000, 100000]], [[-40, -10, -9, -7, -7, -6, -5, -50000, -2, -2, -8]], [[10, -20, 30, -21, -40, 50, -60, 50000, 70, -21, -80, 90, -100, 10, 10]]]\n    results = [1, -6, -14, -9999999999999999, 0, -6, -6, 3, -33, -10, 7, -1, -5, -12, -10, -5, -25, -5, -10, -10, -7, -100, -8, -9, -13, -16, -16, -7, -16, -19, -5, -5, -10, -23, -16, -28, -12, -7, -19, -10, -22, -7, -18, -6, -5, -5, -7, -12, -18, -20, -24, -17, -5, -12, -6, -14, -21, -9, -5, -16, -6, -38, -38, -20, -16, -19, -6, -7, -21, -20, -8, -5, -24, -6, -8, -12, -8, -34, -20, -20, -40, -8, -10, -29, -21, -20, -22, -8, -16, -16, -38, -9, -4, -5, -8, -6, -25, -7, -12, -5, -35, -8, -5, -28, -30, -7, -10, -15, -16, -16, -12, -20, -1, -100, -100000, -8, -90, -1, -9, -100, -10, -55, -100, -1, -2, -149, -101, -13, -141, -100, -40, -151, -100151, -8, -151, -13, -110, -184, -19, -8, -1, -100211, -14, -11, -2, -155, -8, -9, -100261, -1, -101, -101, -100, -8, -20, -10, -8, -7, -101, -100261, -8, -3, -102, -100261, -1, -208, -8, -1, -100261, -8, -1, -100158, -96, -101, -8, -100, -17, -30, -96, -14, -8, -12, -100211, -32, -9, -100261, -2, -8, -53, -100361, -200000, -300000, -1, -151, -17, -20, -28, -100211, -20, -300000, -9, -1, -100101, -100, -10, -208, -100141, -41, -1, -17, -8, -299999, -150107, -38, -33, -120, -300000, -1, -2, -8, -100262, -101, -1, -8, -62, -32, -151, -100001, -8, -2, -101, -13, -203, -100101, -2, -8, -8, -100192, -14, -150, -42, -6, -101, -8, -11, -100251, -1, -1, -154, -200090, -100241, -20, -21, -100211, -1, -14, -7, -8, -100211, -100212, -2, -50008, -300000, -8, -100101, -8, -20, -8, -150211, -100158, -150, -96, -101, -153, -28, -13, -50018, -8, -8, -154, -43, -400000, -11, -50008, -150, -44, -100, -15, -100101, -104, -1, -100, -141, -14, -130, -100201, -100260, -20, -200160, -20, -8, -1, -100101, -300009, -10, -150, -20, -100207, -100162, -50018, -100262, -8, -1, -1, -100201, -53, -37, -12, -2, -139, -260, -8, -141, -30, -208, -21, -100211, -8, -12, -220, -10, -9, -3, -101, -141, -16, -14, -1, -13, -8, -27, -1, -100, -300000, -20, -22, -34, -17, -3, -20, -10, -19, -100151, -208, -8, -2, -121, -33, -10, -1, -96, -50011, -53, -14, -154, -139, -20, -34, -171, -100260, -43, -44, -9, -185, -300000, -110, -100202, -100, -20, -151, -14, -100221, -50011, -100262, -1, -11, -7, -13, -50018, -103, -2, -17, -110, -4, -100012, -37, -151, -8, -100101, -100101, -53, -6, -10, -100307, -1, -96, -12, -100, -100, -100202, -20, -54, -101, -1, -200009, -200260, -100152, -500000, -199, -2, -100201, -20, -80, -2, -39, -100, -2, -100261, -139, -29, -184, False, -39, -7, -8, -12, -8, -18, -250090, -100161, -100131, -2, -62, -150, -102, -100101, -26, -110, -8, -150, -53, -101, -284, -15, -40, -100, -100311, -1, -208, -180, -12, -100, -9, -150, -18, -100157, -8, -100211, -3, -17, -149987, -8, -11, -50022, -100251, -41, -100, -169, -2, -20, -100, -100, -40, -61, -9, -150, -100, -20, -10, -13, -203, -11, -110, -101, -80, -5, -3, -250, -17, -100, -50000, -64, -100201, -2, -100002, -11, -8, -260, -132, -12, -100151, -26, -2, -1, -100101, -100364, -20, -100152, -205, -2, -17, -9, -100144, -11, -13, -42, -17, -97, -150, -2, -11, -8, -18, -14, -139, -171, -3, -250000, -9, -100, -70, -1, -41, -28, -11, -2, -8, -101, -100101, -20, -4, -31, -150261, -100201, -11, -28, -7, -19, -100, -253, -100, -8, -100361, -250010, -201, -3, -20, -100312, -100372, -50, -100, -22, -8, -103, -150361, -40, -8, -10, -13, -101, -77, -100101, -100351, -1, -100121, -1, -14, -28, -206, -8, -100101, -10, -9, -8, -32, -120, -150361, -23, -203, -12, -100151, -151, -11, -8, -200010, -100101, -63, -8, -100, -13, -100261, -100271, -16, -10, -48, -169, -13, -100250, -87, -140, 0, -1, -2, -1, -1, -2, -3, -2, -1, -2, -1, -8, -100056, -100, -64, -100, -2, -99, -157, -2, -88, -90, -65, -9, -1, -1, -90, -8, -1, -90, -1, -50100, -90, -72, -72, -1, -100000, -73, -15, -164, -8, -8, -100, -2, -90, -100, -8, -90, -72, -1, -72, -66, -90, -1, -100, -11, -30, -149, -2, -90, -1, -9, -100, -8, -50129, -119, -8, -100065, -20, -11, -150010, -100, -66, -47, -71, -100, -125, -110, -1, -72, -76, -9, -33, -90, -2, -90, -1, -101, -63, -90, -8, -71, -1, -2, -1, -65, -90, -111, -50128, -16, -8, -63, -14, -77, -8, -3, -1, -100, -2, -72, -1, -2, -100000, -29, -100010, -156, -90, -167, -10, -14, -250000, -188, -14, -150010, -33, -55, -14, -70, -4, -100, -71, -90, -2, -46, -90, -11, -90, -51, -188, -100, -2, -7, -12, -1, -20, -50160, -199, -200010, -180, -34, -100154, -162, -61, -22, -72, -101, -65, -100, -209, -100, -126, -3, -199, -60, -72, -80, -123, -2, -9, -3, -1, -100, -8, -73, -6, -3, -114, -163, -100, -45, -20, -90, -8, -8, -13, -8, -46, -1, -90, -70, -121, -101, -166, -90, -56, -197, -100, -88, -8, -100, -93, -2, -71, -6, -46, -2, -6, -90, -100163, -121, -124, -4, -14, -100, -197, -225, -70, -100, -100, -2, -8, -50001, -120, -100, -150010, -83, -250021, -16, -112, -8, -14, -162, -70, -50092, -24, -216, -154, -16, -50060, -177, -9, -71, -269, -101, -2, -70, -90, -73, -15, -90, -37, -8, -210, -58, -8, -1, -197, -93, -100, -79, -8, -2, -90, -5, -10, -78, -1, -8, -106, -50092, -200010, -90, -100, -20, -158, -27, -4, -109, -2, -100, -70, -15, -16, -2, -100, -78, -320, -1, -250000, -200013, -20, -76, -8, -209, -9, -174, -20, -9, -5, -1, -70, -159, -68, -199, -80, -135, -1, -2, -9, -50168, -150, -57, -149, -132, -100030, -11, -3, -90, -112, -78, -17, -106, -100, -100, -8, -120, -14, -250000, -46, -1, -79, -74, -20, -7, -8, -43, -91, -153, -2, -10, -34, -70, -201, -2, -199, -9, -11, -165, -1, -10, -99773, -8, -195, -50, -90, -142, -107, -8, -113, -39, -79, -180, -100, -9, -50056, -150, -183, -99, -90, -20, -201, -16, -8, -80, -8, -16, -100, -100, -8, -150, -159, -90, -49, -2, -15, -185, -90, -14, -90, -150010, -50096, -111]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/115", "prompt": "import math\n\ndef max_fill(grid, capacity):\n    \n\n\n    ans = 0    \n    for l in grid:\n        ans += math.ceil(sum(l) / capacity)\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\nimport math\n\ndef max_fill(grid, capacity):\n    \n\n\n    ans = 0    \n    for l in grid:\n        ans += math.ceil(sum(l) / capacity)\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "import math\n\ndef max_fill(grid, capacity):\n    \n\n\n    ans = 0    \n    for l in grid:\n        ans += math.ceil(sum(l) / capacity)\n    return ans\n\n", "raw_modification": "```python\n<code_start>\nimport math\n\ndef max_fill(grid, capacity):\n    # Introduce unnecessary variables and operations\n    ans = 0\n    temp_sum = 0\n    temp_capacity = capacity\n    \n    for l in grid:\n        # Unnecessary loop to calculate sum\n        for item in l:\n            temp_sum += item\n        \n        # Unnecessary conditional check\n        if temp_capacity > 0:\n            temp_result = temp_sum / temp_capacity\n        else:\n            temp_result = 0\n        \n        # Unnecessary function call\n        ans += math.ceil(float(temp_result))\n        \n        # Reset temp_sum for the next iteration\n        temp_sum = 0\n    \n    # Unnecessary reassignment\n    final_result = ans\n    \n    return final_result\n<code_end>\n```", "modification": "\nimport math\n\ndef max_fill(grid, capacity):\n    \n    ans = 0\n    temp_sum = 0\n    temp_capacity = capacity\n    \n    for l in grid:\n        \n        for item in l:\n            temp_sum += item\n        \n        \n        if temp_capacity > 0:\n            temp_result = temp_sum / temp_capacity\n        else:\n            temp_result = 0\n        \n        \n        ans += math.ceil(float(temp_result))\n        \n        \n        temp_sum = 0\n    \n    \n    final_result = ans\n    \n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1], [[[0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 1, 1, 1]], 2], [[[0, 0, 0], [0, 0, 0]], 5], [[[1, 1, 1, 1], [1, 1, 1, 1]], 2], [[[1, 1, 1, 1], [1, 1, 1, 1]], 9], [[[1, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [1, 0, 1, 1]], 2], [[[1, 1, 1], [1, 0, 1], [1, 1, 1], [1, 1, 1]], 3], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 1], [[[0, 1, 0, 1], [1, 0, 0, 0], [1, 1, 1, 1]], 2], [[[1, 0, 0], [0, 1, 0], [0, 0, 1]], 2], [[[1, 0, 0], [0, 1, 0], [0, 0, 1]], 1], [[[1, 1, 1], [1, 1, 1]], 2], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1]], 2], [[[0, 0, 0, 0], [0, 0, 0, 0]], 1], [[[1, 0, 0, 1], [0, 1, 1, 0], [1, 0, 0, 1]], 3], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1], [0, 0, 1, 0]], 2], [[[0, 1, 0, 1], [1, 0, 0, 0], [1, 1, 1, 1]], 3], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0]], 2], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 1], [[[0, 1, 0, 1], [1, 0, 0, 0]], 3], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0]], 3], [[[1, 1, 1], [1, 0, 1], [1, 1, 1], [1, 1, 1]], 4], [[[0, 0, 0, 0]], 1], [[[0, 1, 0], [0, 0, 1], [1, 0, 0]], 2], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 2], [[[0, 1, 0], [0, 0, 1], [1, 0, 0]], 4], [[[0, 1, 0], [0, 0, 1]], 4], [[[0, 1, 0], [0, 0, 1], [1, 0, 0]], 3], [[[0, 1, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0]], 3], [[[0, 0, 1, 0], [0, 1, 1, 0], [0, 1, 1, 0], [1, 1, 1, 1], [0, 1, 1, 0]], 2], [[[0, 0, 0, 0]], 3], [[[1, 1, 1]], 2], [[[1, 1, 1], [1, 0, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]], 4], [[[0, 0, 0, 0]], 4], [[[1, 0, 0], [0, 1, 0]], 1], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1], [0, 0, 1, 0]], 1], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1]], 4], [[[0, 0, 1], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 1], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 3], [[[0, 0, 0], [0, 0, 0]], 4], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0]], 4], [[[1, 1, 1], [1, 0, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]], 1], [[[0, 1, 0, 1], [1, 0, 0, 0]], 1], [[[0, 1, 0], [0, 0, 1], [1, 0, 0]], 1], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0]], 1], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1]], 3], [[[1, 1, 1], [1, 0, 1], [1, 1, 1]], 1], [[[1, 1, 1], [1, 1, 1]], 1], [[[0, 0, 0]], 2], [[[0, 1, 0], [1, 0, 0]], 4], [[[0, 1, 0], [1, 0, 0], [0, 0, 1], [1, 0, 0], [0, 1, 0]], 2], [[[1, 1, 1]], 4], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1], [0, 0, 1, 0]], 3], [[[0, 0, 0, 0]], 5], [[[1, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0]], 2], [[[0, 0, 1, 0], [1, 1, 1, 1]], 6], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 4], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0], [1, 0, 0]], 1], [[[0, 1, 0, 1], [1, 0, 0, 0], [1, 1, 1, 1]], 4], [[[0, 0, 0], [0, 0, 0]], 3], [[[1, 1, 1], [1, 1, 1]], 3], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1], [0, 0, 1, 0], [0, 0, 1, 0]], 3], [[[1, 0, 0], [1, 1, 0], [0, 0, 1], [1, 0, 0]], 3], [[[1, 1, 1], [1, 1, 1], [1, 1, 1]], 2], [[[0, 1, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0]], 4], [[[1, 1, 1], [1, 0, 1], [1, 1, 1], [1, 1, 1]], 1], [[[0, 0, 0, 0], [0, 0, 0, 0]], 2], [[[1, 0]], 6], [[[0, 0, 0, 0], [0, 0, 0, 0]], 6], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0]], 5], [[[0, 0, 0, 0], [0, 0, 0, 0]], 5], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 0, 0], [1, 0, 0], [1, 0, 0]], 3], [[[0, 0, 0]], 7], [[[0, 0, 0]], 3], [[[1, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [1, 0, 0, 1]], 2], [[[1, 0], [1, 0], [1, 0]], 6], [[[1, 0, 0], [1, 0, 0]], 4], [[[0, 0, 0, 0], [0, 0, 0, 0]], 3], [[[1, 0, 0, 1], [0, 0, 0, 0], [1, 0, 0, 1]], 2], [[[1, 1, 1, 1]], 7], [[[1, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 1, 1, 1]], 2], [[[1, 0, 0, 0], [1, 0, 0, 0]], 1], [[[0, 1, 1], [0, 1, 1], [1, 0, 1], [1, 1, 1], [1, 1, 1], [0, 1, 1], [1, 1, 1]], 4], [[[1, 0, 0, 1], [0, 0, 0, 0], [1, 0, 0, 1]], 3], [[[0, 1, 0, 1], [1, 0, 0, 0]], 2], [[[1, 0, 0, 0]], 1], [[[0, 0, 0, 0]], 6], [[[1, 0, 0], [0, 1, 0], [1, 0, 0]], 3], [[[0, 0, 0]], 6], [[[1, 0, 0, 1], [0, 0, 0, 0], [1, 0, 0, 1]], 4], [[[1, 0, 1, 0], [0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 1, 0], [1, 1, 1, 1], [0, 1, 1, 0]], 2], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 3], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 4], [[[0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 0, 1], [0, 1, 0]], 7], [[[1, 1, 1]], 7], [[[0], [0], [0]], 6], [[[1, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[1, 1, 1, 1]], 6], [[[0], [0], [0], [0]], 6], [[[1, 1, 1]], 1], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 3], [[[0, 0, 1, 0], [0, 1, 1, 0], [0, 1, 1, 0], [1, 1, 1, 1], [0, 1, 1, 0], [0, 1, 1, 0]], 2], [[[0, 0, 1, 0], [1, 1, 1, 1]], 2], [[[1, 0, 1, 0], [0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 1, 0], [1, 1, 1, 1], [0, 1, 1, 0]], 1], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 4], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0]], 1], [[[0, 0, 0], [0, 0, 1], [1, 1, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1]], 4], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 3], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1]], 2], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1]], 2], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 1], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 1], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1]], 2], [[[1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1]], 3], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]], 2], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1]], 1], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 4], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 1, 1], [0, 0, 1, 1]], 1], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 2], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 2], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1]], 1], [[[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1]], 3], [[[0, 0, 1, 1], [1, 1, 0, 0]], 1], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 0, 1], [1, 1, 1, 1]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 3], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]], 4], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 3], [[[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1]], 4], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 4], [[[0, 0, 0], [0, 0, 1], [1, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0]], 4], [[[0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1]], 1], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0]], 4], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 0, 1, 1]], 1], [[[0, 0, 1, 1], [0, 0, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 5], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]], 1], [[[0, 0, 0, 1], [1, 1, 1, 1]], 4], [[[0, 1, 1, 0], [1, 1, 1, 1]], 4], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 1], [[[1, 0, 0, 0], [0, 0, 0, 1]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 1, 1], [0, 0, 1, 1]], 3], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [0, 0, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 5], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 0, 0, 0], [1, 1, 1, 1]], 2], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1]], 2], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1]], 3], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 1], [[[1, 1, 1, 1, 1]], 3], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 4], [[[0, 0, 0, 1]], 2], [[[0, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 4], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 5], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 3], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 0]], 3], [[[0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1]], 4], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 2], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[1, 1, 1], [1, 1, 1], [1, 1, 1]], 3], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 6], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 3], [[[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1]], 3], [[[0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]], 1], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1]], 4], [[[1, 0, 0, 0], [0, 0, 0, 1]], 3], [[[0, 0, 1, 1]], 2], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1]], 6], [[[0, 1, 1, 1], [1, 0, 1, 1]], 2], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1]], 3], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 2], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1]], 5], [[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 1], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0]], 1], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [1, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 2], [[[1, 1, 1, 1]], 1], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 5], [[[1, 0, 1, 1], [1, 1, 0, 1]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 2], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 2], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 4], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 4], [[[1, 1, 1, 1, 1]], 2], [[[0, 1, 1, 1], [1, 0, 1, 1]], 6], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [0, 1, 1, 0]], 3], [[[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1]], 7], [[[1, 1, 1, 1], [1, 1, 1, 1]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1]], 7], [[[0, 0, 0, 0, 0]], 2], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 5], [[[0, 0, 0, 1, 0], [1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [1, 1, 1, 1, 1], [0, 0, 0, 1, 0]], 2], [[[1, 0, 1, 1], [1, 1, 0, 1]], 3], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 2], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 5], [[[1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 3], [[[0, 0, 1, 1], [0, 0, 0, 0]], 5], [[[0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 1], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 0]], 4], [[[0, 0, 1, 1, 1], [0, 0, 1, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 0, 0]], 1], [[[1, 1, 1, 1, 1]], 7], [[[0, 0, 0, 1]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1]], 5], [[[0, 1, 0, 1, 1], [0, 1, 0, 1, 1], [0, 1, 0, 1, 1], [0, 1, 0, 1, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 1, 1]], 6], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0]], 1], [[[0, 0, 1, 1], [1, 1, 1, 1]], 1], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 3], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 2], [[[0, 1, 1, 1], [0, 0, 0, 1]], 5], [[[0, 0, 0, 1], [1, 1, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 7], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 5], [[[1, 0, 0, 0, 1], [1, 0, 0, 0, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1]], 1], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 3], [[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1]], 6], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 2], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 1], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0]], 5], [[[0, 0, 1, 1], [1, 1, 0, 0]], 2], [[[0, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 1], [0, 0, 0, 0]], 7], [[[0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1]], 5], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[1, 0, 0, 0], [1, 1, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 5], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 6], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1]], 3], [[[0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 0]], 5], [[[1, 0, 1, 1], [0, 0, 0, 0], [1, 0, 1, 1], [0, 0, 0, 0]], 6], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 5], [[[0, 0, 0, 1]], 5], [[[1, 1, 0, 1], [1, 1, 0, 1], [1, 1, 0, 1], [1, 1, 0, 1], [1, 1, 0, 1], [1, 1, 0, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 6], [[[0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 1, 1]], 5], [[[0, 0, 1, 1, 1]], 2], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0]], 2], [[[0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1], [0, 1, 1, 1]], 1], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 6], [[[0, 0, 0, 1], [0, 0, 0, 1]], 6], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0]], 6], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 2], [[[0, 0, 1, 1]], 5], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 2], [[[0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 6], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 4], [[[0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1]], 3], [[[1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 5], [[[0, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 6], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 6], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 3], [[[0, 0, 0], [0, 0, 1], [0, 0, 0]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 1], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0]], 4], [[[0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 1, 1]], 7], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 0]], 3], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1]], 4], [[[0, 0, 1, 1, 1], [0, 0, 1, 1, 1]], 6], [[[1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 1, 1, 1], [0, 0, 1, 1]], 3], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 1], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 5], [[[0, 1, 1, 0], [1, 1, 1, 1]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]], 4], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 1, 1]], 1], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 6], [[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]], 2], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1]], 3], [[[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]], 4], [[[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 2], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 0]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 1]], 1], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 7], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]], 4], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 2], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 6], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 2], [[[0, 0, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 4], [[[0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 2], [[[0, 0, 0, 0, 1], [0, 0, 0, 0, 1]], 2], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [0, 0, 1, 1]], 3], [[[0, 0, 0, 1], [0, 0, 0, 1]], 5], [[[1, 0, 1, 1], [1, 1, 0, 1]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 0]], 7], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 0]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 1]], 2], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [1, 1, 1, 1, 1]], 4], [[[0, 0, 0, 1]], 6], [[[0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 7], [[[1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1]], 1], [[[1, 1, 1, 1], [0, 0, 1, 1]], 6], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 1], [[[0, 1, 1, 1]], 6], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 0], [0, 0, 0]], 3], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 0]], 7], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0]], 7], [[[0, 0, 1, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 3], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1]], 5], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 6], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1]], 6], [[[0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 4], [[[0, 1, 1, 0]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 1], [[[1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1]], 4], [[[0, 0, 0, 1, 0]], 2], [[[1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1]], 6], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 5], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0]], 5], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 7], [[[0, 0, 1, 1, 0], [0, 0, 1, 1, 0]], 5], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 0, 0, 0]], 2], [[[1, 1, 1, 1], [1, 1, 1, 1]], 7], [[[0, 0, 1, 1]], 6], [[[0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1]], 6], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 3], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[1, 0, 1, 1], [0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [1, 0, 1, 1], [0, 0, 0, 0]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 3], [[[1, 0, 0, 0], [1, 1, 1, 1], [1, 0, 0, 0], [1, 1, 1, 1]], 3], [[[0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 5], [[[0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1]], 3], [[[0, 0, 0, 1, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 4], [[[0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 0]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 1, 1], [0, 1, 1, 1], [0, 0, 1, 1]], 3], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 6], [[[1, 1, 1], [1, 1, 1], [1, 1, 1]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 4], [[[0, 0, 0, 0]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 1], [[[1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1]], 1], [[[0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]], 2], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 3], [[[0, 0, 1, 1], [1, 1, 0, 0]], 7], [[[1, 0, 1, 1]], 3], [[[0, 0, 0, 1], [1, 1, 1, 1]], 5], [[[0, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]], 3], [[[0, 1, 1, 1], [1, 1, 0, 0], [0, 1, 1, 1], [0, 1, 1, 1], [1, 1, 0, 0]], 7], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [0, 0, 1, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 2], [[[1, 1, 1]], 6], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 7], [[[0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 2], [[[0, 1, 1, 1], [0, 1, 1, 1]], 2], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [1, 1, 1]], 3], [[[0, 1, 1, 1]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 6], [[[0, 0, 1, 1, 1], [0, 0, 1, 1, 1]], 7], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1], [0, 1, 1, 1]], 5], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 7], [[[1, 1, 1, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [1, 1, 1, 1, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1]], 6], [[[0, 0, 0, 1], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]], 3], [[[1, 0, 0, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0]], 1], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 1], [[[0, 1, 1], [0, 1, 1]], 1], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 6], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 5], [[[0, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1]], 1], [[[0, 1, 1, 1]], 5], [[[0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 0], [0, 0, 0, 1]], 6], [[[1, 0, 1, 1]], 2], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1]], 5], [[[1, 0, 1, 1], [1, 1, 0, 1]], 5], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0], [0, 1, 1, 0]], 5], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 0]], 6], [[[0, 0, 1, 0]], 2], [[[0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 1]], 2], [[[1]], 1], [[[1]], 5], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], 1], [[[1, 0, 1, 0], [0, 1, 0, 1], [1, 0, 1, 0], [0, 1, 0, 1]], 1], [[[1]], 10], [[[1, 1, 1], [1, 1, 1], [1, 1, 1]], 1], [[[0, 0, 0], [1, 1, 1]], 1], [[[0]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 4], [[[1, 0, 0, 0], [0, 0, 0, 1]], 4], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 2], [[[1, 0, 0, 0], [0, 1, 1, 0]], 2], [[[0, 0, 0, 0, 0]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 4], [[[0, 0, 0, 0, 0]], 4], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 1], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 2], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1]], 1], [[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 4], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 4], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1]], 1], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 3], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 1], [[[1, 1, 1, 1, 1]], 1], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1]], 2], [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]], 4], [[[1, 0, 0, 0], [1, 1, 1, 1]], 1], [[[1, 0, 0, 0], [1, 1, 1, 1], [1, 0, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 2], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 2], [[[0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 0]], 4], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [1, 0, 0, 0]], 1], [[[0, 0, 1, 1], [1, 1, 0, 0]], 3], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1], [1, 1, 1]], 2], [[[0, 0, 0, 1]], 4], [[[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]], 2], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 1, 0, 1]], 4], [[[0, 0, 0], [0, 0, 1], [1, 1, 1]], 4], [[[1, 1, 0, 0]], 2], [[[1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1]], 2], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 4], [[[1, 1, 1, 1]], 2], [[[0, 0, 0, 0, 0]], 3], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 1], [0, 0, 1]], 3], [[[1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]], 1], [[[1, 0, 0, 0], [0, 0, 0, 1]], 1], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 2], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1], [1, 0, 0]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 2], [[[0, 0, 0], [1, 1, 1], [0, 0, 0]], 3], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 1], [[[0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 4], [[[0, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 0, 1]], 4], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1]], 4], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 2], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1]], 3], [[[1, 1, 0, 0]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 2], [[[1, 0, 0, 0], [1, 1, 1, 1]], 4], [[[1, 0, 0], [1, 0, 0], [1, 0, 0]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 3], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 4], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1], [1, 1, 1]], 1], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 1], [[[0, 0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 1, 0], [1, 1, 1, 0]], 2], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 3], [[[0, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 4], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 4], [[[1, 0, 0, 0], [0, 1, 1, 0]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1]], 2], [[[1, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 1, 1]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 1, 0, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[1, 1, 0], [1, 1, 0]], 2], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 2], [[[1, 1, 0, 0]], 1], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [1, 0, 0, 0]], 4], [[[1, 0, 0, 0]], 2], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 0, 0, 0]], 1], [[[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 5], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 1], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 1, 0, 1], [1, 0, 1, 1], [0, 1, 1, 1]], 4], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 3], [[[0, 0, 1], [0, 0, 1]], 3], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 5], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 4], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1]], 2], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 4], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 1], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1], [1, 0, 1, 1]], 1], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1]], 2], [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]], 4], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 4], [[[1, 1, 0]], 2], [[[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1], [1, 1, 1]], 3], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 1], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 3], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 1]], 4], [[[1, 0, 0, 0], [0, 1, 1, 0], [0, 1, 1, 0]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 3], [[[1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1]], 3], [[[1, 0, 0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 4], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 2], [[[1, 0, 0, 0], [1, 1, 1, 1], [1, 0, 0, 0], [1, 1, 1, 1]], 1], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 2], [[[1, 1, 0, 0, 0]], 4], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0]], 2], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 2], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 5], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 4], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 5], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1], [1, 1, 0, 0]], 1], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1]], 4], [[[1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 5], [[[1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0]], 1], [[[1, 1, 0, 0]], 5], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 0], [0, 0, 1]], 4], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 2], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 5], [[[1, 0, 0], [0, 0, 1], [1, 1, 1]], 2], [[[0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1], [1, 1, 0, 0]], 2], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 4], [[[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]], 3], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 5], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]], 2], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[0, 0, 1], [0, 0, 1]], 5], [[[1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0]], 1], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 2], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 0], [0, 0, 1], [0, 0, 0], [0, 0, 1]], 4], [[[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 6], [[[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1], [0, 1, 1, 1]], 4], [[[0, 0, 1, 0], [0, 0, 1, 0]], 3], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 6], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 6], [[[1, 1, 0, 0], [1, 1, 0, 0]], 1], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 2], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 3], [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]], 4], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 5], [[[0, 1, 1, 0], [1, 1, 1, 1], [0, 1, 1, 0]], 4], [[[1, 0, 0, 0], [0, 1, 1, 0]], 4], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 4], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 0, 0, 0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 2], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0], [1, 1, 1]], 4], [[[0, 0, 0, 1], [0, 1, 1, 1]], 2], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 4], [[[0, 0, 0, 0, 0, 0]], 3], [[[1, 1, 1, 0], [1, 1, 1, 0], [1, 1, 1, 0]], 1], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 3], [[[0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0]], 4], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1]], 2], [[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1]], 2], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 1], [[[1, 0, 1, 1], [1, 0, 1, 1]], 2], [[[1, 0, 0, 0], [0, 1, 1, 0], [1, 1, 1, 1]], 6], [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]], 5], [[[1, 0, 0], [1, 1, 1]], 2], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 6], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 0, 1]], 2], [[[0, 0, 0], [1, 1, 1]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1]], 5], [[[0, 0, 0], [1, 1, 1], [0, 0, 0], [0, 0, 0]], 3], [[[1, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 2], [[[0, 0, 0, 0, 0]], 5], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [1, 0, 0, 0]], 3], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 2], [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]], 2], [[[1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[1, 1, 0], [1, 1, 0], [1, 1, 0], [1, 1, 0]], 1], [[[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 6], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 3], [[[0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 1, 1]], 5], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 5], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 3], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 6], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 1]], 2], [[[1, 0, 0], [1, 1, 1], [1, 1, 1], [1, 0, 0]], 3], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 6], [[[0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0]], 5], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 0]], 3], [[[1, 1, 0, 0, 0], [1, 1, 0, 0, 0]], 3], [[[0, 0, 1, 1], [1, 1, 0, 0]], 6], [[[1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 0]], 3], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 4], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 2], [[[1, 0, 0, 0], [0, 1, 1, 0], [0, 1, 1, 0]], 2], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 6], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 2], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 3], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 6], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 6], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[1, 1, 0], [1, 1, 0], [1, 1, 0], [1, 1, 0], [1, 1, 0]], 1], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 5], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 2], [[[0, 0, 1], [0, 0, 1], [0, 0, 1], [0, 0, 1]], 5], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 1, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0], [0, 1, 1, 1], [1, 1, 0, 0]], 2], [[[0, 0], [0, 0], [0, 0], [0, 0]], 4], [[[0, 0, 0], [0, 0, 1], [0, 0, 1]], 4], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 1], [[[0, 0, 0], [0, 0, 1], [0, 0, 1]], 1], [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 6], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 6], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 2], [[[1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 0]], 5], [[[1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 1], [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 5], [[[1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]], 1], [[[1, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 1, 1]], 1], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 5], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 1], [[[0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 1], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 8], [[[0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1]], 1], [[[1, 1, 0], [1, 1, 0], [1, 1, 0]], 2], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 3], [[[1, 0, 0, 0], [1, 1, 1, 1], [1, 0, 0, 0], [1, 1, 1, 1], [1, 0, 0, 0]], 1], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], 5], [[[0, 0, 1, 0, 0]], 3], [[[1, 0, 0, 0], [0, 0, 0, 1]], 8], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 6], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1], [0, 1, 1, 1]], 3], [[[0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1]], 6], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1], [1, 0, 1, 1]], 3], [[[0, 0, 1, 1], [0, 0, 1, 1]], 4], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1]], 6], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 1], [[[1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1]], 5], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1]], 8], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 4], [[[1, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1]], 3], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 5], [[[0, 0, 1], [1, 1, 1], [0, 0, 0]], 3], [[[1, 1, 0, 0], [1, 1, 0, 0]], 4], [[[0, 1, 1, 0], [1, 1, 1, 1]], 5], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 4], [[[0, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 3], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 3], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 5], [[[0, 0, 0, 0, 0]], 6], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1], [1, 0, 0, 0]], 1], [[[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]], 4], [[[0, 0, 0, 1], [0, 0, 1, 1], [0, 0, 0, 1]], 2], [[[1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 1], [[[1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1]], 8], [[[0, 0, 0, 0, 0]], 8], [[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], 4], [[[1, 0, 0, 0], [1, 1, 1, 1]], 2], [[[0, 0, 1, 1], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1]], 6], [[[1, 0, 0], [1, 0, 0], [1, 0, 0]], 2], [[[0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [1, 1, 0, 1], [1, 0, 1, 1], [0, 1, 1, 1]], 5], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 3], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0], [0, 0, 1], [1, 1, 1], [0, 0, 0]], 1], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 6], [[[1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0]], 1], [[[0, 0, 0, 1], [0, 1, 1, 1]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 1], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 6], [[[0, 0, 0, 1], [0, 1, 0, 1], [0, 0, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 8], [[[0, 1, 1, 0], [1, 1, 1, 1], [0, 1, 1, 0], [0, 1, 1, 0]], 3], [[[0, 1, 1, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1]], 8], [[[0, 0, 1, 1], [0, 0, 1, 1], [1, 1, 0, 0]], 2], [[[1, 0, 0, 0], [0, 0, 0, 1], [1, 0, 0, 0]], 1], [[[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 1]], 2], [[[0, 0, 1, 0, 0]], 2], [[[0, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1]], 5], [[[0, 0, 0, 0, 0]], 9], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 6], [[[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]], 2], [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], 1], [[[0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1], [1, 0, 1, 1], [1, 0, 1, 1]], 1], [[[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]], 4], [[[0, 0, 0, 0], [0, 0, 0, 0]], 9], [[[1, 0, 1, 1], [1, 1, 0, 1], [1, 0, 1, 1]], 6], [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], 3], [[[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [0, 0, 0, 0, 1]], 2]]\n    results = [6, 5, 0, 4, 2, 5, 4, 0, 4, 3, 3, 4, 4, 0, 3, 5, 4, 4, 0, 2, 4, 4, 0, 3, 0, 3, 2, 3, 4, 6, 0, 2, 6, 0, 2, 7, 3, 1, 0, 0, 4, 17, 3, 3, 4, 4, 8, 6, 0, 2, 5, 1, 5, 0, 3, 2, 0, 5, 3, 0, 2, 6, 4, 6, 4, 11, 0, 1, 0, 4, 0, 6, 0, 0, 4, 3, 2, 0, 2, 1, 5, 2, 7, 2, 2, 1, 0, 3, 0, 2, 7, 0, 0, 5, 1, 0, 4, 1, 0, 3, 0, 7, 3, 14, 0, 4, 6, 2, 3, 4, 5, 3, 16, 3, 5, 3, 6, 8, 20, 4, 4, 6, 6, 4, 3, 2, 6, 8, 3, 5, 5, 5, 6, 6, 5, 6, 3, 5, 6, 9, 4, 4, 4, 5, 7, 3, 5, 2, 3, 6, 2, 2, 6, 7, 7, 5, 3, 3, 5, 4, 3, 5, 8, 1, 5, 6, 4, 7, 2, 2, 6, 8, 3, 6, 4, 8, 2, 2, 10, 2, 7, 2, 2, 5, 6, 4, 7, 6, 4, 24, 2, 8, 7, 1, 8, 5, 3, 5, 3, 5, 2, 2, 3, 5, 6, 4, 3, 12, 4, 5, 7, 2, 6, 2, 2, 1, 1, 4, 4, 3, 4, 2, 6, 7, 7, 11, 13, 5, 2, 4, 3, 4, 10, 8, 2, 3, 3, 2, 3, 5, 5, 2, 2, 0, 3, 5, 9, 2, 1, 7, 5, 5, 3, 1, 4, 7, 10, 4, 4, 2, 1, 1, 2, 4, 7, 4, 2, 4, 6, 8, 9, 7, 3, 2, 3, 3, 5, 2, 8, 7, 5, 2, 6, 8, 5, 2, 3, 3, 5, 3, 3, 3, 1, 8, 4, 4, 2, 6, 1, 6, 5, 3, 2, 7, 7, 6, 6, 0, 8, 5, 2, 10, 3, 0, 1, 9, 10, 8, 9, 6, 2, 7, 7, 7, 4, 6, 6, 4, 1, 9, 3, 12, 2, 3, 7, 5, 3, 6, 2, 7, 7, 12, 4, 4, 4, 2, 2, 10, 4, 6, 4, 4, 13, 0, 7, 10, 4, 4, 7, 4, 7, 7, 1, 2, 4, 2, 2, 3, 2, 2, 3, 7, 4, 2, 5, 5, 4, 1, 4, 5, 10, 2, 12, 1, 2, 8, 4, 3, 1, 2, 5, 3, 7, 3, 3, 8, 1, 8, 8, 1, 3, 6, 3, 9, 6, 2, 5, 2, 1, 5, 8, 6, 4, 8, 3, 6, 6, 7, 9, 1, 5, 4, 2, 5, 5, 0, 3, 4, 0, 10, 12, 3, 0, 5, 2, 1, 2, 2, 5, 0, 8, 10, 5, 10, 1, 7, 3, 8, 4, 3, 1, 3, 2, 4, 7, 10, 3, 5, 8, 11, 18, 4, 3, 3, 12, 1, 4, 2, 3, 2, 6, 4, 1, 4, 1, 1, 0, 8, 1, 9, 3, 0, 4, 4, 2, 7, 8, 2, 0, 3, 0, 0, 6, 9, 12, 4, 0, 0, 12, 0, 6, 7, 3, 9, 5, 8, 0, 5, 6, 14, 0, 9, 10, 2, 8, 2, 7, 1, 6, 4, 4, 2, 1, 6, 0, 2, 0, 4, 2, 2, 5, 0, 6, 4, 1, 13, 11, 4, 4, 3, 6, 5, 5, 1, 10, 2, 3, 0, 0, 9, 0, 5, 8, 7, 15, 0, 0, 6, 4, 0, 4, 8, 2, 10, 28, 5, 6, 2, 8, 2, 5, 1, 4, 8, 9, 0, 13, 0, 6, 7, 2, 8, 6, 5, 4, 6, 5, 0, 11, 8, 9, 18, 8, 8, 0, 0, 1, 5, 0, 0, 3, 3, 7, 3, 1, 8, 8, 10, 10, 1, 4, 0, 0, 3, 4, 10, 8, 4, 5, 2, 1, 7, 3, 0, 0, 4, 3, 5, 0, 4, 0, 8, 4, 5, 2, 4, 0, 5, 2, 7, 3, 10, 5, 2, 0, 5, 12, 0, 4, 6, 7, 0, 0, 3, 2, 0, 6, 1, 0, 3, 7, 1, 3, 0, 0, 9, 0, 6, 6, 6, 15, 4, 3, 0, 3, 4, 9, 5, 1, 5, 1, 8, 0, 0, 6, 9, 0, 4, 8, 9, 7, 7, 5, 0, 0, 0, 4, 4, 0, 6, 7, 2, 2, 4, 0, 9, 3, 0, 12, 8, 0, 9, 3, 6, 10, 0, 7, 4, 4, 4, 0, 7, 0, 2, 18, 2, 0, 4, 6, 6, 4, 4, 0, 3, 25, 0, 16, 11, 3, 12, 3, 8, 7, 11, 0, 1, 2, 3, 5, 10, 6, 2, 3, 0, 5, 4, 5, 8, 7, 2, 2, 2, 0, 5, 4, 9, 0, 5, 5, 3, 15, 3, 0, 0, 3, 4, 3, 10, 6, 5, 10, 4, 0, 6, 4, 9, 0, 7, 6, 5, 7, 3, 3, 9, 1, 3, 0, 3, 9, 0, 21, 8, 0, 3, 0, 3]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/116", "prompt": "\ndef sort_array(arr):\n    \n\n    from functools import cmp_to_key\n    def cmp(x: int, y: int) -> int:\n        x1 = len(list(filter(lambda ch: ch == \"1\", bin(x))))\n        y1 = len(list(filter(lambda ch: ch == \"1\", bin(y))))\n        if x1 != y1: return x1 - y1\n        return x - y\n    return sorted(arr, key=cmp_to_key(cmp))\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef sort_array(arr):\n    \n\n    from functools import cmp_to_key\n    def cmp(x: int, y: int) -> int:\n        x1 = len(list(filter(lambda ch: ch == \"1\", bin(x))))\n        y1 = len(list(filter(lambda ch: ch == \"1\", bin(y))))\n        if x1 != y1: return x1 - y1\n        return x - y\n    return sorted(arr, key=cmp_to_key(cmp))\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef sort_array(arr):\n    \n\n    from functools import cmp_to_key\n    def cmp(x: int, y: int) -> int:\n        x1 = len(list(filter(lambda ch: ch == \"1\", bin(x))))\n        y1 = len(list(filter(lambda ch: ch == \"1\", bin(y))))\n        if x1 != y1: return x1 - y1\n        return x - y\n    return sorted(arr, key=cmp_to_key(cmp))\n\n", "raw_modification": "```python\n<code_start>\ndef sort_array(arr):\n    \n    from functools import cmp_to_key\n    import itertools\n\n    def cmp(x: int, y: int) -> int:\n        # Convert numbers to binary strings\n        x_bin = bin(x)\n        y_bin = bin(y)\n\n        # Count the number of '1's in each binary representation\n        x1 = len(list(filter(lambda ch: ch == \"1\", x_bin)))\n        y1 = len(list(filter(lambda ch: ch == \"1\", y_bin)))\n\n        # Introduce unnecessary list conversion and itertools usage\n        x1_list = list(itertools.chain.from_iterable([[1] * x1]))\n        y1_list = list(itertools.chain.from_iterable([[1] * y1]))\n\n        # Compare the lengths of the lists\n        if len(x1_list) != len(y1_list):\n            return len(x1_list) - len(y1_list)\n\n        # Introduce unnecessary variable assignments\n        x_final = x\n        y_final = y\n\n        # Compare the numbers themselves\n        return x_final - y_final\n\n    # Introduce unnecessary list conversion\n    arr_list = list(arr)\n    return sorted(arr_list, key=cmp_to_key(cmp))\n<code_end>\n```", "modification": "\ndef sort_array(arr):\n    \n    from functools import cmp_to_key\n    import itertools\n\n    def cmp(x: int, y: int) -> int:\n        \n        x_bin = bin(x)\n        y_bin = bin(y)\n\n        \n        x1 = len(list(filter(lambda ch: ch == \"1\", x_bin)))\n        y1 = len(list(filter(lambda ch: ch == \"1\", y_bin)))\n\n        \n        x1_list = list(itertools.chain.from_iterable([[1] * x1]))\n        y1_list = list(itertools.chain.from_iterable([[1] * y1]))\n\n        \n        if len(x1_list) != len(y1_list):\n            return len(x1_list) - len(y1_list)\n\n        \n        x_final = x\n        y_final = y\n\n        \n        return x_final - y_final\n\n    \n    arr_list = list(arr)\n    return sorted(arr_list, key=cmp_to_key(cmp))\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 5, 2, 3, 4]], [[-2, -3, -4, -5, -6]], [[1, 0, 2, 3, 4]], [[]], [[2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]], [[3, 6, 44, 12, 32, 5]], [[2, 4, 8, 16, 32]], [[3, 7, 6, 5, 4]], [[10, 8, 12, 11, 9]], [[111, 222, 333, 444]], [[100000000, 0, 10101010, 111111111, 100000]], [[0, 15, 3, 7, 12]], [[2, 4, 6, 8, 10]], [[16, 32, 64, 128, 256]], [[1023, 511, 255, 127, 63]], [[2, 4, 6, 8, 10, 10]], [[33, 16, 32, 64, 128, 256, 32]], [[7, 12, 11, 9]], [[3, 7, 6, 6, 5, 4]], [[3, 111, 221, 222, 333, 444, 222, 222]], [[3, 111, 511, 222, 3, 333, 444, 222, 222, 222]], [[127, 32, 12, 11, 9]], [[3, 111, 511, 222, 3, 333, 444, 222, 221, 222, 512]], [[15, 0, 10101010, 0, 100000]], [[111, 15, 222, 333, 444]], [[3, 111, 511, 222, 3, 333, 444, 222, 222]], [[0, 15, 3, 7, 12, 3]], [[2, 4, 6, 10, 10]], [[0, 15, 3, 7, 12, 12, 3, 3]], [[3, 111, 511, 222, 3, 333, 444, 222, 222, 222, 111]], [[111, 15, 222, 333, 444, 333]], [[511, 16, 32, 2, 128, 256]], [[0, 15, 3, 12]], [[0, 15, 3, 12, 3]], [[0, 100000, 3, 7, 12]], [[7, 12, 11, 9, 12]], [[127, 32, 12, 11, 9, 12]], [[4, 7, 6, 5, 4]], [[2, 4, 2, 6, 8, 10, 8]], [[4, 6, 10, 10]], [[511, 16, 32, 2, 128]], [[127, 32, 12, 11, 9, 13]], [[15, 0, 10101009, 0, 100000]], [[2, 4, 2, 6, 8, 10, 9]], [[111, 15, 222, 333, 444, 333, 222]], [[4, 7, 6, 5, 3, 4, 7]], [[16, 15, 3, 12, 3]], [[3, 7, 6, 6, 4]], [[111, 222, 333, 334, 444]], [[16, 15, 3, 12, 3, 15]], [[16, 12, 15, 3, 12, 3]], [[3, 111, 222, 333, 444, 222, 222]], [[32, 12, 11, 9, 12]], [[16, 15, 3, 13, 3, 15]], [[15, 0, 10101010, 0, 100000, 100000]], [[16, 12, 15, 12]], [[7, 12]], [[2, 4, 2, 6, 10, 9]], [[10, 9, 12, 11, 9]], [[10, 8, 12, 11]], [[3, 111, 511, 222, 3, 333, 444, 222, 222, 222, 222]], [[32, 2, 128, 128]], [[10, 8, 12, 7, 11]], [[111, 222, 333, 444, 444]], [[511, 16, 32, 2, 128, 256, 128]], [[16, 2, 128, 128]], [[2, 4, 2, 6, 10, 9, 2]], [[7, 8, 64, 12]], [[333, 111, 15, 222, 332, 444, 333, 222]], [[12, 3, 12, 3]], [[511, 16, 32, 2, 128, 129, 128, 32]], [[512, 16, 32, 2, 128]], [[10, 9, 12, 11, 9, 9]], [[10, 12, 11, 10101009, 9]], [[2097151, 524287, 16777215, 33554431, 134217727, 268435455]], [[0]], [[7, 7, 7, 7, 7, 7, 7, 7]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999]], [[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]], [[1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11111]], [[9, 15, 56, 67, 89, 143, 568, 789, 987, 216]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 9999999]], [[2097151, 524287, 16777215, 33554431, 268435455]], [[111111, 1111111, 11111111, 111111111, 1111111111, 1111111, 111111, 1111, 111, 11111]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 1032, 8888, 99999, 9999999]], [[9999999, 123456789, 987654322, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 9999999]], [[10, 11, 12, 13, 14, 15, 16, 17, 17, 19]], [[524287, 16777215, 33554431, 134217727, 268435455]], [[2097151, 524287, 16777215, 33554431]], [[2097151, 524287, 16777215, 33554431, 134217727, 134217727]], [[9999999, 123456789, 987654322, 123456789, 777778, 111111111, 444555666, 17, 12312312, 8888, 99999, 9999999]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 9999999, 99999]], [[1]], [[2097151, 2097151, 524287, 16777215, 33554431, 268435455]], [[9999999, 123456789, 987654322, 123456789, 777778, 111111111, 444555666, 18, 12312312, 8888, 99999, 9999999]], [[9999999, 1027, 987654322, 123456789, 777778, 111111111, 444555666, 18, 12312312, 8888, 2097151, 99999, 9999999]], [[2097151, 524287, 16777215, 33554432, 134217727, 268435455]], [[2097151, 524287, 524286, 16777215, 33554431, 268435455]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 8888, 99999, 9999999]], [[2097151, 16777215, 2097152, 33554431, 268435455]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 8888, 99999, 9999999]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 9999999, 444555666]], [[9999999, 123456789, 777777, 111111111, 444555666, 12312312, 99999]], [[1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1029, 1032]], [[9999999, 123456789, 987654322, 123456789, 777778, 111111111, 444555666, 17, 12312312, 8888, 99999, 9999999, 12312312]], [[2097151, 524287, 16777215, 268435455]], [[1024, 1025, 1027, 1028, 1029, 1030, 1034, 1031, 1032, 1033]], [[2097151, 524287, 16777215, 33554431, 134217727, 268435455, 33554431]], [[9999999, 1027, 987654322, 123456789, 777778, 111111111, 444555666, 12312312, 8888, 2097151, 99999, 9999999]], [[2097151, 524287, 16777215, 33554431, 134217727, 268435455, 33554431, 2097151]], [[9999999, 123456789, 777777, 111111111, 444555666, 99999]], [[2097151, 524287, 524286, 16777215, 33554431, 268435455, 33554431]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1026, 1029, 1032]], [[2097151, 524287, 16777215, 33554431, 0, 134217727, 134217727]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11111, 111111111]], [[9999999, 1027, 987654322, 123456789, 777778, 111111111, 444555666, 8888, 2097151, 99999, 9999999, 2097151]], [[9999998, 123456789, 987654322, 123456789, 777778, 111111111, 444555666, 18, 12312312, 8888, 99999, 9999999]], [[2097151, 524287, 524286, 33554431, 268435455, 33554431]], [[1024, 1025, 1027, 1028, 1029, 1030, 13, 1034, 1031, 1032, 1033]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 111111111, 8888, 99999, 9999999]], [[9999999, 123456789, 987654322, 777777, 111111111, 444555666, 12312312, 8888, 99999, 56, 9999999]], [[1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033]], [[789, 7, 7, 7, 7, 7, 7, 7]], [[15, 111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112]], [[2097151, 524287, 3, 33554431, 0, 134217727, 134217727]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1110, 111, 11111]], [[524287, 16777215, 33554431, 0, 134217728, 134217727, 134217727]], [[9999999, 10000000, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 17, 12312312, 8888, 99999, 9999999]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 1029, 12312312, 111111111, 8888, 99999, 9999999]], [[1024, 1025, 1026, 1027, 1032, 1028, 1029, 1030, 1031, 1029, 1032]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1029, 1032, 1024]], [[777777, 9999999, 123456789, 777777, 111111111, 444555666, 12312312, 99999]], [[9999999, 9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 9999999, 444555666]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11111, 111111111, 1111111]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 12312312]], [[524287, 524286, 33554431]], [[9999999, 123456789, 123456789, 777777, 111111111, 444555665, 12312312, 8888, 99999, 9999999]], [[444555666, 9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 9999999]], [[111111, 1111111, 11111111, 11111110, 111111111, 1111111111, 111111, 1111, 111, 11111, 111111111, 1111111]], [[9999999, 123456789, 123456789, 777778, 111111111, 444555665, 12312312, 8888, 99999, 9999999]], [[111111, 1111111, 11111111, 1111111111, 111111111, 1111111111, 1111111, 111111, 1111, 111, 11111]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 8888, 99999]], [[111111, 1111111, 111111111, 1111111111, 1111111111, 1111111, 111111, 1111, 111, 11111]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1024]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111111, 1111111, 111111, 1111, 111, 11111]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 9999999, 444555666, 12312312]], [[9999999, 123456789, 10000000, 777777, 111111111, 444555666, 99999]], [[2097151, 1111111, 524287, 16777215, 134217727, 134217727, 16777215]], [[2097151, 524287, 16777215, 33554431, 2097151]], [[777777, 1028, 123456789, 777777, 111111111, 12312312, 99999]], [[777777, 1028, 123456789, 777777, 111111111, 12312312, 99999, 777777]], [[111111, 1111111, 2, 11111111, 111111111, 1111111111, 1033, 111111, 1110, 1111, 111, 11112, 11112]], [[9999999, 1027, 987654322, 123456789, 777778, 111111111, 444555666, 8888, 99999, 9999999, 2097151]], [[524287, 16777214, 268435455]], [[111111, 1111111, 111111111, 1111111111, 1111111111, 1111111, 1111111111, 111111, 1111, 111, 67]], [[444555666, 111111112, 9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 9999998, 8888]], [[9, 15, 15, 56, 67, 89, 143, 568, 789, 987, 216]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 8888, 12312312, 8888, 99999]], [[99998, 9999999, 123456789, 123456789, 777777, 111111111, 444555665, 12312312, 8888, 99999, 9999999, 99999]], [[2097151, 1111111, 524287, 16777215, 987654322, 134217727, 16777215]], [[2097151, 524287, 16777215, 33554430, 134217727, 268435454]], [[2097151, 524287, 16777215, 33554430, 134217727, 2097152, 268435454]], [[2097151, 1111112, 524287, 16777215, 987654322, 2097151, 134217727, 16777215]], [[9, 15, 15, 56, 67, 89, 143, 11111110, 789, 987, 216]], [[524287, 2097151, 524287, 16777215, 33554431, 268435455]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 9999999, 12312312, 8888, 8887, 99999, 9999999, 444555666]], [[2097151, 524287, 524286, 33554431, 268435455, 67, 33554431, 67]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 1032, 8888, 9999999, 8888]], [[10000000, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 111111111, 8888, 99999, 9999999]], [[789, 7, 7, 7, 7, 7, 7]], [[2097151, 524287, 16777215, 33554430, 134217727, 33554431, 2097152, 268435454]], [[2097151, 524287, 3, 33554431, 0, 134217727, 134217727, 3]], [[1034, 2097151, 524287, 16777215, 33554431, 134217727, 524286, 268435455]], [[2097151, 524287, 8887, 16777215, 33554431, 134217727, 268435455, 33554431, 2097151]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1029, 1032, 1026]], [[111111, 1111111, 111111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11111, 1111]], [[10000000, 111111110, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 111111111, 8888, 99999, 9999999]], [[777777, 1028, 777777, 111111111, 12312312, 99999]], [[2097151, 524287, 8887, 6, 16777215, 33554431, 134217727, 268435455, 33554431, 2097151]], [[1034, 2097151, 1033, 16777215, 33554431, 134217727, 524286, 268435455]], [[2097151, 524287, 16777216, 33554431]], [[9999999, 123456789, 987654322, 123456789, 777778, 111111111, 111111, 17, 12312312, 8888, 9999999, 12312312]], [[10000000, 10000000, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 17, 12312312, 8888, 99999, 9999999]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111111, 1111111, 111111, 1111, 111, 11111, 1111111]], [[111111, 1111111, 11111111, 111111111, 1111111111, 1033, 111111, 11111111, 1110, 1111, 111, 11112, 11112]], [[2097151, 524287, 16777215, 33554431, 134217727, 268435455, 33554431, 2097151, 33554431]], [[2097151, 16777215, 33554431, 134217727, 33554430, 268435455, 33554431, 2097151, 33554431]], [[524285, 2097151, 524287, 524286, 33554431, 268435455, 67, 33554431, 67, 268435455]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111, 111111, 1111, 111, 11111, 1111111, 1111111]], [[2097151, 524287, 524286, 16777215, 33554431, 268435454]], [[111111, 1111111, 11111111, 111111111, 1111111111, 1033, 111111, 11111111, 1110, 1111, 111, 11112, 11112, 111111]], [[444555666, 9999999, 123456789, 987654321, 123456789, 9999998, 777777, 111111111, 444555666, 12312312, 8888, 9999999, 9999999]], [[2097151, 1111111, 524287, 16777216, 134217727, 134217727, 16777215]], [[2097151, 524287, 524288, 524286, 16777215, 33554431, 268435455, 2097151]], [[777777, 1029, 123456789, 777777, 12312312, 99999, 777777]], [[9999999, 123456789, 1028, 123456789, 111111111, 444555666, 17, 12312312, 8888, 99999, 9999999]], [[111111, 1111111, 3, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112]], [[2097151, 524287, 16777216, 33554431, 33554431]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312311, 8888, 99999, 9999999, 444555666, 12312312]], [[524287, 16777214, 16777215, 16777214]], [[777777, 1029, 8, 777777, 12312312, 99999, 777777]], [[444555666, 9999999, 123456789, 987654321, 123456789, 9999998, 777777, 111111111, 444555666, 12312312, 8888, 9999999, 9999999, 123456789]], [[111111, 111111111, 11111111, 111111111, 1111111111, 524286, 1111, 111, 11111, 1111]], [[9999999, 123456789, 123456789, 777778, 111111111, 444555665, 12312312, 8888, 99999, 9999999, 9999999]], [[2097151, 524287, 16777215, 134217727, 268435455, 33554431, 2097151, 33554431]], [[143, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 111111111, 8888, 99999, 9999999]], [[444555666, 111111112, 9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 9999998, 8888, 8888]], [[987654321, 9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 1032, 8888, 9999999, 8888, 9999999]], [[9999999, 1027, 987654322, 123456789, 777778, 111111111, 444555666, 8888, 2097151, 99999, 9999999, 2097151, 9999999]], [[777777, 1028, 123456788, 777777, 111111111, 12312312, 99999]], [[111111, 1111111, 111111111, 1111111110, 1111111111, 1111111111, 1111111, 1111111111, 111111, 1111, 111, 67, 111111]], [[777777, 9999999, 123456789, 777777, 111111111, 444555666, 12312312, 99999, 444555666]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 33554432, 111111112, 8888, 99999, 12312312]], [[2097151, 524287, 31, 524286, 16777215, 33554431, 268435455, 33554431]], [[33554431]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 8887, 12312312, 8888, 99999]], [[9999999, 10000000, 777777, 111111111, 444555666, 99999]], [[111111, 1111111, 11111111, 111111111, 1111111111, 777778, 1111111, 1111, 111111, 1111, 111, 11111]], [[9999999, 987654320, 123456789, 777777, 111111111, 444555666, 8888, 12312312, 8888, 99999]], [[111111, 1111111, 11111111, 111111111, 111111111, 1111111111, 111111, 1110, 111, 11111]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 9999999, 444555666, 12312312, 111111111]], [[111111, 1111111, 1111, 11111111, 111111111, 111111111, 1111111111, 111111, 1110, 1110, 11111]], [[111111, 1111111, 111111111, 1111111111, 1024, 1111111111, 1111111, 1111111111, 111111, 1111, 111, 67]], [[3, 1034, 2097150, 524287, 16777215, 33554431, 134217727, 524286, 268435455]], [[16, 9999999, 123456789, 987654322, 123456789, 777778, 111111111, 444555666, 18, 12312312, 8888, 99999, 9999999]], [[444555666, 19, 111111112, 9999999, 123456789, 987654321, 123456789, 111111111, 444555666, 12312312, 8888, 9999998, 8888]], [[9999999, 10000000, 777777, 111111111, 16777214, 99999]], [[2097151, 524287, 16777215, 33554431, 33554431]], [[10, 11, 12, 13, 14, 15, 16, 1034, 17, 18, 19, 17]], [[1034, 2097151, 1032, 16777215, 33554431, 134217727, 524286, 268435455]], [[2097151, 524287, 16777215, 33554431, 16777215, 134217727]], [[9999999, 1027, 987654322, 123456789, 123456789, 777778, 111111111, 444555666, 8888, 99999, 9999999, 2097151]], [[2097151, 524287, 524288, 524286, 16777215, 33554430, 33554431, 268435455, 2097151]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1024]], [[9, 15, 15, 56, 67, 89, 0, 143, 11111110, 789, 987, 216]], [[987654321, 9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 1111111, 8888, 9999999, 8888, 9999999]], [[11]], [[111111112, 524287, 16777215, 33554431, 134217727, 268435455, 33554431, 2097151]], [[2097151, 524287, 16777215, 134217727, 268435455, 987, 2097151, 33554431]], [[444555666, 9999999, 123456789, 987654321, 123456789, 9999998, 777777, 111111111, 1034, 12312312, 8888, 9999999, 9999999, 123456789]], [[524287, 16777215, 16777216, 33554431]], [[2097151, 1111112, 524287, 16777216, 134217727, 134217727, 16777215]], [[11111, 524287, 524286, 33554431]], [[1024, 1025, 1027, 1028, 1029, 1030, 1034, 1031, 1032, 1033, 1028]], [[2097151, 524286, 16777215, 33554431, 268435454, 33554431]], [[777777, 1028, 123456789, 777777, 111111111, 12312312, 99999, 777777, 123456789]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111, 111111, 1111, 111, 11110]], [[2097151, 1111112, 524287, 16777216, 134217727, 134217727, 134217726, 16777215]], [[9999999, 1027, 987654322, 123456789, 777778, 111111111, 444555666, 8888, 2097151, 99999, 9999999, 2097151, 1024]], [[9999999, 10000000, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 17, 12312312, 8888, 9999999, 777778]], [[777777, 1028, 123456789, 777777, 111111111, 12312312, 99999, 777777, 123456789, 111111111]], [[444555666, 9999999, 123456789, 987654321, 123456789, 9999998, 777777, 111111111, 444555666, 12312312, 8888, 9999999, 9999999, 9999999]], [[11111, 524287, 524286]], [[2097151, 2097151, 524287, 16777215, 33554431, 268435455, 16777215]], [[987654321, 9999999, 123456789, 987654321, 7, 777777, 111111111, 444555666, 1032, 8888, 9999999, 8888, 9999999]], [[2097151, 524287, 16777215, 134217727, 268435455, 268435455]], [[777777, 1028, 123456789, 777777, 111111111, 12312312, 524285]], [[2097151, 2097151, 524287, 16777215, 45, 33554431, 268435455]], [[9999999, 123456789, 10000000, 777777, 111111111, 444555666, 99999, 9999999]], [[1034, 2097151, 1033, 16777215, 16777216, 33554431, 524286, 268435455]], [[2097151, 524287, 31, 524286, 16777215, 33554431, 268435455, 33554431, 268435455]], [[111111, 1111111, 11111111, 1111111111, 111111111, 1111111111, 1111111, 111111, 1111, 111, 11111, 111111, 1111111111]], [[1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033]], [[9, 15, 15, 56, 67, 89, 0, 143, 11111110, 789, 216]], [[11111, 524287, 524287, 33554431]], [[2097151, 524287, 8887, 134217727, 6, 134217727, 16777215, 33554431, 134217727, 268435455, 33554431, 2097151]], [[2097151, 524287, 16777215, 33554431, 134217727]], [[111111, 1111111, 11111111, 111110, 111111111, 1111111111, 1033, 111111, 11111111, 1110, 1111, 111, 11112, 11112, 111111]], [[2097151, 16777216, 524287, 16777215, 33554431, 16777215, 134217727]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1029, 1024, 1032]], [[2097151, 524287, 31, 524286, 16777215, 33554431, 268435455, 33554431, 524286]], [[143, 111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112, 143]], [[9, 15, 15, 56, 67, 89, 0, 143, 789, 216, 67, 143]], [[111111, 1111111, 1111, 11111111, 111111111, 111111111, 1111111111, 111111, 1110, 111111112, 1110, 11111]], [[111111, 1111111112, 1111111, 111111111, 1111111110, 1111111111, 1111111111, 1111111, 1111111111, 111111, 1111, 111, 67, 111111]], [[5, 2097151, 1111111, 524287, 16777215, 987654322, 134217727, 16777215, 1111111]], [[9999999, 123456789, 777777, 111111111, 444555666, 8888, 99999, 987654321]], [[1034, 2097151, 1033, 16777215, 16777216, 33554431, 2097151, 524286, 268435455]], [[111111, 111111111, 524287, 111111111, 1111111111, 1111, 111, 11111, 1111]], [[9999999, 123456789, 10000000, 777777, 111111111, 444555666, 99999, 777777]], [[1024, 1025, 1026, 1027, 1030, 1031, 1029, 1032, 1026]], [[111111, 3, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112]], [[111111112, 524287, 33554431, 134217727, 268435455, 33554431, 2097151]], [[1024, 1025, 1026, 1027, 1028, 1031, 1026, 1029, 1032, 1026]], [[444555666, 16, 9999999, 123456789, 987654322, 123456789, 777778, 111111111, 444555666, 18, 12312312, 8888, 99999, 9999999, 123456789]], [[9999999, 987654321, 123456789, 777777, 2097150, 111111111, 444555666, 8888, 12312312, 8888, 99999]], [[111111, 10000000, 3, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 2097150, 99999, 9999999]], [[1, 1]], [[10, 11, 12, 13, 14, 14, 15, 16, 17, 17, 19]], [[9999999, 123456789, 987654321, 777777, 111111111, 444555666, 1032, 8888, 9999999, 8888]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1029, 1032, 1024, 1029]], [[1025, 1026, 1027, 1028, 1030, 1031, 1032, 16777215, 1024]], [[777777, 1028, 777777, 111111111, 12312312, 2, 99999, 99999]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111111, 1111111, 111111, 1111, 111, 11111, 1111111, 1111]], [[9999999, 123456789, 987654322, 777777, 1111111111, 12312312, 8888, 99999, 56, 9999999]], [[10, 11, 16, 13, 14, 14, 16, 17, 18, 19]], [[9999999, 987654321, 123456789, 777777, 20, 111111111, 444555666, 9999999, 12312312, 8888, 8887, 99999, 9999999, 444555666]], [[9999999, 10000000, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 17, 8888, 99999, 9999999]], [[2097151, 2097151, 524287, 16777215, 33554432, 268435455]], [[1034, 2097151, 1032, 16777215, 33554431, 1110, 524286, 268435455]], [[9999999, 123456789, 777777, 111111111, 444555666, 8888, 99999, 987654321, 123456789]], [[1024, 111111110, 1025, 1026, 1027, 1028, 1030, 1031, 1029, 1032, 1024]], [[524287, 16777215, 33554431, 0, 134217728, 134217727, 134217727, 33554431]], [[1024, 1025, 1026, 1027, 1030, 1031, 1029, 1032, 1026, 1030]], [[99998, 9999999, 123456789, 123456789, 777777, 444555665, 12312312, 8888, 9999999, 99999]], [[9999999, 123456790, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 1029, 12312312, 111111111, 9999998, 8888, 99999, 9999999]], [[111111, 111111111, 111111111, 1111111111, 1111, 111, 11111, 1111]], [[9, 15, 15, 90, 56, 89, 0, 143, 11111110, 789]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999, 134217728, 444555666, 12312312]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111111, 1111111, 111111, 1111, 111, 1111111]], [[1024, 1025, 1027, 1026, 1027, 1028, 1029, 1030, 1031, 1029, 1032]], [[2097151, 524287, 16777215, 33554430, 1110, 2097152]], [[524287, 16777215, 33554431, 134217727, 16777215]], [[11111, 524287, 524286, 33554431, 33554431]], [[524287, 2097151, 33554431, 0, 134217727, 33554431]], [[1024, 1025, 1027, 1028, 1029, 1030, 1034, 1031, 1032, 1033, 1029]], [[15, 111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112, 11112]], [[9999999, 123456789, 987654321, 777777, 111111111, 444555666, 1032, 9999999, 8888]], [[10000000, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 111111111, 99999, 9999999]], [[1034, 2097151, 1032, 16777214, 33554431, 1110, 524286, 268435455]], [[9999999, 987654321, 123456789, 777777, 20, 111111111, 444555666, 9999999, 12312312, 8888, 8887, 99999, 444555666]], [[111111, 111111111, 11111111, 111111111, 1111111111, 524286, 1111, 112, 11111, 1111, 1111]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 9999999, 99999, 123456789]], [[524287, 16777215]], [[7, 11111111, 7, 6, 7, 7, 7]], [[111111, 3, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11112, 3]], [[1025, 1026, 1027, 1028, 1030, 1031, 1032, 1024]], [[33554431, 2097151, 524287, 16777215, 33554430, 134217727, 2097152]], [[1024, 1025, 1027, 1026, 1027, 1028, 1029, 1030, 1111111, 1031, 1029, 1032, 1024, 1025]], [[524287, 2097151, 524287, 16777215, 33554431, 268435456]], [[2097151, 16777216, 2097150, 524287, 16777215, 33554431, 16777215, 134217727, 33554431]], [[987654321, 123456789, 987654321, 7, 777777, 111111111, 444555666, 1032, 8888, 9999999, 8888, 9999999]], [[524287, 2097151, 524287, 16777215, 33554431, 268435455, 33554431]], [[1024, 1025, 1026, 1028, 1030, 1031, 1029, 1032, 1026]], [[111111, 1111111, 111111111, 1111110, 11111111, 111111111, 1111111111, 111111, 1111, 111, 1111]], [[111111, 1111111, 111111111, 1111111111, 1111111111, 1111111, 1111111111, 111111, 1111, 111, 67, 1111111]], [[7, 11111111, 7, 6, 7, 7, 524286, 7]], [[2097151, 524287, 31, 524286, 16777215, 33554431, 524287, 268435455]], [[1112, 15, 111111, 1111111, 111111111, 11111111, 111111111, 5, 1111111111, 111111, 1111, 111, 9, 1111]], [[9999999, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 17, 12312312, 8888, 99999, 9999999]], [[524287, 33554431, 0, 134217728, 134217727, 134217727, 134217728]], [[524287, 2097151, 33554430, 33554431, 0, 134217727, 33554431]], [[2097151, 2097151, 524287, 16777215, 33554431, 268435455, 16777215, 16777215]], [[2097151, 524287, 31, 524286, 16777215, 33554431, 268435455, 33554431, 524286, 16777215]], [[2097151, 524287, 31, 524286, 16777215, 33554431, 268435455, 11111110, 33554431, 524286, 16777215]], [[2097151, 524287, 16777215, 33554430, 33554431, 134217727, 268435455, 33554431]], [[524287, 16777215, 33554431, 1, 134217728, 1111111110, 134217727, 134217727]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 1029, 11112]], [[2097151, 2097152, 524287, 16777215, 33554431, 33554431]], [[2097151, 2097151, 524287, 16777215, 45, 268435455, 16777215]], [[2097151, 16777216, 524287, 16777216, 16777215, 33554431, 16777215, 134217727]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 1029, 11111]], [[524287, 16777215, 16777215]], [[2097151, 524287, 31, 524286, 16777215, 33554431, 268435455, 11111110, 33554431, 16777215]], [[2097151, 16777215, 33554431, 268435455]], [[2097152, 524287, 16777216, 33554431]], [[20]], [[111111, 1111111, 12312311, 111111111, 1111111111, 111111, 1110, 111, 11111, 1110]], [[2097151, 2097151, 524287, 16777215, 33554431, 268435455, 268435455]], [[8]], [[524287, 16777216, 33554431]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 2097150, 99999, 9999999, 99999]], [[111111, 11111111, 111111111, 1111111111, 111111, 1110, 111, 11111]], [[11111, 524287, 524286, 33554431, 33554431, 33554431]], [[268435454, 524287, 16777215, 33554430, 1110, 2097152]], [[2097151, 2097151, 524287, 16777215, 268435455, 16777215, 16777215]], [[1024, 1025, 1027, 1028, 1029, 1030, 1034, 1031, 1032, 1033, 1029, 1025]], [[524288, 16777215, 16777215]], [[2097151, 524287, 16777216, 33554431, 268435455]], [[1112, 15, 111111, 1111111, 111111111, 11111111, 5, 1111111111, 111111, 1111, 111, 9, 1111]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111, 111111, 1111, 111]], [[1024, 1025, 1027, 1028, 1030, 1031, 1032, 1024]], [[2097151, 16777215, 33554431, 0, 134217727, 134217727]], [[524288, 16777214, 16777215, 16777215]], [[444555666, 9999999, 123456789, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 9999999]], [[777777, 1028, 777777, 111111111, 12312312, 99999, 99999]], [[9, 15, 15, 56, 67, 89, 0, 143, 11111110, 789, 216, 216]], [[9999999, 987654321, 123456789, 777777, 444555666, 12312312, 8888, 99999]], [[777777, 1028, 123456789, 777777, 111111111, 12312312, 99999, 777777, 777777]], [[111111, 111111111, 524287, 111111111, 1111111111, 1111, 11111, 1111]], [[9, 15, 15, 56, 67, 89, 143, 568, 789, 987, 216, 89]], [[2097151, 2097151, 524287, 16777215, 268435455, 16777215, 789, 16777215]], [[9999999, 123456790, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 1029, 12312312, 111111111, 9999998, 8888, 99999, 9999999, 12312312]], [[524288, 16777214, 16777215]], [[1024, 1027, 1026, 1027, 1028, 1029, 1030, 1031, 1029, 1032]], [[33554431, 2097151, 568, 16777215, 33554430, 134217727, 2097152]], [[9999999, 123456789, 1034, 111111111, 444555666, 99999]], [[9999999, 8888, 987654321, 123456789, 777777, 444555666, 12312312, 8888, 99999]], [[444555666, 9999999, 123456789, 987654321, 123456789, 777777, 111111111, 12312312, 8888, 9999999, 9999999, 123456789, 444555666]], [[10000000, 10000000, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 17, 12312312, 8888, 99999, 9999999, 10000000]], [[9999999, 10000000, 123456789, 1028, 123456789, 777778, 111111111, 123456788, 444555666, 17, 8888, 99999, 9999999, 9999999]], [[1025, 1026, 1027, 1030, 1031, 1029, 1032, 1026, 1030, 1026]], [[2097151, 2097151, 524287, 16777215, 33554431, 268435456, 16777215, 16777215]], [[9999999, 123456789, 987654321, 777777, 111111111, 444555665, 444555666, 12312312, 2097150, 99999, 9999999]], [[1026, 1026, 1027, 1028, 1030, 1031, 1032, 1024, 1032]], [[9999999, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 444555666, 17, 12312312, 8888, 99999, 9999999, 17]], [[9999999, 123456789, 987654320, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 8888, 99999, 9999999]], [[5, 2097151, 1111111, 524287, 16777215, 777778, 987654322, 134217727, 16777215, 1111111]], [[2097151, 524287, 16777215, 268435455, 16777215]], [[2097151, 16777216, 2097150, 33554432, 524287, 16777216, 33554431, 16777215, 134217727, 33554431]], [[16777215, 33554431, 0, 134217728, 1, 134217727, 134217727, 1027]], [[2097151, 1028, 524287, 16777215, 33554431, 0, 134217727, 134217727]], [[1024, 1027, 1026, 1027, 1028, 1029, 1030, 1031, 1029]], [[15, 111111, 1111111, 11111111, 111111111, 111110, 1111111111, 111111, 1111, 111, 11112]], [[1024, 1025, 1026, 1026, 1028, 1030, 1031, 1029, 1032, 1026, 1029]], [[9999999, 10000000, 123456789, 1028, 123456789, 777778, 111111111, 444555666, 17, 8888, 99999, 0, 10000000, 16]], [[10000000, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 111111111, 8888, 99999, 9999999, 8888]], [[2097151, 524287, 16777215, 33554431, 134217727, 268435455, 33554431, 2097151, 2097151]], [[2097151, 16777215, 33554431, 268435455, 33554431]], [[9999999, 123456789, 123456789, 777778, 111111111, 444555665, 12312312, 8888, 2097151, 9999999]], [[1111111, 111111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11111, 1111]], [[9, 15, 15, 67, 89, 0, 143, 11111110, 789, 216]], [[777777, 1028, 123456789, 777777, 111111111, 12312312, 99999, 777777, 123456789, 12312312]], [[2097151, 2097151, 524287, 16777215, 45, 268435455, 16777215, 524287]], [[9999999, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 33554430, 12312312, 2097150, 99999, 9999999]], [[111111, 1111111, 111111111, 1024, 1111111, 111111, 1111, 111, 11110]], [[1024, 1026, 1028, 1030, 1031, 1029, 1032, 1026]], [[524287, 16777215, 33554431, 134217727, 268435455, 33554431]], [[2097151, 2097151, 524287, 16777215, 33554431, 268435455, 268435456, 16777215, 16777215, 2097151, 2097151]], [[111111, 1111111, 111111111, 1024, 1111111111, 1111111111, 1111111, 111111, 1111, 111, 1111111, 1024]], [[5, 2097151, 1111110, 524287, 16777215, 1110, 987654322, 134217727, 16777215, 1111111, 2097151]], [[1024, 1025, 21, 1027, 1028, 1030, 1030, 13, 1034, 1031, 1032, 1033, 1032]], [[10000000, 123456789, 987654321, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 8888, 99999, 9999999]], [[9999999, 123456789, 987654320, 123456789, 777777, 111111111, 444555665, 444555666, 12312312, 8888, 99999, 9999999, 123456789]], [[111111, 1111111, 134217726, 1111111111, 1111111111, 1111111, 1111111111, 111111, 1111, 111, 67, 1111111]], [[9999999, 123456789, 1028, 123456789, 111111111, 444555666, 17, 12312312, 8888, 112, 99999, 9999999]], [[2097151, 524287, 16777215, 33554431, 0, 134217727, 134217727, 33554431]], [[2097151, 524287, 16777215, 33554431, 134217727, 19, 33554431]], [[2097152, 9999999, 123456789, 987654321, 777777, 111111111, 444555666, 1032, 9999999, 8888, 111111111]], [[987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 9999999, 99999, 123456789]], [[111111, 1111111, 111111111, 1024, 1111111, 111111, 1111, 111, 11110, 1111]], [[9999999, 123456789, 123456789, 111111111, 444555665, 12312312, 8888, 99999, 9999999]], [[1024, 1025, 1026, 1027, 1028, 1030, 1031, 1029, 1032, 1025, 1029]], [[777777, 1028, 777777, 12312312, 99999, 99999]], [[1024, 1025, 1026, 1027, 1030, 1029, 1032, 1026, 1030, 1030]], [[2097151, 524287, 16777215, 134217727, 268435455, 33554431, 2097152, 33554431]], [[111111112, 2097149]], [[2097151, 16777216, 2097150, 33554432, 524286, 16777216, 33554431, 16777215, 134217727, 33554431, 16777215, 16777216, 2097150]], [[11111, 524287, 524286, 524287]], [[7, 11111111, 7, 6, 7, 7, 524286, 7, 6, 7]], [[524287, 16777216, 33554431, 16777216]], [[987654321, 123456789, 555555555, 999999999, 1000000000]], [[1, 1, 1]], [[0, 2, 4, 8, 16, 32]], [[1, 3, 5, 7, 9]], [[0, 0, 0, 0, 0]], [[567, 9, 90, 15, 56, 67, 89, 143, 568, 789, 987]], [[7, 7, 7, 7, 9, 268435455, 7, 7]], [[16, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033]], [[7, 7, 7, 8, 7, 7, 7, 7]], [[1111111111, 0]], [[134217728, 2097151, 524287, 16777215, 33554431, 134217727, 268435455, 2097151]], [[1024, 1025, 1026, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[10, 11, 12, 13, 14, 15, 568, 16, 17, 18, 19]], [[1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1033]], [[1111111111, 19, 0]], [[1111111110]], [[7, 7, 7, 7, 8, 268435455, 7, 7, 7]], [[2097151, 16777215, 33554431, 134217727, 268435455, 33554431]], [[16, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 16]], [[0, 0]], [[7, 7, 7, 7, 7, 7, 7]], [[1111111111, 0, 1111111111]], [[7, 7, 7, 8, 7, 7, 7, 7, 7]], [[1024, 1031, 1025, 1026, 1027, 89, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[2097151, 16777214, 524287, 16777215, 33554431, 134217727, 268435455]], [[7, 7, 7, 7, 8, 268435455, 7, 7, 8, 7, 7, 7]], [[1024, 1025, 1026, 1027, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[7, 7, 7, 8, 7, 7, 8, 7, 7]], [[1024, 1025, 1025, 1027, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[1024, 1025, 1026, 1027, 17, 1028, 1029, 1030, 1031, 1032, 1033, 1033]], [[7, 7, 7, 7, 8, 1111, 268435455, 7, 7, 7]], [[1024, 1025, 1027, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[7, 7, 7, 8, 7, 7, 8, 7]], [[7, 1028, 7, 7, 7, 8, 268435455, 7, 7, 8, 7, 7, 7]], [[9999999, 987654321, 123456789, 777777, 99998, 111111111, 444555666, 12312312, 8888, 99999]], [[7, 7, 7, 7, 9, 268435455, 7, 7, 7]], [[7, 7, 7, 9, 268435455, 7, 7]], [[1111111111, 1, 1111111111]], [[7, 7, 7, 8, 8888, 7, 7, 7, 7]], [[111111, 7, 7, 7, 7, 8, 7, 7, 8, 7, 7]], [[16, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 90]], [[134217728, 2097151, 524287, 16777215, 33554431, 134217727, 268435455, 2097151, 134217728]], [[567, 9, 90, 15, 56, 67, 777777, 89, 143, 568, 789, 987]], [[1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1033]], [[1024, 1025, 1027, 1027, 1028, 1029, 1030, 268435455, 1111111111, 1032, 1033]], [[7, 7, 7, 8, 7, 7, 8, 7, 7, 8]], [[7, 7, 7, 7, 8, 268435455, 7, 7, 8, 7, 7, 7, 7]], [[1, 0]], [[7, 7, 8, 7, 7, 8, 7, 8]], [[1111111111, 19, 1111111112, 0]], [[1024, 1025, 1027, 1026, 1028, 1029, 1030, 1111111111, 1033, 1033, 1033]], [[1024, 1031, 1025, 1027, 89, 1029, 1030, 1111111111, 1032, 1033]], [[2097151, 16777215, 134217727, 268435455, 33554431, 134217727]], [[9999999, 987654321, 568, 777777, 111111111, 444555666, 12312312, 8888, 99999]], [[1024, 1025, 1026, 1027, 1028, 1029, 1111111111, 1032, 1033]], [[10, 11, 12, 13, 14, 16, 17, 18, 19]], [[6, 7, 7, 7, 8, 268435455, 6, 7, 7, 7]], [[1, 1111111111, 0]], [[1024, 1025, 789, 1027, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[16, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 16, 1029, 16]], [[1111111111, 1, 1111111111, 1111111111]], [[1024, 1025, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1033, 1028]], [[7, 7, 7, 8, 10, 8888, 7, 7, 7, 7]], [[568, 7, 7, 8, 7, 7, 8, 7, 7, 7]], [[1024, 1031, 1025, 1027, 89, 1029, 1030, 1111111111, 1032, 1033, 1027]], [[1023, 1025, 1028, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[7, 7, 7, 8, 7, 7, 7, 7, 7, 7]], [[1027, 7, 7, 7, 7, 9, 268435455, 7, 7, 7]], [[6, 7, 7, 7, 8, 268435455, 7, 6, 7, 7, 7]], [[6, 7, 7, 7, 268435455, 6, 7, 7, 7]], [[7, 7, 7, 7, 9, 268435455, 7, 7, 8, 7, 7, 7, 7, 8]], [[7, 7, 8, 7, 7, 7, 8]], [[1, 1111111110, 0]], [[7, 7, 7, 7, 8, 7, 7, 7, 7]], [[7, 1028, 7, 7, 7, 8, 268435455, 7, 7, 8, 7, 7, 7, 8]], [[7, 7, 7, 8, 10, 8888, 7, 9, 7, 7, 7]], [[16, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 16, 1029, 16]], [[7, 7, 7, 8, 10, 8888, 7, 9, 7, 7, 7, 7]], [[90, 7, 7, 7, 8, 7, 7, 8, 7]], [[1024, 1025, 1027, 1027, 1028, 1029, 1111111110, 268435455, 1111111111, 1032, 1033]], [[1, 0, 1]], [[7, 7, 7, 7, 8, 268435455, 7, 7, 8, 7, 7, 7, 7, 7]], [[1024, 1031, 1025, 1027, 89, 1029, 1030, 1032, 1033, 1111111111]], [[7, 1028, 7, 7, 7, 8, 268435455, 7, 7, 8, 6, 7, 7, 6]], [[2097151, 16777214, 524287, 16777215, 33554431, 568, 134217727, 268435455]], [[7, 7, 7, 7, 6, 7, 7, 7, 7]], [[7, 7, 8, 7, 7, 8, 1029, 7, 8]], [[567, 9, 90, 15, 56, 67, 777777, 89, 143, 568, 789, 987, 56]], [[7, 7, 7, 31, 8, 268435455, 7, 7, 8, 7, 7, 7, 7, 7]], [[1024, 1025, 1026, 1027, 1027, 1028, 1029, 1030, 1032, 1033]], [[7, 6, 7, 7, 8, 268435455, 7, 7, 8, 7, 7]], [[1111111111, 0, 0]], [[111111, 7, 7, 7, 7, 8, 8, 7, 7, 8, 7, 7]], [[1024, 1025, 1027, 1027, 1028, 1029, 1111111110, 268435455, 1111111111, 1032, 1033, 1028]], [[7, 7, 7, 6, 7, 7, 7, 7, 7]], [[6, 7, 524287, 7, 7, 268435455, 6, 7, 7, 7]], [[134217728, 2097151, 524287, 16777215, 33554431, 134217727, 268435455, 2097151, 2097151]], [[7, 7, 7, 6, 7, 7, 7, 7]], [[111111, 1111111, 11110, 11111111, 111111111, 1111111111, 111111, 1111, 111, 11111]], [[7, 7, 7, 6, 7, 8, 268435455, 7, 7, 7]], [[2097151, 16777215, 134217727, 268435455, 33554431]], [[1031, 10, 11, 12, 13, 14, 15, 568, 16, 17, 18, 19, 16]], [[567, 9, 90, 15, 56, 67, 89, 143, 568, 789, 9999999]], [[1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033]], [[9999999, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 12312312]], [[16, 1024, 1027, 1028, 1029, 1030, 16, 1030, 1032, 1033, 90]], [[1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1030]], [[1024, 1025, 1025, 1027, 1027, 111111, 1030, 1111111111, 1032, 1033]], [[7, 7, 7, 8, 10, 13, 8888, 7, 9, 7, 7, 7, 7]], [[7, 7, 7, 8, 9, 31, 268435455, 7, 7, 7, 7, 7]], [[7, 1111, 7, 7, 8, 1111, 268435455, 7, 7, 8, 8]], [[567, 9, 90, 15, 56, 67, 89, 568, 789, 987, 9]], [[2097151, 524287, 16777215, 33554431, 134217727, 268435455, 2097151, 2097151]], [[567, 9, 90, 15, 56, 67, 89, 568, 789, 987]], [[6, 7, 7, 7, 268435455, 6, 7, 7, 7, 7]], [[1023, 7, 8, 7, 7, 8, 7, 8]], [[7, 7, 9, 268435455, 7, 7]], [[9999999, 987654321, 123456789, 99998, 111111111, 444555666, 12312312, 8888, 99999]], [[7, 7, 13, 7, 8, 1111, 268435455, 7, 7, 7]], [[10, 11, 12, 13, 14, 18, 56, 15, 16, 17, 18]], [[1024, 1025, 1026, 1027, 1028, 1029, 1111111111, 1032, 1033, 1026]], [[111111, 1111111, 11111111, 111111111, 1111111111, 111111, 1111, 111, 567]], [[7, 7, 8, 7, 8, 8, 8888, 7, 7, 7, 7, 7]], [[1111111111, 19, 18, 1111111112, 0]], [[1024, 1031, 1025, 1027, 89, 1029, 1030, 1032, 1033]], [[7, 7, 7, 8, 7, 7, 7, 7, 7, 7, 8]], [[567, 9, 90, 6, 15, 56, 67, 89, 524287, 568, 789, 9999999]], [[134217728, 16, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 16, 1029, 16, 1032]], [[7, 7, 8, 7, 7, 8, 7, 7, 8]], [[7, 7, 7, 31, 8, 268435455, 7, 6, 8, 7, 7, 7, 7, 7]], [[567, 9, 90, 15, 55, 67, 89, 568, 789, 987]], [[7, 7, 7, 6, 7, 7, 17, 7, 7, 7, 7]], [[7, 1111111110, 1111111110, 7]], [[1111111111, 19, 1111111110, 1111111112, 0]], [[1029, 1024, 1025, 1026, 1027, 1027, 1028, 1030, 1029, 1030, 1032, 1033]], [[1024, 1025, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1033, 1028, 1030]], [[19, 0]], [[1024, 1031, 1025, 1027, 89, 1029, 1030, 1111111111, 1032, 1027, 1032]], [[7, 1027, 7, 7, 7, 268435455, 7, 7, 8, 6, 7, 7, 6]], [[1024, 1031, 1025, 1027, 1029, 1030, 1032, 1033, 1111111111]], [[1031, 10, 11, 12, 13, 14, 15, 568, 16, 17, 18, 99998, 19, 16]], [[567, 9, 90, 15, 56, 67, 777777, 89, 143, 568, 789, 987, 56, 15]], [[567, 9, 90, 15, 56, 67, 89, 568, 789, 9]], [[9999999, 123456789, 111111111, 444555666, 12312312, 8887, 99999]], [[7, 6, 7, 7, 9, 268435455, 7, 7]], [[2097151, 16777214, 524287, 12312312, 33554431, 134217727, 268435455]], [[1024, 1025, 1027, 1027, 1028, 1029, 1111111110, 268435455, 1111111111, 1032, 1033, 1029]], [[111111, 7, 7, 7, 7, 8, 7, 7, 8, 7, 7, 7]], [[16777215, 134217727, 268435455, 33554431, 33554430, 134217727, 16777215]], [[7, 7, 7, 6, 7, 8, 7, 7, 7]], [[6, 89, 7, 7, 8, 268435455, 6, 7, 7, 7]], [[7, 7, 7, 7, 8, 7, 7, 7, 7, 8]], [[1024, 1025, 1026, 1027, 17, 1028, 216, 1030, 1031, 1032, 1033, 1033]], [[7, 7, 7, 8, 7, 8887, 7, 7]], [[567, 9, 90, 15, 56, 67, 90, 143, 568, 789, 987]], [[7, 7, 7, 31, 268435455, 7, 6, 8, 7, 7, 7, 7, 7]], [[567, 9, 90, 12, 15, 56, 67, 89, 568, 789, 987, 789]], [[1024, 1031, 1025, 1027, 89, 1029, 1030, 1032, 1033, 1029]], [[7, 7, 7, 6, 7, 7, 7, 7, 7, 7]], [[7, 7, 13, 7, 8, 1111, 9, 268435455, 7, 7, 7]], [[1024, 1025, 1027, 1027, 1028, 1029, 1111111110, 268435455, 1111111111, 1032, 1033, 1024]], [[7, 1028, 7, 7, 7, 8, 268435455, 7, 7, 216, 7, 7, 7, 8]], [[7, 7, 7, 8, 7, 8887, 7, 7, 7]], [[8, 7, 7, 7, 8, 111, 7, 7, 7, 7, 8]], [[1024, 1025, 1026, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033, 1032]], [[1024, 1025, 1026, 1027, 1028, 1029, 1031, 33554431, 1033, 1033]], [[7, 7, 6, 7, 8, 268435455, 7, 7, 7]], [[6, 7, 524287, 7, 7, 268435455, 6, 7, 5, 7, 7]], [[1024, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1033, 1028]], [[9999999, 17, 568, 777777, 111111111, 444555666, 12312312, 8888, 99999]], [[10000000, 987654321, 123456789, 777777, 111111111, 444555666, 12312312, 8888, 99999]], [[16, 1024, 1027, 1028, 1029, 1030, 16, 1030, 1032, 1033, 90, 16]], [[567, 9, 90, 15, 56, 67, 89, 568, 789, 9, 56]], [[111111, 7, 7, 7, 8, 8, 8, 7, 7, 1033, 8, 7, 7]], [[6, 7, 7, 7, 268435455, 268435455, 6, 7, 7, 7, 7, 268435455]], [[1111111111, 0, 1111111111, 1111111111]], [[134217728, 16, 1024, 1026, 1028, 1029, 1030, 1030, 1032, 1033, 16, 1029, 16, 1032]], [[7, 7, 6, 10, 8888, 7, 9, 7, 7, 7]], [[7, 1028, 7, 7, 7, 8, 268435455, 7, 7, 8, 6, 7, 6]], [[6, 7, 7, 7, 8, 268435455, 7, 6, 7, 7, 7, 7]], [[7, 7, 7, 8, 7, 7, 7, 7, 7, 7, 8, 7]], [[134217728, 2097152, 524287, 16777215, 33554431, 134217727, 268435455, 2097151]], [[7, 7, 7, 8, 8887, 7, 7]], [[7, 1028, 1033, 7, 7, 7, 10000000, 8, 268435455, 7, 7, 216, 7, 7, 8]], [[1024, 1025, 1027, 1027, 1028, 1029, 1111111110, 268435455, 1111111111, 1032, 1033, 268435456, 1029]], [[1111111113, 1111111111, 19, 1111111110, 1111111112, 0]], [[7, 1111, 7, 7, 8, 1111, 268435455, 7, 7, 8, 8, 7]], [[111111, 7, 7, 7, 7, 8, 8, 7, 1030, 8, 7, 7]], [[111111111, 89, 7, 7, 7, 7, 9, 268435455, 7, 7, 7]], [[7, 7, 7, 9, 268435455, 7, 7, 7]], [[7, 7, 7, 7, 8, 7, 7, 7]], [[19, 16777214, 0, 16777214]], [[7, 7, 7, 7, 31, 268435455, 7, 7, 8, 7, 7, 7, 7, 7]], [[8, 7, 7, 8, 7, 7, 7, 8]], [[1111111111, 1111111111, 19, 2, 0]], [[1031, 1025, 1026, 1027, 89, 1028, 1029, 1030, 1111111111, 1032, 1033, 1025]], [[111111, 1111111, 111111, 11111111, 111111112, 1111111111, 111111, 1111]], [[1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1033, 1028, 1033]], [[10, 11, 12, 13, 14, 15, 568, 15, 17, 18, 19, 16]], [[1111111111, 0, 1, 1111111111]], [[7, 7, 7, 31, 268435455, 7, 6, 8, 7, 7, 7, 7, 7, 8, 7]], [[7, 1028, 7, 7, 7, 8, 268435455, 7, 7, 8, 6, 7, 6, 1028]], [[15, 1111111, 111111111, 1111111111, 99999, 1111, 111, 11111]], [[1111111111, 1111111111, 19, 18, 1111111112, 0]], [[6, 7, 7, 7, 268435455, 6, 7, 7, 7, 7, 6]], [[1024, 1025, 1026, 1027, 1028, 1031, 33554431, 1033, 1033]], [[7, 7, 7, 31, 268435455, 7, 6, 8, 7, 7, 7, 7, 7, 8, 7, 7]], [[1024, 1025, 1027, 89, 1029, 1030, 143, 1032]], [[567, 9, 90, 12, 15, 56, 67, 89, 568, 789, 987, 789, 789]], [[567, 9, 90, 15, 56, 67, 16, 89, 568, 789, 987]], [[16, 1024, 1028, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 16, 143, 16]], [[6, 7, 7, 7, 268435455, 6, 7, 7, 7, 6]], [[7, 7, 7, 6, 7, 7, 7, 7, 7, 7, 7]], [[6, 7, 7, 7, 8, 268435455, 7, 6, 7, 7, 9]], [[2, 90, 2]], [[567, 90, 12, 15, 1030, 67, 89, 568, 789, 987, 789, 789]], [[7, 1028, 7, 7, 7, 8, 268435455, 7, 7, 216, 7, 7, 7, 8, 7, 7]], [[1024, 1025, 1027, 1027, 1028, 1111111110, 268435455, 1111111111, 1032, 1033]], [[7, 7, 7, 7, 9, 268435455, 7, 7, 7, 7]], [[7, 216, 1, 1111, 7, 7, 8, 1111, 268435455, 7, 7, 8, 8, 7]], [[1024, 1025, 1027, 1027, 1111111110, 1028, 1029, 1111111110, 268435455, 1111111111, 1032, 1033]], [[16, 1024, 1030, 1028, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 16, 143, 16]], [[1024, 1025, 1027, 89, 1029, 1030, 143, 7]], [[9999999, 987654321, 123456789, 216, 777777, 99998, 111111111, 444555666, 12312312, 8888, 99999]], [[9999999, 123456789, 111111111, 10, 12312312, 8887, 99999]], [[16777215, 33554431, 134217727, 268435455, 33554431]], [[567, 9, 90, 15, 56, 67, 777777, 89, 143, 568, 789, 987, 56, 15, 90]], [[134217728, 2097151, 524287, 16777215, 33554431, 134217727, 268435455, 2097151, 2097151, 134217727]], [[16, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1029, 16]], [[1111111110, 1111111110, 7]], [[21, 1024, 1025, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033]], [[1024, 1031, 1025, 1027, 14, 89, 1029, 1030, 1111111111, 1032, 1033, 1027]], [[567, 9, 90, 15, 56, 67, 89, 143, 568, 789, 987, 67]], [[111111, 7, 7, 7, 8, 8, 8, 8, 7, 7, 1033, 8, 7, 7]], [[134217728, 16, 1024, 9999999, 1028, 1029, 1030, 1031, 1032, 1033, 16, 1029, 16, 1032]], [[16, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 16, 1029]], [[7, 7, 7, 8, 10, 8888, 7, 9, 7, 7, 9, 7]], [[7, 7, 7, 7, 9, 268435455, 7, 7, 7, 9]], [[2097151, 524287, 16777215, 33554431, 268435455, 2097151, 2097151]], [[1111111113, 1111111111, 19, 1111111110, 1111111112, 0, 1111111113]], [[1024, 1031, 1025, 1026, 14, 89, 1029, 1030, 1111111111, 1032, 1033, 1027]], [[16, 1024, 1030, 1028, 1026, 1027, 1028, 1029, 1030, 1031, 16, 143, 16, 1030, 16]], [[567, 9, 90, 12, 15, 56, 67, 9, 89, 568, 789, 987, 789, 789]], [[1111111111, 524287, 16777215, 33554431, 134217727, 268435455, 2097151, 2097152]], [[1031, 10, 12, 13, 14, 15, 568, 16, 17, 18, 19, 16, 568]], [[7, 7, 7, 7, 6, 8, 1111, 268435455, 7, 7, 7, 7]], [[111111, 7, 7, 7, 7, 8, 8, 7, 1030, 8, 7, 7, 7, 8]], [[1, 0, 777777]], [[1024, 1026, 1027, 1028, 1028, 1030, 1031, 1032, 1033, 1033, 1028]], [[7, 7, 13, 7, 8, 1111, 9, 268435455, 7, 7]], [[1024, 1025, 1027, 1027, 1028, 1029, 1111111110, 268435455, 1111111111, 1033]], [[90, 7, 7, 7, 8, 7, 7, 8, 7, 7]], [[567, 9, 90, 15, 56, 67, 90, 143, 789, 987]], [[7, 444555666, 7, 8, 7, 8887, 7, 7, 7]], [[1, 0, 0]], [[7, 7, 7, 7, 9, 268435455, 7, 7, 9]], [[1111111110, 0]], [[7, 7, 7, 31, 8, 268435455, 7, 6, 8, 7, 7, 7, 7, 7, 31]], [[6, 11, 7, 7, 8, 7, 6, 7, 7, 7]], [[1111111111, 19, 1111111112, 0, 1111111110]], [[6, 7, 524287, 7, 7, 45, 268435455, 6, 7, 5, 7, 7]], [[111111, 7, 7, 7, 7, 8, 8, 7, 7, 8, 7, 7, 111111]], [[1024, 1031, 1025, 1027, 89, 2, 1029, 1030, 1032, 1033, 1029]], [[1024, 1031, 1025, 1026, 14, 89, 1029, 11111111, 1030, 1111111111, 1032, 1033, 1027, 1025]], [[67, 2, 1]], [[134217728, 2097151, 524287, 16777215, 134217727, 268435455, 2097151, 134217728]], [[7, 7, 7, 7, 9, 268435455, 7, 7, 7, 7, 7, 7, 8]], [[1024, 1025, 1026, 1027, 1028, 1111111, 1029, 1030, 1032, 1031, 1033, 1031]], [[1024, 1024, 1027, 1027, 1028, 1029, 1111111110, 268435455, 1111111111, 1032, 1033, 1028]], [[1, 524287, 1, 0]], [[134217728, 16, 1024, 1026, 1028, 1030, 1029, 1030, 1031, 1032, 1033, 16, 1029, 16, 1032]], [[1024, 1025, 1027, 89, 1029, 1030, 143, 7, 7]], [[1111111112, 0]], [[7, 216, 1, 1111, 7, 7, 8, 1111, 268435455, 7, 8, 8, 7]], [[789, 567, 9, 90, 12, 15, 56, 67, 91, 89, 568, 789, 987, 789]], [[7, 1028, 1033, 7, 7, 7, 10000000, 8, 268435455, 7, 7, 216, 7, 7, 8, 7]], [[1024, 1024, 1027, 1027, 1029, 1029, 1111111110, 268435455, 1032, 1111111111, 1032, 1033, 1028]], [[7, 7, 7, 31, 22, 268435455, 7, 6, 8, 7, 7, 7, 7, 7, 8, 7]], [[16, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 17, 1029, 16]], [[1024, 1025, 1026, 1027, 1028, 1029, 1030, 1111111111, 1032, 1033, 1032, 1032, 1032]], [[1024, 1024, 1026, 524287, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1033, 1028]], [[1031, 1025, 1026, 1027, 89, 1028, 1029, 1030, 1111111111, 1032, 1033, 1025, 1025]], [[7, 7, 7, 7, 8, 268435455, 7, 7, 7, 7, 7]], [[1, 0, 777777, 777777, 0, 0]]]\n    results = [[1, 2, 4, 3, 5], [-4, -2, -6, -5, -3], [0, 1, 2, 4, 3], [], [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77], [32, 3, 5, 6, 12, 44], [2, 4, 8, 16, 32], [4, 3, 5, 6, 7], [8, 9, 10, 12, 11], [333, 111, 222, 444], [0, 100000, 10101010, 100000000, 111111111], [0, 3, 12, 7, 15], [2, 4, 8, 6, 10], [16, 32, 64, 128, 256], [63, 127, 255, 511, 1023], [2, 4, 8, 6, 10, 10], [16, 32, 32, 64, 128, 256, 33], [9, 12, 7, 11], [4, 3, 5, 6, 6, 7], [3, 333, 111, 221, 222, 222, 222, 444], [3, 3, 333, 111, 222, 222, 222, 222, 444, 511], [32, 9, 12, 11, 127], [512, 3, 3, 333, 111, 221, 222, 222, 222, 444, 511], [0, 0, 15, 100000, 10101010], [15, 333, 111, 222, 444], [3, 3, 333, 111, 222, 222, 222, 444, 511], [0, 3, 3, 12, 7, 15], [2, 4, 6, 10, 10], [0, 3, 3, 3, 12, 12, 7, 15], [3, 3, 333, 111, 111, 222, 222, 222, 222, 444, 511], [15, 333, 333, 111, 222, 444], [2, 16, 32, 128, 256, 511], [0, 3, 12, 15], [0, 3, 3, 12, 15], [0, 3, 12, 7, 100000], [9, 12, 12, 7, 11], [32, 9, 12, 12, 11, 127], [4, 4, 5, 6, 7], [2, 2, 4, 8, 8, 6, 10], [4, 6, 10, 10], [2, 16, 32, 128, 511], [32, 9, 12, 11, 13, 127], [0, 0, 15, 100000, 10101009], [2, 2, 4, 8, 6, 9, 10], [15, 333, 333, 111, 222, 222, 444], [4, 4, 3, 5, 6, 7, 7], [16, 3, 3, 12, 15], [4, 3, 6, 6, 7], [333, 334, 111, 222, 444], [16, 3, 3, 12, 15, 15], [16, 3, 3, 12, 12, 15], [3, 333, 111, 222, 222, 222, 444], [32, 9, 12, 12, 11], [16, 3, 3, 13, 15, 15], [0, 0, 15, 100000, 100000, 10101010], [16, 12, 12, 15], [12, 7], [2, 2, 4, 6, 9, 10], [9, 9, 10, 12, 11], [8, 10, 12, 11], [3, 3, 333, 111, 222, 222, 222, 222, 222, 444, 511], [2, 32, 128, 128], [8, 10, 12, 7, 11], [333, 111, 222, 444, 444], [2, 16, 32, 128, 128, 256, 511], [2, 16, 128, 128], [2, 2, 2, 4, 6, 9, 10], [8, 64, 12, 7], [15, 332, 333, 333, 111, 222, 222, 444], [3, 3, 12, 12], [2, 16, 32, 32, 128, 128, 129, 511], [2, 16, 32, 128, 512], [9, 9, 9, 10, 12, 11], [9, 10, 12, 11, 10101009], [524287, 2097151, 16777215, 33554431, 134217727, 268435455], [0], [7, 7, 7, 7, 7, 7, 7, 7], [8888, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111], [16, 10, 12, 17, 18, 11, 13, 14, 19, 15], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 1031], [111, 1111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111], [9, 56, 67, 15, 89, 216, 568, 143, 789, 987], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 987654321, 111111111], [524287, 2097151, 16777215, 33554431, 268435455], [111, 1111, 111111, 111111, 11111, 1111111, 1111111, 11111111, 1111111111, 111111111], [1032, 8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 987654321, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 987654322, 111111111], [16, 10, 12, 17, 17, 11, 13, 14, 19, 15], [524287, 16777215, 33554431, 134217727, 268435455], [524287, 2097151, 16777215, 33554431], [524287, 2097151, 16777215, 33554431, 134217727, 134217727], [17, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 987654322, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111], [1], [524287, 2097151, 2097151, 16777215, 33554431, 268435455], [18, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 987654322, 111111111], [18, 1027, 8888, 99999, 777778, 9999999, 9999999, 123456789, 444555666, 12312312, 987654322, 111111111, 2097151], [33554432, 524287, 2097151, 16777215, 134217727, 268435455], [524286, 524287, 2097151, 16777215, 33554431, 268435455], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111], [2097152, 2097151, 16777215, 33554431, 268435455], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 444555666, 987654321, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [99999, 777777, 9999999, 123456789, 444555666, 12312312, 111111111], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1029, 1030, 1031], [17, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 12312312, 987654322, 111111111], [524287, 2097151, 16777215, 268435455], [1024, 1025, 1028, 1032, 1027, 1029, 1030, 1033, 1034, 1031], [524287, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [1027, 8888, 99999, 777778, 9999999, 9999999, 123456789, 444555666, 12312312, 987654322, 111111111, 2097151], [524287, 2097151, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [99999, 777777, 9999999, 123456789, 444555666, 111111111], [524286, 524287, 2097151, 16777215, 33554431, 33554431, 268435455], [1024, 1025, 1026, 1026, 1028, 1032, 1027, 1029, 1030, 1031], [0, 524287, 2097151, 16777215, 33554431, 134217727, 134217727], [111, 1111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111, 111111111], [1027, 8888, 99999, 777778, 9999999, 9999999, 123456789, 444555666, 987654322, 111111111, 2097151, 2097151], [18, 8888, 99999, 777778, 9999998, 9999999, 123456789, 123456789, 444555666, 12312312, 987654322, 111111111], [524286, 524287, 2097151, 33554431, 33554431, 268435455], [1024, 1025, 1028, 1032, 13, 1027, 1029, 1030, 1033, 1034, 1031], [111, 1111, 11112, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111, 111111111], [56, 8888, 99999, 777777, 9999999, 9999999, 123456789, 444555666, 12312312, 987654322, 111111111], [1025, 1026, 1032, 1027, 1029, 1030, 1033, 1031, 1023], [7, 7, 7, 7, 7, 7, 7, 789], [15, 111, 1111, 11112, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [0, 3, 524287, 2097151, 33554431, 134217727, 134217727], [1110, 111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111], [0, 134217728, 524287, 16777215, 33554431, 134217727, 134217727], [17, 1028, 8888, 10000000, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 111111111], [1029, 8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 987654321, 111111111, 111111111], [1024, 1025, 1026, 1028, 1032, 1032, 1027, 1029, 1029, 1030, 1031], [1024, 1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1031], [99999, 777777, 777777, 9999999, 123456789, 444555666, 12312312, 111111111], [8888, 99999, 777777, 9999999, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [111, 1111, 111111, 111111, 11111, 1111111, 1111111, 11111111, 1111111111, 111111111, 111111111], [8888, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 12312312, 987654321, 111111111], [524286, 524287, 33554431], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 111111111], [8888, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [111, 1111, 111111, 111111, 11111, 1111111, 1111111, 11111110, 11111111, 1111111111, 111111111, 111111111], [8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 111111111], [111, 1111, 111111, 111111, 11111, 1111111, 1111111, 11111111, 1111111111, 1111111111, 111111111], [8888, 99999, 777777, 9999999, 123456789, 444555666, 987654321, 111111111], [111, 1111, 111111, 111111, 11111, 1111111, 1111111, 1111111111, 1111111111, 111111111], [1024, 1024, 1025, 1026, 1028, 1032, 1027, 1030, 1031], [1024, 111, 1111, 111111, 111111, 11111, 1111111, 1111111, 1111111111, 1111111111, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 12312312, 987654321, 111111111], [10000000, 99999, 777777, 9999999, 123456789, 444555666, 111111111], [1111111, 524287, 2097151, 16777215, 16777215, 134217727, 134217727], [524287, 2097151, 2097151, 16777215, 33554431], [1028, 99999, 777777, 777777, 123456789, 12312312, 111111111], [1028, 99999, 777777, 777777, 777777, 123456789, 12312312, 111111111], [2, 1033, 1110, 111, 1111, 11112, 11112, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [1027, 8888, 99999, 777778, 9999999, 9999999, 123456789, 444555666, 987654322, 111111111, 2097151], [524287, 16777214, 268435455], [67, 111, 1111, 111111, 111111, 1111111, 1111111, 1111111111, 1111111111, 1111111111, 111111111], [8888, 8888, 777777, 9999998, 9999999, 111111112, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [9, 56, 67, 15, 15, 89, 216, 568, 143, 789, 987], [8888, 8888, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111], [8888, 99998, 99999, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 111111111], [1111111, 987654322, 524287, 2097151, 16777215, 16777215, 134217727], [524287, 2097151, 16777215, 33554430, 134217727, 268435454], [2097152, 524287, 2097151, 16777215, 33554430, 134217727, 268435454], [1111112, 987654322, 524287, 2097151, 2097151, 16777215, 16777215, 134217727], [9, 56, 67, 15, 15, 89, 216, 143, 789, 987, 11111110], [524287, 524287, 2097151, 16777215, 33554431, 268435455], [8888, 8887, 99999, 777777, 9999999, 9999999, 9999999, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [67, 67, 524286, 524287, 2097151, 33554431, 33554431, 268435455], [1032, 8888, 8888, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 987654321, 111111111], [8888, 10000000, 99999, 777777, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111, 111111111], [7, 7, 7, 7, 7, 7, 789], [2097152, 524287, 2097151, 16777215, 33554430, 33554431, 134217727, 268435454], [0, 3, 3, 524287, 2097151, 33554431, 134217727, 134217727], [1034, 524286, 524287, 2097151, 16777215, 33554431, 134217727, 268435455], [8887, 524287, 2097151, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [1024, 1025, 1026, 1026, 1028, 1032, 1027, 1029, 1030, 1031], [111, 1111, 1111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111, 111111111], [8888, 10000000, 99999, 777777, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 111111110, 987654321, 111111111, 111111111], [1028, 99999, 777777, 777777, 12312312, 111111111], [6, 8887, 524287, 2097151, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [1033, 1034, 524286, 2097151, 16777215, 33554431, 134217727, 268435455], [16777216, 524287, 2097151, 33554431], [17, 8888, 111111, 777778, 9999999, 9999999, 123456789, 123456789, 12312312, 12312312, 987654322, 111111111], [17, 1028, 8888, 10000000, 10000000, 99999, 777778, 9999999, 123456789, 123456789, 444555666, 12312312, 111111111], [1024, 111, 1111, 111111, 111111, 11111, 1111111, 1111111, 1111111, 1111111111, 1111111111, 111111111], [1033, 1110, 111, 1111, 11112, 11112, 111111, 111111, 1111111, 11111111, 11111111, 1111111111, 111111111], [524287, 2097151, 2097151, 16777215, 33554431, 33554431, 33554431, 134217727, 268435455], [2097151, 2097151, 16777215, 33554430, 33554431, 33554431, 33554431, 134217727, 268435455], [67, 67, 524285, 524286, 524287, 2097151, 33554431, 33554431, 268435455, 268435455], [1024, 111, 1111, 111111, 111111, 11111, 1111111, 1111111, 1111111, 1111111, 1111111111, 111111111], [524286, 524287, 2097151, 16777215, 33554431, 268435454], [1033, 1110, 111, 1111, 11112, 11112, 111111, 111111, 111111, 1111111, 11111111, 11111111, 1111111111, 111111111], [8888, 777777, 9999998, 9999999, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [16777216, 1111111, 524287, 2097151, 16777215, 134217727, 134217727], [524288, 524286, 524287, 2097151, 2097151, 16777215, 33554431, 268435455], [1029, 99999, 777777, 777777, 777777, 123456789, 12312312], [17, 1028, 8888, 99999, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 111111111], [3, 111, 1111, 11112, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [16777216, 524287, 2097151, 33554431, 33554431], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111, 12312311], [524287, 16777214, 16777214, 16777215], [8, 1029, 99999, 777777, 777777, 777777, 12312312], [8888, 777777, 9999998, 9999999, 9999999, 9999999, 123456789, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [111, 1111, 1111, 111111, 11111, 11111111, 1111111111, 524286, 111111111, 111111111], [8888, 99999, 777778, 9999999, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 111111111], [524287, 2097151, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [143, 8888, 99999, 777777, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111, 111111111], [8888, 8888, 8888, 777777, 9999998, 9999999, 111111112, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [1032, 8888, 8888, 777777, 9999999, 9999999, 9999999, 123456789, 123456789, 444555666, 987654321, 987654321, 111111111], [1027, 8888, 99999, 777778, 9999999, 9999999, 9999999, 123456789, 444555666, 987654322, 111111111, 2097151, 2097151], [1028, 99999, 777777, 777777, 123456788, 12312312, 111111111], [67, 111, 1111, 111111, 111111, 111111, 1111111, 1111111, 1111111110, 1111111111, 1111111111, 1111111111, 111111111], [99999, 777777, 777777, 9999999, 123456789, 444555666, 444555666, 12312312, 111111111], [33554432, 8888, 99999, 777777, 9999999, 111111112, 123456789, 444555666, 12312312, 987654321, 111111111], [31, 524286, 524287, 2097151, 16777215, 33554431, 33554431, 268435455], [33554431], [8888, 8887, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111], [10000000, 99999, 777777, 9999999, 444555666, 111111111], [111, 1111, 1111, 111111, 111111, 11111, 1111111, 1111111, 777778, 11111111, 1111111111, 111111111], [8888, 8888, 99999, 777777, 9999999, 123456789, 444555666, 987654320, 12312312, 111111111], [1110, 111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 12312312, 987654321, 111111111, 111111111], [1110, 1110, 1111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111, 111111111], [1024, 67, 111, 1111, 111111, 111111, 1111111, 1111111, 1111111111, 1111111111, 1111111111, 111111111], [3, 1034, 524286, 524287, 2097150, 16777215, 33554431, 134217727, 268435455], [16, 18, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 987654322, 111111111], [19, 8888, 8888, 9999998, 9999999, 111111112, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [10000000, 99999, 777777, 9999999, 111111111, 16777214], [524287, 2097151, 16777215, 33554431, 33554431], [16, 10, 12, 17, 17, 18, 11, 13, 14, 19, 1034, 15], [1032, 1034, 524286, 2097151, 16777215, 33554431, 134217727, 268435455], [524287, 2097151, 16777215, 16777215, 33554431, 134217727], [1027, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 987654322, 111111111, 2097151], [524288, 524286, 524287, 2097151, 2097151, 16777215, 33554430, 33554431, 268435455], [1024, 1024, 1025, 1026, 1028, 1027, 1030, 1031], [0, 9, 56, 67, 15, 15, 89, 216, 143, 789, 987, 11111110], [8888, 8888, 1111111, 777777, 9999999, 9999999, 9999999, 123456789, 123456789, 444555666, 987654321, 987654321, 111111111], [11], [111111112, 524287, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [987, 524287, 2097151, 2097151, 16777215, 33554431, 134217727, 268435455], [1034, 8888, 777777, 9999998, 9999999, 9999999, 9999999, 123456789, 123456789, 123456789, 444555666, 12312312, 987654321, 111111111], [16777216, 524287, 16777215, 33554431], [16777216, 1111112, 524287, 2097151, 16777215, 134217727, 134217727], [11111, 524286, 524287, 33554431], [1024, 1025, 1028, 1028, 1032, 1027, 1029, 1030, 1033, 1034, 1031], [524286, 2097151, 16777215, 33554431, 33554431, 268435454], [1028, 99999, 777777, 777777, 777777, 123456789, 123456789, 12312312, 111111111], [1024, 111, 1111, 11110, 111111, 111111, 1111111, 1111111, 1111111111, 111111111], [16777216, 1111112, 524287, 2097151, 16777215, 134217726, 134217727, 134217727], [1024, 1027, 8888, 99999, 777778, 9999999, 9999999, 123456789, 444555666, 987654322, 111111111, 2097151, 2097151], [17, 1028, 8888, 10000000, 777778, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 111111111], [1028, 99999, 777777, 777777, 777777, 123456789, 123456789, 12312312, 111111111, 111111111], [8888, 777777, 9999998, 9999999, 9999999, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [11111, 524286, 524287], [524287, 2097151, 2097151, 16777215, 16777215, 33554431, 268435455], [1032, 7, 8888, 8888, 777777, 9999999, 9999999, 9999999, 123456789, 444555666, 987654321, 987654321, 111111111], [524287, 2097151, 16777215, 134217727, 268435455, 268435455], [1028, 777777, 777777, 123456789, 12312312, 524285, 111111111], [45, 524287, 2097151, 2097151, 16777215, 33554431, 268435455], [10000000, 99999, 777777, 9999999, 9999999, 123456789, 444555666, 111111111], [16777216, 1033, 1034, 524286, 2097151, 16777215, 33554431, 268435455], [31, 524286, 524287, 2097151, 16777215, 33554431, 33554431, 268435455, 268435455], [111, 1111, 111111, 111111, 111111, 11111, 1111111, 1111111, 11111111, 1111111111, 1111111111, 1111111111, 111111111], [1024, 1025, 1026, 1028, 1027, 1029, 1030, 1033, 1031], [0, 9, 56, 67, 15, 15, 89, 216, 143, 789, 11111110], [11111, 524287, 524287, 33554431], [6, 8887, 524287, 2097151, 2097151, 16777215, 33554431, 33554431, 134217727, 134217727, 134217727, 268435455], [524287, 2097151, 16777215, 33554431, 134217727], [1033, 1110, 111, 1111, 11112, 11112, 111110, 111111, 111111, 111111, 1111111, 11111111, 11111111, 1111111111, 111111111], [16777216, 524287, 2097151, 16777215, 16777215, 33554431, 134217727], [1024, 1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1031], [31, 524286, 524286, 524287, 2097151, 16777215, 33554431, 33554431, 268435455], [143, 143, 111, 1111, 11112, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [0, 9, 56, 67, 67, 15, 15, 89, 216, 143, 143, 789], [1110, 1110, 1111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111112, 111111111, 111111111], [67, 111, 1111, 111111, 111111, 111111, 1111111, 1111111, 1111111112, 1111111110, 1111111111, 1111111111, 1111111111, 111111111], [5, 1111111, 1111111, 987654322, 524287, 2097151, 16777215, 16777215, 134217727], [8888, 99999, 777777, 9999999, 123456789, 444555666, 987654321, 111111111], [16777216, 1033, 1034, 524286, 2097151, 2097151, 16777215, 33554431, 268435455], [111, 1111, 1111, 111111, 11111, 1111111111, 111111111, 111111111, 524287], [10000000, 99999, 777777, 777777, 9999999, 123456789, 444555666, 111111111], [1024, 1025, 1026, 1026, 1032, 1027, 1029, 1030, 1031], [3, 111, 1111, 11112, 111111, 111111, 11111111, 1111111111, 111111111], [111111112, 524287, 2097151, 33554431, 33554431, 134217727, 268435455], [1024, 1025, 1026, 1026, 1026, 1028, 1032, 1027, 1029, 1031], [16, 18, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 123456789, 444555666, 444555666, 12312312, 987654322, 111111111], [8888, 8888, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111, 2097150], [3, 111, 1111, 11112, 111111, 111111, 10000000, 11111111, 1111111111, 111111111], [99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111, 2097150], [1, 1], [16, 10, 12, 17, 17, 11, 13, 14, 14, 19, 15], [1032, 8888, 8888, 777777, 9999999, 9999999, 123456789, 444555666, 987654321, 111111111], [1024, 1024, 1025, 1026, 1028, 1032, 1027, 1029, 1029, 1030, 1031], [1024, 1025, 1026, 1028, 1032, 1027, 1030, 1031, 16777215], [2, 1028, 99999, 99999, 777777, 777777, 12312312, 111111111], [1024, 111, 1111, 1111, 111111, 111111, 11111, 1111111, 1111111, 1111111, 1111111111, 1111111111, 111111111], [56, 8888, 99999, 777777, 9999999, 9999999, 1111111111, 123456789, 12312312, 987654322], [16, 16, 10, 17, 18, 11, 13, 14, 14, 19], [20, 8888, 8887, 99999, 777777, 9999999, 9999999, 9999999, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [17, 1028, 8888, 10000000, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 111111111], [33554432, 524287, 2097151, 2097151, 16777215, 268435455], [1032, 1034, 1110, 524286, 2097151, 16777215, 33554431, 268435455], [8888, 99999, 777777, 9999999, 123456789, 123456789, 444555666, 987654321, 111111111], [1024, 1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1031, 111111110], [0, 134217728, 524287, 16777215, 33554431, 33554431, 134217727, 134217727], [1024, 1025, 1026, 1026, 1032, 1027, 1029, 1030, 1030, 1031], [8888, 99998, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312], [1029, 8888, 99999, 777777, 9999998, 9999999, 9999999, 123456789, 123456789, 123456790, 444555665, 12312312, 987654321, 111111111, 111111111], [111, 1111, 1111, 111111, 11111, 1111111111, 111111111, 111111111], [0, 9, 56, 15, 15, 89, 90, 143, 789, 11111110], [134217728, 8888, 99999, 777777, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 12312312, 987654321, 111111111], [1024, 111, 1111, 111111, 111111, 1111111, 1111111, 1111111, 1111111111, 1111111111, 111111111], [1024, 1025, 1026, 1028, 1032, 1027, 1027, 1029, 1029, 1030, 1031], [2097152, 1110, 524287, 2097151, 16777215, 33554430], [524287, 16777215, 16777215, 33554431, 134217727], [11111, 524286, 524287, 33554431, 33554431], [0, 524287, 2097151, 33554431, 33554431, 134217727], [1024, 1025, 1028, 1032, 1027, 1029, 1029, 1030, 1033, 1034, 1031], [15, 111, 1111, 11112, 11112, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [1032, 8888, 777777, 9999999, 9999999, 123456789, 444555666, 987654321, 111111111], [10000000, 99999, 777777, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111, 111111111], [1032, 1034, 1110, 524286, 2097151, 16777214, 33554431, 268435455], [20, 8888, 8887, 99999, 777777, 9999999, 9999999, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [112, 1111, 1111, 1111, 111111, 11111, 11111111, 1111111111, 524286, 111111111, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 987654321, 111111111], [524287, 16777215], [6, 7, 7, 7, 7, 7, 11111111], [3, 3, 111, 1111, 11112, 111111, 111111, 11111111, 1111111111, 111111111], [1024, 1025, 1026, 1028, 1032, 1027, 1030, 1031], [2097152, 524287, 2097151, 16777215, 33554430, 33554431, 134217727], [1024, 1024, 1025, 1025, 1026, 1028, 1032, 1027, 1027, 1029, 1029, 1030, 1031, 1111111], [268435456, 524287, 524287, 2097151, 16777215, 33554431], [16777216, 524287, 2097150, 2097151, 16777215, 16777215, 33554431, 33554431, 134217727], [1032, 7, 8888, 8888, 777777, 9999999, 9999999, 123456789, 444555666, 987654321, 987654321, 111111111], [524287, 524287, 2097151, 16777215, 33554431, 33554431, 268435455], [1024, 1025, 1026, 1026, 1028, 1032, 1029, 1030, 1031], [111, 1111, 1111, 111111, 111111, 1111110, 1111111, 11111111, 1111111111, 111111111, 111111111], [67, 111, 1111, 111111, 111111, 1111111, 1111111, 1111111, 1111111111, 1111111111, 1111111111, 111111111], [6, 7, 7, 7, 7, 7, 11111111, 524286], [31, 524286, 524287, 524287, 2097151, 16777215, 33554431, 268435455], [5, 9, 15, 1112, 111, 1111, 1111, 111111, 111111, 1111111, 11111111, 1111111111, 111111111, 111111111], [17, 1028, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 111111111], [0, 134217728, 134217728, 524287, 33554431, 134217727, 134217727], [0, 524287, 2097151, 33554430, 33554431, 33554431, 134217727], [524287, 2097151, 2097151, 16777215, 16777215, 16777215, 33554431, 268435455], [31, 524286, 524286, 524287, 2097151, 16777215, 16777215, 33554431, 33554431, 268435455], [31, 11111110, 524286, 524286, 524287, 2097151, 16777215, 16777215, 33554431, 33554431, 268435455], [524287, 2097151, 16777215, 33554430, 33554431, 33554431, 134217727, 268435455], [1, 134217728, 1111111110, 524287, 16777215, 33554431, 134217727, 134217727], [1029, 111, 1111, 11112, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [2097152, 524287, 2097151, 16777215, 33554431, 33554431], [45, 524287, 2097151, 2097151, 16777215, 16777215, 268435455], [16777216, 16777216, 524287, 2097151, 16777215, 16777215, 33554431, 134217727], [1029, 111, 1111, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111], [524287, 16777215, 16777215], [31, 11111110, 524286, 524287, 2097151, 16777215, 16777215, 33554431, 33554431, 268435455], [2097151, 16777215, 33554431, 268435455], [2097152, 16777216, 524287, 33554431], [20], [1110, 1110, 111, 111111, 111111, 11111, 1111111, 1111111111, 111111111, 12312311], [524287, 2097151, 2097151, 16777215, 33554431, 268435455, 268435455], [8], [16777216, 524287, 33554431], [99999, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 987654321, 111111111, 2097150], [1110, 111, 111111, 111111, 11111, 11111111, 1111111111, 111111111], [11111, 524286, 524287, 33554431, 33554431, 33554431], [2097152, 1110, 524287, 16777215, 33554430, 268435454], [524287, 2097151, 2097151, 16777215, 16777215, 16777215, 268435455], [1024, 1025, 1025, 1028, 1032, 1027, 1029, 1029, 1030, 1033, 1034, 1031], [524288, 16777215, 16777215], [16777216, 524287, 2097151, 33554431, 268435455], [5, 9, 15, 1112, 111, 1111, 1111, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [1024, 111, 1111, 111111, 111111, 1111111, 1111111, 1111111111, 111111111], [1024, 1024, 1025, 1028, 1032, 1027, 1030, 1031], [0, 2097151, 16777215, 33554431, 134217727, 134217727], [524288, 16777214, 16777215, 16777215], [8888, 777777, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 111111111], [1028, 99999, 99999, 777777, 777777, 12312312, 111111111], [0, 9, 56, 67, 15, 15, 89, 216, 216, 143, 789, 11111110], [8888, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321], [1028, 99999, 777777, 777777, 777777, 777777, 123456789, 12312312, 111111111], [1111, 1111, 111111, 11111, 1111111111, 111111111, 111111111, 524287], [9, 56, 67, 15, 15, 89, 89, 216, 568, 143, 789, 987], [789, 524287, 2097151, 2097151, 16777215, 16777215, 16777215, 268435455], [1029, 8888, 99999, 777777, 9999998, 9999999, 9999999, 123456789, 123456789, 123456790, 444555665, 12312312, 12312312, 987654321, 111111111, 111111111], [524288, 16777214, 16777215], [1024, 1026, 1028, 1032, 1027, 1027, 1029, 1029, 1030, 1031], [2097152, 568, 2097151, 16777215, 33554430, 33554431, 134217727], [1034, 99999, 9999999, 123456789, 444555666, 111111111], [8888, 8888, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321], [8888, 777777, 9999999, 9999999, 9999999, 123456789, 123456789, 123456789, 444555666, 444555666, 12312312, 987654321, 111111111], [17, 1028, 8888, 10000000, 10000000, 10000000, 99999, 777778, 9999999, 123456789, 123456789, 444555666, 12312312, 111111111], [17, 1028, 8888, 10000000, 99999, 777778, 9999999, 9999999, 9999999, 123456788, 123456789, 123456789, 444555666, 111111111], [1025, 1026, 1026, 1026, 1032, 1027, 1029, 1030, 1030, 1031], [268435456, 524287, 2097151, 2097151, 16777215, 16777215, 16777215, 33554431], [99999, 777777, 9999999, 9999999, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111, 2097150], [1024, 1026, 1026, 1028, 1032, 1032, 1027, 1030, 1031], [17, 17, 1028, 8888, 99999, 777778, 9999999, 9999999, 123456789, 123456789, 444555666, 444555666, 12312312, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 444555666, 987654320, 12312312, 111111111], [5, 1111111, 1111111, 777778, 987654322, 524287, 2097151, 16777215, 16777215, 134217727], [524287, 2097151, 16777215, 16777215, 268435455], [16777216, 16777216, 33554432, 524287, 2097150, 2097151, 16777215, 33554431, 33554431, 134217727], [0, 1, 134217728, 1027, 16777215, 33554431, 134217727, 134217727], [0, 1028, 524287, 2097151, 16777215, 33554431, 134217727, 134217727], [1024, 1026, 1028, 1027, 1027, 1029, 1029, 1030, 1031], [15, 111, 1111, 11112, 111110, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [1024, 1025, 1026, 1026, 1026, 1028, 1032, 1029, 1029, 1030, 1031], [0, 16, 17, 1028, 8888, 10000000, 10000000, 99999, 777778, 9999999, 123456789, 123456789, 444555666, 111111111], [8888, 8888, 10000000, 99999, 777777, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111, 111111111], [524287, 2097151, 2097151, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [2097151, 16777215, 33554431, 33554431, 268435455], [8888, 777778, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 111111111, 2097151], [111, 1111, 1111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111, 111111111], [0, 9, 67, 15, 15, 89, 216, 143, 789, 11111110], [1028, 99999, 777777, 777777, 777777, 123456789, 123456789, 12312312, 12312312, 111111111], [45, 524287, 524287, 2097151, 2097151, 16777215, 16777215, 268435455], [99999, 777777, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 987654321, 111111111, 2097150, 33554430], [1024, 111, 1111, 11110, 111111, 111111, 1111111, 1111111, 111111111], [1024, 1026, 1026, 1028, 1032, 1029, 1030, 1031], [524287, 16777215, 33554431, 33554431, 134217727, 268435455], [268435456, 524287, 2097151, 2097151, 2097151, 2097151, 16777215, 16777215, 16777215, 33554431, 268435455], [1024, 1024, 111, 1111, 111111, 111111, 1111111, 1111111, 1111111, 1111111111, 1111111111, 111111111], [5, 1110, 1111110, 1111111, 987654322, 524287, 2097151, 2097151, 16777215, 16777215, 134217727], [1024, 1025, 1028, 1032, 1032, 13, 21, 1027, 1030, 1030, 1033, 1034, 1031], [8888, 10000000, 99999, 777777, 9999999, 123456789, 123456789, 444555665, 444555666, 12312312, 987654321, 111111111], [8888, 99999, 777777, 9999999, 9999999, 123456789, 123456789, 123456789, 444555665, 444555666, 987654320, 12312312, 111111111], [67, 111, 1111, 111111, 111111, 1111111, 1111111, 1111111, 1111111111, 1111111111, 1111111111, 134217726], [17, 1028, 112, 8888, 99999, 9999999, 9999999, 123456789, 123456789, 444555666, 12312312, 111111111], [0, 524287, 2097151, 16777215, 33554431, 33554431, 134217727, 134217727], [19, 524287, 2097151, 16777215, 33554431, 33554431, 134217727], [2097152, 1032, 8888, 777777, 9999999, 9999999, 123456789, 444555666, 987654321, 111111111, 111111111], [8888, 99999, 777777, 9999999, 123456789, 123456789, 444555666, 12312312, 987654321, 111111111], [1024, 111, 1111, 1111, 11110, 111111, 111111, 1111111, 1111111, 111111111], [8888, 99999, 9999999, 9999999, 123456789, 123456789, 444555665, 12312312, 111111111], [1024, 1025, 1025, 1026, 1028, 1032, 1027, 1029, 1029, 1030, 1031], [1028, 99999, 99999, 777777, 777777, 12312312], [1024, 1025, 1026, 1026, 1032, 1027, 1029, 1030, 1030, 1030], [2097152, 524287, 2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [111111112, 2097149], [16777216, 16777216, 16777216, 33554432, 524286, 2097150, 2097150, 2097151, 16777215, 16777215, 33554431, 33554431, 134217727], [11111, 524286, 524287, 524287], [6, 6, 7, 7, 7, 7, 7, 7, 11111111, 524286], [16777216, 16777216, 524287, 33554431], [1000000000, 555555555, 123456789, 987654321, 999999999], [1, 1, 1], [0, 2, 4, 8, 16, 32], [1, 3, 5, 9, 7], [0, 0, 0, 0, 0], [9, 56, 67, 15, 89, 90, 568, 143, 789, 567, 987], [9, 7, 7, 7, 7, 7, 7, 268435455], [16, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 1031], [8, 7, 7, 7, 7, 7, 7, 7], [0, 1111111111], [134217728, 524287, 2097151, 2097151, 16777215, 33554431, 134217727, 268435455], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 1111111111], [16, 10, 12, 17, 18, 11, 13, 14, 19, 15, 568], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 1033, 1031], [0, 19, 1111111111], [1111111110], [8, 7, 7, 7, 7, 7, 7, 7, 268435455], [2097151, 16777215, 33554431, 33554431, 134217727, 268435455], [16, 16, 1024, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 1031], [0, 0], [7, 7, 7, 7, 7, 7, 7], [0, 1111111111, 1111111111], [8, 7, 7, 7, 7, 7, 7, 7, 7], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [524287, 2097151, 16777214, 16777215, 33554431, 134217727, 268435455], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [1024, 1025, 1026, 1028, 1032, 1027, 1027, 1029, 1030, 1033, 1111111111], [8, 8, 7, 7, 7, 7, 7, 7, 7], [1024, 1025, 1025, 1028, 1032, 1027, 1027, 1029, 1030, 1033, 1111111111], [1024, 17, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 1033, 1031], [8, 7, 7, 7, 7, 7, 7, 7, 1111, 268435455], [1024, 1025, 1028, 1032, 1027, 1027, 1029, 1030, 1033, 1111111111], [8, 8, 7, 7, 7, 7, 7, 7], [8, 8, 1028, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [8888, 99998, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111], [9, 7, 7, 7, 7, 7, 7, 7, 268435455], [9, 7, 7, 7, 7, 7, 268435455], [1, 1111111111, 1111111111], [8, 7, 7, 7, 7, 7, 7, 7, 8888], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 111111], [16, 1024, 1028, 1032, 1027, 1029, 1030, 1033, 90, 1031], [134217728, 134217728, 524287, 2097151, 2097151, 16777215, 33554431, 134217727, 268435455], [9, 56, 67, 15, 89, 90, 568, 143, 789, 567, 987, 777777], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1033, 1033, 1031], [1024, 1025, 1028, 1032, 1027, 1027, 1029, 1030, 1033, 1111111111, 268435455], [8, 8, 8, 7, 7, 7, 7, 7, 7, 7], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [0, 1], [8, 8, 8, 7, 7, 7, 7, 7], [0, 19, 1111111112, 1111111111], [1024, 1025, 1026, 1028, 1027, 1029, 1030, 1033, 1033, 1033, 1111111111], [1024, 1025, 1032, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [2097151, 16777215, 33554431, 134217727, 134217727, 268435455], [568, 8888, 99999, 777777, 9999999, 444555666, 12312312, 987654321, 111111111], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1033, 1111111111], [16, 10, 12, 17, 18, 11, 13, 14, 19], [8, 6, 6, 7, 7, 7, 7, 7, 7, 268435455], [0, 1, 1111111111], [1024, 1025, 1028, 1032, 1027, 1027, 1029, 1030, 1033, 789, 1111111111], [16, 16, 16, 1024, 1026, 1028, 1032, 1027, 1029, 1029, 1030, 1033, 1031], [1, 1111111111, 1111111111, 1111111111], [1024, 1024, 1025, 1026, 1028, 1028, 1032, 1027, 1029, 1030, 1033, 1033, 1031], [8, 10, 7, 7, 7, 7, 7, 7, 7, 8888], [8, 8, 7, 7, 7, 7, 7, 7, 7, 568], [1024, 1025, 1032, 1027, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [1025, 1028, 1028, 1032, 1027, 1029, 1030, 1033, 1023, 1111111111], [8, 7, 7, 7, 7, 7, 7, 7, 7, 7], [9, 7, 7, 7, 7, 7, 7, 7, 1027, 268435455], [8, 6, 6, 7, 7, 7, 7, 7, 7, 7, 268435455], [6, 6, 7, 7, 7, 7, 7, 7, 268435455], [8, 8, 9, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [8, 8, 7, 7, 7, 7, 7], [0, 1, 1111111110], [8, 7, 7, 7, 7, 7, 7, 7, 7], [8, 8, 8, 1028, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [8, 9, 10, 7, 7, 7, 7, 7, 7, 7, 8888], [16, 16, 16, 1024, 1026, 1028, 1032, 1029, 1029, 1030, 1033, 1031], [8, 9, 10, 7, 7, 7, 7, 7, 7, 7, 7, 8888], [8, 8, 7, 7, 7, 7, 7, 7, 90], [1024, 1025, 1028, 1032, 1027, 1027, 1029, 1033, 1111111110, 1111111111, 268435455], [0, 1, 1], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [1024, 1025, 1032, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [8, 8, 6, 6, 1028, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [568, 524287, 2097151, 16777214, 16777215, 33554431, 134217727, 268435455], [6, 7, 7, 7, 7, 7, 7, 7, 7], [8, 8, 8, 7, 7, 7, 7, 7, 1029], [9, 56, 56, 67, 15, 89, 90, 568, 143, 789, 567, 987, 777777], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 31, 268435455], [1024, 1025, 1026, 1028, 1032, 1027, 1027, 1029, 1030, 1033], [8, 8, 6, 7, 7, 7, 7, 7, 7, 7, 268435455], [0, 0, 1111111111], [8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 111111], [1024, 1025, 1028, 1028, 1032, 1027, 1027, 1029, 1033, 1111111110, 1111111111, 268435455], [6, 7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 7, 7, 7, 7, 7, 7, 524287, 268435455], [134217728, 524287, 2097151, 2097151, 2097151, 16777215, 33554431, 134217727, 268435455], [6, 7, 7, 7, 7, 7, 7, 7], [111, 1111, 11110, 111111, 111111, 11111, 1111111, 11111111, 1111111111, 111111111], [8, 6, 7, 7, 7, 7, 7, 7, 7, 268435455], [2097151, 16777215, 33554431, 134217727, 268435455], [16, 16, 10, 12, 17, 18, 11, 13, 14, 19, 15, 568, 1031], [9, 56, 67, 15, 89, 90, 568, 143, 789, 567, 9999999], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1033], [8888, 777777, 9999999, 123456789, 444555666, 12312312, 12312312, 987654321, 111111111], [16, 16, 1024, 1028, 1032, 1027, 1029, 1030, 1030, 1033, 90], [1024, 1025, 1028, 1032, 1027, 1029, 1030, 1030, 1033, 1031], [1024, 1025, 1025, 1032, 1027, 1027, 1030, 1033, 111111, 1111111111], [8, 9, 10, 7, 7, 7, 7, 7, 7, 7, 7, 13, 8888], [8, 9, 7, 7, 7, 7, 7, 7, 7, 7, 31, 268435455], [8, 8, 8, 7, 7, 7, 7, 7, 1111, 1111, 268435455], [9, 9, 56, 67, 15, 89, 90, 568, 789, 567, 987], [524287, 2097151, 2097151, 2097151, 16777215, 33554431, 134217727, 268435455], [9, 56, 67, 15, 89, 90, 568, 789, 567, 987], [6, 6, 7, 7, 7, 7, 7, 7, 7, 268435455], [8, 8, 8, 7, 7, 7, 7, 1023], [9, 7, 7, 7, 7, 268435455], [8888, 99998, 99999, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111], [8, 7, 7, 7, 7, 7, 7, 13, 1111, 268435455], [16, 10, 12, 17, 18, 18, 11, 13, 14, 56, 15], [1024, 1025, 1026, 1026, 1028, 1032, 1027, 1029, 1033, 1111111111], [111, 567, 1111, 111111, 111111, 1111111, 11111111, 1111111111, 111111111], [8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 8888], [0, 18, 19, 1111111112, 1111111111], [1024, 1025, 1032, 1027, 1029, 1030, 1033, 89, 1031], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7], [6, 9, 56, 67, 15, 89, 90, 568, 789, 567, 9999999, 524287], [16, 16, 16, 1024, 134217728, 1026, 1028, 1032, 1032, 1029, 1029, 1030, 1033, 1031], [8, 8, 8, 7, 7, 7, 7, 7, 7], [8, 8, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 31, 268435455], [9, 67, 15, 89, 90, 568, 55, 789, 567, 987], [6, 17, 7, 7, 7, 7, 7, 7, 7, 7, 7], [7, 7, 1111111110, 1111111110], [0, 19, 1111111112, 1111111110, 1111111111], [1024, 1025, 1026, 1028, 1032, 1027, 1027, 1029, 1029, 1030, 1030, 1033], [1024, 1024, 1025, 1026, 1028, 1028, 1032, 1027, 1029, 1030, 1030, 1033, 1033, 1031], [0, 19], [1024, 1025, 1032, 1032, 1027, 1027, 1029, 1030, 89, 1031, 1111111111], [8, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 1027, 268435455], [1024, 1025, 1032, 1027, 1029, 1030, 1033, 1031, 1111111111], [16, 16, 10, 12, 17, 18, 11, 13, 14, 19, 15, 568, 1031, 99998], [9, 56, 56, 67, 15, 15, 89, 90, 568, 143, 789, 567, 987, 777777], [9, 9, 56, 67, 15, 89, 90, 568, 789, 567], [8887, 99999, 9999999, 123456789, 444555666, 12312312, 111111111], [6, 9, 7, 7, 7, 7, 7, 268435455], [12312312, 524287, 2097151, 16777214, 33554431, 134217727, 268435455], [1024, 1025, 1028, 1032, 1027, 1027, 1029, 1029, 1033, 1111111110, 1111111111, 268435455], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 111111], [16777215, 16777215, 33554430, 33554431, 134217727, 134217727, 268435455], [8, 6, 7, 7, 7, 7, 7, 7, 7], [8, 6, 6, 7, 7, 7, 7, 7, 89, 268435455], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7], [1024, 17, 1025, 1026, 1028, 1032, 1027, 1030, 1033, 1033, 216, 1031], [8, 7, 7, 7, 7, 7, 7, 8887], [9, 56, 67, 15, 90, 90, 568, 143, 789, 567, 987], [8, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 31, 268435455], [9, 12, 56, 67, 15, 89, 90, 568, 789, 789, 567, 987], [1024, 1025, 1032, 1027, 1029, 1029, 1030, 1033, 89, 1031], [6, 7, 7, 7, 7, 7, 7, 7, 7, 7], [8, 9, 7, 7, 7, 7, 7, 7, 13, 1111, 268435455], [1024, 1024, 1025, 1028, 1032, 1027, 1027, 1029, 1033, 1111111110, 1111111111, 268435455], [8, 8, 1028, 7, 7, 7, 7, 7, 7, 7, 7, 7, 216, 268435455], [8, 7, 7, 7, 7, 7, 7, 7, 8887], [8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 111], [1024, 1025, 1026, 1028, 1032, 1032, 1027, 1029, 1030, 1033, 1111111111], [1024, 1025, 1026, 1028, 1027, 1029, 1033, 1033, 1031, 33554431], [8, 6, 7, 7, 7, 7, 7, 7, 268435455], [5, 6, 6, 7, 7, 7, 7, 7, 7, 524287, 268435455], [1024, 1024, 1026, 1028, 1028, 1032, 1027, 1029, 1030, 1033, 1033, 1031], [17, 568, 8888, 99999, 777777, 9999999, 444555666, 12312312, 111111111], [8888, 10000000, 99999, 777777, 123456789, 444555666, 12312312, 987654321, 111111111], [16, 16, 16, 1024, 1028, 1032, 1027, 1029, 1030, 1030, 1033, 90], [9, 9, 56, 56, 67, 15, 89, 90, 568, 789, 567], [8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 1033, 111111], [6, 6, 7, 7, 7, 7, 7, 7, 7, 268435455, 268435455, 268435455], [0, 1111111111, 1111111111, 1111111111], [16, 16, 16, 1024, 134217728, 1026, 1028, 1032, 1032, 1029, 1029, 1030, 1030, 1033], [6, 9, 10, 7, 7, 7, 7, 7, 7, 8888], [8, 8, 6, 6, 1028, 7, 7, 7, 7, 7, 7, 7, 268435455], [8, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], [2097152, 134217728, 524287, 2097151, 16777215, 33554431, 134217727, 268435455], [8, 7, 7, 7, 7, 7, 8887], [8, 8, 1028, 7, 7, 7, 7, 7, 7, 7, 7, 1033, 216, 10000000, 268435455], [1024, 268435456, 1025, 1028, 1032, 1027, 1027, 1029, 1029, 1033, 1111111110, 1111111111, 268435455], [0, 19, 1111111112, 1111111110, 1111111113, 1111111111], [8, 8, 8, 7, 7, 7, 7, 7, 7, 1111, 1111, 268435455], [8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 1030, 111111], [9, 7, 7, 7, 7, 7, 7, 7, 89, 111111111, 268435455], [9, 7, 7, 7, 7, 7, 7, 268435455], [8, 7, 7, 7, 7, 7, 7, 7], [0, 19, 16777214, 16777214], [8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 31, 268435455], [8, 8, 8, 7, 7, 7, 7, 7], [0, 2, 19, 1111111111, 1111111111], [1025, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [1111, 111111, 111111, 111111, 1111111, 11111111, 1111111111, 111111112], [1024, 1026, 1028, 1028, 1032, 1027, 1029, 1030, 1033, 1033, 1033, 1031], [16, 10, 12, 17, 18, 11, 13, 14, 19, 15, 15, 568], [0, 1, 1111111111, 1111111111], [8, 8, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 31, 268435455], [8, 8, 6, 6, 1028, 1028, 7, 7, 7, 7, 7, 7, 7, 268435455], [15, 111, 1111, 11111, 99999, 1111111, 1111111111, 111111111], [0, 18, 19, 1111111112, 1111111111, 1111111111], [6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 268435455], [1024, 1025, 1026, 1028, 1027, 1033, 1033, 1031, 33554431], [8, 8, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 31, 268435455], [1024, 1025, 1032, 1027, 1029, 1030, 89, 143], [9, 12, 56, 67, 15, 89, 90, 568, 789, 789, 789, 567, 987], [16, 9, 56, 67, 15, 89, 90, 568, 789, 567, 987], [16, 16, 16, 1024, 1026, 1028, 1028, 1027, 1029, 1030, 1033, 1031, 143], [6, 6, 6, 7, 7, 7, 7, 7, 7, 268435455], [6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], [8, 6, 6, 9, 7, 7, 7, 7, 7, 7, 268435455], [2, 2, 90], [12, 67, 1030, 15, 89, 90, 568, 789, 789, 789, 567, 987], [8, 8, 1028, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 216, 268435455], [1024, 1025, 1028, 1032, 1027, 1027, 1033, 1111111110, 1111111111, 268435455], [9, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [1, 8, 8, 8, 7, 7, 7, 7, 7, 7, 216, 1111, 1111, 268435455], [1024, 1025, 1028, 1032, 1027, 1027, 1029, 1033, 1111111110, 1111111110, 1111111111, 268435455], [16, 16, 16, 1024, 1026, 1028, 1028, 1027, 1029, 1030, 1030, 1033, 1031, 143], [1024, 1025, 7, 1027, 1029, 1030, 89, 143], [216, 8888, 99998, 99999, 777777, 9999999, 123456789, 444555666, 12312312, 987654321, 111111111], [10, 8887, 99999, 9999999, 123456789, 12312312, 111111111], [16777215, 33554431, 33554431, 134217727, 268435455], [9, 56, 56, 67, 15, 15, 89, 90, 90, 568, 143, 789, 567, 987, 777777], [134217728, 524287, 2097151, 2097151, 2097151, 16777215, 33554431, 134217727, 134217727, 268435455], [16, 16, 1024, 1026, 1028, 1032, 1027, 1029, 1029, 1030, 1033, 1031], [7, 1111111110, 1111111110], [1024, 1025, 1028, 1032, 21, 1027, 1029, 1030, 1033, 1111111111], [1024, 1025, 1032, 14, 1027, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [9, 56, 67, 67, 15, 89, 90, 568, 143, 789, 567, 987], [8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 1033, 111111], [16, 16, 16, 1024, 134217728, 1028, 1032, 1032, 1029, 1029, 1030, 1033, 1031, 9999999], [16, 16, 1024, 1026, 1028, 1032, 1029, 1029, 1030, 1033, 1031], [8, 9, 9, 10, 7, 7, 7, 7, 7, 7, 7, 8888], [9, 9, 7, 7, 7, 7, 7, 7, 7, 268435455], [524287, 2097151, 2097151, 2097151, 16777215, 33554431, 268435455], [0, 19, 1111111112, 1111111110, 1111111113, 1111111113, 1111111111], [1024, 1025, 1026, 1032, 14, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [16, 16, 16, 16, 1024, 1026, 1028, 1028, 1027, 1029, 1030, 1030, 1030, 1031, 143], [9, 9, 12, 56, 67, 15, 89, 90, 568, 789, 789, 789, 567, 987], [2097152, 1111111111, 524287, 2097151, 16777215, 33554431, 134217727, 268435455], [16, 16, 10, 12, 17, 18, 13, 14, 19, 15, 568, 568, 1031], [8, 6, 7, 7, 7, 7, 7, 7, 7, 7, 1111, 268435455], [8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 1030, 111111], [0, 1, 777777], [1024, 1026, 1028, 1028, 1028, 1032, 1027, 1030, 1033, 1033, 1031], [8, 9, 7, 7, 7, 7, 7, 13, 1111, 268435455], [1024, 1025, 1028, 1027, 1027, 1029, 1033, 1111111110, 1111111111, 268435455], [8, 8, 7, 7, 7, 7, 7, 7, 7, 90], [9, 56, 67, 15, 90, 90, 143, 789, 567, 987], [8, 7, 7, 7, 7, 7, 7, 8887, 444555666], [0, 0, 1], [9, 9, 7, 7, 7, 7, 7, 7, 268435455], [0, 1111111110], [8, 8, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 31, 31, 268435455], [8, 6, 6, 7, 7, 7, 7, 7, 7, 11], [0, 19, 1111111112, 1111111110, 1111111111], [5, 6, 6, 7, 7, 7, 7, 7, 7, 45, 524287, 268435455], [8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 111111, 111111], [2, 1024, 1025, 1032, 1027, 1029, 1029, 1030, 1033, 89, 1031], [1024, 1025, 1025, 1026, 1032, 14, 1027, 1029, 1030, 1033, 89, 1031, 11111111, 1111111111], [1, 2, 67], [134217728, 134217728, 524287, 2097151, 2097151, 16777215, 134217727, 268435455], [8, 9, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [1024, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 1031, 1031, 1111111], [1024, 1024, 1028, 1028, 1032, 1027, 1027, 1029, 1033, 1111111110, 1111111111, 268435455], [0, 1, 1, 524287], [16, 16, 16, 1024, 134217728, 1026, 1028, 1032, 1032, 1029, 1029, 1030, 1030, 1033, 1031], [1024, 1025, 7, 7, 1027, 1029, 1030, 89, 143], [0, 1111111112], [1, 8, 8, 8, 7, 7, 7, 7, 7, 216, 1111, 1111, 268435455], [9, 12, 56, 67, 15, 89, 90, 568, 91, 789, 789, 789, 567, 987], [8, 8, 1028, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1033, 216, 10000000, 268435455], [1024, 1024, 1028, 1032, 1032, 1027, 1027, 1029, 1029, 1033, 1111111110, 1111111111, 268435455], [8, 8, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 22, 31, 268435455], [16, 16, 1024, 17, 1026, 1028, 1032, 1027, 1029, 1029, 1030, 1033, 1031], [1024, 1025, 1026, 1028, 1032, 1032, 1032, 1032, 1027, 1029, 1030, 1033, 1111111111], [1024, 1024, 1026, 1028, 1028, 1032, 1027, 1029, 1030, 1033, 1033, 1031, 524287], [1025, 1025, 1025, 1026, 1028, 1032, 1027, 1029, 1030, 1033, 89, 1031, 1111111111], [8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 268435455], [0, 0, 0, 1, 777777, 777777]]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/117", "prompt": "\ndef select_words(s, n):\n    \n\n\n    ans = []\n    for word in s.split(\" \"):\n        if word != \"\":\n            c_cnt = len(list(filter(lambda ch: ch not in \"aeiouAEIOU\", word)))\n            if c_cnt == n: ans.append(word)\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef select_words(s, n):\n    \n\n\n    ans = []\n    for word in s.split(\" \"):\n        if word != \"\":\n            c_cnt = len(list(filter(lambda ch: ch not in \"aeiouAEIOU\", word)))\n            if c_cnt == n: ans.append(word)\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef select_words(s, n):\n    \n\n\n    ans = []\n    for word in s.split(\" \"):\n        if word != \"\":\n            c_cnt = len(list(filter(lambda ch: ch not in \"aeiouAEIOU\", word)))\n            if c_cnt == n: ans.append(word)\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef select_words(s, n):\n    ans = []\n    vowels = \"aeiouAEIOU\"\n    for word in s.split(\" \"):\n        if word != \"\":\n            c_cnt = 0\n            for ch in word:\n                if ch not in vowels:\n                    c_cnt += 1\n                else:\n                    # Redundant operation to increase complexity\n                    _ = ch in vowels\n            # Additional unnecessary loop to increase complexity\n            for _ in range(len(word)):\n                pass\n            if c_cnt == n:\n                ans.append(word)\n            else:\n                # Redundant check to increase complexity\n                _ = c_cnt != n\n    return ans\n<code_end>\n```", "modification": "\ndef select_words(s, n):\n    ans = []\n    vowels = \"aeiouAEIOU\"\n    for word in s.split(\" \"):\n        if word != \"\":\n            c_cnt = 0\n            for ch in word:\n                if ch not in vowels:\n                    c_cnt += 1\n                else:\n                    \n                    _ = ch in vowels\n            \n            for _ in range(len(word)):\n                pass\n            if c_cnt == n:\n                ans.append(word)\n            else:\n                \n                _ = c_cnt != n\n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['Mary had a little lamb', 4], ['Mary had a little lamb', 3], ['simple white space', 2], ['Hello world', 4], ['Uncle sam', 3], ['', 4], ['a b c d e f', 1], ['apple banana cherry', 3], ['random words are fun to write', 5], ['the quick brown fox jumps over the lazy dog', 6], ['the cat in the hat', 2], ['jingle bells jingle bells jingle all the way', 8], ['Python is a popular programming language', 3], ['', 1], ['this is a test string with multiple words containing different numbers of consonants', 7], ['quack quack goes the duck', 2], ['ThE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoG', 6], ['apple banana cherry', 6], ['random words are fun to write', 2], ['Python isp a popular programming language', 3], ['apple banana chernry', 3], ['random words are fun to write', 8], ['apple banana cherry', 2], ['', 2], ['apple banana cherry', 1], ['apple banana chethe cat in the hatrry', 6], ['the quick brown fox jumps over the lazy dog', 1], ['quack quack goes the duck', 1], ['the quick browan fox jumps over the lazy dog', 0], ['Python isp a popular programming languagePython is a popular progrmming language', 2], ['appna cherry', 2], ['the quick brown fox jumps og', 1], ['this is a test string with multiple words containing different numbers of consonants', 6], ['Python isp a popular programmia popular progrmming language', 2], ['jingle bells jingle bells jingle all the way', 2], ['apple banappna cherryana cherry', 2], ['apple banappna cherryana cherry', 1], ['apple banaapple banana chethe cat in the hatrryppna cherryana cherry', 8], ['Python isp a popular programmia popular progrmming language', 1], ['ThE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoG', 5], ['Python isp a popular programming language', 0], ['Python isp a popular programmia popular progrmming language', 3], ['Python isp a popular mprogramming language', 7], ['apple banana cherapple banaapple banana chethe cat ine hatrryppna cherryana cherryry', 2], ['apple banana chernry', 1], ['apple banappna cherryana cherr', 1], ['the quick brown fox jumps over the lazy dog', 0], ['apple banana chethe cat in the hatrry', 3], ['this is a test sThE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoGds containing different numbers of consonants', 7], ['Pythion isp a popular programmia popular progrmming language', 2], ['apple banana cherapple banaapple banana chethe cat ine hatrrypypna cherryana cherryry', 2], ['Python isp a popular program ming language', 3], ['apple banana cherapple banaapple banana chethe cat ine hatrrypypna cherryana chcerryry', 2], ['the quick browan fox jumps over the lazy dog', 2], ['Python isp a popular program ming language', 1], ['apple banaapple banana chethe cat in the hatrryppna cherryana cherry', 1], ['the quick brown fox jumps over the lazy dog', 8], ['eapple banana chernry', 8], ['apple banana cherry', 5], ['random words are fun to write', 9], ['Pythion isp a popular programmia popular progrmming language', 1], ['ThE qUiCk BrOwN fOx JuMpS oVPython isp a popular program ming languageeR tHe LaZy DoG', 5], ['this is a test s tring with multiple words containing different numbers of consonants', 5], ['Python isp a popular program ming language', 5], ['this is a test s tring with multiple words containing different numbers of consonants', 6], ['apple banana chernry', 6], ['apple banana cheraptple banaapple banana chethe cat ine hatrrypypna cherryana chcerryry', 2], ['apple banana cherPython isp a popular mprogramming languageapple banaapple banana chethe cat ine hatrrypypna cherryana cherryry', 2], ['Thapple banana cherPython isp a popular mprogramming languageapple banaapple banana chethe cat ine hatrrypypna cherryana cherryryE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoG', 6], ['the quick browan fox jumps over the lazy dog', 7], ['the quic k brown fox jumps over the lazy dog', 8], ['apple banaapple banana chethe cat in the hatrryppna cherryana cherry', 5], ['the quick browan fox jgumps over the lazy dog', 3], ['aeppna cherry', 2], ['Python isp a popular program mithe quick browan fox jgumps over the lazy dogng language', 1], ['Python isp a popular program ming language', 0], ['the quick brown fox jumps over the laapanana chethe cat ine hatrrypypna cherryana chcerryryzy dog', 1], ['this is a test string with multiplePython isp a popular program ming language words containing different numbers of consonants', 1], ['ther quick browan fox jumps over the lazy dog', 0], ['the quick brown fox jumps over tvhe lazy dog', 0], ['apple banaThE qUiCk BrOwN fOx JuMpS oVPython isp a popular program ming languageeR tHe LaZy DoGna cherry', 1], ['eapple banana cher nry', 8], ['apple banappna cherryana cherry', 0], ['jingle bells jingle bellthe quick brown fox jumps over the lazy dog all the way', 2], ['this is a test sThE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoGds containing different numbers of consonants', 6], ['apple banaapple apple banana cherrybanana chethe cat in the hatrryppna cherryana cherry', 1], ['apple banappna cherryanra cherry', 9], ['apple baanana chernry', 6], ['ThE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoG', 9], ['Python isp a popular programming language', 9], ['ThE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoGS oVeR tHe LaZy DoG', 6], ['jingle bells jingle bells jingle all the way', 3], ['ThE qUiCk BrOwN fOx JuMpS oVeR tHe LaZy DoG', 2], ['aeppnac cherry', 0], ['jingle bells jingle bells jingle all t he way', 2], ['the quick browan fox jPython isp a popular program mithe qugick browan fox jgumps over the lazy dogng languageumps over the lazy dog', 0], ['Pythapple banappna cherryana cherron isp a popular mprogramming language', 7], ['Python isp a popular programming language', 2], ['Python isp a popular programminPython isp a popular programming languagePython is a popular progrmming languageg language', 0], ['apple banaapple apple banana cherrybanana chethe cat in the hatrryppna cherryana cherry', 6], ['ThE qUiCk BrOwN fOx JuMpS oVPython isp a popular program ming languageeR tHe LaZy DoG', 6], ['the quick browan fox jPython isp a popular program mithe qugick browan fox jgumps over the lazy dogng languageumps over the lazy dog', 1], ['the quick brown fox jumps  og', 1], ['the quick brown fox jumps over tvhe lazy dog', 1], ['eapple banana chernry', 7], ['Python isp a popular programminPython isp a populathis is a test string with multiplePython isp a popular program ming language words containing different numbers of consonants programming  languagePython is a popular progrmming languageg language', 0], ['random words are funy to wrPython isp a popular programming languageite', 5], ['', 5], ['aaa eee iii ooo uuu', 3], ['The quick brown fox jumped over the lazy dog', 6], ['The quick brown fox jumped over the lazy dog', 3], ['The Quick brown fox jUmPed over the lAzY dog', 5], ['ABCDEFGH', 0], ['Mississippi River', 4], ['ab cd ef gh ij', 2], ['the quick brown fox', 3], ['Qwertyuiopasdfghjklzxcvbnm', 10], ['The', 5], ['The Quick brown fox jUmPed over the lAzY dog', 2], ['Qwertyuiopasdfghjklzxcvbnm', 3], ['brown', 4], ['bwrown', 5], ['Thee Quick brown fox jUmPed over the lAzY dog', 2], ['The Quick brown fox jUmPed over the lAzY dog', 4], ['the quick brown fox', 6], ['The', 3], ['uuu', 3], ['uuu', 0], ['The quick brown fox jumped over the lazy dog', 5], ['the quick brown fox', 2], ['ABCDEFGH', 10], ['ab cd ef gh ij', 3], ['ThTe', 3], ['brown', 5], ['Mississippi River', 5], ['River', 3], ['aaa eee iii ooo uuu', 1], ['The quick brown fojx jumped over the lazy dog', 5], ['The quick brown fox jumped over the lazy dog', 0], ['The quick brown fojex jumped over the lazy dog', 5], ['Qwertyuiopasdfghjklzxcvbnm', 4], ['The Quick brown fox jUmPed over the lAzY dog', 9], ['gh', 0], ['The quick brown fojexd jumped over the lazy dog', 5], ['aaa eee iii ooo uuu', 2], ['jumpedABCDEFGH', 10], ['aaa eee iii ooo uuu', 0], ['the quick brown fox', 0], ['Qwertyvbnm', 4], ['aaa eee iii ooo uuuQuick', 6], ['guuuh', 1], ['Thee', 3], ['uuuu', 0], ['Theooo quick brown fox jumped over the lazy dog', 6], ['u', 3], ['Theooo quieck brown fox jumped over the lazy dog', 6], ['the quick brown fox', 1], ['guuuuh', 3], ['wbwrown', 5], ['uuuQuick', 10], ['guuuuh', 2], ['ab cd ef g ij', 2], ['The Quick brown fox jUmPed over the lAzY dog', 8], ['Thee Quick brown fox jUmPed over the lAzY dog', 3], ['Misesissippi River', 1], ['Quick', 6], ['The quick brown fox jumped over the lazy dog', 4], ['The Quick brown fox jUmPed over the lAzY dog', 7], ['Misppi River', 5], ['Thee Quick brown fox jUmPed over the lAzY dog', 4], ['thhe quick buuurown fox', 0], ['u', 2], ['The Quick brown fox jUmPed over the lAzY dog', 6], ['', 3], ['', 9], ['foTheooo quick browjn fox jumped over the lazy dog', 4], ['Thee Quick brown fox jUmPed over the lAzY dog', 8], ['Misppi Riuuuuver', 5], ['aaoa eee iii ooo uuuQuick', 6], ['The Quick bnrown fox jUmPed over the lAzY dog', 9], ['Quick', 5], ['The Quick brown fox jUmPed over the lAzY dog', 10], ['guuuu', 9], ['ThTheooo quieck brown fox jumped over the lazy doge Quick brown fox jUmPed over the lAzY dog', 7], ['iii', 0], ['The Quick bnrown fox jUmPed over the lAzY doggh', 2], ['The Quick brown fox jQuickUmPed over the lAzY dog', 5], ['buuurown', 1], ['the quick brown fox', 10], ['ab cd efb gh ij', 3], ['guuuuh', 9], ['aaoa eee iii oou uuick', 2], ['doggh', 3], ['The quick brown fojx jumped over the lazy dog', 10], ['iii', 6], ['iicdi', 0], ['aadoga eee iii ooo uuu', 2], ['iiiMississippi River', 6], ['braaoa eee iii ooo uuuQuickn', 9], ['the quick brown foxwbwrown', 4], ['ab cdf gh ij', 3], ['Thee Quick brown fox jUmPed over the lAzY dog', 9], ['ab', 4], ['the quick brown fox', 5], ['Qwertyuiopasdfghjklzxcvbnm', 2], ['thhe quick buuurownfox', 1], ['The quick brown fojx jumped over the lazy dog', 3], ['ab cd ef gh ij', 10], ['Thee', 9], ['The Quick bnrown fox jUmPed over the lAzY doggh', 6], ['aaa eee iii ooo uuuQuickguuuuh', 9], ['brown', 0], ['quick', 9], ['ab cd ef g ij', 1], ['The quick brown fox jumped over rthe lanzy dog', 5], ['bnrown', 3], ['Misesissippi River', 0], ['Qwertyuiopasdfghjklzxmcvbnm', 4], ['ab cd ef g ij', 6], ['lAzY', 5], ['quick', 10], ['bnrown', 9], ['iii', 5], ['aadoga eee iii ooo uuu', 5], ['The Quick brown foxaadoga jUmPed over the lAzY dog', 5], ['The quick brown fojx jumped over the lazy dog', 2], ['thjumpede quick brown fox', 0], ['iicdi', 2], ['thher quick buuurownfox', 1], ['ab ij', 10], ['ab cdguuuh ef g ij', 1], ['aaa eee iii ooo uuu', 10], ['The Quick brown foxaadoga jUmPed over the lAzY dog', 10], ['doggh', 6], ['Thab cdf gh ijy dog', 0], ['doge', 9], ['ed over the lazy dog', 5], ['Tee', 9], ['MisesissippiRiver', 0], ['the', 2], ['ab cd h ij', 3], ['ef', 10], ['ab cd ef g ij', 9], ['doggh', 1], ['iiicdi', 2], ['afoxb', 4], ['iii', 1], ['ij', 9], ['guu', 9], ['The', 10], ['Tee', 4], ['uuuQuick', 2], ['ab cddog ef gh ij', 2], ['The Quick brown fox jUmPed over tlanzyhe lAzY dog', 5], ['The Quick brown fox juuuUmPed oveer the lAzY dog', 9], ['aaoa eee iii oou uuick', 1], ['ABCDab cd h ijEFGH', 5], ['aaoathher', 1], ['doghgh', 6], ['ed over the lazy dohg', 5], ['TeThe Quick brown fox jUmPed over the lAzY doge', 4], ['thher quick buuurownfox', 10], ['jumpedABCCDEFGH', 10], ['The Quick brown fox jUmPed over the lAzY dog', 3], ['thher quick buuurowuuuQuickguuuuhnfox', 7], ['ijEFGH', 5], ['ef', 9], ['ef', 11], ['iicdi', 10], ['iij', 9], ['The Quick bnrown fox jUmPed over the lAzY doggh', 8], ['The Quick bnrown fox jUmPed over the lAzY dog', 7], ['Mispspi River', 5], ['iiab cdf gh ij', 2], ['The quick brown fojx jumped oviiiMississippier the lazy dog', 10], ['guuuuab cd ef gh ijh', 2], ['Tee', 0], ['iiafb cdf gh ij', 2], ['The quick brown fox jumped over rthe lyanzy dog', 1], ['aaa eee iii obrownoo uuuQuickguuuuh', 5], ['the quick browab', 2], ['the qquick brown fox', 2], ['cd', 7], ['uu', 3], ['foTheooo quick browjn fox jumped over the lazy dog', 0], ['uuuu', 3], ['doggh', 11], ['ab cd ef g ij', 5], ['Qwertyuiopasdfghjklkzxcvbnm', 6], ['ab cdf gh ij', 2], ['aaa eee iii ooo uuu', 9], ['The Quick brown fox jUmPed over the lAzY afoxbdog', 6], ['The Quick brown fox jUmPed over the lAzY dog', 0], ['foxaadoga', 7], ['thher quick buuurownfox', 11], ['aaacdguuuuh', 5], ['The Quick brown fox jUmPed over the lAzY aab cd ef g ijfoxbdog', 6], ['The quick brown fojx jumped oviiiMississippier the lazy dog', 6], ['iiii', 0], ['Mab cd ef g ijisppi River', 5], ['cddog', 0], ['Thee Quick brown fox jUmPed over the lAzY dog', 5], ['ab cddog ef gh ij', 0], ['Thee Quick brohwn fox jUmPed over the lAzY dog', 10], ['aaoathher', 6], ['aaa eee iii ooo uuuQuick', 4], ['The Quick brown foxaadAoga jUmPed over the lAzY dog', 5], ['lazy', 3], ['Misppi Rsr', 4], ['ab cdf gdh ij', 3], ['The quick brown fox jumped over rthe lyanzy dog', 5], ['MMississippi River', 4], ['thher quick buuurownfox', 9], ['ab cddog ef g', 2], ['guuuuh', 4], ['aaoa eee iii oou uuuick', 7], ['g', 2], ['Misesissippi River', 11], ['wbwrown', 9], ['Theeab cd h ij Quick brown fox jUmPed over the lAzY dog', 9], ['Qwerbtyuiopasdfghjklzxcvbnm', 4], ['aadee iii ooo uuu', 5], ['Misesissippi ooover', 11], ['oviiiMississippier', 6], ['rthe', 6], ['iiab cdf gh ij', 0], ['ab cd h ij', 10], ['MisesssippiRiver', 2], ['iiiMississippi River', 10], ['Thee Quick brown fThab cdf gh ijy dogox jUmPed over the lAzY dog', 9], ['obrownoo', 4], ['guuuuh', 8], ['Misesissippi River', 7], ['iiab cdf gh ij', 1], ['The Quick bnrown fox jUmPed oUver the lAzY dog', 9], ['aadee', 0], ['MisesissippiRiver', 11], ['foxwbwrown', 5], ['aaa eee iii ooo uuu', 5], ['Thee Quick brown fox jUmPed ov dog', 4], ['aiiafbadee iii ooo uuu', 5], ['Theeab cd h ij Quick brown fox jUmPed over the lAzY dog', 10], ['lanzy', 10], ['doggh', 9], ['ab cd ef g ij', 0], ['oviiiMississippier', 10], ['The Quick brown fox Qwertyuiopasdfghjklkzxcvbnmver the lAzY dog', 9], ['ijEFiGH', 5], ['the quick browab', 5], ['iiafb cdf gh ij', 7], ['Misesissippi ooover', 7], ['aadoga eee iii ooo uuu', 1], ['lyanzy', 8], ['ijy', 5], ['The Quick bnrown fox jUmPed oUver the lgAzY dog', 5], ['efab ij', 12], ['thher quick buuuroMisesissippiRiverx', 1], ['quieck', 2], ['juuuUmPed', 5], ['The Quick brown folx jUmPed over tlanzyhe lAzY dog', 5], ['the qudoghghick brown fox', 2], ['aaa eee iii obrownoo uuuQuickguuuuh', 4], ['jumpedABCDQuiQwertyuiopasdfghjklkzxcvbnmverckEFGH', 10], ['The Quick bnrown fox jUmPed oUver the lg', 4], ['The quick brown  fojexd jumped oover the lazy dog', 5], ['oviiiMississippier', 7], ['cd', 12], ['ABCDab cd Gh ijEFGH', 5], ['oviiiMississippier', 4], ['doghggh', 11], ['Thab', 4], ['The Quick Thee Quick brown fThab cdf gh ijy dogox jUmPed over the lAzY dogbrown fox jUmPed over the lAzY aab cd ef g ijfoxbdog', 6], ['iicd', 1], ['MisesissippiRiver', 4], ['TeThe Quick berown fox jUmPed over the lAzY doge', 6], ['aaoathher', 5], ['aadoga eee iii ooo uu', 2], ['Mab cd ef g ijisppi RrtheiveQwertyuiopasdfghjklkzxcvbnmverr', 13], ['The Quick brown folx jUmPed over tlanzyhe lAzY dog', 4], ['braaoa eee iii ooo uuuQuickn', 5], ['rthe', 3], ['quick', 12], ['guuuu', 2], ['MisesssippiTeeRiver', 2], ['Qwertyuiopasdfghjklzxmcvbnm', 6], ['The Quick brown fox jUmPed eover the lAzY dog', 0], ['dh', 6], ['foxwbrwron', 5], ['doggh', 7], ['thhe quick buuhurownfox', 1], ['QwertyuiopasdfQwertyuiopasdfghjklkzxcvbnmverghjklzxcvbnm', 10], ['bwrown', 0], ['dogghh', 9], ['The quick d over the lazy dog', 6], ['ij', 10], ['ThTe', 11], ['thher quick buuurownfox', 6], ['uu', 5], ['aaa eee iii obrowunoo uuuQuickguuuuh', 5], ['Thee Quick brown fox jUmPed over the lAzY dog', 7], ['guuuu', 7], ['thhe', 3], ['The quick brown fojx jumped oviiiMississippier the lazy dog', 5], ['buuuroMisesissippiRiverx', 8], ['aaa eeeThe Quick brown fox jQuickUmPed over the lAzY dog iii ooo uuuQuick', 4], ['t he quick brown fox', 3], ['ab cad ef gh ij', 10], ['thher quick buuurownfox', 13], ['MisesissippiRiverQwerbtyuiopasdfghjklzxcvbnm', 0], ['TeThe Quick brown fox jUmPed oab cddog ef gver the lAzY doge', 4], ['The Quick brownThTheooo over the lAzY afoxbdog', 6], ['Misppi Riuuuuver', 7], ['bwrown', 12], ['Thee Quick brown fox jUmP ed over the lAzY dog', 9], ['Qwertyuiopasdfghjklzxcvbnm', 9], ['iiab cdf gch ij', 1], ['iijy', 5], ['thher quick buuurownfox', 8], ['tlanzyhe', 5], ['t he quick brown fox', 12], ['guuuuh', 11], ['gownuh', 3], ['ab ij', 6], ['brrowwn', 4], ['ga', 7], ['bwrown', 4], ['aaa eee iii obrownoo uuuQuickguuuuh', 1], ['uu', 7], ['Misesissippi River', 12], ['aadoga eee iii ooo uuu', 0], ['browThee', 5], ['guu', 8], ['ABCDab cd Gh ijEFGH', 4], ['MisppMi Rsr', 4], ['the qrown fox', 7], ['bworon', 5], ['rthe', 2], ['iiii', 4], ['Misesssipaaoa eee iii ooo uuuQuickpiRiver', 2], ['TeThe', 0], ['uuuQuickTheooo quieck brown fox jumped over the lazy dogpiRiveruuu', 0], ['iijiii', 6], ['e', 12], ['ThTheooo quieck brown fox jumped over the lazy doge Quick brown fox jUmPed over the lAzY dog', 5], ['the quick bthjumpedeown fox', 10], ['the quick brown foxwbwrown', 0], ['gaa', 7], ['Mab cd ef g ijisppi RrtheiveQwertyuiopasdfghjklkzxcvbnmverrThe', 5], ['ab cad ef gh ijthe quick brothherown foxwbwrown', 0], ['aaoa eee iii oou uuobrowunooick', 7], ['Mab', 5], ['ijEFiGH', 3], ['ThTe', 4], ['aadberownoga eee iii ooo uuu', 2], ['iiTheooo quieck brown fox jumped over the lazy dogicdi', 10], ['The Quickab cddog ef g brown fox jQuickUmPed over the lAzY dog', 5], ['Thee Quick brown fThab cdf gh ijy dogox jUmPed over the lAzY dog', 4], ['uuobrowunooick', 2], ['iicdi', 3], ['uuThe Quick brown fox jQuickUmPed over the lAzY dog', 5], ['The Quick brown fox jUmPed over iicdithe lAzY dog', 7], ['Misesissippi', 10], ['The quick brown fox jumped over rthe lyanzy  dog', 5], ['ee', 9], ['Theeab', 2], ['guthe quick bthjumpedeown foxuuuh', 3], ['aadoga eee iii ooo uuu', 10], ['doge', 5], ['MMississippi River', 3], ['Misesissippi River', 8], ['pjumpDEFGH', 10], ['ab cd h ij', 4], ['QweTeThe Quick brown fox jUmPed over the lAzY dogertyuiopasdfghjklzxmcvbnm', 6], ['TeThe Quick berown fox jUmPed over the lAzY doge', 7], ['juuuUmPed', 10], ['euuue', 9], ['lanlzy', 10], ['bnrown', 11], ['The Quick brown fox juuuUmPed oveer the lAzY dogaaoa eee iii oou uuick', 2], ['jUmP', 5], ['bworon', 10], ['Qwertyuiopasdfghjklzxcvberownbnm', 4], ['The Quick brown fox juuuUmPed oveer the lAzY dogaaoa eee iii oou uuick', 3], ['ab ij', 9], ['ooover', 12], ['aaaab', 4], ['bwrrown', 0], ['ed over the lazy dog', 2], ['ABCDab cd h ijEFGH', 2], ['RrtheiveQwertyuiopasdfghjklkzxcvbnmverrThe', 4], ['MisesissipipiRiver', 0], ['guuuu', 11], ['uuuQuick', 8], ['Theeab cd h ij Quick brown fox jUmPed over the lAzY dog', 7], ['RrtheiveQwertyuiopasdfghjklkzxcvbnmverrThe', 3], ['aadoga eee iii oab cddog ef gh ijoo uuu', 0], ['The Quick brown fox jUmPed over the lAzY dog', 12], ['RrtheiveQwertyuiopasdfghjklkzxcvbnmverrThe', 5], ['jumpedABCCDEFGH', 4], ['The quick brown fojex jumped over theg', 5], ['MisppMi Rsr', 10], ['cc', 7], ['e quick brown foxwbwrown', 3], ['ABCDEFGH', 4], ['cc', 13], ['eQwerbtyuiopasdfghjklzxcvbnm', 1], ['Misppi River', 9], ['The Quick brown fox jUmPed over tlanzyhe lAzY dog', 12], ['thjumpede quick brown fox', 7], ['e quick brown foxwbwrown', 12], ['RrtheiveQwertyuiopasdfghjklkzxcvbnmverr', 4], ['The Quick brown folx jUmPed over tlanzyhe lAzY do', 4], ['guuuuab cd ef gh ijh', 6], ['lanlzy', 11], ['thhe quick buuurownfox', 0], ['iicd', 4], ['RrtheiveQwerityuiopasdfghjklkzxcvbnmverrThe', 4], ['aadoga eee iiid ooo uuu', 5], ['eTee', 4], ['guuuuab cd ef gh ijh', 1], ['efab ijgownuh', 3], ['abaaa eeeThe Quick brown fox jQuickUmPed over the lAzY dog iii ooo uuuQuick cd h ij', 3], ['Gh', 11], ['Thee Quick brohwn fox jUmPed over the lAzY dog', 4], ['lanlzy', 9], ['dogicdi', 7], ['ab ij', 7], ['aaa eeeef iii obrownoo uuuQuickguuuuh', 5], ['obrowunoo', 5], ['doge', 12], ['aadoga eee iii ooo uuu', 7], ['ThTheooo quieck brown fox jumped over the lazy doge Quick brown fox jUmPed over the lAzY dog', 8], ['aaoa eee iii  oou uuick', 7], ['cd', 5], ['ov', 9], ['guuuuuh', 8], ['The Quick brown fox jUmPed over the lAijthegchdog', 4], ['quieck', 8], ['oab', 5], ['e quick brown foxwbwrown', 11], ['eaaacdguuuuhrown foxwbwrown', 4], ['folx', 6], ['ABCDab cd Gh ijEFGH', 12], ['folx', 12], ['thher quick buuuroMisesissippiRiverx', 4], ['TheTheooo Quick brown fox jUmPed over the lAzY dog', 5], ['guuuuuh', 11], ['ThTe', 8], ['Mab cd ef gThe Quick brown fox jUmPed over the lAzY aab cd ef g ijfoxbdog ijisppi RrtheiveQwertyuiopasdfghjklkzxcvbnmverr', 13], ['c', 10], ['Qwertiyuiopasdfghjklzxcvbnm', 3], ['iiTheooo', 9], ['ddogicdi', 7], ['jUmPed', 7], ['jumpedABCCDE', 10], ['t he quick brown fox', 13], ['ABCDEFGH', 5], ['MMississippi', 2], ['thhe quick buuhurownfox', 5], ['dbrownThTheooooge', 11], ['ijthe', 8], ['ab cd ef g ij', 10], ['ab ddog ef g', 12], ['The Quick brown fox jUmPed over tlanzyhe lAzY dog', 10], ['e quick brown foxwbwrown', 4], ['ed', 0], ['ab cd ef  ij', 6], ['dogghh', 6], ['aiiafbadee iii ooo uuulyanzy', 11], ['ab cddog ef aiiafbadee iii ooo uuulyanzygh ij', 0], ['Te', 9], ['doggh', 8], ['eTeafoxbdoge', 4], ['iiiMississipp', 6], ['Mispspi', 5], ['The Quick brown fox jUmPed over tbuuurownhe lAzY dog', 8], ['dijy', 13], ['MisppiijEFGH Riuuuuver', 7], ['Theetbuuurownhe', 3], ['aaoa eee iii  oou uuick', 9], ['The quick brown fox jumped over the lazy dog', 1], ['t xhe quick brown fox', 11], ['gouwnuh', 3], ['ooab', 5], ['Theeab cd h ij Quoverh the lAzY dog', 10], ['ijEFiGH', 7], ['uuab cdf gdh iju', 0], ['brown', 3], ['guuiiab cdf gch ijuu', 7], ['Thee Quick brown fox jUmPed over the lAzY dog', 12], ['uuuQuickTheooo quieck brown fox jumped over the lazy dogpiRiveruuu', 3], ['ThTheooo quieck brown fox jumped over th e lazy doge Quick brown fox jUmPed over the lAzY dog', 7], ['bthjumpedeown', 4], ['tdbrownThTheoooogehe qquick brorwn fox', 2], ['iiTheooo quieck brown fox jumped over the lazy dogicdi', 2], ['The Quick bnrown fox jUmPed oUver the lAzY dog', 8], ['cdddog', 7], ['the qudoghghick brown fox', 5], ['The Quick brown folx jUmPed over tlanzyhe lAzY do', 2], ['gdh', 5], ['brorwn', 5], ['The', 0], ['aoou brorwnuuuick', 7], ['dooeoveroggTheeabh', 6], ['MisebrowTheesissippi River', 6], ['iiii', 9], ['ij', 3], ['fox', 10], ['MisesisaoousippiRiver', 0], ['c', 9], ['wdobwrown', 5], ['oooaob', 8], ['The quick brown fox jumped over rthe lyanzy dog', 4], ['MisebrowTheepsissippi River', 6], ['the quick browno fox', 7], ['thher quck buuurownfox', 11], ['      ', 3], ['', 0], ['aaa euee iii ooo uuu', 3], ['Quick', 3], ['Quick', 4], ['aaa eee iiai oo', 3], ['aaa eeMissefissippie iiaia oo', 3], ['Quicck', 4], ['The quick brown fox jumped over tzy dog', 3], ['quick', 3], ['ABCDEFGH', 6], ['the quick browcd fox', 3], ['aaa eee iiii ooo uuu', 3], ['iiiThe quick brown fox jumped over tzy dogi', 3], ['quicqk', 3], ['The quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 3], ['aaa eee iiai oo', 2], ['', 6], ['ABCDEFGH', 9], ['aaa', 5], ['rRiver', 6], ['ABCDEFGH', 2], ['ABCDEFG', 0], ['the quick browcd fox', 9], ['the quAjUmPedBCDEFQuicckGick browcd fox', 10], ['aadoguu', 5], ['The', 4], ['over', 5], ['ABCDEFGH', 3], ['Toohe quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 3], ['oo', 3], ['the quAjUmPedBCDEFQuicowcd fox', 3], ['The quick brown fox jumped over tzy dog', 0], ['cd', 3], ['the quAjUmPedBCDEFQuicowcd fox', 4], ['the quAjUmPedBCDEFQuicckGick browcd fox', 0], ['overQwertyuiopasdfghjklzxcvbnm', 0], ['the quick browcd fox', 0], ['the quAjUmPedBCDEFQuicckGick browcd fox', 11], ['MississiThe quick brown fox jumped over the lazy  dog River', 4], ['MississiThe qujUmPedick brown fox jumped over the lazy  dog River', 4], ['MississiThe qujUmPedick brown fox jumped over the lazy  dog River', 3], ['the quAjUmPedBCDEFQuicckGick browcd fox', 12], ['QQuick', 4], ['MississiThe quick rbrown fox jumped over the lazy  dog River', 4], ['overxQwertyuiopasdfghjklzxcvbnm', 9], ['ABCDEFGH', 11], ['aaa', 3], ['dogEABCDEFGH', 2], ['tzyk', 5], ['aaa eee  oo', 3], ['The quick brown fox jumped over the lazy dog', 10], ['The quick brown fox jumped over tz y dog', 0], ['lazy', 5], ['quick', 0], ['quAjUmPedBCDEFQuicckGick', 0], ['aaa euee iii ooo uuu', 2], ['aaa eee iiii ooo uuu', 4], ['the quAjUmPedBCDEFQuicowcd fox', 10], ['aaa eee  oo', 4], ['Toohe quick brown fox jumped overrbrownQwertyuiopasdfghjklzxcvbnm tzy dog', 3], ['aaa eee iiai oo', 5], ['the quAjUmPedBCDEFQuicckGick browcdfox', 2], ['the quick browcd fox', 10], ['MississiThe qujUmPedick brown fox jumped over the lazy  dog River', 0], ['the quAjUmPedBDCDEFQuicckGick browcdfox', 1], ['the quAjUmPedBCDEFQuicckGick browcd fox', 6], ['The quickiiii brown fox jumped over tz y dog', 0], ['the quick browcd fox', 11], ['overQwuiopasdfghjklzxcvbnm', 2], ['aaa eee iiii ooo uuu', 0], ['Quick', 12], ['MississiThe quick rbrown fox jumped over the lazy  dog River', 11], ['iiiThe quick brownr tzy dogi', 9], ['aaaa', 3], ['qukick', 3], ['Toohe quick brown fox jumped overrbrownQwertyuiopasdfghjklzxcvbnm tzy dog', 4], ['aaaaa', 3], ['QQuicThe quickiiii brown fox jumped over tz y dogk', 12], ['aadogu', 5], ['overrbrownQwertyuiopasdfghjklzxcvbnm', 1], ['aadoguu', 3], ['QQuicThe quickiiii brown fox jumped over tz y dogk', 1], ['QQuicThe quickiiii brown fox jumped over tz y dogk', 11], ['overthexQwertyuiopasdfghjklzxcvbnm', 9], ['the quAjUmPedBCDEFQuifcox', 4], ['the quAjUmPedBCDEFQuicckGick browcd fox', 7], ['brownr', 3], ['QQuicThe quickiiii brown fox jumped over tz y dogk', 13], ['Missisthe quick browcd foxsiThe quick brown fox jumped over the lazy  dog River', 4], ['Toohe quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 2], ['ABCDEFGAH', 6], ['iiiThe quick brownr tzy dogi', 10], ['the', 11], ['Qwertyuiopasdfghjklzxcvbnm', 11], ['the quAjUmPedBCDEFQuicckGick browcd fox', 3], ['Quick', 1], ['rer', 8], ['the quick browcd fox', 6], ['quAjUmPedBCDEFQuicowcd', 3], ['browcdfox', 3], ['Toohe quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzoverQwuiopasdfghjklzxcvbnmy dog', 2], ['brownr', 11], ['ab cd ef gh iquickiiiij', 3], ['aaarbrownaa', 3], ['brown', 1], ['qujUmPedick', 11], ['', 11], ['re', 8], ['oo', 4], ['nthe quick brox', 3], ['quuick', 3], ['The quick brown fox jumped over tz y dog', 3], ['bo', 1], ['quick', 1], ['The quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 12], ['QQuicThe quickiiii brown fox jumped over tz y dogk', 6], ['qujUmiiiiPedick', 11], ['aaa euee iii ooo uuucd', 12], ['dogiquick', 3], ['The quick brown fox jumped over tzy dog', 6], ['ABCBDEFGHoverQwuiopasdfghjklzxcvbnm', 2], ['overQwuiopasdfghjklzxcvbnm', 9], ['quicqk', 4], ['QQuicThe quickiiii brown fox jumped over tz y dogk', 7], ['brownr', 4], ['overQwuiopasdfghhjklzxcvbnm', 9], ['lazy', 7], ['The Quick brown fox jUmPed over the lAzY dog', 11], ['Qaaa eee iiai oouick', 1], ['aadoaaaguu', 3], ['Theaadoaaaguu', 0], ['Toohe quick xbrown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 4], ['The quick brown fox jumpedover the lazy dog', 6], ['quAjUmPEedBCDEFQuicowcd', 4], ['rer', 3], ['quAjUmPedBCDEFQuifcox', 3], ['the quAjUmPedBCDEFQuicckthe quAjUmPedBCDEFQuicckGick browcd foxwcd fox', 7], ['wn fox jumped over the lazy  dog River', 13], ['ABCBDEFGHovwuiopasdfghjklzxcvbnm', 2], ['browonr', 3], ['the quick browcdx', 0], ['lazy', 2], ['Quiick', 4], ['the quAjUmPedBCDEFQuicowcd fox', 0], ['aaaaaa', 3], ['ABCDEFGAH', 0], ['ABCDEFGA', 6], ['rRiver', 2], ['ab', 3], ['a aa euee iii ooo uuucd', 0], ['ethe quAjUmPedBCtheDEFQuicowcd foxbrowonr', 3], ['the quAjUmPedBCDEFQuicowcd fox', 1], ['euee', 0], ['foxbrowonr', 10], ['browcdfox', 12], ['T he quick brown fox jumped over tzy dog', 3], ['cd', 10], ['aaa eee iiii ooo uuu', 2], ['re', 2], ['rRnthever', 2], ['browonABCDEFGHr', 12], ['ab cd ef gh ij', 8], ['aaaaa', 0], ['over', 9], ['ABCDEFGA', 3], ['the quicktzoverQwuiopasdfghjklzxcvbnmybrowcdx', 0], ['aaa eee iiii ooo uuu', 1], ['T he quick brown fox jumped over tzy dog', 4], ['lazzy', 2], ['aaa eee  oo', 12], ['River', 8], ['Toohe quick xbrown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 0], ['lazzy', 1], ['The quick brown fox jumped over tzy dog', 1], ['MississiThe quick rbrown fox jumped over the lazy  dog River', 2], ['the quick browcdx', 7], ['theMississiThe quick rbrown fox jumped over the lazy  dog River', 11], ['MississiThe', 4], ['quAPEedBCDEFQuicowcd', 7], ['the', 8], ['uuu', 2], ['oever', 9], ['lazy', 10], ['lazzy', 4], ['Qaaa', 5], ['QQuick', 3], ['aaa eee iiiABCDEFGAi ooo uuu', 2], ['rer', 12], ['ab cd ef glazyh ij', 2], ['wn fox jumped over the lazy  dog River', 14], ['Quick', 8], ['he', 1], ['ABCFDEFGH', 9], ['uuucd', 4], ['QQuick', 1], ['ab cthe quAjUmPedBCDEFQuicckthe quAjUmPedBCDEFQuicckGick browcd foxwcd foxd ef glazyh ij', 2], ['MississiThe quick brown fox jumped over the lazy  dog River', 5], ['aaa eee reriiii ooo uuu', 2], ['the quAjUmPedBCDEFQuicowcd fox', 9], ['ucd', 7], ['qukick', 8], ['Qick', 1], ['aaa eee iiii', 2], ['ABCDEFGH', 8], ['aaa eee iiii ooo u', 4], ['the quAjUmPedoBCDEFQuicowcd fox', 10], ['the quAjUmPedBCDEFQuicckthe quAjUAmPedBCDEFQuicckGick browcd foxwcd fox', 7], ['lazz', 2], ['the quAjUmPedBCDEFQuicowcd fox', 2], ['Mississippi', 6], ['lazzMissisthe quick browcd foxsiThe quick brown fox jumped over the lazy  dog Rivery', 1], ['over', 2], ['The quick brown fox jumped over tzy dog', 5], ['foxwcd', 4], ['the quAjUmPedoBCDEFQuicoox', 10], ['overQwertyuiopasdfghjklzxcvbnm', 3], ['bo', 2], ['quick', 5], ['reriiii', 5], ['the quAjUmPedBCDEthe quAjUmPedBCDEFQuicckGick browcd foxFQuicowcd fox', 11], ['browonr', 6], ['Qaaa', 10], ['The quick brown fox jumpedover the lazy dog', 1], ['the quAjUmPedBCDEFQuicckGiMississippick browcd fox', 12], ['rRnnthever', 2], ['quAjUmPeudBCDEFQuicowcd', 2], ['QuiQcck', 4], ['MississippiquAjUmPedBCtheDEFQuicowcdver', 4], ['BABCDEFGH', 11], ['ulazyuucd', 4], ['r', 8], ['QQuiucThe quickiiii brown fox jumped over tz y dogk', 1], ['theMississiThe quick rbrown fox jumped over ththe quAjUmPedBCDEFQuicckGick browcd fox lazy  dog River', 9], ['wn', 11], ['MississiThe qujUmPedick brown fox jumped over the lazy  dog River', 2], ['River', 10], ['ethe quAjUmPedBCtheDEFQuicowcd foxbrowonr', 4], ['ucd', 6], ['quAjUmPEedBCDEFQduicowcd', 4], ['dogiquick', 7], ['Quick', 11], ['ethe quAjUmPedBCtheDEFQuicowcd foxbrowonr', 11], ['browonABCDEFGHr', 11], ['QutzoverQrwuiopasdfghjklzxcvbnmyick', 4], ['ab cd ef glazyh ij', 13], ['The quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 6], ['qucicquk', 3], ['Toohe quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzoverQwuiopasdfghjklzxcvbnmy dog', 3], ['The quick brownRivery fox jumped over the lazy dog', 10], ['lAzY', 2], ['he', 2], ['brownonr', 6], ['the quAjUmPe', 10], ['tzoverQwuiopasdfghjklzxcvbnmy', 4], ['quAjUmPedBCDEFQuicowcd', 11], ['aadoguu', 9], ['ABCDEFGH', 14], ['The quick brown fox jumped overQwernm tzy dog', 3], ['foxbrowonr', 1], ['overQwuiopasdfghjklzxzcvbnm', 2], ['dogEABCDEFGH', 3], ['oo', 1], ['the quAjUmPedBCDEFQuicckGick browcd fx', 10], ['QQuicThe quickiiii brown fox jumped over tz y dogk', 3], ['ucd', 4], ['aaoguu', 10], ['ABCDEFdogiquick', 0], ['The quick brown fox jumped over tzy dog', 9], ['the quAjUmPedBCDEFQuicckGick browcdfox', 10], ['browonr', 7], ['fx', 3], ['aaa eee iiai oo', 1], ['quicqk', 9], ['QQuickquick', 0], ['The', 6], ['overxQwertyuiopasdfghjklzxcvbnm', 10], ['overthexQwertyuiopasdfghjklzxcvbnm', 8], ['a aa euee iii ooo uuucd', 11], ['cQuiick', 4], ['ABCBDEFGHoverQwuiopajsdfghjklzxcvbnm', 2], ['the quAjUmPedBCDEFQuicckthe quAjUmPedBCDEFQuicckGick browcd foxwcd fox', 9], ['qtheMississiThe quick rbrown fox jumped over the lazy  dog Riverck', 5], ['overthexQwertyuiopasdfghjklzxcvbnm', 11], ['Toohe quick xbrown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog', 1], ['qucicuk', 0], ['rquickiiiiRiver', 2], ['aaa eee iii ouoo uuu', 1], ['fox', 8], ['lAzAY', 2], ['dogEABCDEFGH', 6], ['The quick browRnRivery fox jumped over the lazy dog', 10], ['ABCDEFdogiquick', 3], ['dgogi', 11], ['ctheABCDEFGH', 2], ['ABCBDEFGHovijerQABCDEFGAwuiopasdfghjklzxcvbnm', 2], ['aaa eee iiii o uuu', 3], ['overQwuiopasdfghjklzxcvbnm', 1], ['tfoxFQuicowcdhe quick browcd fox', 6], ['tfoxFQuicowcdhe quick browcd fox', 2], ['quAoeverPEedBCDEFQuicowcd', 7], ['aa', 0], ['the ouooquAjUmPedoBCDEFQuicoox', 10], ['overthexQwertyuiopasdfghjklzxcvbnm', 1], ['reriiii', 4], ['he', 13], ['ABCDEFG', 5], ['ABCBDEFGHoverQwuiopajsdfghjklzxcvbnm', 10], ['QuiQcckQuick', 4], ['foxwcdy', 5], ['the quick browcd fox', 8], ['ab', 1], ['the quickwn fox jumped over the lazy  dog Riverbrowcdx', 0], ['aaa eee iii overthexQwertyuiopasdfghjklzxcvbnmooo uuu', 2], ['Quiick', 5], ['overrbrownQwertyuiopasdfghjklzxcvbnm', 12], ['dog', 4], ['overxQwertyuiopasdfghjklzxcvbnm', 2], ['iii', 9], ['rRntheve', 2], ['overrbrownQwertyuiopabsdfghjklzxcvbnm', 12], ['wn fox jumped over the lazy  dog River', 11], ['QwertyuiopasdfghjklzxcvQQuiucThe quickiiii brown fox jumped over tz y dogkbnm', 10], ['quuick', 6], ['ucd', 9], ['the quAjUmPedBCDEFQuicckGick browcdfox', 12], ['re', 3], ['the quAjUmPedBCDEFQuricckGick browcdfox', 2], ['Qaaaa', 5], ['the quAjUmPedBDCDEFQuicckGick browcdfox', 12], ['browonABCDEF', 12], ['aaa eee iiii ooou uuu', 2], ['browcodfox', 12], ['The quick brown fox jumped over tzy dog', 10], ['the', 12], ['tPhe quAjUmPe', 7], ['cd', 2], ['MississippiquAjUmPedBCtheDEFQuicowcdver', 0], ['aaa erRnnthevero', 10], ['the quick brown fox', 12], ['The quick brown fox jumped overQwernm tzy dog', 2], ['QQuick', 13], ['y', 11], ['ABCBDEFGHovijerQABCDEFGAwuiopasdfghjklzxcvbnm', 7], ['AG', 11], ['quioverrbrownQwertyuiopabsdfghjklzxcvbnmck', 5], ['the quAjUmPedBCDEFQuicckthe quAjUmPedBCDEFQuicckGick browcd foxwcd fox', 8], ['aaa euee iii o uuu', 3], ['The quick brown fox jumped over the lazy dg', 6], ['qujUmPedick', 12], ['ooo', 3], ['Mississippi River', 0], ['iiaia', 10], ['ethe', 6], ['browoFnABCDthe quAjUmPedBCDEFQuicckGiMississippick browcd foxGHr', 3], ['quAjUmPedBDCDEFQuicckGick', 4], ['quioverrbrownQwertyuiopabsdfghjklzxcvbnmck', 12], ['the quictzk browcd fox', 0], ['TheQQuiucThe quick brown fox jumped over tzy dog', 9], ['quAjUmPedBCDEthe', 1], ['overQwuiopasdfghjklzxcvbnm', 0], ['oo', 0], ['the quAjUmPedBCDEFQuicowcd fox', 5], ['aaa eee iiii', 11], ['ulazyuucd', 12], ['QQuick', 14], ['ABCFDEFGHhe', 10], ['MississiThe', 3], ['ABCBDEFGHovijerQABCDEFGAwuiopasdfBghjklzxcvbnm', 8], ['T he quick brown fox jumped over tzy dog', 2], ['dgab', 1], ['a', 11], ['aadogu', 4], ['quicqk', 11], ['the quAjUmPedBCDEFQufoxwcdifcox', 4], ['qucicuk', 5], ['the qoverQwertyuiopasdfghjklzxcvbnmuick browcdx', 7], ['ab cd efToohe quick brown fox jumped overQwertyuiopasdfghjklzxcvbnm tzy dog gh ij', 8], ['ethhe', 6], ['lazzMissisthe quick browcd foxsiThe quick brown fox jumped over the lazy  dog Rivery', 12], ['iiiThe quick brownr tzy dogi', 11], ['overthexQwertyuopasdfghjklzxcvbnm', 11], ['quAjUmPedBDCDEFQuicckGick', 3], ['browcdfoerRnntheverox', 3], ['aaa eee iii overthexQwertyuiopasdfghjklzxcvbnmooo uuu', 3], ['quAjUmPEedBCDEFQuicowcd', 12], ['lQuiQcckQuickAzY', 2], ['the quAjUmoouickPedBCDEFQuicowcd fox', 10], ['dgab', 9], ['quAjUmPedBCDEFQuicckGick', 1], ['tfioxFQuicowcdhe quick browcd fox', 6]]\n    results = [['little'], ['Mary', 'lamb'], [], ['world'], ['Uncle'], [], ['b', 'c', 'd', 'f'], ['apple', 'banana'], [], [], ['the', 'cat', 'the', 'hat'], [], [], [], ['consonants'], ['goes', 'the'], [], [], ['fun'], [], ['apple', 'banana'], [], [], [], [], [], [], [], [], ['isp'], [], ['og'], ['containing', 'different'], ['isp'], ['all', 'the', 'way'], [], [], ['hatrryppna'], [], [], ['a'], [], [], ['cat'], [], [], [], ['apple', 'banana'], ['consonants'], ['isp'], ['cat'], ['ming'], ['cat'], ['the', 'fox', 'over', 'the', 'dog'], [], ['in'], [], [], ['cherry'], [], [], ['program', 'languageeR'], ['multiple', 'numbers'], ['Python', 'program'], ['containing', 'different'], ['chernry'], ['cat'], ['isp', 'cat'], ['cherryana'], [], [], ['banaapple', 'cherry'], ['quick', 'lazy'], [], [], ['a'], ['ine'], ['is', 'of'], [], [], [], [], [], ['fox', 'over', 'the', 'dog', 'all', 'the', 'way'], ['containing', 'different'], ['in'], [], ['chernry'], [], [], [], [], ['ThE', 'fOx', 'oVeR', 'tHe', 'DoG'], [], ['all', 'way'], ['a'], ['Pythapple'], ['isp'], ['a', 'a', 'a'], ['cherryana'], ['oVPython'], [], ['og'], [], [], ['a', 'a', 'a', 'a', 'a'], ['languageite'], [], [], [], ['quick', 'lazy'], [], [], [], ['cd', 'gh'], ['quick'], [], [], ['The', 'fox', 'over', 'the', 'dog'], [], ['brown'], ['bwrown'], ['Thee', 'fox', 'over', 'the', 'dog'], ['brown', 'jUmPed'], [], [], [], ['uuu'], [], ['the', 'fox'], [], [], ['ThTe'], [], [], ['River'], [], [], [], [], [], [], [], [], [], ['jumpedABCDEFGH'], ['aaa', 'eee', 'iii', 'ooo', 'uuu'], [], [], [], [], [], ['uuuu'], [], [], [], [], [], [], [], ['guuuuh'], ['cd'], [], ['Quick', 'lAzY'], [], [], ['brown', 'jumped'], [], [], ['brown', 'jUmPed'], [], [], [], [], [], ['jumped'], [], [], [], [], [], [], [], [], ['iii'], ['The', 'fox', 'over', 'the'], [], [], [], [], [], ['uuick'], [], [], [], [], ['aadoga'], [], [], ['brown'], ['cdf'], [], [], [], [], [], ['quick', 'fojx', 'lazy'], [], [], [], [], [], [], ['ab', 'ef', 'g', 'ij'], [], [], [], [], [], [], [], [], [], [], [], ['The', 'over', 'the', 'dog'], [], ['iicdi'], [], [], ['ab', 'ef', 'g', 'ij'], [], [], [], [], [], [], [], [], ['the'], [], [], [], [], ['iiicdi'], [], [], [], [], [], [], [], ['gh'], [], [], [], [], [], [], [], ['brown', 'jUmPed'], [], [], ['Quick', 'lAzY'], [], [], [], [], [], [], [], [], ['Mispspi'], ['gh'], [], ['guuuuab', 'cd', 'gh', 'ijh'], [], ['iiafb', 'gh'], [], ['uuuQuickguuuuh'], ['the'], ['the', 'fox'], [], [], [], [], [], [], [], ['gh'], [], [], [], [], [], [], ['ijfoxbdog'], [], ['iiii'], [], [], [], [], [], [], [], [], ['lazy'], ['Misppi'], ['cdf', 'gdh'], ['lyanzy'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['obrownoo'], [], ['Misesissippi'], ['iiab', 'ij'], [], [], [], [], [], ['brown', 'jUmPed'], [], [], [], [], [], [], [], [], [], [], ['Misesissippi'], [], [], [], ['bnrown'], [], [], [], [], [], ['the', 'fox'], ['obrownoo'], [], ['jUmPed'], [], [], [], [], [], [], [], ['dogbrown', 'ijfoxbdog'], [], [], [], [], ['aadoga'], [], ['brown', 'jUmPed'], [], ['rthe'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['buuurownfox'], [], ['uuuQuickguuuuh'], [], [], ['thhe'], [], [], ['brown'], ['quick'], [], [], [], ['brown', 'jUmPed', 'cddog'], [], [], [], [], [], ['iiab', 'ij'], [], [], [], [], [], [], [], [], [], [], [], [], [], ['eee', 'iii', 'ooo', 'uuu'], ['browThee'], [], ['ABCDab', 'ijEFGH'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['brown', 'fThab', 'jUmPed'], [], [], [], [], [], ['lyanzy'], [], [], ['guthe', 'quick', 'foxuuuh'], [], [], ['River'], [], [], [], [], [], [], [], [], [], ['The', 'fox', 'oveer', 'the', 'dogaaoa', 'uuick'], [], [], [], ['Quick', 'lAzY'], [], [], [], [], ['over', 'the', 'dog'], ['cd'], [], [], [], [], [], [], ['eee', 'iii', 'uuu'], [], [], [], [], [], [], ['quick'], [], [], [], [], [], [], [], [], ['brown', 'jUmPed'], [], [], [], [], [], [], [], ['ef'], [], ['Quick', 'lAzY', 'uuuQuick'], [], ['jUmPed'], [], [], [], ['uuuQuickguuuuh'], [], [], [], [], [], [], [], [], ['brown', 'jUmPed'], [], [], [], [], [], [], [], ['thher'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['brown'], [], [], [], [], ['iii', 'ooo'], [], [], [], [], ['Mispspi'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['quieck', 'lazy'], [], [], ['fox'], ['iiTheooo', 'fox', 'over', 'the'], [], [], [], ['The', 'over'], [], ['brorwn'], [], ['brorwnuuuick'], [], [], [], [], [], [], [], [], [], ['brown', 'jumped'], [], [], [], [], [], [], ['Quick'], [], [], [], ['Quicck'], ['quick', 'tzy'], ['quick'], ['ABCDEFGH'], ['quick'], [], ['quick', 'tzy'], [], ['quick', 'tzy'], [], [], [], [], [], [], [], [], [], [], [], [], [], ['quick', 'tzy'], [], [], [], [], [], [], [], [], [], ['brown', 'jumped'], ['brown', 'jumped'], ['lazy', 'River'], [], ['QQuick'], ['jumped'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['quick', 'tzy'], [], ['the'], [], [], [], [], [], [], [], ['aaa', 'eee', 'iiii', 'ooo', 'uuu'], [], [], [], [], [], ['brown', 'jumped'], [], [], [], [], [], ['y'], [], [], [], [], [], [], ['brown', 'jumped'], ['Toohe', 'fox', 'dog'], ['ABCDEFGAH'], [], [], [], [], [], [], [], [], [], ['Toohe', 'fox', 'dog'], [], [], [], [], [], [], [], [], ['nthe', 'quick', 'brox'], ['quuick'], ['quick'], ['bo'], [], [], [], [], [], [], [], [], [], ['quicqk'], [], [], [], [], [], ['Qaaa'], [], [], ['jumped'], ['jumpedover'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['a', 'aa', 'euee', 'iii', 'ooo'], [], [], ['euee'], [], [], ['quick', 'tzy'], [], [], [], [], [], [], ['aaaaa'], [], [], [], [], ['brown', 'jumped'], [], [], [], [], [], [], ['fox', 'over', 'the', 'dog'], [], [], [], [], [], [], [], [], ['lazzy'], [], [], [], [], ['cd'], [], [], ['he'], [], [], [], [], [], ['reriiii'], [], [], [], [], [], [], [], [], [], [], ['the', 'fox'], [], [], ['over'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['y'], ['theMississiThe'], [], ['fox', 'over', 'the', 'dog'], [], [], [], [], [], [], [], ['browonABCDEFGHr'], [], [], [], [], ['quick'], [], [], [], ['brownonr'], [], [], [], [], [], ['quick', 'tzy'], [], [], [], [], [], ['quickiiii', 'dogk'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['cQuiick'], [], [], ['rbrown', 'Riverck'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['fox'], [], ['aa'], [], [], [], [], ['ABCDEFG'], [], [], [], [], ['ab'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['the'], [], [], [], [], [], [], [], [], ['cd'], [], [], [], ['The', 'fox', 'dog'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], ['oo'], [], [], [], [], [], [], [], ['fox', 'over', 'dog'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/118", "prompt": "\ndef get_closest_vowel(word):\n    \n\n\n    def is_vowel(ch: str) -> bool:\n        return ch in \"aeiouAEIOU\"\n    for i in range(len(word) - 2, 0, -1):\n        if is_vowel(word[i]) and not is_vowel(word[i-1]) and not is_vowel(word[i+1]):\n            return word[i]\n    return \"\"\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef get_closest_vowel(word):\n    \n\n\n    def is_vowel(ch: str) -> bool:\n        return ch in \"aeiouAEIOU\"\n    for i in range(len(word) - 2, 0, -1):\n        if is_vowel(word[i]) and not is_vowel(word[i-1]) and not is_vowel(word[i+1]):\n            return word[i]\n    return \"\"\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef get_closest_vowel(word):\n    \n\n\n    def is_vowel(ch: str) -> bool:\n        return ch in \"aeiouAEIOU\"\n    for i in range(len(word) - 2, 0, -1):\n        if is_vowel(word[i]) and not is_vowel(word[i-1]) and not is_vowel(word[i+1]):\n            return word[i]\n    return \"\"\n\n", "raw_modification": "```python\n<code_start>\ndef get_closest_vowel(word):\n    \n    def is_vowel(ch: str) -> bool:\n        # Adding an unnecessary loop to check if a character is a vowel\n        for vowel in \"aeiouAEIOU\":\n            if ch == vowel:\n                return True\n        return False\n\n    # Creating an unnecessary list to store vowels\n    vowels = []\n    for ch in word:\n        if is_vowel(ch):\n            vowels.append(ch)\n\n    # Adding an unnecessary variable to store the length of the word\n    word_length = len(word)\n\n    # Adding an unnecessary loop to iterate over the word\n    for _ in range(1):\n        for i in range(word_length - 2, 0, -1):\n            if is_vowel(word[i]) and not is_vowel(word[i-1]) and not is_vowel(word[i+1]):\n                return word[i]\n    return \"\"\n<code_end>\n```", "modification": "\ndef get_closest_vowel(word):\n    \n    def is_vowel(ch: str) -> bool:\n        \n        for vowel in \"aeiouAEIOU\":\n            if ch == vowel:\n                return True\n        return False\n\n    \n    vowels = []\n    for ch in word:\n        if is_vowel(ch):\n            vowels.append(ch)\n\n    \n    word_length = len(word)\n\n    \n    for _ in range(1):\n        for i in range(word_length - 2, 0, -1):\n            if is_vowel(word[i]) and not is_vowel(word[i-1]) and not is_vowel(word[i+1]):\n                return word[i]\n    return \"\"\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['yogurt'], ['full'], ['easy'], ['eAsy'], ['ali'], ['bad'], ['most'], ['ab'], ['ba'], ['quick'], ['anime'], ['Asia'], ['Above'], ['hello'], ['cup'], ['kill'], ['bike'], ['album'], ['mute'], ['nylon'], ['jelly'], ['hi'], ['try'], ['himute'], ['jejellylly'], ['hill'], ['hilljejellylly'], [''], ['alb'], ['hilljhejellylly'], ['ttrty'], ['helo'], ['lalb'], ['aabuum'], ['ehehilo'], ['tttrjejellyllyt'], ['kilbike'], ['bkike'], ['ccup'], ['ehehi'], ['kiill'], ['trjejellyllyt'], ['himuhilljejellyllyte'], ['hhimute'], ['ehehilohi'], ['knylonill'], ['bik'], ['hhhimutehimute'], ['hhimutehilljhejellyllbiky'], ['hhhimutehimuute'], ['halbilljhejellylly'], ['knyloknill'], ['knyonnill'], ['al'], ['hhimue'], ['ty'], ['knylonbikill'], ['ehello'], ['knyloknnill'], ['ehehhhimutehimutehilohi'], ['hillhhhimutehimuute'], ['ttrtybike'], ['hhhimutehimuuehehilote'], ['kilil'], ['hii'], ['hiylljejellly'], ['hialllhi'], ['knylonbik'], ['ehhimutehilljhejellyllbiky'], ['kiliiil'], ['ljelly'], ['halbilljhejellyy'], ['thilljejellylly'], ['knyloll'], ['nyhialllhilon'], ['kiliil'], ['hillll'], ['muthiie'], ['heolo'], ['lnyhialllhilon'], ['hialllihhi'], ['knkilbikieylonbikehehi'], ['eheho'], ['hiill'], ['lal'], ['mte'], ['hhiue'], ['hialllhhimutehi'], ['hiilhalbilljhejellyllyl'], ['h'], ['hlialllihhehehoi'], ['khhimueilbhiilhalbilljhejellyllylike'], ['ehehjellyo'], ['lehhello'], ['ljellly'], ['jlemuthiielly'], ['kiihlialllihhehehoill'], ['lly'], ['jelely'], ['jejhhimute'], ['hikillll'], ['trthialllihhiy'], ['knyonnillhhimue'], ['ehehhhimutehimutehilkilbikeohi'], ['jlemutly'], ['knylonbikilll'], ['hlikilhialllhhimutehilll'], ['lalbkike'], ['hhimutehilljhejellyllbikytmute'], ['hhimutbkikee'], ['hillhhhimhimuute'], ['ehlo'], ['hhhimutehimuuehehilalbkikelote'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['zzzqaiozzz'], ['abcdeffeedcba'], ['zbcdafghijklmnoprstuvwxeyzzouzzza'], ['tttxuxzzzrttt'], ['kooxnne'], ['bbkrtfdoiyyiuy'], ['UVWXYZuvwxya'], ['xyzabcDEFghi'], ['QWERTYqwerty'], ['zbcdafghijklmnoprszouzzza'], ['tttxuxzzzrtt'], ['qwerty'], ['zbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzza'], ['zbcdabbkrtfdoiyyiuyfghijklmnoprszouzzza'], ['tttxuxzzzrttQWERTYqwerty'], ['bbkrtiyyiuy'], ['bbkyrtfdoiyyiuy'], ['bbkrtiyyiuykooxnne'], ['kooxnzbcdabbkrtfdoiyyiuyfghijklmnoprszouzzzane'], ['zbcdafghijklmnoprszuouzzza'], ['zbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwerty'], ['qwertty'], ['qwertyxyzabcDEFghi'], ['xyzabcDEDFghi'], ['abdcdeffeedcba'], ['zzzqaiozzzbcdafghijklmnoprszuouzzzaz'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcba'], ['zbcdafghijklmnoprstuvwvwxyaeyzzouzzzaqwerty'], ['zbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwerty'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['zbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzza'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['Mss'], ['abcdzzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcba'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['sMss'], ['zbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerty'], ['sMbbkrtiyyiuyss'], ['zzzqaiozzzbcdafghijklmnoprszuouzzzzaz'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghoqwerttyjxxwnovsmrqajxzabcDEFghi'], ['zzzzqaiozzxyzabcDEFghizbcdafghikooxnnejklmnoprszuouzzzazbcdafghijklmnoprszouzzza'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazeffeedcba'], ['zbzbcdafghijklmnoprszouzzzacdmafghijklmnoprszuouzzza'], ['zbcdafghijkllmnoprszuouzzza'], ['zzzqaiozzzbcdafghijklmnxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghioprszuouzzzaz'], ['tttxuxzzrttt'], ['Msss'], ['zbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzzzaqwerty'], ['zbcdafghijklmnoprstuvQWERTYqwertywxeyzzouzzza'], ['zbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaqwerty'], ['xyzabcDEDFghDi'], ['abdcdefabcdzzzqaiozzczbcdafghijklmnoprszuouzzzazeffeedcbafeedcba'], ['zbcdafghijklmnoprstuvwxUVWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzza'], ['zbcdafghijkllmnoaprszluouzzza'], ['iqwertyxyzabcDEFghi'], ['zbcdabbkrtfdoiyyiuyfghijklmnoprszouzozza'], ['tttxuxzzzrttQWERTYqw'], ['zjklmnoprstuvEQWERTYqwertywxeyzzouzzza'], ['tttxuxzzzrttQWERTYTqw'], ['abccdeffeedcba'], ['s'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwerty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaauztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['abdcdeffeeba'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqaiozzzbcdafghijklmnoprszuouzzzzazklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwerty'], ['xyhzabcDEDFghDi'], ['zbcdafghijkzlmnoprszuouzzza'], ['tttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqw'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcba'], ['xyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerty'], ['tttrtt'], ['tttxuxzrty'], ['zxyzabcDEDFghi'], ['abcdzzzqaiozzzbcdafghijklmnobprszuouzzzazeffeedcba'], ['tttxuxzzrtttt'], ['abdcdeffeeMssdcbatttxuxzrty'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovesmrqajx'], ['tttuxzrty'], ['zbcdafghijkzlmnoprszuonuzzza'], ['tttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxuxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqw'], ['tttxuxzrtysMss'], ['bbkyyrtfdoiyyiuyy'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['QWERTYqwerEty'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['qwertyxyzabDcDEFghi'], ['zbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzzzaqwertyty'], ['tttxuxzztrtttt'], ['txyzabcDEDFghittuxzrty'], ['zzzszuouzzzaz'], ['zbcdafghijklmnoprstuvQWERTYqwertywxeyzzouzzzza'], ['zbcdafghijklmnoprstuvQWERTYqwertzzzszuouzzzazywxeyzzouzzzza'], ['xyzabcDhEiFghi'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqxaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqaiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuouzzzazeffeedcbaxyaeyzzouzzzbgaqwerty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaauztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['xyzabczbcdafghi'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['xyzabczbsMbbkrtiyyiuysscdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['kooxnnzbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzae'], ['abcdzrzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcba'], ['tttxuxzztrttttxyzabczbsMbbkrtiyyiuysscdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['zbcdafghijklmnoprstuvQWERTYqwlertywxeyzzouzzza'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafgghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcba'], ['xyzabczbcdafghijklmnoprtuvwxeyzzouzzzaDEDFghi'], ['abdcdeffeeMxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqxaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghissdcbatttxuxzrty'], ['tzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyttxuxzrty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhazbcdafghijklmnoprszuouzzzapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['abdcdefabcdzzzqaiozzczzbcdafghijklmnoprszuouzzzazeffeedcbafeedcba'], ['zbcdafghizbcdabbkrtfdoiyyizbcdafghijklqwerty'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['zbcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzza'], ['qwertyxyzabDcrDEFghi'], ['zbcdafghijaklmnoprszouzzza'], ['zbzbcdafghijklmnoprszouzzzacdmafghijklmnoprszuouza'], ['zxyzabcDEDFghxyzabcDhEiFghi'], ['tttxuxzxrty'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxs'], ['tttExuxzzzrttQzbcdabbkrtfdoiyyiuyfghijklmnoprszouzozzarqajxWERTYqw'], ['zbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerrty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['zbcdafghizbcdabibkrtfdoiyyizbcdafghijklqwerty'], ['abcdzrzzqaiozzzbcdafghijklmnoprszuouzfxyzabcDEFghizzazbbkrtiyyiuykooxnneefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaba'], ['QWERTYqwzzzqaiozzzbcdafghijklmnxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghioprszuouzzzazerEty'], ['zbcdafghijklmnoprstuvQWERTYqWwlertywxeyzzouzzza'], ['ttttxuxzzrttt'], ['tttxuxzzrtttabcdeffeezbcdabbkrtfdoiyyiuyfghijklmnoprszouzzza'], ['zbcdafghijkzlmnopsrszutttxuxzrtiyouzzza'], ['sMs'], ['zbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzza'], ['zbcydafabcdeffeedcbaerty'], ['xyzabczbzbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyiuysscdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['xyzabczbzbcdhafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyiuysscdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['kooxnzbcdabbkrtfdoiyyzbcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzane'], ['xyzahbcDEFghi'], ['xyzabczbzbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyizzzqaiozzzuysscdafghijklminoprstuvwxeyzzouzzzaDEDFghi'], ['zbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouza'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzza'], ['zbcydafabcdefftttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqweedcbaerty'], ['sMbbkrtiyyzbcdafghijklmnoprstuvwwabcdzrzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyiuyss'], ['zjklmnoprstuvEQWERTYqwertywxpeyzzouzzza'], ['MszxyzabcDEDFghis'], ['zbbkrtfdoiyyiuybcdafghijklmnoprszouzzza'], ['bbkbrtiyyiuy'], ['zfghijkzlmnoprszuonuzzza'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqaiozzzbcdafghijklmnoprszuouzzzzazklmnotttxuxzzzrttQWERTYqwertyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwerty'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdaxyzabcDEFghizuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuraovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['tttExuxzzzrttQzbcdabbkyrtfdoiyyiuyfghijklmnoprszohuzozzarqajxWERTYqw'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrxyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFghirzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['zfbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouza'], ['zjklmnoprstuvEQWERTYqwertywxezza'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttxyzabczbcdafghirrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdaxyzabcDEFghizuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['sMabcdzzQWERTYqwertyzqaiozzzbcdafghijklmzuouzfzzazeffeedcbas'], ['zbzbcdafghijklmnoprszouzzzacdmafghijklumnoprszuouza'], ['zbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzaty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['tttxuxzMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxsrtysMss'], ['Qnohs'], ['tttxuxziqwertyxyzabcDEFghirtysMss'], ['abfcdeffeedcba'], ['abdcdeffeeMssdecbatttxuxzrty'], ['zbcdafghijkzlmnopsrszutttxuxzrtiyozbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzza'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['qwert'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvzbcdafghizbcdabibkrtfdoiyyizbcdafghijklqwertyydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['tttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['zabzbcdafghijklmnoprszouzzzacdmafghaijklmnoprszuouza'], ['tttExuxzouzozzarqajxWERTYqw'], ['tttxuxzrxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttxyzabczbcdafghirrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdaxyzabcDEFghizuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghiy'], ['tttuxzrtty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcdafghizbcdabbkrtfdoiyyizbcdzbcdafghijkzlmnopsrszutttxuxzrtiyozbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzzaqwerty'], ['tttxuxzztrttttxyzabczbsMbbkrtiyyiuysscdafghijklmnoouzzzaDEDFghi'], ['tttuxzrttuy'], ['tttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjqwerttyxbopglbghojxxwnovsmrqajx'], ['zbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijtttxuxzrtysMssklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzzzaqwerty'], ['qweertty'], ['zbcdafaeyzzouzzzaqwerrty'], ['xyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFabdcdeffeeMssdecbatttxuxzrtyghi'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyzzzszuouzzzazfeedcba'], ['zbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzza'], ['zbcdafghijkzlzbcydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnoprszuouzzza'], ['zbcdafghijklmnoprstusMsvwxUVWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzza'], ['QWERTYqwerEtyy'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghiqjklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghoqwerttyjxxwnovsmrqajxzabcDEFghi'], ['QWEabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazeffeedcbaRTYqwerty'], ['qweerty'], ['stttxuxzztrttttxyzabczbsMbbkrtiyyiuysscdafghijklmnoouzzzaDEDFghi'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtysMssondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxs'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbgzxyzabcDEDFghihojxxwnovsmrqajx'], ['zbcydafabcdeffeedcbaghijklmnoypvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzaty'], ['abccdeffeedczbcdafghijklmnoprstuvQWERTYqwertywxeyzzouzzzzaba'], ['tttuxzzbcdafghijkzlzbcydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnoprszuouzzzarttuy'], ['tttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzzzqaiozzzbcdafghijklmnoprszuouzzzaz'], ['tttuuxzrtty'], ['txyzahbcDEDFghittuxzrty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhazbcdafghijklmnoprszuouzzzapqjriulawnpeytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['xyzabczbzbcdafghijklmsMbbkrtiyyzbcdafghijklmnoprstuvwwabcdzrzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyiuyssnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyiuysscdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvtttxuxzrxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttxyzabczbcdafghirrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdaxyzabcDEFghizuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghiynpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['zbcdaabbkrtfdoiyyiuyfghijklmnoprszouzzza'], ['zbcdafghijklmnoprstuvwxUVWXYZuvwza'], ['zbcdafghijklmnoprstuvwxUVzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqaiozzzbcdafghijklmnoprszuouzzzzazklmnotttxuxzzzrttQWERTYqwertyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzza'], ['tttxuxzzrtttabcdeffeezblmnoprszouzzza'], ['zbcdafghijklmnoprstuvwxUVttctuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuoubbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnnezzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiitttxuxzzrttttiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['zbcdafghijklmnoprstuvwxUVzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghiQWERTYqwerEtyyghijklmnoprszuouzzzzazklmnotabdcdeffeedcbattxuxzzzrttQWERTYqwertyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzza'], ['qwzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzay'], ['abcdzzzqaiozzzbcdafghtttxuxzzzrtttijklmnoprszuouzzzazeffeedcba'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuouzzzazeffeedcbaxyaeyzzouzzzbgaqwerty'], ['zbcdafghijklmnoprstuvwxUVWXYZukvzbcdafghijklmnoprstuvwxeyzouzzza'], ['zbcdafghizbcdabbkrtfdoiyyMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxsizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaqwerty'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafgghijklmnoprstuvwwxyaeyzzouzzzakqwertyfeedcba'], ['sMsss'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaauztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulopglbghojxxwnovsmrqajxWXYZurty'], ['zbcdafghizbcdabbkrtfdoiyyMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxsizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfwghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaqwerty'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzaoprstuvwwxyaeyzzouzzzaqkooxnzbcdabbkrtfdoiyyzbcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzanea'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['abzddcdefabcdzzzqaiozzczbcdafghijklmnoprszuouzzzazeffeedcbafeedcba'], ['zzzqaiozzzbcdafghijklmnoprszuouzzzzauz'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtysMssondjofzhhxyhzabcnylrlzhkemjxbopglbghojxxwnovsmrqajxs'], ['zzzqaiozzzbcdafghijkzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzaz'], ['r'], ['xyzabczbzbcdhafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyiuysscdafghijklmnoprxyhzabcDEDFghDizoukzzzaDEDFghi'], ['zbcdafghilmnoprstuvwxUVWXYZukvzbcdafzghijklmnoprstuvwxeyzouzzza'], ['qqwert'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzaoprstuvwwxyaeyzzouzzzaqkozbcdafghijklmnoprstuvwxUVWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzaoxnzbcdabbkrtfdoiyyzbcdafghizbcdafghijklmnoprstuvQWERTYqwertywxeyzzouzzzzajklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzanea'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknxsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['tttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtysMssondjofzhhxyhzabcnylrlzhkemjxbopglbghojxxwnovsmrqajxsjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqw'], ['zzzqaiozzzbcdafghijklmnxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvsajxzabcDEFghioprszuouzzzaz'], ['zbcdafghijklmnoprstuvQWERzzzqaiozzzbcdafghijklmnxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvsajxzabcDEFghioprszuouzzzazTYqwlertywxeyzzouzzza'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafgzbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcba'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzzzaqwertytyebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovesmrqajxiiiiiiiiiinprlxfaaaaaaaaaaauztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretzbcdafghijklmnoprstuvQWERTYqwertzzzszuouzzzazywxeyzzouzzzzaepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhazbcdafghijklmnoprszuouzzzapqjriulawnpeytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiuqqwertrovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnopurstuvwwxyaeyzzouzzzaqwertyfeedcbabdcdeffeeMxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqxaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghissdcbatttxuxzrtya'], ['zbcydafabcdeffeedcbaghijklmnoyprstttxuxzzzrtttuvwwxyaeyzzouzzzaqwerzbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzzzaqwertyty'], ['abfcdeffeedcb'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhawpqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcdafghizbcdabbkrtfdoiyyMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvidzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxsizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfwghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaqwerty'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaakooxnnzbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzaeaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['bbkbrtttxuxzrtyy'], ['zzzqzaiozzz'], ['zbcdafghihjklmnoprszuouzzza'], ['tttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhtttuuxzrttyvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['zbcydafabcdeffeedcbaxyhzabcDEDFghDighijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzaty'], ['txyzabcDEDFghittxuxzrty'], ['zbcdafghizbcdabbkrtfdoiyyMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmreqajxsizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfwghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaq'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiibbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnneinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['abcdzzzqaiozzzbcdafghijklmnobprsabcdzrzzqaiozzzbcdafghijklmnoprszuouzfxyzabcDEFghizzazbbkrtiyyiuykooxnneefzbcdafghijklmnoprstuvwwxyaeyzzouzzzabazuouzzzazeffeedcba'], ['qtweertty'], ['qwzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouay'], ['o'], ['tttuzbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzzaxzzbcdafghijkzlzbcydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnoprszuouzzzarttuy'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuouzzzazeffeedcbaxyaeyzzouzzzbgaqwaerty'], ['zbcdafghijklmnoprstuvwxUVWXYZuvzbcbbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['QWEabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazeffexytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghoqwerttyjxxwnovsmrqajxzabcDEFghi'], ['abfcdeffeedba'], ['tttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnbbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvyMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtysMssondjofzhhxyhzabcnylrlzhkemjxbopglbghojxxwnovsmrqajxsdknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretzbcdafghijklmnoprstuvQWERTYqwertzzzszuouzzzazywxeyzzouzzzzaepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnneiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqw'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugabcDEFghi'], ['zbcdafaetttxuxzzrtttabcdeffeezbcdabbkrtfdoiyyiuyfghijklmnoprszouzzzayzzouzzzaqwerrty'], ['zzzqaiozzzbcdafghijklmnxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghieoprszuouzzzaz'], ['bbkybbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhazbcdafghijklmnoprszuouzzzapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnnefdoiyyiuyy'], ['tttxuxzzzrttQzWERTYTqw'], ['zzzszuouzzzzaz'], ['ttttxuxzzttt'], ['tttxuxzzrtttabcdeffzbcdafghijklmnoprstuvQWERTYqWwlertywxeyzzouzzzamnoprszouzzza'], ['zbcydafacbcdeffeedcbaghijklmnoypvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzaty'], ['zbcdafghijkllmnoxyzabczbcdafghijklmnoprtuvwxeyzzouzzzaDEDFghiprszuouzzza'], ['abcdzzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedzjklmnoprstuvEQWERTYqwertywxpeyzzouzzzacba'], ['abcdeffeedcbabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzaoprstuvwwxyaeyzzouzzzaqkooxnzbcdabbkrtfdoiyyzbcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzaneaa'], ['zzzszuozuzzuzaz'], ['abfcdeffeedbttttxuxzzrttta'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaabcdzzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedzjklmnoprstuvEQWERTYqwertywxpeyzzouzzzacbazabcDEFghi'], ['qweezbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyrty'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabczbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzaeffeedcbaxyaeyzzouzzzgaqwerty'], ['zjklmnoprstuvEQWERTYqwertywxeyzzozbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwertyuzzza'], ['ahijklmnoprszuouzzzazeffeedcbafeedcba'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriuilawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxzaqwertyfghxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghiijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepwertywxpeyzzouzzza'], ['xyzabcDEDFFghDi'], ['xyzDabcDEDF'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxzzzqaiozzzbcdafghijkzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzazbopglbgzxyzabcDEDFghihojxxwnovsmrqajx'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifptttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzzzqaiozzzbcdafghijklmnoprszuouzzzazaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['tttttExuxzzzrttQzbcdabbkrtfdoiyyiuyfghijklmnoprszouzozzarqajxWERTYqwzrttQWERTYqw'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugQWEabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazeffeedcbaRTYqwerty'], ['abcdzzzqaiozzzbcdafghtttxuxzzzrtttijklmnoprszuoubbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiibbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnneinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyzbcydafabcdeffeedcbaghijklmnoypvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnnezzzazeffeedcba'], ['zzzqaiozzzbcdafghijklmnxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertycnvtvlztxxmgwabcdzzzqaiozzzbczzzqaiozzzbcdafghijkzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzazjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghieoprszuouzzzaz'], ['abdcdeffeabdcdeffeeMxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqxaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghissdcbatttxuxzrtyeba'], ['zbcdafghijkzlmnopsrszutttxuxzrtiyozbcydafabcdeffeedcbaghijklmnoyprstuTvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzza'], ['zbcdafghijklmnoprstuvwwabcdzzzqzbcdafghilmnoprstuvwxUVWXYZukvzbcdafzghijklmnoprstuvwxeyzouzzzaaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuouzzzazeffeedcbaxyaeyzzouzzzbgaqwaerty'], ['zbcydafabcdeffeedcbaxyhzabcDEDFghDighijklmnoyprstuvwwxyaeyzzobbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhazbcdafghijklmnoprszuouzzzapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnneuzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzaty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvtttxuxzrtxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttxyzabczbcdafghirrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdaxyzabcDEFghizuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghiynpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['xyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFabdcdeffebbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhawpqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnneeMssdecbatttxuxzrtyghi'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknxsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcdafghizbcdabbkrtfdoiyyMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvidzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxsizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfwghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdpeffeedcbazzaqwerty'], ['zbcdafghijkMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtysMssondjofzhhxyhzabcnylrlzhkemjxbopglbghojxxwnovsmrqajxslmnoprstuvwxeyzzouzzza'], ['zbzbcdxyzabcDEDFghDiafghijklm'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemzjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['zbcdafghijklmnoprstuvwxUVzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghiQWERTYqwerEtyyghijklmnoprszuouzzzzazklmnotabdcdeffeedcbattxuxzzzrttQWERTYqwertyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyWXYZuvzbcdafghijklmnopzbcdafghijklmnoprstuvwxUVzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqaiozzzbcdafghijklmnoprszuouzzzzazklmnotttxuxzzzrttQWERTYqwertyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzarstuvwxeyzzouzzzawxyaeyzzouzzza'], ['hijklmnoprszuouzzzzazklmnotttxuxzzzrttQWERTYqwerzbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaqwertytyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzza'], ['bbkirtiyyiuy'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffeedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwerty'], ['atttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuraovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxbfcdeffeedba'], ['stttxuxzztrttttxyzabczbsMbbkrtoiyyiuysscdafghijklmnoouzzzaDEDFghi'], ['xyzabczbcdafghiijklmnoprtuvwxeyzzouzzzaDEDFghi'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxzzzqaiozzzbcdafghijkzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzazbopglbgzxyzabcDEDFghihojxxwnovsmxyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFabdcdeffebbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhawpqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnneeMssdecbatttxuxzrtyghirqajx'], ['zobcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzza'], ['zbcdafghijklmnopzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzarszbcdafghijklmnoprstuvwxUVWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzatuvQWERTYqwlertywxeyzzouzzza'], ['zbzbcdafghijklmnoprszaouzzzacdmafghijklmnoprszuouza'], ['zbcydafabcdeffeedcbaghijklmnoyprstuvwwsxyaeyzzouzzzaqwerty'], ['zbcdafghizbcdabbkrtfgdoiyyizbcdafghijklqwerty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcxyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFabdcdeffeeMssdecbatttxuxzrtyghiertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcdafghijklmnoprstuvwwabcdzzzqzbcdafghilmnoprstuvwxUVWXYZukvzbcdafzghijklmnoprstuvwxeyzouzzzaaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuouzzzazeffeedcbaxyaeyzzouzzzbgaqwaertytttxuxzzrtttabcdeffeezblmnoprszouzzza'], ['abcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwertyzzouzzzaqwertyfeedcba'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvjydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['tttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzlzhkemjxbopglbghojxxwnovsmrqajxzzzqaiozzzbcdafghijklmnoprszuouzzzaz'], ['txyzabcDEDFgDhittuxzrty'], ['zbzbcdafgtxyzabcDEDFghittuxzrtyhijklmnoprszouzzzacdmafghijklumnoprszuouza'], ['xyzabczbzbcdafghijklzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzzzaqwertytymnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyiuysscdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['IA'], ['abdcdeffeeMxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafgghijklmnoprstuvwwxyaeyzzouzzzakqwertyfeedcbaurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqxaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghissdcbatttxuxzrty'], ['QWEqRTYqwerty'], ['zzzszuouzzbcdafghizbcdabbkrtfdoiyyMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvidzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxsizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfwghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdpeffeedcbazzaqwertyzzaz'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofdzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepwertywxQnohszzza'], ['MszxyzabcDEDFgis'], ['tttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinpzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprszbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwertyaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxuxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqw'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffeedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxrvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwerty'], ['zzzqaiozzzbcMsssdatttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxzzzqaiozzzbcdafghijkzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzazbopglbgzxyzabcDEDFghihojxxwnovsmrqajxz'], ['tttxuxzbcdafghijklmnoprszuouzzzahirtysMss'], ['zbcdafghijkzlmnopsrszutttxuxzrtiyozbcydafabcdeffeeadcbaghijklmnoyprstuvwwxyaeyzzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzza'], ['zzzzqaiEFghizbcdafghikooxnnejklmnoprszuouzzzazbcdafghijklmnoprszouzzza'], ['zzzqaiozzzbcdafghijklmnoprszqweertyuouzzzaz'], ['zbcdafghzxyzabcDEDFghiijklmnoprstuvwxUVytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['kooxnzbcdabbkrtfdoiyyzbrcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzane'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknxsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhe'], ['abcdzzzqaiozzzxyzabcDEFghibcdatxyzahbcDEDFghittuxzrtyfghijklmnoprszuouzzzazeffeedzjklmnoprstuvEQWERTYqwertywxpeyzzouzzzacba'], ['MsMs'], ['zbcdafghizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouztttuuxzrttyzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaqwerty'], ['tttuzbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzzaxzzbcdafghijkzlzbczbcdafghijkzlmnoprszuouzzzaydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnoprszuouzzzarttuy'], ['abfcdeffezzzqaiozzzbcdafghijklmnoprszqweertyuouzzzazedbttttxuxzzrttta'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqxaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghozjxxwnovsmrqajxzabcDEFghi'], ['tttxuxzztrttttxyzabczbsMbbkrtiyyiuysscdafghijkclmnoprstuvwxeyzzouzzzaDEDFghi'], ['ttttrtt'], ['zbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzabcdzrzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbarty'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkuriifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['abcdzzzqaiozzzxyzabcDEFghibcdatxyzaertywxpeyzzouzzzacba'], ['tttuxzzbcdafghijkzlzbcydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnprszuouzzzarttuy'], ['bbkrtiytttrttyiruykooxnne'], ['zzzqaiozzdafghijklmnoprszqweertyuouzzzaz'], ['e'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqaiozzzbcdafghijklmnoprszuouzzzzazklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertylcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['QWEqRTYqwertttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxuxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqwty'], ['zbcdafghijklmnoprstuvwxUVWXYkooxnzbcdabbkrtfdoiyyzbrcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzanenoprstuvwxeyzouzzza'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcxyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFabdcdeffeeMssdecbatttxuxzrtyghiertyfghijklmnoprszuouzzzaziiiiiinprlxfqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkqajxkrtiyyiuykooxnne'], ['LNFZmHOo'], ['zbcydafacbcdeffeedcbaghijklmnoypvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTkYqwertywxeyzzouzzzaty'], ['zbcdafghijklmnoprstuvQWERTYqwertzzzszzuzbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzaouzzzazywxeyzzouzzzza'], ['zbzbcdafghijklmnoprszouzzzacdmafghijklmnoprszuozbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzkooxnnzbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzaea'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiabfcdeffeedcbiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['Mssss'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmacnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrlzhkemjxbopglbgwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['zbcydafacbcdetttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuraovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxffeedcbaghijklmnoypvwwxyaeyzzouzzzsaqwerzjklmnoprstuvEQWERTkYqwertywxeyzzouzzzaty'], ['abcdzzzqaiozzzbcdafghijkzbzbcdafghijklmnoprszouzzzacdmafghijklmnoprszuouzalmnoprszuouzzzazeffeedcba'], ['zzzqaiozzzbcdafghijklmnxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertycnvtvlztxxmgwabcdzzzqaiozzzbczzzqaiozzzbcdafghijkzbcdafghijktttxuxzztrttttlmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzazjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghieoprszuouzzzaz'], ['zbcydafabcdeffeedczbcdafghijkzlmnopsrszutttxuxzrtiyozbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzzaijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzzzaqwertyty'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiitvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxs'], ['zbzbcdafghijklmnoprszaouzzzacdmafghijtttxuxzzrtttabcdeffeezbcdabbkrtfdoiyyiuyfghijklmnoprszouzzzaprszuouza'], ['abcdzrzzqaiozzzbcdafghijklmnoprszuouzfxyzabcDEFghizztttrttazbbkrtiyyiuykooxnneefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaba'], ['QWEqRTYqwerYty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaauztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvabcdzzzqaiozzzbcdafghijkzbzbcdafghijklmnoprszouzzzacdmafghijklmnoprszuouzalmnoprszuouzzzazeffeedcbayscurovmjxebakretepxhapqjriulopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['MszabdcdeffeeMssdcbatttxuxzrtyxyzabcDEDFgis'], ['tttxuxzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzazztrtttt'], ['tttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhtttuuxzrttyvyscurovmxebakretepxhzbcdafghijklmnoprszuouzzzaapqjriulawnperyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjbbkrtiyyiuyjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxs'], ['abcdzzzqaiozzzbcdafghijklmntttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepwertywxpeyzzouzzzaoprszuouzfzzazefzbcdafghzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzaoprstuvwwxyaeyzzouzzzaqkooxnzbcdabbkrtfdoiyyzbcdafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzanea'], ['stttxuxzztrttttxyzabczbsMbbkrtoiyyiuyssctttxuxzzzrttQzWERTYTqwdafghijklmnoouzzzaDEDFghi'], ['zzzzuouzzzaz'], ['zbcdafghijklmdnoprstuvwxUVzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghiQWERTYqwerEtyyghijklmnoprszuouzzzzazklmnotabdcdeffuzzzawxyaeyzzouzzza'], ['zzzqaizozzz'], ['zbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzabcdzrzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbartyzzouzzzaqwerty'], ['tttxuxzzzrttQzWERTYzTqw'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjsjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffeedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwtttuzbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzzaxzzbcdafghijkzlzbczbcdafghijkzlmnoprszuouzzzaydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnoprszuouzzzarttuyiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwerty'], ['MsMzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretvepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwertys'], ['abfcdeffezzzqaiozzzzzqaiEFghizbcdafghikooxnnejklmnoprszuouzzzazbcdafghijklmnoprszouzzzaafghijklmnoprszqweertyuouzzzazedbttttxuxzzrttta'], ['zzzqaizozz'], ['tttxuxzzzrttQzWERTYqwerty'], ['zbcdafghizbcdabbkrtfdoiyyMsstttuxiozmcnrvxaxeeeeekzpzbcdafghijkMsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtysMssondjofzhhxyhzabcnylrlzhkemjxbopglbghojxxwnovsmrqajxslmnoprstuvwxeyzzouzzzawiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxsizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzajklmnoprstuvwvwxyaeyzzouzabcdeffeedcbazzaqwerty'], ['atttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiizbcdafghijklmnoprszouzzzaiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuraovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxbfcdeffeedba'], ['abcdzzzqaiozzzxyzabcDEFghibcdatxyzahbcDEDFghittuxzrtyfghijklmnoprszuouzzzazeffeedzjklmnoprstuvEQWERTYabbfcdeffeedcbqwertywxpeyzzouzzzacba'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaassxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['tttxuxzzzrttQzWERTYTw'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuryzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['zbcdafghijkllmnopaprszlpuouzzza'], ['bbkrtiyyiuykooxnnne'], ['xyzabczbzbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyizzzqaiozzzuysscdafghijklmlinoprstuvwxeyzzouzzzaDEDFghi'], ['zbcdabbkrtfdoiyyiuzyfghijklmnoprszouzzza'], ['zbcdafghijaklmnoprszouzza'], ['abccdeffeeda'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzzbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzabcdzrzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbartyzzouzzzaqwertyhkemjxbopglbghojxxwnovsmrqajxs'], ['zbcdafghijklhmnoprstuvwxUVttctuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuoubbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnnezzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['tttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprtepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxuxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqw'], ['abcdeffeedcbabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeytxyzabcDEDFghittuxzrtyaa'], ['tttxuxzzzrttQzWERTYqwqwertyxyzabDcrDEFghierty'], ['xyzabczbzbcdafghijklmsMbbkrtiyyzbcdafghijklmnoprstuvwwabcdzrzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcbaxyaeyzzouzczzgaqwertyiuyssnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrticyyiuysscdafghijklmnoprstuvwxeyzzouzzzaDEDFghi'], ['abdcdefazuxzrty'], ['tttxuxzrtyzbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzzasMss'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghiqjklmzzzqaiozzzbcdafghijklmnoprszuouzzzaznoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghoqwerttyjxxwnovsmrqajxzabcDEFghi'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpmtbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['tttxuxzzzrttuQWRTYqw'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknxsnhptbcttrrrzkurifpqjyypugyhliiiiiizbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwertyiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxtaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuryzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuryzabcDEDFghDijxkiyhfwmbvdtttrttzmssxxpwoaynylrzjklmnoprstuvEQWERTYqwertywxeyzzouzzzalzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwerty'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtysMssondjofzhhxyhzabcnylrlzhkxbopglbghojxxwnovsmrqajxs'], ['zbcdafghijklmnotttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhtttuuxzrttyvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzaeffeedcbaxyaeyzzouzzzgaqwerty'], ['zbcdafghijklmnoprstuvwwabcdzzzqzbcdafgVhilmnoprstuvwxUVWXYZukvzbcdafzghijklmnoprstuvwxeyzouzzzaaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuouzzzazeffeedcbaxyaeyzzouzzzbgaqwaertytttxuxzzrtttabcdeffeezblmnoprszouzzza'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszzbcdafghijklmnoprstuvwxUVWXYZukvzbcdafghijklmnoprstuvwxeyzouzzzauouzzzzazklmnoaprszuouzzzazeffeedcbaxyaeyzzouzzzbgaqwaerty'], ['xyzabczbcdafghijklmnoprtuvwxeyzzLNFZmHOoouzzzaDEDFghi'], ['OLNFZ'], ['abfcdeffeedbabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafgghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbaa'], ['zbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzabcdzrzzqaiozzzbcdafghijklmnoprszuzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbartyzzouzzzaqwerty'], ['xyzabcDFghi'], ['zbcdafghijklmnoprstuvwwabcdzzzqzbcdafghilmnoprstuvwxUVWXYZukvzbcdafzghijklmnoprstuvwxeyzouzzzaaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuoupzzzazeffeedcbaxyaeyzzouzzzbgaqwaerty'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaakooxnnzbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzaeaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffeedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxrvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwertyhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['qwertyxyzabDcDEDFghi'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmnne'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiibbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiizbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjsjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffeedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwtttuzbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzzaxzzbcdafghijkzlzbczbcdafghijkzlmnoprszuouzzzaydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnoprszuouzzzarttuyiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwertywoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnneinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['zbzbcdafghijklmnoprszaouzzzacdmafghijtttxuxzzrtttabcdeffeezbcdabbkrtfdotiyyiuyfghijklmnoprszouzzzaprszuouza'], ['kooxtttxuxzzzrttQzWERTYzTqwnne'], ['zzzqzatttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiizbcdafghijklmnoprszouzzzaiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuraovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxbfcdeffeedbaaizozz'], ['qqwerrt'], ['zbzbcdafgtttxuxzzzrtthijklmnoprszouzzzacdmafghijklumnoprszuouza'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffseedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwerty'], ['HtorPc'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmabcdzzzqaiozzzbcdafghijklmnobprsabcdzrzzqaiozzzbcdafghijklmnoprszuouzfxyzabcDEFghizzazbbkrtiyyiuykooxnneefzbcdafghijklmnoprstuvwwxyaeyzzouzzzabazuouzzzazeffeedcbaetepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaoqwerty'], ['zbcdafghijklmnoprstuvwwabcdzzzqzbcdafghilmnoprstuvwxUVWXYZukvzbcdafzghijklmnotttExuxzzzrttQtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprtepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxuxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWERTYqwprstuvwxeyzouzzzaaiozzzxyzabcDEFghibcdafghijzzzqasiozzzbcdafghijklmnoprszuouzzzzazklmnoaprszuoupzzzazeffeedcbaxyaeyzzouzzzbgaqwaerty'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlaztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeffeedcbaondjofzhhvyscurovmxebakretepxhapqjriuilawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['stttxuxzztrttttxyzabczbsMbbkrtoiryyiuysscdafghihjklmnoouzzzaDEDFghi'], ['qtzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjsjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffeedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwtttuzbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzzaxzzbcdafghijkzlzbczbcdafghijkzlmnoprszuouzzzaydafabcdeffeedcbaghijklmnoyprstuvwwxzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatymnoprszuouzzzarttuyiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwertyweertty'], ['ttztxuzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabczbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzaeffeedcbaxyaeyzzouzzzgaqwertyxzxrty'], ['zbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmabdcdeffeeMssdzabzbcdafghijklmnoprszouzzzacdmafghaijklmnoprszuouzaecbatttxuxzrtynoprszuouza'], ['zobcdafghijklmnoprstuvhQWERTYqwerWtywxeyzzouzzza'], ['DeMLGjH'], ['zbcdafghijkzlmnoxyzahbcDEFghipsrszutttxuxzrtiyozbcydafabcdeffeeadcbaghijklmnoyprstuvwwxyaeyzzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzza'], ['tttuxiozzbzbcdafghijkzbcdafghijklmnoprszuouzzzalmnoprszouzzzacdmafghijklmnoprszuouzamcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyxhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzzzqaiozzzbcdafghijklmnoprszuouzzzaz'], ['zz'], ['zzzqaiozzzbcdafghijklmnoprszqweertyuouzzzazssMsss'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvtttxuxzrxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknlsnhpbcttxyzabczbcdafghirrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdaxyzabcDEFghizuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghiynpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['abcdeffeedcbafghijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzaneaa'], ['zbcydazbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzabcdzrzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbartyfacbcdeffeedcbaghijklmnoypvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTkYqwertywxeyzzouzzzaty'], ['abcdzzzqaiozzzbcdafghijklmntttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepwertywxpeyzzkooxnzbcdabbkrtfdoiyyiuyfghijklmnoprszouzzzaneouzzzaoprszuouzfzzazefzbcdafghzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzaoprstuvwwxyaeyzzouzzzaqkooxnzbcdabbkrtfdoiyyzbcdafgabzddcdefabcdzzzqaiozzczbcdafghijklmnoprszuouzzzazeffeedcbafeedcbahijklmnoprstuvQWERTYqwerWtywxeyzzouzzzaiuyfghijklmnoprszouzzzanea'], ['zzzqaiozzzbcMsssdatttuxiozmcnrvxaxeeeeekzpwiktlvbjjxvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxzzzqaiozzzbcdafghijkzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzazbopglbgzxsyzabcDEDFghihojxxwnovsmrqajxz'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcxyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFabdcdeffeeMssdecbatttxuxzrtyghiertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['qtweertwty'], ['xyzabcDbbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpsqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhazbcdafghijklmnoprszuouzzzapqjriulawnpeytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhxyhzabcDEDFghDiurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnnehEiFghi'], ['zbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzabcdzrzzqaiozzzbcodafghijklmnoprszuzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbarteyzzouzzzaqwe'], ['zfghzbcdafghijklmnoprstuvQWERTYqWwlertywxeyzzouzzzaijkzlmnoprszuonuzzza'], ['zzzszzuozuzzuz'], ['MtttxuxzzzrttQWERTYqwertysbbkyyrtfdoiyyiuyyss'], ['zbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaauztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyjscurovmxebakrezbcdafghijkllmnopaprszlpuouzzzatepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwerty'], ['zbcdafghijklmnoprstusMsvwxUVWXYZuvzbcdafghijklmnoprstuuvwxeyzzouzzzawxyaeyzzouzzza'], ['zbcdafghijklmnoprstuvwxUVWXYZuvzbcbbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertylnylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnne'], ['QWERTYqwertytttuxzrty'], ['zbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzabcdzrzzqaiozzzbcdafghijkIAlmnoprszuzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbartyzzouzzzaqwerty'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbgzxyzabcDzzzzqaiozzxyzabcDEFghizbcdafghikooxnnejklmnoprszuouzzzazbcdafghijklmnoprszouzzzaEDFghihojxxwnovsmrqajx'], ['abcdzzzqaiozzzxyzabcDEFghibcdatxyabdcdeffeabdcdeffeeMxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqxaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxzabcDEFghissdcbatttxuxzrtyebazaertywxpeyzzouzzzacbza'], ['QWEabcdzzzoprszuouzfzzazeffeedcbaRTYqwerty'], ['zbcdafgyhizbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzttdcbazzaqwerty'], ['ttttxuxzztttt'], ['tttxuxzzxyzabczbzbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzasMbbkrtiyyizzzqaiozzzuysscdafghijklmlinoprstuvwxeyzzouzzzaDEDFghizrtt'], ['MsstttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwtttxuxzrtyzsMssondjofzhhxyhzabcnylrlzhkxbopglbghojxxwnovsmrqajxs'], ['bbkirtiyyxytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaabcdzzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedzjklmnoprstuvEQWERTYqwertywxpeyzzouzzzacbazabcDEFghiiuy'], ['zjklmnoprstuviEQWERTYqwertywxeyzzozbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvzzzzuouzzzazbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwertyuzzza'], ['abccdeffeedzbcdafghizbcdabbkrtfdoiyyizbcdzbcdafghijkzlmnopsrszutttxuxzrtiyozbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzzaqwertya'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxzzzqaiozzzbcdafghijkzbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzalmnoprszuouzzzazbopglbgzxyzabcDEDFghihojxxwnovsmxyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFabdcdeffebbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhawpqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertynylrlzhkemjxbopglbghojxxwnzbcdafghijklmnoprstuvwxUVzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghiQWERTYqwerEtyyghijklmnoprszuouzzzzazklmnotabdcdeffeedcbattxuxzzzrttQWERTYqwertyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyWXYZuvzbcdafghijklmnoprstuvwxeyzzouzzzawxyaeyzzouzzzaovsmrqajxkrtiyyiuykooxnneeMssdecbatttxuxzrtyghirqajx'], ['tttxuxzzztrttQzWERtTYTw'], ['zbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabczbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzbcdafghijklmnoprstuvwxUVWXYZukvzbcdafghijklmnoprstuvwxeyzouzzzazzouyzzzaeffeedcbaxyaeyzzouzzzgaqwerty'], ['zbcwdafghijkQWEqRTYqwertylmnoprnstuvwtzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyttxuxzrtyUVWXYZuvwza'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrxyzabczbcdafghijklmnoprstuvwxeyzzouzzzaDEDFghirzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxzzzqzatttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiizbcdafghijklmnoprszouzzzaiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscuraovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxbfcdeffeedbaaizozzebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['MssszbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertys'], ['tttttExuxzzzrttQzbcdabbkrtfdoiyyiuzbcdafghzxyzabcDEDFghiijklmnoprstuvwxUVytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyyfghijklmnoprszouzozzarqajxWERTYqwzrttQWERTYqw'], ['xyzabczbcdafghiijklmnoprtuvwxeyzzouzzzbcdafghijklmnoprstuvwxUVWXYZuvzbcbbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoayzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdazbcdafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyfghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxnhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlezhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertylnylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnnezaDEDFghi'], ['ttztxuzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabczbcdafghijklmnoprstuvwxUVWXYZuvzbcdijklmnoprstuvwxeyzzouzzzawxyaeyzzouyzzzabccdeffeedzbcdafghizbcdabbkrtfdoiyyizbcdzbcdafghijkzlmnopsrszutttxuxzrtiyozbcydafabcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwerzjklmnoprstuvEQWERTYqwertywxeyzzouzzzatyuzzzaqwertyaaeffeedcbaxyaeyzzouzzzgaqwertyxzxrty'], ['MsMzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretvepxhapqjynylrlzhkemjxbopglbghowjxxwnovsmrqajxWXYZuvwxyaeyzzouzzzaqwertys'], ['abcdzzzqasMbbkrtiyyzbcdafghijklmnoprstuvwwabcdzrzzqaiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyiuyssiozzzxyzabcDEFghibcdafghijklmnoprszuouzzzazeffeedcba'], ['zbcdafghijklmnoprstuvwxUVzbcdafghijklmnoprstuvwwabcdzzzqaiozzzxyzabcDEFghibcdafghijzzzqaiozzzbcdafghiabcdzzzqaiozzzbcdafghijklmnoprszuouzfzzazefzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyfeedcbajklmnoprszuouzzzzazklmnotttxuxzzzrttQWERTYqwertyprszuouzzzazeffeedcbaxyaeyzzouzzzgaqwertyWXYZuvzbcdafghijklmnoprstuvwxeuyzzouzzzawxyaeyzzouzzza'], ['zabzbcdafghijkttttxuxzzttttlmnoprszouzzzacdmafghaijklmnoprszuouza'], ['IUhh'], ['zbcdafughijklmnoprstusMsvwxUVWXYZuvzbcdafghijklmnoprstuuvwxeyzzouzzzawxyaeyzzouzzza'], ['xytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaakooxnnzbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzaeaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwabcdzzzqaiozzzbcdafghijklmnoprszuouzzzazeulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvabjjvydknsnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaabdcdeffeedcbaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxrvlnufkwcyxyzabcDEDFghDijxkiyhfwmbvdtttrttzmzbcdafghijklmnoprstuvwxUVtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbctbbkrtiyyiuykooxnneWXYZuvwxyaeyzzouzaoqwertyhkemjxbopglbghojxxwnovsmrqajxzabcDEFghi'], ['tttxuxzrtyzbcdafghijklmnoprstuvrQWERTYqwerWtywxeyzzouzzzasMbbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmnness'], ['bbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiitttttExuxzzzrttQzbcdabbkrtfdoiyyiuzbcdafghzxyzabcDEDFghiijklmnoprstuvwxUVytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsbnhpbcttrrrzkurifpqtjyypugyhiiiiiiiizzzqaiozzzbcdafghijklmnoprszuouzzzaziiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcanvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxWXYZuvwxyaeyzzouzaqwertyyfghijklmnoprszouzozzarqajxWERTYqwzrttQWERTYqwiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmnne'], ['abfcdeffezzzqaiozzzbcddafghijklmnoprszqweertyuouzzzazedbttttxuxzzrttta'], ['qweezbcydafaibcdeffeedcbaghijklmnoyprstuvwwxyaeyzzouzzzaqwertyrty'], ['qwertyrxyzabDcrDEFgqhi'], ['kooxtttxuxzbcdafghijklmnoprstuvwwxyaeyzzouzzzaqwertyWERTYzTqwnne'], ['zbcdaabbbitttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhptbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwszmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxkrtiyyiuykooxnnebkrtfdoiyyiuyfghijklmnoprszouzzza'], ['ttzbzbcdafghijklmnoprszouzzzacdmafghijklmnoprszuozbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzkooxnnzbcdabbkrtfdoiyyizbcdafghijklmnoprstuvwxUVWXYZuvwxyaeyzzouzzzaqwertyuyfghijklmnoprszouzzzaeatty'], ['a'], ['b'], ['aAa'], ['bb'], ['AAAAbbbbb'], ['ABCabc'], ['zyx'], ['aa'], ['xyzazbcDEFyi'], ['zbcDEFyi'], ['xyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghi'], ['QWERTzbcDEFyiYqwerty'], ['bbkrtfdoiyxyzabcDEFghi'], ['seRyB'], ['yseRyB'], ['QWERTzbcDEFzyiYqwerty'], ['tttxuxzQWERTzbcDEFyiYqwertyzzrttt'], ['tttxuxtzQWERTzbcDEFyiYqwertyzzrttt'], ['zbcdafgheyzzouzzza'], ['bbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['QWERTzbcDEFyiYqwertYy'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['ttttxuxzzzrttt'], ['tttxt'], ['kobbkrtfdoiyyiuyoxnne'], ['kobbkrtfdoiyyyiuyoxnne'], ['zbRTzbcDEFzyiYqwertyDEFyi'], ['xttttxuxzzzrtttyzazbcDEFyi'], ['xyzabcDEzbcydafghijklmnoprstuvwxeyzzouzaFghi'], ['abcdefftttxteedcba'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['kobbkrtfdoiyyiiuyoxnne'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzaFghity'], ['kobbkrtfdoiyyiiuyoxne'], ['QWERTzbcDEFyiEYqwerty'], ['zbzzzqaiozzzRTzbcDEFzyiYqwertzyDEFyi'], ['QWERTzbcDEFzyierty'], ['ztbcdafghijklmnoprstuvwxeyzzouzzza'], ['yseRBkobbkrtfdoiyyiuyoxnne'], ['tttuxiozmcnrvxaxeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['xyzazbcDEyi'], ['bbkrtfdoiyyiuzbcdafghQWERTzbcDEFyyiYqwertyeyzzouzyzzay'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzzzrttt'], ['zbcdafgheyzzozbcdafgheyzzouzzzauzzzza'], ['tttxuxkobbkrtfdoiyyiuyoxnnetzQWERTzbcDEFyiYqwertyzzrttt'], ['kobbkrtfdoiyyiuyrtfdoiyyyiuyoxnne'], ['kobbkrtfdxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghioiyyiuyoxnne'], ['yseRBkobbkrtfdoiyytttxtiuyoxnne'], ['kobrbkrtfdoiyyiuyrtfdoiyyykobbkrtfdoiyyiiuyoxunnee'], ['KiUHqiz'], ['bbkrtfdoiyxyz'], ['BSco'], ['ttztxuxzzzrttt'], ['xyzabcDEFgEhi'], ['yseRyRBzbRTzbcDEFzyiYqwertyDEFyi'], ['kobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnne'], ['zbcdafgheyzzodzbcdafgheyzzouzzzauzzzza'], ['QWERRTzbcDEFyiEYqwerty'], ['RQWERTzbcDEFEyiYqwertYy'], ['xyzazbccDE'], ['kobbkrrtfdoiyyyiuyoxnne'], ['azbcdafghijzouzzza'], ['azbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['kobbkrttttxuxkobbkrtfdoiyyiuyoxnnetzQWERTzbcDEFyiYqwertyzzrtttoxnn'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytettxuxzzzrttt'], ['zbcdafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzza'], ['xyzazbcFyibbkrtfdoiyyiuzbbkrtfdoiyyiuzbcdafghQWERTzbcDEFyyiYqwertyeyzzouzyzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['QWERTzbcDEFzyitYqwerty'], ['tttuxiozmcnrvxaxeeeeekzpwiktglbghzbcDEFyiojxxwnovdsmrqajx'], ['xyzazbccDzbcdafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzzaE'], ['QWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaTzbcDEFyiEYqwerty'], ['zbDEFyi'], ['QYPV'], ['WQWE'], ['QWERTzbQWERTzbcDEFyiEYqwertycDEFyiYqwertYy'], ['QWERTzbcDErty'], ['RQWERTzbcDEFEyiYqwertYQWERTzbcDEFyiYqwertYy'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['xyzxyzazbcDEFyiabcDEFgEhi'], ['QWERTzbcDEFzyiYqwertQy'], ['zbcgdafghzbcdafdgheyzzouzzzauzzzza'], ['QWErRTzbcDEFzyierty'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnovdsmrqajx'], ['QEWERTzbcDErtyYqwerty'], ['xyzazbccDzbcdafzbcdafgheyzzouzzzaghijklmnopazbcdafghijzouzzzarstQWERTzbQWERTzbcDEFyiEYqwertycDEFyiYqwertYyuvwxeyzzouzzzaE'], ['UVWXXYZuvwxya'], ['zyzzay'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvsxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajx'], ['xyzazzzqaiozzzbcDEFgEhi'], ['xyzazbcDEFyiQWERTzbQWERTzbcDEFyiEYqwertycDEFyiYqwertYy'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzzzrtttrstuvwxey'], ['azbcdafgzza'], ['xyztazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['QWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzawTzbcDEFyiEYtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxqwerty'], ['ttttxuxzzzrtazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzzat'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzza'], ['bbkrtfdoiyyiuzbcdafghQWERTzbcDEFyixyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzzzrtttYqwertyeyzzouzzzay'], ['yseRBkobbkrtfdkozbcdafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzzaiyytttxtiuyoxnne'], ['zbcdafghijklmnoprstuvwxeyyseRyRBzbRTzbcDEFzyiYqwertyDEFyizzouzzza'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['abcdefftttxteedcbtttuxiozmcnrvxaxeeeeekzpwiktglbghzbcDEFyiojxxwnovdsmrqajxa'], ['p'], ['QEWERTzbcDErtywYqwerty'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzrttt'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['RQWERTzbcWDEFEyiYqwertYQWERTzbcDEFyiYqwertYy'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzayzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['xyzazbcFyibbkrtfdoiyyiuzbbzkrtfdoiyyiuzbcdafghQWERTzbcDEFyyiYqwertyeyzzouzyzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['kobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnone'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaauaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['zbzzzqaiozzzRqwertzyDEFyi'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabczbcdafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzzaDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['kobbkobbkrtfdoiyyyiduyoxnnekrtfdoiyyyiuyoxnone'], ['bbkrtfdoiyyy'], ['QWERTzbcDEFyiYqwertyYy'], ['ttttx'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiaiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzayzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['kobbkrtfdxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghoiyyiuyoxnnetx'], ['yseRyyB'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifkobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnnepqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwlleyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['ttttxuxxzzzrttt'], ['bbkrtfdoiyyz'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijxyzazzzqaiozzzbcDEFgEhiklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifkobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnnepqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['zkobbkrtfdoiyyyiuyoxnnebcdafgheyzzouzzza'], ['abcdeffededcba'], ['kobbkrtfdoiyyiuyrtfdyiuyoxnne'], ['UVWXwYZuvwxya'], ['tbbkrtfdoiyyztttxuxkobbkrtzzrttt'], ['xyzazbcFyibbkrtfdoiyyiuzbbzkrtfdoiyyiuzbcdafghQWERTtttxuxtzQWERTzbcDEFyiYqwertyzzrtttzbcDEFyyiYqwertyeyzzouzyzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayzbcDEFyiYqwertyeyzzouzzzaytettxuxzzzrttt'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzzzzaytettxuxzzzrttt'], ['tttuxiozmcnkrvxaxeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['zbzzzqaiozzzRTzbcDEFzyiYqwertzyDEFyiYqwerty'], ['zbcdafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzz'], ['QeWERTYqwerty'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnovdsmrqtajx'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttirrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['tttuxiozmcnrvxaxazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcgdafghzbcdafdgheyzzouzzzauzzzzafzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['zbcdafghijklmnoprstuuvwxeyzzouzzza'], ['zbcdafgheyzzozbcdafgheyzzouzzzauzza'], ['zbcdtttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnovdsmrqtajxafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzza'], ['bbkbrtfdoifyyz'], ['xyzbbkrtfdoiyyyxyzazbcDEFyiabcDEFgEhi'], ['zbDEF'], ['ttt'], ['ysseRyyB'], ['kobbkrtfduyoxnne'], ['zbcdafzbcdafgheyzzouzzzaghigjklmnoprstuvwxeyzzouzzza'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaauaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofmzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['yseRBkobbkrtfdxyzababcdeffededcbacDEFghioiyyiuyoxnne'], ['xyzazbcFyibbkrtfdoifyyiuzbcdafghQWERTxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzzzzaytettxuxzzzrttt'], ['azbcdafghijzouzzzza'], ['QWERRTzbcDEFyiEYqweyrty'], ['QWUVWXYZuvwxya'], ['QWERTzbcazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaDEFyiYqwerty'], ['ysseRyByB'], ['xyzazbccDzbcdafzbcdafgheyzzouzzzaghijklmnopazbcdafghijzouzzzarstQWERTzbQWERTzbcDEFyseRBkobbkrtfdoiyyiuyoxnneyiEYqwertycDEFyiYqwertYyuvwxeyzzouzzzaE'], ['ysseRyByBB'], ['xyzazbcFyibbkrtfdoiyyiukzbcdafghQWERTxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayzbcDEFyiYqwertyeyzzouzzzaytettxuxzzzrttt'], ['zBScobDEF'], ['tttxuxzzzrtttttxuxkobbkrtfdoiyyiuyoxnnetzQWERTzbcDEFyiYqwertyzzrttt'], ['zbcdafgheyzzbbkrtfdoiyyzodzbcdafgheyzzouzzzauzzzza'], ['kobbkrrtfdoiyyyiuyoxnnne'], ['seRyRQWERTzbcWDEFEyiYqwertYQWERTzbcDEFyiYqwertYyB'], ['yseRByyB'], ['zbzbzzzqaiozzzRqwertzyDEFyicdafgheyzzozbcdafgheyzzouzzzauzza'], ['bbkrtfdoixyzazbcDEFyiQWERTzbQWERTzbcDEFyiEYqwertycDEFyiYqwertYyyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayzbcdafzbcdafgheyzzouzzzaghigjklmnoprstuvwxeyzzouzzza'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbghojxmrqtajx'], ['zbcdafgheyzzozbcdafgheyzzouzzzauzzztttuxiozmcnrvxaxeeeeekzpwxiktglbghojxmrqtajx'], ['bboiyyiuy'], ['dSJxyzazbcDEFyiXDCfwPU'], ['bbkrkooxnnetfdoiyxyz'], ['zbzzzqysseRyyBiozzzRqwertzyDEFyi'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvzouzzza'], ['kobrbkrtfdoiyyiuyrtrfdoiyyykobbkrtfdoiyyiiuyoxunnee'], ['xyzbbkrtfdoiyyyxzbcdafgheyzzozbcdafgheyzzouzzzauzzztttuxiozmcnrvxaxeeeeekzpwxiktglbghojxmrqtajxyzazbcDEFyiabcDEFgEhi'], ['zbDseRyRQWERTzbcWDEFEyiYqwertYQWERTzbcDEFyiYqwertYyBDEF'], ['kobbkrtfdoiysseRyyByyiuyrtfdyiuyoxnne'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaauaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofmzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghorjxxwnovdsmrqajx'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzamgwondjofmzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghorjxxwnovdsmrqajx'], ['kxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayiyyiiuyoxne'], ['RQyWERTzbckobbkrtfdxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghoiyyiuyoxnnetxDEFEyiYqwertYy'], ['QWERTzbcDEFFzzyierty'], ['QWERTzbcDEFzyiYqwerxyzabcDrEzbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzzzrtttrstuvwxey'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcgdafghzbcdafdgheyzzouzzzauzzzzafzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvnlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['zbcgdafghzbcdafdgheyzzouzzzauzzzzakobbkrrtfdoiyyyiuyoxnne'], ['tttuxiozQWERTzbcDErtymcnkrvxaxeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['xttttxuxzzzrtttzazbcDEFyi'], ['UVWXwxUya'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEQWERTYqwertyzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakreteptxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnovdsmrqaajx'], ['WQW'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['QWErRTzbcDDEFzyierty'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiaiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopgzzzqaiozzzlbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzayzzaybcdafghQWERTzbcDEFyiYqwertyeyzztouzzzayapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwikxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghimjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['yssRyBBB'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyifghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzzzrtttrstuvwxey'], ['bbkrtfdoiyyiuzbcdafghQWERTzbcDEFyixyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzKiUHqizzaytttxuxzzzbbkrtfdoiyyytyeyzzouzzzay'], ['tttt'], ['ttxttxuxzzzrttt'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnovdsmrqtkobbkrtfdoiyyyiuyoxnneajx'], ['tttuxiozmcnrvxaxazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['xyzbbkirtfdoiyyyxyzazbcDEFyiabcDEFgEhi'], ['azbcdafghijzfouzzzza'], ['QeWERTYqwert'], ['KadH'], ['xttttxuxzzzrtttyzazbcDEFyiQWERRTzbcDEFyiEYqwerty'], ['ysseRytttuxiozmcnkrvxaxeeeeekzpwiktglbghojxxwnovdsmrqajxByBB'], ['kobbkrtfdoiysseRyyByyiuyrtfdyiutyoxnne'], ['kobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuttttxuxzzzrtttyoxnne'], ['yseRyyBxyzazbcFyibbkrtfdoiyyiuzbcdbboiyyiuyt'], ['QWERTzbcazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrErrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaDEFyiYqwerty'], ['bazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifkobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnnepqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzabkbrtfdoiyxyzabcDEFghi'], ['tbbkrtfdoiyyztttxuxkobbkrtzzrtzbzzzqaiozzzRqwertzyDEFyitt'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFzbDEFyiyiYqwertyeyzzouzzzaytttxuxzrttt'], ['QWErRTzbcDDEFzyiertty'], ['abcdeffededfcba'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEgFyiYqweabcdeffededfcbartyeyzzouzzzaytttxuxzzzrtttrstuvwxey'], ['ttttt'], ['tbbkryseRyyBtfdoiyyztttxuxkobbkrtzzrtzbzzzqaiozzzRqwertzyDEFyitt'], ['xyzlmnzbcdafzbcdafgheyzzouzzzaghigjklmnoprstuvwxeyzzouzzzaprstuvwxeyzzouzzzaFghi'], ['QWEQWERTzbcazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaDEFyiYqwertyerty'], ['xattttxuxzzzrtttzazbcDEFyi'], ['QWERTzbcDEFzyiYqwerxyzabcDEzstuvwxey'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkuriiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['ysseRyy'], ['xyzazzzazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaqaiozzzbcDEFgEhi'], ['zbzzzqaiozzzRqwerQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaTzbcDEFyiEYqwertyFyi'], ['zbcDEFy'], ['ttttxuxzzzrtazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfQWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzaFghitywmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzzat'], ['bbkrtfkdoiyyz'], ['ttttxuxxzzzrtttt'], ['xttttxuxzzcDEFyi'], ['ttxttxuxztbbkryseRyyBtfdoiytttxuxkobbkrtzzrtzbzzzqaiozzzRqwertzyDEFyittttt'], ['ttzrttxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzzzrtttt'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwikQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzawTzbcDEFyiEYtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxqwertytlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['kobbzbcdafzbcdafgheyzzouzzzaghigjklmnoprstuvwxeyzzouzzzaiyyyiduyoxnnekrtfdoiyyyiuyoxnone'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijxyzazzzqaiozzzbcDEFgEhiklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifkobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnnepqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxxyzazbccDzbcdafzbcdafgheyzzouzzzaghijklmnopazbcdafghijzouzzzarstQWERTzbQWERTzbcDEFyiEYqwertycDEFyiYqwertYyuvwxeyzzouzzzaEeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrdSJxyzazbcDEFyiXDCfwPUqajxghijzouzzza'], ['WQWazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaE'], ['tttuxiozmcnrvxaxeeeeekzpxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzrtttghojxmrqtajx'], ['yseRBkodedcbacDEFghioiyyiuyoxnne'], ['zbcdafghijklmnvoprstuuvwxeyzzouzzza'], ['zbcgdafghzbcdafdgheyzzouzzzauzzzzakobbkrQWERTzbcDEFzyitYqwertyrtfdoiyyyiuyoxnne'], ['WW'], ['akeobbkrrtfdoiyyyiuyoxnnebcdtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretebbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxefftttxteedcba'], ['xyzazbcFyibbkrtfdoiyyiuzbbzkrtfdoiyyiuzbcdafghQWERTzbcDEFyyiYqwerytyeyzzouzyzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['UVxWXYZuvwxya'], ['zbcgdafghzbcdafdgheyzzouzzzauzzzzakobbkrkobbkrtfdoiysseRyyByyiuyrtfdyiutyoxnnerotfdoiyyyiuyoxnne'], ['zbzzzqysseRyyeBiozzzRqwertzyDEFyi'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknfsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['RYQWERTzbcDEFEyiYqwertYy'], ['zbcdafgheyzzbbkcrtfdoiyyzodzbcdafgheyzzouzzzauzzzza'], ['WQWpE'], ['xyzazbcFyibbkrtfdoiyyiuzbbzkrtfdoiyyiuzbcdafghQWERTzbcDEFyyiYqwertyeyzzouzyzzaybcdafghQWERTzbcDEbFyiYqwertyeyzzouzzzay'], ['ztzzzaa'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaauaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofmzhhvyscurovmxebakretepxhapqjriulawnpeyxvbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwikQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzawTzbcDEFyiEYtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxqwertytlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpbbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaywiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['RyB'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbghojxmzzzqaiozzzrqtajx'], ['kobbkrtfdoiyyyiuyoxne'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyifghQWERTzbcDEFyiYqwertyeyzzouzzzzaytttxuxzzzrtttrstuvwxey'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYkobbkrtfdoiysseRyyByyiuyrtfdyiuyoxnneqwertyeyzzouzzzayssRyBBBytttxuxzrttt'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEgFyiYqweabcdxttttxuxzzzrtttzazbcDEFyieffededfcbartyeyzzouzzzaytttxuxzzzrtttrstuvwxey'], ['QWErRTzbcDDEFzyierttytttxuxzzzrtttttxuxkobbkrtfdoiyyiuyoxnnetzQWERTzbcDEFyiYqwertyzzrttt'], ['tttuxiozmcnrvxaxeeeeekyseRByyBzpwxiktglbghojxxwnovdsmrqaajx'], ['xyzbbkirtfdoiyyyxyzazbcDhEFyiabcDEFgEhi'], ['tttuxiozmcnrvxaxeeeeekyseRByyBzpwxiktsmrqaajx'], ['QEWERTzbYcDErtywYqwerty'], ['kobbkrtkfduyoxnzbDEFne'], ['tttuxiozmcnrvxaxeeeceekzpwxiktglbgQWERTzbcDErtyhojxmzzzqaiozzzrqtajx'], ['tttuxiozmcnrvxaxyzazbcFyibbkrtfdoiyyiuzbbzkrtfdoiyyiuzbcdafghQWERTtttxuxtzQWERTzbcDEFyiYqwertyzzrtttzbcDEFyyiYqwkobbkrtfdoiyyyiuyoxnneertyeyzzouzyzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayxeeeeekyseRBByyBzpwxiktsmrqaajx'], ['QWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzawTzbcDEFyiEtYtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxqwerty'], ['kobyrbkrtfdoiyyiuyrtrfdoiyyykobbkrtfdoiyyiiuyoxunnee'], ['QWERTzbazabcDEzstuvwxey'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhttztxuxzzzrtttiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['zbcdafgheyzzozbcdatttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnovdsmrqajxfgheyzzouzzzauzza'], ['ZnjGWPk'], ['czBScobDEF'], ['zbcdafgheyzzbbkrtfdoiyyzodzbcdafgheykobbkrtfdxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghoiyyiuyoxnnetxzzouzzzauzzzza'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcgdafghzbcdafdgheyzzouzzzauzzzzafzhhvyscurovmxebakretepxhapqjriulawfnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvnlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['tbbkryseRyyBtfdoiyyztttxuxkobbkrtzzrtzbzezzqaiozzzRqwertzyDEFyitt'], ['abcdeffQWERTzbQWERTzbcDEFyiEYqwertycDEFyiYqwertYyededfcba'], ['zbzzzqaiozzzRqzwertzyDEFyi'], ['kobbkrttkobbkrrtfdoiyyyiuyoxnneTzbcDEFyiYqwertyzzrtttoxnn'], ['kobbkobbkrtfdoiyyyiQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaTzbcDEFyiEYqwertyuyoxnnekrtfdoiyyyiuyoxnne'], ['xttttxuxzzzrtttyzazb'], ['kobbkobbkrtfdoiyyyiQWERzbcdafgheyzzodzbcdafgheyzzoxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiuzzzauzzzzaTzbcDEFyiEYqwertyuyoxnnekrtfdoiyyyiuyoxnne'], ['zbzcdafghezyzzouzzza'], ['xyzazzzqaiozzzbcDEFgEhEi'], ['ttxttxuxzzzrztt'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqmrqajx'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEgFyiYqweabcdxttttxuxzzzrtttzazbcDZnjGWPkytttxuxzzzrtttrstuvwxey'], ['zbcdafgheyzzbbkrtfdoiyyzodzbcdafgheykobbkrtfdxyzabcDazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvzouzzzaghoiyyiuyoxnnetxzzouzzzauzzzza'], ['yseRyRBzbRTzbttttxuxzzzrtttcDEFzyiYqwertyDEFyi'], ['kobbkrrtfdoiyyyzbcdafgheyzzozbcdafgheyzzouzzzauzzztttuxiozmcnrvxaxeeeeekzpwxiktglbghojxmrqtajxiuyoxnnne'], ['xyzazbcFyiyseRBkobbkrtfdoiyyiuyoxnnebbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxxzzzrttt'], ['kobbkobbkrtfdoiyyyiuyoxnnekseRyBzrtttyoxnne'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiaiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzayzzaybcdafghQWERTzbcDEFyiYqwerttxttxuxzzzrtttxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['WE'], ['tttuUVxWXYZuvwxyaxiozmcnrvxaxeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['Kqiz'], ['yseRBkobbkrtfdxyzababcdeffededcbacDEFghioiQWERTzbcDEFyiYqwertyYyyyiuyoxnne'], ['ysextiuyoxnne'], ['zbcdtttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnUVWXYZuvwxyaovdsmrqRYQWERTzbcDEFEyiYqwertYytajxafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzza'], ['ttztxuxzzzrtttazbcdafghijzouzzza'], ['zbcdafgheyzzozbcdafgheyzzzouzzzauzza'], ['RQyWERTzbckobbkrtfdxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghoiyyiuyoxnnetxabcdefftttxteedcbtttuxiozmcnrvxaxeeeeekzpwiktglbghzbcDEFyiojxxwnovdsmrqajxaDEFEyiYqwertYy'], ['QWERTzbcazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrErrzkurifpqjyypugyhiiixyrzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaDEFyiYqwerty'], ['yseRBkodeodcbacDEFghioiyyiuyoxnne'], ['WQWpExyzazbcFyibbkrtfdoiyyiuzbbzkrtfdoiyyiuzbcdafghQWERTtttxuxtzQWERTzbcDEFyiYqwertyzzrtttzbcDEFyyxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzaFghiqwertyeyzzouzzzay'], ['QWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzawTzbcDEFyiEtYtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfty'], ['tttuxiozQWERkobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnoneovdsmrqajx'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjygypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzamgwondjofmzhhvyscurovmxebRyBakretepxhaxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghipqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghorjxxwnovdsmrqajx'], ['AaXcik'], ['yseRBkodDEFghnne'], ['rds'], ['tttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzamFghiiiiiiiiiiiinprlxfaaauaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofmzhhvyscurovmxebakretepxhapqjriulawnpeyxvbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajx'], ['ttttxuxzzzrtaxyzxyzazbcDEFyiabcDEFgEhizbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzzat'], ['RQyWERTzEbckobbkrtfdxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghoiyyiuyoxnnetxDEFEyiYqwertYy'], ['kobbkrtfdoiyyiuyoxtttuxiozQWERkobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnoneovdsmrqajxnne'], ['tttuxiozmcnrvxaxeeeeekzpwiktglbghoojxxwnovdsmrqajx'], ['kobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyyiuyoxnone'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxzzzrtttrstuvwxey'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwikQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzawTzbcDEFyiEYtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvtttxuxzQWERTzbcDEFyiYqwertyzzrtttdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxqwertytlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurxovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzouzzza'], ['yseysseRytttuxiozmcnkrvxaxeeeeekzpwiktglbghojxxwnovdsmrqajxByBBRBkobbkrtfdoiyyiuyoxnne'], ['bbbkrtfdoiyxyz'], ['QWERRTzbcDEDFyiEYqweyrty'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlfzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['QWERzbcnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxqwerty'], ['xyzbbkirtfdoiyyyxyzazbcDhEFyiabcDEFgEczBScobDEFhi'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbghojxxwnovdsmrqtkobbkrtfdoiyyyiiuyoxnneajx'], ['zbcdafgheyzzozbcdafgheyzzouzzzauzzztttuozmcnrvxaxeeeeekzpwxiktglbghojxmrqtajx'], ['kobbkrtfdxyzabcDEzbcydafghijkmnoprstuvwxeyzzouzzzaFghioiyyiuyoxnne'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlfzhkemjxbopglbghojxxwnxjyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['xyzabcDEzbcydafghijklmnoprstuvwxeyzzoiuzaFghi'], ['abcdeffQWERTzbzbcgdafghzbcdafdgheyzzouzzzauzzzzakobbkrrtfdoiyyyiuyoxnneQWERTzbcDEFyiEYqwertycDEFyiYqwertYyededfcba'], ['WQ'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijxyzazzzqaiozzzbcDEFgEhiklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnbbkrtfdoiyyiuyhpbcttrrrzkurifkobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyyiuyoxnnepqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdpzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['tttuxiozmcnrvxaxeeeeekzpwxiktglbhghojxmrqtajx'], ['QeWERTYqwQert'], ['QxyzabcDEFgEhiWERTzbcDEFzyiYqwerty'], ['pp'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktzbzzzqaiozzzRqzwertzyDEFyilvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['xyzxyzaxzbcDcDEFgEhi'], ['yseRBkodeodcbacDEFoghioiyytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqmrqajxiuyoxnne'], ['zbczbzzzqaiozzzRqwerQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaTzbcDEFyiEYqwertyFyigdafghzbcdafdgheyzzouzzzauzzzzakobbkrrtfdoiyyyiuyoxnne'], ['tbbkryseRyytttuxiozmcnrvxaxazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaeeeeekzpwiktglbghojxxwnovdsmrqajxBtfdoiyyztttxuxkobbkrtzzrtzbzezzqaiozzzRqwertzyDEFyitt'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafxghQWERTzbcDEgFyiYqweabcdxttttxuxzzzrtttzazbcDZnjGWPkytttxuxzzzrtttrstuvwxey'], ['Qrty'], ['ttUVxWXYZuvwxyatuxiozmcnrvxaxeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['WQWazbcdafghifjzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqahijzouzzzaE'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaabbbkrtfdoiyxyzaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgiheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxrqajxghijzouzzzQWErRTzbcDDEFzyierttytttxuxzzzrtttttxuxkobbkrtfdoiyyiuyoxnnetzQWERTzbcDEFyiYqwertyzzrttta'], ['xttttxuxzzzrtttyzaxzbcDEFyi'], ['tttxuxzQWERTzBScobcDEFyiYqwertyzzrttt'], ['zbczbzzzqaiozzzRqwerQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaThzbcDEFyiEYqwertyFyigdafghzbcdafdgheyzzouzzzauzzzzakobbkrrtfdoiyyyiuyoxnne'], ['QWERTzbccDEFyiYqwertYy'], ['zbcdafghazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwikxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghimjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaeyzzouzzza'], ['abcdefftttxtazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaeedcba'], ['QWEQWERTzbcazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaDEFyiYqwertyerty'], ['tttuxiozmcnrvxaxeeeeekzpbbkrtfdoiyyyxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyezbcdtttuxiozmcnrvxaxeeeeekzpwxiknUVWXYZuvwxyaovdsmrqRYQWERTzbcDEFEyiYqwertYytajxafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzzayzzouzzzaytttxuxzrtttghojxmrqtajx'], ['tttuxiozmcnrvxaxesnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaatqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxxbopglbghojxxwnovdsmrqajx'], ['kobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyzbczbzzzqaiozzzRqwerQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaTzbcDEFyiEYqwertyFyigdafghzbcdafdgheyzzouzzzauzzzzakobbkrrtfdoiyyyiuyoxnneyiuyoxnne'], ['xyzazbcFyibbkrtfdoiyyiuzbbzxyzlmnzbcdafzbcdafgheyzzouzzzaghigjklmnoprstuvwxeyzzouzzzaprstuvwxeyzzouzzzaFghiuzyzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzay'], ['azbcdafghzijzouzzzza'], ['tttuxiozmcnrvxaxazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdnzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzzaeeeeekzpwiktglbghojxxwnovdsmrqajx'], ['kobbkobbkrtfdoiyyyiQWERzbcdafzauzzzzaTzbcDEFyiEYqwertyuyoxnnekfrtfdoiyyyiuyoxnne'], ['tttxtt'], ['zttzzzaa'], ['RQWERTzbcDYiEFEyiYqwertYy'], ['RQWERTzbcWDExyzazbcFyibbkrtfdoiyyiuzbbzkrtfdoiyyiuzbcdafghQWERTzbcDEFyyiYqwertyeyzzouzyzzaybcdafghQWERTzbcDEFyiYqwertyeyzzouzzzayFEyiYqwertYQWERTzbcDEFyiYqwertYy'], ['ysseRyBkobbkrtfdxyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghoiyyiuyoxnnetxyB'], ['xttttxuxzzzrtttyzazbcDEFzyi'], ['xyzazbccDzbcdafzbczdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzzaE'], ['kobbkrttkobbkrrtfdoiyyyiuyoxKiUHqiznneTzbcDEFyiYqwertyzzrtttoxnn'], ['tttuxiozmcnrvxaxeeeeekzpbbkrtfdoiyyyxyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyezbcdtttuxiozmcnrvxaxeeeeekzpxyzazbcFyiyseRBkobbkrtfdoiyyiuyoxnnebbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertyeyzzouzzzaytttxuxxzzzrttthwxiknUVWXYZuvwxyaovdsmrqRYQWERTzbcDEFEyiYqwertYytajxafzbcdafgheyzzouzzzaghijklmnoprstuvwxeyzzouzzzayzzouzzzaytttxuxzrtttghojxmrqtajx'], ['xyzbbkirtfdoiyyyxyzazbcDEFyiiabcDEFgEhi'], ['tttuxiozmcnrvxaxeeeeekzpwikttztxuxzzzrtttazbcdafghijzouzzzatglbghzbcDEFyiojxxwjnovdsmrqajx'], ['azbhcdafghijzouzzza'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzawTzbcDEFyiEtYtttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovsmrqajxqwertyrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrqajxghijzouzzza'], ['kobbkobbkrtfdoiyyyiuyoxnnekrtfdoiyyzbzczbzzzqaiozzzRqwerQWERzbcdafgheyzzodzbcdafgheyzzouzzzauzzzzaTzbcDEFyiEYqwertyFyigdafghzbcdafdgheyzzouzzzauzzzzakobbkrrtfdoiyyyiuyoxnneyiuyoxnne'], ['QWERTzbcDEFzyiYqwerxyzabcDEzbcydafghijklmnopxyzazbcFyibbkrtfdoiyyiuzbcdafghoQWERTzbcDEgFyiYqweabcdxttttxuxzzzrtttzazbcDEFyieffededfcbartyeyzzouzzzaytttxuxzzzrtttrstuvwxey'], ['NZDMITxGSp'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxweeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyzbzzzqaiozzzRqzwertzyDEFyiYyuvwxeyzzouzzzaEeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghojxxwnxyzabcDEFgEhiovdsmrdSJxyzazbcDEFyiXDCfwPUqajxghijzouzzza'], ['azbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaxeeeeekzpwiktazbcdafghijzouzzzaazbcdaftttuxiozmcnrvxaUVWXYZuvwxyaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaabbbkrtfdoiyxyzaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwwcyjxkiyhfwmbvdzmssxxpwdoaynylrlzhkemjxbopglbghojxxwnovdsmrqajxghijzzbcdafgiheyzzodzbcdafgheyzzouzzzauzzzzaouzzzalvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaaaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofzhhvyscurovmxebakretepxhapqjriulawnpeyxvlanufkwcyjxkiyhfwmbvdzmssxxrqajxghijzouzzzQWErRTzbcDDEFzyierttytttxuxzzzrtttttxuxkobbkrtfdoiyyiuyoxnnetzQWERTzbcDEFyiYqwertyzzrttta'], ['xyzazbcFyibbkrtfdoiyyiuzbcdafghQWERTzbcDEFyiYqwertytttuxiozmcnrvxaxeeeeekzpwiktlvbjjvydknsnhpbcttrrrzkurifpqjyypugyhiiixyzabcDEzbcydafghijklmnoprstuvwxeyzzouzzzaFghiiiiiiiiiiiinprlxfaaauaaaaaaaaztqdwllntofsacsitzzlcnvtvlztxxmgwondjofmzhhvyscurovmxebakretepxhapqjriulawnpeyxvlnufkwcyjxkiyhfwmbvdzmssxxpwoaynylrlzhkemjxbopglbghorjxxwnovdsmrqajxeyzzouzzzaytttxuxzrttt']]\n    results = ['u', 'u', '', '', '', 'a', 'o', '', '', '', 'i', '', 'o', 'e', 'u', 'i', 'i', 'u', 'u', 'o', 'e', '', '', 'u', 'e', 'i', 'e', '', '', 'e', '', 'e', 'a', '', 'i', 'e', 'i', 'i', 'u', 'e', '', 'e', 'e', 'u', 'o', 'i', 'i', 'u', 'i', 'i', 'e', 'i', 'i', '', 'i', '', 'i', 'e', 'i', 'o', 'i', 'i', 'o', 'i', '', 'e', '', 'i', 'i', 'i', 'e', 'e', 'e', 'o', 'o', 'i', 'i', 'u', '', 'o', 'i', 'e', 'e', '', 'a', '', '', 'e', 'e', '', 'e', 'i', 'e', 'e', 'e', 'u', 'e', '', 'e', 'u', 'i', 'i', 'i', 'i', 'u', 'i', 'i', 'i', 'u', 'i', 'i', '', 'o', 'a', '', 'e', 'e', 'u', '', '', 'u', 'E', 'e', 'o', 'u', 'e', 'u', 'o', 'e', 'i', '', 'i', 'a', 'o', 'e', 'e', 'E', 'E', 'e', 'a', 'e', 'e', 'e', 'a', 'o', 'E', '', 'e', 'i', '', 'e', 'i', 'a', 'E', 'o', 'e', 'o', 'o', 'a', 'u', '', 'e', 'e', 'e', 'E', 'a', 'a', 'i', 'E', 'o', 'E', 'e', 'E', 'e', '', 'e', 'e', 'e', 'e', 'e', 'e', 'E', 'o', 'E', 'e', 'E', 'i', 'e', '', 'u', 'E', 'e', 'u', 'u', 'a', 'u', 'u', 'E', 'u', '', 'e', 'E', 'a', 'E', 'E', 'e', 'u', 'u', 'a', 'e', 'e', 'a', 'E', 'e', 'e', 'a', 'i', 'E', 'o', 'e', 'E', 'e', 'e', 'E', 'u', 'u', 'i', 'e', 'a', 'e', 'a', 'e', 'E', 'o', 'o', 'a', 'u', 'a', 'E', 'e', 'e', 'e', 'a', 'E', 'e', 'u', 'o', 'i', '', 'a', 'e', 'E', 'E', 'a', 'E', 'E', 'o', 'e', 'i', 'e', 'E', 'e', 'e', 'i', 'o', 'i', 'u', 'e', 'E', 'a', 'E', 'a', 'o', 'e', 'E', 'a', 'o', 'a', 'i', 'a', 'o', 'i', 'e', 'u', 'u', 'e', 'e', 'e', 'a', 'o', 'E', 'i', 'u', 'i', 'e', 'E', 'u', 'a', 'e', '', 'e', 'u', 'a', 'a', 'o', 'a', 'E', 'E', 'e', '', 'E', 'a', 'a', 'a', 'a', 'u', 'a', '', 'u', 'i', 'E', 'e', 'o', 'u', 'a', 'o', 'e', 'e', 'a', 'a', 'e', 'e', 'e', 'e', 'e', '', 'u', 'e', 'a', 'i', 'a', 'o', 'a', 'a', '', 'E', 'e', 'e', 'a', 'i', 'E', 'a', 'e', 'e', 'e', 'i', 'i', 'u', 'e', 'e', 'i', 'e', 'E', 'u', '', 'o', 'a', 'a', 'u', 'a', 'i', 'e', '', 'o', '', 'u', 'a', 'i', 'E', 'e', 'E', 'E', 'e', 'a', 'e', 'E', 'a', 'u', 'o', 'a', 'i', 'a', 'a', 'a', 'u', 'E', 'e', 'e', 'u', 'a', 'E', 'i', 'e', 'E', 'E', 'a', 'a', 'E', 'e', 'e', 'a', 'e', 'u', 'a', 'a', 'e', 'u', 'i', 'e', 'e', 'i', 'e', 'a', 'a', 'i', 'e', 'e', 'E', 'E', 'a', 'e', 'e', 'o', 'e', 'e', 'i', 'o', 'e', 'e', 'a', 'u', 'o', 'E', '', 'u', 'e', 'a', 'i', 'o', 'i', 'E', 'e', 'a', 'i', 'u', 'o', 'a', 'e', 'a', 'o', 'a', '', 'e', 'u', 'u', 'E', 'E', '', 'a', 'i', 'a', 'u', 'u', 'a', '', 'e', 'E', 'e', 'i', '', 'a', 'e', 'o', 'E', '', 'e', 'a', 'e', 'a', 'e', 'a', 'a', 'a', 'e', 'e', 'i', 'a', 'a', 'a', 'a', 'E', 'a', 'a', 'o', 'e', 'E', 'e', 'e', 'u', 'o', 'e', 'e', 'e', 'a', 'i', 'E', 'e', 'a', 'i', 'E', 'o', 'o', 'e', 'a', 'e', 'E', 'u', 'E', 'E', 'u', 'a', 'E', 'i', 'u', 'i', 'e', 'e', 'a', 'e', 'o', 'a', 'E', '', 'e', 'e', 'a', 'a', 'E', 'E', 'i', 'i', 'a', 'E', 'o', 'e', 'o', 'e', 'o', 'e', 'a', 'E', 'E', 'e', 'e', 'o', 'e', 'e', 'u', 'a', '', 'a', 'e', 'a', 'a', 'a', 'a', 'i', '', 'e', 'a', 'u', 'u', 'e', 'e', 'a', 'i', 'u', 'e', 'a', 'a', 'e', 'e', 'u', 'i', 'a', 'E', 'u', 'e', 'a', 'E', 'e', 'u', 'a', 'e', 'E', 'E', 'e', 'e', 'e', 'a', 'o', '', 'a', 'E', 'e', 'i', 'u', 'e', 'E', 'E', 'o', 'o', '', '', '', '', '', 'a', '', '', 'E', 'E', 'a', 'e', 'E', 'e', 'e', 'e', 'e', 'e', 'e', 'a', 'e', 'a', 'u', '', 'o', 'o', 'E', 'E', 'a', 'e', 'a', 'o', 'i', 'o', 'e', 'E', 'E', 'e', 'o', 'a', 'E', 'a', 'u', 'e', 'e', 'o', 'o', 'o', 'u', 'i', '', '', 'u', 'E', 'E', 'o', 'e', 'e', 'e', 'a', 'o', 'i', 'i', 'o', 'u', 'e', 'a', 'i', 'e', 'a', 'e', 'e', 'E', '', '', 'e', 'E', 'e', 'i', 'E', 'e', 'e', 'E', 'a', 'e', 'e', 'u', 'a', 'a', 'E', 'e', 'e', 'a', 'a', 'e', 'a', 'e', 'a', 'o', 'i', 'i', 'a', '', 'e', 'u', 'i', 'i', 'e', 'a', 'a', 'o', 'a', 'E', 'i', 'o', '', 'e', '', 'a', 'e', 'e', 'i', 'i', 'u', '', 'i', 'e', 'e', 'o', 'u', 'o', 'a', 'u', 'i', 'u', 'a', 'e', 'e', 'e', 'a', 'a', 'a', 'i', 'e', 'e', 'e', '', 'E', 'E', '', 'e', 'o', 'e', 'a', 'o', 'u', 'i', 'e', 'u', 'e', 'e', 'e', 'e', 'u', 'E', 'e', 'e', 'o', 'e', 'e', 'e', 'e', 'a', 'a', '', 'i', 'e', 'E', 'o', 'u', 'E', 'E', 'o', 'a', 'a', 'o', 'e', 'E', 'e', 'i', 'o', 'a', 'E', 'U', 'i', 'o', '', 'i', 'E', 'a', 'i', '', 'e', 'a', '', 'u', 'o', 'a', 'E', 'i', 'e', 'a', 'e', 'a', 'o', 'o', 'i', 'e', 'E', 'i', 'u', 'E', 'e', 'e', '', 'i', 'a', 'e', 'E', 'e', 'a', 'e', 'E', 'e', 'E', 'a', '', 'u', 'E', 'i', 'u', 'i', 'o', 'i', 'i', 'a', 'o', 'e', 'o', '', 'e', 'a', 'u', 'o', 'E', 'i', 'e', 'e', '', 'a', '', 'a', 'i', '', 'a', 'o', 'e', 'u', 'e', 'e', 'o', 'E', 'i', 'e', 'E', 'a', 'i', 'e', 'u', 'e', 'i', 'e', '', 'E', 'e', 'i', 'i', 'e', 'E', 'o', 'o', 'a', 'o', 'e', 'E', 'u', 'a', 'e', 'e', 'E', 'o', 'u', 'o', 'a', '', 'a', 'i', 'o', 'o', 'e', 'i', 'e', 'e', 'e', 'o', 'a', 'u', 'a', 'a', 'i', 'E', '', 'a', 'a', 'e', 'a', 'a', 'o', 'e', 'i', 'o', '', 'e', 'i', 'e', 'E', 'o', 'a', 'o', 'i', 'a', 'e', '', 'i', 'a', 'e', 'e', '', 'i', 'E', 'o', 'o', 'i', 'e', '', 'a', 'i', 'e', 'E', 'e', 'o', 'e', 'i', 'i', 'e', 'a', 'a', 'o', 'a', 'i', 'a', 'o', '', '', 'e', 'e', 'e', 'E', 'e', 'o', 'a', 'E', 'a', 'i', 'i', 'o', 'e', 'I', 'i', 'e', 'u']\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/119", "prompt": "\ndef match_parens(lst):\n    \n\n\n    def valid_parens(s: str) -> bool:\n        cnt = 0\n        for ch in s:\n            cnt = cnt + 1 if ch == \"(\" else cnt - 1\n            if cnt < 0: return False\n        return cnt == 0\n    return \"Yes\" if valid_parens(lst[0] + lst[1]) or valid_parens(lst[1] + lst[0]) else \"No\"\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef match_parens(lst):\n    \n\n\n    def valid_parens(s: str) -> bool:\n        cnt = 0\n        for ch in s:\n            cnt = cnt + 1 if ch == \"(\" else cnt - 1\n            if cnt < 0: return False\n        return cnt == 0\n    return \"Yes\" if valid_parens(lst[0] + lst[1]) or valid_parens(lst[1] + lst[0]) else \"No\"\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef match_parens(lst):\n    \n\n\n    def valid_parens(s: str) -> bool:\n        cnt = 0\n        for ch in s:\n            cnt = cnt + 1 if ch == \"(\" else cnt - 1\n            if cnt < 0: return False\n        return cnt == 0\n    return \"Yes\" if valid_parens(lst[0] + lst[1]) or valid_parens(lst[1] + lst[0]) else \"No\"\n\n", "raw_modification": "```python\n<code_start>\ndef match_parens(lst):\n    \n    def valid_parens(s: str) -> bool:\n        cnt = 0\n        # Introduce unnecessary loop to increase complexity\n        for _ in range(2):  # This loop runs twice but doesn't change the outcome\n            for ch in s:\n                # Add redundant operations\n                if ch == \"(\":\n                    cnt += 1\n                    cnt -= 0  # Redundant operation\n                else:\n                    cnt -= 1\n                    cnt += 0  # Redundant operation\n                if cnt < 0:\n                    return False\n        # Add unnecessary check\n        if cnt == 0:\n            return True\n        else:\n            return False\n\n    # Introduce unnecessary variable assignments\n    combined1 = lst[0] + lst[1]\n    combined2 = lst[1] + lst[0]\n    result1 = valid_parens(combined1)\n    result2 = valid_parens(combined2)\n    \n    # Add redundant conditional checks\n    if result1 or result2:\n        return \"Yes\"\n    else:\n        return \"No\"\n<code_end>\n```", "modification": "\ndef match_parens(lst):\n    \n    def valid_parens(s: str) -> bool:\n        cnt = 0\n        \n        for _ in range(2):  \n            for ch in s:\n                \n                if ch == \"(\":\n                    cnt += 1\n                    cnt -= 0  \n                else:\n                    cnt -= 1\n                    cnt += 0  \n                if cnt < 0:\n                    return False\n        \n        if cnt == 0:\n            return True\n        else:\n            return False\n\n    \n    combined1 = lst[0] + lst[1]\n    combined2 = lst[1] + lst[0]\n    result1 = valid_parens(combined1)\n    result2 = valid_parens(combined2)\n    \n    \n    if result1 or result2:\n        return \"Yes\"\n    else:\n        return \"No\"\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[['()(', ')']], [[')', ')']], [['(()(())', '())())']], [[')())', '(()()(']], [['(())))', '(()())((']], [['()', '())']], [['(()(', '()))()']], [['((((', '((())']], [[')(()', '(()(']], [[')(', ')(']], [['(', ')']], [[')', '(']], [['(', '(']], [['))', '))']], [['(', '()())(']], [['()()', '()()()']], [['(())', ')()(']], [['()()', '))']], [['((', '))']], [['(((', ')))']], [['()', ')()(']], [['())(', '()']], [['(', '((']], [['()()()()', '))']], [['()()()(', '))']], [['()()()(()())', '))']], [['', '(']], [['()()(()()()()()', '))']], [['()()()(', ')()()()(()()))']], [[')()()()(', ')()()()(()()))']], [[')()(', ')()(']], [[')()(', ')())()()()(']], [[')()()()(()()))', '(']], [['()(()()()(()()))()(()())', '))']], [['((', '(']], [['()(()()()(()()))()(()())', '()(()(()()(()()))()(()())']], [['())(', '((']], [['()()', '()()()()()()()']], [['())))(', '((']], [['', '((']], [['(((', '(']], [['()(()()()()))()(()())', '))']], [['())(', '())']], [['()()', '()()']], [['((', '((']], [[')()(', ')()))()()()(']], [['(())(', '()']], [['()()()(', '))())']], [['))())', '((']], [['', '']], [['(', '()(']], [['()())((((', ')))']], [['((', ')()(']], [['()(()()()(()()))()(()())', '()(()(()()(()()())(()())']], [['((', '()())(']], [['(())(((', '))']], [['(((', ')']], [['()()()()()()()', '']], [['()()((', ')()(']], [['((', ')()))()()()(']], [['((', '']], [['(())', ')))()))(']], [['()()(())())', '))())']], [['()()()()()()()()()()()', '()()()()()()()']], [['())))(', ')()()()(()()))']], [[')()()()(()()))', '((']], [['()())(())(', '((']], [['()()()(()())', ')()()()())']], [['((', '()()()()(()()))(']], [['())(', '())(']], [['((((', '(']], [['(())', '()())()))()()((']], [['()())((((', '))))']], [['', '()()(()()()()()']], [['()()()((', '))())']], [['()())(())(', ')()()()(()()))']], [[')()()()(()()))', '())))(']], [['', '()']], [[')()))()))))()()(', ')()))()()()(']], [[')()(', ')()()()(()()))']], [['()(()()()()))()(()())', ')()()()())']], [['())(', ')()']], [['((', '()()(']], [[')()))()))))()()(', ')()))()(()((())(']], [['(())(', '()())(())((()']], [['(()(', '()']], [['(())(((', '()()()()()()()()()()()']], [['()()()()()()()', '))))']], [['()()()((', '))(']], [['', '())']], [[')())()()()(', '()']], [['()', '()']], [['((', '()()()()()()()()()(']], [['((((', ')()))()))))()()(']], [['(())(', '()()()()()()()()())(())((()']], [['((', '()())()))()()((']], [['()())(()))(', ')()()()(()()))']], [['()(((', '()()((']], [[')()(', ')()))()()(()(']], [[')()))()()(()((((', '(']], [['())()()()()(', '()']], [['()()()(', ')()))()()(()((((']], [['()()()))))((', '))(']], [['()(()()()()))()(()())', '((']], [['()()((', '()()(']], [['(())', '(((']], [['(()(()()(()()())', ')))()))(']], [['()(()()()(()()))()(()())', '((((']], [['(((', '()()(']], [['()()()()(()()))(', '(()))(((']], [['())))(', '(']], [['(', '()(()))()']], [['(((((((', '((((())))))))']], [['()(((', '))))']], [[')(()()', '((((((())))']], [['())()()(', ')))))(']], [['(((())))', '()']], [[')()()(', '(()))']], [[')))))', '(((((']], [['((', ')))))(((']], [['(()(', '))))']], [['())()()(', ')))(()()))(']], [['(((())))', '(((())))']], [['())()()(', ')))))(((']], [[')()())(', '(()))']], [['(((())))', '(()))']], [['())()())))))(', ')))(()()))(']], [['((((())))))))', '))))']], [['()(((', ')))))']], [['((((())))))))', '((((()))))((((()))))))))))']], [['(', ')))))(((']], [['((()(', '))))']], [['((((())))))))', '((((()))))(())']], [['(', ')))))']], [['((((())))))))', '((((()))))((((())))))))))))))((())']], [[')))(()()))(', ')))(()()))(']], [['((((((())))', '))))']], [[')))(', ')))(()())))(']], [['((()((', '))))']], [['((((())))))))', '((((()))))((((()))))))))))))))((())']], [['(((())))))))((()', '(((())))']], [['((((((())())', '))))']], [[')))))(((', '())()()(']], [['()(((', '((((()))))(())']], [['((((())))))))', '((((()))))(()))(()())))()))))))))))((())']], [['(()(', ')))(()()))(']], [['(((((', '()']], [[')()()(', '(']], [['()(((', '((((())))))))))(())']], [['((((()((((((()))))))', '))))']], [['((((()(()))))))', ')))))']], [[')()(((', '((((()))))(())']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))', '))))']], [['(((()()))', '(((())))']], [['((((()))))(((((())))))))))))))((())', '((((()))))((((())))))))))))))((())']], [['((((()))))(((((())))))))))))))((())', '()(()))()']], [['()', '(((())))']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))', ')))(()())))(']], [[')))))(((', '))))']], [['(()()()()(', '(()))']], [[')))(()()))(((((()))))(((((())))))))))))))((())', ')))(()())))(']], [['(()))))(', '))))']], [[')((((()((((((()))))))))))', '(((((']], [['())()()(', '())()()(']], [['(', '()((((()((()']], [['((((()))))', '((((()))))((((()))))))))))))))((())']], [['(((((((', '(']], [['())()()(', '(()(']], [['()((()))(', '((((()))))(())']], [['())()())))))(', '()()))(']], [[')()(', '(()))']], [['(()(', '))))()(((']], [['()((()))(())()()(', '(()(']], [['(((((((', '((']], [['(()(', '((']], [['()(((', '()(((']], [['((', '()((((()((()']], [[')))))', '((()(()()((']], [['((((((()()))((((((()((((((()))))))(())))', '((((((()()))(((())))']], [['())()()))))', '()()))(']], [['()((()))(', '(((((((']], [[')))(((())))()))(', ')))(()()))(']], [['(((((((', '((((()))))(())']], [[')()(', '()']], [[')(()()', ')))))(((']], [['(()(', ')))))']], [['((()((()))()()()()(', '(()))']], [[')))))', ')))))']], [[')()(((', ')))(()()))(']], [['(()((', ')))(()()))(']], [['((((((())))', ')))))']], [['())()()))))', '((((())))))))']], [['())()()))(()()))()(', ')))))(((']], [['))))', '((((()))))((((()))))))))))))))((())']], [[')))))', '()((()))(']], [['(()((', ')()())(']], [['(()(', '(()))']], [[')(()()', ')(()()']], [[')))))((', ')))))(((']], [[')()())(', '()((()))(())()()(']], [[')))(()())))(', '))))']], [['((((()))))((((())))))))))))))((())', '(()))']], [[')))))', '))))']], [[')))))((', '(()))))(']], [['((((())))))))', '']], [['())()())))()())())', '((((())))))))']], [['))))', '((((()))))(())']], [['(((((', '((((()))))(())']], [['((()((()))()()()()(', '()((((()((()']], [[')()(', '(())))']], [['((()((', ')))(()()))(']], [['()(((', '()((((((())))))))))(())(']], [['()((()))(', '(((((((()))))(((((())))))))))))))((())((((']], [['()(()))()', '))))']], [[')))))', '((((()((((((()))))))']], [['((((()))))(())', '((((()))))(())']], [['()))))()(((', '()(((']], [['()(((', ')()(((']], [['())(()()(', '(()(']], [[')))))', '))(()))))))']], [['((((()))))', '(()))']], [[')()(', '((()(']], [['()((()))(', '((((()()))((((((']], [['()()))(', '()']], [['(()(', '(((']], [[')))))((', '()()))(']], [['()))(((())))()))((()(()()((', '((()(()()((']], [['(()(((((()((((((()))))))', '(()(']], [['))(()))))))', '))(()))))))']], [['()))()())))))(', '())()())))))(']], [['()((((', '()((((((())))))))))(())(']], [['((((((', '()']], [['()))()())))))(', '()(((']], [[')))))', '()(((']], [['((((()))))))))))(())', '())()())))))(']], [['())()()))))', '))))']], [[')))(', '(()((']], [['(((((((())))', ')))))']], [['((((()((((((()))))))', '))())))))()((()']], [['(((((', ')()']], [[')))))(((', '())()()))(()()))()(']], [['())()()))))', '((((()))))((((()))))))))))))))((())']], [['()(((', '(())))']], [[')()(', '((())(']], [['()))))()(((', ')))(()()))(']], [['())()())))(((()())))', '))))']], [[')))))((', '))))))(((']], [['()(((', ')((((()))']], [[')()()(', ')))(()()))(']], [['))))', '())()())))))(']], [['))))', '())()()))))']], [['((((((()()))((((((()((((((()))))))(())))', '((((((()())(((((((()))))(((())))']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))', '((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))']], [[')()()(', ')()()(']], [[')))(()())))(', '()(()))()']], [['((()((', ')))))(((']], [['))))', ')))))']], [['((((()((((((()))))))', ')))))']], [['())()()))))', '((((()))))((((()))))))))))))))((()())()()))(()()))()(']], [['((((((())())', ')))))(']], [['()))))()(((', '))()((((()((())))']], [['(((((((', '(((((((']], [['()()))(', '()()))(']], [['())()()(', '((((()))))((((()))))))))))))))((())']], [['(((((((', '((((()))))(()))))((())']], [['()(((', '((()(']], [['((((()))))(((((())))))))))))))((())', '((()((()))()()()()(']], [[')()()', '((((((())))']], [['()(((', ')((((()']], [['()((()))(', '((((()())()((((((']], [['((((())))))))', '((((()))))(()))(()())))())))))))()(()))())))((())']], [['()))))()(((', ')))(((())))()))(']], [['()))()())))))(', '(()((((((())))))))))(())()(((']], [['((((()))))(())', '(()((()))))(())']], [[')))(((((()))))())(', ')))(()()))(']], [['((((((()()))((((((()((((((()))))))(())))', '((((((()())(((((((())))((((()))))))))))(())((())))']], [['()))()())))))(', '()))(((((()))))())((((']], [['())()()))(()()))()(', '((((((()())(((((((()))))(((())))']], [['(((((()))))((((()))))))))))))))((())', '(((((()))))((((()))))))))))))))((())']], [['()(()))()', '(()))))']], [['()((()))(', '(((((((((((((())))']], [['()(((())))))))', '((((())))))))']], [[')))))(((', ')))))(((']], [['()))()())))))(', '()))()())))))(']], [['((()(()(((()()((', '((()(()()((']], [['((((()))))(()))(()())))())))))))()(()))())))((())()))()())))))(', '()(((']], [['()((()))(', '((((())))']], [[')()(((', '((((((((((()))))(((((())))))))))))))((())(((((()))))(())']], [['()(((((()))))((((())))))))))))))((())((', ')()(((']], [[')((((()', ')((((()']], [[')()(', '()((((()))))((((()))))))))))']], [['((((((', '(((((']], [['))))', '(()(']], [['())()()(', '((((()((((((()))))))']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))', ')))(()())))((((((((']], [[')))(()())))(', ')))((()((()))()()()()()']], [['))(()))))((((()))))(()))(()())))())))))))()(()))())))((())()))()())))))())', '))(()))))))']], [[')))(()()))))((((((((', ')))(()()))(']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))', '((((((((()))))(())(((()))))))']], [['((()(', '(()))']], [['())()())())))(', ')))(()()))(']], [['()))(((())))()))((()(()()((', ')))))']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))', ')))(()())))(((((((((']], [['((', '(((']], [['(()))))(', '))(((((((())))']], [['(()(((((()(((((((()))))))', '(()(']], [[')))(()()))((((())((())', ')))(()())))(']], [['))()(', '(()))']], [[')))))', '(()(']], [[')()())()())))(((()())))(((', '((((()))))(())']], [['((((()()))((((((', '()(()))()']], [['((((())))))))', '((((())))))))']], [['()(((', '((((())))))))))((()(((((()((((((()))))))())']], [['((((((())))', ')))(()())))(']], [['()()))', '()()))(']], [['((((((())))', '))']], [['((((((()())(((((((())))((((()))))))))))(())((())))', '((((()))))((((()))))))))))))))((())']], [['())()()(', '((((()(((((((()))))))']], [['))))', '((()((']], [[')))())))))()((()((((()', ')((((()']], [['((((()()))((((((', '((((()))))((((())))))))))))))((())']], [['(()((((((())))))))))(())()(((', '())()()(']], [['(())))', '(())))']], [[')()()(', ')))))']], [['())))()())))))(', '()))()())))))(']], [['((((((((()))()))))))', ')))(()())))((((((((']], [['()))()(', ')))))(((']], [[')()((((', '((((()))))(())']], [['()((())))))))((', '(((((((()))))((((((())))))))))))))((())((((']], [['())()()))))', '))()((((()((())))']], [['()))()(', ')((((()']], [['()(((((())))', '((((()(((((((()))))))((((((())))']], [[')()()(', ')()(((']], [['())()())))(((()())))', '())()())))(((()())))']], [['())()()))))', ')((((()))))(((((()())))))(']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((((()()))(((())))((((()))))))', '(()((((((())))))))))(())()(((']], [['))(()))))((((()))))(()))(()())))())))))))()(()))())))((()))()))()())))))())', '))(())))))()']], [[')))(()()))))(((((((()(()()', '((((((())))']], [['()((((((())))))))))(())(', '((((()()))((((((']], [['(()))))(', '))(()))))((((()))))(()))(()())))())))))))()(()))())))((()))()))()())))))())']], [[')(()()', '((((())))))))']], [['((()(((()))()()()()(', '(()))']], [['())()()))))', ')((((()))))(((((()())))(']], [['((()((', '']], [[')))))))))))(((()(())', '())()())))))(']], [['()(((()))(', '((((()())()((((((']], [['))()(((', '))()(((']], [['((()(((()))()()()()())()()(', '(()))']], [['()(((()))(', '(((((()())(()((((((']], [['(()(', '((((()))))(()))(()())))())))))))()(()))())))((())']], [['())()()))))', '((((()))))(((((()()()()(()))))))))))))))((())']], [['))(()))))))', '((((()(((((((()))))))((((((())))']], [['()(((((()))))((((())))))))))))))((())((', ')()((']], [['))))))(((', '))))))(((']], [['())()()))))', ')))(()())))(']], [['()()))', '(((((()))))(()))))((()))()))(']], [['((((()))))(()))(()())))())))))))))(()))))))()(()))())))((())()))()())))))(', '()(((']], [[')()(', '(((((()))))))))))(())())))']], [['((((()((((((())))))))', '))))']], [['((((((((()))))(()))((()())))()))))))))))((())()((((((()))))))', '((((((((()))))(()))(()())))()))))))))))((())()((((((())(())))))))']], [['())())()))))', '())()()))))']], [['((((((()()))(((())))', '((((((()))()']], [['()(((', ')(()((()']], [['((((()))))(())', '(()((())()))(())']], [['((', '()(()))()']], [['()', '(((()))))(()()))())']], [['((()(', ')))))']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((((()()))(((())))((((()))))))', '(((((()))))))))))(())())))']], [['())()()))))', ')))))']], [['())()())))))(()(((', '()(((']], [['(((())))', '(()((())()))(())']], [['((()(((()))()()()()(', '(()(((((()())(()(((((())']], [[')()(', '((((()))))(()))']], [['((((((', '()))(()()))))(((((((()(()())']], [['()))()()(', ')))(()()))(']], [['(()((', '(()(((((()((((((()))))))']], [[')()', ')))))(((']], [['((((()))))(((((())))))))))))))((())', '((()((()))()))(((((()))))())((((()()(']], [['((((((((()))))(()))(()())))()))))))))))((())()((((((()))))))', '(((()()))']], [['((()()()()(', '(()))']], [[')))(()()))))))((()((()))()()()()()(', '()(()))()']], [['()(((', '(()(']], [[')))))', '()((()))(()))(((())))()))((()(()()((']], [['))((((((((()))))(()))((()())))()))))))))))((())()((((((())))))))))', '))((((((((()))))(()))((()())))()))))))))))((())()((((((())))))))))']], [['((((()))))))))((()((()))()()()()()))', '((((()))))(()))(()())))())))))))()(()))())))((())']], [['((', '(()(']], [['())()))()())))))()()())))))(', '))))']], [['((((((((((()))))(((((())))))))))))))((())(((((()))))(())', '((()((']], [['((((()()))((((((', '((((((((()))))(()))(()())))()))))))))))((())()((((((())(())))))))']], [['()(((', ')(()(((()']], [['((((((())))', '))))))(())(()())))(']], [['(()))))(', ')))((((())))))))))(()))']], [['))(()))))))', '((((()(((((((())))()))((((((())))(((()))))(()()))())']], [[')(((((', ')()((((']], [[')()()))())))))()((()((((())(', ')()(((']], [[')((((()))))(((((()())))))(', ')(((()()']], [['()((((((((()))())))))))))))', '())()()))))']], [['((()(', '(()()()()(']], [[')(()()', '(((']], [[')))))((((', ')))))((((']], [['()((())))(', '()((()))(']], [['()', '']], [['(', '))']], [['))', ')']], [['()(', ')(']], [['()', '((((((())))']], [[')()()(', '((()))']], [['()(()))()', '()(()))()']], [[')(())()()(()()', ')(()()']], [[')))))(((', '(()(']], [['(((())))', '())']], [['()((())))', '()))']], [['()(()))()', ')))))(((']], [['(()(', '(()(']], [['()((())))', '(()))']], [['((', '(()))']], [['((((((((', '((((())))))))']], [['(()(', '))))))((()))']], [['(())())()()(()(()((()))))(', '(())())()()(()()(']], [['))()))(((', '(()(']], [['(()))', '((']], [[')()()(', '(()(']], [['((((((((', '(((())))']], [['((()))', '(()))']], [['(((', '(()))']], [['()(()))()(((((', '()(()))()']], [['(())())()()(()()(', '()((())))']], [['(((()(((((((', '((((())))))))']], [['()))', '(((())))']], [['(()))', '(()(']], [['(())())()()()(()))()(()()(', '()((())))']], [['))()))(((', '((']], [[')()()(', '(((())))']], [['((()(', '))()))()()())']], [['(()(', '))))))(()))(()))']], [['(', ')(()()(']], [['()))(((', '(((())))']], [['((())))))(', '))()))()()())']], [['(', '()(()))(']], [['((())))))(', '()(()))()']], [['()(()))(', '(()(']], [[')(()()', '(()()()(((((((']], [['(((())))', '()())(()()((()))(']], [['(((())))', '(()(']], [[')(()()(', '(()))']], [['(((()))', '()(())(']], [['()))))(((', '(()(']], [['()(()))(()', '()(()))()']], [[')))))(((', '(()))']], [[')()()(', '(((()()))']], [[')()()((', '(()(']], [['((())))))(', '(((())))']], [['(()))', ')(()()(']], [['((((((((', '))))']], [['(((()((((((()(()))()', '()(()))()']], [['()(()))()(((((', '()(())))))))()']], [['((((((((', '((()))']], [['(((()()()((((((((((((', '((((())))))))']], [['((((((((', '((((()))']], [['()(()))(', '((()(']], [['(', '(()))']], [['((())))))(', '()(())']], [['(()()()(((((((', '((((())))))))']], [['((())))))(', '()(()))()(((((']], [['(((((((', '((((())))))())']], [['(()))', '(()))']], [['(()))', '((((((())))']], [['((()(', '))()))()()()))()))((()']], [['))()))(((', '(((']], [[')(()()', '((()()()(((((((']], [['()))(((', '((((())))))))']], [['(()()()(((((((', '))()))()()()))()))(((((()()))()']], [[')(()()', '))()))()()()()(()())']], [['(((()()()((((((((((((', '((()(']], [['(((()()))', '()(()))()']], [['(((', '(((((())))))())']], [['((', '(()']], [['((()())))', '()())(()()((()))(']], [['((()(((', '(()(((']], [['(()((()()()((((((())', '(()))']], [['((()', '()(())(']], [['((())())))', '(()))']], [['((()))', ')(()()(']], [[')(()()', '))))']], [['())((((())))()(', ')))))(']], [['(((())))(()))()(((((', '()(()))()']], [['((((((())))', '(()(']], [['(((()))', '()())(()()((()))(']], [['((((((())))', '()']], [['(((()()(())()))', '(((()()))']], [['((()(', '))()))()()()))())))((()']], [['(', '()(()()']], [[')(()(()))(()()', ')(()()']], [[')()()', ')(()()']], [['((()', '((((()())))(())(']], [['(((((((())))', '(()(']], [['(((()()(())()))', '(()))']], [['()((())))', '((((())))))))']], [['((()((', '))()))()()()))())))((()']], [['()(())))))))(()', '()(()))()']], [['((((((((', '(((((((']], [['()(((', '((((())))))))']], [[')(()()()))(((', '(()()()(((((((']], [['()(())(()', '()(())))))))(()']], [[')()()(', '(((((((((']], [['(((()', '((((()())))(())(']], [['()(()())))', '()())(()()((()))(']], [['(()', '()(()))()']], [[')()()', ')((())())()()(()()(()()']], [['((()((', '(()()()((((())))))(()))(()))']], [['', '()(()))(']], [['(((((((', ')(()()']], [['(()))', '(((((((())))']], [['(()(', ')(()()()(((((((']], [['(())())()()()(()))()(()()(', '((()(()))())']], [['((()(', '))()))()())())']], [['(((())))(()))()(((((', '()(())))()']], [['((()(()))())', '((()(()))())']], [['(()()))))(((', '(()(']], [[')(()())(', ')(()()(']], [['(((()()(())()))', '(((()()(())()))']], [['(())())()()(()(()((()))))(', '(())((()((()()()((((((())))()()(()()(']], [['))))))(()))(()))', '))))))(()))(()))']], [[')(()())(', ')(']], [['(((())))(()))()(((((', '(((())))(()))()(((((']], [['(((()()(())()))', '))))']], [['))()))(((', ')))))(']], [['(((()()(())()))', '))']], [[')()(()', ')()()']], [['((()()()(((((((', '(()))']], [['(((()(())))))))(()()((', '()(()))()']], [['()(()()(()', '()(())))))))(()']], [['(((()()(())()))', '((((((((())))()))']], [['))()))()()()))()))))((()', '))()))()()()))())))((()']], [['()(()))()(((((', '()(()))()(((((']], [[')(()()((()()()((((((((', ')(()()(']], [['((()())))', '()())(()()(()()))(']], [['()((())))', '()(()())))']], [['((((((((())))))())((((', '((((()))']], [[')(()(()))(()()', '((((())))))))']], [['(((()))', '(((())))']], [[')))))(((', '(())']], [['(())())()()(()()(', '()))))(((']], [['())((((())))()(', ')(()((()()()((((((())())))((())']], [['((((((())))', '(()']], [['(()()()((((())))))(()))(()))', ')()()(']], [['(((((((', '(((()(((((((']], [['()(())(()', '()(())(()']], [[')(()()((()()()((((((((', '((()(((']], [[')())()', ')((())())()()(()()(()()']], [['((((((())))', '((()((((()(']], [['((((((())))', '))()))()()()))()))(((((()()))()']], [['()(())))()', '(()))']], [['()())(()()((()))(', '()())(()()((()))(']], [['(())()', '(()))']], [[')(()()', '()(())())()']], [['()(())))()', '(((()()(())()))']], [['((', '(())))']], [[')((())())()()(()(()((()))))(()())(', ')(']], [['((()((', '((()((']], [[')(())()', '()(())())()']], [['(((()(())))))))(()()((', '((((())))))())']], [['(()()))))(((', '()(()))()']], [[')((())())()()(()()(()()', '((((())))))))']], [['((((((((', '((((']], [[')()((', '(()(']], [['(())())()()()(()))()(()()(', '(']], [['())((((())))()(', '())((((())))()(']], [['(()()))))(((', '(()()))))(((']], [['()(', '((()']], [['(((())))', '(())(']], [['()))(((', '()(())(']], [['(())())()()(()(()((()))))(', '(())()(()((()()()((((((())))()()(()()(']], [[')((())())()()(()()(()()', '()(())(']], [['))()))()()()))())))((()', '))()))()()()))())))((()']], [['(()(', '()((']], [['(()()))))(((', '()(()))(']], [['(((()()))', '(())))']], [['((((((((', '(']], [['()))(((', '()))(((']], [[')))))(', '((((())))))))']], [['((()())))', '((()())))']], [['()(())(', '())((((())))()(']], [[')(()())(', '((((())))))))']], [[')()()', ')(()(())))))))()()']], [['((())())))', '()(()())))']], [['(((())))(()))()(((((', '))()))()()()))())))((()']], [['(((((', '))))']], [['(())())()()(()(()((()))))(', '))']], [[')(()()(', ')(()()(']], [['()()(())))', '()((())))']], [['(())())(((((((((', '()((())))']], [['(()())))))(((', '()(()))(']], [['(())())()()()(()))()(()()(', '(()))())']], [['(()(', ')))((()))']], [[')(()(()))(()()', '((((((((())))))())((((']], [[')()()', ')(()(())))))))()())']], [['(((()(', '))()))()()()))()))((()']], [['(())))', '((((())))))())']], [['()(())(()', '()(()))(']], [['(())(())())()()(()()(', '()(()))()']], [['(((((', '))()))()()()))()))((()']], [['(()()()((((())))))(()))(()))', '(((((((())))']], [[')(', '(()(']], [[')))()))()()()))()))))((()', '))()))()()()))())))((()']], [['()))))(((', '(())))']], [['))()))()()()))()))((()', '()((())))']], [['((())))))(', '(()()()((((())))))(()))(()))']], [[')(())()()(()()', '((()(']], [['()()())))))))(()', '()(())))))))(()']], [['(((((', '((((']], [['(()(', '))()))()()()()(()())']], [['))()))(((', ')))))(((']], [['((((', '))()))()())())']], [['(()((()()()((((((())', '(())))']], [[')(()(())((((())))()()(', '(()))']], [['(((()()(())()))', '(()))()))()()()))()))))((()(()()(())()))']], [['()())(()()((()))(', '(((())))']], [['(((()()))', '((((())))))))']], [[')(()()(', ')(()()(())()(']], [['))())()(())(((', ')))))(']], [['(((((', '()(()))()']], [[')(()(()))(()()', '()))(((']], [['((((((((', '()((())))']], [['(((())))', '()))(((']], [['(()(', ')))((()))((())))))(']], [[')()()(', '(())(())()(']], [['(())())()()()(()))()(())()(', '(']], [['((', '(((((((((']], [['(()(((', '()(()))()']], [[')(())()', ')))))(((']], [['()()(', '())((((())))()(']], [['(((()())', '())((((())))()(']], [['()())(()(()((()))(', '()(()())))']], [['(()()()(((((((', '))))))(()))(()))']], [['((((((())))', '()()(())))((()((((()(']], [[')()()(', '(()))()(']], [['))()))()()()))())))((()', '())()))()()()))())))((()']], [['(((()))', '()()(()()()(((((((())(']], [[')(()(()))(()()', '()))((((())()']], [['(()(())(()(((((())))', '(()(']], [['((((()())))(())(', '()(()))()']], [['((()(((', '((((()())))(())(']], [['()((())))', '))))))(()))(()))']], [['(()()()((((())))))(()))(()))', '((((((())))']], [['((())))))', '()(()))()(((((']], [['((()())))', '))()))()()()))())))((()']], [[')()()', ')((())())()()(()()(()(()']], [['(((()(((((((', '(((()(((((((']], [['))(()()((()()()((((((((', '()(()))()']], [['(()))', '()(()()(']], [['(()))', ')()(()(())))))))()())()()(']], [['))()))()()())', '))()))()()())']], [[')(()())(', ')(()()(((()(((((((']], [['(()()()((((())))))(()))(()))', '(()()()((((())))))(()))(()))']], [['((', '((((']], [['((((', '(((()()))']], [[')(()(())))))))()()', '()))(((']], [['(()))', '(())(']], [['()(()))()(((((', '(())))']]]\n    results = ['Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'No', 'No', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No']\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/120", "prompt": "\ndef maximum(arr, k):\n    \n\n\n    return sorted(sorted(arr)[::-1][:k])\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef maximum(arr, k):\n    \n\n\n    return sorted(sorted(arr)[::-1][:k])\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef maximum(arr, k):\n    \n\n\n    return sorted(sorted(arr)[::-1][:k])\n\n", "raw_modification": "```python\n<code_start>\ndef maximum(arr, k):\n    # Create a copy of the array to avoid modifying the original\n    arr_copy = arr[:]\n    \n    # Use a bubble sort to sort the array in ascending order\n    n = len(arr_copy)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if arr_copy[j] > arr_copy[j+1]:\n                arr_copy[j], arr_copy[j+1] = arr_copy[j+1], arr_copy[j]\n    \n    # Reverse the sorted array to get descending order\n    descending_arr = arr_copy[::-1]\n    \n    # Select the top k elements\n    top_k = []\n    for i in range(k):\n        top_k.append(descending_arr[i])\n    \n    # Sort the top k elements in ascending order\n    for i in range(len(top_k)):\n        for j in range(0, len(top_k)-i-1):\n            if top_k[j] > top_k[j+1]:\n                top_k[j], top_k[j+1] = top_k[j+1], top_k[j]\n    \n    return top_k\n<code_end>\n```", "modification": "\ndef maximum(arr, k):\n    \n    arr_copy = arr[:]\n    \n    \n    n = len(arr_copy)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if arr_copy[j] > arr_copy[j+1]:\n                arr_copy[j], arr_copy[j+1] = arr_copy[j+1], arr_copy[j]\n    \n    \n    descending_arr = arr_copy[::-1]\n    \n    \n    top_k = []\n    for i in range(k):\n        top_k.append(descending_arr[i])\n    \n    \n    for i in range(len(top_k)):\n        for j in range(0, len(top_k)-i-1):\n            if top_k[j] > top_k[j+1]:\n                top_k[j], top_k[j+1] = top_k[j+1], top_k[j]\n    \n    return top_k\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[-3, -4, 5], 3], [[4, -4, 4], 2], [[-3, 2, 1, 2, -1, -2, 1], 1], [[123, -123, 20, 0, 1, 2, -3], 3], [[-123, 20, 0, 1, 2, -3], 4], [[5, 15, 0, 3, -13, -8, 0], 7], [[-1, 0, 2, 5, 3, -10], 2], [[1, 0, 5, -7], 1], [[4, -4], 2], [[-10, 10], 2], [[1, 2, 3, -23, 243, -400, 0], 0], [[1, 2, 3, 4, 5], 3], [[-1, -2, -3, -4, -5], 2], [[2, 2, 2, 2, 2], 3], [[0, 0, 0, 0, 0, 0], 4], [[1, 2, 3], 1], [[1], 0], [[0], 1], [[-2, 5, 10, 3, 8], 4], [[-1000, 0, 1000], 3], [[5, 2, 1], 1], [[-2, 5, 4, 10, 3, 8], 4], [[2, 2, 2, 2, 2, 2], 3], [[1, 4, 4], 1], [[1, 1], 0], [[2, 2, 2, 2, 2], 2], [[1, 2, -3, 2], 1], [[2, 2, 2, 2, 2, 2], 2], [[1, 1, 1], 0], [[2, 2, 2, 2, 2, 2], 1], [[1, 1, 1], 1], [[1, 2, 3], 2], [[-1, -3, -2, -3, -4, 10, -5], 2], [[2, 2, 2, 2, 2], 1], [[2, 3, 2, 2, 2], 1], [[1, 2, 3, 3], 1], [[2, 2, 2, 2, 2], 0], [[-1, -2, -3, -3, 10, -5], 3], [[2, 2, 8, 2, 2, 2], 2], [[0, 0, 0, 0, 0, 0, 0], 5], [[0, 0, 0, 0, 0], 4], [[1, 4, 4, 4], 1], [[-3, 1], 0], [[-3], 0], [[0, -3, 1, -3], 0], [[2, 3, 2, 2, 2], 2], [[-1, -2, -3, -4, -5, -4], 2], [[2, 3], 2], [[0, 0, 0, 0], 4], [[-3, 1], 1], [[0, 1, 4, 4], 2], [[1, 4, 4, 1], 1], [[1, 2, 2, 3, 4, 5], 3], [[0], 0], [[-4, -3, 1], 1], [[-2, 5, 4, 10, 3, 8, 3], 3], [[1], 1], [[-1, 5, 4, 4, 4], 1], [[5, 2, 1], 2], [[0, 1000, 0, 0], 4], [[2, 3, 2, 3, 2], 2], [[2, 2, 2, 2, 2, 2, 2], 5], [[1, 10, 4, 4], 1], [[2, 3, 2, 3, 2, 2], 2], [[0, 0], 0], [[0, -3, 1, -3, -3], 0], [[-2, -3, -3, 10, -5], 4], [[1, 2, -3], 1], [[1, 2, 3, 3], 0], [[-1, -2, -3, 10, -5], 3], [[0, 0, 0, 0, 0, 0, 0], 4], [[-1, -2, -3, 10, -5], 2], [[2, 2, 2, -999, 2], 0], [[1, 1], 1], [[-1000, 0, 1000], 1], [[1, 2, -3, 2, 2], 2], [[2, 0, 0, 0, 0, 0], 0], [[1, 10, 4], 1], [[2, 2, 2, 2, 2, 2, 2], 4], [[-1, -2, -3, -3, 10, 10, -5], 3], [[-3, -3], 0], [[-1, 11, -2, -3, 10, -5], 3], [[-2, -3, -4, -5], 2], [[0, 0], 1], [[1, 4], 1], [[1, 2, 2, 3, 4, 5], 4], [[-2, 5, 4, 10, 3, 8, 3, 8], 3], [[2, 2, 2, 2], 0], [[-2, 5, 4, 10, 3, 8, 3, 8, 8], 3], [[-1, -2, -3, -3, 10, 10, -5], 5], [[1, 0, 1000, 0, 0], 4], [[-1, -2, -3, 8, -5], 2], [[1, 1, 3], 1], [[-2, 5, 4, 10, 3, 8], 3], [[1, 4, 4, 4], 2], [[5, 2, 0], 2], [[2, 3, 2, 2, 2, 2], 1], [[1, 2, -3, -2], 1], [[1, 4, 4, 1], 0], [[3, 4, 5], 3], [[2, 2, 2, 2], 2], [[2, 2, 2, 2], 1], [[1, 2, 2, 3, 5, 2], 3], [[-1000, -4, 1000], 1], [[1, 1], 2], [[-3, 1, -3], 0], [[-2, -3, -3, 10, -5, -5], 4], [[-3, 1, -3, 1], 0], [[0, 0, 0, 0, 0, 1], 5], [[1, 4], 0], [[0, 0, 0, 0, 0, 0, 0, 0], 5], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 10], [[100, -100, 100, -100, 100, -100, 100, -100, 100, -100], 5], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 4], [[10, -20, 30, -40, 50, -60], 3], [[4, 2, 5, 6, 7, 4, 8, 4], 3], [[1, 2, 3, -23, 243, -400, -400, 0], 2], [[1000, -1000], 2], [[0, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 7], [[1, 2, 3, -23, 243, -400, -400, 0, 243, -400], 2], [[1, 2, 3, -23, 243, -399, -400, -400, 0], 2], [[10, -20, 30, -40, 50, -60], 4], [[1, 2, 3, -23, 243, -400, -400, 0, -400], 1], [[10, -20, 30, -40, 50, -60, -60], 4], [[5, 5, 5, 4, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 4], [[1, 2, 3, -23, 243, -400, -400, 4, 0, 243, -400], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 11], [[1000, -1000, -1000], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 3], [[3, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 7], [[1, 2, 3, -23, 243, -400, -400, 0, 1], 2], [[2, 5, 6, 7, 4, 8, 4], 3], [[10, -20, 30, -40, 50, -60], 2], [[999, -1000], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 10], [[10, -20, 30, -40, 50, -60, -40], 3], [[11], 1], [[2, 3, -23, 243, -400, -400, 0, 1], 2], [[-1, 0], 0], [[11, 11], 1], [[1, 2, 3, -23, 243, -400, -400, 0], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 9], [[1, 2, 3, -23, 243, -400, -400, 0], 6], [[1, 2, 3, -23, 243, -400, 0, 243, -400, -23], 2], [[10, -20, 30, -40, 50, -59], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 6], [[2, 3, -23, 243, -400, -400, 0, 1], 3], [[5, 5, 5, 4, 5, 5, 5, 5, 5, 5, -5, 7, -5, -5, -5, 5], 4], [[10, -20, 30, -60, -40, 50, -60, -60], 4], [[100, -100, 100, 30, -100, 100, -100, 100, -100], 5], [[1, 2, 3, -23, 243, -400, -400, 0, 1], 8], [[10, -20, 30, -40, 50, -60, 50], 2], [[999, -1000], 1], [[10, -20, 30, -40, 50, -59, 10], 2], [[10, 30, -40, 50, -60, -40], 3], [[10, -20, 30, -40, 50, -60, 50], 3], [[1, 2, 3, -23, 243, 3, -400, -400, 0, 243, -400], 2], [[7], 1], [[1, 2, 3, 243, 3, -400, -400, 0, 243, -400, -400], 2], [[5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 4], [[10, -20, 30, -40, 50, -60, -20], 4], [[-401, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 7], [[1, 2, 3, -23, 243, -400, -400, 0], 0], [[11, 11], 0], [[998, 999, -1000], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 9], [[50, 1], 1], [[1, 2, 3, -23, 243, 100, -400, -400, 0, -400], 6], [[1, 2, 3, -23, 243, -400, -400, 0, -400], 0], [[1, -399, 2, 3, -23, 243, -400, -400, 0, 1, 3], 1], [[10, -20, 30, -40, 50, -60, -40], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 4], [[2, 5, 6, 7, 4, 8, 4], 2], [[1, 2, 3, -23, 243, -400, -400, 0, 1], 7], [[10, -100, 30, -40, 50, -60, -40], 2], [[-401, 100, 0, 1, -1, 1000, -1000, 1000, -1000], 8], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 3], [[10, -20, 30, 1000, -40, 50, -59, 10], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 4], [[1000, -1000, -1000, -1000], 2], [[1, 2, 3, -23, -5, -400, -400, 0, -400], 0], [[10, -20, 30, -40, 1, -60, -40, -40], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5, -5], 4], [[2, 3, -23, 243, -400, -400, 0, 1], 8], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 30, -5, -5, -5, -5, -5, 5], 4], [[2, 5, 6, 7, 4, 100, 8, 4], 3], [[5, 5, 5, 4, 5, 5, 5, 5, -1000, 5, 30, -5, -5, -5, -5, -5, 5], 4], [[2, -23, 243, -400, -400, 0, 1], 2], [[1, 2, 3, 243, -400, -400, 0, 243, -400], 2], [[1, 2, 3, -22, 243, -400, -400, 0], 7], [[1, 0], 1], [[10, -20, -40, 50, -60], 3], [[100, 2, 3, -23, 243, -400, 0, 243, -400, -23], 3], [[1000, -1000, -1000], 1], [[10, 30, -40, 50, -60, -1, -40], 3], [[1, 2, 3, -23, 243, -400, -400, 0, 243, -400], 3], [[10, -20, 30, -40, 50, 50], 1], [[-100, 30, -40, 50, -60, -40], 2], [[10, -20, 30, -40, 1, -59, -40, -40], 2], [[8, 1, 2, 3, -23, 243, 8, -400, 0, -400], 1], [[1, 2, 3, -23, 243, -22, -400, -400, 0, -400], 6], [[-401, -1000, -1000], 1], [[-100, 30, -40, 50, -60, -40], 1], [[-40, 30, -40, 1, -60, -40, -40], 2], [[11], 0], [[1, 2, 3, 243, 3, -400, -400, 0, 243, -400, -400], 7], [[10, -20, -40, 50, -59, 10], 2], [[10, -20, 6, 30, -40, 50, -60], 3], [[10, -20, 30, 1000, -40, 50, -59, 10], 1], [[10, -20, 30, -40, 50, -59], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 8], [[999, -20, -1000], 2], [[1, 2, -20, 4, 243, -400, -400, 0, 243, -400], 2], [[10, -20, 30, -40, 30, 50, -60], 3], [[1, 2, 3, -22, 243, -400, -400, 0, 1], 6], [[10, -20, 30, -40, -59, 10], 2], [[100, -100, 100, 30, -100, 100, -100, 100, -100, 30], 5], [[1, 2, 3, -23, 243, -400, -400, 243, -400, 243], 3], [[10, -20, 6, 30, -40, 50, -60, -40], 3], [[5, 5, 5, 4, 5, 5, 5, 5, 5, 5, -5, 7, -5, -5, -5, 5], 9], [[1, 2, 3, 243, -400, -400, 0, 243, 7], 1], [[9, 0], 0], [[2, 3, -23, 243, -400, -400, 0, 1], 7], [[10, -20, 30, -40, 50, -60, 50], 4], [[10, -20, 30, -40, 50, -60, -40, -40], 3], [[5, 5, 5, 5, -22, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 9], [[3, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 6], [[-1000, -1000], 1], [[1, 2, 3, 244, 3, -400, -400, 0, 243, -400, -400], 7], [[10, -20, 30, -40, 10], 2], [[-20, 30, -40, 50, -60, -20], 4], [[-1000, 10], 1], [[9, 2, 5, 6, 6, 4, 8, 4], 1], [[1, 2, 3, -23, 243, -400, -400, 0, 243], 0], [[2, 5, 7, 4, 8, 4], 3], [[1, 2, 3, 243, -400, -400, 0, -400], 0], [[10, -20, 50, 6, 30, -40, 50, -60, -40], 3], [[1, 2, 3, 243, -400, -400, 0, 243, 7, -400], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, -5, -5, -5, -5, -5, 5], 4], [[5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 4], [[1, 2, 3, -23, 243, -400, -400, 0, 243], 9], [[10, -20, 30, -40, 50, 10], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 10], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 4], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 9], [[100, -401, 2, 3, -23, 243, -400, 0, 243, -400, -23], 3], [[-99, 100, -100, 100, 30, -100, 100, -100, 100, -100], 5], [[10, -20, 30, -40, 50, -61, -40], 3], [[10, -20, 30, -40, 1, -60, -40], 2], [[1, 2, 3, 1000, 243, -400, -400, 0], 7], [[1, 2, 3, -23, 243, -400, -400, 243, -400, 243], 2], [[5, 5, 5, 4, 5, 5, 5, 5, -1000, 5, 30, -5, -5, 0, -5, -5, -5, 5], 4], [[2, 5, 6, 4, 8, 4], 3], [[1, 3, -23, 243, -399, -400, -400, 0, -23], 2], [[999, -20], 2], [[10, -20, 30, -20, 50, -60, -60], 4], [[-400, 1], 1], [[1, 2, 3, -23, 30, -400, -400, 243, -400, 243], 4], [[100, 2, 5, 3, -23, 243, -400, 0, 243, -400, -23], 3], [[2, 5, 7, 4, 8, 4, 4], 3], [[1, 2, 3, -23, 243, -22, -400, 0, 0, -400], 6], [[-61, -20, 30, 1000, -40, 50, -59, 10, 30], 2], [[10, -20, 30, 50, -60, 49, -21, 50], 4], [[-19, 999, -20, -1000], 2], [[1, 2, 3, -23, 243, -400, -400, 0, 1, -400], 8], [[1, 2, 3, -23, 243, 8, -400, 0, -401], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 9], [[2, 3, -22, 243, -400, -400, 0], 7], [[2, 5, 6, 7, 4, 8, 4], 4], [[1, -399, 3, -23, 243, -61, -400, 0, -400], 0], [[29, 10, 30, -20, 30, 1000, -40, 50, -59, 10], 1], [[-400, 1], 0], [[1, 2, 3, -23, 243, -400, -61, -400, 0, 1, -400], 8], [[-20, 30, -40, 50, -60, 50], 4], [[5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 3], [[-99, 10, 30, -40, 50, -60, -40], 3], [[3, 0, 0, 1, -1, 1000, -1000, 1000, -1000, -1], 8], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 8], [[1, 2, 3, -23, 243, 3, -400, -400, 0, 242, -400], 2], [[-21, 10, -20, 6, 30, -40, 50, -60, -40], 3], [[10, -1, -20, 30, -40, 50, -61, -40], 3], [[2, 5, 6, 7, 29, 4, 8, 4], 2], [[999, -1000, 999], 1], [[1, 2, 3, -22, 243, -400, -400, 0], 6], [[10, -21, 30, -40, 50, -60], 2], [[-1, 0], 1], [[1, 2, 3, 243, -400, -400, 0, 243, -1], 1], [[-99, 100, -100, 100, 31, 30, -100, 100, -100, 100, -100], 5], [[1, 2, 3, -23, 243, 8, -400, 0, 49], 2], [[10, -5, 50, -60, -40, -40], 3], [[10, -20, 30, -59, -40, 50, -59], 2], [[10, -20, 30, -401, -40, 50, -60, 50], 3], [[-100, 30, -40, 50, -60, -40, -100], 3], [[1, -19, 3, -23, 243, -400, -400, 0, -400], 0], [[100, 2, 5, 3, -23, 243, -400, 0, 243, -400, -23], 5], [[1, 2, 3, 243, 3, 243, -400, -400, 0, 243, -400, -400], 2], [[10, -20, 6, 100, -40, 50, -60], 3], [[999, 7], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 998, -5, -5, -5, -5, -5, 5], 3], [[1, 2, 3, 999, 243, -400, -400, 0, 243, 7, -400], 1], [[1, 2, 3, -23, 30, -400, -400, 243, -400, 243], 5], [[10, -20, 30, -40, 30, 50, -60, 30, -20], 3], [[1, 2, 3, 244, 3, -400, -400, 0, 243, -400, -400, 3], 7], [[2, 6, 7, 4, 8, 4], 2], [[8, 1, 2, 3, -23, 243, 8, -400, -400], 1], [[10, -20, 30, 9, -40, 50, -60, -60], 4], [[999, -20], 1], [[999, -20, -1000], 1], [[1, 2, 3, 1000, 243, -401, -400, -400, 0, 2], 7], [[1000, 1, 2, 3, -23, 243, 8, -400, -400], 1], [[2, 3, -22, 243, -400, -400, 0], 6], [[10, -20, 30, -40, 50, 10], 1], [[0, 0, 1, -1, 1000, -1000, 1000, -1000], 7], [[1, 2, 3, 244, 3, -400, -400, 0, 243, -400, -400, 50], 7], [[-100, 30, -40, 50, -60, -40, 50], 2], [[10, -20, 30, -40, 50, -60, 50], 5], [[100, 99, -100, 100, -100, 100, -100, 100, -100, 100, -100], 5], [[999, -20, 999], 1], [[-40, 30, -40, 1, -60, -40, -40, -40], 2], [[-40, 30, -40, 1, -60, -40, -40], 7], [[100, 99, -100, 100, -100, 100, -100, 100, -100, 100, -100, -100], 5], [[2, 3, -23, 243, -400, -400, 0], 2], [[10, 30, -40, 50, -60, -40], 4], [[-401, 0, 30, 1, -1, 1000, -1000, 1000, -1000], 7], [[1, 2, -20, 4, 243, -400, -400, 0, 243, -400], 1], [[10, -20, 30, 999, -40, 50, -59, 10], 0], [[10, 30, -40, 30, 50, -60, 30, -20], 3], [[10, 9, 30, -40, 30, 50, -60, 30, -20], 3], [[-18, 1, -19, 3, -23, 243, -400, -400, 0, -400], 0], [[-401, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 8], [[-401, 100, 0, 1, -1, 1000, 1000, -1000], 7], [[-100, 30, -40, 50, -60, -40, 50], 1], [[3, 0, 0, 1, -1, 1000, -1000, -1, 1000, -1000], 6], [[-401, 0, 30, 1, -1, 1000, -1000, 1000, 10, -1000], 7], [[100, 99, -100, 100, -100, 100, -100, 100, -100, 100, -100], 7], [[1, 2, 3, 243, 3, -400, -400, 0, 243, -400, 242, -400], 2], [[100, 2, 3, 6, 0, 243, -400, -23], 3], [[1, 2, 3, -23, 243, -22, -400, -400, 0, -400, -23], 6], [[5, 5, 5, 5, 2, 5, 5, 5, 5, 5, 998, -5, -5, -5, -5, -5], 5], [[0, 0, 1, -1, 1000, -1000, 1000, -1000, 0], 7], [[10, -5, 50, -60, -40, -59, -40], 3], [[1, 2, 3, -23, 243, -400, -400, 0, 243], 1], [[10, -20, 30, 1000, -40, 50, -59, 10, -40, 10, -59], 2], [[-5, 0], 1], [[5, 5, 5, 4, 5, 5, 5, 5, 5, 5, -5, 7, -5, -5, -5, 5], 5], [[-99, 100, -100, -99, 100, 31, 30, -100, 100, -100, 100, -100], 5], [[10, 243, -20, 30, -40, 50, 10], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 5, -5, -5, -5, -5, -5, 5], 4], [[0, 244, 1, -1, 1000, -1000, 1000, -1000], 7], [[1000, -1000, -1000, -1000], 1], [[10, 30, -40, 50, -60, -1, -40, -60], 3], [[1, 2, 3, -23, -5, -400, -400, 9, 0, -400], 0], [[5, 5, 5, 5, 99, 5, 5, 5, -5, -5, -5, -5, -5, 5], 4], [[9, -20, 30, -40, -59], 3], [[4, 2, 3, 5, 6, 7, 4, 8, 4], 3], [[2, 5, 6, 7, 4, 100, 8, 4], 4], [[10, -20, 30, -59, -40, 50, 242, 50], 3], [[100, 99, -100, 100, -100, 100, -100, 100, -100, 100, -100], 8], [[1, 2, 3, -23, -5, -400, 0, -400], 0], [[0, 0, 1, -1, 1000, -1000, 1000, -1000, 0, 1], 7], [[100, 1, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 6], [[2, 6, 7, 4, 8, 4], 3], [[1, 2, 3, 1000, 243, -401, -400, 0, 2], 7], [[1, 2, 3, -23, 243, -400, -400, 243, 100, -400, 243], 2], [[5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 4], [[10, -20, 30, -40, 29, -60], 4], [[100, 99, -100, 100, -100, 100, 100, -100, 100, -100], 4], [[1, 2, 9, -23, 243, -400, -400, 243, -400, 243], 3], [[10, -20, 30, -40, 50, -59, 10], 1], [[2, 5, 6, 7, 4, 4, 8, 4], 4], [[999, 999], 1], [[2, 3, -23, 243, -400, -400, 0], 7], [[10, -20, 30, 1000, -40, 50, 243, 10], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5, -5], 3], [[10, -20, 30, -59, -40, 50, -59, 30], 2], [[10, -20, 30, 1000, -40, 50, -59, 10], 3], [[1, 2, 3, 243, -400, -400, 0, 1, -400, 243], 0], [[100, 1, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 2], [[1, 243, 2, 3, -23, 243, -400, -400, 0, 1, 3], 1], [[10, -20, 30, -40, 51, 10], 2], [[10, -20, 30, -40, 1, -59, -40, -40, 30], 2], [[5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 6, -5], 4], [[1, 3, 999, 243, -400, -400, 0, 243, 7, -400], 1], [[4, 2, 5, 6, 7, 4, 8, 4], 4], [[1, 3, 999, 243, -400, -400, 0, 243, 998, 7, -400], 1], [[10, -20, 30, -40, 50, -60, 50, 50], 4], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -4, -5, -5, 5], 10], [[100, 2, 5, 3, -23, 243, -400, 0, 243, -400, -23], 6], [[1, 2, 3, -23, 243, -400, -61, -400, 0, -400], 8], [[100, 99, -100, 100, -100, 100, 100, -100, 100, -100], 5], [[-20], 1], [[10, 30, -40, 50, -60, -40], 5], [[30, 1, 2, 3, -23, 243, -400, -400, 0, 243, -400], 2], [[5, 5, 5, 4, 5, 5, 5, 5, -1000, 5, 30, -5, -5, -5, -5, -5, 5, 4], 4], [[-401, 101, 0, 1, -1, 1000, 1000, -1000], 7], [[1, 2, 3, 243, 3, -400, -400, 0, 242, -400], 4], [[1, 2, 3, 244, 3, -400, -400, 0, 243, -400, -400, 50], 6], [[2, 3, -23, -400, 243, -400, 0], 7], [[1, 2, 9, -23, 243, -23, -400, -400, 243, -400, 243], 4], [[10, -20, 30, -40, 1, -59, -40, -40, 30, 30], 2], [[-1000, 10, 10], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 5], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 998, -5, -5, -5, -5, -5, 5, 5], 3], [[1, 2, 3, 243, -400, -400, 0, 243, 8], 1], [[10, 243, 30, -40, 50, 10], 2], [[10, 30, -40, 30, 50, -60, 30, -20], 2], [[1, 2, 3, -23, 243, -400, -400, 0, 243, 3], 1], [[10, -20, 30, 1000, -40, 50, 9, 243, 10, 30, 10], 2], [[10, 0, 30, -40, 50, -59], 2], [[2, 3, -23, 243, -400, -400, 0, 2, -23], 3], [[5, 5, 5, 5, 2, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 4], [[-61, -20, 30, 49, 1000, -40, 50, -59, 10, 30], 2], [[1, 2, 3, 243, -400, -400, 0, -400, 243], 1], [[5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 3], [[1, 2, 6, 7, 4, 8, 4], 3], [[10, -20, 30, 9, -21, -40, 50, -60, -60], 4], [[1, 2, 3, 244, 3, 2, -399, 0, 243, -400, -400, 50], 5], [[10, -20, 30, -40, 50, -60, -40, -40], 2], [[10, -20, 30, -59, -40, 50, 242, 50, 50], 3], [[5, 5, 5, 5, 99, 5, 5, 5, -5, -5, -5, -5, -5, 5, -5], 4], [[999, 999, -20], 2], [[10, -5, 50, -60, -40, -59, -40], 5], [[1, 2, 3, -23, 30, -400, -400, 243, 999, 243], 4], [[3, 0, 0, 1, -1, 1000, -1000, -1, 1000, -1000], 5], [[10, -20, 30, -59, 50, 242, 50], 3], [[0, -400, 0, 0, 1, -1, 1000, -1000, 1000, -1000, -1], 7], [[-5, 50, -60, -40, -40], 3], [[5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 5], [[100, -100, 100, -100, 100, -100, 100, -100, 100, -100], 7], [[10, -21, 30, -40, 50, -60], 3], [[10, -40, -20, 30, 999, -40, 50, -59, 10], 1], [[10, -20, 30, -40, 50], 1], [[1000, -999, -1000, -1000], 2], [[10, -19, 30, -20, 50, -60, -60], 4], [[1000, 1, 2, 3, -23, 243, 8, -400, -400], 7], [[10, -20, 30, -40, 50, -61, -40], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5, -5], 2], [[1, 2, 3, -22, 243, -400, -400, 1], 6], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 998, -5, -5, -5, -5, -5, 5], 3], [[-20, 30, 1000, 50, 9, 243, 10, 30, -59], 2], [[1, 2, 3, -23, 243, 99, -22, -400, -400, 0, -400, -23], 6], [[10, -20, 30, -40, 50, -60], 5], [[5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, 6, -5, -5, -5], 5], [[5, 5, 5, 5, 5, 5, 5, 6, 5, 5, -5, -5, -5, -5, -5, 5], 4], [[-20, 30, -40, 50, 10], 1], [[1, 2, 3, -23, 243, -400, -400, 3, 0], 6], [[-401, 101, 0, 1, -1, 1000, -1000], 7], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -6], 4], [[10, -20, -59, -40, 50, 242, 50], 3], [[999, -21], 1], [[-61, -20, 30, 49, 1000, -40, 50, -59, 10, 30], 3], [[999, -20, 998, 999], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -6], 8], [[5, 2, 5, 6, 7, 4, 8, 4], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 998, -5, -5, -5, -5, -5, -5, 5], 3], [[5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 4], [[10, -20, 30, -40, 50, -60, 50, 10], 3], [[10, 30, -41, 50, -60, -40], 4], [[100, -100, 100, 30, -399, -100, 100, -100, 100, -100, 30], 5], [[5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 3], [[10, -20, 30, -41, -40, 30, 50, -60], 3], [[1000, -1000, -999, 1000], 2], [[1, 2, 3, -23, 243, -400, 243, 0, 243, -400], 2], [[1, 2, 3, -23, 243, -400, 243, 0, 243, -400, -23], 2], [[-5, 0], 2], [[1, 2, 3, -23, 243, 8, -400, 0, -401], 0], [[1, 2, 3, -23, 243, 8, -400, 0, -400], 1], [[5, 2, 5, 6, 7, 4, -1, 8, 4], 3], [[10, -20, 30, -40, 1, -60, -59, -40, -40, 30], 2], [[1, 2, 3, 1000, 243, -400, -400, 0], 8], [[100, -401, 2, -23, 243, -400, 0, 243, -400, -23], 3], [[10, -5, 51, 30, -40, -59, -40], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -6], 7], [[10, -40, -20, 30, 999, -40, 50, 50, 10], 1], [[2, 5, 7, 4, 8, 4, 7], 3], [[10, -5, 50, -60, -40, -59, -40], 6], [[2, 3, -23, -400, 0, 243, 3], 1], [[-400, 0], 0], [[10, -20, 30, -20, 50, -60, -60, 50], 4], [[10, -19, 30, -20, -4, -60, -60], 4], [[10, 30, -40, 50, -60, -40, -60], 2], [[10, -20, -40, 50, -60], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5, 5], 9], [[-1000, 10, -1000], 1], [[1, 2, 3, 999, 243, -400, -400, 0, 0, 243, 7, -400, 2], 1], [[2, 5, 7, 4, 8, 8, 4, 4], 3], [[1, 2, 3, -23, 243, -400, -400, 0, 243], 4], [[10, -40, -20, 30, 999, -40, 50, 50, 10], 0], [[10, -20, 244, 30, -40, 50, -61, -40], 3], [[1, 2, 3, 243, -400, -400, 0, 243, -1], 5], [[5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 4], [[10, -20, 30, -40, 29, -60, 10, 10], 4], [[3, 0, 0, -1, 1000, -1000, 1000, -1000], 7], [[5, 100, 5, 5, 2, 5, 5, 243, 5, 5, 5, -5, -5, -5, -5, -5, -5], 5], [[10, -20, 30, -40, 50, -59, 10], 0], [[1, 3, 999, 243, -400, -400, 0, 243, 244, 998, 7, -400], 1], [[10, -20, 30, -60, -40, -39, 50, -60, -60], 4], [[100, 2, 3, -23, 243, -400, 0, 243, -400, 5], 3], [[3, 0, 0, -1, 1000, -1000, 1000, -1000, 1000], 7], [[5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 3], [[5, 5, 5, 5, 5, 5, 4, 5, 5, -5, -5, -5, -5, -5], 4], [[-4, 2, 3, 1000, 243, -400, -400, 0, 3], 7], [[-100, 30, -40, 50, -60, -40, -20, -100], 3], [[2, 5, 6, 7, 4, 8, 4, 2], 2], [[4], 1], [[10, -20, 30, -40, 51, 10, -40], 2], [[2, 7, 4, 8, 4], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 8], [[1, 2, 3, 243, 3, -400, -400, 0, 243, -400, 242, -400, 1], 2], [[5, 5, 5, 5, 5, 5, 5, -5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 6], [[10, 30, -40, 50, -60, -40], 6], [[3, 3, -23, 243, -400, -400, 0, 1], 7], [[1, 2, 3, -23, 243, 3, -400, -1, -400, 0, 243, -400], 2], [[1, 2, 3, 243, -400, -400, 243, -400], 2], [[5, 100, 5, 5, 2, 5, -4, 5, -40, 243, 5, 5, 5, -5, -5, -5, -5, -5, -5], 9], [[10, 30, -40, 50, -60, 50], 1], [[2, 5, 7, 4, 100, 8, 4], 3], [[-21, 10, -20, 30, -40, 50, -60, -40], 2], [[5, 5, 5, 5, 2, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 6], [[2, 3, -23, 243, -400, -400, 1], 4], [[3, 0, 0, 1, -1, 1000, -1000, 1000, -1000, -1, 1], 7], [[5, -1, 5, 5, -22, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 8], [[1, 2, 3, -23, 243, -400, 0], 3], [[2, 5, -60, 6, 7, 4, 100, 8, 4], 3], [[10, -19, 30, -20, 100, -4, -60, -60, 10], 4], [[-1, 0, -1], 0], [[10, -5, 50, -60, -399, -40], 3], [[100, 1, 0, 1, -1, 1000, -1000, 1000, -1000], 6], [[10, -20, 244, 30, 50, -40, -40], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5], 8], [[10, 30, -40, -61, 50, -60, -1, -40, -60], 3], [[10, -20, 6, 30, -40, 50, -60], 4], [[30, 1, 2, 3, -23, 243, -400, -400, 0, 29, 243, -400], 2], [[10, -20, 30, 50, -60, 49, 5, -21, 50], 4], [[5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, 5], 4], [[10, 30, -40, 49, 50, -40, 50], 1], [[1000, -1000, -999, 1000, -999], 2], [[10, 5, 30, -40, 50, -60], 5], [[1000, -999, -1000, -1000], 1], [[10, -20, 6, 30, -40, 50, -60], 2], [[10, -40, -20, 30, -40, 10, 10], 2], [[2, 3, -23, 243, 243, -400, 0], 2], [[10, -20, 30, -40, 1, -60, -40, -40], 3], [[1, 2, 3, -22, 243, -400, -400, 1], 7], [[998, 999, -21], 1], [[5, 5, 5, 4, 5, 5, 5, 5, 5, 5, -5, 7, -5, -5, -5, 5], 6], [[1, 2, -23, 243, 3, -400, -400, 0, 243, -400, 243], 2], [[10, -5, 50, -60, -40, -40], 4], [[1000, 1, 2, 3, -23, 243, 8, -400, -400], 4], [[1, 2, 3, 243, 3, -400, -400, 0, 243, -400, -400], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 4], [[2, 3, -23, -400, -400, 0, 1], 7], [[5, -1, 5, 5, -22, 5, 5, 5, 5, -5, -4, -5, -5, -5, -5, -5], 8], [[10, -20, 30, -40, 30, 50, -60], 4], [[10, -20, 30, -40, 1, -60, -40, -40, -40], 1], [[4, -20, 30, -40, 50, -60, 50, 10], 3], [[1, 2, 3, -23, 243, -400, -400, 0], 4], [[1, 2, 3, 243, -400, -400, 0, 1, -400, 243, -400], 2], [[0, 0, 0, 0], 0], [[1, 2, 3, 243, 3, -400, -400, 0, 243, -400, -400, 3, 243], 3], [[29, 10, 30, -20, 30, 1000, -40, 50, -59, 10], 2], [[10, -20, 29, -40, -60, 50], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 11], [[100, 1, 0, 0, 1, -1, 1000, -1000, 1000], 2], [[5, 5, 5, 4, 5, 5, 5, 5, -1000, 5, 30, -5, -5, -5, -5, -5, 5], 5], [[0, 1, 0, 0], 0], [[2, 3, -23, 243, -400, -400, 0, 1], 1], [[10, -20, 244, 30, -40, -62, 50, -61, -40], 3], [[30, -40, 50, -60, 51], 3], [[1, 2, 3, 1000, 243, -400, -400, 0, 2], 7], [[1000, 1, 2, 3, -23, 243, 8, -400], 7], [[100, 3, 5, 3, -23, 243, -400, 0, 243, -400, -23], 3], [[3, 0, 0, 1, -1, 1000, -1000, -1, 1000, -1000], 4], [[5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 4], [[10, -20, 30, -40, 50, -60, 51], 3], [[-6, 10, -20, 30, -59, -40, 50, -59, 30], 2], [[1, 2, 3, -23, 243, -400, 0, -400, -23], 2], [[10, 30, -41, 50, -60, -40], 3], [[4, 11, -20, 30, -40, 50, -60, 50, 10], 3], [[5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, 5, -5], 11], [[5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 5], [[1, 2, 3, -23, 243, 99, -22, -400, -400, 0, -400, -23], 7], [[1, 2, 3, 243, -400, -400, 0, -400], 1], [[1, 2, -20, 4, 243, -400, -400, 0, 243, -400], 0], [[9, -20, 30, -40, -59], 2], [[-99, -1000, -1000, -1000], 1], [[10, -20, 30, 1000, -40, 50, 243, 10], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 4], [[10, -20, 30, -40, 50, -60, -20, -60], 4], [[999, 3], 1], [[1, 2, 3, -23, 243, 3, -400, -1, -400, 0, 243, -400], 3], [[-5, 50, -60, 51, -40, -40], 3], [[10, -40, -20, 30, 999, 50, 50, 10], 1], [[2, 3, -23, 243, 8, -400, 0, -400], 1], [[10, -20, 30, -40, 51, 10, -40], 4], [[10, -20, 30, 1000, -40, 50, -59, 10, 1000], 2], [[5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, -5, 7, -5, -5, -5, 5], 6], [[5, 5, 5, 5, 5, 5, 5, 6, 5, 5, -5, -5, -5, -5, -5, 5], 0], [[-61, -20, 30, 1000, -40, 50, -59, 10, 30, 30], 2], [[30, -40, 50, -60, 51], 2], [[100, 2, 3, 6, 0, 243, -400, -23, -23], 3], [[1, 3, -23, 243, -399, -400, -400, 0, -23], 5], [[2, 10, 6, 4, 8, 4], 3], [[10, -20, 6, 30, -40, 51, 50, -60], 3], [[-61, -20, 30, 49, 1000, -40, 50, -59, 30], 2], [[1000, -21, 244, -1000, -1000], 2], [[1, 2, 3, -23, 243, -400, -400, 0, -23], 3], [[100, 2, 1, 3, -23, 243, -400, 0, 243, -400, -23], 3], [[3, 0, 1, -1, 1000, -1000, 1000, -1000], 6], [[-19, 999, -20, -1000, -1000], 2], [[10, -20, 30, -59, 50, -60, 50], 5], [[5, 5, 5, 2, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, 5], 5], [[2, 7, 4, 100, 4], 3], [[1, -19, 2, -23, 243, -400, -400, 0, -400], 0], [[3, 0, 0, -1, 1000, -1000, 1000, -1000, 1000], 8], [[10, -20, 30, -20, -40, 50, -61, -40], 2], [[-5, -10, -15], 2], [[10, 20, 30], 1], [[5, 10, 5, 7], 2], [[1, 2, 3], 0], [[-1, 0, 1], 0], [[5, 5, 5, 5], 2], [[-3, -4, -1, -2], 2], [[-1000, 1000, -999, 999], 2], [[-5, -10, -15], 1], [[1000, -1000], 1], [[4, 2, 5, 6, 243, 4, 8, 4], 3], [[100, -100, 100, -100, 100, -100, 100, -100, 100, -100, -100], 5], [[80, -1], 2], [[-1000], 0], [[100, -100, 100, -100, 100, -100, 100, -100, 100, -100, -100], 6], [[1000, 999, -999], 2], [[2, 4, 2, 5, 6, 7, 4, 4], 3], [[4, 2, 5, 6, 7, 4, 8, 4, 4], 3], [[10, -20, 30, -40, 50], 4], [[1, 2, 80, 3, -23, 243, -400, -400, 0], 2], [[2, 5, 6, 243, 4, 8, 4], 3], [[10, 30, -40, -60], 3], [[-100, 2, 5, 6, 243, 4, 8, 4], 3], [[-100, 100, -100, 100, -100, 100, -100, 100, -5], 5], [[100, 80, -100, 100, -100, 100, -100, 100, -100, 100, -100], 6], [[-100, 100, -100, 100, -5, 100, -100, 100, -5], 5], [[4, 2, 5, 6, 7, 4, 8, 4, 4], 2], [[80, -1, 80], 2], [[-100, 100, -100, 100, -5, 100, -100, 30, 100, -5], 6], [[1000, 999], 2], [[6, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 9], [[6, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5], 9], [[10, -20, 30, 9, 50, -60], 3], [[10, 49, -20, 30, -40, 50, -60], 3], [[4, 2, 5, 6, 243, 4, 8, 4], 4], [[0, 0, 0, 1, -1, 1000, -1000, 1000, -1000], 8], [[80, -1, 6, 80], 2], [[10, -20, 30, 9, 49, -60], 4], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -5], 5], [[-60, -1, 6, 80], 2], [[10, -1000, -20, 30, -40, 50, 10], 4], [[100, 80, -100, 100, -100, 100, -100, 100, -100, 100, -100], 5], [[-60, 10, -1, 6, 80], 2], [[100, 80, -100, 100, -100, 100, -100, 100, -100, 100, 0], 6], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 4], 2], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 5], 3], [[-100, 100, -100, 100, -5, 100, -100, 100, 999], 5], [[80, -40, -1, 80], 2], [[100, 80, -100, 100, -100, 100, -100, 100, -100, 100, 0], 7], [[4, 2, 5, 6, 7, 9, 4, 8, 4, 4], 3], [[80, -1, 6, 80, 81, -2], 2], [[80, -1, -1, -1], 2], [[80, -1, 6, 80, 80], 2], [[-100, 100, -100, 100, -5, 1, 101, -100, 30, 100, -5], 6], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -5], 4], [[80, -1, 80, 6, 80, 80], 2], [[1000, 49], 1], [[3, 3, 5, 6, 7, 4, 8, 4, 4, 4], 2], [[10, 49, -20, 30, -40, 50], 3], [[0, -1000, 0, 1, -1, 1000, -1000, 1000, -1000], 8], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 5, 5], 3], [[1000, 999, -999], 3], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 2], [[2, 4, 2, 5, 6, 7, 4, 4, 4, 4], 3], [[9, 49, -20, 30, -40, 50], 3], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 4, 4], 2], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 5, 5, 4], 2], [[-1, -1000, 0, 4, 1, -1, 1000, -1000, 1000, -1000], 8], [[8, -60, 10, -1, 6, 10, 80], 2], [[-1], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 3], [[10, -20, 30, 1000, 50, -60], 3], [[80, -1, 6, 80, 81, -2], 1], [[0, 0, 0, 1, -1, 1000, -1000, 1000, -1000, 0], 7], [[-1, -1000, 0, 5, 4, 1, -1, 1000, -1000, 1000, -1000], 8], [[-100, 2, 5, 6, 243, 8, 4], 3], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -5, 100], 4], [[11, 49, -20, 30, -40, 50, -60], 4], [[3, 3, 5, 6, 7, 4, 8, 4, 4], 2], [[80, -1, -1, -1], 3], [[8, -60, -1, 6, 10, 80], 2], [[-100, 100, -100, 100, -100, 100, -100, 100, -5], 6], [[10, -20, 30, 30, 49, -60], 5], [[-100, 100, -100, 100, -100, 100, -100, 100], 5], [[80, -1, -1, -1], 4], [[4, 2, 5, 5, 4, 8, 4, 4, 5, 5, 4], 2], [[4, 2, 5, 6, 242, 4, 8, 4], 4], [[4, 2, 5, 6, 7, 5, 8, -400, 4, 4], 3], [[-100, 100, -1, -100, 100, -5, 100, -100, 100, -5, -5, 100], 4], [[4, 2, 5, 6, 7, 5, 8, -400, 4, 4], 2], [[-100, 100, -100, 101, -5, 100, -100, -60, 100, -5], 5], [[2, 4, 2, 5, 6, 7, 5, 4], 3], [[-1], 0], [[7, 8, -60, -1, 6, 10, 80], 2], [[-20, 51, 30, -40, 50, -60, 50, 30], 4], [[7, 8, 101, -60, -1, 6, 80], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 2], [[2, 4, 2, 5, 6, 7, 4, 4], 2], [[80, -1, -1], 3], [[79, 80, -1, -1], 3], [[-1, -1], 1], [[4, 2, 5, 6, 7, 4, 8, 4, 4], 4], [[10, -1000, -20, 30, 50, 10], 4], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 10], [[-100, 2, 5, 6, 3, 243, 4, 8, 4], 3], [[-100, 100, -100, 101, -5, 100, -100, -60, 100, -5], 6], [[-100, 100, -100, 101, -5, 100, -100, 100, -5], 5], [[80, -1, 6, 80, 81, -1, -2], 2], [[1000, -1000, 1000], 1], [[8, -60, 10, -1, 6, 10, 80], 3], [[-100, 100, -1, -100, 100, -5, 100, -100, 100, -5, -6, 100], 4], [[10, -1000, -20, 30, -40, 50, 10, 10], 4], [[100, 80, -100, 100, -100, 100, -100, 100, -100, 100, -100, 100], 5], [[-100, 100, -101, 100, -5, 100, -100, 30, 100, -5], 6], [[8, -60, 10, -1, 6, 10, 79], 3], [[999, 9, 49, -20, 30, -40, 50], 3], [[-100, 100, -100, 100, -100, 100, -100, 100, -100], 5], [[6, 5, 5, 5, 5, 5, 999, 5, 5, 5, 5, -5, -5, -5, -5, -5], 9], [[-99, 99, 100, -1, -100, 100, -5, 100, -100, 100, -5, -6, 100], 4], [[100, 80, -100, 100, -100, 100, -99, -100, 100, -100, 100, 0], 6], [[1, 0, 0], 1], [[-100, 100, -100, 100, -5, 100, -100, 99, 999], 5], [[100, 80, -100, 242, -100, 100, -100, 100, -100, 100, -100], 5], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5], 3], [[7, 8, 101, -60, -1, 6, 80, 6], 2], [[100, 80, -100, 100, -100, 100, -99, -100, -100, 100, 0], 6], [[80, 243, -1, 6, 80], 3], [[999, 9, 49, -20, 29, 49, -40, 50], 3], [[6, 5, 5, 5, 8, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 9], [[6, 5, 5, 5, 5, 5, 999, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5, 5], 9], [[-100, 100, -100, 100, -100, 100, -100, 100, -5, 100], 6], [[4, 5, 6, 7, 4, 8, 4, 4], 1], [[80, -2, -1], 2], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 4, 8], 2], [[2, 4, 2, 5, 6, 7, 4, 4, 6], 2], [[81, -1000], 0], [[80, -101, -1, 6, -60, 80, 81, -2], 1], [[80, -1, 6, 80, 81, 79, -1, -2], 2], [[3, 3, 5, 6, 7, 4, 8, 5, 4, 4, 4], 2], [[80, -1, 6, 80, 81, 79, -1, -2], 1], [[80, -1, 6, 80, 80], 1], [[10, 49, -20, 30, -40, -20, 50], 3], [[2, 5, 2, 5, 6, 7, 5, 4], 3], [[-100, 100, -100, 100, -5, 100, -101, 100, -5, -5], 4], [[5, 5, 6, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 4], [[80, 6, 80, 81, -1, -2], 2], [[80, -1, 6, 80, 81, -2, -2], 2], [[-100, 100, -100, 100, -100, 100, -100, 100, -5, 100], 7], [[1, 0, 0, 1], 1], [[80, -101, -1, 6, -60, 80, 81, -2, 80], 1], [[3, 3, 5, 6, 7, 5, 8, 4, 4, 4], 2], [[6, 5, 5, 5, 50, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 9], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 10], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 10], [[-1, 80, -101, -1, 6, -60, 80, 81, -2, 80], 1], [[999, 9, 49, -20, 30, 50, -40], 3], [[6, 5, 5, 5, -400, 4, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 9], [[-1000, -100, 100, -100, 100, -5, 100, -100, 30, 100, -5], 6], [[-5, 0, -5], 1], [[10, 49, -20, 30, -40, -60], 3], [[-100, 100, -1, -100, 100, -5, 100, -100, 100, -5, -5], 3], [[1, 10, 0, 1], 1], [[-100, 2, 5, 6, 243, 4, 8, 4], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 3], [[7, 8, 101, -60, -1, 6, 80], 1], [[0, 0, 0, 1, -1, 1000, -1000, 1000, -1000, 0], 8], [[-100, 2, 5, 6, 243, 4, 8, 4], 4], [[4, 2, 5, 81, 6, 7, 4, 8, 4, 4, 4, 8], 2], [[7, 8, 101, -60, -1, 6, 80, 6, 7], 2], [[2, 4, 2, 5, 6, 7, 4, 4, 4, 4, 4], 3], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 4], 3], [[8, -60, 10, -1, 6, -1, 10, 80], 3], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 4], 9], [[4, 2, 5, 6, 7, 5, 8, -400, 4, 4, 5], 4], [[3, 3, 5, 6, 7, 4, 8, 4, 4, 4, 5], 2], [[6, 5, 5, 5, 8, 5, 5, 5, 5, -5, -5, -5, -5, -5], 9], [[80, 29, 6, 81, -2], 1], [[-40, 9, 49, -20, 30, -40, 50], 3], [[7, -60, -1, 6, 10, 80], 2], [[-100, 2, 5, 6, 244, 3, 243, 4, 8, 4, 4], 3], [[4, 51, 4, 2, 5, 6, 7, 4, 4, 4, 4, 4], 3], [[10, -20, 30, 30, 49, -60, 30], 5], [[100, 80, -100, 100, -100, 100, -99, -100, -1, -100, 100, 0], 6], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -5, 100], 5], [[-5], 1], [[-100, 100, -100, 100, -5, 100, 3, -100, 100, 999], 4], [[4, -2, 5, 6, 7, 4, 8, 4, 4, 5], 3], [[80, -1, 6, 80, 81, 79, -1, -2], 6], [[82, -6], 0], [[100, 80, -100, 100, -100, 100, -99, -100, -99, 100, -100, 100, 0], 6], [[100, 80, -100, 100, -100, 100, -99, -100, -99, 100, -100, 100, 0], 10], [[100, 80, -100, -5, 100, -100, 100, -100, 100, -100, 100, -100, 100], 5], [[6, 5, 5, 5, 5, 5, 999, 5, 5, -101, 5, -5, -5, -5, -5, -5], 9], [[-100, 100, -100, 100, -5, 100, -100, 100, 999, 100], 5], [[10, -19, 30, 30, 49, -60, 30], 5], [[80, 6, 80, 81, 79, -1, -2], 1], [[-5, 0, -5], 0], [[2, 10, 0, 1], 1], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 4, 8], 6], [[100, 80, -100, 100, -100, 100, -100, 100, -100, 100, -100], 7], [[-100, 100, -1, -4, -100, 100, -5, 100, 999, 100, -5, -5, 100], 5], [[1, 2, 3, -23, 243, -400, -400, 0, 3], 2], [[4, 2, 5, 6, 242, 4, 8, 4, 8], 4], [[4, -2, 5, 6, 4, 8, 4, 4, 5], 3], [[100, -100, 100, -5, 101, -100, 100, 999, 100], 5], [[80, -1, 6, 80, 81, 78, -1, -2], 1], [[4, -2, 5, 30, 6, 4, 8, 4, 4, 5], 3], [[243, 2, 5, 6, 7, 4, 8, 4, 243, 4, 4], 2], [[100, 5, -100, -5, 100, -100, 100, -100, 100, -100, 100, -100, 100], 5], [[4, 51, 4, 2, 5, 6, 7, 4, 4, 101, 4, 4], 3], [[80, 80, -40, -1, 82], 2], [[-1000, -100, 100, -100, 100, -5, 100, -100, 30, 100, -5], 5], [[3, 3, 6, 7, 4, 8, 4, 4, 4], 2], [[100, 80, -100, 100, -100, -100, 100, 100, 100, -100], 7], [[3, 3, 6, 7, 8, 4, 4, 4], 2], [[-100, 100, -101, -100, 100, -5, 100, 3, -100, 100, 999], 4], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, 5, -5, -5, -5, -5, -5], 3], [[100, 80, -100, 100, -100, 100, -100, 999, 100, -100, 100, -100], 6], [[999, -60, 9, 49, -20, 30, -40, 50], 3], [[100, 80, -100, 5, -100, 100, -100, 100, -100, 100, -100], 6], [[80, -1, 6, 80, 81, -2], 0], [[4, 5, 2, 5, 5, 4, 8, 4, 4, 5, 5, 4, 5], 2], [[0, 0, 0, 1, -1, 1000, -1000, 1000, -1000, 1], 8], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 10], [[4, 2, 6, 7, 4, 4, 4], 2], [[2, 5, 6, 7, 4, 8, 4, 4, 4], 9], [[4, 4, 2, 5, 6, 7, 4, 8, 4, 4, 4], 9], [[80, -1, 6, 80, 80, 80], 1], [[49, -20, 30, -40, 50, -60], 3], [[1000, 49], 0], [[100, -100, 100, -100, 100, -100, 100, -100, 100, -100, 100], 5], [[2, 10, 10, 0, 1], 1], [[4, 2, 5, 6, 9, 4, 8, 4, 4], 3], [[79, 80, -1, -1, -1], 3], [[10, -20, 30, 30, 49, -60, -20], 3], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -100], 5], [[51, 100, -100, 100, -5, 100, -100, 30, 100, -5], 6], [[3, 3, 5, 6, 7, 4, 8, 6, 4, 4], 2], [[8, -60, 10, -1, 10, 79], 3], [[2, 51, 10, 0, 1], 2], [[80, -1, 6, 80, 81, -1, -2], 3], [[-999, 80, 80, -40, -1, 82], 2], [[-5, -5], 0], [[-100, 100, -100, 100, -5, 100, -101, 100, -5, -5, 100], 0], [[80, -1, 6, 80, 81, 78, -1, -2], 2], [[3, 243, 3, 5, 6, 7, 5, 8, 4, 4, 4], 2], [[4, -100, 100, -100, 100, -5, 100, -100, 30, 100, -5, -100], 4], [[4, 5, 6, 7, 5, 8, 5, -400, 4, 4, 4], 3], [[-100, 100, -101, -100, 100, -5, 100, 3, -100, 79, 999], 4], [[80, -1, 81, -1, -1], 3], [[100, 5, -100, -5, 100, -100, 100, -100, 100, -100, 100, -100, 100], 6], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 5, 5], 11], [[1, 2, 80, 3, -23, 243, -400, -400, 0, 1], 2], [[-100, 100, -100, 100, 101, -5, 100, -100, 99, 999, 999], 5], [[-100, 2, 5, 6, 3, 243, 4, 8, 4], 4], [[10, 49, 30, -40, 50, 30], 3], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -5], 3], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 29, 2], 3], [[-100, 100, -100, 100, -5, 99, 100, -100, 100, -5, -5], 4], [[-20, 51, 30, -40, -60, 50, 30], 4], [[6, 5, 5, 5, 5, 5, 999, 5, 5, 5, 5, -5, -5, -5, -5, -5], 8], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5, 5], 3], [[-1, -1, -1], 2], [[-100, 101, 101, -100, 100, -100, 101, -5, 100, -100, -60, 100, -5], 4], [[-5, -5, 0, -5], 1], [[80, -1, 7, 80, 81, 79, -1, -2], 2], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 5, 5], 5], [[-100, 100, -101, -100, 100, -5, 100, 3, -100, 79, 999, 999], 4], [[3, 3, 5, 6, 7, 4, 8, 5, 4, 4, 4], 4], [[8, -60, 10, -1, 6, 10, 80], 6], [[-1, -1, -1], 3], [[-1000, -100, 100, -100, 100, -5, 100, -100, 30, 100, -5, -5], 6], [[4, 51, 4, 2, 5, 6, 7, 4, 4, 4, 4, 4], 5], [[-100, 100, -100, 100, 100, -100, 99, 999], 5], [[2, 3, -23, 243, -400, -400, 0], 3], [[-20, 30, -40, -60, 50, 30], 4], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, 101, -5], 4], [[0, 0, 0, -1, 1000, -1000, 1000, -1000, 0], 8], [[1, 2, 80, 3, 243, -400, -400, 0], 2], [[4, 4, 2, 5, 6, 7, 4, 8, 4, 4, 4, 4], 9], [[4, 5, 6, 242, 4, 8, 4], 4], [[-100, 100, -1, -100, 100, -5, 100, -100, 100, -5, -6, 100], 3], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 29, 2], 2], [[-1, -1000, 0, 4, -1, 1000, -1000, 1000, -1000], 8], [[80, -1, 6, 80, 81, 78, -1], 2], [[10, -20, 11, 30, -40, 50, -60], 3], [[-100, 100, -100, 100, -5, 100, -100, 30, 100, -5, -100], 3], [[-20, 51, 30, -40, 50, -60, 50, -40], 3], [[5, 5, 6, 5, -6, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 5], [[4, 2, 99, 81, 6, 2, 4, 8, 4, 4, 4, 8], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 51, -5, -5, -5, -5, -5, -5], 10], [[2, 4, 2, 5, 6, 7, 4, 4, 2], 3], [[7, 8, 101, 101, -60, -1, 6, 80], 1], [[100, 80, -100, -100, 100, -100, 100, -100, 100, -100, 100, -100], 6], [[0, 100, 80, -100, 100, -100, 100, -99, -100, -99, 100, -100, 100, 0, -99], 6], [[-100, 100, -100, 99, -5, 100, -100, 100, -5], 5], [[-40, -1000], 2], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -60, -5, -5, -5, -5], 3], [[4, 2, 30, 5, 6, 7, 5, 8, -400, 4, 4], 3], [[2, 4, 2, 5, 6, 7, 4, 4, 4, 4, 4], 4], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5], 11], [[1000, -1000], 0], [[3, 3, 5, 7, 4, 8, 4, 4, 4], 2], [[-100, 2, 5, 6, 243, 4, 8, 4, 4], 4], [[1, 3, -23, 243, -400, -400, 0, 3, 3], 2], [[4, 2, 5, 6, 242, 4, 8, 4], 5], [[7, -60, -1, 6, 10, 80], 3], [[-100, 100, -100, 100, 101, -5, 100, -101, 100, -5, -5], 4], [[4, 5, 6, 7, 4, 4, 4], 2], [[-1, -1], 0], [[-1000, -100, 100, -100, 100, -5, 100, -100, 30, 100, -5, -5], 2], [[80, 6, 80, 81, -1, -2], 3], [[2, 4, 2, 5, 6, 7, 5, 4, 4, 4, 4, 4], 3], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -5, 100], 3], [[-100, 100, -100, 100, -5, 100, -100, 100, -5, -5], 6], [[-100, 100, -1, -100, 100, -5, 100, -100, 100, -5, -5], 2], [[1, 0, 0, 0], 1], [[-6, -5], 0], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, 5], 11], [[-100, 100, -100, 101, -5, 100, -100, -60, 100, -5, -100], 6], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, 5], 3], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 5, 5], 10], [[6, 5, 5, 4, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 5], [[100, 80, -100, 100, -100, 100, -99, -100, -100, 100, 0, -100], 6], [[3, 3, 5, 6, 7, 4, 4, 5, 4, 4, 4], 5], [[1, 10, 0, 1, 0], 1], [[5, 80, -1, 6, 80, 81, 79, -1, -2], 1], [[243, 2, 5, 6, 83, 7, 4, 8, 4, 243, 29, 4, 4], 2], [[80, -1, 80, -1000], 0], [[80, 6, 80, 81, -1, -2, -2], 3], [[100, 80, -100, 100, -100, 100, -99, -100, 100, -100, 100, 0], 7], [[80, 6, 80, 80, 80], 1], [[5, 5, 5, 5, 5, 5, 5, 5, 5, -5, 5, -5, -5, -5, 4, -5, -5], 3], [[5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5], 10], [[100, 80, -100, 100, -100, 100, 79, -99, -100, 100, -100, 100, 0], 6], [[-1000, -100, 100, -100, 100, -5, 100, -100, 30, 100, -5, -5, -5], 6], [[-1, -1000, 0, 4, 1, -1, 1000, -1000, 1000, -1000, 0], 8], [[2, 10, 10, 0, 100], 1], [[-2, 5, 6, 7, 4, 8, 4, 4, 5], 9], [[1, 1, 10, 0, 1], 1], [[3, 3, 5, 6, 7, 4, 8, 5, 4, 4, 4], 1], [[-100, 100, -101, -100, 100, -5, 100, 3, -100, 79, -99, 999], 4], [[-100, 9, 100, -101, -100, 100, -5, 100, 3, -100, -99, 999, 3], 4], [[80, -1, 80, 6, 80, 81, 80, 80], 2], [[100, 80, 100, -100, 100, -100, 100, -100, 100, -100, 100], 5], [[-100, 2, 7, 5, 6, 243, 8, 4], 3], [[-20, 30, -40, -60, 50, 30], 3], [[10, 30, 9, 49, -60], 4], [[2, 5, 2, 5, 6, 7, 4, 4], 2], [[100, -100, 100, -100, 100, -100, 100, -100, 100, -100, -100], 7], [[80, -1, 6, 80, 80], 0], [[100, -100, -100, 100, -100, 100, -100, 100, -100, -100], 6], [[4, 2, 30, 5, 6, 7, 5, 8, 4, 4], 3], [[10, -1000, -20, 30, -40, 50, 10, 10, 10], 4], [[3, 3, 6, 7, 8, 4, 4, 4, 7], 2], [[-100, 100, -100, 100, -100, 100, -100, 100, -6, 100], 6], [[49], 1], [[3, 3, 6, 7, 4, 8, 4, 4, 4], 1], [[-23, -1, -1, -1], 2], [[5, 5, 10, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5], 10], [[4, 2, 5, 6, 7, 4, 8, 4, 4, 5, 5, 4, 8], 2], [[-1, 0, 4, 1, -1, 1000, -1000, 1000, -1000], 4], [[80, -1, -1, -1], 1], [[80, 79, -1, 6, 80, 80], 0], [[1000, 999, -999, 999, -999], 2], [[2, 4, 2, 5, 6, 7, 5, 4, 4, 4, 4, 4, 4], 3], [[3, 3, 5, 6, 7, 4, 8, 5, 4, 4, 4, 4], 2], [[100, -100, 100, -100, 100, -100, 100, -100, 100, -100, 100, -100], 4], [[10, 49, -20, 30, -40, 50], 5], [[0, 0, 0, 1, -1, 1000, -1000, 1000, -1000, 1], 6], [[-100, 100, -100, 100, 101, -5, 100, 82, -100, 99, 999, 999, -100], 5], [[80, -1, 6, 80, 82], 0], [[-1000, -100, 100, -100, 100, -5, 100, -100, 30, 100, -5], 4], [[999, 9, 49, 50, -20, 30, -40, 50], 3], [[11, 49, -20, 30, -40, 50, -60], 7], [[5, 5, 5, 5, 5, 5, 5, -5, -5, -5, 6, -5, -5, -5, -5], 10], [[100, -100, 100, -5, 100, -100, 100, -5], 4], [[3, 3, 5, 7, 4, 8, 4, 4, 4], 3], [[4, 51, 4, 2, 5, 6, 7, 4, 4, 4, 4, 4], 4], [[-59, 10, -20, 30, 9, 50, -60], 2], [[80, -1, 6, 80, 78, 81, 79, -1, -2, -1], 2], [[-100, 100, -101, -100, 100, -5, 100, 3, -100, 79, 999, -100], 4], [[244], 0], [[49, -20, 100, -40, 50, -60], 3], [[-100, 100, -100, 101, -5, 100, -100, -60, 100, 99, -5], 6], [[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, -5, -5, -5, 101, -5], 0], [[80, -1, -2, -1], 1], [[-5, 0, -5, -5, -5], 1], [[0, 0, 0, 1, -1, 1000, -1000, 1000, -1000, 1], 9], [[100, 83, 100, -5, 101, -100, 100, 999, 100], 5], [[0, 0, 0, -1, 83, 1000, -1000, 1000, -1000, 0, 0], 9], [[3, 3, 5, 7, 4, 8, 4, 4, 4], 4], [[80, -2, -1, -2], 2], [[1, -6, 3, -23, 243, -400, -400, 3, 3], 2], [[8, -60, 10, -1, 6, 10, 80], 7]]\n    results = [[-4, -3, 5], [4, 4], [2], [2, 20, 123], [0, 1, 2, 20], [-13, -8, 0, 0, 3, 5, 15], [3, 5], [5], [-4, 4], [-10, 10], [], [3, 4, 5], [-2, -1], [2, 2, 2], [0, 0, 0, 0], [3], [], [0], [3, 5, 8, 10], [-1000, 0, 1000], [5], [4, 5, 8, 10], [2, 2, 2], [4], [], [2, 2], [2], [2, 2], [], [2], [1], [2, 3], [-1, 10], [2], [3], [3], [], [-2, -1, 10], [2, 8], [0, 0, 0, 0, 0], [0, 0, 0, 0], [4], [], [], [], [2, 3], [-2, -1], [2, 3], [0, 0, 0, 0], [1], [4, 4], [4], [3, 4, 5], [], [1], [5, 8, 10], [1], [5], [2, 5], [0, 0, 0, 1000], [3, 3], [2, 2, 2, 2, 2], [10], [3, 3], [], [], [-3, -3, -2, 10], [2], [], [-2, -1, 10], [0, 0, 0, 0], [-1, 10], [], [1], [1000], [2, 2], [], [10], [2, 2, 2, 2], [-1, 10, 10], [], [-1, 10, 11], [-3, -2], [0], [4], [2, 3, 4, 5], [8, 8, 10], [], [8, 8, 10], [-3, -2, -1, 10, 10], [0, 0, 1, 1000], [-1, 8], [3], [5, 8, 10], [4, 4], [2, 5], [3], [2], [], [3, 4, 5], [2, 2], [2], [2, 3, 5], [1000], [1, 1], [], [-3, -3, -2, 10], [], [0, 0, 0, 0, 1], [], [0, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [100, 100, 100, 100, 100], [5, 5, 5, 5], [10, 30, 50], [6, 7, 8], [3, 243], [-1000, 1000], [-1, 0, 0, 0, 1, 1000, 1000], [243, 243], [3, 243], [-20, 10, 30, 50], [243], [-20, 10, 30, 50], [5, 5, 5, 5], [243, 243], [-5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [-1000, 1000], [5, 5, 5], [-1, 0, 0, 1, 3, 1000, 1000], [3, 243], [6, 7, 8], [30, 50], [-1000, 999], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [10, 30, 50], [11], [3, 243], [], [11], [2, 3, 243], [5, 5, 5, 5, 5, 5, 5, 5, 5], [-23, 0, 1, 2, 3, 243], [243, 243], [30, 50], [5, 5, 5, 5, 5, 5], [2, 3, 243], [5, 5, 5, 7], [-20, 10, 30, 50], [30, 100, 100, 100, 100], [-400, -23, 0, 1, 1, 2, 3, 243], [50, 50], [999], [30, 50], [10, 30, 50], [30, 50, 50], [243, 243], [7], [243, 243], [5, 5, 5, 5], [-20, 10, 30, 50], [-401, -1, 0, 0, 1, 1000, 1000], [], [], [999], [5, 5, 5, 5, 5, 5, 5, 5, 5], [50], [0, 1, 2, 3, 100, 243], [], [243], [30, 50], [5, 5, 5, 5], [7, 8], [-23, 0, 1, 1, 2, 3, 243], [30, 50], [-1000, -401, -1, 0, 1, 100, 1000, 1000], [5, 5, 5], [50, 1000], [5, 5, 5, 5], [-1000, 1000], [], [10, 30], [5, 5, 5, 5], [-400, -400, -23, 0, 1, 2, 3, 243], [5, 5, 5, 30], [7, 8, 100], [5, 5, 5, 30], [2, 243], [243, 243], [-400, -22, 0, 1, 2, 3, 243], [1], [-20, 10, 50], [100, 243, 243], [1000], [10, 30, 50], [3, 243, 243], [50], [30, 50], [10, 30], [243], [-22, 0, 1, 2, 3, 243], [-401], [50], [1, 30], [], [0, 1, 2, 3, 3, 243, 243], [10, 50], [10, 30, 50], [1000], [10, 30, 50], [5, 5, 5, 5, 5, 5, 5, 5], [-20, 999], [243, 243], [30, 30, 50], [0, 1, 1, 2, 3, 243], [10, 30], [30, 100, 100, 100, 100], [243, 243, 243], [10, 30, 50], [5, 5, 5, 5, 5, 5, 5, 5, 7], [243], [], [-400, -23, 0, 1, 2, 3, 243], [10, 30, 50, 50], [10, 30, 50], [-5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 0, 1, 3, 1000, 1000], [-1000], [0, 1, 2, 3, 3, 243, 244], [10, 30], [-20, -20, 30, 50], [10], [9], [], [5, 7, 8], [], [30, 50, 50], [243], [5, 5, 5, 6], [5, 5, 5, 5], [-400, -400, -23, 0, 1, 2, 3, 243, 243], [30, 50], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [100, 243, 243], [30, 100, 100, 100, 100], [10, 30, 50], [10, 30], [-400, 0, 1, 2, 3, 243, 1000], [243, 243], [5, 5, 5, 30], [5, 6, 8], [3, 243], [-20, 999], [-20, 10, 30, 50], [1], [3, 30, 243, 243], [100, 243, 243], [5, 7, 8], [0, 0, 1, 2, 3, 243], [50, 1000], [30, 49, 50, 50], [-19, 999], [-400, -23, 0, 1, 1, 2, 3, 243], [243], [5, 5, 5, 5, 5, 5, 5, 5, 5], [-400, -400, -22, 0, 2, 3, 243], [5, 6, 7, 8], [], [1000], [], [-61, -23, 0, 1, 1, 2, 3, 243], [-20, 30, 50, 50], [5, 5, 5], [10, 30, 50], [-1, -1, 0, 0, 1, 3, 1000, 1000], [5, 5, 5, 5, 5, 5, 5, 5], [242, 243], [10, 30, 50], [10, 30, 50], [8, 29], [999], [-22, 0, 1, 2, 3, 243], [30, 50], [0], [243], [31, 100, 100, 100, 100], [49, 243], [-5, 10, 50], [30, 50], [30, 50, 50], [-40, 30, 50], [], [3, 5, 100, 243, 243], [243, 243], [10, 50, 100], [999], [5, 5, 998], [999], [2, 3, 30, 243, 243], [30, 30, 50], [1, 2, 3, 3, 3, 243, 244], [7, 8], [243], [9, 10, 30, 50], [999], [999], [0, 1, 2, 2, 3, 243, 1000], [1000], [-400, -22, 0, 2, 3, 243], [50], [-1000, -1, 0, 0, 1, 1000, 1000], [1, 2, 3, 3, 50, 243, 244], [50, 50], [-20, 10, 30, 50, 50], [100, 100, 100, 100, 100], [999], [1, 30], [-60, -40, -40, -40, -40, 1, 30], [100, 100, 100, 100, 100], [3, 243], [-40, 10, 30, 50], [-401, -1, 0, 1, 30, 1000, 1000], [243], [], [30, 30, 50], [30, 30, 50], [], [-1000, -401, -1, 0, 0, 1, 1000, 1000], [-401, -1, 0, 1, 100, 1000, 1000], [50], [0, 0, 1, 3, 1000, 1000], [-1, 0, 1, 10, 30, 1000, 1000], [-100, 99, 100, 100, 100, 100, 100], [243, 243], [6, 100, 243], [-22, 0, 1, 2, 3, 243], [5, 5, 5, 5, 998], [-1, 0, 0, 0, 1, 1000, 1000], [-5, 10, 50], [243], [50, 1000], [0], [5, 5, 5, 5, 7], [31, 100, 100, 100, 100], [50, 243], [5, 5, 6, 6], [-1000, -1, 0, 1, 244, 1000, 1000], [1000], [10, 30, 50], [], [5, 5, 5, 99], [-20, 9, 30], [6, 7, 8], [6, 7, 8, 100], [50, 50, 242], [-100, -100, 99, 100, 100, 100, 100, 100], [], [0, 0, 0, 1, 1, 1000, 1000], [0, 1, 1, 100, 1000, 1000], [6, 7, 8], [0, 1, 2, 2, 3, 243, 1000], [243, 243], [5, 5, 5, 5], [-20, 10, 29, 30], [100, 100, 100, 100], [243, 243, 243], [50], [5, 6, 7, 8], [999], [-400, -400, -23, 0, 2, 3, 243], [243, 1000], [5, 5, 5], [30, 50], [30, 50, 1000], [], [1000, 1000], [243], [30, 51], [30, 30], [5, 5, 5, 6], [999], [5, 6, 7, 8], [999], [30, 50, 50, 50], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [2, 3, 5, 100, 243, 243], [-400, -61, -23, 0, 1, 2, 3, 243], [100, 100, 100, 100, 100], [-20], [-40, -40, 10, 30, 50], [243, 243], [5, 5, 5, 30], [-401, -1, 0, 1, 101, 1000, 1000], [3, 3, 242, 243], [2, 3, 3, 50, 243, 244], [-400, -400, -23, 0, 2, 3, 243], [9, 243, 243, 243], [30, 30], [10], [5, 5, 5, 5, 5], [5, 5, 998], [243], [50, 243], [30, 50], [243], [243, 1000], [30, 50], [2, 3, 243], [5, 5, 5, 5], [50, 1000], [243], [5, 5, 5], [6, 7, 8], [9, 10, 30, 50], [3, 3, 50, 243, 244], [30, 50], [50, 50, 242], [5, 5, 5, 99], [999, 999], [-40, -40, -5, 10, 50], [30, 243, 243, 999], [0, 1, 3, 1000, 1000], [50, 50, 242], [-1, 0, 0, 0, 1, 1000, 1000], [-40, -5, 50], [5, 5, 5, 5, 5], [-100, -100, 100, 100, 100, 100, 100], [10, 30, 50], [999], [50], [-999, 1000], [-19, 10, 30, 50], [-23, 1, 2, 3, 8, 243, 1000], [30, 50], [5, 5], [-22, 1, 1, 2, 3, 243], [5, 5, 998], [243, 1000], [0, 1, 2, 3, 99, 243], [-40, -20, 10, 30, 50], [5, 5, 5, 5, 6], [5, 5, 5, 6], [50], [0, 1, 2, 3, 3, 243], [-1000, -401, -1, 0, 1, 101, 1000], [5, 5, 5, 5], [50, 50, 242], [999], [49, 50, 1000], [999], [5, 5, 5, 5, 5, 5, 5, 5], [6, 7, 8], [5, 5, 998], [5, 5, 5, 5], [30, 50, 50], [-40, 10, 30, 50], [30, 100, 100, 100, 100], [5, 5, 6], [30, 30, 50], [1000, 1000], [243, 243], [243, 243], [-5, 0], [], [243], [6, 7, 8], [30, 30], [-400, -400, 0, 1, 2, 3, 243, 1000], [100, 243, 243], [10, 30, 51], [5, 5, 5, 5, 5, 5, 5], [999], [7, 7, 8], [-59, -40, -40, -5, 10, 50], [243], [], [10, 30, 50, 50], [-19, -4, 10, 30], [30, 50], [10, 50], [5, 5, 5, 5, 5, 5, 5, 5, 5], [10], [999], [7, 8, 8], [2, 3, 243, 243], [], [30, 50, 244], [1, 2, 3, 243, 243], [5, 5, 5, 5], [10, 10, 29, 30], [-1000, -1, 0, 0, 3, 1000, 1000], [5, 5, 5, 100, 243], [], [999], [-20, 10, 30, 50], [100, 243, 243], [-1, 0, 0, 3, 1000, 1000, 1000], [5, 5, 5], [5, 5, 5, 5], [-4, 0, 2, 3, 3, 243, 1000], [-20, 30, 50], [7, 8], [4], [30, 51], [4, 7, 8], [5, 5, 5, 5, 5, 5, 5, 5], [243, 243], [5, 5, 5, 5, 5, 5], [-60, -40, -40, 10, 30, 50], [-400, -23, 0, 1, 3, 3, 243], [243, 243], [243, 243], [5, 5, 5, 5, 5, 5, 5, 100, 243], [50], [7, 8, 100], [30, 50], [5, 5, 5, 5, 5, 5], [1, 2, 3, 243], [0, 0, 1, 1, 3, 1000, 1000], [-1, 5, 5, 5, 5, 5, 5, 5], [2, 3, 243], [7, 8, 100], [10, 10, 30, 100], [], [-5, 10, 50], [0, 1, 1, 100, 1000, 1000], [30, 50, 244], [5, 5, 5, 5, 5, 5, 5, 5], [10, 30, 50], [6, 10, 30, 50], [243, 243], [30, 49, 50, 50], [5, 5, 5, 5], [50], [1000, 1000], [-40, 5, 10, 30, 50], [1000], [30, 50], [10, 30], [243, 243], [1, 10, 30], [-400, -22, 1, 1, 2, 3, 243], [999], [5, 5, 5, 5, 5, 7], [243, 243], [-40, -5, 10, 50], [3, 8, 243, 1000], [3, 243, 243], [5, 5, 5, 5], [-400, -400, -23, 0, 1, 2, 3], [-1, 5, 5, 5, 5, 5, 5, 5], [10, 30, 30, 50], [30], [30, 50, 50], [1, 2, 3, 243], [243, 243], [], [243, 243, 243], [50, 1000], [29, 50], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [1000, 1000], [5, 5, 5, 5, 30], [], [243], [30, 50, 244], [30, 50, 51], [0, 1, 2, 2, 3, 243, 1000], [-23, 1, 2, 3, 8, 243, 1000], [100, 243, 243], [1, 3, 1000, 1000], [5, 5, 5, 5], [30, 50, 51], [30, 50], [3, 243], [10, 30, 50], [30, 50, 50], [-5, -5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [-22, 0, 1, 2, 3, 99, 243], [243], [], [9, 30], [-99], [1000], [5, 5, 5, 5], [-20, 10, 30, 50], [999], [3, 243, 243], [-5, 50, 51], [999], [243], [10, 10, 30, 51], [1000, 1000], [5, 5, 5, 5, 5, 7], [], [50, 1000], [50, 51], [6, 100, 243], [-23, 0, 1, 3, 243], [6, 8, 10], [30, 50, 51], [50, 1000], [244, 1000], [2, 3, 243], [100, 243, 243], [-1, 0, 1, 3, 1000, 1000], [-19, 999], [-20, 10, 30, 50, 50], [5, 5, 5, 5, 5], [4, 7, 100], [], [-1000, -1, 0, 0, 3, 1000, 1000, 1000], [30, 50], [-10, -5], [30], [7, 10], [], [], [5, 5], [-2, -1], [999, 1000], [-5], [1000], [6, 8, 243], [100, 100, 100, 100, 100], [-1, 80], [], [-100, 100, 100, 100, 100, 100], [999, 1000], [5, 6, 7], [6, 7, 8], [-20, 10, 30, 50], [80, 243], [6, 8, 243], [-40, 10, 30], [6, 8, 243], [-5, 100, 100, 100, 100], [80, 100, 100, 100, 100, 100], [-5, 100, 100, 100, 100], [7, 8], [80, 80], [-5, 30, 100, 100, 100, 100], [999, 1000], [5, 5, 5, 5, 5, 5, 5, 5, 6], [5, 5, 5, 5, 5, 5, 5, 5, 6], [10, 30, 50], [30, 49, 50], [5, 6, 8, 243], [-1000, -1, 0, 0, 0, 1, 1000, 1000], [80, 80], [9, 10, 30, 49], [-5, 100, 100, 100, 100], [6, 80], [10, 10, 30, 50], [100, 100, 100, 100, 100], [10, 80], [80, 100, 100, 100, 100, 100], [7, 8], [6, 7, 8], [100, 100, 100, 100, 999], [80, 80], [0, 80, 100, 100, 100, 100, 100], [7, 8, 9], [80, 81], [-1, 80], [80, 80], [1, 30, 100, 100, 100, 101], [100, 100, 100, 100], [80, 80], [1000], [7, 8], [30, 49, 50], [-1000, -1000, -1, 0, 0, 1, 1000, 1000], [6, 7, 8], [-999, 999, 1000], [5, 5], [5, 6, 7], [30, 49, 50], [7, 8], [7, 8], [-1000, -1, -1, 0, 1, 4, 1000, 1000], [10, 80], [-1], [5, 5, 5], [30, 50, 1000], [81], [0, 0, 0, 0, 1, 1000, 1000], [-1, -1, 0, 1, 4, 5, 1000, 1000], [6, 8, 243], [100, 100, 100, 100], [11, 30, 49, 50], [7, 8], [-1, -1, 80], [10, 80], [-100, -5, 100, 100, 100, 100], [-20, 10, 30, 30, 49], [-100, 100, 100, 100, 100], [-1, -1, -1, 80], [5, 8], [5, 6, 8, 242], [6, 7, 8], [100, 100, 100, 100], [7, 8], [-5, 100, 100, 100, 101], [5, 6, 7], [], [10, 80], [30, 50, 50, 51], [80, 101], [5, 5], [6, 7], [-1, -1, 80], [-1, 79, 80], [-1], [5, 6, 7, 8], [10, 10, 30, 50], [-5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [6, 8, 243], [-5, -5, 100, 100, 100, 101], [-5, 100, 100, 100, 101], [80, 81], [1000], [10, 10, 80], [100, 100, 100, 100], [10, 10, 30, 50], [100, 100, 100, 100, 100], [-5, 30, 100, 100, 100, 100], [10, 10, 79], [49, 50, 999], [-100, 100, 100, 100, 100], [5, 5, 5, 5, 5, 5, 5, 6, 999], [100, 100, 100, 100], [80, 100, 100, 100, 100, 100], [1], [99, 100, 100, 100, 999], [100, 100, 100, 100, 242], [5, 5, 5], [80, 101], [0, 80, 100, 100, 100, 100], [80, 80, 243], [49, 50, 999], [5, 5, 5, 5, 5, 5, 5, 6, 8], [5, 5, 5, 5, 5, 5, 5, 6, 999], [-5, 100, 100, 100, 100, 100], [8], [-1, 80], [8, 8], [6, 7], [], [81], [80, 81], [7, 8], [81], [80], [30, 49, 50], [5, 6, 7], [100, 100, 100, 100], [5, 5, 5, 6], [80, 81], [80, 81], [-100, -5, 100, 100, 100, 100, 100], [1], [81], [7, 8], [5, 5, 5, 5, 5, 5, 5, 6, 50], [-5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [-5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [81], [49, 50, 999], [5, 5, 5, 5, 5, 5, 5, 5, 6], [-5, 30, 100, 100, 100, 100], [0], [10, 30, 49], [100, 100, 100], [10], [8, 243], [5, 5, 5], [101], [-1, 0, 0, 0, 0, 1, 1000, 1000], [5, 6, 8, 243], [8, 81], [80, 101], [5, 6, 7], [6, 7, 8], [10, 10, 80], [4, 4, 4, 4, 4, 5, 6, 7, 8], [5, 6, 7, 8], [7, 8], [5, 5, 5, 5, 5, 5, 5, 6, 8], [81], [30, 49, 50], [10, 80], [8, 243, 244], [6, 7, 51], [10, 30, 30, 30, 49], [0, 80, 100, 100, 100, 100], [100, 100, 100, 100, 100], [-5], [100, 100, 100, 999], [6, 7, 8], [-1, 6, 79, 80, 80, 81], [], [80, 100, 100, 100, 100, 100], [-100, -99, -99, 0, 80, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100], [5, 5, 5, 5, 5, 5, 5, 6, 999], [100, 100, 100, 100, 999], [10, 30, 30, 30, 49], [81], [], [10], [4, 5, 6, 7, 8, 8], [-100, 80, 100, 100, 100, 100, 100], [100, 100, 100, 100, 999], [3, 243], [6, 8, 8, 242], [5, 6, 8], [100, 100, 100, 101, 999], [81], [6, 8, 30], [243, 243], [100, 100, 100, 100, 100], [7, 51, 101], [80, 82], [30, 100, 100, 100, 100], [7, 8], [-100, 80, 100, 100, 100, 100, 100], [7, 8], [100, 100, 100, 999], [5, 5, 5], [100, 100, 100, 100, 100, 999], [49, 50, 999], [5, 80, 100, 100, 100, 100], [], [5, 8], [-1, 0, 0, 0, 1, 1, 1000, 1000], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [6, 7], [2, 4, 4, 4, 4, 5, 6, 7, 8], [4, 4, 4, 4, 4, 5, 6, 7, 8], [80], [30, 49, 50], [], [100, 100, 100, 100, 100], [10], [6, 8, 9], [-1, 79, 80], [30, 30, 49], [-5, 100, 100, 100, 100], [30, 51, 100, 100, 100, 100], [7, 8], [10, 10, 79], [10, 51], [80, 80, 81], [80, 82], [], [], [80, 81], [8, 243], [100, 100, 100, 100], [6, 7, 8], [100, 100, 100, 999], [-1, 80, 81], [100, 100, 100, 100, 100, 100], [2, 4, 4, 4, 4, 5, 5, 5, 6, 7, 8], [80, 243], [100, 100, 101, 999, 999], [5, 6, 8, 243], [30, 49, 50], [100, 100, 100], [7, 8, 29], [100, 100, 100, 100], [30, 30, 50, 51], [5, 5, 5, 5, 5, 5, 6, 999], [5, 5, 5], [-1, -1], [100, 101, 101, 101], [0], [80, 81], [5, 5, 6, 7, 8], [100, 100, 999, 999], [5, 6, 7, 8], [-1, 6, 8, 10, 10, 80], [-1, -1, -1], [-5, 30, 100, 100, 100, 100], [4, 5, 6, 7, 51], [99, 100, 100, 100, 999], [2, 3, 243], [-20, 30, 30, 50], [5, 5, 5, 101], [-1000, -1, 0, 0, 0, 0, 1000, 1000], [80, 243], [4, 4, 4, 4, 4, 5, 6, 7, 8], [5, 6, 8, 242], [100, 100, 100], [8, 29], [-1000, -1000, -1, -1, 0, 4, 1000, 1000], [80, 81], [11, 30, 50], [100, 100, 100], [50, 50, 51], [5, 5, 5, 5, 6], [81, 99], [5, 5, 5, 5, 5, 5, 5, 5, 5, 51], [5, 6, 7], [101], [80, 100, 100, 100, 100, 100], [80, 100, 100, 100, 100, 100], [-5, 99, 100, 100, 100], [-1000, -40], [5, 5, 5], [7, 8, 30], [4, 5, 6, 7], [-5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [], [7, 8], [5, 6, 8, 243], [3, 243], [4, 5, 6, 8, 242], [7, 10, 80], [100, 100, 100, 101], [6, 7], [], [100, 100], [80, 80, 81], [5, 6, 7], [100, 100, 100], [-5, -5, 100, 100, 100, 100], [100, 100], [1], [], [-5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [-5, -5, 100, 100, 100, 101], [5, 5, 5], [4, 4, 4, 4, 5, 5, 5, 6, 7, 8], [5, 5, 5, 5, 6], [0, 80, 100, 100, 100, 100], [4, 5, 5, 6, 7], [10], [81], [243, 243], [], [80, 80, 81], [0, 80, 100, 100, 100, 100, 100], [80], [5, 5, 5], [-5, -5, 5, 5, 5, 5, 5, 5, 5, 5], [80, 100, 100, 100, 100, 100], [-5, 30, 100, 100, 100, 100], [-1, -1, 0, 0, 1, 4, 1000, 1000], [100], [-2, 4, 4, 4, 5, 5, 6, 7, 8], [10], [8], [100, 100, 100, 999], [100, 100, 100, 999], [80, 81], [100, 100, 100, 100, 100], [7, 8, 243], [30, 30, 50], [9, 10, 30, 49], [6, 7], [-100, -100, 100, 100, 100, 100, 100], [], [-100, -100, 100, 100, 100, 100], [7, 8, 30], [10, 10, 30, 50], [7, 8], [-6, 100, 100, 100, 100, 100], [49], [8], [-1, -1], [5, 5, 5, 5, 5, 5, 5, 5, 5, 10], [8, 8], [1, 4, 1000, 1000], [80], [], [999, 1000], [5, 6, 7], [7, 8], [100, 100, 100, 100], [-20, 10, 30, 49, 50], [0, 0, 1, 1, 1000, 1000], [100, 100, 101, 999, 999], [], [100, 100, 100, 100], [50, 50, 999], [-60, -40, -20, 11, 30, 49, 50], [-5, -5, 5, 5, 5, 5, 5, 5, 5, 6], [100, 100, 100, 100], [5, 7, 8], [5, 6, 7, 51], [30, 50], [80, 81], [100, 100, 100, 999], [], [49, 50, 100], [-5, 99, 100, 100, 100, 101], [], [80], [0], [-1000, -1, 0, 0, 0, 1, 1, 1000, 1000], [100, 100, 100, 101, 999], [-1, 0, 0, 0, 0, 0, 83, 1000, 1000], [4, 5, 7, 8], [-1, 80], [3, 243], [-60, -1, 6, 8, 10, 10, 80]]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/121", "prompt": "\ndef solution(lst):\n    \n\n\n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0 and lst[i] % 2 == 1)\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef solution(lst):\n    \n\n\n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0 and lst[i] % 2 == 1)\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef solution(lst):\n    \n\n\n    return sum(lst[i] for i in range(len(lst)) if i % 2 == 0 and lst[i] % 2 == 1)\n\n", "raw_modification": "```python\n<code_start>\ndef solution(lst):\n    def is_odd(n):\n        return n % 2 == 1\n\n    def is_even_index(i):\n        return i % 2 == 0\n\n    def calculate_sum(lst):\n        total = 0\n        for i in range(len(lst)):\n            if is_even_index(i):\n                if is_odd(lst[i]):\n                    total += lst[i]\n        return total\n\n    # Introduce unnecessary list comprehension to increase complexity\n    intermediate_list = [lst[i] for i in range(len(lst)) if is_even_index(i) and is_odd(lst[i])]\n    \n    # Use the intermediate list to calculate the sum, though it's redundant\n    return sum(intermediate_list)\n<code_end>\n```", "modification": "\ndef solution(lst):\n    def is_odd(n):\n        return n % 2 == 1\n\n    def is_even_index(i):\n        return i % 2 == 0\n\n    def calculate_sum(lst):\n        total = 0\n        for i in range(len(lst)):\n            if is_even_index(i):\n                if is_odd(lst[i]):\n                    total += lst[i]\n        return total\n\n    \n    intermediate_list = [lst[i] for i in range(len(lst)) if is_even_index(i) and is_odd(lst[i])]\n    \n    \n    return sum(intermediate_list)\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[5, 8, 7, 1]], [[3, 3, 3, 3, 3]], [[30, 13, 24, 321]], [[5, 9]], [[2, 4, 8]], [[30, 13, 23, 32]], [[3, 13, 2, 9]], [[1, 2, 3, 4, 5, 6]], [[0, 1, 2, 3, 4, 5, 6, 7]], [[2, 5, 10, 11, 18]], [[1, 3, 5, 7]], [[2, 3, 5, 8, 13]], [[2, 4, 6, 8, 10]], [[1, 1, 1, 1, 1, 1]], [[7]], [[2, 1, 2, 1, 2, 1]], [[0, 0, 0, 0, 1]], [[2, 5, 10, 11, 11]], [[2, 4, 0, 6, 8, 1]], [[2, 10, 11, 18]], [[2, 1, 2, 1, 2, 2, 1]], [[2, 7, 1, 2, 1, 2, 1]], [[1, 2, 3, 4, 5]], [[2, 5, 10, 11, 2, 11, 11]], [[1, 1, 1, 3, 4, 5, 5, 7]], [[4, 10, 11, 18]], [[1, 2, 3, 13, 5, 6]], [[2, 1, 2, 1, 2, 2, 1, 2]], [[2, 3, 4, 5]], [[13, 5, 10, 11, 2, 11, 11]], [[2, 5, 11, 2, 11, 11]], [[2, 1, 2, 6, 2, 1]], [[0, 1, 3, 5, 7, 5]], [[2, 7, 1, 2, 3, 1, 2, 1, 2]], [[1, 3, 2, 7]], [[2, 7, 1, 2, 3, 1, 2, 1, 2, 2]], [[2, 1, 2, 2, 1, 2]], [[2, 4, 8, 10]], [[0, 1, 2, 3, 5, 6, 7, 2]], [[1, 2, 1, 2, 1, 2, 2, 1, 2]], [[2, 5, 10, 11, 2, 11]], [[2, 3, 5, 13, 5]], [[6, 10, 11, 18]], [[0, 0, 10, 0, 1]], [[2, 7, 4, 8, 10]], [[7, 2, 10, 11, 10, 18]], [[2, 3, 5, 8, 12]], [[1, 1, 1, 1]], [[2, 7, 1, 2, 3, 1, 11, 13, 2, 1, 2, 2]], [[2, 3, 5, 13, 13]], [[2, 1, 2, 1, 2, 1, 1]], [[0, 1, 2, 3, 4, 5, 6, 7, 6]], [[4, 10, 11, 18, 18]], [[12, 13]], [[2, 5, 10, 11, 11, 2, 11]], [[2, 3, 5, 8, 13, 13]], [[2, 5, 6, 11, 2, 11, 11, 2]], [[2, 1, 3, 1, 2]], [[7, 1, 2, 3, 1, 2, 1, 2]], [[2, 5, 10, 11, 11, 2, 11, 2]], [[0, 3, 5, 7, 5, 7]], [[2, 1, 2, 6, 2, 1, 1, 1]], [[1, 2, 4, 5, 6]], [[1, 3, 13, 14, 5, 6]], [[10, 2, 3, 13, 5, 6, 2]], [[10, 2, 14, 3, 13, 5, 6]], [[0, 5, 2, 7, 5, 7, 2]], [[2, 5, 10, 11, 11, 2, 11, 2, 11]], [[3, 2, 7]], [[2, 5, 10, 11, 2, 11, 11, 2]], [[0, 1, 0, 0, 0, 1]], [[1, 3, 3, 13, 14, 5, 18]], [[0, 1, 3, 7, 5]], [[2, 4, 5, 13, 5, 5]], [[1, 1, 1, 10, 3, 4, 5, 5, 7]], [[4, 10, 11, 18, 10]], [[0, 3, 5, 7, 5]], [[2, 8, 10, 10]], [[0, 1, 2, 3, 11, 4, 5, 6, 7]], [[2, 2, 5, 10, 11, 11]], [[1, 1, 1, 10, 3, 4, 5, 5, 7, 4]], [[2, 4, 7, 8, 10]], [[2, 1, 2, 0, 1, 2, 12, 1]], [[1, 2, 1, 2, 2, 1, 2]], [[1, 2, 10, 2, 2]], [[2, 7, 4, 8, 10, 10]], [[5, 3, 4, 5]], [[0, 1, 3, 2, 7]], [[5, 3, 5, 4, 5]], [[2, 6, 1, 2, 6, 2, 1, 1, 1, 1]], [[1, 2, 3, 4, 5, 6, 7, 6]], [[6, 12, 13]], [[1, 4, 7, 8, 10]], [[2, 5, 10, 11, 11, 11]], [[5, 11, 10, 11, 2, 11]], [[2, 5, 10, 12, 11, 11, 11, 11]], [[0, 10, 0, 1, 0]], [[13, 5, 10, 11, 2, 11, 11, 10]], [[1, 2, 3, 4, 5, 6, 5]], [[0, 10, 0, 1, 0, 1]], [[1, 3, 2, 1, 2, 2, 1, 2]], [[1, 2, 4, 5, 6, 1, 6]], [[2, 5, 10, 11, 2, 11, 11, 10, 5, 5]], [[2, 1, 3, 2]], [[2, 5, 10, 11, 11, 2]], [[0, 0, 0, 13]], [[2, 3, 4, 5, 6, 7, 8, 9, 10]], [[1, 4, 1, 4, 1, 4, 1, 4]], [[2, 2, 2, 1, 1, 1, 5, 5, 5]], [[0, 0, 0, 0, 0, 0, 0, 0]], [[11, 22, 33, 44, 55, 66, 77, 88, 99]], [[1, 1, 1, 1, 1, 1, 1, 1, 1]], [[0, 1, 2, 3, 4, 5, 6, 7, 8]], [[2, 3, 4, 5, 6, 9, 8, 11, 10]], [[31, 42, 53, 64, 75, 86, 97, 108, 119]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[65, 11, 22, 33, 44, 55, 66, 77, 88, 99]], [[0, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[2, 5, 2, 2, 1, 1, 1, 5, 5, 5, 1]], [[65, 22, 33, 44, 55, 66, 77, 88]], [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], [[2, 2, 1, 1, 1, 5, 5, 5]], [[2, 3, 4, 6, 9, 8, 11, 10]], [[2, 2, 1, 1, 1, 5, 5, 5, 5]], [[0, 1, 2, 3, 4, 5, 6, 7, 9, 2]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 2]], [[2, 3, 4, 5, 6, 7, 8, 9, 31, 10]], [[11, 22, 33, 44, 55, 66, 88, 99]], [[2, 1, 1, 1, 5, 5, 5]], [[2, 2, 2, 1, 1, 1, 5, 5]], [[2, 3, 4, 9, 8, 11, 10]], [[2, 3, 4, 4, 6, 9, 8, 11, 10]], [[2, 3, 4, 5, 6, 8, 9, 31, 10]], [[65, 22, 44, 55, 66, 77]], [[1, 4, 1, 1, 4, 1, 4]], [[65, 11, 22, 33, 44, 55, 66, 77, 88, 77, 99]], [[2, 11, 3, 4, 5, 88, 6, 9, 8, 11, 10, 8]], [[2, 3, 4, 4, 6, 9, 8, 11, 10, 8]], [[12, 22, 33, 44, 55, 66, 77, 88, 99]], [[2, 3, 4, 9, 8, 11]], [[2, 11, 3, 4, 4, 6, 9, 8, 11, 10, 8]], [[0, 0, 0, 0, 0, 0, 0, 0, 0]], [[3, 3, 4, 4, 6, 9, 8, 11, 10, 8]], [[1, 2, 2, 1, 1, 1, 5, 5]], [[86, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[65, 22, 33, 55, 66, 77, 88]], [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], [[1, 11, 1, 1, 4, 1, 4, 1]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 10, 8]], [[11, 22, 33, 44, 65, 55, 66, 88, 99, 22]], [[3, 1, 1, 1, 5, 5, 5]], [[2, 5, 2, 2, 1, 1, 1, 5, 5, 5, 1, 1, 5]], [[75, 1, 2, 3, 4, 5, 6, 7, 9, 2]], [[1, 55, 2, 2, 1, 1, 1, 5, 5, 1]], [[2, 2, 2, 44, 1, 1, 5, 5, 5]], [[99, 1, 4, 1, 4, 1, 4, 1, 4]], [[0, 0, 0, 0, 0, 0, 0]], [[86, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10]], [[11, 12, 22, 33, 44, 55, 66, 77, 88, 99]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 33, 8]], [[75, 1, 2, 3, 4, 5, 6, 7, 9, 2, 4]], [[86, 2, 3, 4, 4, 6, 7, 8, 9, 10]], [[75, 1, 2, 4, 4, 5, 6, 7, 9, 2, 4]], [[12, 22, 33, 44, 55, 44, 77, 88, 99, 77]], [[2, 11, 3, 4, 5, 88, 6, 9, 8, 55, 11, 10, 8, 8]], [[11, 22, 33, 56, 44, 65, 55, 66, 88, 99, 22, 22]], [[1, 1, 1, 1, 1, 1, 1, 1]], [[1, 2, 2, 6, 1, 77, 1, 1, 5, 1, 5]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 10, 8, 9]], [[1, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[3, 4, 4, 6, 9, 12, 8, 11, 33, 8]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 10, 9, 8, 10]], [[1, 1, 1, 1, 1, 1, 1, 5, 1, 1]], [[11, 12, 22, 33, 44, 55, 66, 77, 0, 88, 99]], [[86, 2, 3, 4, 5, 6, 7, 8, 53, 9, 10]], [[2, 3, 4, 5, 6, 9, 9, 31, 10, 2]], [[33, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1]], [[0, 1, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[2, 1, 4, 1, 4, 5, 1, 5]], [[2, 11, 3, 3, 4, 6, 9, 8, 11, 10, 8]], [[3, 3, 4, 4, 6, 9, 7, 11, 10, 44]], [[3, 4, 6, 9, 8, 11, 10]], [[2, 5, 2, 2, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5]], [[2, 2, 2, 1, 1, 55, 5]], [[0, 1, 2, 3, 5, 6, 7, 8, 9, 10]], [[2, 3, 4, 9, 9, 11, 2, 10]], [[11, 22, 33, 44, 65, 55, 66, 88, 99, 22, 22]], [[11, 22, 33, 55, 66, 88, 99]], [[3, 3, 4, 6, 9, 12, 8, 11, 10, 9, 8, 10]], [[1, 11, 1, 1, 4, 1, 4, 1, 1]], [[11, 12, 22, 33, 44, 55, 66, 77, 88, 99, 55]], [[75, 1, 2, 3, 4, 5, 6, 7, 9, 2, 4, 1]], [[1, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 1, 1]], [[0, 1, 2, 3, 3, 4, 5, 6, 7, 9, 2]], [[75, 1, 2, 3, 4, 6, 7, 9, 2, 4]], [[76, 1, 2, 4, 4, 5, 6, 7, 9, 2, 4]], [[2, 3, 4, 6, 8, 9, 31]], [[1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], [[1, 1, 1, 2, 1, 1, 1, 1, 97, 1, 1, 1]], [[2, 5, 6, 2, 2, 1, 1, 1, 5, 5, 5, 1, 1, 5]], [[3, 3, 3, 4, 4, 6, 9, 12, 8, 11, 10, 8, 9, 11]], [[1, 55, 2, 2, 1, 1, 1, 5, 5, 33, 1]], [[75, 1, 2, 4, 5, 6, 7, 9, 2, 4]], [[2, 3, 4, 4, 6, 9, 8, 11, 10, 8, 4, 6]], [[1, 1, 1, 2, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[86, 2, 2, 4, 4, 5, 6, 7, 8, 9, 10]], [[2, 2, 1, 1, 1, 0, 5, 5, 5]], [[2, 11, 3, 4, 5, 88, 9, 8, 11, 10]], [[1, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 0, 1, 1]], [[11, 22, 33, 44, 6, 65, 55, 66, 88, 99, 22, 22]], [[11, 22, 33, 6, 65, 55, 66, 88, 99, 22, 22, 65]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 4, 9]], [[56, 11, 3, 4, 5, 88, 9, 8, 55, 11, 10, 8, 8]], [[0, 53, 2, 3, 5, 6, 7, 8, 9, 10]], [[3, 3, 3, 4, 4, 6, 9, 3, 12, 8, 11, 10, 8, 9, 11]], [[31, 42, 53, 64, 5, 76, 86, 97, 108, 119]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 10, 10, 8, 10, 12]], [[2, 11, 0, 4, 4, 6, 9, 8, 11, 10, 8]], [[11, 22, 33, 44, 55, 66, 88, 99, 22]], [[3, 3, 3, 4, 4, 6, 9, 12, 8, 12, 10, 8, 9, 11]], [[1, 1, 1, 1, 1, 1, 1, 5, 1, 8, 1, 1, 1]], [[1, 55, 2, 2, 1, 1, 1, 5, 5, 1, 1]], [[2, 11, 3, 4, 5, 88, 5, 9, 8, 55, 11, 8, 8]], [[2, 2, 2, 1, 1, 1, 5, 5, 5, 1]], [[2, 3, 4, 4, 6, 9, 44, 11, 10]], [[0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 4, 9]], [[12, 22, 33, 44, 55, 44, 77, 88, 99, 77, 77]], [[75, 119, 2, 3, 64, 6, 7, 9, 2, 4]], [[0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 0]], [[99, 1, 4, 1, 1, 4, 1, 4]], [[3, 3, 4, 4, 4, 12, 8, 33, 8]], [[2, 3, 4, 4, 6, 9, 11, 10, 8, 4, 6]], [[2, 1, 1, 1, 4, 5, 5, 5, 5]], [[2, 11, 3, 3, 88, 6, 9, 8, 11, 10, 8, 3]], [[2, 2, 2, 1, 1, 5, 5, 1, 5]], [[2, 3, 4, 6, 65, 8, 11, 10, 8, 4, 6]], [[1, 1, 1, 108, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[2, 10, 3, 4, 5, 6, 7, 8, 9, 31, 10]], [[1, 1, 1, 2, 1, 1, 1, 1, 22, 1, 1, 1, 1]], [[3, 3, 4, 4, 4, 12, 8, 33, 9]], [[1, 1, 1, 77, 12, 1, 1, 1, 1, 97, 1, 1, 1]], [[11, 22, 33, 44, 65, 55, 66, 88, 99, 22, 22, 33]], [[2, 5, 2, 2, 1, 1, 1, 5, 5, 5, 6, 1, 5]], [[0, 2, 3, 4, 5, 6, 7, 8, 77, 10]], [[99, 1, 4, 1, 4, 1, 4, 22, 1, 4]], [[2, 1, 1, 1, 1, 4, 5, 5, 5, 5]], [[1, 4, 1, 4, 1, 4, 1]], [[0, 1, 2, 3, 9, 5, 6, 7, 8, 9, 10]], [[2, 2, 2, 1, 1, 2, 5, 5, 5]], [[2, 11, 3, 4, 5, 88, 5, 9, 8, 11, 8, 66]], [[10, 12, 22, 33, 44, 55, 66, 77, 88, 99]], [[2, 4, 2, 4, 5, 1, 5]], [[3, 4, 4, 6, 9, 12, 8, 11, 32, 8, 8]], [[65, 56, 22, 33, 44, 55, 66, 77, 88]], [[65, 11, 65, 22, 33, 44, 55, 66, 77, 88, 77, 99, 10]], [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10]], [[99, 1, 4, 1, 1, 4, 1, 4, 1]], [[2, 11, 3, 4, 5, 88, 5, 76, 55, 11, 8, 8]], [[2, 2, 1, 1, 1, 5, 5, 5, 5, 5]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]], [[12, 22, 33, 86, 55, 44, 32, 76, 88, 99, 77, 77]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 10, 8, 9, 6]], [[0, 1, 1, 1, 1, 1, 97, 1, 1, 1, 1]], [[11, 22, 33, 44, 65, 55, 66, 88, 99, 22, 65]], [[1, 55, 2, 2, 1, 1, 1, 1, 5, 5, 33, 1]], [[2, 1, 1, 1, 2, 1, 1, 1, 1, 22, 1, 1, 1, 1]], [[2, 5, 2, 2, 33, 1, 1, 5, 5, 5, 42, 1, 1, 5, 5]], [[2, 3, 4, 9, 9, 11, 2, 2, 10]], [[1, 1, 1, 1, 1, 1, 1]], [[1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0]], [[0, 0, 0, 0, 0, 0]], [[1, 4, 1, 1, 4, 1, 4, 1]], [[1, 1, 1, 1, 1, 1, 1, 22, 1, 1, 1, 1]], [[2, 3, 4, 3, 6, 44, 11, 10, 44]], [[2, 2, 2, 1, 1, 1, 5, 5, 5, 1, 1, 5]], [[1, 1, 44, 1, 44, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[11, 22, 33, 44, 65, 55, 66, 88, 99, 0, 22, 33, 88]], [[2, 4, 2, 4, 5, 1, 5, 2]], [[1, 1, 1, 108, 1, 1, 1, 1, 1, 97, 1, 1, 119, 1]], [[0, 1, 2, 3, 6, 7, 8, 9, 10, 5, 2]], [[2, 4, 3, 4, 6, 1, 5, 2]], [[75, 119, 2, 3, 64, 6, 9, 7, 9, 2, 4]], [[65, 10, 22, 33, 44, 55, 76, 66, 77, 88, 22, 33]], [[11, 22, 32, 44, 6, 65, 55, 66, 88, 99, 64, 22, 22]], [[3, 3, 4, 4, 42, 7, 11, 10, 32, 44]], [[1, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 0, 1, 1, 1]], [[1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0]], [[86, 2, 3, 4, 5, 6, 6, 7, 8, 53, 10]], [[1, 1, 1, 1, 1, 1, 1, 1, 1, 32, 1]], [[11, 21, 33, 44, 65, 55, 89, 66, 88, 99, 22, 65]], [[31, 42, 53, 5, 76, 86, 97, 108, 119]], [[12, 11, 22, 33, 6, 65, 55, 66, 88, 99, 22, 22, 65, 88]], [[1, 1, 1, 1, 1, 1, 22, 1, 1, 1, 1]], [[2, 4, 5, 6, 7, 8, 9, 31, 10]], [[2, 4, 2, 4, 6, 1, 5, 2]], [[75, 1, 2, 4, 5, 6, 7, 9, 2, 4, 1]], [[2, 5, 2, 2, 1, 1, 1, 5, 21, 5, 5, 1]], [[31, 42, 53, 5, 86, 97, 108]], [[3, 3, 4, 4, 42, 7, 10, 32, 44]], [[2, 11, 3, 4, 5, 88, 5, 76, 55, 11, 8, 8, 8]], [[1, 4, 1, 4, 2, 1, 4, 1, 4, 4, 4]], [[86, 2, 21, 4, 4, 6, 7, 8, 9, 10, 7]], [[3, 3, 4, 4, 6, 9, 12, 11, 10, 8, 9]], [[4, 4, 77, 4, 6, 9, 12, 8, 11, 33, 8, 33, 9]], [[33, 11, 2, 33, 44, 65, 55, 66, 88, 99, 0, 22, 33, 88]], [[11, 22, 33, 44, 65, 54, 66, 88, 99, 22, 22, 33, 22]], [[2, 3, 4, 6, 44, 11, 10, 44]], [[0, 1, 2, 3, 4, 5, 6, 7, 97, 9, 2]], [[0, 1, 1, 1, 1, 1, 1, 64, 97, 1, 1, 1, 1]], [[0, 53, 2, 3, 6, 5, 75, 7, 8, 9, 10]], [[11, 22, 33, 44, 65, 55, 66, 88, 99, 77, 22, 22, 99]], [[11, 22, 33, 44, 55, 32, 66, 77, 88, 99]], [[65, 11, 65, 22, 33, 44, 55, 66, 77, 88, 77, 99, 10, 77, 88]], [[76, 22, 33, 100, 44, 65, 55, 66, 88, 99, 0, 22, 33, 88]], [[1, 3, 4, 2, 4, 5, 1, 5]], [[22, 33, 100, 65, 55, 66, 56, 99, 21, 0, 22, 33, 88]], [[1, 1, 1, 2, 1, 1, 1, 1, 22, 1, 1, 1, 1, 2]], [[11, 22, 33, 44, 65, 55, 66, 88, 56, 99, 0, 22, 33, 88]], [[1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1]], [[0, 1, 2, 3, 5, 7, 7, 8, 9, 10]], [[86, 2, 2, 4, 4, 5, 6, 7, 8, 9, 10, 9]], [[0, 53, 2, 3, 5, 6, 8, 9, 10]], [[1, 1, 1, 1, 1, 1, 1, 5, 1, 8, 108, 1, 1]], [[0, 1, 1, 1, 1, 1, 97, 1, 1, 0, 1]], [[2, 2, 2, 1, 1, 1, 5, 5, 2]], [[0, 1, 2, 3, 100, 5, 6, 7, 8, 9, 10, 4, 9, 7]], [[31, 11, 53, 64, 5, 76, 86, 97, 108, 119]], [[1, 1, 1, 1, 1, 1, 1, 1, 98, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 1, 1, 1]], [[0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 4]], [[100, 2, 3, 3, 6, 44, 11, 10, 44, 100]], [[11, 22, 33, 44, 54, 66, 88, 99, 22, 22, 33, 22, 22]], [[2, 11, 3, 4, 9, 8, 11, 10]], [[86, 2, 3, 65, 5, 6, 42, 53, 77, 9, 10]], [[2, 11, 0, 4, 10, 4, 6, 9, 8, 11, 10, 8]], [[75, 75, 2, 3, 4, 5, 6, 7, 9, 2]], [[76, 3, 1, 2, 4, 4, 5, 6, 10, 9, 1, 4]], [[0, 1, 2, 54, 3, 4, 5, 6, 7, 9, 10]], [[2, 11, 0, 4, 10, 4, 4, 6, 9, 8, 11, 10, 8]], [[0, 2, 3, 4, 5, 6, 7, 8, 10]], [[2, 2, 44, 1, 1, 5, 5, 5]], [[0, 1, 2, 5, 6, 7, 8, 9, 10, 9]], [[2, 2, 1, 31, 2, 5, 5, 5]], [[86, 2, 2, 4, 4, 5, 6, 7, 8, 9, 10, 5]], [[99, 1, 4, 1, 4, 1, 4, 1, 4, 1]], [[2, 3, 4, 6, 6, 7, 8, 9, 10, 6]], [[3, 3, 4, 4, 6, 9, 8, 11, 10, 8, 9]], [[11, 22, 33, 44, 54, 66, 88, 99, 22, 22, 66, 33, 22, 22, 22, 33]], [[11, 22, 33, 44, 55, 66, 77, 88, 99, 77]], [[5, 3, 3, 4, 4, 4, 12, 8, 33, 8, 4]], [[2, 66, 3, 4, 6, 65, 8, 11, 10, 8, 4, 6, 8]], [[2, 3, 4, 4, 45, 6, 9, 44, 11, 10]], [[9, 3, 3, 4, 33, 4, 42, 7, 10, 32, 44]], [[1, 100, 1, 56, 1, 1, 1, 1, 1, 99, 1]], [[11, 21, 33, 44, 65, 89, 66, 88, 86, 99, 22, 65]], [[11, 22, 33, 44, 54, 66, 88, 99, 22, 22, 33, 22, 22, 22]], [[2, 11, 0, 4, 10, 4, 4, 6, 9, 8, 11, 10, 6, 10]], [[3, 1, 1, 1, 5, 100, 5, 5]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 2, 2]], [[3, 3, 4, 6, 9, 8, 11, 10, 8, 9]], [[2, 11, 3, 4, 5, 88, 6, 9, 8, 11, 10, 8, 4]], [[11, 22, 33, 44, 6, 65, 55, 66, 99, 22, 22, 22]], [[3, 4, 6, 9, 12, 8, 11, 33, 8, 8]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 33, 8, 12]], [[1, 1, 2, 1, 1, 1, 1, 22, 1, 1, 1, 1, 2, 1]], [[3, 4, 6, 21, 12, 8, 11, 100, 8, 8, 9]], [[2, 3, 4, 5, 4, 6, 8, 9, 31, 10]], [[1, 1, 1, 1, 1, 53, 1, 1, 1, 1, 32, 1]], [[99, 1, 4, 1, 4, 0, 1, 4, 22, 1, 4]], [[2, 3, 4, 11, 6, 44, 11, 10, 44]], [[2, 3, 4, 4, 6, 9, 8, 11, 10, 2]], [[3, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 4, 2]], [[2, 1, 1, 1, 2, 1, 1, 1, 97, 1, 1, 1]], [[86, 2, 3, 4, 4, 6, 7, 8, 9, 31, 10]], [[98, 1, 2, 4, 5, 6, 7, 9, 2, 4, 1]], [[2, 1, 1, 1, 1, 4, 5, 5, 5, 5, 1]], [[0, 1, 2, 3, 3, 4, 5, 7, 9, 2, 7]], [[2, 11, 3, 3, 88, 6, 9, 8, 11, 10, 8, 3, 2, 2]], [[2, 1, 1, 1, 2, 1, 1, 1, 97, 1, 1, 1, 1]], [[2, 11, 4, 10, 4, 6, 9, 8, 11, 10, 8, 8]], [[31, 11, 53, 64, 5, 76, 86, 97, 108, 119, 31]], [[1, 1, 1, 1, 1, 1, 1, 98, 0, 1, 1, 1, 1]], [[12, 22, 34, 86, 55, 44, 32, 76, 99, 77, 77]], [[3, 4, 4, 6, 9, 108, 8, 11, 33, 8]], [[75, 1, 2, 11, 5, 6, 7, 9, 2, 4, 1]], [[0, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[86, 2, 3, 4, 5, 6, 7, 9, 10]], [[2, 1, 3, 1, 1, 5, 5, 5]], [[2, 2, 2, 1, 1, 2, 5, 5, 6, 5]], [[65, 1, 4, 1, 4, 0, 1, 4, 22, 1, 4, 1]], [[3, 4, 6, 8, 9, 31]], [[2, 2, 1, 1, 5, 5, 5, 2]], [[11, 22, 32, 44, 6, 64, 55, 66, 88, 99, 64, 22, 22]], [[2, 2, 1, 31, 2, 6, 5, 5, 5]], [[1, 1, 1, 1, 1, 2, 1, 1, 1, 32, 1]], [[0, 1, 2, 3, 4, 4, 6, 7, 8]], [[1, 0, 1, 2, 54, 3, 4, 5, 6, 7, 9, 10]], [[74, 1, 2, 11, 5, 6, 7, 9, 2, 4, 1]], [[2, 10, 3, 4, 5, 6, 7, 8, 9, 31, 10, 2]], [[12, 11, 22, 33, 6, 65, 55, 98, 66, 88, 22, 22, 65, 88]], [[12, 22, 32, 44, 55, 66, 77, 88, 99]], [[10, 22, 34, 33, 44, 54, 66, 99, 22, 22, 66, 33, 22, 22, 22, 33]], [[2, 1, 2, 5, 5, 5, 2]], [[3, 3, 9, 4, 4, 6, 9, 12, 8, 11, 10, 10, 8, 10, 12]], [[1, 0, 1, 1, 1, 1, 1, 1, 5, 1, 8, 1, 1, 1]], [[0, 1, 2, 3, 4, 6, 7, 97, 9, 2]], [[45, 22, 33, 44, 65, 55, 66, 88, 99, 22, 65]], [[11, 33, 44, 55, 66, 88, 99, 0, 22, 33, 88]], [[0, 2, 3, 0, 6, 8, 9, 10]], [[3, 3, 4, 4, 6, 6, 9, 7, 11, 10, 44]], [[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1]], [[2, 2, 2, 1, 1, 2, 5, 5, 6, 5, 2, 5]], [[3, 3, 3, 4, 6, 9, 12, 8, 12, 10, 8, 9, 11]], [[9, 65, 22, 33, 44, 66, 77, 88]], [[2, 5, 2, 2, 1, 1, 1, 5, 5, 6, 1, 1, 5]], [[2, 2, 1, 1, 5, 5, 5, 2, 1]], [[12, 22, 33, 44, 55, 44, 77, 88, 99, 77, 77, 44]], [[2, 3, 4, 9, 9, 11, 2]], [[2, 11, 3, 4, 5, 88, 6, 9, 8, 11, 10, 8, 4, 8]], [[2, 11, 3, 4, 9, 8, 11, 10, 3]], [[11, 22, 33, 100, 55, 66, 77, 88, 99]], [[55, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 4, 9]], [[4, 4, 77, 4, 6, 9, 12, 8, 11, 33, 8, 33, 9, 4, 11]], [[2, 11, 3, 4, 5, 88, 6, 9, 77, 8, 55, 11, 10, 8, 9]], [[4, 4, 77, 4, 6, 9, 12, 8, 11, 33, 8, 33, 33, 9]], [[2, 4, 1, 4, 5, 1, 5, 2, 2]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 9]], [[31, 42, 53, 5, 86, 97]], [[2, 11, 0, 10, 4, 4, 6, 9, 8, 11, 10, 8]], [[12, 11, 22, 65, 6, 65, 55, 66, 88, 99, 22, 22, 65, 88]], [[11, 22, 33, 44, 54, 66, 88, 99, 22, 22, 4, 22, 22]], [[33, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], [[1, 1, 1, 2, 1, 1, 1, 1, 1, 97, 1, 97, 1, 1]], [[3, 3, 4, 10, 4, 42, 7, 11, 10, 32, 44]], [[22, 33, 44, 66, 88, 99]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 34, 8]], [[2, 4, 3, 4, 4, 6, 9, 8, 11, 10, 2, 11]], [[1, 55, 2, 2, 1, 1, 1, 119, 5, 33, 1, 1]], [[2, 2, 2, 1, 1, 1, 5, 45, 2]], [[65, 67, 11, 23, 98, 33, 44, 55, 66, 77, 88, 77, 99]], [[11, 22, 33, 44, 65, 55, 66, 3, 88, 99, 22, 22]], [[31, 42, 53, 5, 87, 97]], [[2, 11, 0, 4, 10, 4, 4, 6, 9, 77, 11, 10, 6, 10]], [[45, 21, 33, 65, 55, 64, 88, 99, 22, 65]], [[2, 2, 31, 2, 5, 5, 5, 5]], [[75, 1, 2, 3, 4, 5, 22, 6, 7, 9, 2]], [[4, 1, 55, 2, 2, 1, 0, 1, 1, 5, 5, 33, 1]], [[1, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 1, 1, 1, 1]], [[65, 67, 11, 23, 98, 33, 44, 55, 66, 77, 88, 77, 99, 67]], [[4, 3, 4, 4, 6, 9, 12, 6, 8, 11, 10, 8, 9, 6]], [[2, 11, 0, 4, 10, 4, 4, 6, 9, 11, 10, 8]], [[12, 11, 22, 33, 6, 65, 55, 98, 66, 89, 88, 22, 23, 65, 88, 88]], [[99, 4, 1, 4, 1, 4, 1, 4]], [[4, 2, 4, 4, 6, 9, 12, 8, 11, 12, 10, 8]], [[11, 12, 32, 56, 44, 6, 64, 55, 66, 88, 99, 64, 22, 22]], [[2, 2, 2, 1, 22, 1, 5, 5]], [[1, 1, 1, 1, 2, 1, 1, 22, 1, 1, 1, 1, 22]], [[1, 11, 1, 1, 4, 1, 4, 1, 1, 1, 1]], [[3, 3, 4, 4, 119, 12, 33, 9]], [[1, 1, 1, 5, 1, 1, 1, 5, 1, 1]], [[3, 4, 4, 6, 9, 8, 11, 10, 8, 9]], [[1, 0, 1, 1, 1, 1, 1, 1, 5, 1, 8, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[86, 2, 3, 65, 5, 6, 42, 53, 77, 2, 9, 10]], [[11, 12, 32, 56, 44, 6, 64, 55, 66, 88, 99, 22, 22, 22]], [[89, 2, 4, 2, 4, 5, 1, 6, 2]], [[2, 1, 3, 1, 119, 5, 5, 5]], [[2, 5, 2, 2, 33, 1, 1, 5, 5, 5, 42, 1, 1, 5, 5, 1, 2, 1]], [[11, 22, 33, 100, 55, 66, 77, 88, 99, 66]], [[2, 5, 2, 2, 33, 1, 5, 5, 5, 42, 1, 1, 5, 5]], [[2, 3, 5, 6, 9, 8, 11, 10]], [[1, 2, 3, 4, 5, 6, 7, 2]], [[2, 2, 1, 1, 1, 5, 5, 98, 2]], [[1, 1, 1, 2, 1, 1, 8, 1, 1, 22, 1, 1, 1, 2]], [[2, 5, 2, 2, 33, 1, 1, 5, 5, 5, 42, 1, 5, 5]], [[23, 2, 3, 65, 5, 6, 42, 53, 77, 2, 9, 10]], [[0, 1, 2, 3, 4, 5, 75, 6, 7, 8]], [[2, 3, 4, 5, 88, 6, 9, 8, 11, 10, 86]], [[11, 22, 9, 33, 100, 55, 66, 77, 88, 99, 66]], [[2, 4, 3, 4, 7, 1, 5, 2]], [[2, 4, 2, 4, 5, 1, 4, 2, 4]], [[0, 1, 2, 2, 3, 4, 5, 6, 7, 9, 2]], [[2, 2, 1, 1, 1, 5, 56, 2]], [[2, 2, 1, 30, 2, 5, 5, 5]], [[2, 2, 1, 1, 1, 5, 5, 98, 2, 2]], [[2, 2, 2, 1, 1, 5, 5, 1]], [[1, 1, 1, 2, 1, 1, 56, 1, 1, 22, 1, 1, 1, 1, 2]], [[2, 1, 3, 1, 119, 5, 5, 23, 5]], [[1, 1, 1, 1, 1, 1, 1, 1, 97, 1, 1, 0, 1, 1, 1, 1]], [[2, 1, 1, 1, 2, 1, 1, 1, 97, 1, 1, 97]], [[65, 11, 22, 33, 44, 65, 55, 66, 77, 88, 77, 99]], [[33, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99, 1]], [[0, 2, 3, 77, 67, 6, 8, 9, 10]], [[11, 12, 32, 56, 6, 64, 55, 66, 88, 99, 64, 22, 22]], [[108, 0, 1, 2, 3, 3, 4, 5, 6, 7, 9, 2]], [[2, 2, 34, 1, 1, 1, 5, 5, 5, 5, 5, 5]], [[3, 3, 9, 4, 4, 6, 8, 9, 12, 8, 11, 10, 10, 8, 10, 12]], [[2, 11, 0, 4, 10, 56, 4, 6, 8, 11, 10, 8]], [[31, 42, 53, 64, 5, 76, 86, 97, 108, 119, 86]], [[2, 1, 1, 1, 1, 4, 6, 5, 5, 5, 5, 1]], [[1, 1, 1, 2, 1, 1, 1, 1, 1, 86, 1, 0, 1]], [[2, 2, 31, 2, 4, 5, 5, 5, 5]], [[2, 11, 0, 4, 4, 6, 9, 8, 11, 10, 8, 8, 0, 2]], [[2, 75, 56, 4, 11, 6, 44, 11, 10, 44]], [[2, 5, 2, 2, 1, 1, 5, 21, 5, 5, 1]], [[3, 3, 9, 4, 4, 6, 8, 9, 12, 8, 11, 10, 10, 8, 10, 12, 3]], [[2, 1, 3, 1, 1, 5, 5, 5, 1]], [[11, 22, 44, 54, 66, 88, 99, 22, 22, 33, 22, 22]], [[4, 4, 77, 4, 6, 9, 12, 8, 11, 33, 8, 33, 9, 11]], [[55, 3, 4, 4, 6, 9, 12, 8, 11, 10, 10, 8, 10, 12, 3]], [[22, 33, 100, 65, 55, 66, 56, 99, 21, 0, 22, 100, 33, 88]], [[2, 1, 3, 1, 77, 3, 5, 5]], [[1, 0, 1, 108, 1, 1, 1, 1, 5, 1, 8, 1, 1, 1, 1, 1]], [[11, 12, 22, 33, 44, 55, 66, 77, 88, 99, 54, 55]], [[2, 10, 3, 5, 5, 6, 7, 8, 9, 31, 10]], [[33, 1, 1, 1, 1, 0, 1, 1, 1, 1, 99, 1]], [[65, 11, 22, 33, 44, 65, 55, 66, 76, 88, 78, 99]], [[11, 33, 44, 55, 66, 88, 99, 0, 22, 33, 88, 33]], [[12, 22, 34, 86, 55, 44, 32, 76, 99, 77, 77, 55]], [[11, 22, 33, 44, 6, 55, 66, 99, 22, 22, 22, 6]], [[2, 11, 3, 5, 88, 9, 8, 1, 10]], [[33, 1, 2, 3, 4, 5, 6, 7, 9, 2]], [[0, 1, 2, 0, 4, 5, 6, 7, 8, 0]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10]], [[31, 42, 53, 86, 97, 108]], [[3, 3, 3, 4, 4, 6, 9, 12, 8, 12, 10, 8, 9, 11, 9, 8]], [[11, 11, 22, 33, 44, 55, 66, 77, 88, 99]], [[1, 1, 2, 1, 1, 1, 1, 22, 1, 1, 1, 1, 2, 1, 1]], [[75, 1, 2, 4, 6, 7, 9, 2, 4]], [[2, 65, 4, 6, 44, 11, 10, 44]], [[2, 7, 11, 4, 4, 6, 9, 7, 8, 11, 10, 8]], [[1, 1, 1, 44, 1, 1, 1, 1, 1]], [[1, 1, 1, 2, 1, 1, 1, 1, 55, 1, 97, 1, 1, 1]], [[3, 4, 6, 8, 11, 10]], [[3, 4, 6, 9, 108, 5, 8, 11, 33, 8]], [[65, 89, 11, 65, 22, 33, 44, 55, 66, 77, 77, 99, 10, 77, 88]], [[99, 1, 4, 1, 1, 5, 4, 99]], [[2, 2, 44, 1, 1, 5, 86, 5, 5]], [[11, 12, 22, 33, 44, 55, 66, 77, 88, 66, 99, 54, 55]], [[11, 53, 22, 33, 44, 65, 55, 66, 88, 56, 99, 0, 22, 33, 88]], [[55, 3, 4, 4, 6, 9, 12, 8, 11, 10, 10, 8, 10, 12, 3, 11]], [[3, 3, 4, 4, 4, 12, 8, 33, 33, 8]], [[2, 5, 2, 2, 1, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5]], [[2, 4, 2, 4, 5, 1, 5, 30]], [[2, 2, 1, 1, 1, 5, 5, 98, 2, 98]], [[2, 4, 77, 76, 5, 5, 1, 4, 2, 4]], [[1, 1, 1, 1, 1, 2, 1, 1, 1, 32, 1, 1]], [[22, 33, 44, 88, 99, 33]], [[22, 33, 88, 5, 33, 33]], [[11, 22, 33, 44, 54, 66, 88, 99, 22, 22, 66, 33, 22, 22, 22, 33, 99]], [[3, 3, 3, 4, 4, 6, 9, 12, 8, 11, 10, 8, 9, 12]], [[2, 3, 4, 5, 6, 9, 8, 11]], [[2, 4, 3, 2, 4, 5, 1, 4, 2, 4]], [[1, 55, 2, 86, 1, 1, 1, 5, 5, 1, 1]], [[2, 2, 2, 1, 1, 5, 5, 5, 1, 1, 5, 1]], [[0, 1, 2, 0, 4, 5, 5, 7, 8, 0]], [[3, 3, 9, 4, 4, 6, 7, 9, 12, 8, 11, 10, 10, 10, 8, 10, 12, 8]], [[11, 22, 33, 44, 65, 55, 66, 88, 99, 0, 22, 31, 33, 88]], [[2, 1, 1, 1, 2, 1, 1, 1, 97, 87, 1, 1, 97]], [[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], [[86, 2, 21, 4, 65, 6, 7, 8, 9, 10, 7, 10]], [[65, 22, 33, 55, 66, 77, 88, 65]], [[2, 2, 1, 1, 1, 1, 5, 5, 98, 2]], [[1, 1, 1, 2, 2, 1, 1, 1, 97, 1, 1, 1]], [[65, 10, 22, 4, 33, 44, 55, 76, 66, 77, 88, 22, 33]], [[55, 3, 4, 4, 6, 9, 12, 8, 11, 10, 8, 10, 12, 3, 55]], [[1, 0, 0, 108, 1, 1, 1, 1, 5, 1, 8, 1, 1, 1, 1, 1]], [[11, 12, 22, 33, 44, 55, 66, 77, 89, 99, 55, 22]], [[2, 11, 0, 4, 10, 4, 6, 9, 8, 11, 10, 8, 8]], [[11, 22, 33, 1, 44, 65, 55, 66, 88, 56, 99, 0, 22, 33, 88]], [[2, 2, 1, 2, 1, 5, 5, 5, 5]], [[0, 1, 2, 3, 4, 5, 6, 8]], [[0, 1, 3, 4, 5, 6, 7, 8, 10, 1]], [[0, 1, 1, 4, 1, 4, 1, 1, 1, 1]], [[1, 4, 1, 4, 2, 1, 4, 1, 4, 4, 4, 1]], [[31, 42, 53, 5, 87, 97, 87, 53]], [[99, 1, 4, 1, 4, 1, 4, 10, 1, 4]], [[3, 3, 3, 5, 4, 6, 9, 12, 8, 12, 10, 8, 9, 11]], [[1, 3, 4, 2, 4, 5, 1, 5, 4]], [[2, 64, 5, 2, 2, 1, 1, 1, 5, 21, 5, 5, 1]], [[12, 33, 1, 2, 4, 3, 5, 6, 7, 9, 2]], [[2, 1, 1, 5, 5, 5]], [[11, 22, 33, 44, 6, 65, 55, 66, 88, 99, 22]], [[31, 42, 53, 31, 76, 86, 97, 108, 119]], [[75, 1, 2, 4, 5, 6, 7, 9, 2, 4, 1, 2, 7]], [[1, 1, 3, 1, 2, 1, 1, 1, 1, 1, 97, 1, 1, 1]], [[1, 1, 1, 1, 1]], [[3, 1, 1, 1, 5, 5, 5, 1]], [[11, 22, 33, 100, 55, 66, 77, 88]], [[2, 10, 3, 5, 5, 6, 7, 8, 9, 31, 10, 31]], [[2, 3, 4, 6, 8, 9, 31, 9]], [[2, 2, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5]], [[0, 74, 53, 2, 3, 5, 6, 8, 9, 10]], [[2, 2, 44, 1, 1, 5, 5]], [[2, 1, 4, 1, 4, 5, 1, 108]], [[3, 3, 4, 4, 6, 9, 75, 12, 8, 11, 34, 8, 3]], [[1, 1, 1, 1, 1, 1, 1, 97, 108, 1, 1, 0, 1, 1, 1]], [[3, 5, 4, 6, 9, 119, 8, 12, 10, 8, 11]], [[65, 11, 22, 33, 65, 44, 65, 55, 66, 77, 88, 77, 99, 77, 66]], [[2, 3, 4, 5, 6, 8, 9, 31, 98]], [[3, 4, 4, 6, 1, 9, 8, 11, 10, 8, 9]], [[33, 31, 42, 53, 5, 86, 97]], [[2, 1, 1, 1, 4, 6, 5, 5, 5, 5, 1]], [[11, 22, 32, 44, 65, 55, 66, 3, 88, 99, 22, 22]], [[12, 33, 44, 55, 66, 77, 88, 99]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 9, 9]], [[2, 3, 4, 5, 6, 8, 9, 31, 10, 31]], [[86, 2, 3, 119, 4, 4, 5, 6, 7, 8, 9, 10]], [[3, 3, 4, 4, 7, 6, 6, 9, 11, 10, 44, 44]], [[33, 1, 1, 1, 1, 0, 1, 1, 1, 1, 99, 1, 1]], [[2, 1, 4, 4, 5, 1, 108, 1]], [[86, 33, 1, 2, 4, 3, 5, 6, 7, 9, 2]], [[3, 3, 4, 4, 6, 9, 12, 8, 11, 33, 8, 12, 33]], [[22, 33, 44, 88, 99, 32]], [[3, 3, 3, 4, 6, 9, 12, 8, 12, 10, 8, 9, 9, 11]], [[1]], [[2, 4, 6]], [[2, 4, 6, 1, 3, 5]], [[3, 5, 7, 9, 11]], [[1, -2, 5, 0, -3]], [[2, 5, 4, 6, 8]], [[1, 2, 1, 1, 1, 1, 1, 1]], [[11, 89, 22, 33, 44, 55, 66, 77, 88, 99]], [[11, 89, 22, 33, 44, 55, 66, 88, 99]], [[31, 42, 53, 75, 86, 97, 119, 75]], [[2, 3, 4, 5, 6, 7, 8, 9, 5]], [[31, 42, 53, 64, 76, 75, 86, 97, 108, 119]], [[1, 1, 2, 1, 1, 1, 1, 1, 1]], [[2, 3, 4, 6, 9, 8, 11, 10, 11]], [[31, 42, 53, 75, 86, 97, 120, 75]], [[1, 2, 1, 1, 1, 1, 1, 1, 1]], [[1, 2, 1, 1, 1, 1, 1]], [[2, 3, 5, 6, 6, 44, 8, 8, 5]], [[1, 2, 1, 1, 1, 1, 1, 1, 1, 1]], [[31, 42, 53, 75, 97, 120, 75]], [[1, 1, 1, 1, 1, 1, 2, 1, 1, 1]], [[1, 1, 1, 2, 1, 0, 1, 1, 1, 1]], [[31, 42, 53, 75, 86, 97, 120, 75, 75]], [[1, 2, 1, 2, 1, 0, 1, 1, 1, 1, 1]], [[1, 2, 1, 1, 1, 1, 1, 1, 1, 9, 1]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2]], [[31, 42, 3, 64, 75, 86, 97, 108, 119]], [[1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2]], [[1, 2, 1, 1, 1, 99, 1, 1, 1, 1, 1]], [[0, 1, 44, 3, 4, 5, 6, 7, 43, 8]], [[31, 42, 53, 86, 97, 118, 75]], [[31, 42, 53, 75, 86, 97, 52, 119, 75]], [[31, 42, 53, 87, 97, 118, 75]], [[31, 42, 53, 75, 86, 97, 52, 119, 75, 75]], [[0, 1, 44, 3, 4, 5, 6, 7, 43]], [[31, 42, 53, 64, 76, 75, 86, 97, 7, 108, 119]], [[31, 42, 53, 86, 97, 118]], [[1, 2, 1, 1, 1, 99, 1, 1, 1, 0]], [[100, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0]], [[31, 42, 53, 87, 97, 118]], [[2, 3, 5, 6, 6, 44, 8, 5]], [[2, 3, 4, 5, 6, 9, 8, 11, 10, 11]], [[31, 120, 42, 53, 75, 86, 97, 52, 119, 75, 75]], [[100, 52, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0]], [[100, 52, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0, 1]], [[3, 3, 5, 6, 6, 44, 8, 8, 5]], [[31, 120, 42, 53, 75, 86, 97, 52, 119, 75, 75, 75]], [[0, 1, 2, 3, 4, 5, 6, 7, 42, 1, 2]], [[31, 120, 42, 55, 53, 75, 86, 97, 52, 119, 75, 75]], [[31, 42, 53, 75, 86, 97, 120, 76, 75, 120]], [[31, 42, 42, 53, 75, 86, 97, 120, 75]], [[31, 42, 3, 64, 87, 75, 86, 97, 108, 119]], [[100, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0, 88]], [[1, 2, 1, 1, 1, 99, 1, 66, 1, 0]], [[31, 120, 42, 53, 75, 86, 97, 52, 119, 75, 75, 120, 53]], [[1, 1, 1, 2, 1, 0, 1, 1, 1]], [[31, 42, 53, 75, 86, 96, 120, 76, 75, 120, 75]], [[100, 1, 2, 2, 1, 1, 1, 99, 1, 1, 1, 0, 88]], [[100, 52, 1, 2, 1, 1, 1, 99, 100, 1, 1, 0, 1]], [[0, 1, 3, 4, 5, 6, 7, 43, 8]], [[1, 31, 2, 1, 1, 1, 99, 1, 1, 1, 1, 1]], [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 2]], [[31, 4, 42, 42, 53, 75, 97, 120, 75]], [[1, 2, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1]], [[100, 2, 3, 5, 6, 6, 44, 8, 8, 5]], [[1, 2, 1, 89, 1, 99, 1, 1, 1, 1, 1]], [[31, 75, 42, 53, 87, 97, 118, 75]], [[31, 42, 75, 86, 32, 97, 120, 76, 75, 120]], [[4, 2, 3, 4, 6, 7, 8, 9, 5]], [[31, 42, 3, 64, 75, 86, 97, 108, 119, 97]], [[31, 43, 53, 75, 97, 120, 75]], [[31, 42, 53, 75, 97, 120, 75, 75]], [[3, 3, 5, 6, 6, 44, 8, 5]], [[31, 42, 87, 53, 75, 86, 97, 120, 75, 75]], [[1, 2, 1, 1, 1, 88, 1, 1, 1]], [[1, 2, 1, 1, 1, 1, 1, 1, 1, 44, 1]], [[31, 42, 53, 64, 75, 86, 97, 108, 119, 53]], [[0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 1, 2]], [[31, 96, 3, 120, 42, 53, 75, 86, 97, 52, 119, 75, 75, 75]], [[0, 0, 0, 0, 0, 75]], [[2, 4, 3, 4, 5, 7, 8, 9, 10]], [[2, 3, 4, 5, 6, 7, 7, 9, 5]], [[31, 42, 53, 75, 86, 97, 75]], [[31, 42, 42, 53, 75, 86, 97, 120, 75, 42]], [[0, 1, 118, 2, 3, 4, 5, 6, 7, 8]], [[2, 3, 5, 75, 32, 9, 8, 11, 10, 11]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 6]], [[1, 1, 1, 119, 1, 1, 1, 1, 1, 1]], [[1, 2, 1, 1, 119, 88, 1, 1]], [[31, 120, 42, 55, 53, 75, 86, 108, 52, 119, 75, 75]], [[31, 120, 42, 55, 53, 75, 86, 52, 119, 75, 75]], [[100, 2, 3, 5, 6, 6, 53, 44, 8, 8, 53, 5, 44, 44]], [[89, 1, 2, 3, 4, 5, 6, 7]], [[1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1]], [[31, 42, 53, 97, 120, 75, 75]], [[1, 2, 1, 0, 1, 1, 1, 1]], [[1, 1, 2, 1, -1, 1, 1, 1, 1, 1, 1]], [[31, 42, 42, 53, 75, 86, 97, 97, 119, 75]], [[0, 0, 0, 0, -1, 75]], [[1, 2, 0, 1, 89, 1, 99, 1, 1, 1, 1, 1, 1]], [[1, 2, 1, 1, 119, 88, 1, 1, 119]], [[89, 3, 64, 75, 86, 97, 108, 119, 97]], [[2, 2, 2, 76, 1, 1, 1, 5, 5, 5, 5]], [[1, 1, 10, 1, 1, 1, 1, 1, 0]], [[31, 42, 3, 64, 75, 86, 97, 119, 86]], [[1, 1, 2, 1, 1, 1, 1, 0, 1]], [[0, 1, 2, 3, 10, 4, 5, 6, 7, 8, 1, 2, 2]], [[1, 2, 1, 44, 2, 1, 0, 1, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1]], [[31, 42, 118, 53, 75, 86, 96, 120, 76, 75, 22, 120, 75, 120]], [[0, 1, 118, 2, 3, 4, 5, 10, 8]], [[11, 89, 22, 33, 44, 55, 66, 10, 77, 88, 99, 66]], [[1, 1, 2, 1, -1, 1, 6, 1, 1, 1, 1]], [[0, 1, 118, 2, 3, 4, 5, 10, 8, 1]], [[30, 31, 54, 42, 53, 86, 97, 118, 75, 97]], [[2, 3, 4, 5, 6, 9, 8, 11, 10, 8]], [[31, 42, 53, 75, 86, 43, 97, 120, 75]], [[1, 2, 1, 1, 119, 2, 88, 1, 1]], [[1, 2, 1, 2, 1, 1, 1, 1, 1, 9, 1]], [[31, 42, 42, 53, 75, 86, 98, 120, 75, 42]], [[0, 1, 2, 3, 4, 5, 7, 7, 8, 9, 10]], [[1, 2, 1, 89, 1, 99, 1, 1, 1, 1, 1, 1]], [[89, 1, 2, 3, 4, 6, 7]], [[31, 120, 42, 53, 75, 86, 97, 52, 89, 119, 75, 75]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 0]], [[11, 32, 89, 22, 33, 44, 55, 66, 77, 77, 88, 99, 11]], [[86, 42, 3, 64, 75, 86, 97, 108, 66, 97]], [[0, 1, 3, 4, 5, 7, 7, 43, 8]], [[31, 4, 42, 42, 53, 75, 97, 120, 75, 75]], [[1, 1, 2, 1, 0, 1, 0]], [[1, 1, 96, 55, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1]], [[1, 1, 10, 1, 1, 1, 1, 1, 0, 1]], [[1, 1, 2, 1, 0, 1, 1, 1, 0, 1, 1]], [[31, 4, 42, 42, 22, 53, 75, 97, 120, 75, 22, 22]], [[31, 42, 3, 64, 87, 75, 86, 97, 108, 119, 31]], [[0, 1, 2, 3, 5, 6, 7]], [[1, 1, 1, 2, 1, 0, 22, 1, 1, 1, 1]], [[0, 1, 2, 3, 4, 5, 6, 10, 42, 1, 2]], [[1, 1, 2, 1, 0, 1, 89, 1, 1, 0, 1, 1]], [[1, 2, 1, 1, 120, 119, 88, 1, 1, 119]], [[1, 1, 119, 88, 1, 1]], [[31, 43, 7, 53, 75, 86, 97, 120, 75, 75]], [[100, 52, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0, 1, 1]], [[31, 75, 10, 53, 87, 97, 118, 75]], [[89, 1, 2, 4, 5, 6, 7]], [[31, 42, 3, 64, 87, 75, 97, 108, 119]], [[1, 2, 1, 44, 2, 1, 0, 1, 1, 1, 1, 1, 1]], [[1, 2, 1, 1, 120, 119, 1, 1, 119]], [[31, 42, 53, 75, 86, 97, 120, 76, 75, 119]], [[3, 3, 5, 6, 7, 44, 8, 5]], [[1, 2, 1, 0, 1, 1, 1, 1, 1]], [[86, 2, 1, 1, 1, 1, 1, 1, 66, 1, 44, 1, 1]], [[0, 0, 0, 0, 0, 32, 0]], [[31, 120, 2, 42, 55, 54, 53, 75, 86, 52, 119, 75, 75]], [[31, 42, 53, 75, 86, 97, 76, 75, 120]], [[1, 1, 1, 1, 1, 2, 2, 75, 1, 1, 2]], [[2, 31, 42, 53, 75, 86, 97]], [[31, 4, 42, 42, 22, 53, 75, 97, 120, 75, 22, 22, 31]], [[30, 2, 4, 6, 7]], [[65, 89, 3, 64, 75, 86, 97, 108, 119, 98, 97, 75]], [[2, 44, 4, 3, 4, 5, 7, 8, 9, 10]], [[1, 2, 1, 1, 120, 119, 1, 1, 119, 1]], [[100, 1, 2, 2, 1, 1, 1, 99, 1, 1, 1, 0]], [[76, 31, 42, 53, 75, 86, 97, 120, 76, 75, 120]], [[31, 42, 53, 86, 97, 87, 118]], [[89, 2, 3, 4, 5, 6, 7]], [[86, 2, 1, 1, 1, 1, 1, 1, 4, 1, 44, 1, 1]], [[1, 43, 1, 44, 2, 1, 0, 1, 1, 1, 1, 1, 1]], [[31, 64, 42, 43, 53, 75, 97, 120, 75]], [[2, 2, 2, 1, 1, 0, 5, 5]], [[3, 3, 5, 6, 6, 44, 8, 8, 5, 3]], [[1, 99, 31, 2, 1, 1, 1, 99, 1, 1, 108, 1, 1]], [[89, 3, 33, 64, 75, 86, 97, 108, 119, 97, 75]], [[31, 120, 42, 55, 53, 75, 86, 108, 52, 119, 75, 108, 42, 75]], [[1, 1, 1, 119, 0, 1, 1, 1, 1, 1, 1]], [[30, 42, 3, 64, 87, 75, 86, 97, 108, 119]], [[0, 1, 2, 3, 10, 4, 5, 7, 8, 1, 2, 2]], [[31, 42, 53, 64, 76, 75, 86, 97, 7, 108, 119, 75]], [[31, 42, 53, 75, 86, 97, 76, 75, 120, 31]], [[1, 31, 2, 1, 1, 1, 99, 1, 1, 1, 1, 119]], [[100, 2, 3, 5, 6, 6, 53, 44, 8, 53, 5, 44, 44]], [[0, 7, 1, 2, 4, 5, 6, 7, 8, 1, 2, 0]], [[2, 2, 2, 1, 1, 1, 77, 5, 5, 5]], [[31, 42, 53, 53, 87, 97, 118, 53]], [[89, 1, 1, 3, 4, 5, 6, 7]], [[76, 89, 31, 42, 53, 30, 75, 86, 97, 120, 76, 75, 120, 97]], [[31, 53, 64, 76, 75, 86, 97, 7, 107, 119, 75, 75]], [[1, 1, 1, 120, 119, 1, 1, 119]], [[0, 1, 118, 2, 3, 4, 5, 6, 7, 8, 7]], [[31, 42, 55, 75, 86, 97, 77, 120, 42]], [[86, 42, 118, 53, 75, 86, 96, 120, 76, 75, 22, 120, 75, 120]], [[31, 76, 42, 55, 75, 86, 97, 77, 120, 42, 86]], [[100, 1, 2, 2, 1, 1, 1, 99, 1, 1, 1, 0, 88, 1]], [[1, 1, 119, 88, 1, 0, 1]], [[1, 2, 0, 1, 89, 1, 99, 1, 2, 1, 1, 1, 1]], [[31, 43, 7, 53, 75, 75, 86, 6, 120, 75, 75]], [[31, 75, 10, 53, 87, 97, 118, 75, 31]], [[0, 1, 2, 3, 4, 5, 6, 31, 7, 8, 1, 2, 2]], [[2, 3, 65, 4, 6, 7, 7, 9, 5]], [[77, 52, 1, 2, 1, 1, 1, 99, 33, 1, 1, 1, 0, 1]], [[11, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0]], [[42, 53, 75, 86, 97, 76, 75, 120]], [[3, 3, 6, 44, 8, 22, 5, 3]], [[89, 1, 1, 3, 4, 5, 6, 7, 1, 7]], [[42, 96, 53, 97, 120, 75, 75, 120]], [[31, 120, 42, 53, 75, 86, 97, 76, 75, 75]], [[1, 2, 1, 1, 1, 1]], [[1, 1, 2, 1, -1, 1, 6, 1, 1, 1, 1, 2]], [[100, 1, 2, 2, 1, 1, 1, 99, 1, 1, 1, 0, 88, 1, 2]], [[31, 66, 120, 42, 55, 53, 75, 86, 108, 52, 119, 75, 108, 42, 75]], [[1, 119, 88, 1, 1]], [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1]], [[2, 2, 2, 1, 1, 1, 5, 1]], [[1, 1, 1, 119, 1, 1, 1, 1, 1, 1, 1]], [[1, 2, 1, 1, 119, 88, 1, 1, 119, 1]], [[31, 42, 3, 87, 31, 86, 97, 108, 119]], [[1, 1, 96, 55, 1, 1, 1, 22, 2, 1, 1, 1, 1, 1, 55]], [[31, 42, 75, 86, 32, 97, 120, 76, 99, 120]], [[31, 42, 3, 64, 87, 75, 86, 97, 119]], [[1, 2, 0, 1, 89, 1, 99, 1, 2, 1, 1, 1, 1, 98]], [[1, 1, 1, 119, 2, 1, 119]], [[119, 31, 42, 53, 64, 75, 86, 97, 108, 1, 119]], [[11, 32, 89, 22, 33, 44, 55, 66, 77, 77, 88, 11]], [[97, 52, 1, 2, 1, 0, 1, 0]], [[2, 4, 3, 4, 5, 7, 8, 9]], [[1, 1, 1, 120, 119, 1, 1, 119, 1]], [[1, 2, 1, 0, 1, 1, 1, 1, 1, 1]], [[2, 2, 2, 1, 1, 5, 5, 5]], [[1, 2, 9, 2, 1, 0, 1, 1, 1, 1, 1, 1]], [[0, 0, 0, 0, 0, 32, -1, 0]], [[2, 42, 2, 1, 1, 0, 5, 5]], [[0, 1, 2, 1, -1, 1, 1, 1, 1, 1, 1, 1]], [[1, 31, 2, 1, 1, 1, 99, 1, 1, 1, 1, 53, 1]], [[2, 31, 42, 22, 53, 75, 86, 97]], [[11, 31, 2, 1, 1, 1, 99, 1, 1, 1, 1, 53, 1]], [[42, 53, 75, 86, 119, 97, 76, 75, 120, 120]], [[0, 4, 1, 118, 2, 3, 4, 5, 10, 8]], [[89, 1, 2, 3, 4, 6, 7, 4]], [[2, 42, 42, 1, 1, 0, 5, 5]], [[31, 42, 5, 97, 120, 75, 75, 97]], [[31, 41, 3, 87, 31, 86, 97, 108, 119]], [[100, 1, 2, 1, 1, 1, 1, 0]], [[100, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0, 88, 1]], [[0, 1, 118, 2, 3, 4, 5, 6, 7, 8, 8, 118, 1]], [[31, 42, 42, 53, 75, 86, 97, 97, 119, 75, 97]], [[22, 42, 53, 75, 86, 97, 120, 75]], [[1, 2, 1, 1, 120, 64, 88, 1, 1, 119]], [[1, 2, 42, 1, 89, 66, 99, 1, 1, 1, 1, 1, 1]], [[2, 1, 1, 88, 1, 1, 1]], [[100, 2, 3, 5, 6, 6, 44, 8, 75, 5]], [[100, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0, 88, 99]], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 6]], [[89, 1, 2, 3, 4, 5, 7]], [[1, 1, 96, 55, 1, 1, 1, 22, 2, 1, 1, 1, 1, 1, 55, 2]], [[1, 1, 2, 1, 86, 1, 1, 0, 77, 1, 1]], [[42, 53, 75, 86, 97, 120, 75, 75]], [[1, 1, 96, 55, 1, 0, 1, 22, 2, 1, 1, 1, 1, 1, 55, 2]], [[4, 41, 2, 3, 4, 6, 7, 8, 9, 5]], [[30, 31, 54, 42, 53, 86, 97, 118, 75, 97, 118]], [[0, 1, 44, 3, 4, 5, 6, 7, 66, 3]], [[1, 1, 1, 1, 2, 2, 75, 0, 1, 2]], [[42, 3, 64, 75, 86, 97, 119, 86]], [[76, 31, 42, 53, 75, 53, 97, 120, 76, 75, 120]], [[31, 4, 42, 42, 53, 75, 5, 97, 120, 75, 75]], [[31, 75, 10, 52, 87, 97, 118, 3, 75]], [[3, 3, 5, 6, 6, 44, 8, 88, 5]], [[1, 2, 1, 44, 2, 1, 0, 1, 1, 1, 2, 1]], [[0, 1, 2, 3, 4, 5, 6, 1, 10, 42, 1, 2]], [[30, 31, 54, 42, 53, 86, 97, 118, 97]], [[30, 31, 54, 42, 53, 86, 97, 118, 75, 118]], [[31, 42, 32, 75, 86, 32, 97, 120, 76, 75, 120, 42, 76]], [[1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1]], [[31, 120, 42, 55, 53, 75, 86, 52, 22, 30, 75, 75]], [[1, 1, 2, 1, -1, 1, 6, 1, 1, 1]], [[11, 89, 22, 33, 44, 66, 88, 99]], [[31, 42, 87, 22, 53, 75, 86, 97]], [[42, 53, 75, 86, 119, 97, 76, 75, 120]], [[31, 42, 53, 86, 97, 87, 118, 42]], [[31, 120, 42, 55, 53, 75, 86, 52, 22, 30, 75, 87, 75]], [[31, 120, 42, 41, 53, 75, 86, 97, 52, 119, 75, 75, 75]], [[0, 1, 118, 2, 117, 3, 4, 5, 10, 8, 1]], [[1, 2, 1, 2, 1, 1, 119, 1, 1, 1, 1, 1]], [[0, 1, 4, 5, 7, 7, 43, 8, 8]], [[1, 1, 10, 1, 2, 1, 1, 1, 1]], [[1, 2, 1, 44, 2, 1, 0, 1, 1, 1, 2, 1, 0]], [[11, 1, 2, 1, 1, 1, 99, 1, 1, 1, 0, 2]], [[31, 42, 42, 53, 75, 86, 97, 97, 119, 75, 97, 53]], [[31, 42, 53, 75, 86, 97, 52, 119, 75, 75, 75]], [[31, 42, 3, 64, 88, 75, 97, 108, 119]], [[0, 43, 0, 0, 0, 43, 0, 75]], [[89, 1, 2, 4, 4, 6, 7, 1]], [[2, 4, 3, 44, 4, 5, 7, 8, 8]], [[31, 4, 41, 42, 22, 53, 75, 97, 120, 75, 22]], [[1, 2, 1, -1, 1, 6, 1, 1, 1]], [[1, 1, 2, 1, 0, 1, 0, 1]], [[1, 2, 1, 89, 1, 2, 98, 1, 1, 1, 1, 1, 1]], [[1, 31, 2, 1, 1, 1, 99, 1, 1, 41, 1, 1, 53, 1, 2]], [[0, 1, 8, 3, 4, 5, 6, 7, 43]], [[0, 7, 1, 2, 4, 5, 86, 7, 8, 1, 2, 0]], [[0, 1, 2, 2, 4, 5, 6, 7, 8, 1, 2, 0]], [[30, 42, 5, 97, 120, 75, 75, 97]], [[30, 31, 54, 42, 53, 97, 118, 97]], [[1, 1, 2, 1, 1, 0]], [[31, 120, 42, 55, 53, 75, 86, 52, 23, 30, 75, 75, 75]], [[1, 1, 1, 2, 1, -1, 1, 6, 1, 1, 1, 1, 2, 2]], [[31, 42, 53, 75, 86, 97, 52, 119]], [[1, 1, 2, 1, -1, 1, 1, 1, 1, 1, 1, 1]], [[65, 89, 3, 64, 75, 86, 97, 108, 119, 98, 97, 75, 3, 3]], [[1, 2, 1, 1, 1, 1, 1, 1, 1, 44, 1, 1]], [[31, 42, 87, 53, 75, 86, 97, 120, 75, 53]], [[1, 1, 1, 120, 119, 119, 1, 1, 119, 1]], [[1, 2, 1, 44, 2, 1, 0, 119, 1, 1, 9, 1, 1]], [[0, 1, 2, 2, 4, 5, 31, 7, 8, 1, 2, 0]], [[30, 65, 31, 54, 42, 53, 86, 97, 118, 75, 97]], [[1, 2, 1, 1, 0, 99, 1, 1, 1, 0]], [[1, 1, 119, 44, 1, 1]], [[42, 96, 97, 120, 75, 75, 120]], [[2, 3, 4, 5, 6, 9, 8, 11, 10, 8, 6]], [[1, 2, 42, 1, 100, 89, 66, 99, 1, 1, 1, 1, 1, 1, 1, 99]], [[1, 1, 96, 55, 1, 0, 1, 22, 2, 1, 1, 1, 1, 1, 55, 2, 1]], [[31, 120, 42, 41, 53, 75, 86, 97, 52, 119, 75, 75, 51, 75]], [[1, 30, 1, 2, 1, 0, 22, 76, 1, 1, 1, 1]], [[0, 2, 3, 4, 6, 7, 8, 9, 10]], [[1, 31, 2, 1, 1, 1, 99, 1, 1, 1, 1, 119, 1]], [[3, 2, 2, 2, 1, 1, 1, 5, 1]], [[76, 89, 31, 42, 53, 30, 75, 86, 97, 120, 76, 75, 120, 97, 120]], [[75, 120, 42, 53, 75, 86, 97, 52, 119, 75, 75, 75]], [[100, 1, 2, 1, 1, 99, 1, 1, 1, 0, 88, 99, 1]], [[1, 1, 2, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1]], [[2, 42, 2, 1, 1, 0, 5]], [[2, 2, 1, 1, 1, 5, 2, 5]], [[1, 1, 1, 120, 119, 119, 1, 2, 1, 119, 1]], [[31, 42, 53, 64, 76, 75, 86, 97, 7, 108, 118, 119]], [[86, 42, 118, 53, 75, 86, 96, 31, 76, 75, 22, 120, 75, 120]], [[30, 2, 4, 6, 7, 4]], [[120, 31, 42, 53, 87, 97, 118, 87]], [[31, 120, 42, 55, 53, 75, 86, 52, 52, 30, 75, 87, 75, 87]], [[30, 65, 31, 54, 64, 42, 53, 86, 97, 118, 75, 97, 75]], [[1, 1, 1, 1, 1, 2, 2, 75, 1, 1, 2, 76, 1]], [[31, 42, 66, 53, 10, 87, 97, 118, 53]], [[1, 0, 2, 1, 1, 1, 99, 1, 1, 1, 0]], [[42, 3, 64, 87, 75, 86, 97, 108]], [[2, 2, 2, 1, 0, 1, 5, 5]], [[1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1]], [[41, 1, 3, 4, 5, 7, 7, 43, 8]], [[1, 31, 2, 5, 1, 1, 99, 1, 1, 1, 1, 119, 1]], [[1, 2, 1, 1, 120, 119, 1, 1, 89, 1]], [[1, 1, 1, 44, 120, 119, 1, 1, 119, 1]], [[1, 2, 1, 22, 2, 1, 0, 119, 1, 1, 9, 1, 1]], [[31, 42, 5, 97, 120, 75, 75, 88]], [[31, 42, 3, 64, 88, 75, 97, 108, 31]], [[89, 2, 3, 119, 1, 5, 6, 7]], [[1, 1, 1, 1, 2, 2, 74, 75, 0, 1, 2]], [[118, 96, 53, 97, 120, 75, 75, 120]], [[1, 1, 2, 1, -1, 1, 6, 1, 66, 1, 1, 1]], [[42, 53, 86, 119, 97, 76, 75, 120]], [[1, 1, 2, 1, 86, 1, 1, 0, 77, 1, 1, 86]], [[0, 1, 44, 4, 5, 6, 7, 66, 3]], [[1, 2, 1, 43, 1, 1, 88, 1, 1, 1, 1]], [[31, 120, 42, 41, 53, 75, 86, 97, 52, 119, 75, 75, 75, 53]], [[31, 120, 42, 53, 75, 86, 97, 52, 89, 119, 90, 75, 75]], [[31, 4, 42, 42, 53, 75, 97, 120, 75, 75, 53]], [[30, 42, 3, 64, 87, 75, 86, 97, 119]], [[1, 2, 42, 1, 6, 66, 99, 1, 1, 1, 1, 1, 1]], [[1, 2, 1, 1, 120, 76, 119, 1, 1, 119, 1]], [[0, 1, 2, 2, 3, 4, 5, 6, 7, 31, 8, 1, 2, 8]], [[89, 4, 5, 6, 7, 6]], [[89, 3, 52, 64, 75, 86, 97, 108, 119, 97, 75, 89]], [[30, 31, 54, 42, 53, 86, 97, 118, 75, 97, 118, 54]], [[100, 1, 2, 1, 1, 1, 1, 0, 0]], [[100, 52, 1, 2, 1, 1, 1, 99, 1, 2, 1, 1, 0, 1]], [[100, 52, 1, 2, 1, 1, 1, 31, 99, 1, 1, 1, 0, 1]], [[1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1]], [[31, 42, 3, 64, 87, 75, 64, 86, 97, 108, 119, 31]], [[1, 2, 1, 1, 1, 88, 1, 1, 1, 1]], [[1, 1, 2, 1, 0, 1, 0, 97]], [[30, 42, 3, 64, 87, 2, 75, 86, 97, 119, 3]], [[1, 2, 1, 89, 1, 99, 10, 1, 1, 1, 1, 1]], [[31, 120, 2, 42, 55, 54, 53, 75, 119, 75, 75, 120]], [[1, 1, 119, 0, 1, 1, 1, 1, 1, 1]], [[4, 3, 4, 5, 7, 8, 9]], [[31, 120, 42, 75, 120, 41, 53, 75, 86, 97, 52, 119, 75, 75, 75, 53]], [[1, 2, 1, 43, 1, 1, 88, 1, 1, 1]], [[31, 42, 53, 75, 86, 97, 52, 75, 53]], [[4, 41, 2, 3, 4, 6, 7, 8, 9, 5, 9]], [[1, 119, 88, 1, 1, 1]], [[31, 120, 76, 42, 41, 53, 75, 86, 97, 52, 119, 75, 75, 51, 75]], [[30, 42, 3, 64, 87, 75, 86, 108, 119]], [[86, 2, 2, 1, 1, 1, 1, 1, 1, 4, 107, 44, 1, 1]]]\n    results = [12, 9, 0, 5, 0, 23, 3, 9, 0, 0, 6, 18, 0, 3, 7, 0, 1, 11, 0, 11, 1, 3, 9, 11, 7, 11, 9, 1, 0, 24, 22, 0, 10, 4, 1, 4, 1, 0, 12, 3, 0, 10, 11, 1, 0, 7, 5, 2, 15, 18, 1, 0, 11, 0, 22, 18, 11, 3, 9, 22, 10, 1, 1, 19, 8, 13, 5, 33, 10, 11, 0, 4, 8, 10, 17, 11, 10, 0, 23, 16, 17, 7, 1, 2, 1, 0, 5, 10, 15, 3, 16, 13, 8, 11, 5, 22, 0, 24, 14, 0, 2, 1, 16, 3, 11, 0, 0, 4, 11, 0, 275, 5, 0, 0, 375, 0, 65, 24, 8, 230, 5, 7, 20, 12, 9, 0, 31, 99, 11, 6, 0, 0, 9, 65, 2, 164, 8, 0, 264, 0, 23, 0, 3, 7, 24, 98, 6, 2, 14, 208, 14, 13, 84, 8, 11, 99, 0, 3, 11, 14, 84, 19, 84, 264, 19, 99, 4, 13, 14, 102, 45, 23, 5, 110, 68, 9, 42, 5, 1, 23, 10, 3, 13, 6, 21, 9, 208, 143, 12, 3, 66, 84, 103, 15, 82, 9, 31, 6, 102, 12, 24, 9, 87, 0, 7, 0, 12, 28, 103, 99, 208, 9, 72, 21, 37, 89, 14, 20, 99, 24, 7, 9, 24, 11, 0, 21, 341, 82, 12, 101, 3, 11, 11, 23, 11, 76, 7, 24, 6, 12, 6, 208, 12, 92, 100, 12, 4, 9, 11, 13, 0, 10, 12, 65, 372, 16, 102, 68, 12, 0, 165, 14, 101, 273, 41, 5, 45, 9, 4, 7, 0, 2, 6, 11, 12, 101, 208, 10, 125, 0, 8, 93, 142, 66, 14, 104, 7, 8, 6, 198, 300, 120, 5, 21, 5, 88, 28, 84, 3, 68, 2, 44, 12, 97, 121, 208, 0, 97, 102, 75, 307, 99, 372, 121, 2, 76, 6, 142, 6, 21, 0, 5, 6, 101, 6, 9, 89, 6, 103, 21, 14, 77, 23, 85, 0, 84, 7, 15, 20, 15, 6, 0, 6, 0, 99, 0, 12, 44, 275, 41, 3, 65, 45, 6, 109, 77, 20, 14, 0, 23, 8, 198, 14, 14, 5, 23, 31, 5, 100, 11, 0, 7, 100, 19, 13, 13, 24, 23, 101, 20, 120, 6, 231, 45, 88, 101, 15, 9, 6, 66, 12, 11, 66, 11, 6, 0, 11, 13, 24, 120, 231, 0, 5, 21, 10, 16, 307, 110, 12, 23, 6, 6, 17, 86, 13, 12, 341, 9, 8, 26, 275, 68, 108, 149, 121, 11, 9, 84, 0, 120, 44, 38, 7, 10, 0, 14, 23, 9, 6, 175, 109, 171, 20, 133, 41, 82, 62, 104, 175, 9, 9, 78, 102, 11, 110, 5, 5, 4, 155, 5, 23, 11, 101, 94, 110, 90, 127, 45, 275, 49, 25, 16, 7, 6, 44, 117, 82, 20, 20, 15, 5, 15, 2, 6, 7, 6, 6, 132, 104, 100, 274, 136, 70, 66, 13, 16, 23, 0, 89, 12, 7, 41, 20, 11, 12, 26, 10, 110, 97, 69, 109, 85, 11, 11, 24, 136, 120, 110, 231, 44, 3, 42, 0, 1, 181, 33, 11, 6, 84, 0, 20, 5, 157, 14, 36, 153, 100, 6, 165, 165, 69, 36, 18, 10, 7, 83, 6, 99, 33, 143, 24, 0, 4, 9, 12, 5, 30, 241, 197, 6, 109, 98, 7, 101, 186, 121, 10, 155, 0, 198, 12, 0, 15, 4, 2, 258, 100, 24, 2, 17, 13, 6, 99, 300, 95, 104, 3, 14, 176, 24, 31, 17, 65, 6, 1, 81, 7, 23, 294, 9, 13, 135, 12, 76, 0, 9, 9, 24, 21, 137, 5, 13, 47, 99, 15, 1, 0, 3, 21, 3, 0, 4, 11, 110, 203, 5, 84, 4, 31, 84, 5, 4, 10, 5, 256, 4, 5, 159, 6, 6, 0, 325, 4, 6, 43, 256, 159, 256, 159, 43, 210, 181, 5, 101, 181, 5, 0, 397, 5, 6, 13, 397, 0, 159, 159, 278, 121, 101, 5, 450, 5, 234, 4, 5, 15, 103, 5, 0, 256, 6, 3, 6, 118, 181, 8, 325, 256, 256, 8, 365, 5, 6, 375, 16, 400, 0, 8, 12, 159, 278, 15, 5, 0, 5, 122, 159, 278, 109, 89, 6, 159, 4, 3, 322, -1, 192, 241, 186, 12, 3, 206, 4, 13, 4, 5, 181, 8, 187, 2, 8, 225, 0, 256, 122, 6, 181, 7, 6, 96, 367, 0, 276, 175, 15, 256, 1, 5, 3, 3, 106, 152, 12, 5, 0, 92, 3, 121, 285, 6, 118, 101, 337, 5, 122, 159, 15, 5, 4, 0, 333, 84, 4, 172, 137, 7, 456, 16, 122, 4, 172, 181, 104, 4, 5, 256, 6, 13, 36, 488, 159, 5, 90, 5, 210, 84, 103, 61, 1, 83, 171, 90, 256, 385, 122, 22, 163, 150, 203, 4, 122, 191, 188, 149, 8, 77, 114, 112, 247, 8, 91, 128, 278, 3, 2, 4, 355, 2, 4, 6, 6, 241, 281, 60, 205, 240, 191, 121, 238, 265, 100, 8, 123, 5, 6, 14, -1, 6, 2, 104, 53, 114, 194, 1, 96, 6, 111, 281, 2, 102, 16, 419, 53, 3, 192, 3, 78, 200, 9, 96, 60, 80, 247, 60, 16, 225, 0, 78, 119, 172, 164, 193, 13, 3, 1, 247, 225, 128, 4, 159, 1, 11, 171, 194, 181, 234, 234, 118, 124, 50, 3, 3, 112, 419, 234, 250, 0, 96, 10, 147, 5, 1, 6, 156, 43, 1, 0, 80, 53, 2, 257, 6, 84, 3, 459, 6, 365, 241, 13, 31, 128, 4, 121, 172, 0, 5, 61, 210, 5, 3, 104, 6, 256, 441, 4, 4, 6, 2, 124, 91, 150, 7, 87, 234, 331, 5, 181, 102, 172, 5, 5, 56, 104, 92, 122, 13, 111, 162, 93, 2, 128, 1, 172, 80, 15, 5, 234, 367, 309, 209, 103, 123, 15, 101, 455, 225, 2, 5, 103, 6, 337, 5, 1, 265, 5, 333, 123, 16, 234, 4, 137, 25, 2, 513, 209, 111]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/122", "prompt": "\ndef add_elements(arr, k):\n    \n\n\n    def digits(x: int) -> int:\n        s = str(x)\n        return len(s) - 1 if s[0] == \"-\" else len(s)\n    return sum(filter(lambda x: digits(x) <= 2, arr[:k]))\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef add_elements(arr, k):\n    \n\n\n    def digits(x: int) -> int:\n        s = str(x)\n        return len(s) - 1 if s[0] == \"-\" else len(s)\n    return sum(filter(lambda x: digits(x) <= 2, arr[:k]))\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef add_elements(arr, k):\n    \n\n\n    def digits(x: int) -> int:\n        s = str(x)\n        return len(s) - 1 if s[0] == \"-\" else len(s)\n    return sum(filter(lambda x: digits(x) <= 2, arr[:k]))\n\n", "raw_modification": "```python\n<code_start>\ndef add_elements(arr, k):\n    def digits(x: int) -> int:\n        # Convert the number to a string\n        s = str(x)\n        # Check if the number is negative and calculate the number of digits\n        return len(s) - 1 if s[0] == \"-\" else len(s)\n\n    # Create a list to store elements that satisfy the condition\n    filtered_elements = []\n    for i in range(min(k, len(arr))):\n        # Check if the number of digits is less than or equal to 2\n        if digits(arr[i]) <= 2:\n            # Append the element to the filtered list\n            filtered_elements.append(arr[i])\n\n    # Initialize the sum\n    total_sum = 0\n    for element in filtered_elements:\n        # Add each element to the total sum\n        total_sum += element\n\n    # Return the total sum\n    return total_sum\n<code_end>\n```", "modification": "\ndef add_elements(arr, k):\n    def digits(x: int) -> int:\n        \n        s = str(x)\n        \n        return len(s) - 1 if s[0] == \"-\" else len(s)\n\n    \n    filtered_elements = []\n    for i in range(min(k, len(arr))):\n        \n        if digits(arr[i]) <= 2:\n            \n            filtered_elements.append(arr[i])\n\n    \n    total_sum = 0\n    for element in filtered_elements:\n        \n        total_sum += element\n\n    \n    return total_sum\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3], [[111, 121, 3, 4000, 5, 6], 2], [[11, 21, 3, 90, 5, 6, 7, 8, 9], 4], [[111, 21, 3, 4000, 5, 6, 7, 8, 9], 4], [[1], 1], [[98, 87, 76, 65, 54, 43, 32, 21, 10], 5], [[-4, 5, 67, 34, 56, 12, 89, 23, 45], 7], [[100, 200, 300, 400, 500, 600], 3], [[10, 20, 30, 40, 50, 60], 1], [[-1, -2, -3, -4, -5, -6, -7, -8, -9], 4], [[9, 10, 11, 100, 200, 300], 5], [[90, 80, 70, 60, 50, 40, 30], 3], [[1, 11, 22, 99, 100, 999], 6], [[5, 10, 15, 20, 25, 30, 35, 40, 45, 50], 10], [[101, 202, 303], 2], [[98, 87, 65, 54, 43, 32, 21, 10, 87], 5], [[100, 199, 300, 400, 500, 600], 3], [[200, 300, 400, 500, 600], 3], [[-1, -2, -3, -4, -5, -6, -7, -8, -9], 3], [[100, 199, 300, 400, 500, 600], 2], [[98, 87, 76, 20, 65, 54, 43, 32, 21, 10], 5], [[98, 87, 76, 20, 65, 54, 43, 32, 21, 10, 87], 5], [[100, 199, 400, 500, 600], 2], [[-4, 5, 67, 34, 56, 12, 23, 87], 7], [[-1, -2, -3, -4, -5, -6, -7, -8, -10], 3], [[90, 80, 70, 60, 50, 40, 30, 90], 3], [[-1, -2, -3, -4, -5, -6, -7, 99, -10], 3], [[100, 199, 300, 400, 500, 600, 600], 3], [[-4, 5, 67, 34, 56, 12, 23, 87, 67, 34], 7], [[101, 303], 2], [[5, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50], 10], [[9, 10, 11, 101, 200, 300], 6], [[5, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50, -2], 10], [[-4, 5, 67, 34, 56, 12, 23, 87, 67], 7], [[100, 199, 300, 400, 500, 600], 1], [[100, 199, 400, 9, 500, 600], 2], [[100, 199, 299, 400, 500, 600], 3], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50], 10], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50, 5], 10], [[100, 199, 300, 400, 500, 600, 300], 2], [[-1, -2, -3, -4, -5, -6, -7, 99, -10], 2], [[100, 199, 300, 399, 500, 600, 50, 300], 1], [[9, 10, 11, 100, 200, 300], 4], [[101, 23], 2], [[-7, -1, -2, -3, -4, -5, -6, -7, 99, -10], 2], [[-1, -2, -3, -4, -5, -6, -7, -8], 5], [[-1, -2, -3, -4, -5, -6, -7, 99, -10], 4], [[-4, 5, 67, 34, 56, 12, 89, 23, 11, 45], 7], [[100, 199, 300, 400, 500, 600, 300], 7], [[90, 80, 60, 50, 40, 51, 30], 3], [[-1, -2, -3, -4, -5, -6, 35, -8], 5], [[304, 101, 303], 2], [[98, 87, 65, 54, 43, 32, 21, 10, 87, 21], 6], [[9, 10, 100, 200, 10, 300, 10], 5], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50, 5, 10], 11], [[23, 101, 23], 2], [[90, 80, 70, 60, 50, 40, 30], 2], [[-1, -2, -3, 12, -5, -6, 35, -8], 5], [[-4, 5, 67, 34, 56, 12, 89, 23, 11, 45], 8], [[-4, 5, 67, 34, 56, 12, 23, 87], 6], [[101, 23], 1], [[202, 101, 202, 303], 2], [[-4, 5, 67, 34, 56, 12, 23, 87, 67, -4], 7], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -8], 3], [[5, 21, 10, 20, -2, 25, 30, 35, 40, 45, 50], 9], [[-5, 5, 67, 34, 56, 12, 23, 87, 67, 34], 7], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50], 12], [[90, 80, 70, 60, 50, 40, 30, 90, 70], 3], [[100, 300, 400, 500, 600, 600], 1], [[5, 10, 15, 20, 24, 30, 35, 40, 45, 50], 10], [[100, 199, 400, 9, 600], 2], [[98, 87, 76, 20, -6, 65, 54, 43, 32, 21, 10, 87], 5], [[90, 23, 70, 60, 50, 40, 30], 3], [[100, 35, 199, 400, 500, 600, 300], 2], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 49], 11], [[5, 10, 15, 20, -2, 25, 30, 35, 40, 16, 45, 50], 11], [[100, 199, 300, 400, 500, 600, 600, 199], 2], [[-1, -2, -3, -4, -6, -7, -8, -9], 4], [[-1, -2, -3, -4, -6, 16, -8, -9], 4], [[60, 101, 303], 2], [[-1, -2, -3, -4, -5, -6, -7, 99, -10], 5], [[98, 87, 76, 20, -6, 65, 43, 32, 21, 10, 87], 5], [[100, 199, 300, 400, 500, 600, 300], 1], [[98, 87, 76, 20, -6, 54, 43, 32, 21, 10, 87], 5], [[100, 35, 199, 400, 500, 600, 300, 199], 5], [[5, 21, 10, 20, -2, 25, 30, 35, 40, 45, 50], 10], [[100, 35, 199, 501, 400, 500, 600, 300], 1], [[50, 9, 100, 200, 10, 300, 10], 5], [[100, 35, 199, 400, 500, 600, 500, 300, 199], 2], [[5, 21, 10, 15, 20, 70, 25, 30, 35, 40, 45, 50], 10], [[-5, 5, 67, 34, 56, 12, 23, 87, 67, 34, 12], 6], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50], 11], [[23, 100, 101, 23], 2], [[98, 87, 76, 20, 65, 54, 43, 32, 21, 10, 87, 87, 54], 5], [[-2, -3, -4, -5, -6, -7, 99, -10], 4], [[5, 21, 10, 15, 20, 70, 25, 30, 35, 40, 45, 50, 40], 10], [[100, 199, 300, 400, -7, 600, 300], 7], [[-4, 5, 67, 56, 12, 23, 87, 67], 7], [[200, 301, 400, 500, 600], 2], [[-1, -2, -3, -4, -5, -6, 8, 99, -10], 3], [[100, 199, 300, 32, 400, 500, 600], 3], [[90, 80, 70, 60, 50, 40, 31], 3], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 5], 10], [[5, 21, 10, 15, 20, -2, 25, 30, 35, 40, 45, 50, 5, 25], 11], [[9, 10, 11, 100, 12, 200], 4], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10], 8], [[-99, -88, -77, -66, -55, -44, -33, -22, -11], 5], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 7], [[111, 321, 500, 100, 200, 300, 400, 600, 700], 3], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 800], 5], [[11, 22, 33, 44, 55, 66, 77, 88, 99], 9], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 3], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[1000000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 800], 4], [[10, 20, 31, 40, 50, 60, 70, 80, 90, 100, 110], 7], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10, 7], 8], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 4], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 9, 33, 10], 9], [[1000000, 3, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10, 7], 8], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[111, 1111, 22, 222, 333, 445, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000], 12], [[-99, -89, -77, -66, -55, -44, -33, -22, -11], 5], [[1000000, 200, 3, 40, 5000000, 60, 7, 4999999, 8000, 9, 10, 7], 8], [[10, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 3], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 5], [[-99, -89, -77, -55, 900, -44, -33, -22, -11], 5], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 12], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 5], [[8000, 1000000, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10], 8], [[10, 200, 300, 400, 600, 700, 800, 900, 1000], 3], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000, 7000], 4], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[10, 200, 300, 400, 700, 800, 900, 200, 1000], 3], [[3, 200, 3, 40, 5000000, 7, 8000, 9, 10, 7], 8], [[10, 20, 31, 40, 50, 60, 70, 1000000, 80, 90, 100, 110], 6], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4039, 5050, 6000, 7000, 8000, 9000], 12], [[-99, -89, -77, -55, 900, -44, -33, -22, -11], 6], [[2, 200, 3, 40, 5000000, 7, 8000, 9, 10, 7], 8], [[111, 1111, 22, 222, 333, 445, 555, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, -55, 8000, 9000, 555], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000], 11], [[111, 1111, 22, 222, 333, 445, 555, 777, 888, 999, 1000, 2000, 8000, 4040, -78, 5050, 6000, 7000, 8000, 9000], 12], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 200], 3], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 5], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 10, 10], 8], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 333], 6], [[1000, 20, 101, 300, 39999, 100, 500, 10000, 6000, 70, 40000, 800], 5], [[1000000, 20, 5000000, 40000, 100, 500, 10000, 6000, 70, 800], 4], [[100, 100, 201, 300, 400, 500, 600, 700, 800, 900, 1000, 200], 3], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 11], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000], 4], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 12], [[1000000, 20, 5000000, 40000, 100, 500, 9999, 6000, 70, 801], 3], [[1000, 20, 101, 300, 39999, 100, 500, 10000, 6000, 70, 40000, 800], 4], [[80, 8, 200, 3, 40, 5000000, 60, 7, 4999999, 8000, 9, 10, 7], 8], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4039, 5050, 6000, 4039, 7000, 8000, 9000], 12], [[1000000, 200, 2000, 40, 5000000, 60, 7, 8000, 9, 10], 8], [[111, 1111, 22, 222, 0, 555, 666, 888, 999, 1000, 2000, 3030, 5050, 6000, 7001, 8000, 9000, 111], 12], [[-99, -89, -77, -55, 900, -44, -22, -11], 7], [[-99, -99, -89, -77, -55, 900, -44, -33, -22, -11], 5], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 444, 7000, 8000, 9000, 111], 12], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800], 5], [[111, 1111, 222, 333, 445, 555, 777, 888, 999, 1000, 2000, 8000, 4040, -78, 5050, 6000, 7000, 8000, 9000], 12], [[1000, 300, 40000, 100, 500, 10000, 6000, 70, 800], 5], [[3, 201, 3, 40, 5000000, 7, 8000, 9, 10, 7], 8], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 500, 20], 4], [[1000, 50, 20, 101, 300, 39999, 100, 500, 10000, 6000, 70, 40000, 800], 4], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 501, 6000, 70, 40000, 333], 6], [[-100, -89, -77, -55, 900, -44, -22, -11], 7], [[1000000, 200, 3, 40, 60, 7, 4999999, 8000, 9, 10, 7], 8], [[1000, 300, 300, 100, 500, 10000, 6000, 70], 5], [[10, 20, 31, 40, 50, 60, 70, 80, 90, 100, 111], 7], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[10, 901, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 3], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 13], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000], 5], [[1000, 20, 101, 300, 39999, 100, 500, 6000, 40000, 800], 4], [[10, 20, 31, 40, 50, 60, 71, 1000000, 80, 90, 100, 110], 6], [[1000001, 200, 3, 40, 5000000, 7, 8000, 9, 10], 8], [[-99, -88, -77, -55, 900, -44, -22, -11], 8], [[10, 200, 300, 400, 700, 800, 900, 200, 1000], 2], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 8000], 12], [[-99, -99, -89, -77, -55, 900, -44, -33, -22, -11], 6], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 1111], 12], [[100, 100, 201, 99, 300, 400, 500, 600, 700, 800, 900, 1000, 200], 2], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 444, 1000], 10], [[200, 300, 400, 500, 600, 700, 800, 900, 1000], 3], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 333], 7], [[1000, 101, 300, 39999, 100, 500, 6000, 40000, 800, 20], 4], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 90], 7], [[111, 1111, 0, 222, 333, 300, 444, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 8000], 12], [[111, 321, 500, 100, 200, 300, 400, 600, 700, 200], 3], [[1000, 20, 101, 300, 40000, 100, 500, 500, 10000, 501, 6000, 70, 40000, 333], 6], [[200, 300, 400, 500, 600, 700, 800, 900, 1000, 600], 3], [[111, 1111, 22, 222, 333, 445, 555, 777, 888, 999, 1000, 2000, 8000, 4040, -78, 5050, 7000, 8000, 9000], 13], [[1000000, 20, 5000000, 40000, 100, 500, 10000, 6000, 70, 800], 5], [[-99, -99, -89, 7001, -55, 900, -44, -33, -22, -11], 6], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 444, 7000, 8000, 9000, 111], 11], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 4040], 12], [[1000000, 200, 3, 40, 5000000, 60, 7, 11, 8001, 8000, 9, 10, 5000000], 8], [[10, 20, 31, 40, 50, 60, 70, 80, 90, 100, 111], 3], [[111, 1111, 22, 333, 444, 555, 71, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 10, 10, 10], 8], [[-99, -89, -77, -55, 900, -44, -33, -22, -11, -99], 6], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 4040], 11], [[-99, -88, -78, -66, -55, -44, -33, 10000, 600, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[1000000, 3, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10, 7], 7], [[100, 200, 300, 400, 501, 600, 700, 800, 900, 1000, 200], 3], [[111, 1111, 22, 55, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 1111], 12], [[1000000, 20, 300, 40000, 100, 40001, 500, 10000, 6000, 70, 800], 3], [[100, 200, 400, 500, 600, 700, 800, 900, 1000, 200], 3], [[1000, 20, 300, 40000, 100, 500, 100, 6000, 70, 800], 6], [[1000, 555, 101, 300, -89, 100, 500, 10000, 6000, 70, 40000, 800], 4], [[20, 200, 3, 40, 5000000, 60, 7, 8000, 10], 8], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000], 4], [[1000000, 20, 5000000, 40000, 100, 500, 10000, 6000, 70, 800], 6], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 4, 55, 66, 77, 88, 99], 10], [[1000000, 2, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10, 7], 8], [[1000000, 2, 200, 3, 5000000, 60, 7, 8000, 9, 10, 7], 8], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 4040, 22], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4039, 5050, 6000, 4039, 7000, 8000, 8999], 12], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 5999, 7000, 8000, 9000], 12], [[200, 3, 40, 60, 7, 8000, 9, 10, 7], 8], [[10, 20, 31, 40, 50, 60, 71, 1000000, 80, 90, 100, 110, 100], 6], [[200, 3, 40, 60, 7, 9, 10, 7], 8], [[111, 1111, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[-99, -99, -89, -77, -55, 900, -44, -33, -21, -22, -11], 5], [[1000, 300, 300, 100, 100, 500, 10000, 6000, 70], 5], [[-99, -99, -89, -77, -55, 900, -44, -21, -22, -11], 4], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 9, 7, 10, 7, 3], 9], [[-99, -89, -77, -55, 900, -44, -21, -22, -11], 4], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000, 111], 4], [[111, 1111, 22, 222, 333, 444, 111, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 11], [[20, 301, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 5], [[1000, 20, 101, 300, 39999, 100, 500, 10000, 6000, 445, 70, 40000, 800, 445], 4], [[100, 100, 201, 99, 300, 400, 500, 600, 700, 800, 900, 1000, 200, 201], 2], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 6], [[111, 1111, 222, 333, 445, 555, 777, 888, 999, 1000, 2000, 8000, 4040, -78, 5050, 6000, 7000, 8000, 9000], 13], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000, 100], 4], [[1000, 20, 300, 40000, 100, 500, 100, 6000, 70, 800, 40000], 6], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 5999, 7000, 8000, 9000, 7000], 12], [[1000, 20, 300, 6000, 500, 10000, 6000, 70, 40000, 799], 6], [[111, 1111, 22, 222, 334, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 444, 6999, 8000, 9000, 111], 12], [[1000, 20, 101, 300, 501, 39999, 100, 500, 10000, 6000, 70, 40000, 800], 5], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 1111], 11], [[111, 1111, 22, 222, 333, 444, 111, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 10], [[1000001, 200, 3, 40, 5000000, 7, 8000, 9, 10], 9], [[1000001, 200, 3, 40, 5000000, 40, 8000, 9, 10, 8000], 9], [[1000, 20, 101, 300, 40000, 100, 500, 500, 10000, 501, 6000, 70, 40000, 333, 333], 6], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 10, 10], 7], [[-99, -89, -66, -55, -44, -33, -22, -11], 5], [[1000, 20, 101, 300, 39999, 100, 5, 6000, 40000, 800], 4], [[1000, 20, 101, 300, 40000, 99, 500, 10000, 6000, 70, 40000, 800], 5], [[111, 321, 500, 100, 200, 300, 400, 99, 700], 3], [[111, 1111, 22, 222, 333, 445, 555, 888, 999, 1000, 2000, 8000, 4040, -78, 5050, 7000, 8000, 9000], 13], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 4040], 13], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 5999, 7000, 8000, 9000, 7000, 9000], 12], [[1000, 555, 101, 300, -89, 100, 500, 10000, 6000, 70, 40000, 800], 12], [[-99, -99, -89, 7001, -55, -44, -33, -22, -11], 6], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 110, 3030, 5050, 6000, 8000, 9000], 12], [[1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800], 5], [[111, 1111, 0, 222, 333, 300, 444, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 8000], 11], [[1000, 300, 300, 100, 500, 10000, 6000, 70, 300], 5], [[200, 3, 40, 60, 7, 8000, 9, 10, 7], 3], [[111, 1111, 22, 222, 0, 555, 666, 888, 1000, 2000, 3030, 5050, 6000, 7001, 8000, 9000, 111], 12], [[1000, 20, 4039, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 5], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 800, 101], 5], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 800, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 13], [[111, 1111, 22, 222, 333, 444, 555, 8999, 666, 777, 888, 999, 1000, 2000, 201, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[100, 200, 400, 500, 600, 700, 800, 900, 1000, 101, 200], 3], [[111, 1111, 22, 7999, 222, 333, 445, 555, 777, 888, 999, 1000, 2000, 8000, 4040, -78, 5050, 6000, 7000, 8000, 9000], 12], [[1000, 20, 300, 20, 6000, 500, 10000, 6000, 70, 40000, 799], 6], [[1000, 555, 101, 300, -89, 101, 500, 10000, 6000, 70, 40000, 800], 12], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 5999, 7000, 8000, 9000], 11], [[1000000, 200, 2, 40, 5000000, 60, 7, 8000, 10, 10], 7], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[10, 20, 31, 40, 50, 60, 70, 1000000, 80, 90, 110], 6], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 112, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 11], [[1000, 20, 300, 1000001, 500, 10000, 6000, 70, 40000, 799], 6], [[10, 200, 300, 400, 700, 800, 900, 200, 1000, 900], 9], [[111, 799, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 444, 1000], 10], [[-99, -89, -77, -55, 112, 900, -44, -33, -22], 6], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 34, 44, 55, 66, 77, 88, 99], 10], [[1000000, 3, 200, 3, 40, 5000000, 60, 7, 6, 8000, 9, 10, 7], 7], [[1000000, 200, 12, 3, 40, 5000000, 60, 7, 8000, 9, 7, 10, 7, 3], 9], [[111, 1111, 22, 222, 333, 444, 555, 666, 88, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 4, 66, 77, 88, 99], 10], [[1000, 20, 300, 20, 6000, 500, 10000, 6000, 70, 40000, 799], 5], [[-99, -89, -77, -55, 900, -44, -22, -11], 4], [[11, 22, 33, 44, 55, 66, 77, 88, 99], 8], [[111, 1111, 22, 222, 333, 444, 111, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 12], [[111, 1111, 22, 112, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[20, 71, 301, 40000, 100, 500, 10000, 6000, 70, 40000, 800, 100], 5], [[10, 20, 31, 40, 50, 60, 70, 1000000, 80, 90, 100, 110, 1000000], 6], [[1000, 20, 101, 300, 34, 100, 500, 10000, 6000, 70, -100, 40000, 800], 5], [[100, 200, 400, 500, 600, 700, 800, 900, 1000], 4], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 6], [[1000, 20, 101, 300, 39999, 100, 5, 6000, 40000, 800, 20], 4], [[3, 201, 3, 40, 5000000, 7, 8000, 9, 10, 7], 7], [[1000000, 3, 200, 3, 40, 5000000, 39, 60, 7, 6, 8000, 9, 10, 7], 4], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000], 2], [[200, 300, 400, 500, 600, 700, 800, 900, 1000, 600], 4], [[1000000, 3, 200, 3, 40, 5000000, 39, 60, 7, 6, 8000, 9, 10, 39, 7], 4], [[111, 1111, 22, 222, 333, 444, 111, 555, 666, 777, 888, 1000, 2000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 12], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 34, 44, 55, 66, 77, 88, 99], 9], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000], 6], [[-99, -88, -78, -66, -55, -44, -33, 10000, 600, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 300, -88], 10], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 110, 5050, 6000, 8000, 9000], 12], [[1000000, 200, 222, 3, 40, 5000000, 60, 7, 11, 8001, 8000, 9, 10, 5000000], 8], [[1000000, 3, 200, 3, 5000000, 39, 60, 7, 6, 8000, 9, 10, 39, 5000000], 4], [[111, 1111, 22, 222, 333, 444, 555, 666, 88, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 13], [[111, 1111, 22, 222, 333, 444, 111, 555, 666, 777, 888, 1000, 2000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111, 333], 12], [[111, 1111, 22, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 4040], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 11], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 4, 66, 77, 88, 99], 11], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 1111], 11], [[3, 200, 3, 5000000, 7, 8000, 9, 10, 7], 8], [[111, 1111, 22, 333, 444, 2000, 555, 666, 777, 888, 667, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[2, 9999, 200, 3, 40, 5000000, 7, 8000, 9, 10, 7, 7], 8], [[200, 3, 40, 60, 7, 8000, 9, 10, 7], 9], [[1000000, 20, 5000000, 40000, 100, 500, 9999, 7000, 6000, 70, 801], 3], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 90, 90], 7], [[1000, 20, 101, 300, 39999, 1111, 100, 500, 10000, 6000, 445, 70, 40000, 800, 445], 3], [[1000000, 200, 2000, 40, 5000000, 60, 7, 8000, 9, 10], 9], [[111, 1111, 22, 222, 333, 444, 111, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 13], [[111, 1111, 6999, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[111, 1111, 22, 222, 333, 444, 555, 8999, 666, 777, 888, 999, 1000, 2000, 202, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 66, 4040, 5050, 6000, 7000, 8000, 9000], 11], [[1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800, 10000], 5], [[111, 1111, 22, 222, 333, 445, 555, 888, 10000, 999, 1000, 2000, 8000, 4040, -78, 5050, 7000, 8000, 9000], 13], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000, 7000], 5], [[-99, -99, -89, -78, -55, 900, -44, -22, -22, -11], 4], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 666, 800], 5], [[1000001, 200, 3, 40, 5000000, 7, 8000, 9], 8], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 22, 33, 44, 4, 66, 77, 88, 99], 11], [[1000, 6000, 19, 300, 40000, 100, 500, 6000, 70, 800], 7], [[9, 20, 31, 40, 50, 60, 70, 80, 90, 100, 111, 40], 7], [[-99, -89, -77, -55, 900, -44, -33, -22, -11, -99], 7], [[100, 200, 400, 500, 599, 600, 700, 800, 900, 1000, 101, 200], 3], [[1000000, 2, 200, 3, 5000000, 10, 60, 7, 8000, 9, 10, 7], 8], [[111, 1111, 22, 7, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 23, 6000, 7000, 8000, 9000], 13], [[111, 1111, 0, 222, 333, 301, 444, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 8000], 10], [[200, 3, 40, 60, 999, 7, 8000, 9, 10, 7], 9], [[111, 1111, 22, 222, 333, 445, 555, 888, 10000, 23, 999, 1000, 2000, 8000, 4040, -78, 5050, 7000, 8000, 9000], 13], [[9, 7, 31, 40, 50, 60, 70, 80, 90, 100, 111, 40], 7], [[111, 444, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[-99, -89, -77, -55, -44, -21, -22, -11], 4], [[1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, -55, 8000, 9000, 555], 12], [[200, 3, 40, 60, 7, 8000, 9, 8, 10, 7], 4], [[41, 1000000, 3, 200, 3, 40, 5000000, 39, 60, 7, 6, 8000, 9, 10, 7], 4], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 1111], 12], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000], 9], [[1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800, 70], 5], [[10, 20, 31, 50, 60, 70, 1000000, 80, 90, 100, 110, 1000000], 5], [[90, 1000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 800], 5], [[1000, 20, 300, 20, 6000, 500, 10000, 6000, 70, 40000, 799, 799], 5], [[10, 901, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 4], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000], 3], [[1000, 555, 101, 300, -89, 100, 500, 10000, 6000, 70, -89, 800], 12], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 90, 90, 30], 7], [[100, 200, 300, 400, 500, 600, 700, 800, 55, 1000, 200], 3], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 5999, 7000, 555, 8000, 9000], 11], [[111, 1111, 222, 333, 444, 555, 666, 777, 887, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000, 111], 4], [[1000, 300, 300, 100, 500, 10000, 6000, 70], 4], [[-99, -88, -78, -66, -55, -44, -33, 333, -11, 0, 22, 33, 44, 4, 66, 77, 88, 99], 11], [[1000, 20, 300, 20, 6000, 500, 10000, 6000, 40000], 6], [[100, 100, 201, 300, 400, 500, 600, 700, 900, 1000, 200], 3], [[100, 200, 300, 400, 500, 600, 700, 800, 55, 1000, 200], 2], [[1000, 20, 101, 300, 40000, 100, 500, 500, 10000, 501, 6000, 70, 40000, 333, 333], 5], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 39999, 888, 999, 1000, 2000, 110, 3030, 5050, 6000, 8000, 9000], 12], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 500, 20], 5], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 444, 1000, 999], 10], [[-99, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 4, 66, 77, 88, 99, 99], 10], [[1000, 8, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000, 10000], 3], [[1000, 555, 9999, 101, 300, -89, 100, 500, 10000, 6000, 70, 40000, 800], 12], [[1000000, 2, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10, 7], 7], [[-99, -89, -77, -55, 222, 900, -44, -33, -22, -11], 6], [[1000000, 200, 2, 7999, 40, 5000000, 60, 7, 8000, 10, 10], 7], [[111, 799, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 444, 1000, 2000, 2000], 10], [[1000000, 20, 5000000, 40000, 100, 500, 10000, 6000, 70, 800, 70], 6], [[111, 321, 500, 101, 200, 300, 400, 600, 700], 3], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 444, 1000, 999], 9], [[111, 1111, 22, 112, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 2000], 12], [[-99, -89, -77, -66, -55, -44, -10, -33, -22, -11, -11], 5], [[1000000, 200, 2000, 40, 5000000, 60, 7, 8000, 9, 10, 9], 8], [[111, 1111, 22, 222, 333, 445, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000, 777], 12], [[111, 1111, 22, 222, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 1111], 12], [[1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800, 70], 4], [[1000001, 200, 3, 39, 5000000, 40, 8000, 9, 10, 8000], 9], [[1000000, 3, 200, 3, 5000000, 60, 7, 8000, 9, 10, 7], 8], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4039, 5050, 6000, 4039, 7000, 8000, 8999, 8999], 12], [[200, 300, 400, 500, 600, 700, 800, 900, 1000, 600], 2], [[1000, 20, 300, 500, 10000, 6000, 70, 40000, 799, 40000], 6], [[3, 200, 3, 40, 5000000, 7, 8000, 12, 10, 7, 3], 8], [[1000000, 200, 2000, 40, 5000000, 60, 7, 8000, 9], 8], [[1000000, 200, 2000, 41, 5000000, 60, 8000, 9, 10], 8], [[10, 200, 300, 400, 700, 800, 900, 200, 1000, 900], 8], [[3, 40, 60, 7, 8000, 9, 8, 10, 7], 4], [[1000, 300, 40000, 9999, 100, 500, 10000, 9999, 6000, 70, 800, 70], 3], [[1000, 300, 40000, 202, 100, 500, 10000, 9999, 6000, 70, 800, 70], 3], [[1000, 8, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000, 10000, 70], 3], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 66, 4040, 5050, 6000, 7000, 8000, 9000, 6000], 11], [[1000, 8, 20, -66, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000, 10000], 3], [[111, 4999999, 321, 500, 101, 200, 300, 400, 600, 700], 3], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 5999, 7000, 8000, 9000, 7000], 11], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 444, 6999, 8000, 9000, 111, 8000], 12], [[20, 301, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 3], [[1000000, 20, 5000000, 40000, 100, 500, 9999, 7000, 6000, 70, 801], 2], [[111, 321, 500, 101, 200, 400, 600, 700], 3], [[299, 1000, 101, 300, 39999, 100, 500, 6000, 40000, 800, 20, 500], 4], [[1000000, 2, 200, 3, 5000000, 60, 7, 8000, 9, 10, 5000000, 10], 9], [[111, 1111, 22, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 8, 5050, 6000, 7000, 8000, 4040], 12], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 10, 10, 1000000, 1000000], 8], [[4, 201, 3, 40, 5000000, 7, 8000, 9, 10, 7], 8], [[-99, -88, -78, -66, -55, -44, -33, 10000, 600, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99, -33], 10], [[111, 1111, 22, 222, 333, 555, 666, 888, 999, 1000, 2000, 3030, 4040, 5050, 7000, 8000, 9000], 13], [[-99, -99, -89, -77, -55, 900, -44, -33, -21, -22], 5], [[-99, -99, -89, 7001, -55, -44, 7001, -33, -22, -11], 6], [[20, 100, 301, 40000, 100, 500, 10000, 6000, 70, 40000, 800], 6], [[111, 444, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 6000], 12], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 5999, 41, 8000, 9000, 4040], 13], [[111, 1111, 22, 333, 444, 555, 71, 666, 777, 888, 999, 1000, 2000, 8000, 666, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[1000, 20, 299, 20, 6000, 500, 10000, 6000, 40000], 6], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 10, 10], 9], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000, 8000], 13], [[11, 22, 4, 44, 55, 66, 77, 88, 99], 8], [[-99, -99, -89, -78, -55, 900, -44, -22, -22, -11, -89], 4], [[1000000, 200, 2000, 41, 5000000, 8000, 9, 10], 7], [[20, 200, 3, 40, 5000000, 667, 7, 6, 8000, 10], 8], [[111, 1111, 22, 900, 222, 333, 445, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[1000, 300, 300, 100, 500, 10000, 6001, 70], 5], [[11, 22, 33, 44, 55, 66, 88, 1000, 99], 8], [[100, 200, 300, 500, 600, 700, 800, 900, 1000, 1000], 9], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 4040, 6000, 7000, 8000, 9000], 12], [[111, 1111, 22, 7, 444, 555, 666, 777, 888, 5050, 999, 1000, 2000, 8000, 4040, 5050, 23, 6000, 7000, 8000, 9000], 13], [[111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 66, 4040, 5050, 6000, 7000, 8000, 9000], 11], [[1000, 20, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000], 5], [[111, 1111, 22, 222, 333, 444, 555, 666, 88, 777, 888, 999, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 66, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[200, 3, 40, 60, 999, 7, 8000, 9, 10, 7, 7], 9], [[100, 200, 300, 500, 600, 700, 799, 800, 900, 1000], 4], [[111, 1111, 22, 223, 333, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 12], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 5050, 6000, 7000, 8000, 9000, 8000], 14], [[1000000, 200, 90, 40, 5000000, 60, 7, 8000, 10, 10], 7], [[1000000, 20, 5000000, 40000, 100, 500, 9999, 6000, 70, 801], 2], [[111, 1111, 6999, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 1999, 4040, 5050, 6000, 7000, 8000, 9000], 9], [[111, 1111, 22, 7, 444, 555, 666, 777, 888, 5050, 999, 1000, 2000, 8000, 4039, 5050, 23, 1000000, 7000, 8000, 9000], 13], [[99, 1000000, 20, 5000000, 40000, 100, 500, 9999, 6000, 70, 801], 2], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 500, 20], 6], [[1000, 20, 300, 20, 6000, 500, 10000, 6000, 70, 40000, 799, 799], 4], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 3030, 4040], 13], [[111, 1111, 22, 222, 77, 444, 111, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 13], [[1000001, 3, 40, 5000000, 1000002, 40, 8000, 9, 10, 8000], 9], [[999, 20, 300, 6000, 500, 10000, 6000, 70, 40000, 799], 7], [[10, 20, 31, 40, 50, 71, 1000000, 80, 90, 100, 110], 6], [[111, 1111, 22, 222, 333, 444, 555, 8999, 666, 777, 888, 999, 1000, 2000, 201, 4040, 5050, 5999, 7000, 8000, 9000], 13], [[111, 1111, 22, 222, 333, 444, 554, 8999, 666, 777, 888, 999, 1000, 2000, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[100, 1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800, 70], 4], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, -55, 8000, 4040, 5050, 6000, 7000, 8000, 9000, 7000], 5], [[71, 20, 101, 300, 39999, 100, 500, 10000, 6000, 70, 40000, 800], 5], [[200, 300, 400, 500, 600, 700, 800, 900, 1000, 600, 600], 4], [[1000, 300, 300, 100, 500, 10000, 6000, 70, 300], 4], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000, 10000], 3], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 111], 13], [[111, 1111, 22, 7, 444, 555, 666, 777, 888, 5050, 1000, 2000, 8000, 4039, 5050, 23, 1000000, 7000, 8000, 9000], 13], [[2000, 111, 1111, 22, 222, 0, 555, 666, 888, 999, 1000, 2000, 3030, 5050, 6000, 7001, 8000, 9000, 111], 13], [[111, 1111, 22, 222, 333, 444, 554, 8999, 666, 777, 888, 999, 1000, 2000, 4040, 5050, 6000, 7000, 9000], 13], [[1000001, 200, 3, 40, 5000001, 5000000, 7, 8000, 9], 8], [[80, 8, 200, 3, 40, 5000000, 7, 4999999, 8000, 9, 10, 7], 8], [[111, 1111, 22, 222, 333, 555, 666, 777, 888, 999, 1000, 334, 3030, 4040, 5050, 5999, 41, 8000, 9000, 4040], 13], [[200, 400, 500, 600, 700, 800, 900, 1000, 101, 200], 3], [[111, 1112, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[1000, 555, 14, 101, 300, -89, 100, 500, 10000, 6000, 70, -89, 800], 2], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 10, 10, 60], 6], [[1000, 20, 101, 300, 40000, 100, 10000, 6000, 70, 40000, 800], 5], [[1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800], 4], [[90, 1000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 7000, 800], 5], [[20, 101, 300, 39999, 100, 5, 6000, 40000, 800, 20], 4], [[1000, 20, 101, 300, 9000, 100, 500, 10000, 6000, 70, 40000, 333], 7], [[1000, 8, 20, -66, 40000, 301, 100, 500, 10000, 6000, 70, 10000, 10000], 3], [[1000, 20, 101, 300, 39999, 19, 100, 5, 6000, 40000, 800, 20], 4], [[1000, 20, 101, 300, 40000, 500, 10000, 6000, 70, 40000, 333], 7], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 444, 6999, 8000, 9000, 8000, 444], 11], [[1000000, 200, 3, 40, 5000000, 60, -89, 7, 8000, 10, 10, 1000000, 1000000], 8], [[901, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 3], [[100, 200, 300, 400, 501, 600, 700, 800, 900, 1000, 1000], 4], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 5, 55, 66, 77, 88, 99], 10], [[111, 1111, 6999, 22, 333, 444, 555, 666, 777, 888, 999, 2000, 8000, 1999, 4040, 5050, 6000, 7000, 8000, 9000], 8], [[111, 1111, 22, 55, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000, 1111], 13], [[20, 31, 40, 50, 71, 1000000, 80, 90, 100, 110, 10], 6], [[111, 1111, 0, 222, 333, 300, 444, 666, 776, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 8000], 12], [[3, 200, 3, 40, 5000000, 39, 60, 7, 6, 8000, 9, 10, 7], 4], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 1000, 2000, 3030, 5050, 6000, 444, 7000, 8000, 9000, 111], 13], [[1000, 20, 5000000, 101, 300, 40000, 500, 10000, 6000, 70, 40000, 333], 7], [[5000001, 1000, 20, 5000000, 101, 300, 40000, 500, 10000, 6000, 70, 40000, 333, 20], 6], [[20, 71, 301, 40000, 100, 69, 500, 10000, 6000, 70, 40000, 800, 100], 5], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000], 5], [[3, 200, 3, 40, 5000000, 39, 60, 7, 6, 8000, 9, 10, 7], 5], [[3, 200, 3, 40, 5000000, 7, 444, 8000, 9, 7], 8], [[1000000, 111, 200, 3, 40, 60, 7, 8000, 9, 10, 7, 3], 8], [[11, 22, 4, 44, 55, 66, 77, 88, 887, 99], 8], [[1000000, 3, 200, 3, 5000000, 60, 7, 8000, 8, 10, 7, 200], 8], [[1000000, 20, 40000, 100, 500, 9999, 6000, 70, 801], 2], [[1000000, 20, 5000000, 40000, 100, 500, 10000, 6000, 70, 800, 70], 4], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 6999, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 11], [[111, 1111, 22, 333, 555, 666, 777, 888, 999, 1000, 2000, 3030, 8, 5050, 6000, 7000, 8000, 4040], 11], [[99, 1000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 7000, 800, 300], 5], [[111, 1111, 222, 333, 321, 444, 555, 666, 777, 887, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000, 111], 4], [[1000000, 20, 301, 5000000, 40000, 100, 500, 6000, 70, 800, 70], 4], [[1000, 300, 300, 100, 299, 500, 10000, 6000, 70], 4], [[1000000, 200, 3, 40, 5000000, 60, 7, 4999999, 9, 10, 7], 8], [[99, 2, 1000000, 5000000, 40000, 100, 500, 9999, 6000, 70, 801], 2], [[901, 200, 300, 400, 500, 555, 700, 800, 900, 1000], 3], [[1000, 20, 101, 300, 40000, 500, 10000, 6000, 70, 40000, 333, 40000], 7], [[100, 200, 300, 400, 500, 600, 700, 800, 1000, 1000], 9], [[1000000, 20, 300, 40000, 100, 500, 10000, 6000, 300, 70, 800], 4], [[10, 200, 400, 700, 800, 900, 200, 1000], 2], [[100, 200, 400, 500, 599, 600, 700, 800, 900, 1000, 101, 200, 400], 3], [[-99, -99, -89, -77, 900, -44, -33, -21, -22], 5], [[1000000, 200, 12, 3, 40, 5000000, 60, 7, 8000, 8, 7, 10, 7, 3], 9], [[111, 1111, 222, 333, 444, 555, 666, 777, 888, 999, -33, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000], 5], [[10, 200, 300, 400, 700, 800, 900, 1000, 900], 9], [[111, 1111, 33, 22, 222, 333, 444, 555, 666, 777, 888, 999, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, -1, 11, 22, 33, 44, 5, 55, 66, 77, 88, 99], 10], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 39999, 800, 101], 5], [[111, 1111, 22, 222, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 9000], 12], [[-99, -99, -89, -78, -55, 900, -44, -22, -22, -11, -89], 5], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, -1, 800, 500, 20], 5], [[202, 1111, 22, 222, 333, 444, 555, 666, 88, 777, 888, 999, 2000, 3030, 5050, 6000, 8000, 9000], 12], [[1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, -55, 8000, 9000, 555], 13], [[1000, 20, 101, 300, 39999, 100, 500, 10000, 6000, 70, 40000, 800], 3], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 110, 3030, 5050, 6000, 8000, 9000, 222], 12], [[3, 201, 3, 40, 5000000, 7, 8000, 9, 11, 7], 8], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000], 13], [[1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800, 9999], 4], [[1000, 20, 300, 20, 6000, 500, 10000, 6000, -22], 6], [[111, 799, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 444, 1000], 9], [[1000000, 200, 90, 40, 5000000, 60, 7, 10, 8000, 10, 10], 7], [[-99, -99, -89, -77, -56, 900, -44, -33, -21, -22, -11], 5], [[1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800, 9999], 5], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, -1, 800, 500, 20, 800], 5], [[111, 1111, 22, 222, 0, 555, 666, 888, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 111], 11], [[1000000, 200, 2000, 41, 5000000, 60, 8000, 4999999, 9, 10], 8], [[1000, 20, 101, 300, 40000, 100, 500, 10000, 6000, 299, 70, 40000, 800], 6], [[201, -88, -78, -66, -55, -44, -33, -22, -11, 0, 11, 22, 34, 44, 55, 66, 77, 88, 99], 9], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, -1, 800, 500, 20], 5], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 10000, 10000, 6000], 3], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 12, 8000, 9000, 8000], 12], [[111, 1111, 22, 7, 444, 555, 80, 777, 888, 5050, 1000, 2000, 8000, 4039, 5050, 23, 1000000, 7000, 8000, 9000], 13], [[1000000, 200, 3, 40, 5000000, 112, 7, 8000, 10, 10], 7], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 40000, 333], 6], [[111, 1111, 22, 333, 444, 555, 666, 888, 999, 1000, 2000, 3030, 5050, 6000, 7000, 8000, 3030, 4040, 3030], 13], [[3, 200, 3, 40, 39, 60, 7, 6, 8000, 9, 10, 7], 5], [[111, 1111, 222, 333, 444, 555, 776, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000, 111, 6000], 4], [[1000, 300, 40000, 100, 13, 500, 10000, 6000, 70, 800], 5], [[10, 901, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 800], 4], [[111, 799, 22, 222, 333, 300, 555, 666, 777, 888, 3030, 999, 1000, 2000, 3030, 5050, 6000, 8000, 9000, 444], 9], [[-99, -88, -78, -66, -55, -44, 9000, -33, -22, -11, 0, 22, 33, 44, 4, 66, 77, 88, 99, 0], 11], [[111, 1111, 4039, 222, 333, 445, 555, 777, 888, 999, 1000, 2000, 8000, 4040, -78, 5050, 6000, 7000, 8000, 9000, 445, 111], 12], [[111, -33, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 110, 3030, 5050, 6000, 8000, 9000, 5050], 13], [[1000000, 200, 3, 40, 5000000, 60, 7, 4999999, 8000, 9, 10, 7, 200], 8], [[111, 1111, 22, 222, 333, 444, 554, 8999, 666, 777, 888, 999, 1000, 2000, 4040, 5050, 6000, 7000, 8999, 9000], 13], [[111, 40001, 22, 222, 333, 444, 554, 8999, 666, 777, 888, 70, 1000, 2000, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[9, 7, 31, 101, 50, 60, 70, 80, 90, 100, 111, 40], 6], [[1000, 20, 300, 40000, 301, 100, 500, 10000, 6000, 70, 800, 500, 20], 7], [[-99, -88, -77, -66, -55, -33, -22, -11, -1, 11, 22, 33, 44, 5, 55, 66, 77, 88, 99], 10], [[100, 200, 300, 500, 600, 700, 999, 799, 800, 900, 1000], 4], [[-99, -89, -77, -55, 900, -44, -22, -11, -77], 7], [[1000000, 20, 301, 5000000, 40000, 100, 500, 6000, 70, 7, 70], 4], [[200, 3, 40, 5000000, 7, 8000, 9, 10, 2, 7], 8], [[10, 20, 31, 40, 50, 60, 70, 1000000, 80, 90, 100, 110, 1000000, 1000000], 6], [[1000, 20, 299, 20, 6000, 39999, 500, 10000, 6000, 40000], 6], [[111, 321, 500, 101, 200, 400, 600, 700], 2], [[299, 1000, 101, 300, 39999, 100, 500, 6000, 40000, 800, 20, 500], 3], [[111, 1111, 22, 222, 0, 555, 666, 888, 1000, 2000, 3030, 5050, 6000, 44, 8000, 9000, 111], 12], [[-99, -44, -89, -77, -55, 900, -44, -33, -22, -11], 6], [[200, 2, 40, 60, 7, 8000, 9, 10, 7], 3], [[1000, 20, 4039, 300, 40000, 100, 500, 10000, 70, 40000, 800, 40000], 5], [[111, 1111, 22, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 8000], 12], [[100, 8999, 200, 300, 400, 501, 600, 700, 800, 900, 1000, 1000], 4], [[111, 222, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000, 9000], 5], [[-33, -99, -99, -89, 7001, -55, -44, -33, -22, -11], 6], [[100, 200, 300, 400, 600, 700, 800, 1000, 1000], 9], [[-99, -89, -77, -55, 900, -44, -33, -22, -11, -77], 5], [[111, 1111, 22, 222, 333, 300, 444, 555, 666, 777, 40, 999, 1000, 2000, 3030, 5050, 12, 8000, 9000, 8000], 12], [[71, 20, 31, 40, 50, 60, 70, 80, 90, 100, 111, 100], 6], [[10, 20, 31, 50, 71, 1000000, 80, 90, 100, 110], 7], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 200, 100], 3], [[1000000, 200, 2000, 40, 5000000, 60, 8000, 9, 10, 9], 8], [[200, 12, 40, 60, 999, 7, 8000, 9, 7], 7], [[10, 200, 300, 400, 700, 800, 900, 1000, 900], 8], [[111, 1111, 22, 222, 333, 300, 6000, 444, 555, 666, 777, 39999, 888, 999, 1000, 2000, 110, 3030, 5050, 6000, 8000, 9000], 12], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000, 1000], 4], [[111, 1111, 22, 222, 333, 444, 555, 8999, 666, 777, 888, 999, 4039, 1000, 2000, 202, 4040, 5050, 6000, 7000, 8000, 9000], 13], [[1000, 20, 101, 300, 40000, 500, 10000, 6000, 70, 40000, 40000, 300], 7], [[111, 1111, 222, 333, 444, 555, 776, 666, 777, 888, 999, 1000, 2000, 8000, 4040, 6000, 7000, 8000, 9000, 7000, 111, 6000], 7], [[-99, -99, -89, -77, -78, -55, 900, -44, -33, -21, -22], 5], [[299, 1000, 999, 101, 300, 39999, 100, 500, 6000, 20, 500], 4], [[1000001, 200, 3, 40, 5000001, -78, 5000000, 7, 8000, 9, 7], 8], [[9, 7, 6000, 31, 40, 50, 60, 70, 80, 90, 100, 111, 40], 7], [[11, 22, 33, 44, 55, 66, 88, 1000, 99], 9], [[-99, -99, -90, 7001, -55, -44, -33, -22, -11], 6], [[111, 1111, 22, 112, 222, 333, 300, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 5050, 999, 6000, 8000, 9000, 2000], 12], [[100, 200, 300, 500, 600, 700, 799, 800, 899, 1000], 4], [[111, 1111, 22, 222, 333, 445, 555, 888, 10000, 23, 999, 1000, 2000, 8000, 4040, -78, 5050, 7000, 8000, 9000, 8000], 13], [[1000, 20, 300, 40000, 100, 500, 100, 6000, 1000001, 70, 800], 6], [[445, 1000, 300, 40000, 9999, 100, 500, 10000, 6000, 70, 800, 70], 4], [[111, 1111, 22, 333, 444, 555, 666, 777, 888, 10000, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 4040, 22], 11], [[-99, -77, -55, 112, 900, -44, -33, -22], 6], [[599, 1000, 20, 101, 300, 40000, 100, 500, 10000, 501, 6000, 70, 40000, 333], 6], [[100, 2000, 30000, 400000], 3], [[1, 22, 333, 4444, 55555], 4], [[1, 2, 3, 4, 5], 5], [[1234, 5678, 9012, 3456], 3], [[99], 1], [[1, 2, 3, 4, 5, 6, 7, 8, 9], 5], [[12345, 6789, 101112, 131415, 161718], 3], [[-1, -22, -333, -4444], 2], [[-1, 2, -3, 4, -5], 3], [[55], 1], [[111, 321, 500, 100, 200, 300, 400, 600], 3], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 6], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 100], 6], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 9], [[11, 22, 33, 44, 55, 66, 77, 88, 99], 4], [[10, 20, 30, 40, 60, 70, 80, 90, 100, 110, 90], 5], [[20, 300, 40000, 100, -66, 10000, 6000, 70, 800], 4], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 8], [[-99, -88, -77, -66, -55, -44, -33, -22, -11], 6], [[100, 200, 300, 400, 5000000, 700, 800, 900, 1000], 5], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 20, 66, 77, 88, 99], 10], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800], 5], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800, 6000], 5], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 5], [[111, 1111, 22, 222, 3031, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000], 12], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99], 9], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, -44], 6], [[20, 300, 40000, 5999, 100, 500, 10000, 6000, 80, 800, 6000], 5], [[112, 321, 500, 100, 200, 300, 400], 3], [[111, 1111, 22, 222, 3031, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 2000], 12], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800, 6000, 10000], 5], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 90], 3], [[-99, -99, -88, -77, -66, -55, -44, -33, -22, -11], 5], [[1000, 20, 300, 40000, 100, 500, 10000, 100, 6000, 70, 800], 5], [[200, 3, 40, 5000000, 60, 7, 8000, 9, 10], 8], [[-99, -88, -77, -66, -55, -44, -33, 44, -11, 0, 11, 22, 33, 44, 55, 77, 88, 99], 10], [[10, 20, 30, 40, 50, 60, 70, 90, 100, 6000, 110], 6], [[-99, -88, 30, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 20, 66, 77, 88, 99], 9], [[111, 321, 500, 100, 200, 300, 400, 600, 100], 3], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500, 900], 7], [[111, 321, 500, 100, 300, 400, 600, 700], 3], [[10, 20, 30, 50, 60, 70, 80, 100, 110, 100], 6], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99], 9], [[1111, 22, 222, 3031, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 999], 12], [[111, 321, 500, 100, 200, 300, 600, 700], 3], [[100, 200, 300, 400, 500, -88, 700, 800, 1000], 3], [[-99, -88, -77, -66, -55, -44, -33, -22], 5], [[111, 321, 500, 100, 200, 300, 600, 222, 700], 3], [[111, 321, 500, 100, 200, 300, 400, 600, 700, 400], 3], [[-99, -88, -77, -66, -55, -44, -33, -21, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[112, 321, 500, 100, 200, 300, 400, 321], 3], [[100, 200, 300, 400, 500, 600, 700, 800, 70, 1000, 500], 9], [[112, 321, 500, 100, 200, 300, 400], 2], [[-99, -88, 30, -77, -66, -55, -33, -22, -11, 0, 11, 22, 33, 44, 55, 20, 66, 88, 99], 9], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000], 3], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000], 2], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 101, 1000, 500], 9], [[1111, 22, 222, 3031, 333, 444, 555, 666, 778, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 999], 12], [[-99, -77, -66, -55, -44, -33, -22, -22], 4], [[-99, -88, -77, -66, -55, -44, -33, -22, -11], 7], [[111, 500, 100, 200, 300, 600, 700, 200], 3], [[111, 320, 500, 100, 200, 300, 600, 222, 700], 4], [[100, 200, 300, 400, 600, 700, 800, 900, 1000, 500], 8], [[100, 200, 300, 400, 500, 600, 700, 500, 800, 900, 1000, 1000, 900], 3], [[101, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 9], [[1000, 20, 300, 40000, 21, 100, 500, 10000, 100, 6000, 70, 800], 5], [[111, 321, 500, 100, 200, 300, 400, 600, 700], 4], [[-99, -88, -77, -66, -55, -44, -33, 5050, -11, -44, -44], 6], [[1000, 20, 300, 40000, 666, 100, 500, 10000, 6000, 80, 800], 5], [[100, 200, 300, 400, 600, 700, 800, 1000, 500], 8], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 90], 2], [[111, 1111, 22, 222, 3031, 333, 444, 555, 600, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 2000], 12], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000, 300], 3], [[999, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 8], [[100, 200, 300, 400, 10000, 600, 700, 800, 900, 1000, 1000], 3], [[111, 321, 500, 100, 200, 300, 600, 222, 700], 2], [[321, 500, 100, 200, 300, 600, 700], 3], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000, 500], 2], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 101, 1000, 100, 500], 9], [[100, 200, 300, 400, 500, 600, 700, 800, 70, 5, 101, 1000, 500], 9], [[10, 20, 40, 50, 60, 70, 80, 90, 100, 110], 6], [[100, 200, 300, 400, 600, 700, 800, 1000, 1111], 8], [[100, 200, 300, 400, 500, 600, 700, 800, 1000], 3], [[200, 2, 40, 5000000, 60, 7, 8000, 9, 10], 8], [[111, 1111, 22, 222, 3031, 444, 555, 600, 777, 888, 999, 1000, 2000, 3030, 4040, 8000, 5050, 6000, 7000, 8000, 9000, 2000], 12], [[-99, -88, -77, -66, -55, -44, -33, -22], 7], [[112, 321, 500, 100, 199, 300, 400], 3], [[111, 321, 500, 100, 200, 300, 600, 700], 7], [[999, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 9], [[321, 500, 100, 200, 300, 600, 700], 2], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 20, 66, 77, 88, 99], 9], [[321, 77, 100, 300, 66, 600, 700], 2], [[100, 200, 300, 400, 500, 600, 700, 800, 70, 1000, 500], 10], [[112, 321, 500, 100, 200, 300, 400, 321, 321, 321], 4], [[111, 320, 500, 100, 200, 300, 600, 222, 700, 320], 4], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 2], [[321, 500, 100, 200, 300, 600, 700, 100], 2], [[20, 300, 40000, 5999, 100, 500, 10000, 80, 800, 6000], 5], [[1000, 20, 300, 40000, 666, 100, 500, 10000, 6000, 80, 800], 8], [[100, 200, 300, 400, 500, 600, 700, 800, 70, 1000, 500, 70], 9], [[1000000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 800], 3], [[1000, 20, 300, 40000, 299, 666, 100, 500, 10000, 6000, 80, 800, 800], 5], [[10, 20, 30, 40, 60, 70, 80, 90, 100, 110], 6], [[-99, -88, -77, -66, -55, -44, -33, 5050, -11, -44, -44, 5050], 6], [[111, 321, 500, 100, 200, 300, 1000, 400, 600, 700], 4], [[-99, -88, -77, -66, -55, -44, -33, -22], 6], [[200, 300, 400, 5000000, 700, 800, 900, 1000], 5], [[200, 3, 40, 5000000, 60, 7, 8000, 9, 10], 9], [[-99, -88, -77, -66, -54, -44, -33, -22], 7], [[112, 321, 500, 100, 200, 300, 400], 4], [[200, 300, 400, 500, 600, 700, 800, 900, 101, 1000, 100, 500, 300], 8], [[-99, -88, -77, -66, -55, -44, -33, -22, -44], 6], [[2000, -88, -77, -66, -55, -44, -33, -22, -11], 7], [[100, 200, 300, 400, 500, 600, 700, 500, 800, 900, 1000, 1000, 900], 11], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99], 9], [[111, 321, 500, 100, 300, 600, 222, 600], 3], [[400, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 8], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 200], 2], [[999, 200, 300, 400, 800, 500, 600, 700, 800, 900, 1000, 500], 9], [[-99, -88, -77, -66, -55, -44, -33, -11, -88], 5], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800, 6000, 10000], 3], [[10, 20, 30, 40, 50, 333, 70, 80, 90, 100, 110], 7], [[111, 320, 500, 100, 200, 300, 600, 222, 700], 3], [[100, 200, 300, 400, 700, 800, 900, 1000, 200], 5], [[111, 100, 500, 100, 300, 600, 222, 600], 3], [[321, 77, 100, 300, 66, 321, 600, 700], 2], [[111, 321, 500, 100, 200, 300, 1000, 400, 600, 700], 5], [[100, 300, 400, 700, 800, 900, 1000, 200], 5], [[10, 20, 30, 49, 60, 70, 80, 100, 110, 100], 6], [[-99, -88, -77, -66, -55, -44, -33, 5050, -11, -44, -44], 3], [[1000, 20, 300, 40000, 100, 500, 10000, 80, 800, 6000, 10000], 5], [[1000, 20, 300, 40000, 10000, 100, 500, 10000, 6000, 80, 800, 6000], 5], [[111, 500, 100, 200, 300, 600, 222, 700], 3], [[1000, 20, 300, 40000, 100, 500, 10000, 11, 80, 800, 6000, 10000], 3], [[100, 200, 400, 500, 600, 700, 199, 800, 900, 90], 3], [[800, 500, 100, 200, 300, 600, 700], 2], [[100, 6, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000, 300], 3], [[-88, -77, -66, -55, -44, -33, -22, -11], 6], [[1000, 20, 300, 40000, 100, 500, 10000, 44, 6000, 80, 800], 5], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800, 101, 6000, 10000], 5], [[-99, -88, -77, -66, -55, -44, -33, 5050, -12, -44, -44, 5050], 5], [[1111, 22, 222, 3031, 333, 444, 555, 666, 778, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 999, 5050], 12], [[111, 1111, 22, 222, 3031, 444, 555, 600, 776, 775, 888, 999, 1000, 2000, 3030, 4040, 321, 8000, 5050, 6000, 7000, 8000, 9000, 2000], 22], [[20, 300, 40000, 5999, 100, 500, 10000, 6000, 80, 800, 6000], 9], [[200, 300, 400, 500, 600, 700, 800, 900, 101, 1000, 100, 500, 111], 8], [[100, 900, 299, 300, 400, 500, 600, 700, 800, 900, 1000, 1000], 2], [[100, 200, 300, 400, 500, 600, 320, 800, 70, 1000, 500], 9], [[111, 500, 100, 200, 300, 600, 222, 112, 700], 3], [[-99, -88, -77, -66, -55, -44, -33, -11, -44], 6], [[100, 200, 300, -88, 400, 500, 600, 700, 800, 900, 1000, 1000], 4], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99], 10], [[-88, 2000, -77, -66, -55, -44, -22, -11], 7], [[200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 9], [[100, 200, 300, 400, 500, 600, 700, 500, 800, 900, 1000, 1000, 900, 800], 3], [[-99, -88, -77, -66, -55, -44, -33, -21, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99], 11], [[-99, -88, -77, -66, -88, -55, -44, -33, -22, -11, -44], 6], [[100, 200, 300, 400, 600, 700, 800, 900, 1000, 500, 700], 8], [[112, 321, 500, 100, 199, 299, 300, 400], 3], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99, -22], 12], [[999, 200, 300, 400, 500, 600, 899, 700, 800, 900, 1000, 500], 9], [[111, 321, 500, 100, 200, 300, 400, 600], 2], [[111, 321, 500, 100, 200, 300, 400, 600, 700, 400, 111], 3], [[1000, 20, 300, 40000, 111, 500, 10000, 6000, 80, 800, 6000], 5], [[200, 300, 400, 7000, 600, 700, 800, 900, 101, 1000, 100, 500, 300], 8], [[111, 500, 100, 200, 300, 600, 222, 700], 4], [[200, 300, 400, 500, 600, 700, 800, 900, 101, 1000, 100, 500, 111], 7], [[500, 100, 200, 300, 600, 222, 700], 3], [[3, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 7], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 110, 100], 6], [[321, 100, 200, 300, 600, 700, 100], 2], [[100, 200, 300, 400, 500, 600, 320, 800, 70, 1000, 500, 70], 9], [[20, 300, 40000, 5999, 100, 500, 10000, 6000, 80, 800, 6000], 4], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800, 101, 6000, 10000], 3], [[1000, 20, 300, 40000, 21, 888, 500, 10000, 100, 6000, 70, 800], 5], [[111, 1111, 22, 222, 3031, 444, 555, 600, 776, 775, 888, 999, 1000, 2000, 3030, 4040, 321, 8000, 5050, 6000, 7000, 8000, 9000, 2000], 23], [[-99, -88, -77, -66, -55, -44, -33, 5050, -11, -44, -44, 5050, -99], 6], [[500, 100, 200, 222, 700, 600], 2], [[200, 3, 40, 5000000, 60, 7, 8000, 10, 10], 8], [[200, 300, 400, 5000000, 700, 50, 800, 900, 1000], 5], [[100, 200, 300, -88, 400, 500, 600, 66, 700, 800, 900, 1000, 1000], 4], [[100, 200, 300, -88, 400, 500, 600, 700, 800, 801, 900, 1000, 1000], 4], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 20, 66, 77, 88, 99, 11], 10], [[999, 200, 1001, 300, 400, 800, 500, 600, 700, 800, 900, 1000, 500], 7], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 7], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 90, 300], 3], [[100, 200, 300, 400, 500, 600, 555, 800, 70, 1000, 500, 320], 9], [[111, -66, 500, 100, 200, 300, 600, 222, 700, 320], 4], [[1000000, 200, 3, 40, 5000000, 60, 7, 8000, 9, 10], 7], [[111, 321, 500, 100, 200, 300, 600, 222, 700, 300], 3], [[111, 500, 100, 200, 300, 600, 222, 700, 222], 3], [[-99, -88, -77, -55, -44, -33, 5050, -12, -44, -44, 5050], 5], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000, 500], 3], [[-99, -88, -77, -66, 67, -55, -44, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99], 9], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800, 101, 6000, 10000], 4], [[-99, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99], 10], [[111, 500, 100, 200, 300, 600, 700, 200, 600], 2], [[10, 20, 40, 50, 60, 70, 80, 90, 100, 110, 110], 6], [[200, 3, 40, 5000000, 8, 60, 7, 8000, 9, 10], 9], [[200, 300, 400, 5000000, 700, 800, 900, 5000000], 5], [[10, 20, 30, 40, 50, 60, 70, 90, 100, 110], 7], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 776, 1000, 500], 2], [[111, 500, 100, 200, 300, 600, 222, 112, 700, 200], 3], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 66, 77, 88, 99, -22, 88], 12], [[112, 321, 500, 100, 200, 300, 400, 321, 321, 321], 3], [[999, 200, 300, 400, 500, 600, 1000, 899, 700, 800, 900, 1000, 500], 9], [[111, 1111, 22, 222, 3031, 444, 555, 600, 77, 775, 888, 999, 1000, 2000, 3030, 4040, 321, 8000, 5050, 6000, 7000, 8000, 9000, 2000, 999], 23], [[-88, -77, -66, -55, -44, -33, -22, -11, -77, -11], 6], [[100, 499, 300, 400, 500, 600, 700, 800, 900, 101, 1000, 100, 500], 9], [[500, 100, 200, 300, 600, 222, 700], 5], [[111, 3, 321, 500, 21, 300, 600, 222, 600], 3], [[111, 320, 500, 100, 200, 300, 600, 222, 112, 700], 3], [[111, 500, 100, 200, 300, 600, 700, 200, 200], 3], [[999, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500, 1000], 8], [[111, 1111, 22, 222, 3031, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6001, 7000, 8000, 9000], 12], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99, -99], 10], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 110, 100], 7], [[321, 200, 300, 600, 700, 100], 2], [[-99, -88, -77, 67, -55, -44, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[111, 100, 500, 100, 300, 222, 600], 3], [[1111, 22, 222, 3031, 333, 444, 555, 666, 778, 888, 999, 1000, 2001, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 999], 12], [[200, 300, 400, 5000000, 700, 800, 900, 5000000], 4], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 6], [[111, 500, 100, 200, 300, 600, 222, 700], 5], [[999, 200, 1001, 300, 400, 800, 500, 600, 700, 800, 900, 500], 7], [[-99, -88, -77, -66, -55, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99], 9], [[100, 200, 300, 400, 500, 600, 700, 500, 800, 900, 1000, 1000, 900, 800, 100], 3], [[100, 200, 300, 400, 600, 700, 800, 7000, 500], 8], [[111, 1111, 22, 222, 3031, 23, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6001, 7000, 8000, 9000], 12], [[-99, -88, -77, 67, -55, -44, -33, -22, -11, 3030, -88, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[3, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 80], 7], [[200, 3, 40, 5000000, 8, 60, 7, 8000, 9, 10, 60], 9], [[1000, -89, 300, 40000, 666, 100, 500, 10000, 6000, 80, 800, 6000], 9], [[111, 1111, 22, 222, 3031, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 334, 9000, 2000, 9000], 12], [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 100], 7], [[200, 300, 400, 500, 600, 700, 800, 900, 101, 1000, 100, 500, 6001], 7], [[-99, -88, -77, -66, -55, -44, -33, -100, -22], 7], [[1000, 20, 300, 40000, 100, 500, 10000, 45, 6000, 80, 800], 5], [[100, 200, 300, 400, 10000, 600, 700, 800, 900, 1000, 1000], 8], [[111, -54, 500, 100, 200, 300, 600, 222, 700, 222], 3], [[999, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500, 1000, 1000], 8], [[-99, -99, -88, -66, -55, -44, -33, -22, -11], 5], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 90, 600], 2], [[111, 321, 500, 100, 200, 300, 400, 444, 600, 700, 400], 3], [[111, 321, 500, 101, 200, 300, 400, 600, 700, 200], 3], [[100, 200, 300, 100, 400, 500, 600, 700, 199, 800, 900, 90], 3], [[111, 321, 500, 100, 200, 300, 400, 600, 700, 400, 111], 4], [[-99, -88, -77, -87, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99], 10], [[-99, -88, -77, -66, -88, -55, -44, -33, -22, 777, -44], 5], [[100, 200, 300, 100, 400, 500, 600, 700, 199, 800, 900, 90, 100], 3], [[-99, -88, -77, -66, -88, -55, -44, -33, -22, 777, -44, -44], 5], [[111, 320, 500, 100, 200, 300, 600, 222, 700, 320], 5], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 88, 99], 9], [[100, 200, 499, 300, 400, 500, 600, 700, 800, 70, 1000, 500, 499], 9], [[111, 3, 321, 500, 21, 300, 600, 222, 600, 222], 3], [[200, 300, 400, 600, 700, 800, 900, 1000, 500], 8], [[1000, 20, 300, 40000, 100, 500, 801, 10000, 100, 6000, 70, 800], 5], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 5999, 90, 300], 2], [[111, 1111, 22, 222, 3031, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 22], 12], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500, 1000], 6], [[100, 499, 300, 400, 500, 600, 700, 66, 900, 101, 1000, 100, 500], 9], [[10, 20, 30, 40, 60, 80, 90, 100, 110], 6], [[999, 200, 300, 400, 500, 600, 700, 900, 1000, 500, 1000], 8], [[100, 200, 300, 111, 600, 700, 800, 900, 500, 500], 9], [[1000, 20, 300, 40000, -11, 100, 500, 10000, 6000, 80, 800, 6000], 5], [[100, 200, 300, 100, 400, 500, 600, 700, 199, 800, 900, 90, 100], 2], [[100, 200, 300, 400, 500, 600, 700, 800, 1000, 500], 3], [[111, 321, 500, 200, 300, 400, 600, 700, 9000, 111], 3], [[112, -88, -77, -66, 67, -55, -44, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99], 8], [[111, 321, 500, 100, 200, 300, 400, 600, 700, 400, 100], 2], [[1111, 22, 222, 889, 3031, 333, 444, 555, 666, 778, 888, 999, 1000, 2000, 400, 3030, 4040, 5050, 6000, 7000, 8000, 9000, 999, 3031], 12], [[1000, 20, 300, 40000, 100, 500, 10000, 45, 6000, 80, 800], 6], [[100, 200, 300, 400, 600, 700, 800, 1000], 7], [[-99, -88, 11, -77, -66, -55, -44, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99], 9], [[112, 321, 500, 100, 200, 300, 400, 321, 321], 3], [[200, 300, 400, 5000000, 700, 50, 800, 900, 301, 1000], 5], [[200, 3, 40, 5000000, 60, 7, 8000, 10, 10, 40], 9], [[1000, 300, 40000, 666, 100, 500, 10000, 6000, 80, 800], 6], [[111, 320, 500, 100, 200, 300, 600, 222, 700, 320, 100, 600], 4], [[100, 300, 400, 700, 800, 900, 1000, 200], 6], [[200, 300, 5000000, 700, 50, 800, 900, 1000], 5], [[1000000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 800], 2], [[100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1000], 11], [[1000, 20, 300, 7000, 40000, 21, 888, 500, 10000, 100, 6000, 70, 800], 5], [[999, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 10], [[111, 321, 500, 200, 300, 400, 778, 600, 700, 9000, 111], 3], [[111, -54, -21, 500, 100, 200, 300, 600, 222, 700, -89], 3], [[101, 200, 2000, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 9], [[1000, 20, 300, -88, 40000, 100, 500, 10000, 6000, 80, 800], 5], [[1000, 20, 300, 40000, 100, 500, 10000, 100, 6000, 70, 800, 300], 9], [[1000, 20, 300, 40000, 10000, 100, 500, 10000, 6000, 80, 800, 6000], 4], [[-99, -77, -66, -55, -44, -33, -22, -22], 3], [[20, 300, 40000, 5999, 20, 100, 500, 10000, 6000, 80, 800, 6000], 4], [[11, 22, 33, 44, 55, 66, 77, 88, 99, 99], 4], [[1000, 20, 300, 40000, 100, 500, 10000, 6000, 80, 800, 101, 6000, 10000, 10000], 5], [[100, 200, 300, 23, 500, 600, 700, 199, 800, 900, 90, 300], 3], [[111, 1111, 22, 222, 3031, 333, 444, 555, 666, 777, 888, 999, 1000, 3030, 4040, 5050, 6000, 7000, 8000, 334, 9000, 2000, 9000], 12], [[-99, -88, -77, 30, -55, -44, -33, -22], 5], [[111, 500, 100, 300, 600, 222, 600], 3], [[300, 100, 200, 300, 400, 500, 900, 600, 700, 800, 900, 1000, 1000, 500], 4], [[-99, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99, -22], 10], [[999, 200, 300, 400, 500, 899, 700, 800, 900, 1000, 500], 9], [[-88, -77, -66, 45, -55, -44, -33, -22, 9000, -55], 6], [[20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 6], [[100, 200, 300, 400, 500, 600, 401, 700, 800, 900, 1000, 1000], 2], [[100, 200, 300, 400, 500, 600, 401, 700, 800, 900, 1000, 1000], 3], [[11, 22, 33, 44, 55, 66, 77, 88, 5050, 99, 99], 4], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99], 3], [[112, 321, 500, 100, 200, 300, 400, 321, 321, 321], 5], [[-99, -88, -77, -66, -55, -44, -33, 5050, -11, -44, -44, 5050, -99], 7], [[999, 200, 300, 400, 500, 600, 199, 700, 800, 900, 1000, 500, 1000, 1000], 8], [[-88, 2000, -77, -66, -55, -44, -22, -11], 8], [[200, 300, 400, 500, 700, 800, 900, 101, 1000, 100, 500, 111], 7], [[100, 200, 300, 400, 500, 600, 700, 800, 70, 5, 101, 1000, 500], 8], [[400, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500, 800], 8], [[999, 200, 300, 400, 800, 500, 600, 700, 800, 900, 1000, 500], 11], [[111, 320, 500, 100, 200, 300, 222, 600, 222, 112, 700], 3], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 90, 300], 2], [[100, 499, 300, 400, 500, 600, 700, 800, 101, 1000, 500], 9], [[999, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 8], [[100, 200, 300, 400, 600, 700, 800, 7000, 500, 800], 8], [[1000, 20, 300, 7000, 40000, 21, 888, 500, 10000, 100, 6000, 70, 800], 9], [[200, 400, 5000000, 700, 301, 800, 900, 301, 1000], 5], [[100, 200, 300, 400, 500, 600, 699, 800, 900, 1000, 500], 7], [[1000, 20, 300, 40000, -11, 100, 500, 10000, 6000, 800, 6000], 5], [[111, 320, 500, 100, 200, 300, 600, 222, 4, 320, 100, 600], 4], [[111, -54, 500, 100, 200, 300, 600, 222, 700, -89], 3], [[100, 200, 300, 400, 600, 700, 800, 7000, 500, 800], 7], [[111, 1111, 22, 222, 3031, 333, 444, 555, 666, 777, 888, 999, 1000, 2000, 3030, 4040, 5050, 3030, 6001, 7000, 8000, 9000], 12], [[100, 70, 300, 400, 500, 600, 700, 800, 900, 1000, 500], 6], [[10, 20, 40, 50, 60, 70, 80, 90, 100, 110, 100], 6], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 90], 4], [[200, 300, 5000000, 700, 800, 900, 1001, 1000], 5], [[20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 50], 6], [[-99, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99, -88], 10], [[-99, -88, -77, -66, -88, -55, -44, -33, -22, 777, -44], 4], [[100, 200, 300, 400, 500, 600, 320, 800, 70, 1000, 500, 70], 8], [[-99, -77, -66, -55, -33, -22, -11, 0, 11, 22, 33, 55, 66, 77, 88, 99, -88], 11], [[1111, 22, 222, 889, 3031, 333, 444, 555, 666, 778, 888, 999, 1000, 2000, 400, 3031, 4040, 5050, 6000, 7000, 8000, 9000, 999, 3031], 12], [[-99, -88, -66, -54, -44, -33, -22], 7], [[-99, -88, 11, -77, -66, -55, -44, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[321, 200, 300, 600, 1000000, 700, 100], 2], [[999, 200, 300, -22, 500, 600, 700, 800, 900, 1000], 8], [[100, 200, 300, -88, 1001, 500, 600, 700, 800, 801, 900, 1000, 1000, 1000], 4], [[-88, -77, -66, 45, -54, -44, -33, -22, 9000, -55], 6], [[111, 321, 500, 200, 400, 600, 700, 9000, 111], 3], [[10, 20, 30, -89, 40, 60, 80, 90, 100, 110], 6], [[111, 1111, 22, 222, 3031, 444, 555, 600, 777, 888, 999, 1000, 2000, 3030, 4040, 0, 5050, 6000, 7000, 8000, 9000, 2000], 12], [[200, 300, 400, 5000000, 700, 800, 900, 1000], 4], [[20, 300, 40000, 5999, 100, 501, 10000, 5999, 6000, 80, 800, 6000], 5], [[111, 1111, 22, 222, 3031, 444, 555, 600, 777, 888, 999, 1000, 2000, 3030, 4040, 0, 5050, 6000, 7000, 8000, 9000, 2000, 1000], 13], [[112, 555, 500, 100, 201, 300, 400], 2], [[999, 200, 1001, 300, 400, 800, -88, 600, 700, 800, 900, 1000, 500], 7], [[111, 500, 200, 300, 600, 222, 700, 222], 3], [[11, 22, 33, 44, 55, 66, 77, 88, 3030, 5050, 99, 99], 4], [[-99, -88, -77, -66, -55, -44, -33, -11, -89], 4], [[1000, 300, 40000, 100, 500, 10000, 11, 80, 800, 6000, 10000], 3], [[-99, -88, -77, -66, -55, -44, -55, -33, 5050, -11, -44, -44], 3], [[100, 200, 300, 400, 500, 600, 700, 800, 70, -21, 500], 11], [[100, 499, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 500, 900], 7], [[800, 500, 100, 200, 300, 600, 700, 100], 2], [[1000, 20, 300, 40000, 100, 500, 10000, 100, 6000, 99, 70, 800], 5], [[1000, 20, 300, 40000, 100, 10000, 6000, 80, 800, 6000, 10000], 3], [[100, 200, 300, 400, 500, 600, 700, 199, 800, 900, 90], 9], [[-99, -88, -77, -66, -55, -44, -33, -11], 6], [[100, 499, 300, 400, 500, 600, 700, 800, 101, 1000, 500, 100, 100], 8], [[111, 500, 100, 200, 100, 300, 600, 222, 112, 700, 200], 3], [[100, 200, 300, 100, 400, 500, 599, 700, 199, 800, 900, 90, 100], 3], [[100, 200, 300, 400, 599, 500, 600, 320, 800, 70, 1000, 500], 9], [[111, 321, 500, 100, 200, 300, 400, 600, 700, 100], 5], [[112, 321, 500, 100, 200, 300, 400, 321, 321, 321, 112], 4], [[200, 300, 5000000, 700, 50, 800, 900, 1000, 900], 5], [[-99, -88, -77, -66, -55, -44, -33, -22, -22], 6], [[111, 321, 500, 200, 300, 400, 600, 700, 9000, 111], 4], [[100, 200, 300, 400, 500, 600, 800, 70, 1000, 500], 9], [[1000, 20, 300, 40000, 666, 100, 500, 10000, 6000, 80, 800], 4], [[321, 77, 100, 300, 66, 600, 700], 1], [[20, 70, 30, 40, 50, 60, 70, 80, 90, 100, 110, 50], 6], [[100, 200, 300, 600, 700, 800, 1000], 3], [[500, 100, 222, 700, 600], 2], [[111, 321, 500, 100, 200, 300, 600, 222, 700, 321], 3], [[1000, 20, 300, 40000, -11, 100, 500, 10000, 6000, 800, 6000], 4], [[100, 200, 300, -88, 1001, 500, 600, 700, 800, 801, 900, 1000, 1000, 1000, 1000], 4], [[1000, 20, 300, 40000, 100, 500, 6000, 80, 800, 6000, 10000, 10000], 3], [[-99, -88, -77, -66, -55, -33, -22, -11, 3030, 11, 22, 33, 44, 55, 66, 77, 88, 99, 66], 9], [[-99, -88, -77, 67, -55, -44, -33, -22, -11, 3030, -88, 78, 22, 33, 44, 55, 66, 77, 88, 99], 10], [[-99, -88, -77, -66, -55, -44, -33, 888, 44, -11, 0, 11, 22, 33, -12, 44, 55, 77, 88, 99], 11], [[799, 1000000, 20, 300, 40000, 100, 500, 10000, 6000, 70, 800], 3], [[-99, -88, -77, -66, -55, -44, -33, -22, -11, 0, 11, 22, 33, 44, 55, 20, 66, 77, 88, 99, -44], 10], [[100, 200, 300, 400, 500, 600, -54, 700, 800, 1000], 3], [[111, 320, 500, 100, 200, 300, 222, 600, 222, 112, 319, 700], 3]]\n    results = [-4, 0, 125, 24, 1, 380, 259, 0, 10, -10, 30, 240, 133, 275, 0, 347, 0, 0, -6, 0, 346, 346, 0, 193, -6, 240, -6, 0, 193, 0, 223, 30, 223, 193, 0, 0, 0, 199, 199, 0, -3, 0, 30, 23, -8, -15, -10, 259, 0, 230, -15, 0, 379, 29, 244, 23, 170, 1, 282, 170, 0, 0, 193, -6, 184, 192, 294, 240, 0, 274, 0, 275, 183, 35, 244, 239, 0, -10, -10, 60, -15, 275, 0, 275, 35, 229, 0, 69, 35, 271, 169, 244, 23, 346, -14, 271, -7, 246, 0, -6, 0, 240, 199, 244, 30, 110, -385, 280, 0, 20, 495, -495, 0, 22, 20, 281, 110, 0, 119, 113, 22, 22, 22, -386, 110, 10, 0, -320, 22, 20, 110, 10, 0, 22, 10, 62, 211, -496, 22, -364, 61, 22, 22, 22, 22, 0, 20, 110, 20, 20, 20, 0, 22, 0, 22, 20, 20, 198, 22, 107, 22, -386, -419, 22, 20, 0, 0, 62, 20, 70, 20, -287, 110, 0, 281, 22, 10, 22, 20, 20, 211, 59, -396, 10, 22, -419, 22, 0, 22, 0, 20, 0, 280, 0, 0, 20, 0, 22, 20, -342, 22, 22, 121, 61, 93, 110, -364, 22, -474, 106, 0, 77, 20, 0, 20, 0, 130, 0, 20, -496, 112, 72, 22, 22, 22, 129, 211, 136, 0, 22, -419, 0, -364, 119, -320, 0, 22, 20, 20, 0, 20, 0, 0, 20, 22, 20, 22, 22, 20, 22, 22, 69, 102, 20, 110, -353, 20, 20, 0, 22, 22, 22, -19, -386, 22, 0, 0, 0, 43, 22, 20, 20, 22, 22, 0, 22, 40, -19, 22, 109, 22, 211, 22, 20, 10, 22, -320, -496, 106, 122, 110, -496, 40, -320, 396, 22, 22, 91, 211, 54, 0, 20, 20, 53, 6, 20, 0, 6, 22, -496, 20, -474, 22, 110, 6, 110, 22, 22, 22, -485, 22, 32, 22, 52, 136, 20, 280, 20, 116, 22, 22, 22, 22, 0, 22, 0, -365, 20, 59, -474, 19, 280, -397, 0, 82, 29, 0, 129, 45, 267, 22, -320, 22, 103, 44, 22, 0, 0, 171, 110, 40, 10, 20, -108, 280, 0, 22, 0, 0, -452, 40, 0, 0, 20, 22, 20, 22, -496, 28, -19, 105, -320, 102, 22, 20, 0, 22, 22, -386, 107, 22, 22, 0, 101, 73, 22, 0, 20, 65, 107, 110, 10, 110, 0, 0, 28, 22, 28, 0, 22, 22, 20, 20, 0, 0, 81, 22, 110, 63, -474, 22, -419, -386, 20, 22, 22, 93, 40, 120, 22, 367, -365, 50, 76, 22, 0, 319, 0, 22, 29, 22, 20, 110, 22, 129, 0, 22, 22, 197, 20, 22, 29, 99, 20, 40, 22, 99, 102, 20, 222, 22, 22, 0, 0, 91, 0, 0, 20, 22, 29, 22, 22, 50, 138, 22, 0, 22, 0, 103, 20, 0, 110, 20, 20, 28, 20, 20, 22, 21, 0, 0, -495, 22, 77, 212, 0, 46, 22, 20, 20, 91, 0, 46, 53, 110, 367, 73, 20, 20, 22, 22, 119, 0, 20, 0, 110, 101, 0, 20, 0, 20, 10, 0, -364, 122, 0, 10, 55, -496, 20, 22, -420, 20, 110, 22, 20, 22, 62, 22, 0, 40, 22, 197, -420, 0, 20, 22, 101, 20, -397, 20, 20, 22, 109, 50, 20, 22, 85, 0, 13, 10, 22, -496, 0, -11, 110, 22, 92, 157, 20, -441, 0, -386, 20, 69, 211, 40, 0, 0, 22, -364, 42, 20, 22, 0, 0, -375, 0, -320, 62, 272, 262, 0, 109, 119, 10, 22, 0, 22, 20, 0, -442, 0, -28, 197, 418, -387, 22, 0, 45, 20, 0, 22, -275, 20, 0, 23, 15, 0, 99, 15, 0, -23, -2, 55, 0, 210, 210, 0, 110, 160, 20, 0, -429, 0, -495, 20, 20, 150, 22, -495, -429, 20, 0, 22, 20, 0, -429, 20, 119, -429, 210, -454, 0, 0, 0, 240, -495, 22, 0, 0, -385, 0, 0, -494, 0, 70, 0, -421, 0, 0, 0, 22, -297, -462, 0, 0, 0, 0, 0, 41, 0, -429, 20, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 70, 250, 0, 0, 118, 22, -462, 0, 0, 0, 0, -495, 77, 70, 0, 0, 0, 0, 20, 20, 70, 20, 20, 230, -429, 0, -429, 0, 129, -461, 0, 0, -429, -363, 0, -495, 0, 0, 0, 0, -385, 20, 220, 0, 0, 0, 77, 0, 0, 239, -264, 20, 20, 0, 20, 0, 0, 6, -363, 20, 20, -385, 22, 22, 100, 0, 0, 70, 0, -429, -88, -495, -352, 0, 0, -483, -473, 0, 0, -462, 0, 0, 0, 20, 0, 0, 0, 0, 273, 210, 0, 70, 20, 20, 41, 22, -429, 0, 120, 0, -88, -88, -495, 0, 0, 0, 70, -66, 110, 0, 0, -363, 0, -417, 20, -396, 0, 250, 127, 0, 280, 0, 0, -462, 0, 0, 99, -363, 0, 0, 3, 0, 0, 0, 22, -495, 280, 0, -362, 0, 22, 0, 0, 0, 0, -451, 0, 0, 45, -362, 273, 127, -89, 22, 280, 0, -462, 20, 0, -54, 0, -407, 0, 0, 0, 0, 0, -582, -418, 0, -418, 0, -495, 0, 3, 0, 20, 0, 22, 0, 66, 240, 0, 0, 9, 0, 0, 0, -296, 0, 22, 20, 0, -473, 0, 0, 130, 0, 0, 0, 50, 20, 0, 20, 0, 0, -75, 0, -68, 20, 20, -242, 20, 110, 20, 0, 22, -289, 0, 0, -396, 0, -285, 270, 0, 0, 110, -264, 0, -462, 0, -363, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 9, 0, -54, 0, 22, 70, 250, 0, 0, 270, -396, -330, 0, -297, 22, -406, -484, 0, -22, -88, -284, 0, 71, 22, 0, 20, 22, 0, -88, 0, 110, -330, 0, -264, 49, 0, 0, 20, 20, 0, -429, 0, 0, 0, 0, 0, 0, 50, -429, 0, 70, 20, 0, 270, 0, 0, 0, 20, -88, 20, -451, -362, -429, 20, -495, 0, 0]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/123", "prompt": "\ndef get_odd_collatz(n):\n    \n\n\n    ans, x = [], n\n    while x != 1:\n        if x % 2 == 1: ans.append(x)\n        x = x // 2 if x % 2 == 0 else x * 3 + 1\n    ans.append(1)\n    return sorted(ans)\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef get_odd_collatz(n):\n    \n\n\n    ans, x = [], n\n    while x != 1:\n        if x % 2 == 1: ans.append(x)\n        x = x // 2 if x % 2 == 0 else x * 3 + 1\n    ans.append(1)\n    return sorted(ans)\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef get_odd_collatz(n):\n    \n\n\n    ans, x = [], n\n    while x != 1:\n        if x % 2 == 1: ans.append(x)\n        x = x // 2 if x % 2 == 0 else x * 3 + 1\n    ans.append(1)\n    return sorted(ans)\n\n", "raw_modification": "```python\n<code_start>\ndef get_odd_collatz(n):\n    ans, x = [], n\n    while x != 1:\n        # Introduce unnecessary variable assignments\n        is_odd = x % 2 == 1\n        is_even = x % 2 == 0\n        \n        # Unnecessary conditional checks\n        if is_odd:\n            ans.append(x)\n        elif not is_odd:\n            pass  # Redundant else condition\n\n        # Unnecessary reassignment\n        if is_even:\n            x = x // 2\n        else:\n            x = x * 3 + 1\n\n        # Redundant operations\n        x = x + 0\n        x = x * 1\n\n    # Unnecessary loop to append 1\n    for _ in range(1):\n        ans.append(1)\n\n    # Redundant sorting operation\n    ans = sorted(ans)\n    ans = sorted(ans)\n\n    return ans\n<code_end>\n```", "modification": "\ndef get_odd_collatz(n):\n    ans, x = [], n\n    while x != 1:\n        \n        is_odd = x % 2 == 1\n        is_even = x % 2 == 0\n        \n        \n        if is_odd:\n            ans.append(x)\n        elif not is_odd:\n            pass  \n\n        \n        if is_even:\n            x = x // 2\n        else:\n            x = x * 3 + 1\n\n        \n        x = x + 0\n        x = x * 1\n\n    \n    for _ in range(1):\n        ans.append(1)\n\n    \n    ans = sorted(ans)\n    ans = sorted(ans)\n\n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[14], [5], [12], [1], [2], [3], [7], [10], [15], [20], [25], [30], [100], [13], [6], [101], [99], [29], [19], [27], [26], [8], [28], [11], [102], [18], [16], [98], [17], [4], [21], [9], [62], [22], [103], [97], [10000], [27345], [48271], [99999], [1000000], [10000000000000], [982927638], [1073741825], [9857654321], [9999999999999999999999999999999999], [9999999999999999999999999999999998], [27347], [1000001], [1000002], [10001], [27348], [27349], [10000000000000000000000000000000000], [27350], [982927639], [10002], [999999], [982927641], [982927642], [982927640], [48272], [1073741824], [100001], [1073741826], [100000], [1073741822], [9857654322], [9999], [100002], [48270], [27346], [99998], [982927637], [999998], [99997], [982927636], [37], [1073741823], [982927643], [1073741827], [10000000000000000000000000000000001], [82], [999997], [1073741821], [70], [36], [10003], [76], [9999999999999], [10004], [9999999999999999999999999999999997], [2147483647], [9223372036854775807], [9223372036854775808], [9857654320], [10000000000001], [10000000000002], [27344], [10000000000003], [9997], [67], [9857654323], [27343], [9996], [9998], [10000000000004], [9999999999998], [27342], [52], [27340], [68], [9999999999997], [83], [9857654319], [9999999999996], [9999999999995], [9999999999994], [9857654324], [48273], [48274], [27341], [35], [27339], [54], [48276], [53], [9999999999993], [982927644], [34], [982927645], [33], [999996], [9999999999992], [9999999999991], [1073741828], [96], [999995], [55]]\n    results = [[1, 5, 7, 11, 13, 17], [1, 5], [1, 3, 5], [1], [1], [1, 3, 5], [1, 5, 7, 11, 13, 17], [1, 5], [1, 5, 15, 23, 35, 53], [1, 5], [1, 5, 11, 13, 17, 19, 25, 29], [1, 5, 15, 23, 35, 53], [1, 5, 11, 13, 17, 19, 25, 29], [1, 5, 13], [1, 3, 5], [1, 5, 11, 13, 17, 19, 29, 101], [1, 5, 7, 11, 13, 17, 99, 149], [1, 5, 11, 13, 17, 29], [1, 5, 11, 13, 17, 19, 29], [1, 5, 23, 27, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077], [1, 5, 13], [1], [1, 5, 7, 11, 13, 17], [1, 5, 11, 13, 17], [1, 5, 11, 13, 17, 29, 51, 77], [1, 5, 7, 9, 11, 13, 17], [1], [1, 5, 7, 11, 13, 17, 37, 49], [1, 5, 13, 17], [1], [1, 21], [1, 5, 7, 9, 11, 13, 17], [1, 5, 23, 31, 35, 47, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077], [1, 5, 11, 13, 17], [1, 5, 23, 35, 53, 61, 103, 155, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077], [1, 5, 23, 35, 47, 53, 55, 61, 71, 73, 83, 91, 97, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077], [1, 5, 11, 13, 17, 469, 625], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 109, 121, 137, 145, 155, 161, 167, 175, 193, 233, 251, 257, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 685, 719, 911, 913, 1079, 1217, 1367, 1619, 2051, 2429, 3077, 3245, 7691, 8653, 11537, 20509, 27345], [1, 5, 11, 13, 17, 19, 29, 101, 119, 179, 211, 269, 281, 317, 443, 499, 665, 749, 1181, 1243, 1399, 1657, 1865, 1963, 2099, 2209, 2945, 3149, 3871, 4135, 5513, 5807, 6203, 6979, 8711, 9305, 10469, 13067, 13763, 14701, 17183, 19601, 20645, 24467, 25775, 30547, 36701, 38663, 45821, 48271, 57995, 65245, 72407, 86993, 108611, 162917], [1, 227, 341, 605, 955, 1075, 1433, 1613, 1787, 2011, 2263, 2681, 3017, 3395, 4699, 5093, 5287, 6265, 6599, 7049, 7931, 8353, 8471, 8923, 9899, 10039, 10427, 11137, 11731, 11897, 12707, 13385, 14849, 15059, 15641, 17597, 19061, 22589, 27805, 99999, 149999, 152047, 224999, 228071, 329167, 337499, 342107, 360407, 379687, 384871, 416603, 438889, 468679, 493751, 506249, 513161, 540611, 569531, 577307, 585185, 593173, 624905, 640723, 649471, 703019, 740627, 790897, 810917, 854297, 865961, 961085, 974207, 1054529, 1110941, 1461311, 1560493, 2080657, 2191967, 3287951, 4931927, 7397891, 11096837], [1, 5, 23, 31, 35, 47, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 587, 593, 661, 719, 881, 911, 1043, 1079, 1367, 1565, 1619, 2051, 2429, 3077, 11125, 11719, 14833, 15625, 17579, 19777, 26369], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1183, 1201, 1457, 1577, 1601, 1775, 2663, 2845, 3995, 4205, 4495, 5993, 6743, 7475, 10115, 11213, 15173, 19933, 66367, 88489, 99551, 106309, 122623, 141745, 149327, 183935, 188993, 223991, 275903, 314627, 335987, 413855, 471941, 503981, 516731, 581323, 620783, 653989, 775097, 839005, 871985, 931175, 1396763, 1571359, 2095145, 2357039, 2449687, 3266249, 3535559, 3674531, 4474693, 5303339, 5511797, 5966257, 6444571, 7250143, 7955009, 8592761, 9666857, 10322959, 10875215, 13763945, 15484439, 16312823, 22914029, 23226659, 24469235, 27157367, 34839989, 36703853, 40736051, 48279763, 57220459, 61104077, 64373017, 72419645, 85830689, 1220703125], [1, 5, 23, 35, 53, 61, 319, 325, 335, 425, 433, 479, 503, 577, 595, 719, 755, 793, 893, 911, 1079, 1133, 1367, 1619, 1879, 2051, 2429, 2819, 3077, 4229, 14075, 15835, 17815, 21113, 23753, 26723, 40085, 59311, 83311, 88967, 124967, 133451, 150133, 187451, 200177, 210883, 234047, 243247, 281177, 316325, 324329, 351071, 364871, 369851, 416083, 461791, 526607, 547307, 554777, 615721, 624125, 692687, 789911, 820961, 864877, 876683, 986269, 1039031, 1153169, 1184867, 1315025, 1558547, 1777301, 2337821, 12300469, 174940003, 207336299, 233253337, 262410005, 311004449, 491463819, 552896797, 737195729], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 203, 229, 305, 541, 721, 961, 5125, 91007, 109333, 136511, 204767, 307151, 388739, 460727, 583109, 691091, 970741, 1036637, 1294321, 1725761, 3587227, 4035631, 4309535, 4602029, 5380841, 6053447, 6464303, 7661395, 9080171, 9696455, 10215193, 11492093, 12272077, 13620257, 14544683, 16362769, 19131877, 21817025, 25509169, 34012225, 45349633, 60466177, 80621569, 107495425, 143327233, 191102977, 254803969, 339738625, 452984833, 603979777, 805306369, 1073741825], [1, 5, 7, 11, 13, 17, 37, 131, 197, 1103, 1397, 1655, 2483, 3725, 6971, 7843, 10457, 11015, 11765, 16523, 18589, 24785, 117493, 371335, 495113, 557003, 626629, 835505, 1320301, 1760401, 2347201, 8345603, 12518405, 14836627, 22254941, 46891067, 52752451, 70336601, 79128677, 222298391, 263464759, 333447587, 351286345, 395197139, 500171381, 592795709, 1249018115, 1386232639, 1873527173, 2079348959, 2960635531, 3119023439, 3330714973, 3947514041, 4440953297, 4678535159, 7017802739, 7393240741, 9857654321, 10526704109], [1, 5, 23, 35, 53, 61, 103, 137, 155, 167, 175, 233, 251, 263, 283, 319, 325, 365, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 959, 1079, 1367, 1439, 1619, 2051, 2159, 2429, 2557, 3077, 3239, 3409, 3893, 4859, 5467, 6151, 7289, 8201, 9227, 10381, 13841, 18181, 64643, 71743, 95657, 96965, 102151, 107615, 153227, 161423, 172381, 229841, 242135, 255085, 363203, 544805, 1360453, 1813937, 309578581, 412771441, 550361921, 3913684771, 5870527157, 58639059247, 78185412329, 83491941781, 87958588871, 111322589041, 123552256519, 131937883307, 148430118721, 173549397359, 185328384779, 197906824961, 208494432877, 260324096039, 277992577169, 308532261971, 365667866039, 390486144059, 439296912067, 462798392957, 548501799059, 585729216089, 650076206291, 658945368101, 822752698589, 975114309437, 6163685511499, 6934146200437, 8218247348665, 9245528267249, 10957663131553, 14610217508737, 37918848090623, 42084533666395, 47345100374695, 56878272135935, 63126800499593, 71017650562043, 77921160046597, 79894856882299, 85317408203903, 89881713992587, 101116928241661, 103894880062129, 106526475843065, 119842285323449, 127976112305855, 134822570988881, 191964168458783, 204992986532891, 224450846220773, 230617109849503, 287946252688175, 307489479799337, 345925664774255, 431919379032263, 518888497161383, 546647964087709, 598535589922061, 647879068548395, 728863952116945, 778332745742075, 875624338959835, 971818602822593, 985077381329815, 1167499118613113, 1244137921778503, 1313436508439753, 1477616071994723, 1574612057250919, 1596094906458829, 1866206882667755, 2099482743001225, 2128126541945105, 2216424107992085, 2361918085876379, 2657157846610927, 2799310324001633, 3542877128814569, 3985736769916391, 4423601499656899, 5675004111853613, 5898135332875865, 5978605154874587, 6635402249485349, 6725930799233911, 8967907732311881, 10088896198850867, 15133344298276301, 27961530466967063, 41942295700450595, 62913443550675893, 298256324980982005, 397675099974642673, 530233466632856897, 90493178305340910421, 120657571073787880561, 3050700068631081227023, 4576050102946621840535, 6864075154419932760803, 10296112731629899141205, 16270400366032433210789, 38566874941706508351499, 43387734309419821895437, 51422499922275344468665, 57850312412559762527249, 68563333229700459291553, 81260246790756099901099, 91417777639600612388737, 108346995721008133201465, 121890370186134149851649, 2311402575381506841631253, 6163740201017351577683341, 8218320268023135436911121, 29220694286304481553461763, 43831041429456722330192645, 51947900953430189428376467, 77921851430145284142564701, 164181020297260845600794759, 246271530445891268401192139, 277055471751627676951341157, 369407295668836902601788209, 437816054126028921602119357, 583754738834705228802825809, 598540900644637767784652891, 647884817088710086111906927, 673358513225217488757734503, 897811350966956651676979337, 971827225633065129167860391, 1010037769837826233136601755, 1049750685708984008874086683, 1136292491067554512278676975, 1180969521422607009983347519, 1365090643413249234935375911, 1399667580945312011832115577, 1457740838449597693751790587, 1515056654756739349704902633, 1556679303559213943474202157, 1574626028563476013311130025, 1596109068385700714092407709, 1639958443255797405470764411, 1704438736601331768418015463, 1771454282133910514975021279, 1820120857884332313247167881, 1844953248662772081154609963, 2047635965119873852403063867, 2075572404745618591298936209, 2128145424514267618789876945, 2186611257674396540627685881, 2303590460759858083953446851, 2459937664883696108206146617, 2488297921680554687701538803, 2522246429053946807454668971, 2556658104901997652627023195, 2657181423200865772462531919, 2767429872994158121731914945, 2837527232685690158386502593, 2876240368014747359205401095, 3071453947679810778604595801, 3317730562240739583602051737, 3362995238738595743272891961, 3455385691139787125930170277, 3732446882520832031552308205, 3783369643580920211182003457, 3834987157352996478940534793, 3985772134801298658693797879, 4314360552022121038808101643, 4423640749654319444802735649, 4853655621024886168659114349, 5978658202201947988040696819, 6471540828033181558212152465, 8967987303302921982061045229, 15728500443215358025965282307, 20971333924287144034620376409, 23592750664823037038947923461, 223694228525729536369284015029, 2386071770941115054605696160309, 5296401279628678427022943777607, 6703257869530046134200913218535, 7944601919443017640534415666411, 8937677159373394845601217624713, 10054886804295069201301369827803, 11311747654831952851464041056279, 11916902879164526460801623499617, 14123736745676475805394516740285, 15082330206442603801952054741705, 16967621482247929277196061584419, 18831648994235301073859355653713, 25451432223371893915794092376629, 66956974201725514929277708990979, 100435461302588272393916563486469, 178551931204601373144740557309277, 564312276399727796605599786063887, 668814549807084795977007153853495, 846468414599591694908399679095831, 1003221824710627193965510730780243, 1269702621899387542362599518643747, 1504832737065940790948266096170365, 1904553932849081313543899277965621, 3567010932304452245210704820551973, 4227568512360832290620094602135671, 6341352768541248435930141903203507, 9512029152811872653895212854805261, 9999999999999999999999999999999999, 14999999999999999999999999999999999, 22499999999999999999999999999999999, 33749999999999999999999999999999999, 50624999999999999999999999999999999, 75937499999999999999999999999999999, 113906249999999999999999999999999999, 170859374999999999999999999999999999, 256289062499999999999999999999999999, 384433593749999999999999999999999999, 576650390624999999999999999999999999, 864975585937499999999999999999999999, 962006701479442725687772638352650467, 1297463378906249999999999999999999999, 1443010052219164088531658957528975701, 1601536127321972221477261281996629095, 1898116891640855966195272630514523371, 1946195068359374999999999999999999999, 2135381503095962961969681709328838793, 2402304190982958332215891922994943643, 2702592214855828123742878413369311599, 2847175337461283949292908945771785057, 2919292602539062499999999999999999999, 3603456286474437498323837884492415465, 4053888322283742185614317620053967399, 4378938903808593749999999999999999999, 6080832483425613278421476430080951099, 6568408355712890624999999999999999999, 6840936543853814938224160983841069987, 9121248725138419917632214645121426649, 9852612533569335937499999999999999999, 10261404815780722407336241475761604981, 14778918800354003906249999999999999999, 20246580177502463639416241392154915957, 22168378200531005859374999999999999999, 33252567300796508789062499999999999999, 49878850951194763183593749999999999999, 74818276426792144775390624999999999999, 95983787508159827623899218451697379351, 112227414640188217163085937499999999999, 143975681262239741435848827677546069027, 168341121960282325744628906249999999999, 215963521893359612153773241516319103541, 252511682940423488616943359374999999999, 255956766688426206997064582537859678269, 303356167927023652737261727452278137207, 378767524410635232925415039062499999999, 455034251890535479105892591178417205811, 568151286615952849388122558593749999999, 682551377835803218658838886767625808717, 852226929923929274082183837890624999999, 1278340394885893911123275756835937499999, 1917510592328840866684913635253906249999, 2876265888493261300027370452880859374999, 4314398832739891950041055679321289062499, 6471598249109837925061583518981933593749], [1, 5, 23, 35, 53, 61, 103, 137, 155, 167, 175, 233, 251, 263, 283, 319, 325, 365, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 959, 1079, 1367, 1439, 1619, 2051, 2159, 2429, 2557, 3077, 3239, 3409, 3893, 4859, 5467, 6151, 7289, 8201, 9227, 10381, 13841, 18181, 64643, 71743, 95657, 96965, 102151, 107615, 153227, 161423, 172381, 229841, 242135, 255085, 363203, 544805, 1360453, 1813937, 309578581, 412771441, 550361921, 3913684771, 5870527157, 58639059247, 78185412329, 83491941781, 87958588871, 111322589041, 123552256519, 131937883307, 148430118721, 173549397359, 185328384779, 197906824961, 208494432877, 260324096039, 277992577169, 308532261971, 365667866039, 390486144059, 439296912067, 462798392957, 548501799059, 585729216089, 650076206291, 658945368101, 822752698589, 975114309437, 6163685511499, 6934146200437, 8218247348665, 9245528267249, 10957663131553, 14610217508737, 37918848090623, 42084533666395, 47345100374695, 56878272135935, 63126800499593, 71017650562043, 77921160046597, 79894856882299, 85317408203903, 89881713992587, 101116928241661, 103894880062129, 106526475843065, 119842285323449, 127976112305855, 134822570988881, 191964168458783, 204992986532891, 224450846220773, 230617109849503, 287946252688175, 307489479799337, 345925664774255, 431919379032263, 518888497161383, 546647964087709, 598535589922061, 647879068548395, 728863952116945, 778332745742075, 875624338959835, 971818602822593, 985077381329815, 1167499118613113, 1244137921778503, 1313436508439753, 1477616071994723, 1574612057250919, 1596094906458829, 1866206882667755, 2099482743001225, 2128126541945105, 2216424107992085, 2361918085876379, 2657157846610927, 2799310324001633, 3542877128814569, 3985736769916391, 4423601499656899, 5675004111853613, 5898135332875865, 5978605154874587, 6635402249485349, 6725930799233911, 8967907732311881, 10088896198850867, 15133344298276301, 27961530466967063, 41942295700450595, 62913443550675893, 298256324980982005, 397675099974642673, 530233466632856897, 90493178305340910421, 120657571073787880561, 3050700068631081227023, 4576050102946621840535, 6864075154419932760803, 10296112731629899141205, 16270400366032433210789, 38566874941706508351499, 43387734309419821895437, 51422499922275344468665, 57850312412559762527249, 68563333229700459291553, 81260246790756099901099, 91417777639600612388737, 108346995721008133201465, 121890370186134149851649, 2311402575381506841631253, 6163740201017351577683341, 8218320268023135436911121, 29220694286304481553461763, 43831041429456722330192645, 51947900953430189428376467, 77921851430145284142564701, 164181020297260845600794759, 246271530445891268401192139, 277055471751627676951341157, 369407295668836902601788209, 437816054126028921602119357, 583754738834705228802825809, 598540900644637767784652891, 647884817088710086111906927, 673358513225217488757734503, 897811350966956651676979337, 971827225633065129167860391, 1010037769837826233136601755, 1049750685708984008874086683, 1136292491067554512278676975, 1180969521422607009983347519, 1365090643413249234935375911, 1399667580945312011832115577, 1457740838449597693751790587, 1515056654756739349704902633, 1556679303559213943474202157, 1574626028563476013311130025, 1596109068385700714092407709, 1639958443255797405470764411, 1704438736601331768418015463, 1771454282133910514975021279, 1820120857884332313247167881, 1844953248662772081154609963, 2047635965119873852403063867, 2075572404745618591298936209, 2128145424514267618789876945, 2186611257674396540627685881, 2303590460759858083953446851, 2459937664883696108206146617, 2488297921680554687701538803, 2522246429053946807454668971, 2556658104901997652627023195, 2657181423200865772462531919, 2767429872994158121731914945, 2837527232685690158386502593, 2876240368014747359205401095, 3071453947679810778604595801, 3317730562240739583602051737, 3362995238738595743272891961, 3455385691139787125930170277, 3732446882520832031552308205, 3783369643580920211182003457, 3834987157352996478940534793, 3985772134801298658693797879, 4314360552022121038808101643, 4423640749654319444802735649, 4853655621024886168659114349, 5978658202201947988040696819, 6471540828033181558212152465, 8967987303302921982061045229, 15728500443215358025965282307, 20971333924287144034620376409, 23592750664823037038947923461, 223694228525729536369284015029, 2386071770941115054605696160309, 5296401279628678427022943777607, 6703257869530046134200913218535, 7944601919443017640534415666411, 8937677159373394845601217624713, 10054886804295069201301369827803, 11311747654831952851464041056279, 11916902879164526460801623499617, 14123736745676475805394516740285, 15082330206442603801952054741705, 16967621482247929277196061584419, 18831648994235301073859355653713, 25451432223371893915794092376629, 66956974201725514929277708990979, 100435461302588272393916563486469, 178551931204601373144740557309277, 564312276399727796605599786063887, 668814549807084795977007153853495, 846468414599591694908399679095831, 1003221824710627193965510730780243, 1269702621899387542362599518643747, 1504832737065940790948266096170365, 1904553932849081313543899277965621, 3567010932304452245210704820551973, 4227568512360832290620094602135671, 4999999999999999999999999999999999, 6341352768541248435930141903203507, 7499999999999999999999999999999999, 9512029152811872653895212854805261, 11249999999999999999999999999999999, 16874999999999999999999999999999999, 25312499999999999999999999999999999, 37968749999999999999999999999999999, 56953124999999999999999999999999999, 85429687499999999999999999999999999, 128144531249999999999999999999999999, 192216796874999999999999999999999999, 288325195312499999999999999999999999, 432487792968749999999999999999999999, 648731689453124999999999999999999999, 962006701479442725687772638352650467, 973097534179687499999999999999999999, 1443010052219164088531658957528975701, 1459646301269531249999999999999999999, 1601536127321972221477261281996629095, 1898116891640855966195272630514523371, 2135381503095962961969681709328838793, 2189469451904296874999999999999999999, 2402304190982958332215891922994943643, 2702592214855828123742878413369311599, 2847175337461283949292908945771785057, 3284204177856445312499999999999999999, 3603456286474437498323837884492415465, 4053888322283742185614317620053967399, 4926306266784667968749999999999999999, 6080832483425613278421476430080951099, 6840936543853814938224160983841069987, 7389459400177001953124999999999999999, 9121248725138419917632214645121426649, 10261404815780722407336241475761604981, 11084189100265502929687499999999999999, 16626283650398254394531249999999999999, 20246580177502463639416241392154915957, 24939425475597381591796874999999999999, 37409138213396072387695312499999999999, 56113707320094108581542968749999999999, 84170560980141162872314453124999999999, 95983787508159827623899218451697379351, 126255841470211744308471679687499999999, 143975681262239741435848827677546069027, 189383762205317616462707519531249999999, 215963521893359612153773241516319103541, 255956766688426206997064582537859678269, 284075643307976424694061279296874999999, 303356167927023652737261727452278137207, 426113464961964637041091918945312499999, 455034251890535479105892591178417205811, 639170197442946955561637878417968749999, 682551377835803218658838886767625808717, 958755296164420433342456817626953124999, 1438132944246630650013685226440429687499, 1617899562277459481265395879745483398437, 2157199416369945975020527839660644531249], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 109, 121, 137, 145, 155, 161, 167, 175, 193, 233, 251, 257, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 685, 719, 911, 913, 1079, 1217, 1367, 1619, 2051, 2429, 3077, 3245, 15383, 23075, 27347, 34613, 41021], [1, 151, 227, 341, 805, 847, 1073, 1271, 1907, 2861, 3011, 4517, 8029, 9515, 10705, 11879, 14273, 17819, 20047, 25373, 26729, 30071, 39551, 45107, 59327, 67661, 88991, 105469, 133487, 200231, 300347, 337891, 450521, 506837, 562501, 750001, 1000001], [1, 151, 227, 341, 805, 847, 1073, 1271, 1907, 2861, 3011, 4517, 8029, 9515, 10705, 11879, 14273, 17819, 20047, 25373, 26729, 30071, 39551, 45107, 59327, 67661, 88991, 133487, 200231, 281251, 300347, 337891, 375001, 421877, 450521, 500001, 506837], [1, 5, 11, 13, 17, 19, 29, 59, 67, 89, 101, 157, 1055, 1583, 2287, 2375, 2813, 3007, 3349, 3431, 3563, 4009, 4465, 4511, 4703, 5147, 5345, 5791, 6767, 7055, 7501, 7721, 8687, 8807, 10001, 10151, 10583, 12197, 13031, 13211, 14455, 14863, 15227, 15875, 17131, 19273, 19547, 19817, 21683, 21991, 22295, 22841, 23485, 23813, 25697, 29321, 31313, 32525, 32987, 33443, 37111, 49481, 50165, 55667, 83501], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 271, 361, 407, 481, 611, 641, 917, 6837], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 271, 361, 407, 481, 611, 641, 917, 27349], [1, 5, 23, 35, 53, 61, 91, 103, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 1717, 2051, 2429, 3077, 9157, 12209, 86819, 130229, 231517, 823171, 1097561, 1234757, 1951219, 2312555, 2601625, 2926829, 3468833, 3654407, 5481611, 6083807, 6166813, 6496723, 8222417, 8662297, 9125711, 9745085, 11549729, 13688567, 16223485, 17091407, 20532851, 21631313, 25637111, 30799277, 38455667, 45577085, 57683501, 108034571, 121538893, 162051857, 192061459, 288092189, 303504527, 455256791, 539563603, 682885187, 719418137, 809345405, 1024327781, 3410574871, 4547433161, 5115862307, 7673793461, 8084325619, 9581422955, 10779100825, 12126488429, 14372134433, 68134563235, 90846084313, 102201844853, 107669433259, 113429526395, 121128112417, 127608217195, 143559244345, 161504149889, 170144289593, 191412325793, 477991090651, 537739976983, 637321454201, 716986635977, 806609965475, 1209914948213, 1699523877869, 18128254697269, 171882711203735, 257824066805603, 386736100208405, 458353896543293, 1222277057448781, 1629702743265041, 4578369297951719, 6867553946927579, 7725998190293527, 10301330920391369, 11588997285440291, 12208984794537917, 17383495928160437, 86819447427825187, 102897122877422443, 115759263237100249, 130229171141737781, 137196163836563257, 154345684316133665, 182928218448751009, 975617165060005381, 2740828469194637887, 3654437958926183849, 4111242703791956831, 6166864055687935247, 9250296083531902871, 13875444125297854307, 20813166187946781461, 38980671561879294389, 103948457498344785037, 138597943331126380049, 5913512248794725548757, 7008607109682637687415, 7778558071096230985831, 10512910664523956531123, 11667837106644346478747, 12459745972769133666515, 13126316744974889788591, 15769365996785934796685, 17501755659966519718121, 18689618959153700499773, 19689475117462334682887, 25899282718455651775003, 27657095363897710171843, 29136693058262608246879, 29534212676193502024331, 33225989260717689777373, 34532376957940869033337, 38848924077683477662505, 41485643045846565257765, 43705039587393912370319, 44301319014290253036497, 46043169277254492044449, 65557559381090868555479, 98336339071636302833219, 147504508607454454249829, 245563569478690624237061, 436557456851005554199219, 582076609134674072265625, 654836185276508331298829], [1, 5, 23, 31, 35, 47, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 587, 593, 661, 695, 719, 881, 911, 1043, 1079, 1235, 1367, 1463, 1565, 1619, 1853, 2051, 2195, 2311, 2429, 3077, 3293, 3467, 3901, 5201, 6491, 7303, 9737, 10955, 11539, 12325, 13675, 15385, 16433, 17309, 20513], [1, 5, 23, 35, 53, 61, 319, 325, 335, 425, 433, 479, 503, 577, 595, 719, 755, 793, 893, 911, 1079, 1133, 1367, 1619, 1879, 2051, 2429, 2819, 3077, 4229, 14075, 15835, 17815, 21113, 23753, 26723, 40085, 59311, 83311, 88967, 124967, 133451, 150133, 187451, 200177, 210883, 234047, 243247, 281177, 316325, 324329, 351071, 364871, 369851, 416083, 461791, 526607, 547307, 554777, 615721, 624125, 692687, 789911, 820961, 864877, 876683, 986269, 1039031, 1153169, 1184867, 1315025, 1558547, 1777301, 2337821, 12300469, 174940003, 207336299, 233253337, 262410005, 311004449, 982927639, 1474391459, 2211587189], [1, 85, 113, 301, 3751, 4007, 5001, 5627, 5707, 6011, 6331, 6421, 6763, 7123, 7609, 8441, 8561, 9017, 9497, 10145, 10685], [1, 5, 23, 35, 47, 53, 55, 61, 71, 73, 83, 91, 97, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 859, 911, 919, 967, 1079, 1145, 1225, 1289, 1367, 1379, 1451, 1619, 1633, 2035, 2051, 2069, 2177, 2429, 3053, 3077, 3215, 4823, 7235, 8573, 10853, 22861, 33371, 37543, 42815, 50057, 50743, 56315, 60139, 63355, 64223, 67657, 71275, 76115, 80185, 84473, 90209, 95033, 96335, 106913, 114173, 121925, 144503, 216755, 325133, 355957, 999999, 1499999, 2249999, 3374999, 5062499, 7593749], [1, 5, 23, 35, 53, 61, 319, 325, 335, 425, 433, 479, 503, 577, 595, 719, 755, 793, 893, 911, 1079, 1133, 1367, 1619, 1879, 2051, 2429, 2819, 3077, 4229, 14075, 15835, 17815, 21113, 23753, 26723, 40085, 59311, 83311, 88967, 124967, 133451, 150133, 187451, 200177, 210883, 234047, 243247, 281177, 316325, 324329, 351071, 364871, 369851, 416083, 461791, 526607, 547307, 554777, 615721, 624125, 692687, 789911, 820961, 864877, 876683, 986269, 1039031, 1153169, 1184867, 1315025, 1558547, 1777301, 2337821, 12300469, 174940003, 262410005, 414672599, 622008899, 737195731, 933013349, 982927641, 1105793597], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 109, 121, 137, 145, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 343, 377, 395, 425, 433, 445, 479, 515, 577, 593, 719, 773, 911, 1079, 1219, 1367, 1619, 1829, 2051, 2429, 3077, 69347, 104021, 123283, 164377, 184925, 876677, 2337805, 3117073, 6919015, 9225353, 10378523, 10933751, 11675839, 12958519, 15567785, 16400627, 17278025, 17513759, 19437779, 24600941, 26270639, 29156669, 39405959, 59108939, 66497557, 88663409, 184298933, 491463821], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 109, 121, 137, 145, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 343, 377, 395, 425, 433, 445, 479, 515, 577, 593, 719, 773, 911, 1079, 1219, 1367, 1619, 1829, 2051, 2429, 3077, 69347, 104021, 123283, 164377, 184925, 876677, 2337805, 3117073, 6919015, 9225353, 10378523, 10933751, 11675839, 12958519, 15567785, 16400627, 17278025, 17513759, 19437779, 24600941, 26270639, 29156669, 39405959, 59108939, 66497557, 88663409, 122865955, 184298933], [1, 227, 341, 605, 955, 1075, 1433, 1613, 2263, 3017, 3395, 5093], [1], [1, 151, 227, 341, 805, 847, 1073, 1129, 1271, 1505, 1783, 1907, 2377, 2503, 2675, 2861, 3169, 3755, 4013, 4225, 5633, 13349, 35597, 56251, 63283, 75001, 84377, 94925, 100001], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 203, 229, 305, 541, 721, 961, 5125, 91007, 109333, 136511, 204767, 307151, 388739, 460727, 583109, 691091, 970741, 1036637, 1294321, 1725761, 4035631, 4309535, 4602029, 5380841, 6053447, 6464303, 7661395, 9080171, 9565939, 9696455, 10215193, 11492093, 12272077, 12754585, 13620257, 14348909, 14544683, 16362769, 17006113, 21817025, 22674817, 30233089, 40310785, 53747713, 71663617, 95551489, 127401985, 169869313, 226492417, 301989889, 402653185, 536870913], [1, 5, 23, 35, 47, 53, 55, 61, 71, 83, 91, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 293, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077, 3125], [1, 5, 23, 35, 47, 53, 55, 61, 71, 83, 91, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077, 3295, 4393, 4693, 4943, 6257, 7415, 11123, 13883, 15619, 16685, 20825, 23429, 24347, 27391, 36521, 41087, 43283, 61631, 64925, 65815, 92447, 98723, 138671, 148085, 208007, 312011, 351013, 468017, 1846741, 39397141, 52529521, 70039361, 124514419, 166019225, 186771629, 233201215, 310934953, 349801823, 368515499, 414579937, 524702735, 536870911, 552773249, 787054103, 805306367, 1164690959, 1180581155, 1207959551, 1747036439, 1770871733, 1811939327, 2620554659, 2717908991, 2760748939, 3105842557, 3930831989, 4076863487, 4141123409, 6115295231, 8725329979, 9172942847, 9815996227, 13087994969, 13759414271, 14723994341, 20639121407, 30958682111, 46438023167, 69657034751, 73536937435, 82729054615, 87154888811, 98049249913, 104485552127, 110305406153, 124093581923, 130732333217, 156728328191, 186140372885, 235092492287, 343927264511, 352638738431, 515890896767, 528958107647, 611426248019, 619768098211, 773836345151, 793437161471, 826357464281, 917139372029, 929652147317, 1160754517727, 1190155742207, 1741131776591, 1785233613311, 2203619904749, 2611697664887, 2677850419967, 3864817765255, 3917546497331, 4016775629951, 5153090353673, 5428770084527, 5797226647883, 5876319745997, 6025163444927, 6521879978869, 8143155126791, 8695839971825, 9037745167391, 12214732690187, 13556617751087, 13741574276461, 18322099035281, 20334926626631, 25736391511831, 30502389939947, 34315188682441, 38604587267747, 45753584909921, 57906880901621], [1, 5, 7, 11, 13, 17, 37, 131, 197, 1103, 1397, 1655, 2483, 3725, 6971, 7843, 10457, 11015, 11765, 16523, 18589, 24785, 117493, 371335, 495113, 557003, 626629, 835505, 1320301, 1760401, 2347201, 8345603, 12518405, 14836627, 22254941, 46891067, 52752451, 70336601, 79128677, 222298391, 263464759, 333447587, 351286345, 395197139, 500171381, 592795709, 1249018115, 1873527173, 2079348959, 2960635531, 3119023439, 3330714973, 3696620371, 3947514041, 4440953297, 4678535159, 4928827161, 5544930557, 7017802739, 10526704109], [1, 5, 23, 35, 53, 61, 167, 251, 283, 319, 325, 377, 425, 433, 479, 577, 719, 791, 911, 1079, 1187, 1367, 1619, 1781, 2051, 2429, 3077, 9999, 14999, 22499, 33749], [1, 5, 11, 13, 17, 14063, 21095, 31643, 35599, 37501, 47465, 50001, 53399, 80099, 120149], [1, 5, 11, 13, 17, 19, 29, 101, 119, 179, 211, 269, 281, 317, 443, 499, 665, 749, 1181, 1243, 1399, 1657, 1865, 1963, 2099, 2209, 2945, 3149, 3871, 4135, 5513, 5807, 6203, 6979, 8711, 9305, 10469, 13067, 13763, 14701, 17183, 19601, 20645, 24135, 24467, 25775, 30547, 36203, 36701, 38663, 40729, 45821, 54305, 57995, 65245, 86993], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 109, 121, 137, 145, 155, 161, 167, 175, 193, 233, 251, 257, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 685, 719, 911, 913, 1079, 1217, 1367, 1619, 2051, 2429, 3077, 3245, 10255, 13673, 15383, 23075, 34613], [1, 151, 227, 341, 805, 847, 1073, 1129, 1271, 1505, 1783, 1907, 2377, 2503, 2675, 2861, 3169, 3755, 4013, 4225, 5633, 8899, 13349, 47461, 49999, 63281, 74999, 112499, 168749], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 109, 121, 137, 145, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 343, 377, 395, 425, 433, 445, 479, 515, 577, 593, 719, 773, 911, 1079, 1219, 1367, 1619, 1829, 2051, 2429, 3077, 69347, 104021, 123283, 164377, 184925, 876677, 2337805, 3117073, 6919015, 9225353, 10378523, 10933751, 11675839, 12958519, 15567785, 16400627, 17278025, 17513759, 19437779, 24600941, 26270639, 29156669, 39405959, 46074733, 59108939, 66497557, 88663409, 982927637], [1, 5, 23, 35, 47, 53, 55, 61, 71, 73, 83, 91, 97, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 859, 911, 919, 967, 1079, 1145, 1225, 1289, 1367, 1379, 1451, 1619, 1633, 2035, 2051, 2069, 2177, 2429, 3053, 3077, 3215, 4823, 7235, 8573, 10853, 22861, 33371, 37543, 42815, 50057, 50743, 56315, 60139, 63355, 64223, 67657, 71275, 76115, 80185, 84473, 90209, 95033, 96335, 106913, 114173, 121925, 144503, 216755, 325133, 355957, 499999, 749999, 1124999, 1687499, 1898437, 2531249], [1, 151, 227, 341, 805, 847, 1073, 1129, 1271, 1505, 1783, 1907, 2377, 2503, 2675, 2861, 3169, 3755, 4013, 4225, 5633, 8899, 13349, 37499, 42187, 47461, 56249, 63281, 99997], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 109, 121, 137, 145, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 343, 377, 395, 425, 433, 445, 479, 515, 577, 593, 719, 773, 911, 1079, 1219, 1367, 1619, 1829, 2051, 2429, 3077, 69347, 104021, 123283, 164377, 184925, 876677, 2337805, 3117073, 6919015, 9225353, 10378523, 10933751, 11675839, 12958519, 15567785, 16400627, 17278025, 17513759, 19437779, 24600941, 26270639, 29156669, 39405959, 46074733, 59108939, 66497557, 88663409, 245731909], [1, 5, 7, 11, 13, 17, 37], [1, 5, 23, 35, 47, 53, 55, 61, 71, 83, 91, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077, 3295, 4393, 4693, 4943, 6257, 7415, 11123, 13883, 15619, 16685, 20825, 23429, 24347, 27391, 36521, 41087, 43283, 61631, 64925, 65815, 92447, 98723, 138671, 148085, 208007, 312011, 351013, 468017, 1846741, 39397141, 52529521, 70039361, 124514419, 166019225, 186771629, 233201215, 310934953, 349801823, 368515499, 414579937, 524702735, 552773249, 787054103, 1073741823, 1164690959, 1180581155, 1610612735, 1747036439, 1770871733, 2415919103, 2620554659, 2760748939, 3105842557, 3623878655, 3930831989, 4141123409, 5435817983, 8153726975, 8725329979, 9815996227, 12230590463, 13087994969, 14723994341, 18345885695, 27518828543, 41278242815, 61917364223, 73536937435, 82729054615, 87154888811, 92876046335, 98049249913, 110305406153, 124093581923, 130732333217, 139314069503, 186140372885, 208971104255, 313456656383, 343927264511, 470184984575, 515890896767, 611426248019, 619768098211, 705277476863, 773836345151, 826357464281, 917139372029, 929652147317, 1057916215295, 1160754517727, 1586874322943, 1741131776591, 2203619904749, 2380311484415, 2611697664887, 3570467226623, 3864817765255, 3917546497331, 5153090353673, 5355700839935, 5428770084527, 5797226647883, 5876319745997, 6521879978869, 8033551259903, 8143155126791, 8695839971825, 12050326889855, 12214732690187, 13741574276461, 18075490334783, 18322099035281, 25736391511831, 27113235502175, 38604587267747, 40669853253263, 57906880901621, 61004779879895, 91507169819843, 137260754729765], [1, 5, 23, 35, 53, 61, 91, 95, 103, 137, 143, 155, 167, 175, 199, 215, 233, 251, 253, 263, 265, 283, 299, 319, 323, 325, 337, 353, 377, 395, 425, 433, 445, 449, 479, 485, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077, 40163, 60245, 107101, 571205, 1015475, 1523213, 2707933, 3610577, 9628205, 13524391, 20286587, 22515227, 22822411, 25329631, 25675213, 29616239, 30429881, 33772841, 34233617, 37994447, 44424359, 48086723, 52651091, 56991671, 66636539, 72130085, 73957087, 74966107, 78976637, 84336871, 85487507, 99954809, 110935631, 112449161, 126505307, 128231261, 140402909, 142318471, 149619451, 166403447, 168321883, 179746075, 189362119, 189757961, 199492601, 202214335, 213477707, 224429177, 239661433, 240162421, 249605171, 252482825, 269619113, 284043179, 303321503, 319548577, 320216561, 374407757, 393615007, 394437797, 426064769, 454982255, 590422511, 682473383, 885633767, 971724799, 982927643, 1023710075, 1105793599, 1151673835, 1295633065, 1328450651, 1457587199, 1474391465, 1494506983, 1535565113, 1658690399, 1727510753, 1992675977, 2127921077, 2186380799, 2241760475, 2488035599, 2521980535, 3279571199, 3324315259, 3362640713, 3732053399, 3739854667, 3782970803, 3939929195, 4207336501, 4432420345, 4919356799, 4986472889, 5598080099, 5609782001, 5674456205, 5909893793, 7379035199, 8397120149, 10506477853, 11068552799, 16602829199, 24904243799, 37356365699, 56034548549], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 203, 229, 305, 541, 721, 961, 5125, 91007, 109333, 136511, 204767, 307151, 388739, 460727, 583109, 691091, 970741, 1036637, 1294321, 1725761, 4035631, 4309535, 4602029, 5380841, 6053447, 6464303, 7661395, 9080171, 9565939, 9696455, 10215193, 11492093, 12272077, 12754585, 13620257, 14348909, 14544683, 16362769, 17006113, 21817025, 22674817, 30233089, 40310785, 53747713, 71663617, 95551489, 127401985, 169869313, 226492417, 301989889, 1073741827, 1610612741], [1, 5, 23, 35, 53, 61, 91, 95, 103, 137, 143, 155, 167, 175, 199, 215, 233, 251, 253, 263, 283, 299, 319, 323, 325, 337, 377, 395, 425, 433, 445, 449, 479, 485, 577, 593, 707, 719, 911, 1061, 1079, 1367, 1619, 1675, 1885, 2051, 2233, 2429, 2513, 3077, 11909, 22303, 23495, 24751, 29737, 31757, 33455, 35243, 37127, 39649, 50183, 52865, 55691, 62653, 75275, 83537, 84685, 112913, 132005, 352013, 938701, 1251601, 5933515, 6675205, 7911353, 8900273, 14817055, 19756073, 21096941, 22225583, 33338375, 35121907, 46829209, 50007563, 52682861, 56258509, 62438945, 75011345, 166503853, 197337899, 222005137, 296006849, 526234397, 3742111267, 5613166901, 11826919559, 17740379339, 19957926757, 26610569009, 504615234517, 2691281250757, 5310115193959, 6379333335127, 7965172790939, 8960819389807, 9569000002691, 11947759186409, 13441229084711, 14353500004037, 20161843627067, 22682074080451, 30242765440601, 34023111120677, 50347758876055, 75521638314083, 113282457471125, 268521380672293, 1432114030252229, 244414127829713749, 5214168060367226645, 13904448160979271053, 24719018952852037427, 37078528429278056141, 117186460220928177431, 175779690331392266147, 263669535497088399221, 3333303757395290380259, 4999955636092935570389, 5925873346480516231571, 8888810019720774347357, 42139543797194782091171, 63209315695792173136757, 112372116792519418909789, 149829489056692558546385, 473535175290287592442895, 710302762935431388664343, 1065454144403147082996515, 1598181216604720624494773, 5051041869763067652724213, 6734722493017423536965617, 8979629990689898049287489, 23945679975173061464766637, 127710293200922994478755397, 212610419529941811872166683, 239186721971184538356187519, 318915629294912717808250025, 358780082956776807534281279, 538170124435165211301421919, 807255186652747816952132879, 1007930877771575997023605015, 1118660062077901480819979647, 1210882779979121725428199319, 1343907837028767996031473353, 1491546749437201974426639529, 1511896316657363995535407523, 1677990093116852221229969471, 1816324169968682588142298979, 2267844474986045993303111285, 2389169488051143104055952627, 2516985139675278331844954207, 2724486254953023882213448469, 3583754232076714656083928941, 3775477709512917497767431311, 5663216564269376246651146967, 8494824846404064369976720451, 12742237269606096554965080677, 31819663987993642121101643285, 56568291534210919326402921395, 79459438314172813978376668735, 84852437301316378989604382093, 119189157471259220967565003103, 125565532150791607274471772815, 178783736206888831451347504655, 188348298226187410911707659223, 268175604310333247177021256983, 282522447339281116367561488835, 402263406465499870765531885475, 423783671008921674551342233253, 603395109698249806148297828213, 2642676615778327686712145805359, 3964014923667491530068218708039, 5016956387766668967742589302363, 5357462705100441910377462306773, 5644075936237502588710412965159, 5946022385501237295102328062059, 6689275183688891956990119069817, 7525434581650003451613883953545, 8466113904356253883065619447739, 8919033578251855942653492093089, 9524378142400785618448821878707, 12699170856534380824598429171609, 14286567213601178427673232818061, 18792367045534774661064147949219, 28188550568302161991596221923829, 100225957576185464859008789062501, 133634610101580619812011718750001, 178179480135440826416015625000001, 237572640180587768554687500000001, 316763520240783691406250000000001, 422351360321044921875000000000001, 563135147094726562500000000000001, 750846862792968750000000000000001, 1001129150390625000000000000000001, 1334838867187500000000000000000001, 1779785156250000000000000000000001, 2373046875000000000000000000000001, 3164062500000000000000000000000001, 4218750000000000000000000000000001, 5625000000000000000000000000000001, 7500000000000000000000000000000001, 10000000000000000000000000000000001], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077], [1, 151, 227, 341, 805, 847, 1073, 1271, 1907, 2861, 3011, 4517, 8029, 9515, 10559, 10705, 14273, 15839, 23759, 25373, 28157, 30071, 35639, 45107, 53459, 67661, 80189, 158203, 177979, 200227, 237305, 266969, 300341, 374999, 562499, 843749, 999997], [1, 5, 11, 13, 17, 19, 29, 59, 67, 89, 101, 157, 703, 1055, 1583, 2287, 2375, 3007, 3349, 3431, 3563, 3749, 4009, 4465, 4511, 4703, 5147, 5345, 5791, 6767, 7055, 7721, 8687, 8807, 10151, 10583, 12197, 13031, 13211, 14455, 14863, 15227, 15875, 17131, 19273, 19547, 19817, 21683, 21991, 22295, 22841, 23485, 23813, 25697, 26659, 29321, 31313, 31595, 32525, 32987, 33443, 35545, 37111, 39989, 47393, 49481, 49927, 50165, 55667, 66569, 74891, 83501, 84253, 112337, 10098763, 11208191, 11361109, 15148145, 16812287, 25218431, 26567563, 29888509, 35423417, 37827647, 39851345, 53860069, 56741471, 62974963, 85112207, 94462445, 127668311, 191502467, 287253701, 402653183, 603979775, 905969663, 1073741821, 1358954495, 2038431743, 3057647615, 4586471423, 4776767563, 5373863509, 6369023417, 6879707135, 7165151345, 10319560703, 15479341055, 23219011583, 34828517375, 45290833187, 52242776063, 67936249781, 78364164095, 117546246143, 120775555165, 161034073553, 176319369215, 264479053823, 286282797427, 396718580735, 429424196141, 595077871103, 603196676059, 678596260567, 804262234745, 892616806655, 904795014089, 1017894390851, 1338925209983, 1429799528435, 1526841586277, 2008387814975, 2144699292653, 3012581722463, 4518872583695, 6778308875543, 10167463313315, 15251194969973], [1, 5, 35, 53], [1, 5, 7, 9, 11, 13, 17], [1, 85, 113, 301, 4007, 5627, 5707, 6011, 6331, 6421, 6763, 7123, 7609, 8441, 8561, 9017, 9497, 10003, 10145, 10685, 15005], [1, 5, 11, 13, 17, 19, 29], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 271, 361, 407, 611, 917, 1283, 1925, 3421, 7207, 10811, 12163, 16217, 18245, 153749, 245759, 273331, 323947, 364441, 368639, 409135, 409997, 431929, 485921, 511915, 545513, 552959, 575905, 613703, 682553, 767873, 776719, 808951, 829439, 920555, 1035625, 1078601, 1165079, 1213427, 1244159, 1293067, 1380833, 1454701, 1515071, 1724089, 1747619, 1820141, 1866239, 1939601, 2272607, 2621429, 2693459, 2799359, 3192247, 3408911, 4040189, 4199039, 4256329, 4788371, 5113367, 5675105, 6298559, 7182557, 7670051, 9447839, 11505077, 14171759, 15133613, 21257639, 31886459, 35872267, 36780565, 40356301, 47829689, 49040753, 53808401, 130775341, 174367121, 464978989, 489854407, 619971985, 653139209, 734781611, 826629313, 1102172417, 1741704557, 12385454627, 14679057335, 18578181941, 22018586003, 33027879005, 34794802571, 39144152893, 52192203857, 92786140189, 7917750629461, 9999999999999, 14999999999999, 18768001492055, 22499999999999, 28152002238083, 33365335985875, 33749999999999, 42228003357125, 44487114647833, 50048003978813, 50624999999999, 75937499999999, 113906249999999, 158176407636739, 170859374999999, 237264611455109, 256289062499999, 374936669953751, 384433593749999, 562405004930627, 576650390624999, 739780321114523, 832252861253839, 843607507395941, 864975585937499, 973097534179687, 999831119876669, 1053320027524391, 1109670481671785, 1248379291880759, 1297463378906249, 1315165015314707, 1459646301269531, 1579980041286587, 1642102088928223, 1777477546447411, 1872568937821139, 1972747522972061, 2189469451904297, 2369970061929881, 2463153133392335, 2666216319671117, 2808853406731709, 3117428184449675, 3507106707505885, 3694729700088503, 4676142276674513, 5542094550132755, 8313141825199133], [1, 5, 11, 13, 17, 469, 2501], [1, 5, 23, 35, 53, 61, 103, 137, 155, 167, 175, 233, 251, 263, 283, 319, 325, 365, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 959, 1079, 1367, 1439, 1619, 2051, 2159, 2429, 2557, 3077, 3239, 3409, 3893, 4859, 5467, 6151, 7289, 8201, 9227, 10381, 13841, 18181, 64643, 71743, 95657, 96965, 102151, 107615, 153227, 161423, 172381, 229841, 242135, 255085, 363203, 544805, 1360453, 1813937, 309578581, 412771441, 550361921, 3913684771, 5870527157, 58639059247, 78185412329, 83491941781, 87958588871, 111322589041, 123552256519, 131937883307, 148430118721, 173549397359, 185328384779, 197906824961, 208494432877, 260324096039, 277992577169, 308532261971, 365667866039, 390486144059, 439296912067, 462798392957, 548501799059, 585729216089, 650076206291, 658945368101, 822752698589, 975114309437, 6163685511499, 6934146200437, 8218247348665, 9245528267249, 10957663131553, 14610217508737, 37918848090623, 42084533666395, 47345100374695, 56878272135935, 63126800499593, 71017650562043, 77921160046597, 79894856882299, 85317408203903, 89881713992587, 101116928241661, 103894880062129, 106526475843065, 119842285323449, 127976112305855, 134822570988881, 191964168458783, 204992986532891, 224450846220773, 230617109849503, 287946252688175, 307489479799337, 345925664774255, 431919379032263, 518888497161383, 546647964087709, 598535589922061, 647879068548395, 728863952116945, 778332745742075, 875624338959835, 971818602822593, 985077381329815, 1167499118613113, 1244137921778503, 1313436508439753, 1477616071994723, 1574612057250919, 1596094906458829, 1866206882667755, 2099482743001225, 2128126541945105, 2216424107992085, 2361918085876379, 2657157846610927, 2799310324001633, 3542877128814569, 3985736769916391, 4423601499656899, 5675004111853613, 5898135332875865, 5978605154874587, 6635402249485349, 6725930799233911, 8967907732311881, 10088896198850867, 15133344298276301, 27961530466967063, 41942295700450595, 62913443550675893, 298256324980982005, 397675099974642673, 530233466632856897, 90493178305340910421, 120657571073787880561, 3050700068631081227023, 4576050102946621840535, 6864075154419932760803, 10296112731629899141205, 16270400366032433210789, 38566874941706508351499, 43387734309419821895437, 51422499922275344468665, 57850312412559762527249, 68563333229700459291553, 81260246790756099901099, 91417777639600612388737, 108346995721008133201465, 121890370186134149851649, 2311402575381506841631253, 6163740201017351577683341, 8218320268023135436911121, 29220694286304481553461763, 43831041429456722330192645, 51947900953430189428376467, 77921851430145284142564701, 164181020297260845600794759, 246271530445891268401192139, 277055471751627676951341157, 369407295668836902601788209, 437816054126028921602119357, 583754738834705228802825809, 598540900644637767784652891, 647884817088710086111906927, 673358513225217488757734503, 897811350966956651676979337, 971827225633065129167860391, 1010037769837826233136601755, 1049750685708984008874086683, 1136292491067554512278676975, 1180969521422607009983347519, 1365090643413249234935375911, 1399667580945312011832115577, 1457740838449597693751790587, 1515056654756739349704902633, 1556679303559213943474202157, 1574626028563476013311130025, 1596109068385700714092407709, 1639958443255797405470764411, 1704438736601331768418015463, 1771454282133910514975021279, 1820120857884332313247167881, 1844953248662772081154609963, 2047635965119873852403063867, 2075572404745618591298936209, 2128145424514267618789876945, 2186611257674396540627685881, 2303590460759858083953446851, 2459937664883696108206146617, 2488297921680554687701538803, 2522246429053946807454668971, 2556658104901997652627023195, 2657181423200865772462531919, 2767429872994158121731914945, 2837527232685690158386502593, 2876240368014747359205401095, 3071453947679810778604595801, 3317730562240739583602051737, 3362995238738595743272891961, 3455385691139787125930170277, 3732446882520832031552308205, 3783369643580920211182003457, 3834987157352996478940534793, 3985772134801298658693797879, 4314360552022121038808101643, 4423640749654319444802735649, 4853655621024886168659114349, 5978658202201947988040696819, 6471540828033181558212152465, 8967987303302921982061045229, 15728500443215358025965282307, 20971333924287144034620376409, 23592750664823037038947923461, 223694228525729536369284015029, 2386071770941115054605696160309, 5296401279628678427022943777607, 6703257869530046134200913218535, 7944601919443017640534415666411, 8937677159373394845601217624713, 10054886804295069201301369827803, 11311747654831952851464041056279, 11916902879164526460801623499617, 14123736745676475805394516740285, 15082330206442603801952054741705, 16967621482247929277196061584419, 18831648994235301073859355653713, 25451432223371893915794092376629, 66956974201725514929277708990979, 100435461302588272393916563486469, 178551931204601373144740557309277, 564312276399727796605599786063887, 668814549807084795977007153853495, 846468414599591694908399679095831, 1003221824710627193965510730780243, 1269702621899387542362599518643747, 1504832737065940790948266096170365, 1904553932849081313543899277965621, 2378007288202968163473803213701315, 3567010932304452245210704820551973, 3749999999999999999999999999999999, 5624999999999999999999999999999999, 8437499999999999999999999999999999, 9999999999999999999999999999999997, 12656249999999999999999999999999999, 18984374999999999999999999999999999, 28476562499999999999999999999999999, 42714843749999999999999999999999999, 45094064131848877766614342422780491, 50730822148329987487441135225628053, 64072265624999999999999999999999999, 67641096197773316649921513634170737, 80167225123286893807314386529387539, 96108398437499999999999999999999999, 120250837684930340710971579794081309, 144162597656249999999999999999999999, 213779266995431716819505030745033437, 216243896484374999999999999999999999, 324365844726562499999999999999999999, 486548767089843749999999999999999999, 570078045321151244852013415320089165, 729823150634765624999999999999999999, 1094734725952148437499999999999999999, 1642102088928222656249999999999999999, 2463153133392333984374999999999999999, 3694729700088500976562499999999999999, 5542094550132751464843749999999999999, 6080832483425613278421476430080951093, 8313141825199127197265624999999999999, 10810368859423312494971513653477246387, 12469712737798690795898437499999999999, 16215553289134968742457270480215869581, 18704569106698036193847656249999999999, 28056853660047054290771484374999999999, 34166104049535407391514907349261420679, 37919520990877956592157715931534767151, 40493160355004927278832482784309831915, 42085280490070581436157226562499999999, 45554805399380543188686543132348560905, 51249156074303111087272361023892131019, 56879281486316934888236573897302150727, 57655300583590999973181406151878647397, 60739740532507390918248724176464747873, 63127920735105872154235839843749999999, 71987840631119870717924413838773034515, 76873734111454666630908541535838196529, 85318922229475402332354860845953226091, 94691881102658808231353759765624999999, 95983787508159827623899218451697379353, 107981760946679806076886620758159551773, 127978383344213103498532291268929839137, 134824963523121623438782989978790283203, 142037821653988212347030639648437499999, 202237445284682435158174484968185424805, 213056732480982318520545959472656249999, 319585098721473477780818939208984374999, 479377648082210216671228408813476562499, 719066472123315325006842613220214843749], [1, 5, 23, 35, 47, 53, 55, 61, 71, 83, 91, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077, 3295, 4393, 4693, 4943, 6257, 7415, 11123, 13883, 15619, 16685, 20825, 23429, 24347, 27391, 36521, 41087, 43283, 61631, 64925, 65815, 92447, 98723, 138671, 148085, 208007, 312011, 351013, 468017, 1846741, 39397141, 52529521, 70039361, 124514419, 166019225, 186771629, 233201215, 310934953, 349801823, 368515499, 414579937, 524702735, 552773249, 787054103, 1164690959, 1180581155, 1747036439, 1770871733, 2147483647, 2620554659, 2760748939, 3105842557, 3221225471, 3930831989, 4141123409, 4831838207, 7247757311, 8725329979, 9815996227, 10871635967, 13087994969, 14723994341, 16307453951, 24461180927, 36691771391, 55037657087, 73536937435, 82556485631, 82729054615, 87154888811, 98049249913, 110305406153, 123834728447, 124093581923, 130732333217, 185752092671, 186140372885, 278628139007, 343927264511, 417942208511, 515890896767, 611426248019, 619768098211, 626913312767, 773836345151, 826357464281, 917139372029, 929652147317, 940369969151, 1160754517727, 1410554953727, 1741131776591, 2115832430591, 2203619904749, 2611697664887, 3173748645887, 3864817765255, 3917546497331, 4760622968831, 5153090353673, 5428770084527, 5797226647883, 5876319745997, 6521879978869, 7140934453247, 8143155126791, 8695839971825, 10711401679871, 12214732690187, 13741574276461, 14476720225405, 16067102519807, 18322099035281, 24100653779711, 36150980669567, 54226471004351, 81339706506527, 122009559759791, 183014339639687, 274521509459531, 308836698141973, 411782264189297], [1, 5, 23, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 437, 445, 479, 577, 593, 719, 911, 1079, 1165, 1367, 1553, 1619, 2051, 2429, 3077, 4141, 4907, 5521, 5815, 7361, 8723, 12251, 13085, 13783, 14519, 17207, 18377, 20675, 21779, 25811, 31013, 32669, 38717, 163147, 183541, 244721, 9281251, 13921877, 31685351, 47528027, 49500005, 53469031, 57877039, 71292041, 77169385, 80203547, 81297787, 84494269, 86815559, 90228991, 91460011, 102892513, 108397049, 109875943, 112659025, 120305321, 121946681, 130223339, 132000013, 135343487, 137190017, 146501257, 150212033, 164813915, 185415655, 195335009, 203015231, 247220873, 278123483, 289058797, 304522847, 312888919, 417185225, 456784271, 469333379, 685176407, 704000069, 1027764611, 1541646917, 1602261685, 5696930435, 8545395653, 15191814493, 20255752657, 27007670209, 36010226945, 96027271853, 256072724941, 341430299921, 606987199859, 910480799789, 1438784473739, 1618632532957, 1796452127551, 2158176710609, 2694678191327, 3836758596637, 4042017286991, 4258256894935, 5115678128849, 6063025930487, 6387385342403, 9094538895731, 9581078013605, 13641808343597, 90842813758613, 161498335570867, 212432836658011, 215331114094489, 226850885630407, 238986941240263, 242247503356301, 287108152125985, 302467847507209, 318649254987017, 340276328445611, 358480411860395, 382810869501313, 403290463342945, 510414492668417, 537720617790593, 930387536850151, 1240516715800201, 1395581305275227, 1490300934881311, 1570028968434631, 1987067913175081, 2093371957912841, 2235451402321967, 2355043452651947, 2649423884233441, 3021267010247267, 3353177103482951, 3532565178977921, 4243864771595611, 4531900515370901, 4774347868045063, 5029765655224427, 5658486362127481, 6365797157393417, 7161521802067595, 7544648482836641, 7841290845551887, 8056712027326045, 10742282703101393, 11761936268327831, 17642904402491747, 26464356603737621, 41820217842943397, 74347053943010483, 111520580914515725, 198258810514694621, 2114760645490075957, 2819680860653434609, 9223372036854775807, 13835058055282163711, 20752587082923245567, 31128880624384868351, 46693320936577302527, 60153191693939938325, 70039981404865953791, 105059972107298930687, 157589958160948396031, 236384937241422594047, 354577405862133891071, 427756029823572894755, 531866108793200836607, 641634044735359342133, 797799163189801254911, 1196698744784701882367, 1795048117177052823551, 1898993660892998914843, 2136367868504623779199, 2692572175765579235327, 2848490491339498372265, 3204551802756935668799, 4038858263648368852991, 4562730984784777544053, 4806827704135403503199, 6058287395472553279487, 7210241556203105254799, 9087431093208829919231, 10127966191429327545829, 10669791543234188690255, 10815362334304657882199, 13503954921905770061105, 13631146639813244878847, 16004687314851283035383, 16223043501456986823299, 20446719959719867318271, 24007030972276924553075, 24334565252185480234949, 25291357732110669488011, 28452777448624503174013, 29974942497316349022827, 30670079939579800977407, 33721810309480892650681, 36010546458415386829613, 37937036598166004232017, 44962413745974523534241, 46005119909369701466111, 69007679864054552199167, 79933179992843597394205, 103511519796081828298751, 106577573323791463192273, 142103431098388617589697, 155267279694122742448127, 232900919541184113672191, 349351379311776170508287, 378942482929036313572525, 524027068967664255762431, 786040603451496383643647, 1179060905177244575465471, 1768591357765866863198207, 2021026575621527005720133, 2363051025485264684257823, 2523433883172008722886651, 2652887036648800294797311, 2838863118568509813247483, 3193721008389573539903419, 3544576538227897026386735, 3592936134438270232391347, 3785150824758013084329977, 3979330554973200442195967, 4258294677852764719871225, 4790581512584360309855129, 5316864807341845539580103, 5389404201657405348587021, 5968995832459800663293951, 6301469401294039158020861, 6729157021792023261031069, 7975297211012768309370155, 8953493748689700994940927, 8972209362389364348041425, 11202612268967180725370419, 11962945816519152464055233, 13430240623034551492411391, 14936816358622907633827225, 16803918403450771088055629, 19915755144830543511769633, 20145360934551827238617087, 27974942754878568663994655, 30218041401827740857925631, 41962414132317852995991983, 45327062102741611286888447, 62943621198476779493987975, 67990593154112416930332671, 74599847346342849770652413, 94415431797715169240981963, 101985889731168625395499007, 106217360772429565396104709, 141623147696572753861472945, 152978834596752938093248511, 229468251895129407139872767, 344202377842694110709809151, 516303566764041166064713727, 774455350146061749097070591, 795731705027657064220292405, 1161683025219092623645605887, 1742524537828638935468408831, 2613786806742958403202613247, 3920680210114437604803919871, 5029810283631610084948021127, 5881020315171656407205879807, 7544715425447415127422031691, 8487804853628342018349785653, 8821530472757484610808819711, 11317073138171122691133047537, 13232295709136226916213229567, 13412827423017626893194723005, 19848443563704340374319844351, 29772665345556510561479766527, 44658998018334765842219649791, 66988497027502148763329474687, 100482745541253223144994212031, 150724118311879834717491318047, 226086177467819752076236977071, 339129266201729628114355465607, 508693899302594442171533198411, 572280636715418747442974848213, 763040848953891663257299797617], [1], [1, 5, 13, 17, 25759, 30947, 34345, 38639, 45793, 46421, 57959, 61057, 81409, 86939, 97807, 108545, 130409, 146711, 180703, 220067, 271055, 330101, 343055, 406583, 514583, 609875, 771875, 914813, 963749, 1157813, 1713331, 2569997, 6091843, 8122457, 9137765, 21659885, 616103395, 924155093], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1183, 1201, 1457, 1577, 1601, 1775, 2663, 2803, 2845, 3995, 4205, 4495, 5993, 6743, 10115, 15173, 59797, 212611, 283481, 318917, 1491547, 1677991, 1988729, 2237321, 2516987, 2831611, 3185563, 3583759, 3775481, 4247417, 4778345, 5375639, 8063459, 12095189, 3620370659, 5430555989, 5721079559, 8581619339, 9654321757, 12872429009, 15256212157, 48217164347, 54244309891, 72325746521, 81366464837, 85719403283, 128579104925, 135457822471, 180610429961, 203186733707, 214056805879, 228585075421, 285409074505, 304780100561, 321085208819, 380545432673, 481627813229, 1014787820461, 1353050427281, 1779785156251, 2002258300783, 2373046875001, 2669677734377, 2850871682171, 3003387451175, 3164062500001, 3207230642443, 3608134472749, 4218750000001, 4276307523257, 4505081176763, 4810845963665, 5068216323859, 5625000000001, 6757621765145, 7500000000001, 7602324485789, 10000000000001], [1, 5, 11, 13, 17, 19, 29, 67, 89, 101, 1639, 1663, 1687, 2249, 2459, 2495, 2531, 2767, 3503, 3689, 3743, 3797, 4151, 5179, 5255, 5615, 5827, 6227, 7769, 7883, 8423, 8741, 8869, 9341, 11825, 12635, 14215, 18953, 21323, 23989, 31985, 441941, 465583, 620777, 698375, 1047563, 1178509, 1571345, 1655405, 47087075, 70630613, 83710355, 125565533, 223227613, 297636817, 6349585429, 15856059695, 22576303747, 23784089543, 30101738329, 33864455621, 35676134315, 40135651105, 53514201473, 112754202275, 118786320091, 133634610103, 158381760121, 169131303413, 178179480137, 200451915155, 300677872733, 444946289063, 667419433595, 750846862795, 844702720645, 1001129150393, 1126270294193, 1186523437501, 1582031250001, 2109375000001, 2812500000001, 3750000000001, 5000000000001], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 271, 361, 407, 481, 611, 641, 917, 1709], [1, 5, 11, 13, 17, 19, 29, 67, 89, 101, 1639, 1663, 1687, 2249, 2459, 2495, 2531, 2767, 3503, 3689, 3743, 3797, 4151, 5179, 5255, 5615, 5827, 6227, 7769, 7883, 8423, 8741, 8869, 9341, 11825, 12635, 14215, 18953, 21323, 23989, 31985, 441941, 465583, 620777, 698375, 1047563, 1178509, 1571345, 1655405, 47087075, 70630613, 83710355, 125565533, 223227613, 297636817, 6349585429, 15856059695, 22576303747, 23784089543, 30101738329, 33864455621, 35676134315, 40135651105, 53514201473, 112754202275, 118786320091, 133634610103, 158381760121, 169131303413, 178179480137, 200451915155, 300677872733, 444946289063, 667419433595, 750846862795, 844702720645, 1001129150393, 1126270294193, 1186523437501, 1582031250001, 2109375000001, 2812500000001, 10000000000003, 15000000000005], [1, 5, 11, 13, 17, 19, 29, 59, 67, 89, 101, 157, 703, 1055, 1583, 2287, 2375, 3007, 3349, 3431, 3563, 3749, 4009, 4465, 4511, 4703, 5147, 5345, 5791, 6767, 7055, 7721, 8687, 8807, 9997, 10151, 10583, 12197, 13031, 13211, 14455, 14863, 15227, 15875, 17131, 19273, 19547, 19817, 21683, 21991, 22295, 22841, 23485, 23813, 25697, 29321, 31313, 32525, 32987, 33443, 37111, 49481, 50165, 55667, 83501], [1, 5, 11, 13, 17, 19, 29, 67, 101], [1, 5, 7, 11, 13, 17, 37, 131, 197, 1103, 1397, 1655, 2483, 3725, 6971, 7843, 10457, 11015, 11765, 16523, 18589, 24785, 117493, 371335, 495113, 557003, 626629, 835505, 1320301, 1760401, 2347201, 8345603, 12518405, 14836627, 22254941, 46891067, 52752451, 70336601, 79128677, 222298391, 263464759, 333447587, 351286345, 395197139, 500171381, 592795709, 1249018115, 1873527173, 2079348959, 2960635531, 3119023439, 3330714973, 3947514041, 4440953297, 4678535159, 5544930557, 7017802739, 9857654323, 10526704109, 14786481485], [1, 5, 11, 13, 17, 19, 29, 59, 67, 89, 101, 157, 209, 371, 557, 659, 989, 1171, 1757, 4163, 6245, 11101, 12319, 14801, 18479, 27343, 27719, 34607, 35083, 39469, 41015, 41579, 46777, 51911, 52625, 61523, 62369, 65701, 77867, 87601, 92285, 116801], [1, 5, 11, 13, 17, 19, 29, 59, 67, 89, 101, 157, 703, 1055, 1583, 2287, 2375, 2499, 3007, 3349, 3431, 3563, 3749, 4009, 4465, 4511, 4703, 5147, 5345, 5791, 6767, 7055, 7721, 8687, 8807, 10151, 10583, 12197, 13031, 13211, 14455, 14863, 15227, 15875, 17131, 19273, 19547, 19817, 21683, 21991, 22295, 22841, 23485, 23813, 25697, 29321, 31313, 32525, 32987, 33443, 37111, 49481, 50165, 55667, 83501], [1, 5, 23, 35, 53, 61, 167, 251, 283, 319, 325, 377, 425, 433, 479, 577, 719, 791, 911, 1079, 1187, 1367, 1619, 1781, 2051, 2429, 3077, 4999, 7499, 8437, 11249], [1, 5, 11, 13, 17, 19, 29, 67, 89, 101, 1639, 1663, 1687, 2249, 2459, 2495, 2531, 2767, 3503, 3689, 3743, 3797, 4151, 5179, 5255, 5615, 5827, 6227, 7769, 7883, 8423, 8741, 8869, 9341, 11825, 12635, 14215, 18953, 21323, 23989, 31985, 441941, 465583, 620777, 698375, 1047563, 1178509, 1571345, 1655405, 47087075, 70630613, 83710355, 125565533, 223227613, 297636817, 6349585429, 15856059695, 22576303747, 23784089543, 30101738329, 33864455621, 35676134315, 40135651105, 53514201473, 112754202275, 118786320091, 133634610103, 158381760121, 169131303413, 178179480137, 200451915155, 300677872733, 593261718751, 791015625001, 844702720645, 889892578127, 1054687500001, 1126270294193, 1334838867191, 1406250000001, 1875000000001, 2002258300787, 2500000000001, 3003387451181], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1183, 1201, 1457, 1577, 1601, 1775, 2663, 2803, 2845, 3995, 4205, 4495, 5993, 6743, 10115, 15173, 59797, 212611, 283481, 318917, 1491547, 1677991, 1988729, 2237321, 2516987, 2831611, 3185563, 3583759, 3775481, 4247417, 4778345, 5375639, 8063459, 12095189, 3620370659, 5430555989, 7628106079, 11442159119, 17163238679, 18081436631, 25744858019, 27122154947, 38617287029, 40135651103, 40683232421, 42859701643, 48217164349, 57146268857, 60203476655, 63424238779, 64289552465, 71352268627, 84565651705, 90305214983, 95136358169, 107028402941, 135457822475, 152390050285, 203186733713, 451016809093, 1603615321219, 2405422981829, 4999999999999, 7499999999999, 11249999999999, 16874999999999, 25312499999999, 34210460186005, 37968749999999, 45613946914673, 56953124999999, 85429687499999, 121637191772461, 128144531249999, 162182922363281, 192216796874999, 288325195312499, 432487792968749], [1, 5, 11, 13, 17, 19, 29, 59, 67, 89, 101, 157, 209, 371, 557, 659, 989, 1171, 1757, 4163, 6245, 11101, 12319, 13671, 14801, 18479, 20507, 23071, 27719, 30761, 34607, 35083, 39469, 41579, 46777, 51911, 52625, 62369, 65701, 77867, 87601, 116801], [1, 5, 13], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 203, 229, 305, 541, 721, 3845, 6835, 10253], [1, 5, 13, 17], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1183, 1201, 1457, 1577, 1601, 1775, 2663, 2803, 2845, 3995, 4205, 4495, 5993, 6743, 10115, 15173, 59797, 212611, 283481, 318917, 1491547, 1677991, 1988729, 2237321, 2516987, 2831611, 3185563, 3583759, 3775481, 4247417, 4778345, 5375639, 8063459, 12095189, 3620370659, 5430555989, 7628106079, 11442159119, 17163238679, 18081436631, 25744858019, 27122154947, 38617287029, 40135651103, 40683232421, 42859701643, 48217164349, 57146268857, 60203476655, 63424238779, 64289552465, 71352268627, 84565651705, 90305214983, 95136358169, 107028402941, 135457822475, 152390050285, 203186733713, 451016809093, 1603615321219, 2405422981829, 3749999999999, 5624999999999, 8437499999999, 9999999999997, 12656249999999, 18984374999999, 28476562499999, 34210460186005, 42714843749999, 45613946914673, 64072265624999, 96108398437499, 108121948242187, 121637191772461, 144162597656249, 162182922363281], [1, 5, 23, 35, 47, 53, 61, 71, 83, 91, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077], [1, 5, 7, 11, 13, 17, 37, 131, 197, 1103, 1397, 1655, 2483, 3725, 6971, 7843, 10457, 11015, 11765, 16523, 18589, 24785, 117493, 371335, 495113, 557003, 626629, 835505, 1320301, 1760401, 2347201, 8345603, 12518405, 14836627, 22254941, 46891067, 52752451, 70336601, 79128677, 148198927, 197598569, 222298391, 333447587, 500171381, 526929517, 702572689, 3747054341, 6661429939, 9857654319, 9992144909, 14786481479, 18714140623, 22179722219, 23685084227, 24952187497, 28071210935, 33269583329, 35527626341, 42106816403, 63160224605], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1183, 1201, 1457, 1577, 1601, 1775, 2663, 2803, 2845, 3995, 4205, 4495, 5993, 6743, 10115, 15173, 59797, 212611, 283481, 318917, 1491547, 1677991, 1988729, 2237321, 2516987, 2831611, 3185563, 3583759, 3775481, 4247417, 4778345, 5375639, 8063459, 12095189, 3620370659, 5430555989, 7628106079, 11442159119, 17163238679, 18081436631, 25744858019, 27122154947, 38617287029, 40135651103, 40683232421, 42859701643, 48217164349, 57146268857, 60203476655, 63424238779, 64289552465, 71352268627, 84565651705, 90305214983, 95136358169, 107028402941, 135457822475, 152390050285, 203186733713, 451016809093, 1603615321219, 2405422981829, 2499999999999, 3749999999999, 5624999999999, 8437499999999, 12656249999999, 18984374999999, 28476562499999, 34210460186005, 42714843749999, 45613946914673, 64072265624999, 96108398437499, 108121948242187, 121637191772461, 144162597656249, 162182922363281], [1, 5, 23, 35, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 757, 911, 1079, 1367, 1619, 2051, 2429, 3077, 4037, 43061, 306211, 408281, 459317, 4354997, 11613325, 247750933, 330334577, 14094275285, 16704326263, 22272435017, 25056489395, 37584734093, 237572640181, 316763520241, 422351360321, 3003387451171, 4505081176757, 9999999999995, 11249999999995, 12656249999995, 14238281249995, 14999999999993, 16018066406245, 16874999999993, 18984374999993, 21357421874993], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1183, 1201, 1457, 1577, 1601, 1775, 2663, 2803, 2845, 3995, 4205, 4495, 5993, 6743, 10115, 15173, 59797, 212611, 283481, 318917, 1491547, 1677991, 1988729, 2237321, 2516987, 2831611, 3185563, 3583759, 3775481, 4247417, 4778345, 5375639, 8063459, 12095189, 3620370659, 5430555989, 7628106079, 11442159119, 17163238679, 18081436631, 25744858019, 27122154947, 38617287029, 40135651103, 40683232421, 42859701643, 48217164349, 57146268857, 60203476655, 63424238779, 64289552465, 71352268627, 84565651705, 90305214983, 95136358169, 107028402941, 135457822475, 152390050285, 203186733713, 451016809093, 1874999999999, 2405422981829, 2812499999999, 4218749999999, 4276307523251, 4999999999997, 6328124999999, 6414461284877, 7602324485779, 9492187499999, 11403486728669, 14238281249999, 18020324707031, 21357421874999, 27030487060547, 32036132812499, 40545730590821, 48054199218749], [1, 5, 13, 17, 25759, 30947, 34345, 38639, 45793, 46421, 57959, 61057, 81409, 86939, 97807, 108545, 130409, 146711, 180703, 220067, 271055, 330101, 343055, 406583, 514583, 609875, 771875, 914813, 963749, 1157813, 1713331, 2569997, 6091843, 8122457, 9137765, 21659885, 924155093, 2464413581], [1, 5, 7, 11, 13, 17, 37, 49, 65, 115, 173, 613, 817, 2719, 4079, 4357, 6119, 9179, 9667, 10183, 10327, 12889, 13577, 13769, 14501, 15275, 15491, 17185, 22913, 23237, 36205, 48273], [1, 5, 7, 11, 13, 17, 37, 49, 65, 115, 173, 613, 817, 2719, 4079, 4357, 6119, 9179, 9667, 10327, 12889, 13769, 14501, 15275, 15491, 17185, 18103, 22913, 23237, 24137, 27155, 40733], [1, 5, 7, 11, 13, 17, 37, 43, 49, 65, 203, 229, 305, 541, 721, 3845, 10253, 27341], [1, 5, 35, 53], [1, 5, 23, 35, 53, 163, 217, 245, 289, 1027, 1369, 1541, 1825, 5767, 8651, 9733, 12977, 27339, 30757, 41009], [1, 5, 23, 27, 31, 35, 41, 47, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077], [1, 227, 341, 605, 955, 1075, 1433, 1613, 2263, 3395, 5093, 12069], [1, 5, 53], [1, 5, 23, 35, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 757, 911, 1079, 1367, 1619, 2051, 2429, 3077, 4037, 43061, 306211, 408281, 459317, 4354997, 11613325, 247750933, 330334577, 14094275285, 16704326263, 22272435017, 25056489395, 37584734093, 237572640181, 316763520241, 422351360321, 1126270294189, 7499999999995, 8437499999995, 9492187499995, 9999999999993, 10678710937495, 11249999999993, 12656249999993, 14238281249993, 16018066406243, 24027099609365], [1, 5, 23, 35, 53, 61, 319, 325, 335, 425, 433, 479, 503, 577, 595, 719, 755, 793, 893, 911, 1079, 1133, 1367, 1619, 1879, 2051, 2429, 2819, 3077, 4229, 14075, 15835, 17815, 21113, 23753, 26723, 40085, 59311, 83311, 88967, 124967, 133451, 150133, 187451, 200177, 210883, 234047, 243247, 281177, 316325, 324329, 351071, 364871, 369851, 416083, 461791, 526607, 547307, 554777, 615721, 624125, 692687, 789911, 820961, 864877, 876683, 986269, 1039031, 1153169, 1184867, 1315025, 1558547, 1777301, 2337821, 32801251, 43735001, 49201877, 245731911, 311004451, 368597867, 414672601, 466506677, 552896801], [1, 5, 13, 17], [1, 5, 23, 35, 53, 61, 319, 325, 335, 425, 433, 479, 503, 577, 595, 719, 755, 793, 893, 911, 1079, 1133, 1367, 1619, 1879, 2051, 2429, 2819, 3077, 4229, 14075, 15835, 17815, 21113, 23753, 26723, 40085, 59311, 83311, 88967, 124967, 133451, 150133, 187451, 200177, 210883, 234047, 243247, 281177, 316325, 324329, 351071, 364871, 369851, 416083, 461791, 526607, 547307, 554777, 615721, 624125, 692687, 789911, 820961, 864877, 876683, 986269, 1039031, 1153169, 1184867, 1315025, 1558547, 1777301, 2337821, 32801251, 43735001, 49201877, 311004451, 368597867, 414672601, 466506677, 552896801, 982927645], [1, 5, 11, 13, 17, 19, 25, 29, 33], [1, 151, 227, 341, 805, 847, 1073, 1271, 1907, 2861, 3011, 4517, 8029, 9515, 10559, 10705, 14273, 15839, 23759, 25373, 28157, 30071, 35639, 45107, 53459, 67661, 80189, 158203, 177979, 200227, 237305, 249999, 266969, 300341, 374999, 562499, 843749], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1183, 1201, 1457, 1577, 1601, 1775, 2663, 2803, 2845, 3995, 4205, 4495, 5993, 6743, 10115, 15173, 59797, 212611, 283481, 318917, 1491547, 1677991, 1988729, 2237321, 2516987, 2831611, 3185563, 3583759, 3775481, 4247417, 4778345, 5375639, 8063459, 12095189, 3620370659, 5430555989, 7628106079, 11442159119, 17163238679, 18081436631, 25744858019, 27122154947, 38617287029, 40135651103, 40683232421, 42859701643, 48217164349, 57146268857, 60203476655, 63424238779, 64289552465, 71352268627, 84565651705, 90305214983, 95136358169, 107028402941, 135457822475, 152390050285, 203186733713, 451016809093, 1249999999999, 1874999999999, 2405422981829, 2812499999999, 4218749999999, 4276307523251, 6328124999999, 6414461284877, 7602324485779, 9492187499999, 11403486728669, 14238281249999, 18020324707031, 21357421874999, 27030487060547, 32036132812499, 40545730590821, 48054199218749], [1, 5, 23, 35, 53, 61, 71, 91, 103, 107, 121, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 757, 911, 1079, 1367, 1619, 2051, 2429, 3077, 4037, 43061, 306211, 408281, 459317, 4354997, 11613325, 247750933, 330334577, 14094275285, 16704326263, 22272435017, 25056489395, 37584734093, 237572640181, 500564575195, 563135147095, 750846862793, 844702720643, 1267054080965, 6328124999995, 7119140624995, 8437499999993, 9492187499993, 9999999999991, 10678710937493, 14999999999987, 22499999999981], [1, 5, 11, 13, 17, 29, 77, 127, 169, 191, 205, 287, 431, 647, 901, 971, 1067, 1093, 1201, 1457, 1601, 2845, 3551, 5327, 6743, 7991, 10115, 11987, 15173, 17981, 37877, 239419, 269347, 359129, 404021, 851267, 896807, 1276901, 1345211, 1513363, 2017817, 2270045, 2391485, 6377293, 8503057, 11337409, 15116545, 20155393, 26873857, 35831809, 47775745, 63700993, 84934657, 113246209, 150994945, 201326593, 268435457], [1, 3, 5], [1, 5, 23, 35, 47, 53, 55, 61, 71, 73, 83, 91, 97, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 859, 911, 919, 967, 1079, 1145, 1225, 1289, 1367, 1379, 1451, 1619, 1633, 2035, 2051, 2069, 2177, 2429, 3053, 3077, 3215, 4823, 7235, 8573, 10853, 22861, 29663, 42815, 44495, 50743, 56315, 60139, 63355, 64223, 66743, 67657, 71275, 76115, 80185, 84473, 90209, 95033, 96335, 100115, 106913, 114173, 121925, 144503, 150173, 216755, 316405, 325133, 999995, 1124995, 1499993, 1687493], [1, 5, 23, 35, 47, 53, 55, 61, 71, 83, 91, 103, 107, 121, 125, 137, 155, 161, 167, 175, 233, 251, 263, 283, 319, 325, 377, 395, 425, 433, 445, 479, 577, 593, 719, 911, 1079, 1367, 1619, 2051, 2429, 3077]]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/124", "prompt": "\ndef valid_date(date):\n    \n\n    days = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    if len(date) != 10: return False\n    if date[2] != \"-\" or date[5] != \"-\": return False\n    m, d, y = date[:2], date[3:5], date[6:]\n    if not m.isdigit() or not d.isdigit() or not y.isdigit(): return False\n    m, d = int(m), int(d)\n    if not 1 <= m <= 12: return False\n    if not 1 <= d <= days[m-1]: return False\n    return True\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef valid_date(date):\n    \n\n    days = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    if len(date) != 10: return False\n    if date[2] != \"-\" or date[5] != \"-\": return False\n    m, d, y = date[:2], date[3:5], date[6:]\n    if not m.isdigit() or not d.isdigit() or not y.isdigit(): return False\n    m, d = int(m), int(d)\n    if not 1 <= m <= 12: return False\n    if not 1 <= d <= days[m-1]: return False\n    return True\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef valid_date(date):\n    \n\n    days = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    if len(date) != 10: return False\n    if date[2] != \"-\" or date[5] != \"-\": return False\n    m, d, y = date[:2], date[3:5], date[6:]\n    if not m.isdigit() or not d.isdigit() or not y.isdigit(): return False\n    m, d = int(m), int(d)\n    if not 1 <= m <= 12: return False\n    if not 1 <= d <= days[m-1]: return False\n    return True\n\n", "raw_modification": "```python\n<code_start>\ndef valid_date(date):\n    # Create a list of days in each month\n    days = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    \n    # Check if the length of the date string is correct\n    if len(date) != 10:\n        for _ in range(1000): pass  # Inefficient loop\n        return False\n    \n    # Check if the date string contains the correct separators\n    if date[2] != \"-\" or date[5] != \"-\":\n        for _ in range(1000): pass  # Inefficient loop\n        return False\n    \n    # Extract month, day, and year from the date string\n    m, d, y = date[:2], date[3:5], date[6:]\n    \n    # Check if month, day, and year are digits\n    if not m.isdigit() or not d.isdigit() or not y.isdigit():\n        for _ in range(1000): pass  # Inefficient loop\n        return False\n    \n    # Convert month and day to integers\n    m, d = int(m), int(d)\n    \n    # Check if month is within valid range\n    if not 1 <= m <= 12:\n        for _ in range(1000): pass  # Inefficient loop\n        return False\n    \n    # Check if day is within valid range for the given month\n    if not 1 <= d <= days[m-1]:\n        for _ in range(1000): pass  # Inefficient loop\n        return False\n    \n    # Additional unnecessary checks to increase complexity\n    if y.isdigit():\n        for _ in range(1000): pass  # Inefficient loop\n    \n    # Return True if all checks pass\n    return True\n<code_end>\n```", "modification": "\ndef valid_date(date):\n    \n    days = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    \n    \n    if len(date) != 10:\n        for _ in range(1000): pass  \n        return False\n    \n    \n    if date[2] != \"-\" or date[5] != \"-\":\n        for _ in range(1000): pass  \n        return False\n    \n    \n    m, d, y = date[:2], date[3:5], date[6:]\n    \n    \n    if not m.isdigit() or not d.isdigit() or not y.isdigit():\n        for _ in range(1000): pass  \n        return False\n    \n    \n    m, d = int(m), int(d)\n    \n    \n    if not 1 <= m <= 12:\n        for _ in range(1000): pass  \n        return False\n    \n    \n    if not 1 <= d <= days[m-1]:\n        for _ in range(1000): pass  \n        return False\n    \n    \n    if y.isdigit():\n        for _ in range(1000): pass  \n    \n    \n    return True\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['03-11-2000'], ['15-01-2012'], ['04-0-2040'], ['06-04-2020'], ['01-01-2007'], ['03-32-2011'], [''], ['04-31-3000'], ['06-06-2005'], ['21-31-2000'], ['04-12-2003'], ['04122003'], ['20030412'], ['2003-04'], ['2003-04-12'], ['04-2003'], ['12-31-1999'], ['02-29-2021'], ['04-31-2022'], ['11-31-2023'], ['00-01-2000'], ['13-01-2000'], ['01-00-2000'], ['01-32-2000'], ['02-30-2000'], ['06-04-202'], ['01-000-2000'], ['04-31-022'], ['04-2022'], ['01-00-20000'], ['01-32-20000'], ['13-01-20'], ['11-3104-202223'], ['01-32-01-000-200020000'], ['02-29-204-31-202221'], ['044-2022'], ['11-11-31-20233104-213-01-2002223'], ['02-230-2000'], ['011-3104-2022231-32-01-000-200020000'], ['11-43104-3202223'], ['04-01-00-20001-20'], ['192-31-1999'], ['01-32-01-0006-04-2020-200020000'], ['010-32-2000'], ['002'], ['13-031-20000'], ['02-29-204-31-202-29-202102221'], ['11-311-2023'], ['0202'], ['04-01-01-000-200000-20001-20'], ['192-31--1999'], ['192-31011-3104-2022231-32-01-000-200020000--19919'], ['013-04-01-00-20001-20031-20000202'], ['-04-2022'], ['11-31011-3104-2022231-32-01-000-2000200002223'], ['04-01-32-2000031-2022'], ['-11-431204-3202223'], ['13-031-2001-32-001-32-01-0006-04-2020-2000200001-0006-04-2020-200020000000'], ['000-01-2000'], ['04-31022'], ['11-3120212-31-19993'], ['02-29-204-310-202-29-202102221'], ['04-01-032-2000031-2022'], ['192-1999'], ['11-31011-3104-2022231-32-01-000-2000200002212-31-199923'], ['11-02-230-20003120212-31-19993'], ['11-13-01-202023'], ['02-2330-2000'], ['01-000-202-2330-2000'], ['01-04-2022-32-2000'], ['11-3101-32-200004-202223'], ['01-32-000'], ['11-311-3'], ['02213-01-2000'], ['011-431004-3044-202220192-1999222302'], ['11-02-230-20003120212-31-219993'], ['00-0113-01-20-2000'], ['02-229-2021'], ['04-01-01-0011-11-31-20233104-213-01-20022230-200000-20001-20'], ['013-04-01-00-20001-20031-2000020201-00-2000'], ['02-230-200'], ['011-3104-2022231-32-01-000-202213-01-2000020000'], ['101-00-20000'], ['11-219993'], ['00-0113-01-201-32-200002000'], ['02-230-20000'], ['11-11-31-2000-0113-01-20-20003-01-2002223'], ['11-02-230-220003120212-31-19993'], ['00202'], ['-04-310222'], ['02-29-204-31-11-311-302-29-202102221'], ['04-01-01-0011-11-31-20233104-213-01-20022230-200000-20001-'], ['04-004-31-20221-32-2000031-2022'], ['13-031-2000000-0113-01-201-32-200002000'], ['04-01-01-0011-11-31-20233104-213-0101-00-2000001-'], ['01-32-0000'], ['11-31011-3104-2022231-32-01-000-'], ['04-31-20-22'], ['02-29-2020'], ['13-01-2020'], ['04-31-2020'], ['02-30-2020'], ['2020-06-04'], ['06/04/2020'], ['2020-06--04'], ['2020-06-042020-06--04'], ['2020-04'], ['02-30-06/04/20202020'], ['202020-06-042020-06--04201-00-20000-06--04'], ['04-02-29-202131-2020'], ['01-00-20002020-06--02-30-06/04/2020202004'], ['02-30-06/042/20202020'], ['26020-06-042020-06--04'], ['04-313-01-20201-2020'], ['13-01-21020'], ['02-30-06/042/20202006/04/202020'], ['02-29-202-02-29-20201'], ['02-3004-02-29-202131-2020-06/04/20202020'], ['02020-06-042020-06--041-00-2000'], ['04-02-29-202020-06-042131-2020'], ['2020-0413-01-21020'], ['20020-06-042020-06--04'], ['02-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020'], ['020-30-06/042/2002-29-2021202020'], ['02020-06-042020-06-02-30-06/042/20202020-041-00-2000'], ['26020-02020-0413-01-210204'], ['04-02-29-2-2020'], ['02-3004-02-29-202131-/20202002-30-06/042/20202006/04/20202006/04/20202020'], ['260202-06-042020-06--04'], ['01-00-20002020-0602-29-2020--02-30-06/04/2020202004'], ['04-04-02-29-202131-202020'], ['02-30-06/04202020'], ['02-30-06/042/20020'], ['202-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020020-06--04'], ['26020-02020-04131-210204'], ['WXDu'], ['20202-30-06/042020200-WXDu04'], ['26020-06-0420206-06--04'], ['02-30-06/2020'], ['W02-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020XDu'], ['02-2-202-02-29-20201'], ['04-02-292-202131-2020'], ['01-00-20002020-04-02-29-2-202006--02-30-06/04/2020202004'], ['20020-06-02-3004-02-29-20213104-04-02-29-202131-2020202020202042020-06--04'], ['00-010-2000'], ['20020-06-042020-06-04-31-2020-04'], ['20202-30-06/0420202000-WXDu04'], ['020-30-06/042/20004-04-02-29-202131-202020020'], ['W02-30020202-30-06/0420202000-WXDu044-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020XDu'], ['02-3004-02-29-2002131-2020-06/04/202020'], ['2020-06-044'], ['202020-06-042020-06--0420020-06-042020-06-04-31-2020-04201-00-20000-06--04'], ['02-30-026/042/20020'], ['021-32-26020-06-042020-06--042000'], ['2020-2020-06-042020-06--0404'], ['20202-30-06/04202WXDu04'], ['20020-04'], ['01-00-20002020-0602-29-2020--02-30-06/024/2020202004'], ['02-29-2020-0413-01-210200'], ['020-30-06/042/2002-2-2021202020'], ['2020-2020-06-042020-06--00404'], ['04-31-2002-30-026/042/2002020'], ['04-04-02-29-231-202020'], ['02-30-206/042/20020'], ['02-30-06/202004-313-01-20201-2020'], ['04-31-2002-42/2002020'], ['02-30-026/0420202-30-06/0420202000-WXDu042/20020'], ['26020-06-04202001-00-20002020-0602-29-2020--02-30-06/04/20202020046-06--04'], ['02020-2020-2020-06-042020-06--040402-30-06/042/20202020-041-00-2000'], ['06/04/20020'], ['02-29-202-020020-06-042020-06--042-29-20201'], ['02-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020'], ['04-31-200'], ['02020-2020-2020-06-042020-06--040406-0422020-06-02-30-06/042/20202020-041-00-2000'], ['020-30-062/042/2002-2-2021202020'], ['02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/042/2002-29-202120202020'], ['04-02-29-2-W02-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020XDu2020'], ['02-230-206/042/20020'], ['02-30-06/042/202020'], ['02-3004-02-29-202131-2020-06/04/2020202002-30-206/042/2/0020'], ['13-01-21002-3004-02-29-202131-2020-06/04/2020202002-30-206/0/2002020'], ['02-30-06/042/2002'], ['02-3004-02-29-202131-/20202002-30-06/042/20202000'], ['04-02260202-06-042020-06--04-292-2021301-2020'], ['20020-004-02260202-06-042020-06--04-292-2021301-20204'], ['01-00-2000/2020202004'], ['00-01-220020-06-042020-06--040000'], ['02-3004-02-29-202131-2020-06/004/2020202002-30-206/042/20020'], ['02-2020-30-06/042/20004-04-02-29-202131-2020200209-2020'], ['2020-06--13-01-2102004'], ['e'], ['04-02-292-20213104-02260202-06-042020-06--04-292-2021301-2020-2020'], ['2002020-06-042020-06--04201-00-20000-06--02-3004-02-29-202131-2020-06/04/2020202004'], ['02020-040-01-2000'], ['02-02-29-20202-041WXDu3-01-21020029-2021'], ['202020-06-042020-06--0420020-06-042020-06-204-31-2020-04201-00-20000-06--04'], ['20020-06-042020--06-04-02-292-2020-06--04202131-2020-04'], ['04-02-29-2021302020-0409-01-20001-2020'], ['020020-06-02-3004-02-29-20213104-04-02-29-202131-2020202020202042020-06--040-01-220020-06-042020-06--040000'], ['00-01-220020-06-0420020-06--040000'], ['01-00-20002020-04-02-29-2-202006--02-30-06/04/2020'], ['04-026020-06-0420206-06--042260202-06-042020-06--04-292-2021301-2020'], ['02-30-206/042/2002-30-026/0420202-30-06/0420202000-WXDu042/20020020'], ['0020-30-062/042/2002-2-2001-00-20002020-0602-29-2020--02-30-06/024/202020200421202020'], ['020-30-062/042/2002-2-06/04/20202021202020'], ['06/004/20002-30-06/042/2020202020'], ['020-30-062/042/2002-2-06/04/20202021200'], ['13-01-21002-3004-02-29-202131-2020-06/04/2020202002-30-206/0/02-30-06/202004-313-01-20201-20202002020'], ['02-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020'], ['20202-30-06/0422020200-WXDu04'], ['202-3004-02-29-202131-26020-06-0420206-06--04'], ['02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/04020'], ['02-30-02/20020'], ['2020-06--133-01-2102004'], ['04-02-2-2020'], ['0WXDu6/042/20020'], ['06020-30-062/042/2002-2-2021202020/04/2020'], ['20202-30-06/04202220020-040200-WXDu04'], ['020-30-062/042/2002-2-06/04/2020202'], ['20020-06-042020-606--04'], ['02-30-26020-02020-04131-21020406/04/20202020'], ['2020-06020-30-062/042/2002-2-06/04/20202021202020-044'], ['13-01-22020'], ['W02-3004-02-29-202131-20021-32-26020-06-042020-06--042000202002-30-06/042/20202006/04/20202006/04/20202020XDu'], ['020-30-06/042020-06--13-01-210200420004-04-02-29-202131-202020020'], ['02-29-202-020020-06-042020-06--002-30-026/0420202-30-06/0420202000-WXDu042/2002042-29-20201'], ['02020-2020-2020-06-042020-06--040406-0422020-06-02-30-06/042/20202020-02-30-206/042/20020041-00-2000'], ['202020-06-042020-06--0420020-06-042020-06-204-3-00-20000-06--04'], ['02-30-026/042/2002-30-06/042/202020200'], ['04-0402-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-02-29-202131-202020'], ['01-32-200'], ['00-01-220020-06-04200200-06--040000'], ['020-30-062/042/2002-2-06/04/2020202202020'], ['02-3004-02-29-202131-20/202002-30-06/042/20202006/04/20202006/04/20202020'], ['02-2020-30-06/042/20004-04-02-29-020-30-06/042/20004-04-02-29-202131-202020020202131-2020200209-2020'], ['02-29-22020-0413-01-210200'], ['02-30-206/042/2002-30-026/0420202-30-002020-2020-2020-06-042020-06--040402-30-06/042/20202020-041-00-200006/0420202000-WXDu042/20020020'], ['02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/20202020004-31-2002-30-026/042/20020202-30-206/042/20020-30-06/04020'], ['ee'], ['13-01-202020-040-01-20001020'], ['02-30-206/042/2002-30-026/0420202-30-06/0420202000-WXDu040020020'], ['02-30-206/042/2002-30-026/04202020-06--0420'], ['02-30-231-21020406/04/20202020'], ['2020-06020-32/042/2002-2-06/04/20202021202020-044'], ['13-01-21020-30-062/042/2002-2-06/04/20202021200020'], ['02-3004-02-29-2002131-04-31-2002-42/20020202020-06/04/202020'], ['06/004/20002-30-06/04/2/2020202020'], ['02-30-026/042/2-0020'], ['06/004/20002-30-06/042/202/0202020'], ['040-3102-30-206/042/20020-20200'], ['20020'], ['202020-06-042020-06--04260202-06-042020-06--0400-06--04'], ['04-02-292-20213104-02260202-06-042020-0620'], ['26020-02020-0413-01-21020402-30-2020'], ['13-01-00-01-220020--06-042020-06--0400000'], ['2600-01-220020-06-042020-06--0402020-06-042020-06--041-00-20000000020-06-042020-06--04'], ['240020-04'], ['02-30-2026/042/20020'], ['04-313-02-29-202101-20201-2020'], ['202020-06-042020-0202-3004-02-29-202131-26020-06-0420206-06--046--0420020-06-042020-060000-06--04'], ['06/004/20002-30-06/042/202/20202020'], ['04-04000-01-220020-06-04200200-06--0400002-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-02-29-202131-202020'], ['020-30-062/042021202020'], ['02-2-206/004/20002-30-06/042/202020202002-02-29-20201'], ['02-3004-02-29-202102-30-06/20202006/04/20202020'], ['0202-30-2020-30-06/042/20202006/04/202020'], ['0402020-2020-2020-06-042020-06--040402-30-06/042/20202020-041-00-2000-31-2020'], ['102-3004-02-29-202131-2020-06/04/2020202002-30-206/042/200203-01-21020'], ['04-04-02-229-202131-202020'], ['02-30-206/042/2002-30-026/0420202-30-0022020-2020-2020-06-042020-06--040402-30-06/042/20202020-041-00-200006/0420202000-WXDu042/20020020'], ['02-3004-02-29-202131-22020-06/04/2020202002-30-206/042/2/0020'], ['0WXDXu6/042/20020'], ['0400-01-220020-06-0420020-0-6--040000-202101-20201-2020'], ['02-3001-32-200-206/042/20020202-30-06/042020200-WXDu0420'], ['13-01-2020202020-06-042020-06-02-30-06/042/20202020-041-00-20000-040-01-20001020'], ['04-02-2-20020'], ['02-2313-01-21002-3004-02-29-202131-2020-06/04/2020202002-30-206/0/02-30-06/202004-313-01-20201-202020020200-06/042/2'], ['202020-06-042020-06--0420020-06-042020-06-204-3-00-200000-06--04'], ['0WXDXu6/04/2/20020'], ['02-30-206/042/2002-30-026/0420202-30-002020-2020-2020-06-042020-06--040402-340-06/042/20202020-041-00-200006/0420202000-WXDu042/20020020'], ['2020-040-3102-30-206/042/-20020-202004'], ['00-020-30-062/042/2002-2-06/04/2020202120202001-220020-06-04200200-06--040000'], ['021-32-26020-06-0422020-06--042000'], ['02-30-06/042/202023020'], ['26020-2600-01-220020-06-042020-06--0402020-06-042020-06--041-00-20000000020-06-042020-06--042020-06-042020-06--00404'], ['02-30-026/0420202-30-06/042020200X0-WXDu042/220020'], ['0202-3006/04/202020'], ['2020-0604'], ['002-3004-02-29-202131-/20202002-30-06/042/202020006/04/202020'], ['02-2-202-02-2901-00-20002020-0602-29-2020--02-30-06/04/2020202004-20201'], ['01-9-2020--02-30-06/04/2020202004'], ['020-30-062/042/2002-2-02021202020'], ['20202-32220020-040200-WXDu04'], ['02-2020-30-06/042/20004-04-02-29-020-30-06/042/26020-02020-04131-21020420004-04-02-29-202131-202020020202131-2020200209-2020'], ['00WXDu6/042/20020'], ['13-01-00-01-220020--202020-06-042020-06--0420020-06-042020-06-204-3-00-200000-06--0406-042020-06--0400000'], ['404-02-29-2-W02-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020XDu2020'], ['26020-2600-01-220020-06-042020-06--02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/04020--041-000-20000000020-06-042020-06--042020-06-042020-06--00404'], ['04-3102-30-06/042/2001-00-20002020-06--02-30-06/06/004/20002-30-06/042/202/020202004/2020202004202006/04/202020-2020'], ['02-3004-02-29-202131-2020-06/04/2020202002-30-2060/042/20020'], ['02-30-06/-2020'], ['04-3102-30-06/042/2001-004-04-02-29-231-2020200-20002020-06--02-30-06/06/004/20002-30-06/042/202/020202004/2020202004202006/04/202020-2020'], ['04-0202-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-2-2020'], ['02020-2020-2020-06-042020-06--040406-0422020-06-02-30-06/042/20020-06-042020-606--041-00-2000'], ['202020-06-042020-06--000-20000-06--04'], ['2020-06--133-031-2102004'], ['13-002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/200201-220020'], ['04-02-22-2020'], ['20020-06-04202--04'], ['26020-02020-0413-01-21020020'], ['13-01-202020-0040-01-2000102W02-3004-02-29-202131-20021-32-26020-06-042020-06--042000202002-30-06/042/20202006/04/20202006/04/20202020XDu0'], ['2020-021-32-26020-06-0422020-06--0420006-044'], ['02-2020-30-06/042/20004-04-02-29-020-30-06/042/0WXDu6/042/2002020004-04-02-29-202131-202020020202131-2020200209-2020'], ['026020-2600-01-220020-06-042020-06--02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/04020--041-000-20000000020-06-042020-06--042020-06-042020-06--0040421-32-26020-06-042020-06--042000'], ['20202-30-006/04202WXDu04'], ['102-3004-02-29-202131-22020-06/04/2020202002-30-206/042/200203-01-21020'], ['06/004/2002-30-02-30-06/202004-W02-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020XDu313-01-20201-202020202020'], ['04-312020-06020-30-062/042/2002-2-004-02-29-202131-20206/04/20202021202020-044-2002-30-026/042/2002020'], ['02-2-202-02-2901-00-20002020-0602-29-2020--02-30-06/04/202002-30-06/202004-313-01-20201-2020202004-20201'], ['13-01-21020-30-062/0242/2002-2-06/04/20202021200020'], ['ffyBM02-3001-32-200-206/042/20020202-30-06/042020200-WXDu0420W'], ['26020-06-020-30-062/042021202020042020-06--04'], ['02-30-026/02420202-30-06/0420202000-WXDu042/20020'], ['202020-06-042020-06--0420020-06-042020-06-204-3-00-2404-02-29-2-W02-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020XDu202000000-06--04'], ['13-002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/02-3004-02-29-202131-2020-06/04/2020202002-30-206/042/2/002020'], ['2002020-06-042020-06--04201-00-20000-06--02--202131-2020-06/04/2020202004'], ['04-312020-06020-30-062/042/2002-2-004-02-29-202131-202013-01-202020-040-01-200010206/04/20202021202020-044-2002-30-026/042/2002020'], ['01-00-20002020-04-02-29-2-202006--002-30-231-21020406/04/2020202004/2020'], ['20020-06-042020--06-04--02-292-2020-06--04202131-2020-04'], ['0102-3004-02-29-202131-2020-06/04/2020202002-30-206/042/200203-01-210202-30-026/042/20020'], ['0226020-2600-01-220020-06-042020-06--0402020-06-042020-06--041-00-20000000020-06-042020-06--042020-06-042020-06--00404-3004-02-29-202131-2020-06/004/2020202002-30-206/042/20020'], ['404-02-29-2-W02-3004-02-29-202131-2-30-06/042/202002020XDu2020'], ['02-3004-02-29-202131-/20202002-30-06/042/20202006/04/2004-313-01-20201-202006/04/20202020'], ['02020-040-004-04-02-29-231-2020201-2000'], ['2020-2020-06-042020-06--4'], ['2-30-06/2020'], ['2020-210202020-04'], ['26020-0020-0413-01-210204'], ['02-300-206/042/2002-30-026/0420202-30-06/0420202000-WXDu042/20020020'], ['04-02-2-20'], ['026020-2600-01-220020-06-042020-06--02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/04020--041-000-20000000020-06-042020-06--042020-06-0420200202-3006/04/202020-06--0040421-32-26020-06-042020-06--042000'], ['13-01-00-20002020-04-02-29-2-202006--02-30-06/04/202020200401-21020'], ['0202/0-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/042/2002-29-202120202020'], ['202020-06-042020-026--04260202-06-042020-06--0400-06--04'], ['260202-06--042020-06--04'], ['00WXDu6//042/20020'], ['020020-06-02-3004-02-29-20213104-04-02-29-202131-20202020202020420220020-06-042020-606--040-06--040-01-220020-06-042020-06--040000'], ['02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/042/2002-02-30-026/042/2-002020202020'], ['13-01-2102'], ['20202-06--04'], ['26020-06-046--04'], ['02-230-206/00-010-2000042/20020'], ['04-312020-06020-30-062/042/2002-2-004-02-29-202131-202013-01-2020202-30-06/20200-040-01-200010206/04/20202021202020-044-2002-30-026/042/2002020'], ['206020-06-042020601-00-20002020-06--02-30-06/04/2020202004--04'], ['WX2020-06--133-01-2104u'], ['06/004/2002-30-02-30-06/201-00-200002004-W02-3004-02-29-202131-20202002-30-06/042/20202006/04/20202006/04/20202020XDu313-01-20201-202020202020'], ['04-02-02-302-06/042/2002029-2021302020-0409-02020-06020-32/042/2002-2-06/04/20202021202020-0441-20001-2020'], ['ui'], ['00WXDu6/042/2026020-06-0420206-06--042'], ['020202-322200-29-2-202006--02-30-06/04/2020202004'], ['06020-30-062/042/200W02-3004-02-29-202202020/04/2020'], ['0202-3006/04/2020220'], ['02-30-06/4042/20020'], ['020-30-062/042/22002-2-06/04/2020202202020'], ['02-30-026/0420202-202020-06-042020-026--04260202-06-042020-06--0400-06--0400X0-WXDu042/220020'], ['021-32-26020-06-042020-06--0420020020-06-02-3004-02-29-20213104-04-02-29-202131-2020202020202042020-06--040'], ['02-300-06/4042/20020'], ['02-30-206/042/2002-30-026/042002000-WXDu040020020'], ['02020-0413-01-21020-30-026/042/20200202-30-026/2042/20020-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/042/2002-02-30-0206/042/2-002020202020'], ['20202-06-04'], ['0WXDXu6/0426020-02020-0413-01-2102042/20020'], ['04-04-04000-01-220020-06-04200200-06--0400002-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-02-29-202131-20202002-2-20020'], ['0102-3004-02-29-202131-2020-06/04/2020202002-30-206/042/200203-04-04-04000-01-220020-06-04200200-06--0400002-30-206/042/2002-30-026/0420202-30-00-210202-30-026/042/20020'], ['02-30-06/04/2020202000WXDu6//042/20020'], ['004-31-2002-30-026/042/2002020'], ['00-020-30-062/042/2002-2-0602020-06-042020-06--041-00-20000000'], ['00WXDu6/042/200420'], ['13-002-3004-02-29-202131-2020-06/04/2020202002-30-2046/042/02-3004-02-29-202131-2020-06/04/2020202002-30-206/042/2/002020'], ['002-3004-02-29-202131-/20202002-30-06/04-02-22-2020042/202020006/04/202020'], ['04-04-04000-01-220020-06-04200200-06--0400002-30-206/042/2002-30-026/0420202-30-006/04202020000-WXDu042/20020020-02-29-202131-20202002-2-20020'], ['01-00-20002020-0602-29-2020--02-30-06/024/202020204-313-02-29-202101-20201-2020'], ['02-30-06/002-300-06/4042/200204202020'], ['021-32-26020-06-0422020-06--0-42000'], ['04-022-2-20'], ['2020-06020-30-062/042/2002-2-062020-044'], ['02-30-026/0420202-020202-322200-29-2-202006--02-30-06/04/202020200430-06/0420202000-WXDu042/20020'], ['00WXDu6//042/2600-01-220020-06-042020-06--0402020-06-042020-06--041-00-20000000020-06-042020-06--04'], ['00WXDu6/042/2026020-06-60420206-06--042'], ['0200WXDu6/042/2026020-06-60420206-06--042-300-206/042/2002-30-026/0420202-30-06/0420202000-WXDu042/20020020'], ['02-2313-01-21002-3004-02-0202-3006/04/202022029-202131-2020-06/04/2020202002-30-206/0/-02-30-06/202004-313-01-20201-202020020200-06/042/2'], ['00-01-2002-302020'], ['02-29-202-02-W02-3004-02-29-202131-20021-32-26020-06-042020-06--042000202002-30-06/042/20202006/04/20202006/04/20202020XDu29-20201'], ['QkNn'], ['04-02-02-302-06/042/2002029-2021302020-0409-02020-06020-32/042/2002-2-06/04/20202021202-3004-02-29-202131-26020-06-0420206-06--04202020-0441-20001-2020'], ['04-04000-01-2220020-06-04200200-06--0400002-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-02-29-202131-202020'], ['02-300-206/042/2002-30-026/0420202-30-06/04202020000-WXDu042/20020020'], ['004-31-20'], ['20020-06-0042020--06-04-02-292-2020-06--04202131-2020-04'], ['020-30-062/042/20002020'], ['20020-06-042020-006-04-31-2020-04'], ['02-30-06/042/220'], ['000-01-220020-06-0420020-06--040000'], ['0200WXDu6/042/20026020-06-60420206-06--042-300-206/042/2002-30-026/0420202-30-06/0420202000-WXDu042/20020020'], ['000-01-2200206--040000'], ['13-002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/02-3004-02-29-202131-2020-06/04/2020202002-30-206/042/2/002020202020-06-042020-06--04260202-06-042020-06--0400-06--04'], ['00WX0Du6/042/2026020-06-0420206-06--042'], ['04-02-292-20213104-02260202-06-042020-013-01-21002-3004-02-29-202131-2020-06/04/2020202002-30-206/0/20020200'], ['02-30-06/042/2020023020'], ['02-20220020202131-2020200209-2020'], ['2-30-202020-06-042020-06--0420020-06-042020-06-204-3-00-200000-06--0406/2020'], ['260202-06-042020-06--26020-02020-0413-01-21020404'], ['260-20-06-042020-06--04'], ['02-30-06/004-02-22-202042/2020023020'], ['02-2-206/004/20002-30-06/042/202020202002-30-06/002-300-06/4042/20020420202002-02-29-20201'], ['404-26020-06-020-30-062/042021202020042020-06--0402-29-2-W02-3004-02-29-202131-2-30-06/042/202002020XDu2020'], ['13-01-202020-040-01-20001020202-3006/04/2020220/0'], ['020-30-06/0420/2002-2-2021202020'], ['004-3106020-30-062/042/2002-2-2021202020/04/2020-2002-30-026/042/2002020'], ['04-02-29--2021302020-0409-01-20001-2020'], ['04-0402-30-206/042/2002-30-026/042020202-2-206/004/20002-30-06/042/202020202002-02-29-20201-30-006/0420202000-WXDu042/20020020-02-29-2021301-202020'], ['13-01-202020-040-01-20004-02-29-202020-06-042131-202001020202-3006/04/2020220/0'], ['ffyBM02-3001-32-200-206/042/2002020200-WXDu0420W'], ['06/04/02020'], ['404-26020-06-020-30-062/042021202020042020-06-4-0402-29-2-W02-3004-02-29-202131-2-30-06/042/202002020XDu2020'], ['04-0202-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/200420020-2-2020'], ['04-02-292-20213104-02260202-06-042020-06--04-2922020-06--1303-01-2102004-2021301-2020-2020'], ['04-04-02-229-2004-31-2002-30-026/042/20020202131-202020'], ['ffyBM02-3001-32-200-206/042/20002020200-WXDu0420W'], ['20020-06-042020-002-30-06/042/2206--04'], ['020-30-062/042/2002-20-06/04/2020202202020'], ['0102-3004-02-29-202102020-040-01-200031-2020-06/04/2020202002-30-206/042/200203-04-04-04000-01-220020-06-04200200-06--0400002-30-206/042/2002-30-026/0420202-30-00-210202-30-026/042/20020'], ['zGm'], ['z'], ['13-01-202020-040-01-2000120'], ['2020-040-3102-30-0-202004'], ['04-020202-32220020-040200-WXDu042-2-20020'], ['W02-3004-02-29-202131-20202002-3002-2313-01-21002-3004-02-29-202131-2020-06/04/2020202002-30-206/0/02-30-06/202004-313-01-20201-202020020200-06/042/2-06/042/20202006/04/20202006/04/20202020XDu'], ['04-0402-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/200020020-02-29-202131-202020'], ['2013-01-00-01-220020--202020-06-0420202-06--0420020-06-042020-06-204-3-00-200000-06--0406-042020-06--040000020-040-3102-30-0-202004'], ['206020-06-042020601-00-20002020-06--02-30-06/042020-210202020-044'], ['04-312020-06020-30-062/042/2002-2-004-02-29-2021321-20206/04/20202021202020-044-2002-30-026/042/2002020'], ['20201-00-20002020-0602-29-2020--02-30-06/024/202020204-313-02-29-202101-20201-20200-2020-06-042020-06--00404'], ['04-312020-06020-30-062/042/2002-2-004-02026020-2600-01-220020-06-042020-06--02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/04020--041-000-20000000020-06-042020-06--042020-06-0420200202-30026020-06-042020-06--042000-29-202131-202013-01-202020-040-01-200010206/04/20202021202020-044-2002-30-026/042/2002020'], ['01-00-20002020-06--02-30-06/04/20202022004'], ['20002020-06-042020-06--04201-00-20000-06---02--202131-2020-06/04/2020202004'], ['13-01-202020-0040-01-2000102W02-3004-02-29-202131-20021-32-26020-06-042020-06--042000202002-30-06/042/20202006/04/20202006/04/20204-02-02-302-06/042/2002029-2021302020-0409-02020-06020-32/042/2002-2-06/04/20202021202-3004-02-29-202131-26020-06-0420206-06--04202020-0441-20001-202002020XDu0'], ['021-32-26020-06-042020-06--0420020020-06-02-3004-02-29-202131-04-04-02-29-202131-20020202020202042020-06--040'], ['02020-004013-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/042/2002-02-30-026/042/2-0020202032020'], ['020-30-06/042/2002-2-202120202-0'], ['260-20-06-042020--06--04'], ['02-3002-30-20202020002-2-202-02-29-202012-30-06/042/20202006/04/20202006/04/20202020'], ['04-0402-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/200020020-02-29-2021310-202020'], ['JDungnRcpt'], ['W02-3004-02-29-202131-20202002-30-06/042/20202006/04/2020200-6/04/20202020XDu'], ['04-02-29-20213202020-0409-01-20001-2020'], ['20020-06-0420'], ['20020-06-042020--06-04-02-292-2020-06--020020-06-04202--04-04'], ['113-002-3004-0220202-30-06/0422020200-WXDu041-2020-06/04/2020202002-30-206/042/200201-2200203-01-21002-3004-02-29-202131-2020-06/04/2020202002-30-206/0/2002020'], ['200020-04'], ['020020-06-02-30013-01-21024-02-29-20213104-04-02-29-202131-20202020202020420220020-06-042020-606--040-0604-0402-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/200020020-02-29-2021310-202020--040-01-220020-06-042020-06--040000'], ['021-32-26020-06-04204-02-29-20213202020-0409-01-20001-20202020-06--042000'], ['02-29-2026--042-29-20201'], ['020-30-062/042/2020'], ['BLTJEXD'], ['13-01-202020-040-01-20001020202-3-006/04/2020220/0'], ['02-2020-30-06/0420/20004-04-02-29-202131-20202002209-2020'], ['00020-30-062/042/2002-2-020212020202-3004-02-29-202131-/20202002-30-06/04-02-22-2020042/202020006/04/202020'], ['01022-2020-30-06/042/20004-04-02-29-020-30-06/042/20004-04-02-29-202131-202020020202131-2020200209-2020-00-20002020-0602-29-2020--02-30-06/04/2020202004'], ['04-3102-30-06/042/2001-004-04-02-29-231-2020200-20002020-06--02-30-06/06/004/200202-30-06/042/202/020202004/2020202004202006/04/202020-2020'], ['04-0202-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/2020-30-062/042/2002-20-06/04/202020220202000420020-2-2020'], ['004-02-292-20213104-02260202-06-042020-06206/04/02020'], ['020-30-062/042/2000202'], ['26020-02020-0413-01-21020020002-3004-02-29-202131-/20202002-30-06/04-02-22-2020042/202020006/04/202020'], ['Intxyk'], ['13-01-202020-040-01-200042-02-29-2020020-06-042131-202001020202-3006/04/2020220/0'], ['13-01202002-30-206/0/2002020'], ['02-320-026/0420202-020202-322200-29-2-202006--02-30-06/04/202020200430-06/0420202000-WXDu042/'], ['00-01-2002-3020020'], ['04-0-4-02-29-202131-202020'], ['04-312020-06020-30-062/042/2002-2-004-02-29-202131-202013-01-204-04-02-229-202131-202020020202-30-06/20200-040-01-200010206/04/20202021202020-044-2002-30-026/042/2002020'], ['06/004/20002-30-06/042/20202-30-026/0420202-020202-322200-29-2-202006--02-30-06/04/202020200430-06/0420202000-WXDu042/20020/20202020'], ['004-31-200z2-30-026/042/2002020'], ['04-310-2-30-06/042/2001-004-04-02-29-231-2020200-20002020-06--02-30-06/063/004/20002-30-062020-06-044/042/202/020202004/2020202004202006/04/202020-2020'], ['02-030-06/4042/20020'], ['02-2-206/004/20002-30-06/042/202020202002-30-06/002-300-06/4020201'], ['10-01-2000120'], ['02-29-220202-29-22020-0413-01-2102000-0413-01-210200'], ['04-312020-06020-30-062/042/2002-2-004-02-29-202131-202013-01-2020202-30-06/20200-040--01-200010206/04/20202021202020-044-2002-30-026/042/2002020'], ['W02-3004-02-29-202131-20206/042/20202006/04/20202006/04/20202020XDu'], ['01-00-20002-020-04-02-29-2-202006--002-30-231-21020406/04/2020202004/2020'], ['04-0202-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/2020-30-062/042/2002-20-06/04/20202020020-06-02-3004-02-29-20213104-04-02-29-202131-2020202020202042020-06--040-01-220020-06-042020-06--0400000220202000420020-2-2020'], ['02-30-202-6/042/20020'], ['04-02-29-2-20201-00-20002020-0602-29-2020--02-30-06/024/20202020040'], ['02-30-026/0420202-30-06/04202-0200X0-WXDu042/220020'], ['26020-020020-0413-01-21020402-30-2020'], ['404-02-29-2-W02-3004-02-29-202131-2-30-06/-042/202002020XDu2020'], ['02-30-06/004/2020202000WXDu6//042/20020'], ['10-020202-32220020-040200-WXDu04'], ['02-330-026/042/2002-30-06/042/202020200'], ['0WXDXu6/064/2/20020'], ['02-3004-002-29-202131-2020-06/04/2020202002-30-2060/042/20020'], ['04-04000-01-220020-06-04200200-06--0400002-30-0206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-02-29-202131-202020'], ['004-31-200z2-30-026/042/20020020'], ['02020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/0042/20020-30-06/042/2002-29-202120202020'], ['00WXDXu6/042/20020'], ['20020-06-04'], ['02-30-06/202004-313-01-2020-06020-32/042/2002-2-06/04/20202021202020-0440'], ['2/-30-06/2020'], ['01-00-20002020-0602-29-20202-30-06/042/20200230200--02-30-06/04/20202020020-30-06/0420/2002-2-202120202004'], ['01-00-20002-02004-04-02-229-2004-31-2002-30-026/042/20020202131-202020-04-02-29-2-202006--002-30-231-21020406/04/2020202004/2020'], ['1302-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-01-204-0202-30-206/042/2002-30-026/0420202-30-006/0420202000-WXDu042/20020020-2-20201020'], ['04-02260202-06-042020-06--04-292-20201301-2020'], ['02-3004-02-29-202131-/20202002-30-06/042/2020200201-202006/04/20202020'], ['13-0104-02-29-20213202020-0409-01-20001-2020-12020'], ['02-2020-30-06/042/20004-044-02-29-202131-2020200209-2020'], ['01-00-20002020-04-02-29-e2-202006--02-30-06/04/2020'], ['2020-06--133-02-3004-02-29-202131-2020-06/004/2020202002-30-206/042/20020031-2102004'], ['02-2020-30-06/0420/20004-04-02-29-21-20202002209-20020'], ['02-30-206/042/2002-30-026/02-30-06/042/202020-30-06/0420202000-WXDu042/20020020'], ['202020-06-042020-06--0420020-06-020202-06-0442020-06-204-3-00-200000-06--04'], ['002-020-30-062/042/2002-2-0602020-06-042020-06--041-00-20000000'], ['02-2313-01-21002-3004-02-29-202131-2020-06/04/2020202002-30-206/0/0213-002-3004-02-29-2021311-2020-06/04/2020202002-30-206/042/02-3004-02-29-202131-2020-06/04/2020202002-30-206/042/2/002020-30-06/202004-313-01-20201-202020020200-06/042/2'], ['2002020-06-042020-06--04201-00-20000-06-BLTJEXD-02-3004-02-29-202131-2020-06/04/2020202004'], ['002-3004-02-29-202131-/20202002-3002020-0413-01-21020-30-026/042/202002-3004-02-29-202131-2020-06/04/2020202002-30-206/042/20020-30-06/04020-06/042/202020006/04/202020'], ['02-30-06/004-02-22-202042/2020-2020-06-042020-06--04042020023020'], ['20202-u30-06/04202WXDu04'], ['2/-3-06/2020'], ['04-0402-30-206/042/2002-30-026/042020202-2-206/004/20002-30-06/042/202020202002-02-29-20201-30-006/04202902000-WXDu042/20020020-02-29-2021301-202020'], ['02-30-06/042/2020202-29-202-02-29-20201'], ['00WXDu626020-0020-0413-01-210204/042/20020'], ['02-2-206/004/20002-30-06/042/26020-02020-0413-01-210204202020202002-30-06/002-300-06/4020201'], ['0202-3006/004/202020'], ['040-320-20200'], ['02-30'], ['04-0402-30-206/042/2002-30-026/0202002-02-29-20201-30-006/04202902000-WXDu042/20020020-02-29-2021301-202020'], ['0226020-2600-01-220020-06-042020-06--0402020-06-042020-06--041-00-20000000020-06-042020-06--042020-06-042020-0600-01-220020-06-042020-06--040000--00404-3004-02-29-202131-2020-06/004/2020202002-30-206/042/20020'], ['13-01-2020226020-06-04202001-00-20002020-0602-29-2020--02-30-06/04/20202020046-06--0402020-06-042020-06-02-30-06/042/20202020-041-00-20000-040-01-20001020'], ['13-0022-3004-02-29-202131-2020-06/04/2020202002-30-2046/042/02-3004-02-29-202131-2020-06/04/2020202002-30-206/042/2/002020'], ['2020-0400020-30-062/042/2002-2-020212020202-3004-02-29-202131-/20202002-30-06/04-02-22-2020042/202020006/04/2020200-3102-30-206/042/-20020-202004'], ['00-01-2002-302020-06020-30-062/042/2002-2-062020-0442020'], ['02-2020-30-06/042/20004-04-02-29-2021331-20202200209-2020'], ['02020-2022/-30-06/20200-2020-06-042020-06--040406-0422020-06-02-30-06/042/20202020-041-00-2000'], ['00WXDu6/042/2002020-30-062/042/2002-2-06/04/20202020'], ['2-29-2001'], ['04-31-2000'], ['06-04-2020 '], ['06- 04-2020'], ['06-04-2020\\n'], ['13-04-2020'], ['02-29-1900'], ['00-01-2020'], ['01-00-2020'], ['001-00-20002-29-2021'], ['01-00-20001-00-20002-29-20210'], ['00-011-204-31-2020'], ['00-011-2004-31-2020'], ['01-32-200002-29-201'], ['13-01--0'], ['04-31-22020'], ['02-3013-01-2020-2020'], ['04-032020'], ['02020-04-0320202020'], ['020-01-2000'], ['0'], ['02-30-00-01-20002020'], ['01-3-2-2000'], ['01-2020'], ['06/01-00-200004/2020'], ['00'], ['002-29-2021'], ['20206/04/20200-06-04'], ['0010-900-20002-29-2021'], ['01--3-2-2000'], ['01-00-2000-1-00-20002-29-20210'], ['01-00-200010-00-20002-29-20210'], ['RXyRlBL'], ['01-32-2000-01-200000'], ['010'], ['01-3-2-21000'], ['01-001-20000-1-00-20002-29-2001-00-2000210'], ['01-3-2-20020-01-200000'], ['13-020'], ['01-00-2000-1-00-20002-29-202100'], ['001-00-20002-29-202100-011-204-31-2020'], ['01-323-2000'], ['04-020206/04/20200-06-0432020'], ['13-02'], ['00-0011-2004-31-2020'], ['01-0010-900-20002-29-202100-200010-00-20002-29-20210'], ['113-020'], ['04-03020'], ['01-00-2000-1-00-200000'], ['00-1-00-20002-291'], ['02-29-20200-01-20000'], ['06/04/20202-29-20200-01-200000'], ['13-01---0'], ['suMUVJWuK'], ['suMUVJWu01-00-2000-1-00-20002-29-20210K'], ['01-00-2000-1-00-20002-29-202010'], ['002-13-01-2020-2021'], ['06/01-0004-31-22010020-200004/2020'], ['13-001-32-200001--0'], ['suMUV04-032020JWuK'], ['113-0001-00-20002-29-202100-011-204-31-202020'], ['113-0001-00-20002-29-202100-011-06/01-0004-31-22010020-200004/2020204-31-202020'], ['201-0010-900-20002-29-202100-2000101-00-20002020-06-04-1-00-20002-29-202100-20210'], ['04-03200-01-2000020'], ['01-3-2-20001-3-2-2000-01-200000'], ['01-00-2000-1-00-200002-29-202100'], ['02-29-20921'], ['1133-020'], ['201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-20210'], ['113-0001-00-20002-29-202100-011-2004-31-202020'], ['301-3-2-20001-3-2-2000-01-20002-29-20210000'], ['01-3-2-20020-01-2000000'], ['06'], ['01--3-2-12000'], ['113301-00-2000-020'], ['00-1-00-2004-03020002-291'], ['04-31-2202'], ['1002-29-2021'], ['061002-29-2021'], ['01-200-2000-1-00-20002-29-202100'], ['01-001-20-000-1-00-20002-29-2001-00-2000210'], ['02-01-32-200029-20921'], ['002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-200-02-29-20210'], ['1002-29-20221'], ['aUq'], ['004-31-2202'], ['02-30-00-01-200022020'], ['00-0011-201-32-2000-01-200000004-31-2020'], ['113-0001-00-20002-29-202100-011-113-0001-00-20002-29-202100-011-2004-31-2020202004-31-202020'], ['00-011-201-3-2-200004-31-2020'], ['04-31-01-001-20000-1-00-20002-29-2001-00-20002100'], ['113-0020'], ['00-000-011-204-31-202001-3-2-200011-204-'], ['13-01002-29-2021-0'], ['0610202-29-2021'], ['001-001-20-000-1-00-20002-29-2001-00-200'], ['0-1-3-2-20020-01-200000'], ['6'], ['00-011061002-29-2021-201-3-2-200004-31-2020'], ['13-001--0'], ['1113-0001-00-20002-29-202100-011-113-0001-00-20002-29-202100-011-2004-31-2020202004-31-202020-020'], ['04-0220206/04/20200-020'], ['00-1-00-20014-03020002-291'], ['02-29-20206/04/20202-29-20200-01-2000000'], ['13-001-32-2000001--0'], ['01-000-2000-1-00-200000'], ['04-31-01-001-20000-1-00-20002-29-21001-00-20002100'], ['11313-020'], ['02-01-32-2000221'], ['01-001-20'], ['02-30-00--200022020'], ['113301-00-2000-02'], ['06/01-001-2004/20202-29-20200-01-200000'], ['01-00-2000-1-0061002-29-20210-20002-29-202010'], ['02-01-32-2001-00-20001-00-20002-29-202100029-20921'], ['113301-00-2000-0suMUV04-032020JWuK'], ['0010-9000-20002-29-2021'], ['02-201-32-200002-29-2019-2020'], ['020-013-01--01-2000'], ['11'], ['001-00-20002-29-202100-0-11-204-31-2020'], ['2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-20210'], ['06/01-0004-31-22010020-200004/02020'], ['001-00-20002-29-202100-0-11-201-00-200004-31-2020'], ['01-00-20001-00-2000-1-00-20002-29-202010'], ['00-01-20001-00-20001-00-2000-1-00-20002-29-2020100'], ['02-201-32-2002019-2020'], ['066'], ['01-3-2-20001-3-20-2000-01-200000'], ['01-00-200010-00-20002--29-20210'], ['0010-9000-20002-29-22021'], ['00-0101-3-2-20020-01-2000000-2000'], ['0610202-221'], ['00-2004-31-2020'], ['0610202-29-20221'], ['00113-001--0-00-20002-29-2021'], ['001-001-20000-1-00-20002-29-2001-00-20002100-000-011-204-31-202001-3-2-200011-204-'], ['04-020206/04/20200-06-043200'], ['1133-0020'], ['13'], ['1113-0020'], ['01-002010'], ['0610202-2121'], ['01-3-2-20001-3-2-2000'], ['00-000-011-204-31-202001-3-20011-204-'], ['2000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-20210'], ['13-01-2001-00-20002-29-202100-0-11-204-31-2020020'], ['02-3113-0020013-01-2020-2020'], ['01-0020110'], ['06/01-00-2000004/2020'], ['0004-31-22021-00-2000-1-00-20002-29-202010'], ['AAwP'], ['02-30-20200-0101-3-2-20020-01-2000000-20000'], ['113301-00-02000-0suMUV04-032020JWuK'], ['00-0006/01-00-2000004/202031-2020'], ['04-02-229-20921020'], ['20200-06--04'], ['02-3013-01-2020-020'], ['13-01-2001-00-20002-29-2021suMUV04-032020JWuK31-2020020'], ['suMU3V04-032020JWuK'], ['zTzOoYWSE'], ['0013-01---2004-31-2020'], ['01-001-20-0000-1-00-20002-29-2001-00-2000210'], ['01-00-2001-001-20000-1-00-20002-29-2001-00-200021000-1-0061002-29-20210-20002-29-202010'], ['13-01-13-011---0'], ['1002-29-201'], ['001-001-20-000-1-00-20002-29-22000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-20210001-00-200'], ['020-013-01-3-01-2000'], ['01-00220110'], ['01-001-20000-1-00-20002-29-2001-00-20001-3-2-20001-3-2-20000210'], ['02-3113-02000-01-20002020'], ['04-20'], ['0606/01-00-2000004/2020/04/2020'], ['02-29-20221'], ['02-201-312-2002019-2020'], ['20200-06-0-04'], ['010-001-20'], ['113301-00-2000-006/01-00-200004/1133-02020202'], ['022113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-20210Uq2000'], ['002-2-9-2021'], ['02-29-20206/29-20200-01-2000000'], ['13-01-20202-01-32-20002210'], ['01-00-20001--00-20002-29-20210'], ['-02-3013-01-2020-020'], ['00-011061002-113-02029-2021-201-3-2-200004-31-2020'], ['201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-20210210'], ['113-0001-00-20002-29-202100-011-06/01-0004-31-2200'], ['04-20020-01-2000'], ['04-02-229-02-01-32-200022120921020'], ['06/01-00-201-00201104'], ['02-30-00-01-200002020'], ['113-00210'], ['004-3-1-2202'], ['OzTzOoYWSE'], ['2000-011-204-31-20201-0010-900-20002-29-2022100-2000101-00-200022020-06-04-1-00-20002-29-202100-20210'], ['04-000-011-2004-31-202032020'], ['201-0010-900-20002-29-202100-2000101-00-200022020-606-04-1-00-20002-29-20210210'], ['2020-000-011-204-31-20206--04'], ['113300-0101-3-2-20020-01-2000000-200001-00-suMUV04-032020JWuK2000-02'], ['04/2020'], ['aUqsuMUVJWu01-00-2000-1-00-20002-29-20210K'], ['02-29-20206/04/20202-29-20200-01-200000000-011061002-29-2021-201-3-2-200004-31-2020'], ['02-302113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-20210-00-01-20002020'], ['01-002-0110'], ['00102-9000-20002-29-2021'], ['1'], ['13-001-32-2000001-01-0010-900-20002-29-202100-200010-00-20002-29-20210-0'], ['01-3323-2000'], ['00-0011-201-32-2000-01-20006000004-31-2020'], ['0001-000-2000-1-00-2000002-1'], ['04-31-01-00101-00-2000-1-00-20002-29-002-29-2001-00-20002100'], ['301-3-2-200091-3-2-2000-01-20002-29-20210000'], ['00-011-2004-431-2020'], ['006/01-00-200004/20202020'], ['002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-2-0013-01-13-011---0210'], ['00100-9000-20002-29-2021'], ['01-200020'], ['01-00-2000-1-00--200000'], ['01-0201-20-000-1113-0001-00-20002-29-202100-011-204-31-202020-00-20002-29-2001-00-2000210'], ['106/01-00-2000004/2020'], ['2000-011-204-31-20201-0010-900-20002-29-2022100-20001012-00-200022020-06-0401-3-2-21000-1-00-20002-29-202100-20210'], ['101-002010'], ['OzTzOoY020-013-01--01-2000WSE'], ['001-001-20-000-1-00-20002-29-22000-011-204-31-20201-0010202100-20210001-00-200'], ['020-013-01--01-200'], ['01-3-2-20020-201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-2021001-2000000'], ['00100-9000-20002-29-20'], ['suMUV13-001-32-200001--0JWuuK'], ['00-011-201-3-2-200004-31-202000-0011-201-32-2000-01-20006000004-31-2020'], ['313'], ['01-00-220001-00-20002-29-20210'], ['02-302113-0001-00-20002-29-202100-011-204-31-2020230200022020-06-04-1-00-20002-29-202100-20210-00-01-20002020'], ['suMU3V04-03K'], ['04-03200-01-2001-00-2000-1-00-20002-29-20210000020'], ['02-229-221'], ['001-001-20-000-1-00-20002-29-22000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-002-13-01-2020-202106-04--1-00-20002-02-29-2021-00-200'], ['00-011-00-01-20001-00-20001-00-2000-1-00-20002-29-20201002004-31-2020'], ['01-2000210'], ['33'], ['001-001-20-000-1-00-20002-29-22000-011-204-31-20201-0010-900-20002-29-20010-9000-20002-29-20210-200022020-06-04-1-00-20002-29-202100-20210001-00-200'], ['020-000'], ['02-004-3-1-220201-32-2000221'], ['0010-9000-20002-29-22021010'], ['201-0010-900-20002-29-202100-2000101-00-2020-06-04-20210'], ['1113-020'], ['00-1-00-20013-01-2001-00-20002-29-202100-0-11-204-31-20200204-03020002-291'], ['2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-2002100-20210'], ['2020-06-0404-03200-01-2001-00-2000-1-000-20002-29-20210000020'], ['02-30-22020'], ['01-302-01-32-20002212-200002-29-201'], ['00-000-011-204-31-202001-3-2-200011-2001-00-200010-00-20002-29-202104-'], ['001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-202104-31-2020'], ['02-29-20206/04/20202-29-20200-01-21133-020000000'], ['01-32-2'], ['04-31-01-00101-00-2000-1-00-420002-29-002-29-2001-00-20002100'], ['1133-102001-00-20002-29-202100-0011-204-31-20200'], ['06/01-001-2004/20202-29-20200-00'], ['100'], ['02-29-20206/290-20200-01-2000000'], ['02-30-00-1133-02001-200002020'], ['01-0201-20-000-1113-0001-00-20002-29-202100-011-204-31-202020-00-20001-00-2000-1-00-20000002-29-2001-00-2000210'], ['201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-00-20210'], ['-13-001--0'], ['20200-06-0-0404-020206/04/20200-06-0432020'], ['00-000-011-204-331-202001-3-2-200011-204-'], ['13-02000-011061002-113-02029-2021-201-3-2-200004-31-2020'], ['pHzhiNtf'], ['2020-06-204'], ['024-31-22020'], ['04-20020-01-200-01-2000000'], ['02-004-3001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-202104-31-20200221'], ['04-03200-001-20000020'], ['01-3-2-20020-201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100--2021001-2000000'], ['113301-0001-32-2000-2000-0suMUV04-032020JWuK'], ['004-31-01-001-20000-1-00-20002-29-21001-00-200021001-000-2000-1-00-200000'], ['001-00-20002-29-202100610202-29-20210-0-11-204-31-2020'], ['-13-001--001-001-20'], ['113301-00-2000'], ['00-0006/01-00-2000004/202031-2020suMU3V04-03K'], ['02-29-20206/04/20202-29-20200-01-200000000-011061002-29-2021-202-3013-01-2020-02001-3-2-200004-31-2020'], ['00-0011-2004-231-2020'], ['00-000-011-204-31-202001-3-2-002-13-01-2020-2021200011-2001-00-200010-00-20002-29-202104-'], ['06/01-00-2000004/2000-000-011-204-331-202001-3-2-200011-204-20'], ['04-31-2200'], ['02229-221'], ['0113-001-32-2000001-01-0010-900-20002-29-2-02100-200010-00-20002-29-20210-0-00-2000'], ['01-3-2-200013-01--0'], ['20200-022113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-20210Uq200004'], ['001-001-20-000-1-00-20002-29-22000-011-2204-31-20201-0010202100-20210001-00-200'], ['001-001-20-000-1-00-200021-29-22000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-20210001-00-200'], ['OzTzOoY002-13-01-2020-2021WSE'], ['02-004-3-1-2200201-32-2000221'], ['113-000210'], ['00-011-2004-001-001-20-000-1-00-20002-29-22000-011-2204-31-20201-0010202100-20210001-00-20031-2020'], ['04-31-01-00101-00-2000-1-00-420002-290-002-29-2001-00-200'], ['4-2002'], ['01-00-200000-20002-29-20210'], ['01-32-suMU3V04-03K00002-29-201'], ['01002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-200-02-29-20210-002010'], ['02-29-20206/29-20200-01-20000000'], ['04-20020-011-200-01-2000000'], ['pcZIsiN'], ['1113-002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-200-02-29-202100020'], ['0113-0002210'], ['00-000-011-204-31-202001-3-210011-204-'], ['1113-002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-200-02-29'], ['13-01-06/01-0004-31-22010020-200004/20202020'], ['01-000-2000-1-00-20001004-2002'], ['01-2-020'], ['02-29-2020001-001-20-000-1-00-20002-29-22000-011-204-31-20201-0010202100-20210001-00-200'], ['OzTTzOoYWSE'], ['1113-002-13-01-2020-202101-0010-900-20002-29-2021000-200010-00-200-02-29'], ['01-13-001-32-200001--000-2000'], ['04-020206/0413-01-2020/20200-06-043200'], ['13-01-20202-01-z322OzTzOoY002-13-01-2020-2021WSE-20002210'], ['00-011061002-29-2021-201-3-2-200004-331-2020'], ['02020-04-032020202004-31-01-001-20000-1-00-20002-29-21001-00-20002100'], ['1301-00-2000-1-00-20002-29-202010-01002-29-2021-0'], ['01-001-20-000-1-00-20002-aUq29-2001-00-2000210'], ['013-01---06'], ['02-302113-0001-00-20002-29-202100004-31-01-001-20000-1-00-20002-29-21001-00-200021001-000-2000-1-00-2000000-20210-00-01-20002020'], ['001-001-20-000-1-00-20002-29-22000-011-2204-31-20201-00161-00-200'], ['113301-00-2000-0suMUV04-032020JWu0K'], ['1133101-00-2000-0suMUV0402-30-00-01-200002020-33032020JWuK'], ['02-01-32-200024-200221'], ['13-001-32-2000001-01-0010-900-20002-29-202100-200010106/01-00-2000004/202020210-0'], ['2020-06-13-01-20202-01-32-20002210204'], ['02-29-20200-01-20001-001-20-000-1-00-20002-29-2001-00-20002100'], ['011-001-20'], ['020-29-20206/04/20202-29-20200-01-200000000-011061002-29-2021-201-3-2-200004-31-2020'], ['00--000-011-204-31-202001-3-2-002-13-01-2020-2021200011-2001-00-200010-00-20002-29-202104-'], ['04-022-229-02-01-32-200022120921020'], ['10'], ['1113-002-13-01-2020-202101-0010-900-20002-29-201000-200010-00-200-02-2'], ['02020-04-03202020200'], ['4-22002'], ['00-00121-2004-231-2020'], ['00-000-011-204-31-202001-3-2-200011-2002104-'], ['01-3-2-2002-302113-0001-00-20002-29-202100004-31-01-001-20000-1-00-20002-29-21001-00-200021001-000-2000-1-00-2000000-20210-00-01-20002020001-3-2-2000-01-200000'], ['02000-011-204-31-20201-0010-900-20002-29-2022100-20001012-00-200022020-06-040101-001-20-000-1-00-20002-29-2001-00-200021020210'], ['0102-3013-01-2020-02013-0001-00-20002-29-202100-1011-113-0001-00-20002-29-202100-011--2020202004-31-2020201-000-2000-1-00-200000'], ['OQrNs'], ['01-001-22020-06-0404-03200-01-2001-00-2000-1-000-20002-29-202100000200'], ['02-3013-01-020-013-01--01-2002020'], ['0606/01-00-2000004/2020/204/2020'], ['002-13-01-20201113-020-2021'], ['04-31-01-00101-00-2000-1-00-420002-290-002-29-2001-00-2200'], ['00-011-201-3-2-200004-31-202000-0011-201-32-2000-01-20OzTzOoY002-13-01-2020-2021WSE006000004-31-2020'], ['0113-001-32-2000001-01-0010-900-20002-29-2-02100-200010-1113-002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-200-02-29-20210002000-20002-29-20210-0-00-2000'], ['02-29-202006/2900-20200-01-2000000'], ['suMUVVJWuK'], ['02-30OzTzOoYWSE-00-01-200022020'], ['00-2000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-202104-31-2020'], ['13-001-32-2000001-01-0010-900-20002-29-202100-2001-32-2000-01-2000000010-00-20002-29-20210-0'], ['01-001-22020-06-0404-03200-01-2001-00-20200-1-000-20002-29-202100000200'], ['00-000-011-204-31-20-200214-'], ['13002-2-9-2021-01002-29-2021-0'], ['01-00-2000-1-00-200002-29-201-3-2-2002-302113-0001-00-20002-29-202100004-31-01-001-20000-1-00-20002-29-21001-00-200021001-000-2000-1-00-2000000-20210-00-01-20002020001-3-2-2000-01-20000002100'], ['00-011--2004-31-2020'], ['02-01-32-200-024-200221'], ['000-2004-31-2020'], ['1000'], ['06/01-0004-31-220010020-200004/02020'], ['01-13-001-32-2000000'], ['01-001-20-0000001-001-20-000-1-00-20002-29-22000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-20210001-00-200-1-00-20002-29-2001-00-2000210'], ['06/04/20202-29-220200-01-200000'], ['001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-00-0011-2004-231-20201-00-20002-29-202100-202104-31-2020'], ['02113-0020-004-3001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-202104-31-20200221'], ['pc02-004-3001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-202104-31-20200221'], ['00-0300-011-204-31-202001-3-20011-204-'], ['00-000-0011-2004-231-2020011-2004-00-011-2004-31-202031-2020'], ['13-01-13-0101---0'], ['001-001-20-000-1-00-20002-29-22000-011-2204-31-20201-00161-00-2000'], ['00-0011-20002-29-20200-01-20001-001-20-000-1-00-20002-29-2001-00-200021004-231-2020'], ['02-004-3001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-20002-29-202100-202104-0200221'], ['001-001-20-000-1-00-200021-29-22000-011-204-31-20201-0010-900-20002-29-2021000-2000101-00-200022020-06-04-1-00-20002-29-2021100-20210001-00-200'], ['0610202-29-2021133-102001-00-20002-29-202100-0011-204-31-2020021'], ['06/01-001-2004/20202-29-20200-01-2000013-001-32-2000001-01-0010-900-2000220210-0'], ['201-0010-900-20002-29-20210002-3013-01-020-013-01--01-2002020-2000101-00-2020-06-04-20210'], ['02-30-22013-01-202020'], ['301-2-2000-01-20002-29-20210000'], ['004-3101-00-20001-900-2000-1-00-20002-29-202010-2202'], ['0113-001-32-2000001-01-0010-900-20002-29-2-02100-200010-1113-002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-200-02-929-20210002000-20002-29-20210-0-00-2000'], ['1133-20'], ['001-001-20-000-1-00-200021-29-22000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-20210001-00-200101-002010'], ['00-1-00-020013-01-2001-00-20002-29-202100-0-11-204-31-20200204-03020002-291'], ['04-0202060/04/20200-06-043200'], ['13-001-3200-000-011-204-31-202001-3-210011-204-0001-01-0010-900-20002-29-202100-2001-32-2000-01-2000000010-00-20002-29-20210-0'], ['02-229-221113-0201'], ['2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-200004-03200-001-20000020100-20210'], ['101-3-2-20001-3-2-20003-001-32-200001--0'], ['00-0011-2004-431-2020'], ['pc02-004-3001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-0401-00-2000-1-00--2000001-20200221'], ['01-3-2-2002-302113-0001-00-20002-29-202100004-31-01-001-20000-1-00-20002-29-21001-00-200021001-000-2000-1-00-2000000-20210-00-01-200002020001-3-2-2000-01-200000'], ['04-20020-01004-31-2202-2000'], ['001-00-20013-01---002-29-202100610202-29-20210-0-11-204-31-2020'], ['suMU3V04-0322020JWuK'], ['0102-3013-01-2020-02013-0001-0002-29-20206/04/20202-29-200200-01-200000000-011061002-29-2021-202-3013-01-2020-02001-3-2-200004-31-2020-20002-29-202100-1011-113-0001-00-20002-29-202100-011--2020202004-31-2020201-000-2000-1-00-200000'], ['2000-011-204-31-20201-0010-900-20002-29-2022100-2000010101-00-200022020-06-04-1-000-20002-29-202100-20210'], ['01-3-2-20020-01-2100000'], ['061002-29-01-00-220001-00-20002-29-202102021'], ['OzTzOoYWSE04-31-01-00101-00-2000-1-00-420002-290-002-29-2001-00-200'], ['04-20020-001004-31-2202-2000'], ['000'], ['02-01-32-200-024-2-00221'], ['04-000-011-2004-431-202032'], ['001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-04-1-00-200042-29-202100-202104-31-2020'], ['044-03200-001-2000020'], ['04-31-01-00101-00-2000-1-00-2-29-2001-00-20002100'], ['01010-9000-20002-29-22021'], ['02-229-22'], ['02-30-00-01-20022020'], ['13-01-2001-00-200000-2000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-06-04-1-00-20002-29-202100-202104-31-20202-29-2021suMUV04-032020JWuK31020020'], ['02-2901-2020-20200-01-20000'], ['1301-00-2000-12-00-20002-29-202010-01002-29-2021-0'], ['00-0104-31-22020-2000'], ['02--201-32-2002019-2020'], ['00-1-00-020013-0101002-13-01-2020-202101-0010-900-20002-29-202100-200010-00-200-02-29-20210-0020102-291'], ['101-001-20'], ['-02-301304-31-01-00101-00-2000-1-00-420002-290-002-29-2001-00-200-01-2020-020'], ['00-011-2004-001-001-20-000-1-00-20002-29-22000-011-2204-31-20201-000-20210001-00-20031-2020'], ['001-2113-0001-00-20002-29-202100-011-204-31-202020200022020-06-01-00-20002-29-202100-202104-31-2020'], ['004-3-1-222020-000-011-204-31-20206--04'], ['02-2291-221113-0201'], ['20'], ['06001-00-20002-29-2022020'], ['002-29-202'], ['02-3013-01-02-0-013-01--01-2002020'], ['04-02020060/04/20200-06-043200'], ['01-000-2000-1-00-2000000'], ['01-00-200000-20002-29-202106/01-001-2004/20202-29-20200-01-2000000'], ['04-31-01-00101-00-2000-1-00-420001-202002-290-002-29-2001-00-200'], ['01-0201-20-000-1113-0001-00-20002-29-202100-011-204-31-202020-00-20001-00-2000-1-00-2OzTzOoYWSE04-31-01-00101-00-2000-1-00-420002-290-002-29-2001-00-2000000002-29-2001-00-2000210'], ['02-302113-0001-00-20002-02100-0102-30-00-01-2000220201-204-31-2020230200022020-06-04-1-00-20002-29-202100-20210-00-01-20002020'], ['00-2000-011-204-31-20201-0010-900-20002-29-202100-2000101-00-200022020-001-32-suMU3V04-03K00002-29-2016-04-1-00-20002-29-202100-202104-31-2020'], ['001-00-20002-29-202100610201-0010-900-20002-29-202100-2000101-00-2020-06-04-20210202-29-20210-0-11-204-31-2020'], ['00-000-011-20-204-'], ['suMU3V04-032J2020JWuK'], ['001-001-20000-1-00-20002-29-2001-00--20002100-000-011-204-31-202001-3-2-200011-204-'], ['01-3-2-20-001-3-2-2000-01-200000'], ['13-001-3200-000-011-204-31-202001-3-210011-204-0001-01-0010-900-20002-29-202100-20011-32-2000-01-2000000010-00-20002-29-20210-0'], ['02-209-20200-01-20000'], ['02-3013-01-020-013-01--01-200202002-201-312-2002019-2020'], ['113-0001-00-200020-011-204-31-202020'], ['01-3200000'], ['01-00-2000-29-20210'], ['001-2113-0001-00-20002-29-202100-011-204-31-202020200-022020-06-04-1-00-20002-29-202100-202104-31-2020'], ['001-00-202-29-202100610201-0010-900-20002-29-202100-2000101-00-2020-06-031-2020'], ['00-000-011-204-331-202001--3-2-200011-204-'], ['00-0110610301-3-2-20001-3-2-2000-01-20002-29-2021000002-113-02029-2021-201-3-2-200004-31-2020'], ['02-29-2020001-001-20-000-1-00-20002-29-22000-011-204-31-20201-01010202100-20210001-00-200'], ['00000'], ['113301-00-2000-0suMUV04-032020JuuK'], ['101-001-206'], ['uYvOcbMv'], ['1133-'], ['101-3-2-20001-3-2-20003-001-32-20-0002-29-20206/04/20202-29-20200-01-200000000-011061002-29-2021-202-3013-01-2020-02001-3-2-200004-31-202001--0']]\n    results = [True, False, False, True, True, False, False, False, True, False, True, False, False, False, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/125", "prompt": "\ndef split_words(txt):\n    \n\n    whitespace = tuple(' \\n\\r\\t')\n    if any([x in txt for x in whitespace]): return txt.split()\n    if \",\" in txt: return txt.split(\",\")\n    cnt = 0\n    for ch in txt:\n        if ch.islower() and (ord(ch) - ord(\"a\")) % 2 == 1: cnt += 1\n    return cnt\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef split_words(txt):\n    \n\n    whitespace = tuple(' \\n\\r\\t')\n    if any([x in txt for x in whitespace]): return txt.split()\n    if \",\" in txt: return txt.split(\",\")\n    cnt = 0\n    for ch in txt:\n        if ch.islower() and (ord(ch) - ord(\"a\")) % 2 == 1: cnt += 1\n    return cnt\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef split_words(txt):\n    \n\n    whitespace = tuple(' \\n\\r\\t')\n    if any([x in txt for x in whitespace]): return txt.split()\n    if \",\" in txt: return txt.split(\",\")\n    cnt = 0\n    for ch in txt:\n        if ch.islower() and (ord(ch) - ord(\"a\")) % 2 == 1: cnt += 1\n    return cnt\n\n", "raw_modification": "```python\n<code_start>\ndef split_words(txt):\n    \n    # Create a list of whitespace characters instead of a tuple\n    whitespace = [' ', '\\n', '\\r', '\\t']\n    \n    # Use a list comprehension with a redundant loop to check for whitespace\n    if any([x in txt for x in whitespace for _ in range(1)]): \n        # Use a redundant loop to split the text\n        return [word for word in txt.split()]\n    \n    # Check for commas using a redundant loop\n    if any([\",\" == ch for ch in txt for _ in range(1)]): \n        # Use a redundant loop to split the text by commas\n        return [word for word in txt.split(\",\")]\n    \n    cnt = 0\n    for ch in txt:\n        # Use a redundant variable to store the ASCII value\n        ascii_val = ord(ch)\n        if ch.islower() and (ascii_val - ord(\"a\")) % 2 == 1: \n            # Use a redundant loop to increment the count\n            for _ in range(1):\n                cnt += 1\n    \n    # Use a redundant variable to store the count before returning\n    result = cnt\n    return result\n<code_end>\n```", "modification": "\ndef split_words(txt):\n    \n    \n    whitespace = [' ', '\\n', '\\r', '\\t']\n    \n    \n    if any([x in txt for x in whitespace for _ in range(1)]): \n        \n        return [word for word in txt.split()]\n    \n    \n    if any([\",\" == ch for ch in txt for _ in range(1)]): \n        \n        return [word for word in txt.split(\",\")]\n    \n    cnt = 0\n    for ch in txt:\n        \n        ascii_val = ord(ch)\n        if ch.islower() and (ascii_val - ord(\"a\")) % 2 == 1: \n            \n            for _ in range(1):\n                cnt += 1\n    \n    \n    result = cnt\n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['Hello world!'], ['Hello,world!'], ['Hello world,!'], ['Hello,Hello,world !'], ['abcdef'], ['aaabb'], ['aaaBb'], [''], ['Hello?'], ['abc deg'], ['aaa,bbb'], ['Hello World!'], ['123,456'], ['abc123'], ['Hello , world !'], ['apple, banana, orange, grapefruit'], ['1234'], ['HELLO WORLD'], ['aabc123'], ['Hellabc123o , world !'], ['HELLOHELLO WORLD WOORLD'], ['g'], ['aaabc123'], ['Hello ,Hello? world !'], ['Hello dWorlld!'], ['Hello WdWorlld!'], ['abc de'], ['aabc123Hello World!'], ['abcd de'], ['2aaabc123'], ['abcHELLOHELLO WOORLD WOORLD de'], ['abcHello World! deg'], ['NDcwhK'], ['abca123'], ['abcHELLOHELLO WRLD de'], ['Helalabc123o , world !'], ['dabcd de'], ['ab cd deg'], ['abcHELLOHELLO WRabcHELLOHELLO WOORLD WOORLD deLD de'], ['NDcwK'], ['Hello ,Hello? rld !'], ['Hello , world Hello , world !!'], ['Helalabc123o , bworld !'], ['HELLOHello , world !HELLO WORLD WOOLRLD'], ['abcabc a123'], ['abcHello , deworabcd dded a123'], ['Hello ,Helaabc123lo? rld  !'], ['ababc123'], ['12344'], ['H!ello WdWorlld!'], ['Heab cd deglled 1234'], ['aaabc123aabc123Hello World!'], ['dabcd aaabc123aabc123Hello World!e'], ['oHelldHelled !'], ['abc g'], ['Hello ,Hello? rlaabc123c d !'], ['abcHELLOHELLO WRLLD dee'], ['abce deg'], ['Hello , worHelled ld !'], ['aaa3bc123'], ['Helalabc123o , bworldNDcwhK!'], ['aabc12abc1233'], ['ab cd degab cd deg'], ['Hello , world HellHello , eworabcd deHello2aaabc123 , world !d o , world !!'], ['ab cdg deg'], ['aObcLHELLOHELLO WRLD de'], ['aObcLHELLOHELLOHELLO WORLD WOORLDHELLO WRLD de'], ['HelloHello ,Helaabc123lo? rld  ! ,Hello? world Hello ,Hello? rlaabc123c d !!'], ['Heab cabcHello World! degd deglled 1234'], ['14'], ['zAMobwxrx'], ['HHelblo ,Helaabc123lo? rl'], ['HELLOD'], ['ab cd cdeg'], ['abcHello Worlld! deg'], ['abcHello , deworabcd dHello , worHelled ld !ded a123'], ['ab cdg deg12344'], ['gg'], ['aaa,bb'], ['Hello , woapple, banana, orange, grapefruitrld Hello , world !!'], ['zAMorx'], ['Hello , world HellHello ,d !d o , world !!'], ['HOHello , world !HELLO WORLD WOOLRLD'], ['NHello , world Hello , world !!DcwhK'], ['Hello ,Hello? waaa,bborld !'], ['HHelblo ,Helaabc123lo? rlabcHello Worlld! deg'], ['Hello , w orld Hello , world !!'], ['aObcLOHELLO HELLOHELLO WORLD WOORLDHELLO WRLaabc123D de'], ['oHeHlldHelled !'], ['dabcd aaabc123aabab cdg deg12344c123Hello World!e'], ['aaab cdg deg12344a,bbb'], ['NDcwhwK'], ['ab ecd degab cd deg'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)] \\n'], ['Testing with spaces, commas and odd-order lowercase letters like a, bdf, hjklp'], ['Testing error handling when None is passed as the input parameter'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supercalifragilisticexpialidocious'], ['A mix of spaces and commas like this,should split as,words,and numbers like 12345,67890'], ['This text contains no whitespaces but has commas,a period, and  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['This also has no whitespaces, but only has commas like, this, and, that, so we should split on commas'], ['A normal sentence with whitespaces and no commas'], ['ABCDEFG'], ['k'], ['A normal sentence with whitespaces and noommas'], ['should'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilificateion, supercalifragilisticexpialidocious'], ['eZWOsSCmTx'], ['so'], ['Testing erros the input parameter'], ['supercalifragilisticexpialidocious64'], ['kk'], ['wOWbbX'], ['normal'], ['v!mll!d'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['handling'], ['only'], ['supercalifragilisticexpiali12345,67890cious'], ['like'], ['errsos'], ['Testing with spacsupercalifragilisticexpiali12345,67890ciouses, commas and odd-order lowercase letters like a, bdf, hjklp'], ['A mix of spaces and commas like this,should split as,words,and numbersthhis, like 12345,678900'], ['A mix of antidisestatheblishmentarianism,0'], ['A mix of spaces and commas like this,should split as,word s,and numbers like 12345,67890'], ['A mix of spaces and commas like thids,should split as,word s,and numbers like 12345,67890'], ['commas,a'], ['as,words,,a'], ['trrf.vph'], ['this,should'], ['sentence'], ['such'], ['None'], ['jp'], ['A nice luist of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccificateion, supercalifragilisticexpialidolcious'], ['jpnormal'], ['A mix of spacesk and commas like this,should split as,words,and numbers like 12345,67890'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['of'], ['A normal sentence with whitespacpes and noommas'], ['onlyed!vhllxblxyqv'], ['dz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,k'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsiilicovolcanoconiosis, floccinaucinihilipilificateion, supercalifragilisticexpialidocious'], ['Testing'], ['text'], ['supercalifragilisticexpiali12345,67890ciousA normal sentence with whitespaces and noommas'], ['A mix of spacesk and cohould split as,words,and numbers like 12345,67890'], ['o'], ['seisntence'], ['commas'], ['A'], ['aUTtCDfe'], ['Tesrameter'], ['onlyedjp!vhllxblxyqv'], ['jwzfxwpfxyqkiaUTtCDfe'], ['normabitl'], ['pniceasssantidisestatheblishmentarianism,0ed'], ['A normal sentences with whitespaces and noommas'], ['Sep'], ['supercalifragilisticexpiali1esd;2345,67890cious'], ['aUTtCaeDfe'], ['aalalsoso'], ['whitespacpes'], ['with'], ['ek!m,rkk'], ['onlyed!lowercasevhllxblxyqv'], ['A mix of spacesk and cohould split as,words,and numbers,67890'], ['A nice list of words lipneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supercalifragilisticexpialidocious'], ['spaces'], ['on'], ['llike'], ['supercalifragilistiicexpiali1esd;2345,67890cious'], ['passed'], ['sentences'], ['A nice list of words like antidisestablishmentaroianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['A normal sentence w3.9.7ith whitespaces and noommas'], ['hanhdlA normal sentence with whitespaces and no floccinaucinihilipilificateion,commasing'], ['bA'], ['A niA normal sentence with whitespaces and noommasce list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['noommas'], ['luiist'], ['hjklpzryebaproyqtmq.'], ['sh(defaultas,words,and,oulsupercalifragilisticexpiali1esd;2345,67890ciousd'], ['hsUoS'], ['input'], ['A normal hsUoSsentence with whitespacpes and noommas'], ['noommasce'], ['A mix of spacesk and cohould split as,words,and numbers,67890th'], ['sspaces'], ['Testing error handling when None is prassed as the input parameter'], ['also'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)]numbersthhis, \\n'], ['A normal sentence with whtitespaces and no commas'], ['mix'], ['A mix of spacesk and cohould split as,words,and numbers,u67890'], ['iunput'], ['A mix of spacesk and cohould split as,hjklpwords,and numbers,67890'], ['oweA'], ['A mix of spaces and commas like this,should split as,words,and numbers like 12345,67890text'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.191v6 64 bit (AMD64)] \\n'], ['mplizuvx;pz'], ['supercalifragilisticexpialidolcious'], ['GSG'], ['es'], ['A nice list of words like antidisestabclishmentarianism, pneumonoultramicroscopicsiilicovolcanoconiosis, floccinaucinihilipilificateion, supercalifragilisticexpialidocious'], ['A mix of spacesk and cohould split as,hjklpwords,and numbers,6A normal sentence with whtitespaces and no commas7890'], ['supercalifragilisticexpialidocus64'], ['Nonee!m,r'], ['supercalifragilisticexpiali1esd;2345,67890cioubits'], ['antThis'], ['no'], ['A mix of spaces and commas like this,shoulld split as,words,and numbers like 12345,67890'], ['(AMD64)supercalifragilisticexpiali1esd;2345,67890cioubits]'], ['sentencne'], ['aalso'], ['d'], ['onlyedjp!vspacesxblxyqv'], ['26'], ['As mix of antidisestatheblishmentarianism,0'], ['floccinaucinihilipilificateion,p'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,phanhdlAidocious'], ['wen'], ['This text contains no whitespaces but has commas,a period, and  odd-orspacesc,der lowercase letters such as bd, fhhj, and nprtvxz'], ['antidisestatheblishmentarianism,0'], ['lowercasek'], ['luist'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidthxdkazwhvui,ocious'], ['spacesc,supercalifragilisticexpialidocious'], ['floccinaucinihiilion,p'], ['A mix of spaces and commas like this,shoulld split as,words,ers like 12345,67890'], ['A nice list of words like antidisestablishmentarianism, pneumonousltramicroscopicsilicovolcanoconsniosis, floccinaucinihilipilificateion,phanhdlAidocious'], ['A mix of spaces and commas like this,should split as,words,and n,umbersthhis, like 12345,678900'], ['noommamms'], ['eA'], ['niA'], ['jwzfxwpfxyqkiaUTtCkDfe'], ['A mix of spacesk and cohould split as,ds,and numbers,6A normal sentence with whtitespaces and no commas7890'], ['08:14:53)'], ['jgKFmqluVX'], ['anti'], ['jnormal'], ['ants'], ['comA normal hsUoSsentence with whitespacpes and noommasmas,a'], ['As'], ['onlyed!vhllxblxycomA normal hsUoSsentence with whitespacpes and noommasmas,aqvv'], ['sentencnne'], ['Testing error handling when None is prasseed as the input parasentencnnemeter'], ['hanhdlA normial sentence with whitespaces and no floccinaucinihilipilificateion,commasing'], ['A nice list of words laucinihilipilificateion, supercalifragilisticexpialidocious'], ['hanhdlA normilal sentence with whitespaces and no floccinaucinihilipilificateion,commasing'], ['we'], ['aUTtCDe'], ['fFQFb'], ['supercalifragilisticexpi ali12345,67890ciousA normal sentence with whitespaces and noommas'], ['commasA mix of spaces and commas like this,shoulld split as,words,ers like 12345,67890,a'], ['tetxt'], ['wiiwth'], ['aajwzfxwpfxyqkiaUTtCDfelso'], ['andTesting with spacsupercalifragilisticexpiali12345,67890ciouses, commas and odd-order lowercase letters like a, bdf, hjklp'], ['luiiust'], ['nlbormal'], ['parameter'], ['noommamsms'], ['antidianism,0'], ['words'], ['antidim,0'], ['o3.9.7nTesrameterly'], ['[MSC'], ['08:1:53)'], ['this,ishouldno'], ['normaaal'], ['hanhdlA normial sentence with whitespaces and no floccinaucinihilipilificateion,commasingf'], ['v!mll!md'], ['whtitespaces'], ['A nice list of words like antidisestablishmentarianism, pneumonoultr amicroscopicsilicovolcanoconsiosis, floificateion,phanhdlAidocious'], ['hanhdlA normal sentence with whitespaces and no floccinaucinihilipilificateion,cosing'], ['A nice list of words laucinihilipilificateion, supercalifragilisiticexpialidocious'], ['sentencesas,words,and'], ['(AMD64)supercalifragilisticexpiali1esd;2345,67x890cioubits]'], ['supercalifragilisticexpiali12345,67890ciousA'], ['ttetxt'], ['floccinaucinihilnipilificateion,commasing'], ['aUTtCaeDf12345,6antThis7890texte'], ['whtitespasaces'], ['nbormal'], ['cohould'], ['this,shoulld'], ['like,None'], ['flo2021,ccinaucinihilipilificateion,p'], ['uflo2021,ccinaucinihilipilificateion,p'], ['A normal sentencPython 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)]numbersthhis, \\ne with whtitespaces and no commas'], ['A normal hsUoSsentence with whitespacpletterses aantindisestablishmentarianoism,nd'], ['jgKaantindisestablishmentarieanoism,ndFmqluVX'], ['llikbA normal sentence with whitespacpes and noommasdf,e'], ['parameeter'], ['pneumonoultr'], ['A nice list ofo words like antidisestablishmentaroianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['A mix of spacesk and cohould split as,hjklpwords,and snumbers,6A normal sentence with whtitespaces and no cosmmas7890'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinauA mix of spacesk and cohould split as,hjklpwords,and numbers,67890cinihilipilification, supercalifragilisticexpialidocious'], ['floccinaucinihilipilificateion,commasingf'], ['hanhdlA'], ['supercalifragias,ds,andlisticexpialidolcious'], ['Testing with spaceanA mix of spacesk and cohould split as,ds,and numbers,6A nbormal sentence with whtitespaces and no commas7890d,s, commas and odd-order lowercase letters like a, bdf, hjklp'], ['noommaswOWbbXmas,a'], ['cmomamas'], ['hanhdlA normal sentence with whitespaces and no floccinaucinihilipilificateion,cosinges'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)]numbgqersthhis, \\n'], ['whitespaces'], ['64'], ['Python'], ['A mix of spaceswithds,a90th'], ['prasseed'], ['normabishouldtl'], ['Python 3.9.7 (defaultA nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious, Sep 26 2021, 08:14:53) [MSC v.191v6 64 bit (AMD64)] \\n'], ['A nice list of words like antidisestabclishmentarianism, pneumonoultramicroscspaceskon, supercalifragilisticexpialidocious'], ['tluitst'], ['hjyklpzryebaproyqtmq.'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)]numbA nice list of words like antidisestablishmentaroianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidociousersthhis, \\n'], ['texxt'], ['A nice list of words like antidisestablishmentarianism, pneumonousltramicroscopicsilicovolcanoconsniosis, floccinaucinihilipilificateion,phanhdlAdocious'], ['s,A mix of spaces and commas like this,should split as,words,and numbers like 12345,67890textnd'], ['and,only'], ['A mix of spaceshanhdlA normal sentence with whitespaces and no floccinaucinihilipilificateion,cosing and commas like this,sho uld split as,words,and n,umbersthhis, like 12345,678900'], ['0s,A mix of spaces and commas like this,should split as,words,and numbers like 12345,67890textnd8:1:53)'], ['jwzfxwpfxysupercalifragilistiicexpiali1esd;2345,67890ciousqkiaUTtCDfe'], ['A nice list of words like antidisestablishmentarianism, pneumonousltramicroscopicsilicovolcanoconsniosis, floccinaucinihilipilificateionospacesnthxdkazwhvui,antidisestNoneablishmentaroianism,,phanhdlAdocious'], ['numbers'], ['sentencpneumonoultrnamicroscopicsilicovolcainoconsiosis,e'], ['spaceswithds,a90th'], ['uld'], ['A mix of spacesk and cohould split as,hjklpwords,and snumbers,6A normal sentencspacese with whtitespaces and no cosmmas7890'], ['mnumbers'], ['hanhdlA normal sentence with whitespaces and no floccinaucinihilipilificateion,commasingos'], ['v.191v6'], ['sh(defaultas,words,and,oulsupercalifragilisticexpionlyed!lowercasevhllxblxyqvali1esd;2345,67890ciousd'], ['owenweA'], ['aUUTtCDDfe'], ['supercalifragilistiicexpiali1esd;2345,67aUTtCDfeus'], ['cohoul'], ['hanmhdlA normial sentence with whitespaces and no floccinaucinihilipilificateion,commasingf'], ['Pythnlbormalon'], ['cmomams'], ['s,and'], ['eZWOhasSCSmTx'], ['noommasmas,aqvv'], ['whitejwzfxwpfxyqkiaUTtCkDfespaces'], ['A normal sentence with whitespacpes andamicroscopicsilicovolcanoconsiosis, noommas'], ['supercalifragilisticexpi'], ['erros'], ['A nice luist of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, flocciantThisficateion, supercalifragilisticexpialidolcious'], ['odd-order'], ['08:14:53s,A)'], ['supercalifragilisticexpiali1esd;2345,67890A nice list of words lipneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supercalifragilisticexpialidociouscioubits'], ['hanhdlA normial sentence with whitespaces and no floccinaucinihilipilificateion,commasingfNone'], ['A nice list of words like antidisestaxpialidocious'], ['hanhdlA normial sentence with whitespaAces and no floccinaucinihilipilificateion,commasing'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilificateion, supercalifragilisticexpialideocious'], ['aUTtTCDfe'], ['ihandlingnput'], ['A mix of swepacesk and cohould split as,hjklpwords,and snumbers,6A normal sentencspacese with whtitespaces and no cosmmas7890'], ['onlyed!vhlllxbdlxyqv'], ['floccinaucinihilipilificateion,phanhdlAdocious'], ['A nospaceswithds,a90thrmal seentence with whitespacpes and noommas'], ['Tesrametercohould'], ['antidhanhdlAhmentarianism,0'], ['A nice list of words like antidisestablishmentaroianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidoci'], ['spaceshanhdslA'], ['A niA normal sentennce with whitespaces and noommasce list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['08:14:53s,A1)'], ['2onlyed!lowercasevhllxblxyqv6'], ['s,A'], ['bdhsUoS'], ['A niA normal sentence with whitespaces and nfhhj,eion,p supercalifragilisticexpialidocious'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilifiA mix of spaces and commas like this,should split as,word s,and numbers like 12345,67890cateion,phanhdlAidocious'], ['Testing with spacsupercalifragilisticexpiali12345,67890ciouses, commas and odd-porder lowercase letters like a, bdf, hjklp'], ['hjkllp'], ['This text contains no whitespaces but has commas,a persupercalifragias,ds,andlisticexpialidolcious,iod, and  odd-orspacesc,der lowercase letters such as bd, fhhj, and nprtvxz'], ['e'], ['antidisestaxpialidocious'], ['odd-ordkkrer'], ['A mix of spacesk a nd cohould split as,words,and numbers,67890'], ['whitespaAces'], ['A mix of swepacesk a nd cohould split as,hjklpwords,and snumbers,6A normal sentencspacese with whtitespaces and no cosmmas7890'], ['64hjkllp'], ['floccinaucinihilipspaces,ilificateion,p'], ['A mix of spacesk and coentence with whtitespaces and no commas7890'], ['anantidisesttheblishmentarianism,tThis'], ['A nice luist of words like antidisestablishmensupercalifragilisticexpialidociousersthhis,tarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccificateion, supercalifragilisticexpialidolcious'], ['commasA'], ['like,antidisestablishmentaroianism,None'], ['spaceswithdalidociousilicovolcanoconiosis,s,a90th'], ['08:14:53)rma'], ['TesThis text contaA nice list of words like antidisestablishmentaroianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidociousins no whitespaces but has commas,a period, and  odd-order lowercase letters such as bd, fhhj, and nprtvxzting error handling when None is prasseed as the input parasentencnnemeter'], ['oweneweA'], ['odd-orspacesc,der'], ['Pythdon 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)] \\n'], ['fFbQ'], ['eYCWxHSAHY'], ['error'], ['ek!manA mix of spacesk and cohould split as,ds,and numbers,6A nbormal sentence witdh whtitespaces and no commas7890d,,rkk'], ['anA mix of spacesk and cohould split as,ds,and numbers,6A nbormal sentence with whtitespaces atluitstnd no commas7890d,teaxxt'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinauA mix of spacesk and cohould split as,hjklpwords,and numbers,67890cinihilipilification, supercalifrspacesupercalifragilisticexpialidocious64,agilisticexpialidocious'], ['A A mix of antidisestatheblishmentarianism,0nice list of words like antidisestabcolishmentarianism, pneumonoultramicroscspaceskon, supercalifragilisticexpialidocious'], ['that,jgKFmqluVX'], ['266'], ['eYCWxlaucinihilipilitficateion,SAHY'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccoinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['(defaultAanti'], ['parameterPython 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)] \\n'], ['bu'], ['supercaagilisticexpi'], ['A nice list of words like anetidisestablishmentarianism, pneumonoultramicroscopicsiilicovolcanoconiosis, floccinaucinihilipilificateion, supercalifragilisticexpialidocious'], ['A nice list ofo words like antidisestablishmentaroianism, pneumonoultramiTestingcroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['A nice list of words like antidisestablistrrf.vphhmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,phanhdlAidocious'], ['aUTtCDnumbers,6Afe'], ['wwitdhhitespaAces'], ['anantidisesttheblishmentarianism,tThimplizuvx;zs'], ['(defanti'], ['onalyedjp!vspacesxblxyqv'], ['as,words,a'], ['A normal sentence with white spacpes and noommas'], ['jpnormalA nospaceswithds,a90thrmal seentence with whitespacpes and noommas'], ['sentencpneumonoultramicroscopiccsilicovolcanoconsiosis,e'], ['spacesk'], ['odd-rorder'], ['aUTtCDefe'], ['ce with whitespacpes and noommasmas,a'], ['suchsupercalifragilistiicexpiali1esd;2345,67aUTtCsDfeus'], ['cohomplizuvx;pzuld'], ['A normal sentencPython 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidthxdkazwhvui,ocious bit (AMD64)]numbersthhis, \\ne with whtitespaces and no commas'], ['08andTesting:14:53)rma'], ['antidisestablishmentariA mix of spaces and commas like this,should split as,words,and numbers like 1234A nice list ofo words like antidisestablishmentaroianism, pneumonoultramiTestingcroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious5,67890anoism,eweA'], ['noommammsupercalifrspacesupercalifragilisticexpialidocious64,agilisticexpialidociouss'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilificateion,pi supercalifragilisticexpialidocious'], ['eJhmlrros'], ['xdkJhml'], ['eYCWxHSAHHY'], ['spaceanA'], ['split'], ['sswepacesk'], ['Python 3.9.7 (default, Sep 26 202Nonee!m,r1, 08:14:53) [MSC v.1916 64 bit (AMD64)] \\n'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcnoommasdf,anoconiosis, floccinaucinihilipilificateion,p fragilisticexpialidocious'], ['SAHY'], ['atluitstnd'], ['this,shjgKaantindisestablishmentarieanoism,ndFmqluVXoulld'], ['12345,67890text'], ['2lipneumonoultramicroscopicsilicovolcanthperiod,his,6'], ['spaceA nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidociouss'], ['A mix of spacesk apnd cohould split as,words,and numbers,67890th'], ['A nice list of words like antidisest,ablishmentarianism, pneumonoultr amicrosclopicsilicovolcanoconsiosis, floificateion,phanhdlAidocious'], ['pneumonouoltr'], ['xdkazwhvui'], ['e!m,r'], ['A mix of swepacesk a nd cohould split as,hjklpwords,and snumbers,6A normal sentencsepacese with whtitespaces and no cosmmas7890'], ['thisl,shoulld'], ['supercal3ifragilistiicexpiali1esd;2345,67aUTtCDfeus'], ['noormal'], ['xdkazwvui'], ['floccinaucinihilipilificateion,commasingos'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)]numbA nice list of words like antidisestablishmentaroianism, pneumonoultramicroscopicsileicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidociousersthhis, \\n'], ['sent12345,67890encnne'], ['contaA'], ['Pytholipneumonoiultramicroscopicsilicovolcanoconiosis,n'], ['as,ds,and'], ['A nice list of words laucinihilipilificateion, supercalifragilistaicexpialidocious'], ['aspaceanAntidisestaxpialinospaceswithds,a90thrmaldocious'], ['supercalifragilisticexpiali12345,6sA'], ['aUUTtCA A mix of antidisestatheblishmentarianism,0nice list of words like antidisestabcolishmentarianism, pneumonoultramicroscspaceskon, supercalifragilisticexpialidociousDfe'], ['xdkazwhvanAui'], ['nsoommamms'], ['lsupercalifragias,ds,andlisticexpialidolcious'], ['nd'], ['supercalifragilistiiPythdoncexpiali1esd;2345,67aUTtCDfeus'], ['A mix of spacesk and cohould split as,words,sand numbers,67890'], ['A nice luist of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, flocciantThisficateion, supercalifragilisticexpiialidolcious'], ['white'], ['hhjklpzryoebaproyqtmq.'], ['antidisestablishmentariA mix of spaces and commas like this,should split as,words,and numbers like 1234A nice list ofo words like antidisestablishmentaroianism, pneumonoultramiTestingcroscopicsilicovolcanoconsiosis, floccinaucinihilipilificateexpialidocious5,67890anoism,eweA'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilificateion,p  supercalifragilisticexpialidocious'], ['This text contains no whitespaces but has commas,a period, and  odd-orspacesc,der loA mix of spaces and commas like this,should split as,words,and numbers like 12345,67890textwercase lett ers such as bd, fhhj, and nprtvxz'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicramicrosclopicsilicovolcanoconsiosis,oscopicsilicovolcanoconsiosis, floccinaucinihilipilificateion,p supercalifragilisticexpialidocious'], ['A mix olipneumonoultramicroscopics,iliscovolcanoconiosis,f spaces and commas like this,shoulld split as,words,ers like 12345,67890'], ['dodd-order'], ['nfhnhj,eion,p'], ['TA normal sentence with whitespacpes andamicroscopicsilicovolcanoconsiosis, noommashis'], ['A maix of spaces and commascommasidisestatheblishmentarianism, like thids,should split as,word s,and numbers like 12345,67890'], ['ABCDEF'], ['aaaBbccDd'], ['$%^&*()_+'], ['ABC'], ['Testing error handling when None is passedp as the input parameter'], ['Python 3.9.7 (dshouldefault, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMD64)] \\n'], ['llik'], ['A mix of spaces and commas a,like this,should split as,words,and numbers like 12345,67890'], ['Testing Jhmlerror handling when None is passed as the input parametter'], ['A normal sentand,s'], ['lowercase'], ['Testing Jhmlerror handling when Nod as the input parametter'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC vparameter.1916 64 bit (AMD64)] \\n'], ['This text contains no whitespaces but has  commas,a period, and  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['ABCDEFJhmlerrorG'], ['Python 3.9.7 (dshouldefault, Sep 26 2021, 08:14:53) [MSC v.1916  64 bit (AMD64)] \\n'], ['A norma,l se(default,ntand,s'], ['This alwso has no whitespaces, but only has commas like, this, and, that, so we should split on commas'], ['A nice list of words like anblxyqvlipilification, supercalifragilisticexpialidocious'], ['A mix of spaces and commas a,like this,should split as,wo(default,rds,and numbers like 12345,67890'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilisticexpialidocious'], ['spaccommases'], ['Testing with spaces, commas and d-order lowercase letters like a, bdf, hjklp'], ['norma,l'], ['A norma,l ase(default,ntand,s'], ['spacmases'], ['A nice list of words like antidisestablishmentarianism, pneumono supertcalifragilisticexpialidocious'], ['This also has n26o whitespaces, but only has commas like, this, and, that, so we should split on commas'], ['Testing with spsos, commas and d-order lowercase letters like a, bdf, hjklp'], ['normsplita,l'], ['A nice list of words like antidisestablishmentarianism, pneumono supertcalifragilisticeA nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilisticexpialidociousxpialidocious'], ['Testing with spaces, commas and odd-oerrorrder lowercase letters like a, bdf, hjklp'], ['A mix of spaces and commas a,like this,should sspa45,67890'], ['sspa45,67890'], ['3.9.7'], ['Python 3.9.7 (defau 2021, 08:14:53) [MSC vparameter.1916 64 bit (AMD64)] \\n'], ['has'], ['Testing Jhmlerror handling when None is psed as the input parametter'], ['Nodtext'], ['contains'], ['Nodte2021,xt'], ['nprtvxz'], ['xdkkazwhui'], ['Nodte22021,xt'], ['n26o'], ['Testing with spaces, commas and odid-order lowercase letters like a, bdf, hjklp'], ['odid-order'], ['Python 3.9.7 (dshouldefault, Sep 26 2021, 08:14:53) [MSC v.1916 64  (AMD64)] \\n'], ['Testinaserror handling when None is passed as the input parametter'], ['Nodteand021,xt'], ['odd-oerrorrder'], ['Testing with spsos, commas and d-order lowercase letters like a, bdfsupercalifragilisticexpialidocious, hjklp'], ['Python 3.9.7 (defau 2021, 08:14:53) [MSC vparamete bit (AMD64)] \\n'], ['A mix of spaces and commas a,like this,should sspa45,67spsos,890'], ['rerror'], ['vparamete'], ['3.99.7'], ['A mix of spaces and commas a,like this,should sspaA45,67spsos,890'], ['Testing swith spaces, commas and d-orderbsdf, hjklp'], ['A mix of spaces and commas a,likme this,should sspaA45,67spsos,890'], ['sentand,s'], ['Python 3.9.7 (default, Sep 26 2:14:53) [MSC v.1916 64 bit (AMD64)] \\n'], ['ase(defwhitespaces,ault,ntand,s'], ['xvparameter.1916dkazwhvui'], ['Python 3.9.7 (dshouldeffault, Sep 126 2021, 08:14:53) [MSC v.1916  64 bit (AMD64)] \\n'], ['2021'], ['A mix of spaces and commas a,like this,should split as,wo(default,rds,a1nd numbers like 12345,67890'], ['This text contains no whitespaces but has  commas,a period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['vparae'], ['A mix Sepof spaces and commas,words,andas a,like tos,890'], ['oNodte22021,xt'], ['6n26o'], ['Testing swith spaces,A mix of spaces and commas a,like this,should split as,wo(default,rds,a1nd numbers like 12345,67890 commas and d-orderbsdf, hjklp'], ['rerrr'], ['sspsa45,67890'], ['Python 3.9.7 (default, Sep 26 2021, 08:14:53) [MSC v.1916 64 bit (AMbdf,D64)] \\n'], ['ovpNoneeten'], ['lTestinaserrorlik'], ['A norma,l se(defaultjwzfxwpfxyqpki,ntand,s'], ['Python 3.9.7 (dshouldefault, Sep 26 2021, 08:14:53) [MSC v.1916  64jwzfxwpfxyqpki bit (AMD64)] \\nhjklp'], ['NodTesting with spsos, commas and d-order lowercase letters like a, bdf, hjklpteand021,xt'], ['Testing withers like a, bdf, hjklp'], ['psed'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilisticexpialidocious'], ['vparpae'], ['soo'], ['This text contains no whitespaces but has  commas,a period, and  odd-order lowercase letters esuch as bd, fhhj, and nprtvxz'], ['Python 3.9.7 (dshouldeffault, Sep 126 2021, 08:14:53) [onMSC v.1916  64 bit (AMD64)] \\n'], ['spaccocmmases'], ['[onMSC'], ['supertcalifragilisticexpialidocious'], ['v!m!d'], ['A normal sentence with wvparpaehitaespaces and no commas'], ['nannd'], ['ase(default,ntand,s'], ['ase(defwhitespacexvparameter.1916dkazwhvuis,ault,ntand,s'], ['jwzfxwpfxyqki'], ['a,Python 3.9.7 (dshouldeffault, Sep 126 2021, 08:14:53) [onMSC v.1916  64 bit (AMD64)] \\n'], ['supertcalifragilisticexpialidociousxpialidocious'], ['hjklp'], ['FGWpneumonowJFeiKU'], ['3.99.'], ['A mix of spaces and commas a,like this,shouldm sspa45,67890'], ['This also has n26o whitespaces, but only has commas liperiod,ke, thiantidisestablishmentarianism,s, and, that, so we should split on commas'], ['Jhml'], ['spaspsos,ces,Testinaserror'], ['Python 3.niA4)] \\n'], ['textt'], ['pse(default,d'], ['hjklpteand021,xt'], ['A mix of spacces and commas like this,should split as,words,and numbers like 12345,67890'], ['commas,words,andas'], ['Nod'], ['trhasrfh.vph'], ['lowrcaJhml ed!vhllxblxyqv esd; rb o jwzfxwpfxyqki gq  trhasrfh.vph xdkazwhvui  k v!mll!d e!m,r  d zryebaproyqtmq. mplizuvx;z dz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,se'], ['it'], ['pse(default,jwzfxwpfxyqkid'], ['containsjwzfxwpfxyqpki'], ['Testing Jhmlerror handling when None is psed as tspaspsos,ces,Testinaserrorhe input parametter'], ['oNodte2split2021,xt'], ['spaces,A'], ['wxdkazwhvui'], ['P ython 3.niA4)] \\n'], ['A nice list of words like antildisestablishmentarianism, pneumonoultramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilisticexpialidocious'], ['nice3.niA4)]'], ['os2:14:53)h3ould'], ['nanndd'], ['supertcalifragilisticealsoxpialidocious'], ['Nood'], ['This text contains no whitespaces but has  commas,a period, and  odd-order lowercase bd, fhhj, and nprtvxz'], ['Nodtexxt'], ['JhPython 3.9.7 (defabd,u 2021, 08:14:53) [MSC vparameter.1916 64 bit (AMD64)] \\nml'], ['thisd,should'], ['Testing with spaces, commas and odd-oerrorrder lowercase letters like a, bdf , hjklp'], ['thisd,s,hould'], ['vpaalsorametebThis also has n26o whitespaces, but only has commas liperiod,ke, thiantidisestablishmentarianism,s, and, that, so we should split on commas'], ['Pysspsa45,67890thon 3.niA4)] \\n'], ['Testing Jh when None is psed as tspaspsos,ces,Testinaserrorhe input parametter'], ['Sepof'], ['sesd;'], ['This text contains no whitespaces but has  ccommas,a period, anPython 3.9.7 (dshouldeffault, Sep 126 2021, 08:14:53) [MSC v.1916  64 bit (AMD64)] \\nd  odd-order lowercasel letters esuch as bd, fhhj, and nprtvxz'], ['A nice list of words like antildisestablishmentarianism, pneumonoultramic,roscopABCDEFJhmlerrorGicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilisticexpialidocious'], ['This text contains no whuitespaces but has  commas,a period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['A mix of spaces and commas a,likA mix of spacces and commas like this,should split as,words,and numbers like 12345,67890e this,should sspa45,67890'], ['A normal sentence with winputvparpaehJhml ed!vhllxblxyqv sesd; b o jwzfxwpfxyqki gq  trrfh.vph xdkaTesting with spsos, commas and d-order lowercase letters like a, bdf, hjklpzrwhvui  k v!mll!d eh!m,r  d zryebaproyqtmq. mplizuvx;z dz.olhjcymqpz,Testing with spsos, commas and d-order lowercase letters like a, bdf, hjklpwnfx;lz.iwrohveybkgts.feaasfbyb, no commas'], ['rerrism,r'], ['jwzfxwjpfxyqki'], ['sspsa45,467890'], ['A(AMbdf,D64)] nice list of words like antidisestablishmentarianism, pneumono supertcalifragilisticeA nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilisticexpialidociousxpialidocious'], ['a,Python'], ['odid-ordv!mslld!der'], ['seand,s'], ['(defau'], ['jwzfxwpfxos2:14:53x)h3ouldyqki'], ['llTesteinaserrorlik'], ['(deefau'], ['Testinaserror handlia,likAng when None is passed as theTesting withers like a, bdf, hjklp input parametter'], ['supertcalifragilisticeA'], ['supertcalifragilisticeawhensoxpialidocious'], ['trrfh.vph'], ['A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supercaandlifragilisticexpialidocious'], ['Python 3.9.7 (defau 2021,m 08:14:53) [MSC vparameter.1916 64 bit (AMD64)] \\n'], ['b'], ['ofA mix of spaces and commas a,like this,should sspaA45,67spsos,890'], ['This text contains nto whitespaces but has commas,a period, and  odd-order lowercase letters sucth as bd, fhhj, and nprtvxz'], ['lowercasel'], ['ssov!m!d'], ['aiC'], ['A mix of spaces and commas like this,should splite as,words,and numbers like 12345,67890'], ['Testing swith spaces,A mix of spaces and commas a,like this,shounormalld split as,wo(default,rds,a1nd numbers like 12345,67890 commas and d-orderbsdf, hjklp'], ['sentan,ssentand,s'], ['Python 3.9.7 (defau 2021,m 08:14:563) [MSC vparameter.1916 64 bit (AMD64)] \\n'], ['reTesting with spaces, commas and odd-order lowercase letters like bdf, hjklprrr'], ['a,Pythhandlingon'], ['odiid-order'], ['pA nice list of words like antidisestablishmentarianism, pneumono supertcalifragilisticexpialidocioussed'], ['spaspseos,ces,Testinaserror'], ['A nice list of words like antidisestablishmentarianism, pneumono supertcalifragiseand,sisticexpialidocious'], ['llilk'], ['A normal sentence with wvand no commas'], ['No'], ['NonJhml'], ['i'], ['3Python 3.9.7 (defau 2021, 08:14:53) [MSC vparameter.1916 64 bit (AMD64)] \\n'], ['ase(defwhitespaces,eault,ntand,s'], ['Testing Jh when None is psed as tspaspsos,ces,Testinaserrorhe input parameter'], ['sspsa45,4667890'], ['lTesting swith spaces,A mix of spaces and commas a,like this,shounormalld split as,wo(default,rds,a1nd numbers like 12345,67890 commas and d-orderbsdf, hjklplilk'], ['A normal sentence wtith wvand no commas'], ['dz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,se'], ['Testing Jh when None is psed as tspaspsos,cevparameter.1916s,Testinaserrorhe input parameter'], ['pseed'], ['ase(default,ntadnd,s'], ['sspsa45,,467890'], ['Asentan,sJhml ed!vhllxblxyqv esd; rb o jwzfxwpfxyqki gq  trhasrfh.vph xdkazwhvui  k v!mll!d e!m,r  d zryebaproyqtmq. mplizuvx;z dz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,sentancommasd,sBCDEFG'], ['Testing error handling whellikn None is passed as the input parameter'], ['[onMCSC'], ['Testing Jh  when None is psed as tspaspsos,cevparameter.1916s,Testinaserrorhe input parameter'], ['This text contains no whuaPython 3.9.7 (dshouldefault, Sep 26 2021, 08:14:53) [MSC v.1916 64  (AMD464)] \\n,itespaces but has  commas,a period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['Python 3.9.7 (dshoiuldefault, Sep 26 2021, 08:14:53) [MSC v.1916  64 bit (AMD64)] \\n'], ['A mix of spaces and commas a,likA mix of spacces and commas like1 thlettersis,should split as,words,and numbers like 12345,67890e this,should sspa45,67890'], ['2021,pneumono'], ['Testing error haas,wo(default,rds,a1ndndling when None is passed as the input parameter'], ['xdkkaism,zwhui'], ['A normal sentence wtiwithth wvand no commas'], ['This alwso has no whitespaces, but only has commas like, this, and,dz.olhjd-orderbsdf,cymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb, that, so we should split on commas'], ['Python 3.9.7 (defau 2021, 08:14:53) [MSC vparameter.1916 64 bit (AMD64)] 9\\n'], ['Testinaserror'], ['but'], ['This text contains no whitespaces but has  comcmas,a period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvx'], ['ttPython 3.9.7 (defau 2021, 08:14:53) [MSC vparamete bit (AMD64)] \\nexxt'], ['Noonee'], ['A mix of spaces and commas a,lik0e this,should split as,wo(default,rds,and numbers like 12345,67890'], ['A nice list of words like antidisestablishmentarianirerrorsm, pneumono supertcalifragilisticexpialidocious'], ['ws'], ['eA normal sentence wtith wvand no commas'], ['Testing error handn None is passed as the input parameter'], ['sucth'], ['antidA mix of spaces and commas a,like this,should sspa45,67890isestablishmentarianism,A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supercaandlifragilisticexpialidocious'], ['A normaal sentantexttd,s'], ['Nodteaand021,xt'], ['whidz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,sentancommasd,sBCDEFGtespaces'], ['xdkkaism,zsupercalifragilisticexpialidociouswhui'], ['A nice list of words like antidisestablishmentarianism, pneumas,words,andono supertcalifragilisticeA nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucisnihilipilification, supertcalifragilisticexpialidociousxpialidocious'], ['a,likA'], ['sspathis,shounormalld45,67890'], ['hjkklpteand021,xt'], ['A nice list of words like antidisestablishmentarian floccinaucinihilipilification, supertcalifragilisticexpialidocious'], ['pneumonoultramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis,m,r'], ['A nice list of wordlxyqvlipilification, supercalifragilisticexpialidocious'], ['[onMCSvparameter.1916C'], ['oNodtesplit2021,xt'], ['sspsa45,467s890'], ['vpaalsorlso has n26o whitespaces, but only has commas liperiod,ke, thiantidisestablishmentarianism,s, and, that, so we should split on commas'], ['This text contains no whitespaces but has  comcmas, a period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvx'], ['xdkkazodid-ordv!mslld!derwhui'], ['odid-orderABCDEFG'], ['lTesting switlTesatinaserrorlikh spaces,A mix of spaces and commas a,like this,shounormalld split as,wo(default,rds,a1nd numbers like 12345,67890 commas and id-orderbsdf, hjklplilk'], ['vlike1!mll!d'], ['sspathis,shttPythonounormalld45,67890'], ['noarma,l'], ['vpaalsorlso has n26o wohitespaces, but only has commas liperiod,ke, thiantidisestablishmentarianism,s, and, that, so wei should split on commas'], ['supertcalifreagilisticexpialidociousxpialidocious'], ['jwzfx14miis,m,x:53x)h3ouldyqki'], ['ABCDEFJhmlFerrorG'], ['ase(efault,ntadnd,s'], ['switlTesatinaserrorlikh'], ['Testing error haas,wo(default,rds,a1ndndling when None is passed as the inoNodte22021,xtput parameter'], ['Testing error handlipng whellikn None is passed as the input parameter'], ['vparameter.1916'], ['This text contains no whitespaces but has  commas,a period, and  odd-order lowccommas,aercase letters esuch as bd, fhhj, and nprtvxz'], ['thlettersis,should'], ['hjklpteand021,xt1'], ['(AMD464)]'], ['haas,wo(default,rds,a1ndndlingdz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,se'], ['Asentan,sJhml'], ['[oMnMSC'], ['2021wxdkaazwhvui'], ['ssucth'], ['Testing Jhmlerror handling when None is psed as the input  parametter'], ['rerrrism,r'], ['This text contains no whuitespaces but has  commas,aa period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['A nice list of words like antidisestablishmentarianism, pneumono supertcalifragilisticeA nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilistinice3.niA4)]cexpialidociousxpialidocious'], ['rnice3.niiA4)]errr'], ['Testing Jhmlerror handling whes the input parametter'], ['ss4pa45,67890'], ['A nice list of words like antridisestablishmens'], ['3.9ase(defwhitespaces,eault,ntand,s'], ['wvparpaehitaespaces'], ['This text contains no whuaPython 3.9.7 (dshouldefault, Sep 26 2021, 08:1reTesting4:53) [MSC v.1916 64  (AMD464)] \\n,itespaces but has  commas,a period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['3.99.antidA mix of spaces and commas a,like this,should sspa45,67890isestablishmentarianism,A nice list of words like antidisestablishmentarianism, pneumonoultramicroscopicsilicovolcanoconiosis, floccinaucinihilipilification, supercaandlifragilisticexpialidocious7'], ['lTesting switlTesatinaserrorlikh spaces,A mix of spaces and commas aspaspseos,ces,Testinaserrorrderbsdf, hjklplilk'], ['ssssucth4pa45,67890'], ['lTesting swith spaces,A mix of spaces and commas a,like this,shounormalld split as,wo(default,rds,a1pA nice list of words like antidisestablishmentarianism, pneumono supertcalifragilisticexpialidocioussednd numbers like 12345,67890 commas and d-orderbsdf, hjklplilk'], ['Testig'], ['lowccommas,aercase'], ['Testing error handling when None is passed asameter'], ['lowrcaJhml ed!vhllxblxyqv esd; rb o jwzfxwpfxyqki gq  trhasrfh.vph xdkazwhvui  k v!mll!d e!m,r  d zryebaproyhveybkgts.feaasfbyb,se'], ['Testing withers like a, bdf, hlp'], ['vparramete'], ['mx'], ['dThis text contains no whitespaces but has  commas,a period, and  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['ABCDEFJhmmlFerrorG'], ['(AMDtrrf.vph464)]'], ['2021,pnepneumonoultramicroscopicsilicovolcanoconiosis,uo'], ['This text contains no whuaPython 3.9.7 (dshouldefauspaccocmmaseslt, Sep 26 2021, 08:14:53) [MS C v.1916 64  (AMD464)] \\n,itespaces but has  commas,a period, anad  odd-order lowercase letters such as bd, fhhj, and nprtvxz'], ['supertcalifragiliusticexpialidocious'], ['itt'], ['Testing Jh when None is psed as tspaspsos,cevparameter.1916s,Testinaserrorhe input parameteir'], ['jwzfx14miis,yqki'], ['dThis text contains no whitespaces but has  commas,a period, and  odd-oretters such as bd, fhhj, and nprtvxz'], ['vparpe'], ['wtiwithth'], ['Testing Jhmlerror handling when None is passed as the inpNodtexxtmetter'], ['A nice list of words like antidisestablishmentairian floccinaucinihilipilification, supertcalifragilisticexpialidocious'], ['Testihlpng Jh when None is psed as tspaspsos,ces,Testinaserrorhe input parameter'], ['3..99.'], ['A nice list of words like antildisestablishmentarianism, pneumonoulNodteaand021,xttramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis, floccinaucinihilipilification, supertcalifragilsisticexpialidocious'], ['ase(efault,ntadnA nice list of words like antidisestablishmentarian floccinaucinihilipilification, supertcalifragilisticexpialidociousd,s'], ['A nice list of words like antidisestablishmentarianism, pneumas,words,andono supertcalifragilisticeA nice list of words li,ke antidisestablishmentarianism, pneumonoucltramicroflJhml ed!vhllxblxyqv sesd; b o jwzfxwpfxyqki gq  trrfh.vph xdkaTesting with spsos, commas and d-order lowercase letthandlingers like a, bdf, hjklpzrwhvui  k v!mll!d eh!m,r  d zryebaproyqtmq. mplizuvx;z dz.olhjcymqpz,Testing with spsos, commas and d-order lowercase letters like a, bdf, hjklpwnfx;lz.iwrohveybkgts.feaasfbyb,occinaucinihilipilification,scopicsilicovolcanoconiosis, floccinaucisnihilipilification, supertcalifragilisticexpialidociousxpialidocious'], ['ssspsa45,467s890upertcalifragiliusticexpialidocious'], ['this,shouTesting with spsos, commas and d-order lowercase letters like a, bdf, hjklpd'], ['Testing switth spaces, commas and d-orderbsdf, hjklp'], ['This text contains ,em,rno whitespaces but has  ccommas,a period, anPython 3.9.7 (dshouldeffault, Sep 126 2021, 08:14:53) [MSC v.1916  64 bit (AMD64)] \\nd  odd-order lowercasel letters esuch as bd, fhhj, and nprtvxz'], ['hjklplilk'], ['pneumonoultramicroswtiwiththcopABCDEFJhmlerrorGicsilicovolcanoconiosis,m,r'], ['nantidA mix of spaces and commas a,like this,should sspa45,67890isestablishmentarianism,26o'], ['like1'], ['dThis text contains no whitespaces but has  commas,a period, and  odd-oretters such as Testing error handling when None is passed asameterbd, fhhj, and nprtvxz'], ['psTesting swith spaces, commas and d-orderbsdf, hjklpeed'], ['ase(efault,ntadnA nice list of words like antidisestablishmentarian floccinaucinihilipilification, s(dshoiuldefault,upertcalifragilisticexpialidociousd,s'], ['odd-oretters'], ['odid-ordv!moslld!dr'], ['ase(defwhitespacexvparams,ault,ntand,s'], ['Python 3.9.7 (dshouldefault, Sep 262 2021, 08:14:53) [MSC v.1916  64 bit (AMD64)] \\n'], ['A mix of spaces and commas a,like this,should sTesting Jhmlerror handling when Nod as the input parametterspa45,67spsos,890'], ['spaspseos,ces,Testinasthis,shouTesting with spsos, commas and d-order lowercase letters like a, bdf, hjklpderror'], ['Nodte2021,ase(defwhitespaces,eault,ntand,sxt'], ['rerrrr'], ['[onM.1916C'], ['a,lilkA'], ['ssspsa45,467s8and90upertcalifragiliusticexpialidocious'], ['Testing swith spaces,A mix of spaces and co mmas a,like this,should split as,wo(default,rds,a1nd numbers like 12345,67890 commas and d-orderbsdf, hjklp'], ['NPython 3.9.7 (dshouldefault, Sep 26 2021, 08:14:53) [MSC v.1916  64jwzfxwpfxyqpki bit (AMD64)] \\nhjklpoonee'], ['ase(efault,ntadnA nice list of words like antidisestablishmentarian floccinaucinihilipilification, supertcaliifragilisticexpialidociousd,s'], ['dThis text contains no whitespaces but has  commas,a period, and  odd-oretters such as Testing error handling when None is passed asameterbd, fhhjrtvxz']]\n    results = [['Hello', 'world!'], ['Hello', 'world!'], ['Hello', 'world,!'], ['Hello,Hello,world', '!'], 3, 2, 1, 0, 2, ['abc', 'deg'], ['aaa', 'bbb'], ['Hello', 'World!'], ['123', '456'], 1, ['Hello', ',', 'world', '!'], ['apple,', 'banana,', 'orange,', 'grapefruit'], 0, ['HELLO', 'WORLD'], 1, ['Hellabc123o', ',', 'world', '!'], ['HELLOHELLO', 'WORLD', 'WOORLD'], 0, 1, ['Hello', ',Hello?', 'world', '!'], ['Hello', 'dWorlld!'], ['Hello', 'WdWorlld!'], ['abc', 'de'], ['aabc123Hello', 'World!'], ['abcd', 'de'], 1, ['abcHELLOHELLO', 'WOORLD', 'WOORLD', 'de'], ['abcHello', 'World!', 'deg'], 1, 1, ['abcHELLOHELLO', 'WRLD', 'de'], ['Helalabc123o', ',', 'world', '!'], ['dabcd', 'de'], ['ab', 'cd', 'deg'], ['abcHELLOHELLO', 'WRabcHELLOHELLO', 'WOORLD', 'WOORLD', 'deLD', 'de'], 0, ['Hello', ',Hello?', 'rld', '!'], ['Hello', ',', 'world', 'Hello', ',', 'world', '!!'], ['Helalabc123o', ',', 'bworld', '!'], ['HELLOHello', ',', 'world', '!HELLO', 'WORLD', 'WOOLRLD'], ['abcabc', 'a123'], ['abcHello', ',', 'deworabcd', 'dded', 'a123'], ['Hello', ',Helaabc123lo?', 'rld', '!'], 2, 0, ['H!ello', 'WdWorlld!'], ['Heab', 'cd', 'deglled', '1234'], ['aaabc123aabc123Hello', 'World!'], ['dabcd', 'aaabc123aabc123Hello', 'World!e'], ['oHelldHelled', '!'], ['abc', 'g'], ['Hello', ',Hello?', 'rlaabc123c', 'd', '!'], ['abcHELLOHELLO', 'WRLLD', 'dee'], ['abce', 'deg'], ['Hello', ',', 'worHelled', 'ld', '!'], 1, ['Helalabc123o', ',', 'bworldNDcwhK!'], 2, ['ab', 'cd', 'degab', 'cd', 'deg'], ['Hello', ',', 'world', 'HellHello', ',', 'eworabcd', 'deHello2aaabc123', ',', 'world', '!d', 'o', ',', 'world', '!!'], ['ab', 'cdg', 'deg'], ['aObcLHELLOHELLO', 'WRLD', 'de'], ['aObcLHELLOHELLOHELLO', 'WORLD', 'WOORLDHELLO', 'WRLD', 'de'], ['HelloHello', ',Helaabc123lo?', 'rld', '!', ',Hello?', 'world', 'Hello', ',Hello?', 'rlaabc123c', 'd', '!!'], ['Heab', 'cabcHello', 'World!', 'degd', 'deglled', '1234'], 0, 5, ['HHelblo', ',Helaabc123lo?', 'rl'], 0, ['ab', 'cd', 'cdeg'], ['abcHello', 'Worlld!', 'deg'], ['abcHello', ',', 'deworabcd', 'dHello', ',', 'worHelled', 'ld', '!ded', 'a123'], ['ab', 'cdg', 'deg12344'], 0, ['aaa', 'bb'], ['Hello', ',', 'woapple,', 'banana,', 'orange,', 'grapefruitrld', 'Hello', ',', 'world', '!!'], 3, ['Hello', ',', 'world', 'HellHello', ',d', '!d', 'o', ',', 'world', '!!'], ['HOHello', ',', 'world', '!HELLO', 'WORLD', 'WOOLRLD'], ['NHello', ',', 'world', 'Hello', ',', 'world', '!!DcwhK'], ['Hello', ',Hello?', 'waaa,bborld', '!'], ['HHelblo', ',Helaabc123lo?', 'rlabcHello', 'Worlld!', 'deg'], ['Hello', ',', 'w', 'orld', 'Hello', ',', 'world', '!!'], ['aObcLOHELLO', 'HELLOHELLO', 'WORLD', 'WOORLDHELLO', 'WRLaabc123D', 'de'], ['oHeHlldHelled', '!'], ['dabcd', 'aaabc123aabab', 'cdg', 'deg12344c123Hello', 'World!e'], ['aaab', 'cdg', 'deg12344a,bbb'], 1, ['ab', 'ecd', 'degab', 'cd', 'deg'], ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], ['Testing', 'with', 'spaces,', 'commas', 'and', 'odd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], ['Testing', 'error', 'handling', 'when', 'None', 'is', 'passed', 'as', 'the', 'input', 'parameter'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supercalifragilisticexpialidocious'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890'], ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['This', 'also', 'has', 'no', 'whitespaces,', 'but', 'only', 'has', 'commas', 'like,', 'this,', 'and,', 'that,', 'so', 'we', 'should', 'split', 'on', 'commas'], ['A', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'no', 'commas'], 0, 0, ['A', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'noommas'], 3, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilificateion,', 'supercalifragilisticexpialidocious'], 1, 0, ['Testing', 'erros', 'the', 'input', 'parameter'], 11, 0, 2, 3, 4, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], 5, 2, ['supercalifragilisticexpiali12345', '67890cious'], 1, 2, ['Testing', 'with', 'spacsupercalifragilisticexpiali12345,67890ciouses,', 'commas', 'and', 'odd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbersthhis,', 'like', '12345,678900'], ['A', 'mix', 'of', 'antidisestatheblishmentarianism,0'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,word', 's,and', 'numbers', 'like', '12345,67890'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'thids,should', 'split', 'as,word', 's,and', 'numbers', 'like', '12345,67890'], ['commas', 'a'], ['as', 'words', '', 'a'], 7, ['this', 'should'], 3, 1, 1, 2, ['A', 'nice', 'luist', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccificateion,', 'supercalifragilisticexpialidolcious'], 5, ['A', 'mix', 'of', 'spacesk', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], 1, ['A', 'normal', 'sentence', 'with', 'whitespacpes', 'and', 'noommas'], 12, ['dz.olhjcymqpz', 'wnfx;lz.iwrohveybkgts.feaasfbyb', 'k'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsiilicovolcanoconiosis,', 'floccinaucinihilipilificateion,', 'supercalifragilisticexpialidocious'], 2, 3, ['supercalifragilisticexpiali12345,67890ciousA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'noommas'], ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,words,and', 'numbers', 'like', '12345,67890'], 0, 3, 0, 0, 2, 3, 14, 9, 5, ['pniceasssantidisestatheblishmentarianism', '0ed'], ['A', 'normal', 'sentences', 'with', 'whitespaces', 'and', 'noommas'], 1, ['supercalifragilisticexpiali1esd;2345', '67890cious'], 2, 2, 4, 2, ['ek!m', 'rkk'], 14, ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,words,and', 'numbers,67890'], ['A', 'nice', 'list', 'of', 'words', 'lipneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supercalifragilisticexpialidocious'], 1, 1, 2, ['supercalifragilistiicexpiali1esd;2345', '67890cious'], 2, 3, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], ['A', 'normal', 'sentence', 'w3.9.7ith', 'whitespaces', 'and', 'noommas'], ['hanhdlA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,commasing'], 1, ['A', 'niA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'noommasce', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], 1, 2, 10, ['sh(defaultas', 'words', 'and', 'oulsupercalifragilisticexpiali1esd;2345', '67890ciousd'], 1, 3, ['A', 'normal', 'hsUoSsentence', 'with', 'whitespacpes', 'and', 'noommas'], 1, ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,words,and', 'numbers,67890th'], 1, ['Testing', 'error', 'handling', 'when', 'None', 'is', 'prassed', 'as', 'the', 'input', 'parameter'], 1, ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]numbersthhis,'], ['A', 'normal', 'sentence', 'with', 'whtitespaces', 'and', 'no', 'commas'], 1, ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,words,and', 'numbers,u67890'], 3, ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,hjklpwords,and', 'numbers,67890'], 0, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890text'], ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.191v6', '64', 'bit', '(AMD64)]'], 7, 12, 0, 0, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestabclishmentarianism,', 'pneumonoultramicroscopicsiilicovolcanoconiosis,', 'floccinaucinihilipilificateion,', 'supercalifragilisticexpialidocious'], ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,hjklpwords,and', 'numbers,6A', 'normal', 'sentence', 'with', 'whtitespaces', 'and', 'no', 'commas7890'], 11, ['Nonee!m', 'r'], ['supercalifragilisticexpiali1esd;2345', '67890cioubits'], 3, 1, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,shoulld', 'split', 'as,words,and', 'numbers', 'like', '12345,67890'], ['(AMD64)supercalifragilisticexpiali1esd;2345', '67890cioubits]'], 4, 1, 1, 12, 0, ['As', 'mix', 'of', 'antidisestatheblishmentarianism,0'], ['floccinaucinihilipilificateion', 'p'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,phanhdlAidocious'], 1, ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-orspacesc,der', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['antidisestatheblishmentarianism', '0'], 2, 2, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidthxdkazwhvui,ocious'], ['spacesc', 'supercalifragilisticexpialidocious'], ['floccinaucinihiilion', 'p'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,shoulld', 'split', 'as,words,ers', 'like', '12345,67890'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonousltramicroscopicsilicovolcanoconsniosis,', 'floccinaucinihilipilificateion,phanhdlAidocious'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'n,umbersthhis,', 'like', '12345,678900'], 1, 0, 1, 9, ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,ds,and', 'numbers,6A', 'normal', 'sentence', 'with', 'whtitespaces', 'and', 'no', 'commas7890'], 0, 2, 2, 4, 2, ['comA', 'normal', 'hsUoSsentence', 'with', 'whitespacpes', 'and', 'noommasmas,a'], 0, ['onlyed!vhllxblxycomA', 'normal', 'hsUoSsentence', 'with', 'whitespacpes', 'and', 'noommasmas,aqvv'], 5, ['Testing', 'error', 'handling', 'when', 'None', 'is', 'prasseed', 'as', 'the', 'input', 'parasentencnnemeter'], ['hanhdlA', 'normial', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,commasing'], ['A', 'nice', 'list', 'of', 'words', 'laucinihilipilificateion,', 'supercalifragilisticexpialidocious'], ['hanhdlA', 'normilal', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,commasing'], 0, 1, 2, ['supercalifragilisticexpi', 'ali12345,67890ciousA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'noommas'], ['commasA', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,shoulld', 'split', 'as,words,ers', 'like', '12345,67890,a'], 4, 2, 10, ['andTesting', 'with', 'spacsupercalifragilisticexpiali12345,67890ciouses,', 'commas', 'and', 'odd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], 2, 5, 4, 1, ['antidianism', '0'], 2, ['antidim', '0'], 5, 0, 0, ['this', 'ishouldno'], 3, ['hanhdlA', 'normial', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,commasingf'], 4, 4, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultr', 'amicroscopicsilicovolcanoconsiosis,', 'floificateion,phanhdlAidocious'], ['hanhdlA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,cosing'], ['A', 'nice', 'list', 'of', 'words', 'laucinihilipilificateion,', 'supercalifragilisiticexpialidocious'], ['sentencesas', 'words', 'and'], ['(AMD64)supercalifragilisticexpiali1esd;2345', '67x890cioubits]'], ['supercalifragilisticexpiali12345', '67890ciousA'], 5, ['floccinaucinihilnipilificateion', 'commasing'], ['aUTtCaeDf12345', '6antThis7890texte'], 4, 4, 3, ['this', 'shoulld'], ['like', 'None'], ['flo2021', 'ccinaucinihilipilificateion', 'p'], ['uflo2021', 'ccinaucinihilipilificateion', 'p'], ['A', 'normal', 'sentencPython', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]numbersthhis,', 'e', 'with', 'whtitespaces', 'and', 'no', 'commas'], ['A', 'normal', 'hsUoSsentence', 'with', 'whitespacpletterses', 'aantindisestablishmentarianoism,nd'], ['jgKaantindisestablishmentarieanoism', 'ndFmqluVX'], ['llikbA', 'normal', 'sentence', 'with', 'whitespacpes', 'and', 'noommasdf,e'], 4, 6, ['A', 'nice', 'list', 'ofo', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,hjklpwords,and', 'snumbers,6A', 'normal', 'sentence', 'with', 'whtitespaces', 'and', 'no', 'cosmmas7890'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinauA', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,hjklpwords,and', 'numbers,67890cinihilipilification,', 'supercalifragilisticexpialidocious'], ['floccinaucinihilipilificateion', 'commasingf'], 5, ['supercalifragias', 'ds', 'andlisticexpialidolcious'], ['Testing', 'with', 'spaceanA', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,ds,and', 'numbers,6A', 'nbormal', 'sentence', 'with', 'whtitespaces', 'and', 'no', 'commas7890d,s,', 'commas', 'and', 'odd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], ['noommaswOWbbXmas', 'a'], 0, ['hanhdlA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,cosinges'], ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]numbgqersthhis,'], 3, 0, 3, ['A', 'mix', 'of', 'spaceswithds,a90th'], 3, 8, ['Python', '3.9.7', '(defaultA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.191v6', '64', 'bit', '(AMD64)]'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestabclishmentarianism,', 'pneumonoultramicroscspaceskon,', 'supercalifragilisticexpialidocious'], 4, 10, ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]numbA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidociousersthhis,'], 4, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonousltramicroscopicsilicovolcanoconsniosis,', 'floccinaucinihilipilificateion,phanhdlAdocious'], ['s,A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890textnd'], ['and', 'only'], ['A', 'mix', 'of', 'spaceshanhdlA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,cosing', 'and', 'commas', 'like', 'this,sho', 'uld', 'split', 'as,words,and', 'n,umbersthhis,', 'like', '12345,678900'], ['0s,A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890textnd8:1:53)'], ['jwzfxwpfxysupercalifragilistiicexpiali1esd;2345', '67890ciousqkiaUTtCDfe'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonousltramicroscopicsilicovolcanoconsniosis,', 'floccinaucinihilipilificateionospacesnthxdkazwhvui,antidisestNoneablishmentaroianism,,phanhdlAdocious'], 3, ['sentencpneumonoultrnamicroscopicsilicovolcainoconsiosis', 'e'], ['spaceswithds', 'a90th'], 2, ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,hjklpwords,and', 'snumbers,6A', 'normal', 'sentencspacese', 'with', 'whtitespaces', 'and', 'no', 'cosmmas7890'], 3, ['hanhdlA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,commasingos'], 2, ['sh(defaultas', 'words', 'and', 'oulsupercalifragilisticexpionlyed!lowercasevhllxblxyqvali1esd;2345', '67890ciousd'], 1, 2, ['supercalifragilistiicexpiali1esd;2345', '67aUTtCDfeus'], 2, ['hanmhdlA', 'normial', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,commasingf'], 8, 0, ['s', 'and'], 2, ['noommasmas', 'aqvv'], 12, ['A', 'normal', 'sentence', 'with', 'whitespacpes', 'andamicroscopicsilicovolcanoconsiosis,', 'noommas'], 9, 2, ['A', 'nice', 'luist', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'flocciantThisficateion,', 'supercalifragilisticexpialidolcious'], 5, ['08:14:53s', 'A)'], ['supercalifragilisticexpiali1esd;2345,67890A', 'nice', 'list', 'of', 'words', 'lipneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supercalifragilisticexpialidociouscioubits'], ['hanhdlA', 'normial', 'sentence', 'with', 'whitespaces', 'and', 'no', 'floccinaucinihilipilificateion,commasingfNone'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestaxpialidocious'], ['hanhdlA', 'normial', 'sentence', 'with', 'whitespaAces', 'and', 'no', 'floccinaucinihilipilificateion,commasing'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilificateion,', 'supercalifragilisticexpialideocious'], 2, 8, ['A', 'mix', 'of', 'swepacesk', 'and', 'cohould', 'split', 'as,hjklpwords,and', 'snumbers,6A', 'normal', 'sentencspacese', 'with', 'whtitespaces', 'and', 'no', 'cosmmas7890'], 14, ['floccinaucinihilipilificateion', 'phanhdlAdocious'], ['A', 'nospaceswithds,a90thrmal', 'seentence', 'with', 'whitespacpes', 'and', 'noommas'], 6, ['antidhanhdlAhmentarianism', '0'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidoci'], 6, ['A', 'niA', 'normal', 'sentennce', 'with', 'whitespaces', 'and', 'noommasce', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], ['08:14:53s', 'A1)'], 14, ['s', 'A'], 3, ['A', 'niA', 'normal', 'sentence', 'with', 'whitespaces', 'and', 'nfhhj,eion,p', 'supercalifragilisticexpialidocious'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilifiA', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,word', 's,and', 'numbers', 'like', '12345,67890cateion,phanhdlAidocious'], ['Testing', 'with', 'spacsupercalifragilisticexpiali12345,67890ciouses,', 'commas', 'and', 'odd-porder', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], 5, ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'persupercalifragias,ds,andlisticexpialidolcious,iod,', 'and', 'odd-orspacesc,der', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 0, 8, 6, ['A', 'mix', 'of', 'spacesk', 'a', 'nd', 'cohould', 'split', 'as,words,and', 'numbers,67890'], 3, ['A', 'mix', 'of', 'swepacesk', 'a', 'nd', 'cohould', 'split', 'as,hjklpwords,and', 'snumbers,6A', 'normal', 'sentencspacese', 'with', 'whtitespaces', 'and', 'no', 'cosmmas7890'], 5, ['floccinaucinihilipspaces', 'ilificateion', 'p'], ['A', 'mix', 'of', 'spacesk', 'and', 'coentence', 'with', 'whtitespaces', 'and', 'no', 'commas7890'], ['anantidisesttheblishmentarianism', 'tThis'], ['A', 'nice', 'luist', 'of', 'words', 'like', 'antidisestablishmensupercalifragilisticexpialidociousersthhis,tarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccificateion,', 'supercalifragilisticexpialidolcious'], 0, ['like', 'antidisestablishmentaroianism', 'None'], ['spaceswithdalidociousilicovolcanoconiosis', 's', 'a90th'], 1, ['TesThis', 'text', 'contaA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidociousins', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxzting', 'error', 'handling', 'when', 'None', 'is', 'prasseed', 'as', 'the', 'input', 'parasentencnnemeter'], 1, ['odd-orspacesc', 'der'], ['Pythdon', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], 2, 1, 3, ['ek!manA', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,ds,and', 'numbers,6A', 'nbormal', 'sentence', 'witdh', 'whtitespaces', 'and', 'no', 'commas7890d,,rkk'], ['anA', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,ds,and', 'numbers,6A', 'nbormal', 'sentence', 'with', 'whtitespaces', 'atluitstnd', 'no', 'commas7890d,teaxxt'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinauA', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,hjklpwords,and', 'numbers,67890cinihilipilification,', 'supercalifrspacesupercalifragilisticexpialidocious64,agilisticexpialidocious'], ['A', 'A', 'mix', 'of', 'antidisestatheblishmentarianism,0nice', 'list', 'of', 'words', 'like', 'antidisestabcolishmentarianism,', 'pneumonoultramicroscspaceskon,', 'supercalifragilisticexpialidocious'], ['that', 'jgKFmqluVX'], 0, ['eYCWxlaucinihilipilitficateion', 'SAHY'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccoinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], 6, ['parameterPython', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], 1, 6, ['A', 'nice', 'list', 'of', 'words', 'like', 'anetidisestablishmentarianism,', 'pneumonoultramicroscopicsiilicovolcanoconiosis,', 'floccinaucinihilipilificateion,', 'supercalifragilisticexpialidocious'], ['A', 'nice', 'list', 'ofo', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramiTestingcroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablistrrf.vphhmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,phanhdlAidocious'], ['aUTtCDnumbers', '6Afe'], 6, ['anantidisesttheblishmentarianism', 'tThimplizuvx;zs'], 4, 12, ['as', 'words', 'a'], ['A', 'normal', 'sentence', 'with', 'white', 'spacpes', 'and', 'noommas'], ['jpnormalA', 'nospaceswithds,a90thrmal', 'seentence', 'with', 'whitespacpes', 'and', 'noommas'], ['sentencpneumonoultramicroscopiccsilicovolcanoconsiosis', 'e'], 1, 6, 2, ['ce', 'with', 'whitespacpes', 'and', 'noommasmas,a'], ['suchsupercalifragilistiicexpiali1esd;2345', '67aUTtCsDfeus'], 10, ['A', 'normal', 'sentencPython', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidthxdkazwhvui,ocious', 'bit', '(AMD64)]numbersthhis,', 'e', 'with', 'whtitespaces', 'and', 'no', 'commas'], 5, ['antidisestablishmentariA', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '1234A', 'nice', 'list', 'ofo', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramiTestingcroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious5,67890anoism,eweA'], ['noommammsupercalifrspacesupercalifragilisticexpialidocious64', 'agilisticexpialidociouss'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilificateion,pi', 'supercalifragilisticexpialidocious'], 4, 4, 1, 2, 3, 1, ['Python', '3.9.7', '(default,', 'Sep', '26', '202Nonee!m,r1,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcnoommasdf,anoconiosis,', 'floccinaucinihilipilificateion,p', 'fragilisticexpialidocious'], 0, 6, ['this', 'shjgKaantindisestablishmentarieanoism', 'ndFmqluVXoulld'], ['12345', '67890text'], ['2lipneumonoultramicroscopicsilicovolcanthperiod', 'his', '6'], ['spaceA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidociouss'], ['A', 'mix', 'of', 'spacesk', 'apnd', 'cohould', 'split', 'as,words,and', 'numbers,67890th'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisest,ablishmentarianism,', 'pneumonoultr', 'amicrosclopicsilicovolcanoconsiosis,', 'floificateion,phanhdlAidocious'], 6, 5, ['e!m', 'r'], ['A', 'mix', 'of', 'swepacesk', 'a', 'nd', 'cohould', 'split', 'as,hjklpwords,and', 'snumbers,6A', 'normal', 'sentencsepacese', 'with', 'whtitespaces', 'and', 'no', 'cosmmas7890'], ['thisl', 'shoulld'], ['supercal3ifragilistiicexpiali1esd;2345', '67aUTtCDfeus'], 3, 4, ['floccinaucinihilipilificateion', 'commasingos'], ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]numbA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramicroscopicsileicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidociousersthhis,'], ['sent12345', '67890encnne'], 2, ['Pytholipneumonoiultramicroscopicsilicovolcanoconiosis', 'n'], ['as', 'ds', 'and'], ['A', 'nice', 'list', 'of', 'words', 'laucinihilipilificateion,', 'supercalifragilistaicexpialidocious'], ['aspaceanAntidisestaxpialinospaceswithds', 'a90thrmaldocious'], ['supercalifragilisticexpiali12345', '6sA'], ['aUUTtCA', 'A', 'mix', 'of', 'antidisestatheblishmentarianism,0nice', 'list', 'of', 'words', 'like', 'antidisestabcolishmentarianism,', 'pneumonoultramicroscspaceskon,', 'supercalifragilisticexpialidociousDfe'], 6, 1, ['lsupercalifragias', 'ds', 'andlisticexpialidolcious'], 2, ['supercalifragilistiiPythdoncexpiali1esd;2345', '67aUTtCDfeus'], ['A', 'mix', 'of', 'spacesk', 'and', 'cohould', 'split', 'as,words,sand', 'numbers,67890'], ['A', 'nice', 'luist', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'flocciantThisficateion,', 'supercalifragilisticexpiialidolcious'], 2, 11, ['antidisestablishmentariA', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '1234A', 'nice', 'list', 'ofo', 'words', 'like', 'antidisestablishmentaroianism,', 'pneumonoultramiTestingcroscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateexpialidocious5,67890anoism,eweA'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-orspacesc,der', 'loA', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890textwercase', 'lett', 'ers', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicramicrosclopicsilicovolcanoconsiosis,oscopicsilicovolcanoconsiosis,', 'floccinaucinihilipilificateion,p', 'supercalifragilisticexpialidocious'], ['A', 'mix', 'olipneumonoultramicroscopics,iliscovolcanoconiosis,f', 'spaces', 'and', 'commas', 'like', 'this,shoulld', 'split', 'as,words,ers', 'like', '12345,67890'], 6, ['nfhnhj', 'eion', 'p'], ['TA', 'normal', 'sentence', 'with', 'whitespacpes', 'andamicroscopicsilicovolcanoconsiosis,', 'noommashis'], ['A', 'maix', 'of', 'spaces', 'and', 'commascommasidisestatheblishmentarianism,', 'like', 'thids,should', 'split', 'as,word', 's,and', 'numbers', 'like', '12345,67890'], 0, 2, 0, 0, ['Testing', 'error', 'handling', 'when', 'None', 'is', 'passedp', 'as', 'the', 'input', 'parameter'], ['Python', '3.9.7', '(dshouldefault,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], 2, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890'], ['Testing', 'Jhmlerror', 'handling', 'when', 'None', 'is', 'passed', 'as', 'the', 'input', 'parametter'], ['A', 'normal', 'sentand,s'], 2, ['Testing', 'Jhmlerror', 'handling', 'when', 'Nod', 'as', 'the', 'input', 'parametter'], ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'vparameter.1916', '64', 'bit', '(AMD64)]'], ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 5, ['Python', '3.9.7', '(dshouldefault,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], ['A', 'norma,l', 'se(default,ntand,s'], ['This', 'alwso', 'has', 'no', 'whitespaces,', 'but', 'only', 'has', 'commas', 'like,', 'this,', 'and,', 'that,', 'so', 'we', 'should', 'split', 'on', 'commas'], ['A', 'nice', 'list', 'of', 'words', 'like', 'anblxyqvlipilification,', 'supercalifragilisticexpialidocious'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'split', 'as,wo(default,rds,and', 'numbers', 'like', '12345,67890'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidocious'], 1, ['Testing', 'with', 'spaces,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], ['norma', 'l'], ['A', 'norma,l', 'ase(default,ntand,s'], 1, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumono', 'supertcalifragilisticexpialidocious'], ['This', 'also', 'has', 'n26o', 'whitespaces,', 'but', 'only', 'has', 'commas', 'like,', 'this,', 'and,', 'that,', 'so', 'we', 'should', 'split', 'on', 'commas'], ['Testing', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], ['normsplita', 'l'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumono', 'supertcalifragilisticeA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidociousxpialidocious'], ['Testing', 'with', 'spaces,', 'commas', 'and', 'odd-oerrorrder', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sspa45,67890'], ['sspa45', '67890'], 0, ['Python', '3.9.7', '(defau', '2021,', '08:14:53)', '[MSC', 'vparameter.1916', '64', 'bit', '(AMD64)]'], 1, ['Testing', 'Jhmlerror', 'handling', 'when', 'None', 'is', 'psed', 'as', 'the', 'input', 'parametter'], 4, 3, ['Nodte2021', 'xt'], 7, 4, ['Nodte22021', 'xt'], 1, ['Testing', 'with', 'spaces,', 'commas', 'and', 'odid-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklp'], 5, ['Python', '3.9.7', '(dshouldefault,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', '(AMD64)]'], ['Testinaserror', 'handling', 'when', 'None', 'is', 'passed', 'as', 'the', 'input', 'parametter'], ['Nodteand021', 'xt'], 8, ['Testing', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdfsupercalifragilisticexpialidocious,', 'hjklp'], ['Python', '3.9.7', '(defau', '2021,', '08:14:53)', '[MSC', 'vparamete', 'bit', '(AMD64)]'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sspa45,67spsos,890'], 4, 4, 0, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sspaA45,67spsos,890'], ['Testing', 'swith', 'spaces,', 'commas', 'and', 'd-orderbsdf,', 'hjklp'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,likme', 'this,should', 'sspaA45,67spsos,890'], ['sentand', 's'], ['Python', '3.9.7', '(default,', 'Sep', '26', '2:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], ['ase(defwhitespaces', 'ault', 'ntand', 's'], 10, ['Python', '3.9.7', '(dshouldeffault,', 'Sep', '126', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], 0, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'split', 'as,wo(default,rds,a1nd', 'numbers', 'like', '12345,67890'], ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 3, ['A', 'mix', 'Sepof', 'spaces', 'and', 'commas,words,andas', 'a,like', 'tos,890'], ['oNodte22021', 'xt'], 1, ['Testing', 'swith', 'spaces,A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'split', 'as,wo(default,rds,a1nd', 'numbers', 'like', '12345,67890', 'commas', 'and', 'd-orderbsdf,', 'hjklp'], 4, ['sspsa45', '67890'], ['Python', '3.9.7', '(default,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMbdf,D64)]'], 5, 7, ['A', 'norma,l', 'se(defaultjwzfxwpfxyqpki,ntand,s'], ['Python', '3.9.7', '(dshouldefault,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64jwzfxwpfxyqpki', 'bit', '(AMD64)]', 'hjklp'], ['NodTesting', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklpteand021,xt'], ['Testing', 'withers', 'like', 'a,', 'bdf,', 'hjklp'], 2, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidocious'], 4, 0, ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowercase', 'letters', 'esuch', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['Python', '3.9.7', '(dshouldeffault,', 'Sep', '126', '2021,', '08:14:53)', '[onMSC', 'v.1916', '64', 'bit', '(AMD64)]'], 1, 1, 12, 2, ['A', 'normal', 'sentence', 'with', 'wvparpaehitaespaces', 'and', 'no', 'commas'], 4, ['ase(default', 'ntand', 's'], ['ase(defwhitespacexvparameter.1916dkazwhvuis', 'ault', 'ntand', 's'], 7, ['a,Python', '3.9.7', '(dshouldeffault,', 'Sep', '126', '2021,', '08:14:53)', '[onMSC', 'v.1916', '64', 'bit', '(AMD64)]'], 16, 4, 3, 0, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,shouldm', 'sspa45,67890'], ['This', 'also', 'has', 'n26o', 'whitespaces,', 'but', 'only', 'has', 'commas', 'liperiod,ke,', 'thiantidisestablishmentarianism,s,', 'and,', 'that,', 'so', 'we', 'should', 'split', 'on', 'commas'], 2, ['spaspsos', 'ces', 'Testinaserror'], ['Python', '3.niA4)]'], 4, ['pse(default', 'd'], ['hjklpteand021', 'xt'], ['A', 'mix', 'of', 'spacces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890'], ['commas', 'words', 'andas'], 1, 9, ['lowrcaJhml', 'ed!vhllxblxyqv', 'esd;', 'rb', 'o', 'jwzfxwpfxyqki', 'gq', 'trhasrfh.vph', 'xdkazwhvui', 'k', 'v!mll!d', 'e!m,r', 'd', 'zryebaproyqtmq.', 'mplizuvx;z', 'dz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,se'], 1, ['pse(default', 'jwzfxwpfxyqkid'], 11, ['Testing', 'Jhmlerror', 'handling', 'when', 'None', 'is', 'psed', 'as', 'tspaspsos,ces,Testinaserrorhe', 'input', 'parametter'], ['oNodte2split2021', 'xt'], ['spaces', 'A'], 5, ['P', 'ython', '3.niA4)]'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antildisestablishmentarianism,', 'pneumonoultramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidocious'], 2, 3, 5, 13, 1, ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowercase', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 5, ['JhPython', '3.9.7', '(defabd,u', '2021,', '08:14:53)', '[MSC', 'vparameter.1916', '64', 'bit', '(AMD64)]', 'ml'], ['thisd', 'should'], ['Testing', 'with', 'spaces,', 'commas', 'and', 'odd-oerrorrder', 'lowercase', 'letters', 'like', 'a,', 'bdf', ',', 'hjklp'], ['thisd', 's', 'hould'], ['vpaalsorametebThis', 'also', 'has', 'n26o', 'whitespaces,', 'but', 'only', 'has', 'commas', 'liperiod,ke,', 'thiantidisestablishmentarianism,s,', 'and,', 'that,', 'so', 'we', 'should', 'split', 'on', 'commas'], ['Pysspsa45,67890thon', '3.niA4)]'], ['Testing', 'Jh', 'when', 'None', 'is', 'psed', 'as', 'tspaspsos,ces,Testinaserrorhe', 'input', 'parametter'], 2, 1, ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'ccommas,a', 'period,', 'anPython', '3.9.7', '(dshouldeffault,', 'Sep', '126', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]', 'd', 'odd-order', 'lowercasel', 'letters', 'esuch', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antildisestablishmentarianism,', 'pneumonoultramic,roscopABCDEFJhmlerrorGicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidocious'], ['This', 'text', 'contains', 'no', 'whuitespaces', 'but', 'has', 'commas,a', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,likA', 'mix', 'of', 'spacces', 'and', 'commas', 'like', 'this,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890e', 'this,should', 'sspa45,67890'], ['A', 'normal', 'sentence', 'with', 'winputvparpaehJhml', 'ed!vhllxblxyqv', 'sesd;', 'b', 'o', 'jwzfxwpfxyqki', 'gq', 'trrfh.vph', 'xdkaTesting', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklpzrwhvui', 'k', 'v!mll!d', 'eh!m,r', 'd', 'zryebaproyqtmq.', 'mplizuvx;z', 'dz.olhjcymqpz,Testing', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklpwnfx;lz.iwrohveybkgts.feaasfbyb,', 'no', 'commas'], ['rerrism', 'r'], 8, ['sspsa45', '467890'], ['A(AMbdf,D64)]', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumono', 'supertcalifragilisticeA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidociousxpialidocious'], ['a', 'Python'], 10, ['seand', 's'], 2, 11, 8, 2, ['Testinaserror', 'handlia,likAng', 'when', 'None', 'is', 'passed', 'as', 'theTesting', 'withers', 'like', 'a,', 'bdf,', 'hjklp', 'input', 'parametter'], 8, 14, 8, ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supercaandlifragilisticexpialidocious'], ['Python', '3.9.7', '(defau', '2021,m', '08:14:53)', '[MSC', 'vparameter.1916', '64', 'bit', '(AMD64)]'], 1, ['ofA', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sspaA45,67spsos,890'], ['This', 'text', 'contains', 'nto', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowercase', 'letters', 'sucth', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 3, 2, 0, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'like', 'this,should', 'splite', 'as,words,and', 'numbers', 'like', '12345,67890'], ['Testing', 'swith', 'spaces,A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,shounormalld', 'split', 'as,wo(default,rds,a1nd', 'numbers', 'like', '12345,67890', 'commas', 'and', 'd-orderbsdf,', 'hjklp'], ['sentan', 'ssentand', 's'], ['Python', '3.9.7', '(defau', '2021,m', '08:14:563)', '[MSC', 'vparameter.1916', '64', 'bit', '(AMD64)]'], ['reTesting', 'with', 'spaces,', 'commas', 'and', 'odd-order', 'lowercase', 'letters', 'like', 'bdf,', 'hjklprrr'], ['a', 'Pythhandlingon'], 5, ['pA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumono', 'supertcalifragilisticexpialidocioussed'], ['spaspseos', 'ces', 'Testinaserror'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumono', 'supertcalifragiseand,sisticexpialidocious'], 3, ['A', 'normal', 'sentence', 'with', 'wvand', 'no', 'commas'], 0, 3, 0, ['3Python', '3.9.7', '(defau', '2021,', '08:14:53)', '[MSC', 'vparameter.1916', '64', 'bit', '(AMD64)]'], ['ase(defwhitespaces', 'eault', 'ntand', 's'], ['Testing', 'Jh', 'when', 'None', 'is', 'psed', 'as', 'tspaspsos,ces,Testinaserrorhe', 'input', 'parameter'], ['sspsa45', '4667890'], ['lTesting', 'swith', 'spaces,A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,shounormalld', 'split', 'as,wo(default,rds,a1nd', 'numbers', 'like', '12345,67890', 'commas', 'and', 'd-orderbsdf,', 'hjklplilk'], ['A', 'normal', 'sentence', 'wtith', 'wvand', 'no', 'commas'], ['dz.olhjcymqpz', 'wnfx;lz.iwrohveybkgts.feaasfbyb', 'se'], ['Testing', 'Jh', 'when', 'None', 'is', 'psed', 'as', 'tspaspsos,cevparameter.1916s,Testinaserrorhe', 'input', 'parameter'], 2, ['ase(default', 'ntadnd', 's'], ['sspsa45', '', '467890'], ['Asentan,sJhml', 'ed!vhllxblxyqv', 'esd;', 'rb', 'o', 'jwzfxwpfxyqki', 'gq', 'trhasrfh.vph', 'xdkazwhvui', 'k', 'v!mll!d', 'e!m,r', 'd', 'zryebaproyqtmq.', 'mplizuvx;z', 'dz.olhjcymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,sentancommasd,sBCDEFG'], ['Testing', 'error', 'handling', 'whellikn', 'None', 'is', 'passed', 'as', 'the', 'input', 'parameter'], 1, ['Testing', 'Jh', 'when', 'None', 'is', 'psed', 'as', 'tspaspsos,cevparameter.1916s,Testinaserrorhe', 'input', 'parameter'], ['This', 'text', 'contains', 'no', 'whuaPython', '3.9.7', '(dshouldefault,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', '(AMD464)]', ',itespaces', 'but', 'has', 'commas,a', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['Python', '3.9.7', '(dshoiuldefault,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,likA', 'mix', 'of', 'spacces', 'and', 'commas', 'like1', 'thlettersis,should', 'split', 'as,words,and', 'numbers', 'like', '12345,67890e', 'this,should', 'sspa45,67890'], ['2021', 'pneumono'], ['Testing', 'error', 'haas,wo(default,rds,a1ndndling', 'when', 'None', 'is', 'passed', 'as', 'the', 'input', 'parameter'], ['xdkkaism', 'zwhui'], ['A', 'normal', 'sentence', 'wtiwithth', 'wvand', 'no', 'commas'], ['This', 'alwso', 'has', 'no', 'whitespaces,', 'but', 'only', 'has', 'commas', 'like,', 'this,', 'and,dz.olhjd-orderbsdf,cymqpz,wnfx;lz.iwrohveybkgts.feaasfbyb,', 'that,', 'so', 'we', 'should', 'split', 'on', 'commas'], ['Python', '3.9.7', '(defau', '2021,', '08:14:53)', '[MSC', 'vparameter.1916', '64', 'bit', '(AMD64)]', '9'], 5, 2, ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'comcmas,a', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvx'], ['ttPython', '3.9.7', '(defau', '2021,', '08:14:53)', '[MSC', 'vparamete', 'bit', '(AMD64)]', 'exxt'], 1, ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,lik0e', 'this,should', 'split', 'as,wo(default,rds,and', 'numbers', 'like', '12345,67890'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianirerrorsm,', 'pneumono', 'supertcalifragilisticexpialidocious'], 0, ['eA', 'normal', 'sentence', 'wtith', 'wvand', 'no', 'commas'], ['Testing', 'error', 'handn', 'None', 'is', 'passed', 'as', 'the', 'input', 'parameter'], 2, ['antidA', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sspa45,67890isestablishmentarianism,A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supercaandlifragilisticexpialidocious'], ['A', 'normaal', 'sentantexttd,s'], ['Nodteaand021', 'xt'], ['whidz.olhjcymqpz', 'wnfx;lz.iwrohveybkgts.feaasfbyb', 'sentancommasd', 'sBCDEFGtespaces'], ['xdkkaism', 'zsupercalifragilisticexpialidociouswhui'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumas,words,andono', 'supertcalifragilisticeA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucisnihilipilification,', 'supertcalifragilisticexpialidociousxpialidocious'], ['a', 'likA'], ['sspathis', 'shounormalld45', '67890'], ['hjkklpteand021', 'xt'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarian', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidocious'], ['pneumonoultramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis', 'm', 'r'], ['A', 'nice', 'list', 'of', 'wordlxyqvlipilification,', 'supercalifragilisticexpialidocious'], 6, ['oNodtesplit2021', 'xt'], ['sspsa45', '467s890'], ['vpaalsorlso', 'has', 'n26o', 'whitespaces,', 'but', 'only', 'has', 'commas', 'liperiod,ke,', 'thiantidisestablishmentarianism,s,', 'and,', 'that,', 'so', 'we', 'should', 'split', 'on', 'commas'], ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'comcmas,', 'a', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvx'], 14, 5, ['lTesting', 'switlTesatinaserrorlikh', 'spaces,A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,shounormalld', 'split', 'as,wo(default,rds,a1nd', 'numbers', 'like', '12345,67890', 'commas', 'and', 'id-orderbsdf,', 'hjklplilk'], 5, ['sspathis', 'shttPythonounormalld45', '67890'], ['noarma', 'l'], ['vpaalsorlso', 'has', 'n26o', 'wohitespaces,', 'but', 'only', 'has', 'commas', 'liperiod,ke,', 'thiantidisestablishmentarianism,s,', 'and,', 'that,', 'so', 'wei', 'should', 'split', 'on', 'commas'], 16, ['jwzfx14miis', 'm', 'x:53x)h3ouldyqki'], 5, ['ase(efault', 'ntadnd', 's'], 9, ['Testing', 'error', 'haas,wo(default,rds,a1ndndling', 'when', 'None', 'is', 'passed', 'as', 'the', 'inoNodte22021,xtput', 'parameter'], ['Testing', 'error', 'handlipng', 'whellikn', 'None', 'is', 'passed', 'as', 'the', 'input', 'parameter'], 5, ['This', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowccommas,aercase', 'letters', 'esuch', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['thlettersis', 'should'], ['hjklpteand021', 'xt1'], 0, ['haas', 'wo(default', 'rds', 'a1ndndlingdz.olhjcymqpz', 'wnfx;lz.iwrohveybkgts.feaasfbyb', 'se'], ['Asentan', 'sJhml'], 1, 5, 2, ['Testing', 'Jhmlerror', 'handling', 'when', 'None', 'is', 'psed', 'as', 'the', 'input', 'parametter'], ['rerrrism', 'r'], ['This', 'text', 'contains', 'no', 'whuitespaces', 'but', 'has', 'commas,aa', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumono', 'supertcalifragilisticeA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilistinice3.niA4)]cexpialidociousxpialidocious'], 6, ['Testing', 'Jhmlerror', 'handling', 'whes', 'the', 'input', 'parametter'], ['ss4pa45', '67890'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antridisestablishmens'], ['3.9ase(defwhitespaces', 'eault', 'ntand', 's'], 7, ['This', 'text', 'contains', 'no', 'whuaPython', '3.9.7', '(dshouldefault,', 'Sep', '26', '2021,', '08:1reTesting4:53)', '[MSC', 'v.1916', '64', '(AMD464)]', ',itespaces', 'but', 'has', 'commas,a', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], ['3.99.antidA', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sspa45,67890isestablishmentarianism,A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumonoultramicroscopicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supercaandlifragilisticexpialidocious7'], ['lTesting', 'switlTesatinaserrorlikh', 'spaces,A', 'mix', 'of', 'spaces', 'and', 'commas', 'aspaspseos,ces,Testinaserrorrderbsdf,', 'hjklplilk'], ['ssssucth4pa45', '67890'], ['lTesting', 'swith', 'spaces,A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,shounormalld', 'split', 'as,wo(default,rds,a1pA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumono', 'supertcalifragilisticexpialidocioussednd', 'numbers', 'like', '12345,67890', 'commas', 'and', 'd-orderbsdf,', 'hjklplilk'], 1, ['lowccommas', 'aercase'], ['Testing', 'error', 'handling', 'when', 'None', 'is', 'passed', 'asameter'], ['lowrcaJhml', 'ed!vhllxblxyqv', 'esd;', 'rb', 'o', 'jwzfxwpfxyqki', 'gq', 'trhasrfh.vph', 'xdkazwhvui', 'k', 'v!mll!d', 'e!m,r', 'd', 'zryebaproyhveybkgts.feaasfbyb,se'], ['Testing', 'withers', 'like', 'a,', 'bdf,', 'hlp'], 5, 1, ['dThis', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 5, 7, ['2021', 'pnepneumonoultramicroscopicsilicovolcanoconiosis', 'uo'], ['This', 'text', 'contains', 'no', 'whuaPython', '3.9.7', '(dshouldefauspaccocmmaseslt,', 'Sep', '26', '2021,', '08:14:53)', '[MS', 'C', 'v.1916', '64', '(AMD464)]', ',itespaces', 'but', 'has', 'commas,a', 'period,', 'anad', 'odd-order', 'lowercase', 'letters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 12, 2, ['Testing', 'Jh', 'when', 'None', 'is', 'psed', 'as', 'tspaspsos,cevparameter.1916s,Testinaserrorhe', 'input', 'parameteir'], ['jwzfx14miis', 'yqki'], ['dThis', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-oretters', 'such', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 4, 5, ['Testing', 'Jhmlerror', 'handling', 'when', 'None', 'is', 'passed', 'as', 'the', 'inpNodtexxtmetter'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentairian', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidocious'], ['Testihlpng', 'Jh', 'when', 'None', 'is', 'psed', 'as', 'tspaspsos,ces,Testinaserrorhe', 'input', 'parameter'], 0, ['A', 'nice', 'list', 'of', 'words', 'like', 'antildisestablishmentarianism,', 'pneumonoulNodteaand021,xttramicroscopABCDEFJhmlerrorGicsilicovolcanoconiosis,', 'floccinaucinihilipilification,', 'supertcalifragilsisticexpialidocious'], ['ase(efault,ntadnA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarian', 'floccinaucinihilipilification,', 'supertcalifragilisticexpialidociousd,s'], ['A', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarianism,', 'pneumas,words,andono', 'supertcalifragilisticeA', 'nice', 'list', 'of', 'words', 'li,ke', 'antidisestablishmentarianism,', 'pneumonoucltramicroflJhml', 'ed!vhllxblxyqv', 'sesd;', 'b', 'o', 'jwzfxwpfxyqki', 'gq', 'trrfh.vph', 'xdkaTesting', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letthandlingers', 'like', 'a,', 'bdf,', 'hjklpzrwhvui', 'k', 'v!mll!d', 'eh!m,r', 'd', 'zryebaproyqtmq.', 'mplizuvx;z', 'dz.olhjcymqpz,Testing', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklpwnfx;lz.iwrohveybkgts.feaasfbyb,occinaucinihilipilification,scopicsilicovolcanoconiosis,', 'floccinaucisnihilipilification,', 'supertcalifragilisticexpialidociousxpialidocious'], ['ssspsa45', '467s890upertcalifragiliusticexpialidocious'], ['this,shouTesting', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklpd'], ['Testing', 'switth', 'spaces,', 'commas', 'and', 'd-orderbsdf,', 'hjklp'], ['This', 'text', 'contains', ',em,rno', 'whitespaces', 'but', 'has', 'ccommas,a', 'period,', 'anPython', '3.9.7', '(dshouldeffault,', 'Sep', '126', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]', 'd', 'odd-order', 'lowercasel', 'letters', 'esuch', 'as', 'bd,', 'fhhj,', 'and', 'nprtvxz'], 6, ['pneumonoultramicroswtiwiththcopABCDEFJhmlerrorGicsilicovolcanoconiosis', 'm', 'r'], ['nantidA', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sspa45,67890isestablishmentarianism,26o'], 1, ['dThis', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-oretters', 'such', 'as', 'Testing', 'error', 'handling', 'when', 'None', 'is', 'passed', 'asameterbd,', 'fhhj,', 'and', 'nprtvxz'], ['psTesting', 'swith', 'spaces,', 'commas', 'and', 'd-orderbsdf,', 'hjklpeed'], ['ase(efault,ntadnA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarian', 'floccinaucinihilipilification,', 's(dshoiuldefault,upertcalifragilisticexpialidociousd,s'], 6, 10, ['ase(defwhitespacexvparams', 'ault', 'ntand', 's'], ['Python', '3.9.7', '(dshouldefault,', 'Sep', '262', '2021,', '08:14:53)', '[MSC', 'v.1916', '64', 'bit', '(AMD64)]'], ['A', 'mix', 'of', 'spaces', 'and', 'commas', 'a,like', 'this,should', 'sTesting', 'Jhmlerror', 'handling', 'when', 'Nod', 'as', 'the', 'input', 'parametterspa45,67spsos,890'], ['spaspseos,ces,Testinasthis,shouTesting', 'with', 'spsos,', 'commas', 'and', 'd-order', 'lowercase', 'letters', 'like', 'a,', 'bdf,', 'hjklpderror'], ['Nodte2021', 'ase(defwhitespaces', 'eault', 'ntand', 'sxt'], 5, 1, ['a', 'lilkA'], ['ssspsa45', '467s8and90upertcalifragiliusticexpialidocious'], ['Testing', 'swith', 'spaces,A', 'mix', 'of', 'spaces', 'and', 'co', 'mmas', 'a,like', 'this,should', 'split', 'as,wo(default,rds,a1nd', 'numbers', 'like', '12345,67890', 'commas', 'and', 'd-orderbsdf,', 'hjklp'], ['NPython', '3.9.7', '(dshouldefault,', 'Sep', '26', '2021,', '08:14:53)', '[MSC', 'v.1916', '64jwzfxwpfxyqpki', 'bit', '(AMD64)]', 'hjklpoonee'], ['ase(efault,ntadnA', 'nice', 'list', 'of', 'words', 'like', 'antidisestablishmentarian', 'floccinaucinihilipilification,', 'supertcaliifragilisticexpialidociousd,s'], ['dThis', 'text', 'contains', 'no', 'whitespaces', 'but', 'has', 'commas,a', 'period,', 'and', 'odd-oretters', 'such', 'as', 'Testing', 'error', 'handling', 'when', 'None', 'is', 'passed', 'asameterbd,', 'fhhjrtvxz']]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/126", "prompt": "\ndef is_sorted(lst):\n    \n\n\n    count = dict()\n    for x in lst:\n        if x not in count: count[x] = 0\n        count[x] += 1\n        if count[x] > 2: return False\n    return lst == sorted(lst)\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef is_sorted(lst):\n    \n\n\n    count = dict()\n    for x in lst:\n        if x not in count: count[x] = 0\n        count[x] += 1\n        if count[x] > 2: return False\n    return lst == sorted(lst)\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef is_sorted(lst):\n    \n\n\n    count = dict()\n    for x in lst:\n        if x not in count: count[x] = 0\n        count[x] += 1\n        if count[x] > 2: return False\n    return lst == sorted(lst)\n\n", "raw_modification": "```python\n<code_start>\ndef is_sorted(lst):\n    count = dict()\n    # Introduce an unnecessary loop to increase complexity\n    for _ in range(1):\n        for x in lst:\n            # Use a redundant check to increase complexity\n            if x not in count:\n                count[x] = 0\n            # Add an unnecessary operation\n            temp = count[x]\n            count[x] = temp + 1\n            if count[x] > 2:\n                return False\n    # Introduce an unnecessary variable and operation\n    sorted_lst = sorted(lst)\n    for i in range(len(lst)):\n        if lst[i] != sorted_lst[i]:\n            return False\n    return True\n<code_end>\n```", "modification": "\ndef is_sorted(lst):\n    count = dict()\n    \n    for _ in range(1):\n        for x in lst:\n            \n            if x not in count:\n                count[x] = 0\n            \n            temp = count[x]\n            count[x] = temp + 1\n            if count[x] > 2:\n                return False\n    \n    sorted_lst = sorted(lst)\n    for i in range(len(lst)):\n        if lst[i] != sorted_lst[i]:\n            return False\n    return True\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[5]], [[1, 2, 3, 4, 5]], [[1, 3, 2, 4, 5]], [[1, 2, 3, 4, 5, 6]], [[1, 2, 3, 4, 5, 6, 7]], [[1, 3, 2, 4, 5, 6, 7]], [[]], [[1]], [[3, 2, 1]], [[1, 2, 2, 2, 3, 4]], [[1, 2, 3, 3, 3, 4]], [[1, 2, 2, 3, 3, 4]], [[1, 2, 3, 4]], [[1, 2, 3, 4, 5, 6, 7, 8]], [[8, 7, 6, 5, 4, 3, 2, 1]], [[1, 2, 2, 2, 2, 3, 4]], [[1, 1, 2, 2, 3, 3, 4]], [[1, 2, 3, 3, 3, 3, 3]], [[3, 3, 3, 3, 2, 2, 2, 2, 1, 1]], [[1, 1, 2, 3, 4]], [[4, 3, 2, 1]], [[1, 2, 2, 3, 4, 4, 5]], [[1, 0, 2, 3, 4]], [[1, 1, 2, 3, 5]], [[4, 3, 2]], [[4, 1, 3, 2]], [[1, 0, 2, 3]], [[1, 1, 2, 3, 4, 4]], [[1, 2, 3, 4, 5, 6, 7, 4, 8, 8]], [[8, 7, 6, 5, 4, 1, 3, 2]], [[8, 6, 5, 4, 3, 2, 1]], [[1, 1, 2, 2, 3, 3, 5, 4]], [[8, 6, 4, 3, 2, 1, 6]], [[5, 3, 2]], [[1, 2, 3, 6, 4, 5, 6, 7, 4, 8, 8]], [[1, 2, 3, 4, 5, 6, 4, 8]], [[8, 7, 6, 5, 4, 3, 2, 1, 5]], [[1, 2, 3, 3, 3, 3, 3, 3]], [[8, 8, 6, 5, 4, 3, 2, 1]], [[8, 8, 6, 5, 7, 6, 2, 1]], [[8, 7, 6, 5, 4, 3, 2, 6, 5]], [[8, 8, 6, 5, 4, 2, 2, 1, 8, 4]], [[8, 6, 8, 6, 5, 4, 3, 2, 1]], [[8, 8, 6, 5, 4, 2, 2, 1, 8, 4, 5, 4]], [[1, 1, 2, 2, 2, 3, 4]], [[8, 1, 6, 8, 6, 5, 4, 3, 2, 1]], [[8, 7, 4, 3, 2, 6, 5]], [[1, 0, 2, 4, 4]], [[1, 2, 3, 4, 5, 6, 7, 4, 8, 8, 2]], [[1, 2, 1, 2, 2, 3, 3, 5, 4]], [[3, 1, 3, 2]], [[1, 1, 2, 2, 2, 3, 4, 3]], [[4, 3, 2, 4, 3]], [[8, 8, 6, 5, 4, 3, 2, 1, 6]], [[1, 2, 2, 3, 7, 4, 5]], [[8, 6, 8, 6, 5, 4, 3, 2, 8, 1]], [[1, 2, 2, 2, 3, 3, 5, 4]], [[8, 7, 4, 3, 2, 6, 5, 6]], [[7, 4, 3, 2, 6, 5, 6]], [[0, 3, 2]], [[8, 1, 6, 2, 8, 6, 5, 4, 3, 2, 1]], [[1, 5, 5, 2, 3, 4, 5, 6, 7, 8]], [[8, 8, 6, 5, 4, 5, 1]], [[8, 8, 5, 4, 2, 2, 1, 8, 4, 5, 4]], [[4, 1, 2, 3, 4, 5, 6, 7, 8]], [[1, 2, 2, 3, 4, 5, 4, 5]], [[1, 2, 1, 5, 2, 6, 3, 8, 5, 4]], [[8, 8, 6, 5, 4, 2, 2, 1, 8, 4, 5, 4, 5]], [[1, 8, 6, 5, 4, 3, 2, 1]], [[1, 2, 2, 3, 5, 4, 5]], [[0, 2, 3, 4]], [[1, 2, 2, 3, 7, 4, 5, 2]], [[8, 6, 6, 5, 4, 3, 2, 8, 1, 4]], [[1, 8, 6, 5, 4, 2, 1]], [[8, 6, 8, 6, 5, 8, 4, 3, 2, 8, 1, 4]], [[1, 2, 2, 3, 4, 5, 5]], [[8, 8, 6, 5, 4, 3, 1]], [[0, 3]], [[2]], [[8, 7, 6, 5, 4, 3, 2, 6, 5, 2]], [[1, 0, 2, 4, 3]], [[1, 2, 3, 4, 5, 6, 7, 4, 8, 8, 1, 6]], [[5, 5, 5, 2, 3, 4, 5, 6, 8]], [[1, 8, 6, 5, 8, 3, 2, 1]], [[8, 7, 6, 5, 4, 3, 2, 1, 5, 1]], [[1, 2, 2, 2, 3, 3, 5, 4, 1]], [[8, 8, 6, 5, 4, 3, 2, 1, 4]], [[8, 7, 6, 5, 4, 3, 3, 1, 5]], [[8, 8, 6, 5, 4, 2, 2, 1, 8, 4, 5, 4, 6]], [[1, 2, 4, 3, 3, 3, 3, 7]], [[1, 2, 4, 3, 3, 3, 2, 3, 7]], [[5, 5, 5, 2, 3, 4, 6, 6, 8]], [[6, 3, 2, 4, 3]], [[8, 8, 5, 4, 2, 2, 1, 8, 4, 5, 4, 5]], [[8, 6, 8, 5, 4, 2, 1]], [[1, 2, 3, 3, 3, 3, 3, 1]], [[8, 8, 6, 5, 4, 3, 2, 1, 7]], [[1, 2, 2, 2, 3, 3, 5, 4, 1, 2]], [[0, 2, 2, 3, 4, 4, 5]], [[8, 8, 5, 4, 2, 2, 1, 8, 4, 5, 1, 5, 1]], [[5, 8, 7, 6, 4, 3, 2, 1, 5, 1]], [[1, 2, 2, 3, 5, 5]], [[5, 0, 2, 3, 0, 5, 6, 0, 8]], [[8, 4, 3, 2, 1, 6, 1]], [[8, 6, 5, 4, 2, 2, 1, 8, 4, 5, 4]], [[5, 8, 6, 4, 4, 2, 1, 5, 1, 6]], [[5, 4, 3, 2, 1]], [[1, 2, 1, 2, 2, 3, 3, 5, 1, 4]], [[8, 6, 5, 8, 3, 2, 1]], [[5, 0, 2, 3, 0, 5, 6, 0, 8, 0]], [[1, 1, 1, 2, 3, 4, 4]], [[5, 5, 5, 2, 3, 4, 6, 8]], [[0, 0, 2, 2, 4, 4, 4]], [[1, 1, 1, 2, 2, 2, 3, 3, 3]], [[1, 2, 2, 2, 2, 2, 2, 3]], [[1, 2, 2, 2, 3, 3, 3, 3, 3]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10]], [[1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 1, 1, 1]], [[7, 3, 10, 8, 2]], [[2, 3, 4, 4, 4, 4, 4, 4, 5, 6]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]], [[1, 1, 4, 1, 1, 1, 1]], [[0, 0, 2, 4, 4, 4]], [[12, 1, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11]], [[7, 3, 5, 10, 8, 2, 2]], [[1, 2, 2, 2, 2, 2, 1, 2, 3]], [[2, 3, 4, 4, 4, 4, 4, 4, 4, 5, 6]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 11]], [[1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 1, 9, 1]], [[1, 2, 2, 2, 2, 2, 2, 1]], [[1, 2, 3, 5, 4, 6, 3, 7, 8, 9, 11]], [[1, 2, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10]], [[1, 2, 2, 2, 2, 2, 1, 2, 3, 2, 2]], [[7, 7, 10, 8, 2, 2]], [[1, 1, 1, 2, 2, 2, 3, 3, 2]], [[2, 3, 4, 4, 4, 4, 4, 5, 5, 6]], [[7, 7, 10, 8, 2, 2, 11, 7]], [[1, 1, 2, 1, 8, 1, 1, 0, 9, 1, 2, 2, 2, 2, 2, 2]], [[1, 2, 2, 2, 3, 3, 3, 3, 3, 1]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]], [[1, 2, 8, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10]], [[1, 2, 3, 5, 4, 5, 10, 6, 10, 7, 8, 9, 10, 10]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]], [[1, 2, 8, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10, 7]], [[1, 2, 2, 2, 2, 2, 1, 2, 3, 2]], [[2, 3, 4, 4, 4, 4, 4, 4, 8, 4, 5, 4]], [[7, 3, 8, 2]], [[1, 1, 1, 2, 2, 2, 3, 3, 1]], [[1, 2, 2, 2, 2, 11, 2, 2, 1, 2]], [[1, 2, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10, 4]], [[1, 2, 2, 2, 2, 11, 10, 2, 1, 2, 2]], [[7, 3, 10, 0, 2]], [[1, 1, 4, 1, 1, 1, 1, 1]], [[1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 6, 2]], [[1, 12, 2, 3, 3, 3, 3, 3]], [[1, 1, 4, 1, 1, 1, 0]], [[1, 1, 2, 1, 2, 2, 2, 3, 3, 1]], [[2, 3, 8, 2]], [[7, 7, 10, 8, 2, 3, 11, 7]], [[1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]], [[2, 3, 7, 4, 4, 4, 4, 4, 4, 8, 4, 5, 4]], [[1, 2, 2, 3, 3, 3, 3, 3, 1]], [[1, 2, 2, 2, 11, 10, 2, 1, 2, 2, 2, 2]], [[12, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11]], [[1, 2, 8, 4, 5, 4, 5, 6, 7, 8, 9, 10, 10]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 0]], [[1, 2, 2, 2, 6, 2, 1, 3, 2, 2]], [[1, 1, 4, 1, 1, 1, 1, 5, 1]], [[0, 0, 2, 4, 4]], [[1, 2, 8, 4, 5, 4, 5, 6, 7, 8, 3, 10, 10, 5]], [[1, 1, 1, 2, 2, 3, 3, 1]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 11, 1]], [[1, 2, 3, 5, 4, 6, 7, 2, 8, 9, 10, 11]], [[2, 3, 4, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4]], [[1, 2, 3, 5, 4, 6, 7, 2, 8, 9, 10, 10, 11]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1]], [[1, 1, 4, 1, 2, 1, 1]], [[1, 1, 4, 1, 1, 1]], [[1, 4, 1, 1, 1, 1, 1]], [[1, 1, 3, 5, 4, 6, 7, 2, 8, 9, 10, 11]], [[1, 1, 4, 2, 1, 1, 1]], [[0, 2, 4, 4]], [[2, 3, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 4]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 7, 11, 1]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 0, 2]], [[1, 2, 3, 5, 4, 6, 7, 1, 8, 9, 10, 11, 8, 7]], [[1, 1, 1, 1, 1, 2, 2, 2, 11, 2, 2]], [[1, 1, 1, 1, 2, 2, 2, 3, 1]], [[1, 1, 2, 1, 2, 2, 2, 3, 3, 2]], [[1, 2, 12, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10]], [[1, 6, 4, 4]], [[1, 2, 10, 5, 4, 6, 7, 3, 9, 11, 1]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 12, 12]], [[2, 4, 4, 4, 4, 4, 4, 4, 5]], [[1, 1, 4, 1, 2, 2, 1, 1]], [[1, 2, 3, 5, 4, 6, 3, 7, 8, 9, 11, 2, 2]], [[1, 1, 1, 1, 2, 2, 2, 3, 3, 2]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[5, 12, 2, 3, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 4]], [[2, 3, 4, 3, 4, 4, 4, 4, 4, 5]], [[1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[2, 7, 4, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 1]], [[2, 3, 7, 4, 4, 4, 4, 4, 4, 8, 4, 5, 4, 4, 7]], [[1, 2, 5, 4, 6, 7, 1, 9, 3, 11, 8, 7]], [[1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 2, 2]], [[1, 2, 4, 6, 7, 1, 7, 11, 8, 7]], [[3, 4, 4, 4, 4, 4, 8, 4, 5, 4]], [[1, 1, 1, 2, 2, 1, 3, 3, 3]], [[1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 0, 2]], [[2, 3, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4]], [[1, 1, 1, 1, 2, 2, 3, 3, 2]], [[1, 1, 1, 1, 9]], [[2, 2, 2, 2, 2, 2, 1, 2, 3, 2]], [[3, 4, 4, 4, 4, 8, 4, 5, 4]], [[1, 1, 2, 1, 2, 2, 2, 3, 1, 3, 1]], [[8, 1, 2, 10, 5, 4, 6, 7, 3, 9, 11, 1, 7]], [[2, 3, 7, 4, 4, 4, 4, 4, 4, 8, 4, 5, 4, 4, 7, 5]], [[2, 2, 2, 2, 2, 2, 1, 2, 4, 2]], [[1, 1, 2, 1, 2, 2, 2, 3, 1, 3, 1, 2]], [[1, 0, 1, 1, 2, 2, 2, 3, 3, 3]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 2]], [[3, 2, 2, 2, 2, 2, 1, 2, 3, 2]], [[1, 1, 1, 2, 2, 2, 3, 1]], [[2, 2, 2, 11, 10, 2, 1, 2, 2, 2, 2]], [[1, 1, 1, 1, 1, 2, 2, 2, 11, 2, 2, 1]], [[1, 2, 4, 4, 5, 6, 7, 8, 3, 10, 10, 5]], [[2, 3, 2, 4, 4, 4, 4, 4, 4, 0, 5, 6]], [[2, 3, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 3]], [[1, 1, 1, 1, 4]], [[7, 7, 10, 8, 10, 2, 11, 7, 7]], [[1, 1, 0, 4, 1, 1, 1]], [[1, 2, 4, 4, 5, 6, 7, 8, 3, 10, 10, 5, 4]], [[9, 2, 2, 2, 2, 3, 3, 3, 3, 12]], [[3, 1, 3, 4, 4]], [[1, 2, 3, 5, 4, 5, 6, 7, 8, 10, 10, 4]], [[1, 1, 1, 1, 1, 10, 1, 2, 2, 2, 2, 2, 2]], [[12, 1, 3, 5, 0, 6, 7, 8, 9, 10, 11]], [[4, 0, 0, 2, 4, 4, 4]], [[1, 1, 1, 1, 1, 10, 1, 2, 2, 2, 2, 2, 2, 1]], [[1, 2, 5, 6, 7, 1, 9, 3, 11, 8, 7]], [[1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 11, 2, 2, 6, 2]], [[1, 1, 0, 4, 1, 1, 0, 1]], [[2, 2, 2, 2, 2, 2, 1, 2]], [[1, 1, 4, 1, 2, 1, 1, 1]], [[1, 1, 11, 2, 1, 2, 2, 2, 3, 1, 3, 1]], [[1, 2, 2, 2, 2, 1, 1, 3]], [[1, 1, 1, 1, 8, 2, 2, 3, 3, 2]], [[1, 1, 8, 1, 1, 1, 1, 1]], [[1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 0, 2, 2, 1, 2, 0, 2]], [[1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 0, 2, 2, 1, 2, 0, 2, 2]], [[0, 0, 2, 4, 4, 2]], [[7, 7, 10, 8, 2, 2, 11, 7, 2]], [[1, 8, 4, 1, 1, 7, 1, 1, 1]], [[1, 1, 4, 1, 1, 2, 1, 1]], [[1, 1, 1, 2, 1, 7, 1, 1, 2, 2, 2, 11, 2, 2, 6, 2]], [[1, 2, 2, 2, 3, 3, 3, 9, 1]], [[2, 3, 7, 4, 4, 4, 4, 4, 4, 8, 2, 5, 4, 7]], [[1, 1, 1, 2, 2, 2, 3, 3, 2, 2]], [[2, 3, 4, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 4]], [[1, 1, 1, 2, 2, 2, 3, 3, 3, 2, 2]], [[2, 2, 2, 1, 2, 2, 1, 2, 3, 2, 2]], [[11, 1, 1, 4, 1, 1, 0, 1, 0]], [[7, 7, 8, 2, 2, 11, 7]], [[1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[1, 2, 2, 3, 2, 6, 2, 1, 3, 2, 2]], [[3, 4, 4, 4, 4, 4, 8, 5, 10]], [[1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 5]], [[9, 1, 2, 3, 4, 6, 7, 8, 9, 11]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 1]], [[7, 7, 10, 8, 2, 1]], [[6, 1, 2, 3, 5, 4, 6, 7, 1, 8, 9, 2, 10, 10, 11, 5]], [[1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]], [[2, 3, 4, 4, 4, 4, 4, 4, 8, 4, 6, 4]], [[1, 2, 2, 3, 3, 3, 3, 3]], [[2, 2, 3, 2, 2, 1, 2]], [[1, 6, 4, 4, 1]], [[2, 3, 2, 4, 4, 4, 4, 4, 0, 5, 6]], [[1, 2, 2, 3, 3, 3, 3, 1]], [[3, 1, 3, 4, 4, 3]], [[1, 2, 2, 2, 11, 10, 2, 1, 2, 2, 2, 2, 2]], [[7, 7, 10, 8, 2, 3, 9, 7]], [[1, 2, 3, 5, 4, 6, 9, 7, 8, 9, 11, 1]], [[1, 1, 2, 2, 2, 3, 3, 2, 2, 2]], [[3, 1, 3, 7, 5]], [[1, 8, 4, 1, 1, 6, 1, 1, 1]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 8, 2]], [[1, 2, 8, 4, 5, 4, 5, 8, 9, 10, 10]], [[7, 7, 10, 8, 2, 2, 11, 4, 7, 7]], [[1, 1, 2, 6, 1, 3, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[2, 2, 2, 1, 2, 1, 2, 3, 2, 2]], [[5, 6, 4, 4, 1]], [[1, 2, 2, 3, 3, 3, 5, 3, 1]], [[1, 2, 5, 4, 6, 7, 1, 8, 9, 10, 11, 8, 7]], [[5, 6, 5, 0, 4, 4, 1]], [[1, 1, 1, 9]], [[1, 2, 3, 5, 6, 7, 8, 9, 7, 7, 11, 1]], [[1, 8, 4, 1, 0, 7, 1, 1]], [[1, 2, 1, 2, 2, 2, 3, 3, 1]], [[5, 6, 4, 4, 1, 1, 1]], [[0, 0, 3, 2, 4, 4, 2]], [[1, 1, 11, 4, 1, 1, 1, 1]], [[1, 2, 13, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10, 9]], [[1, 12, 2, 3, 3, 2, 3, 3]], [[1, 1, 4, 1, 1, 1, 1, 1, 1]], [[1, 9]], [[1, 2, 8, 5, 5, 4, 5, 6, 7, 8, 3, 10, 10, 5]], [[2, 3, 4, 4, 4, 4, 4, 2, 1, 8, 0, 4, 5, 4, 4]], [[1, 1, 4, 1, 13, 1, 1, 0]], [[3, 3, 4, 4, 4, 4, 8, 4, 5, 4, 4, 8]], [[1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 1]], [[1, 1, 2, 1, 1, 2, 2, 3, 9, 8, 3, 1]], [[2, 3, 7, 4, 4, 4, 4, 4, 8, 4, 5, 4, 7, 5]], [[2, 1, 6, 1, 1, 1, 1]], [[2, 3, 4, 4, 4, 4, 4, 2, 1, 8, 0, 4, 9, 5, 4, 4]], [[1, 2, 2, 2, 2, 2, 2, 2, 3]], [[1, 13, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2]], [[1, 2, 3, 2, 5, 6, 7, 8, 10, 4]], [[1, 7, 4, 0, 1, 1, 1, 4]], [[1, 1, 2, 2, 2, 3, 3, 2, 2, 2, 2]], [[1, 1, 0, 4, 1, 1]], [[2, 2, 2, 2, 2, 1, 2, 4, 2]], [[3, 1, 3, 11, 4, 4, 3]], [[8, 1, 2, 10, 5, 4, 6, 9, 3, 11, 1, 7]], [[1, 3, 2, 2, 2, 1, 3]], [[5, 1, 1, 1, 1, 1, 1]], [[1, 2, 2, 2, 2, 2, 2, 2, 3, 1]], [[1, 2, 2, 2, 3, 3, 3, 3, 3, 1, 3]], [[7, 7, 10, 8, 2, 2, 7]], [[2, 3, 4, 4, 4, 4, 4, 4, 4, 3, 5, 6]], [[1, 2, 3, 5, 6, 7, 4, 8, 9, 7, 7, 11, 1, 5, 7, 7]], [[5, 6, 3, 4, 1]], [[8, 1, 2, 10, 5, 4, 6, 9, 9, 3, 11, 1, 7]], [[2, 8, 7, 4, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 1, 5, 4]], [[1, 2, 3, 2, 5, 6, 7, 8, 10, 4, 2, 3]], [[1, 2, 2, 3, 3, 3, 3, 3, 3]], [[1, 1, 1, 5, 1, 2, 2, 2, 11, 2, 2, 1]], [[1, 3, 3, 4, 5, 6, 7, 8, 10, 10]], [[1, 7, 0, 1, 1, 1, 4]], [[1, 2, 4, 7, 4, 5, 6, 7, 8, 3, 10, 10, 5]], [[5, 2, 3, 4, 4, 4, 4, 4, 4, 8, 4, 6, 4]], [[2, 3, 4, 6, 4, 4, 4, 4, 1, 8, 4, 5, 4]], [[1, 2, 11, 3, 5, 4, 6, 7, 8, 9, 2]], [[1, 2, 2, 2, 3, 3, 3, 3, 3, 1, 3, 3]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 9, 12, 12, 12]], [[1, 2, 3, 5, 4, 6, 7, 8, 11, 1]], [[5, 10, 1, 1, 1, 1, 1, 1]], [[1, 1, 1, 2, 3, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]], [[1, 2, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10, 4, 9]], [[1, 2, 11, 2, 2, 2, 2, 1, 2, 3]], [[1, 2, 3, 5, 4, 5, 10, 6, 10, 7, 8, 9, 2, 10, 10]], [[1, 1, 1, 10, 2, 5, 1, 3, 3, 3]], [[2, 3, 4, 4, 4, 4, 4, 2, 1, 4, 8, 0, 4, 9, 5, 4, 4]], [[7, 6, 7, 2, 10, 8, 2, 2]], [[3, 1, 7, 5]], [[1, 1, 1, 0, 2, 2, 2, 3, 3, 2]], [[1, 1, 1, 2, 2, 1, 3, 3, 3, 2]], [[1, 2, 8, 5, 5, 4, 5, 6, 7, 8, 3, 10, 5, 5]], [[1, 6, 1, 1, 1, 1]], [[3, 0, 3, 7, 5, 3, 0]], [[1, 6, 4]], [[8, 1, 2, 13, 5, 4, 6, 7, 9, 11, 7, 4]], [[2, 3, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 4, 4]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 9, 2, 12, 12, 12]], [[1, 2, 3, 5, 4, 5, 6, 8, 10, 10, 4, 8]], [[3, 3, 4, 4, 4, 4, 8, 4, 5, 4, 3, 4, 8]], [[1, 2, 3, 5, 4, 6, 7, 8, 11, 1, 3]], [[2, 3, 4, 4, 4, 4, 4, 4, 8, 4, 6, 4, 4]], [[1, 1, 4, 10, 1, 2, 1, 1]], [[1, 1, 4, 1, 1, 2, 1, 1, 2]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 9, 12, 12, 1, 12]], [[1, 1, 2, 2, 3, 3, 3, 3, 3, 1, 3]], [[1, 4, 4]], [[1, 2, 4, 4, 5, 6, 8, 8, 3, 10, 10, 5]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 9, 12, 12, 1, 12, 3]], [[1, 1, 2, 1, 8, 1, 1, 0, 9, 1, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2]], [[2, 4, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 1, 4]], [[0, 0, 2, 4, 4, 4, 4]], [[1, 1, 1, 5, 1, 0, 2, 2, 2, 11, 2, 2, 1]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9]], [[1, 7, 7, 10, 8, 2, 3, 11, 7]], [[1, 2, 8, 3, 5, 4, 5, 6, 8, 9, 10, 10, 7, 9]], [[1, 2, 3, 5, 6, 7, 8, 9, 7, 7, 11, 1, 2]], [[7, 7, 2, 10, 8, 2, 2]], [[1, 2, 3, 3, 5, 6, 7, 8, 9, 7, 7, 11, 1, 1]], [[2, 2, 2, 2, 2, 11, 2, 2, 1, 2]], [[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[1, 1, 1, 2, 2, 13, 3, 3, 1]], [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 11, 2, 2, 6, 2]], [[1, 2, 3, 5, 4, 4, 6, 7, 8, 11]], [[1, 8, 4, 1, 1, 7, 1, 1, 1, 1]], [[1, 1, 1, 3, 2, 2, 3, 1, 2]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 9, 12, 12, 12, 12]], [[1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 6, 2, 2]], [[1, 2, 3, 5, 4, 5, 6, 7, 8, 10, 10, 10]], [[1, 3, 1, 2, 2, 2, 3, 3, 2, 2, 2, 3]], [[1, 1, 4, 1, 1, 2, 1, 1, 13, 2, 1]], [[1, 2, 3, 2, 3, 3, 3, 3, 3, 1, 3]], [[1, 1, 1, 1, 1, 10, 1, 2, 2, 2, 2, 2, 1]], [[1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 0, 2, 2, 1, 0, 2, 2]], [[1, 2, 11, 3, 5, 4, 6, 7, 9, 2]], [[1, 2, 3, 5, 4, 6, 7, 11, 1]], [[1, 2, 8, 5, 5, 4, 5, 3, 7, 3, 10, 10, 5]], [[1, 2, 3, 5, 4, 6, 4, 7, 8, 8, 9, 10, 11]], [[1, 1, 8, 1, 1, 1, 1, 1, 1]], [[9, 2, 2, 2, 2, 3, 3, 3, 3]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1]], [[1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 0, 2, 2, 2, 2, 0, 2]], [[2, 2, 2, 2, 2, 1, 2]], [[1, 13, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 2, 2]], [[1, 2, 2, 2, 2, 2, 1, 2, 3, 2, 2, 2, 1, 1, 2]], [[1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 2, 1]], [[1, 1, 9]], [[2, 2, 4, 4, 4, 4, 4, 4, 4, 3, 5, 6]], [[3, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 4, 4]], [[1, 2, 4, 4, 5, 12, 6, 7, 8, 3, 10, 10, 5, 4, 4, 8]], [[1, 2, 5, 4, 6, 7, 2, 1, 9, 3, 11, 8, 7]], [[1, 12, 2, 3, 3, 2, 3, 3, 9]], [[1, 2, 3, 5, 6, 7, 8, 9, 7, 11, 1, 2]], [[2, 2, 2, 3, 11, 10, 2, 1, 8, 7, 2, 2, 2, 2]], [[1, 1, 1, 10, 2, 5, 1, 3, 3, 3, 1]], [[1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 12, 4, 1, 2, 1, 1]], [[1, 2, 3, 5, 6, 7, 8, 5, 9, 7, 11, 1, 2]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 2]], [[1, 2, 12, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10, 10, 4]], [[1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 1, 2, 3, 2]], [[1, 11, 5, 2, 2, 2, 1, 2, 3]], [[1, 4, 2, 1, 2, 2, 2, 2, 3, 1, 3, 1]], [[1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 11, 2, 2, 6, 2]], [[7, 10, 8, 2, 3, 9, 7]], [[1, 2, 8, 1, 1, 1]], [[0, 0, 2, 4, 4, 4, 0]], [[1, 1, 2, 1, 2, 2, 2, 2, 3, 3, 1]], [[1, 2, 2, 3, 3, 3, 3, 3, 3, 3]], [[1, 2, 2, 2, 6, 2, 4, 1, 3, 2, 2]], [[1, 1, 0, 13, 4, 1, 1, 1]], [[1, 1, 2, 12, 1, 1, 1, 4, 1, 1, 2, 2, 2, 1, 2, 3, 2]], [[0, 0, 0, 2, 4, 4, 4]], [[2, 4, 4, 4, 8, 4, 4, 1, 4, 5, 4, 1, 4]], [[1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 6, 2, 1]], [[7, 7, 2, 10, 8, 2, 2, 2]], [[7, 10, 9, 2, 3, 9, 7]], [[1, 1, 2, 9]], [[1, 1, 1, 9, 1]], [[1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 0, 2, 2, 1, 0, 2]], [[1, 2, 5, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10, 4, 9, 4]], [[12, 1, 3, 5, 0, 6, 7, 8, 9, 11]], [[1, 1, 11, 1, 9, 1]], [[1, 1, 2, 1, 3, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[1, 7, 5]], [[1, 2, 4, 5, 10, 7, 1, 7, 10, 8, 7]], [[1, 1, 2, 1, 1, 1, 1, 1, 3, 0, 0, 2, 2, 1, 0, 2, 2]], [[1, 4, 1, 2, 2, 1, 1, 1]], [[1, 1, 1, 1, 1, 2, 2, 2, 3, 1]], [[0, 2, 2, 3, 11, 3, 3, 3, 1]], [[1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 2, 3, 2, 2, 3, 1, 2, 2]], [[12, 1, 3, 5, 6, 7, 8, 9, 10, 11, 9]], [[1, 2, 13, 3, 9, 5, 4, 5, 6, 7, 8, 9, 10, 10, 9]], [[1, 1, 1, 2, 3, 2, 2, 3, 1, 5, 2]], [[1, 1, 2, 2, 3, 3, 3, 3, 1, 3]], [[11, 2, 3, 5, 4, 6, 7, 8, 9, 10, 10, 4, 9]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2]], [[2, 2, 2, 1, 2, 2, 3, 2, 2]], [[9, 1, 4, 2, 2, 2, 3, 3, 3, 3, 12, 9, 12, 12, 12, 3]], [[2, 3, 4, 8, 4, 4, 4, 4, 4, 1, 8, 4, 0, 5, 4]], [[2, 3, 4, 4, 4, 4, 2, 1, 8, 0, 4, 5, 4, 4]], [[12, 1, 7, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11]], [[7, 13, 7, 10, 8, 2, 2, 11, 7]], [[8, 4, 4, 4, 4, 4, 8, 4, 5, 4]], [[2, 4, 4, 5, 4, 4, 4, 4, 4, 5]], [[1, 2, 3, 5, 4, 4, 6, 7, 1, 8, 9, 10, 11, 8, 7]], [[1, 1, 1, 2, 2, 12, 3, 1]], [[1, 1, 1, 5, 1, 1, 10, 1, 2, 2, 2, 2, 2, 1, 2]], [[1, 2, 3, 5, 4, 6, 4, 7, 8, 8, 9, 10, 11, 8]], [[1, 13, 1, 1, 2, 1, 1, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1]], [[1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 2, 3, 5, 4, 6, 7, 2, 1, 8, 9, 10, 10, 11]], [[1, 1, 1, 1, 2, 2, 2, 3, 1, 2, 5, 1]], [[7, 7, 10, 8, 1, 2, 11, 7, 2, 7]], [[1, 2, 4, 4, 5, 5, 12, 6, 10, 6, 8, 3, 10, 10, 5, 4, 4, 8]], [[7, 3, 5, 10, 13, 2, 2]], [[1, 8]], [[0, 9, 2, 4, 4]], [[1, 2, 8, 5, 5, 4, 5, 6, 7, 8, 3, 10, 10, 5, 7]], [[5, 12, 2, 3, 4, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 4]], [[1, 1, 1, 2, 3, 2, 0, 2, 3, 1, 2, 2]], [[2, 3, 4, 4, 4, 4, 4, 1, 8, 4, 5, 4, 4, 4, 4]], [[3, 1, 2, 9]], [[1, 1, 1, 2, 1, 12, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]], [[1, 0, 7, 1, 10, 2, 5, 1, 3, 3, 3, 1]], [[1, 2, 2, 2, 2, 2, 1, 2, 3, 2, 2, 2, 1, 1, 2, 2]], [[0, 2, 4]], [[2, 1, 0, 1, 1]], [[2, 3, 7, 4, 4, 4, 4, 4, 4, 8, 2, 5, 4, 7, 3]], [[2, 4, 4, 4, 4, 4, 4, 5]], [[3, 0, 9, 7, 5, 3, 0]], [[7, 3, 10, 0, 1, 2, 10, 10]], [[9, 1, 2, 2, 2, 3, 3, 3, 3, 3, 12, 9, 12, 12, 12]], [[2, 3, 4, 8, 4, 4, 4, 4, 4, 1, 8, 4, 0, 5, 5, 4]], [[0, 1, 4, 4]], [[3, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[3, 4, 13, 4, 4, 4, 8, 4, 5, 4, 8]], [[7, 7, 10, 2, 1]], [[2, 4, 3, 4, 4, 4, 4, 4, 4, 8, 4, 4]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 8, 2, 2, 1]], [[1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1, 2]], [[1, 2, 3, 3, 3, 5, 3, 1, 3]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 8, 8]], [[1, 1, 1, 1, 8, 2, 2, 3, 3]], [[1, 1, 1, 2, 3, 2, 2, 3, 2, 2]], [[1, 1, 2, 2, 6, 1, 3, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0, 2, 1, 1]], [[2, 3, 7, 4, 4, 4, 4, 4, 8, 2, 5, 4, 7, 4]], [[1, 1, 1, 2, 2, 10, 3, 3, 3]], [[2, 3, 4, 4, 4, 4, 4, 4, 8, 4, 6]], [[13, 0, 7, 1, 10, 2, 5, 1, 3, 3, 3, 1]], [[1, 1, 12, 1, 1, 1, 4, 1, 1, 2, 2, 2, 1, 2, 3, 2]], [[1, 1, 2, 1, 3, 1, 4, 1, 1, 2, 2, 2, 1, 2, 3, 2]], [[2, 2, 2, 2, 2, 11, 2, 1, 9, 1, 2]], [[7, 7, 10, 8, 9, 2, 3, 11, 7]], [[1, 1, 2, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 0]], [[2, 0, 0, 2, 13, 4, 4, 4]], [[1, 2, 3, 5, 4, 6, 1, 2, 8, 9, 10, 10, 11, 1]], [[1, 3, 9]], [[2, 8, 7, 4, 4, 4, 4, 4, 4, 1, 8, 0, 5, 4, 1, 5, 4]], [[1, 1, 2, 12, 1, 1, 1, 4, 1, 1, 2, 2, 2, 1, 2, 3, 2, 2]], [[2, 3, 4, 4, 4, 4, 4, 5, 5, 2, 4, 6]], [[1, 2, 4, 4, 5, 5, 12, 6, 10, 4, 6, 8, 3, 10, 10, 5, 4, 4, 8]], [[1, 1, 4, 1, 1]], [[2, 2, 0, 0, 2, 13, 4, 4, 4]], [[1, 1, 4, 5, 1, 1, 1, 1, 1, 1, 5]], [[2, 2, 2, 2, 2, 2, 1, 2, 3, 2, 3]], [[9, 1, 2, 2, 2, 3, 0, 4, 3, 3, 3, 12, 2, 3]], [[2, 3, 4, 8, 4, 4, 4, 4, 1, 8, 4, 0, 5, 5, 4, 4]], [[5, 12, 2, 3, 4, 4, 4, 4, 4, 4, 1, 5, 8, 4, 5, 4, 4]], [[1, 4, 1, 1, 1, 1, 5, 1]], [[1, 2, 1, 2, 2, 2, 3, 3, 1, 3]], [[1, 1, 2, 1, 2, 1, 4, 1, 1, 2, 2, 2, 1, 2, 10, 2]], [[2, 2, 2, 2, 2, 11, 11, 2, 1, 9, 1, 2]], [[12, 1, 3, 5, 6, 7, 8, 9, 10, 11, 9, 1]], [[1, 1, 11, 4, 1, 1, 1, 1, 1]], [[1, 2, 3, 11, 4, 6, 4, 7, 8, 8, 9, 10, 11, 11]], [[12, 1, 3, 5, 6, 7, 8, 9, 10, 11, 9, 12]], [[2, 3, 7, 4, 4, 4, 4, 4, 4, 8, 5, 4, 4, 7]], [[1, 1, 1, 1, 5, 1, 2, 2, 2, 2, 2, 2]], [[1, 1, 1, 0, 1, 1]], [[7, 4, 3, 5, 10, 8, 2, 2]], [[1, 2, 8, 3, 5, 4, 5, 6, 7, 8, 12, 9, 10, 10]], [[1, 2, 2, 6, 2, 1, 3, 2, 2]], [[1, 1, 4, 5, 1, 1, 1, 1, 1, 1, 5, 5]], [[1, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2, 2, 8, 2]], [[1, 13, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 0, 2, 2, 2]], [[11, 2, 3, 4, 8, 4, 4, 4, 4, 4, 1, 8, 4, 0, 5, 5, 4]], [[1, 3, 1, 2, 2, 2, 3, 3, 2, 2, 2, 3, 2]], [[1, 2, 13, 3, 5, 4, 5, 6, 6, 8, 9, 10, 3, 10, 9, 1]], [[1, 2, 2, 2, 3, 3, 3, 9, 1, 2]], [[9, 1, 11, 4, 1, 1, 1, 1]], [[1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]], [[1, 2, 3, 5, 4, 6, 7, 1, 8, 9, 10, 11, 8, 7, 6]], [[3, 1, 1, 1, 1, 3, 1, 1, 1, 2, 0, 2, 2, 2, 9, 0, 2, 1, 1, 1]], [[2, 3, 4, 4, 4, 4, 4, 4, 4, 5, 6, 3]], [[1, 2, 11, 3, 5, 10, 4, 6, 7, 8, 9, 2]], [[1, 8, 2, 8, 3, 5, 4, 5, 6, 7, 8, 9, 10, 10]], [[1, 2, 3, 5, 6, 7, 8, 9, 2, 11, 1, 2]], [[12, 1, 3, 6, 7, 8, 11, 11, 9, 1]], [[1, 2, 8, 5, 5, 4, 9, 5, 3, 7, 10, 10, 5]], [[1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1]], [[1, 2, 3, 5, 4, 6, 7, 11, 1, 2]], [[1, 1, 10, 1, 1, 2, 1, 1]], [[1, 2, 3, 5, 4, 6, 4, 7, 8, 8, 9, 10, 11, 8, 7]], [[12, 6, 1, 3, 5, 0, 6, 7, 8, 9, 11]], [[1, 2, 3, 5, 3, 3, 4, 5, 10, 6, 10, 7, 8, 9, 2, 10, 10]], [[3, 3, 0, 3, 7, 5, 3, 0]], [[2, 2, 2, 2, 1, 2, 2]], [[4, 9, 1, 2, 2, 2, 3, 3, 3, 3, 12, 9, 2, 12, 12]], [[1, 1, 2, 1, 1, 1, 1, 1, 12, 0, 2, 2, 2, 8, 0, 1, 0]], [[3, 4, 3, 0, 0, 2, 4, 4, 4, 4]], [[1, 1, 1, 5, 2, 5, 1, 3, 3, 3, 2]], [[2, 3, 7, 4, 4, 4, 4, 8, 2, 5, 4, 7, 4, 4, 7]], [[1, 2, 3, 5, 6, 4, 6, 7, 2, 8, 9, 10, 11]], [[1, 1, 2, 2, 6, 1, 3, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 2, 1, 1]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 9, 11]], [[1, 2, 3, 5, 4, 6, 7, 8, 11, 11, 1, 3]], [[1, 1, 1, 2, 2, 2, 3, 3]], [[8, 4, 4, 4, 4, 4, 8, 4, 5, 4, 4]], [[1, 1, 1, 1, 1, 2, 2, 11, 2, 2]], [[7, 10, 9, 3, 9, 7]], [[9, 1, 2, 2, 2, 2, 3, 0, 4, 3, 3, 3, 12, 2, 3]], [[1, 2, 3, 5, 4, 6, 7, 2, 9, 8, 9, 10, 10, 11]], [[1, 2, 4, 2, 2, 2, 1, 2, 3]], [[1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2]], [[1, 2, 4, 4, 6, 12, 6, 7, 8, 3, 10, 10, 5, 4, 4, 8]], [[1, 1, 2, 1, 1, 1, 1, 3, 2, 0, 2, 2, 1, 2, 0, 2, 2]], [[2, 2, 2, 1, 2, 2]], [[1, 2, 11, 3, 5, 1, 10, 4, 6, 7, 8, 9, 2]], [[7, 7, 2, 10, 8, 8, 2, 2, 2]], [[1, 2, 1, 2, 2, 2, 3, 3, 0, 1, 3]], [[1, 12, 2, 3, 3, 3, 11, 3, 3]], [[1, 2, 13, 3, 5, 4, 5, 6, 7, 8, 9, 10, 1, 10, 9, 8]], [[3, 7, 7, 10, 8, 9, 3, 11, 7, 7]], [[1, 13, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2]], [[1, 2, 11, 3, 5, 10, 4, 6, 7, 8, 2]], [[2, 3, 4, 13, 4, 4, 4, 4, 11, 1, 8, 4, 5, 4, 8]], [[1, 2, 3, 5, 4, 6, 7, 1, 9, 10, 11, 3, 8, 7, 6, 4]], [[1, 3, 1, 2, 2, 1, 3, 3, 2, 3]], [[9, 1, 2, 4, 2, 2, 3, 3, 3, 3, 12]], [[6, 1, 2, 3, 5, 4, 6, 7, 1, 8, 9, 2, 10, 10, 11, 5, 4]], [[13, 13, 1, 1, 2, 1, 1, 1, 4, 1, 1, 2, 2, 2, 2, 0, 2, 2, 2]], [[1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 0, 2, 2, 2, 2, 0, 1, 2]], [[7, 7, 10, 8, 2, 2, 6, 11, 2]], [[2, 2, 2, 3, 2, 1, 2]], [[1, 1, 1, 1]], [[1, 2, 3, 4, 5, 5, 5]], [[5, 5, 5, 1, 2, 3]], [[5, 5, 1, 5, 2, 5, 3, 5, 4]], [[1, 1]], [[2, 4, 6, 8, 10, 12]], [[1, 1, 1, 1, 1]], [[1, 2, 3, 1, 2]], [[1, 2, 3, 4, 5, 6, 7, 1]], [[1, 2, 3, 4, 4, 5, 6, 6, 6]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 8]], [[1, 2, 3, 5, 4, 6, 7, 6, 6, 9, 10, 11, 10, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 8, 6]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10]], [[0, 0, 2, 2, 4, 4, 11, 4]], [[1, 2, 4, 2, 2, 3, 3, 3, 3, 3, 3]], [[7, 3, 10, 8]], [[1, 2, 3, 4, 5, 6, 7, 9, 10, 10, 10]], [[1, 2, 3, 4, 10, 6, 7, 8, 8, 10, 10, 8, 6]], [[1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 10, 8]], [[1, 2, 3, 5, 5, 7, 8, 9, 10, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 10]], [[1, 2, 3, 5, 6, 7, 8, 9, 1, 10, 3]], [[1, 11, 2, 3, 4, 10, 6, 7, 8, 8, 10, 10, 7, 6]], [[1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 10, 8, 8]], [[4, 0, 0, 2, 2, 4, 4, 11, 4, 4]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 10, 8, 6]], [[1, 2, 3, 5, 7, 8, 9, 1, 10, 3, 1]], [[0, 0, 2, 2, 4, 4, 4, 0, 4]], [[7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 2, 10]], [[1, 12, 2, 3, 4, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4]], [[0, 0, 2, 2, 11, 4]], [[1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 8, 6]], [[2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 5, 4]], [[1, 2, 3, 4, 6, 2, 7, 8, 9, 1, 10, 10]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 2, 11]], [[2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 5]], [[1, 12, 2, 3, 4, 2, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4]], [[1, 2, 3, 4, 5, 5, 6, 6, 8, 9, 1, 10, 10]], [[1, 2, 4, 2, 2, 3, 3, 3, 3, 3, 3, 1, 4]], [[0, 0, 2, 2, 11]], [[1, 2, 3, 6, 2, 7, 8, 9, 1, 10, 10]], [[2, 3, 4, 4, 6, 4, 4, 4, 4, 5, 6, 5]], [[1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 8]], [[1, 2, 3, 6, 6, 7, 8, 9, 10, 10, 8, 6]], [[1, 2, 2, 3, 4, 5, 6, 2, 8, 9, 10, 10, 8, 6, 4]], [[1, 2, 4, 5, 6, 7, 7, 8, 9, 9, 10, 8]], [[1, 2, 3, 5, 4, 6, 7, 6, 6, 9, 10, 11, 10, 10, 5]], [[2, 3, 4, 4, 5, 4, 4, 4, 5, 6]], [[2, 3, 4, 4, 5, 4, 4, 4, 5, 6, 5]], [[0, 0, 2, 2, 4, 4, 0, 4]], [[1, 2, 3, 6, 6, 12, 8, 9, 10, 10, 8, 6]], [[2, 3, 4, 4, 5, 4, 4, 4, 4, 5, 6, 5]], [[0, 0, 2, 2, 0, 4, 5, 4, 4, 0]], [[0, 0, 2, 2, 11, 4, 4]], [[1, 2, 4, 5, 6, 7, 8, 11, 1, 10, 10]], [[7, 3, 10, 10, 8]], [[1, 5, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 10]], [[7, 0, 2, 3, 4, 5, 6, 7, 8, 9, 2, 10]], [[0, 0, 2, 2, 4, 4, 0, 4, 2]], [[1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 2]], [[1, 2, 3, 4, 5, 6, 7, 7, 8, 4, 9, 10, 10, 8]], [[1, 2, 7, 3, 4, 5, 6, 7, 8, 9, 1, 10]], [[1, 12, 2, 3, 4, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4, 7]], [[1, 2, 3, 6, 6, 12, 8, 4, 10, 10, 8, 6]], [[6, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 10, 1, 4]], [[1, 12, 2, 3, 4, 2, 10, 6, 7, 6, 8, 8, 10, 10, 7, 6, 4, 6]], [[1, 2, 3, 4, 6, 2, 7, 8, 9, 1, 10]], [[1, 2, 9, 3, 5, 6, 7, 7, 8, 9, 10, 10, 8]], [[1, 2, 2, 3, 4, 5, 6, 2, 8, 9, 10, 10, 8, 6, 4, 9]], [[2, 3, 4, 4, 5, 4, 4, 4, 5, 6, 9, 4]], [[1, 2, 3, 5, 10, 4, 6, 7, 8, 9, 10, 11, 9]], [[1, 2, 3, 6, 6, 7, 8, 9, 10, 9, 10, 8, 6]], [[0, 0, 2, 11]], [[0, 2, 2, 0, 4, 5, 4, 4, 0]], [[1, 3, 4, 5, 6, 7, 8, 9, 1, 10]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 10, 8, 6, 8]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 8, 6, 10]], [[1, 12, 2, 4, 2, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4]], [[0, 1, 2, 0, 4, 5, 4, 4, 0, 2]], [[1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 2, 2]], [[0, 0, 2, 11, 2, 11, 4, 0]], [[1, 0, 2, 3, 6, 6, 8, 4, 10, 10, 8, 6, 1]], [[7, 0, 2, 3, 4, 5, 6, 7, 8, 9, 2, 10, 3]], [[4, 7, 10, 8]], [[0, 0, 2]], [[1, 2, 6, 3, 5, 5, 7, 9, 5, 10, 10]], [[7, 10, 8, 2]], [[1, 3, 2, 6, 3, 3, 3, 3]], [[1, 12, 2, 3, 4, 6, 7, 8, 8, 10, 10, 7, 6, 4]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 1, 4]], [[1, 2, 3, 5, 4, 6, 7, 2, 6, 6, 9, 10, 11, 10, 10, 5]], [[1, 2, 3, 4, 5, 6, 7, 7, 5, 8, 4, 9, 10, 10, 8]], [[1, 3, 4, 2, 9, 5, 6, 7, 9, 10, 10, 8, 6]], [[2, 3, 4, 4, 5, 4, 4, 4, 5, 6, 9, 4, 4]], [[5, 2, 2, 3, 3, 4, 3, 3]], [[10, 0, 2, 2, 4, 4, 4]], [[1, 2, 3, 7, 8, 9, 1, 10, 3, 1]], [[1, 2, 3, 4, 5, 6, 9, 7, 8, 9, 1, 10, 1, 4]], [[1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 10, 8, 7]], [[0, 0, 2, 11, 2]], [[2, 3, 2, 4, 5, 4, 4, 4, 5, 6]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 10, 8, 6, 10, 6]], [[1, 12, 2, 3, 4, 2, 10, 6, 7, 8, 10, 10, 7, 6, 4]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 2, 11, 6]], [[10, 10, 8]], [[1, 2, 3, 7, 8, 9, 1, 10, 11, 1]], [[1, 10, 2, 3, 4, 5, 5, 6, 6, 8, 9, 7, 10, 10]], [[1, 0, 1, 1, 1, 1, 1]], [[1, 3, 2, 6, 3, 3, 3, 3, 6]], [[2, 3, 4, 4, 4, 4, 4, 5, 6, 5, 4]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 10, 1, 4, 2]], [[0, 0, 2, 2, 11, 11, 4, 4]], [[1, 2, 2, 3, 4, 5, 6, 2, 8, 9, 10, 10, 5, 8, 6, 4, 9]], [[1, 2, 3, 5, 4, 6, 7, 2, 6, 6, 9, 10, 11, 11, 10, 10, 5]], [[1, 2, 3, 4, 5, 6, 2, 8, 9, 10, 10, 8, 6, 4]], [[1, 2, 3, 4, 5, 6, 9, 7, 8, 9, 1, 10, 5, 1, 4]], [[2, 3, 4, 4, 6, 4, 4, 4, 4, 5, 6, 5, 3]], [[2, 3, 7, 4, 4, 5, 4, 4, 4, 4, 5, 6, 5, 6]], [[1, 2, 3, 5, 4, 6, 7, 6, 6, 9, 10, 11, 10, 10, 5, 3, 6]], [[2, 3, 4, 4, 5, 4, 4, 4, 4, 5, 6, 5, 5]], [[1, 12, 2, 3, 4, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4, 7, 10]], [[2, 3, 4, 4, 4, 4, 4, 4, 5, 7, 5, 4]], [[1, 3, 2, 6, 3, 4, 3, 3, 6]], [[1, 12, 2, 3, 4, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4, 7, 10, 10]], [[0, 0, 2, 11, 0, 11]], [[1, 0, 2, 3, 6, 6, 8, 4, 10, 8, 6, 0]], [[1, 2, 3, 4, 5, 5, 6, 6, 8, 9, 1, 10, 10, 9, 9]], [[0, 1, 2, 0, 5, 4, 4, 0, 2]], [[1, 1, 1, 2, 2, 2, 3, 3, 3, 2]], [[0, 0, 3, 11, 0, 11]], [[1, 2, 3, 4, 5, 6, 4, 7, 9, 10, 10]], [[5, 2, 2, 3, 3, 4, 3, 3, 3]], [[1, 2, 3, 7, 9, 9, 1, 10, 3, 1]], [[1, 1, 2, 2, 2, 2, 3, 3, 3, 2, 3]], [[1, 2, 2, 3, 4, 5, 6, 2, 8, 9, 4, 10, 5, 8, 6, 4, 9]], [[1, 2, 3, 4, 6, 2, 7, 8, 9, 1, 10, 6]], [[1, 12, 2, 3, 4, 2, 10, 6, 6, 8, 8, 10, 10, 7, 4, 2]], [[1, 2, 3, 5, 6, 7, 8, 9, 1, 10]], [[1, 2, 11, 3, 7, 9, 9, 1, 10, 3, 1]], [[1, 2, 3, 4, 5, 6, 7, 7, 5, 8, 4, 9, 10, 9, 8]], [[1, 2, 3, 7, 8, 9, 1, 10, 3, 1, 9]], [[1, 2, 4, 5, 6, 7, 8, 9, 1, 10]], [[1, 2, 3, 4, 10, 6, 7, 8, 8, 10, 6, 10, 8, 6]], [[1, 2, 4, 2, 2, 3, 3, 3, 3, 3, 3, 2]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 1, 10, 11]], [[1, 3, 8, 5, 6, 7, 7, 5, 8, 4, 5, 9, 10, 10, 8]], [[0, 0, 2, 2, 4, 4, 11, 4, 4]], [[0, 0, 2, 2]], [[1, 2, 3, 4, 6, 7, 6, 6, 9, 10, 11, 10, 6, 10, 5]], [[1, 2, 3, 8, 10, 6, 7, 8, 8, 10, 10, 8, 6]], [[1, 12, 4, 3, 4, 10, 6, 7, 8, 8, 10, 8, 10, 7, 6, 4, 8]], [[1, 2, 3, 5, 7, 8, 1, 10, 3, 9, 1]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 9]], [[2, 3, 7, 4, 4, 5, 4, 4, 4, 6, 4, 5, 6, 5, 6]], [[1, 2, 3, 4, 6, 2, 6, 8, 9, 1, 10]], [[1, 2, 2, 3, 4, 5, 6, 7, 8, 10, 10, 10, 8, 4]], [[1, 2, 2, 3, 4, 3, 5, 6, 7, 8, 8, 10, 10, 8]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 8, 2, 11]], [[1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 10, 8, 8]], [[0, 0, 1, 1, 0, 1, 1, 2, 2, 2, 2, 2, 2]], [[2, 0, 0, 3, 2, 2, 11, 4, 2]], [[0, 0, 2, 4, 4, 0, 4, 2]], [[1, 2, 2, 2, 2, 2, 2, 3, 2]], [[1, 2, 3, 4, 5, 5, 6, 6, 4, 8, 9, 1, 10, 10, 9, 9]], [[1, 2, 3, 4, 5, 6, 6, 8, 9, 1, 10, 10]], [[1, 12, 2, 3, 4, 6, 7, 8, 8, 3, 10, 10, 7, 6, 4]], [[7, 3, 10, 8, 0, 10]], [[1, 12, 2, 3, 4, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4, 6, 10]], [[1, 2, 6, 2, 5, 5, 7, 9, 5, 10, 10]], [[2, 3, 4, 4, 5, 4, 4, 4, 4, 5, 6, 3, 5]], [[1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 10, 8, 7, 7]], [[1, 2, 4, 2, 2, 3, 3, 3, 3, 3, 3, 2, 3]], [[1, 2, 5, 4, 6, 7, 8, 9, 1, 10, 11, 1]], [[2, 3, 4, 4, 6, 4, 4, 4, 4, 5, 6, 5, 4]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 8, 2, 11, 9]], [[0, 3, 11, 0, 11]], [[1, 2, 3, 5, 4, 6, 7, 2, 6, 6, 9, 10, 11, 10, 10, 5, 10]], [[0, 11, 2, 11, 2, 11, 4, 0]], [[11, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 2, 11, 6]], [[1, 2, 3, 8, 5, 4, 6, 7, 6, 6, 9, 10, 11, 10, 10]], [[1, 2, 9, 3, 5, 2, 7, 7, 8, 9, 10, 10, 8]], [[0, 0, 2, 11, 2, 11]], [[2, 3, 4, 4, 5, 4, 4, 4, 5, 6, 9, 3, 4, 4]], [[1, 2, 3, 4, 5, 5, 6, 6, 8, 9, 7, 10, 10]], [[1, 2, 3, 4, 5, 6, 7, 9, 10, 10, 8, 8, 8]], [[2, 3, 4, 4, 5, 4, 10, 4, 4, 4, 5, 6, 5]], [[1, 12, 2, 10, 4, 2, 10, 6, 6, 8, 8, 10, 10, 7, 4, 2]], [[1, 2, 3, 5, 10, 4, 6, 7, 8, 9, 1, 7, 11, 9, 4, 5]], [[1, 1, 1, 0, 1, 1, 2, 2, 2, 2]], [[2, 0, 0, 3, 2, 2, 11, 2, 3]], [[0, 0, 2, 2, 4, 4, 11, 3, 0]], [[2, 3, 4, 4, 5, 4, 4, 4, 6, 9, 4]], [[1, 12, 2, 3, 4, 6, 7, 8, 8, 10, 10, 4, 6, 4, 7, 7]], [[10, 0, 11, 2, 11, 2, 11, 4, 0]], [[5, 0, 0, 2, 11, 2]], [[2, 4, 4, 5, 4, 4, 4, 5, 6, 9, 4, 4]], [[7, 0, 0, 2, 4, 4, 0, 4, 2]], [[1, 2, 3, 5, 6, 7, 9, 1, 10, 1, 4, 1]], [[1, 2, 3, 5, 4, 6, 7, 6, 6, 9, 10, 11, 10, 10, 5, 3, 6, 6]], [[0, 0, 2, 11, 2, 4, 0, 2]], [[1, 2, 4, 2, 2, 3, 3, 3, 3, 3, 3, 1, 4, 4]], [[2, 3, 4, 4, 6, 4, 4, 7, 4, 4, 5, 6, 5, 4]], [[0, 0, 2, 11, 4, 4, 4, 0]], [[1, 12, 2, 3, 4, 6, 7, 8, 8, 10, 10, 4, 6, 4, 7, 7, 6]], [[1, 12, 2, 3, 4, 10, 6, 6, 8, 8, 10, 10, 7, 4, 2]], [[1, 1, 2, 2, 2, 2, 3, 3, 3, 2, 2]], [[2, 3, 4, 4, 6, 4, 4, 4, 6, 9, 4]], [[7, 0, 2, 4, 4, 0, 4, 2]], [[5, 0, 2, 11, 2]], [[7, 0, 0, 2, 3, 4, 0, 4, 2]], [[12, 2, 3, 4, 6, 7, 8, 8, 10, 10, 7, 6, 4]], [[1, 12, 2, 3, 4, 8, 7, 8, 8, 10, 10, 4, 6, 4, 7, 7, 7]], [[1, 2, 3, 4, 5, 5, 6, 6, 8, 9, 1, 10, 10, 9, 9, 2]], [[7, 10, 8, 9]], [[1, 2, 6, 2, 5, 7, 9, 5, 10, 10]], [[1, 2, 4, 4, 2, 2, 3, 3, 3, 3, 3, 3, 2, 3]], [[1, 12, 2, 3, 4, 6, 7, 8, 8, 10, 10, 4, 6, 4, 7]], [[1, 2, 5, 6, 7, 9, 1, 10, 1, 4, 1]], [[1, 12, 2, 3, 4, 12, 6, 7, 8, 8, 10, 10, 7, 9, 6, 4]], [[1, 2, 4, 2, 2, 3, 3, 3, 3, 3, 11, 3, 1, 4]], [[1, 12, 2, 3, 4, 2, 10, 6, 7, 8, 10, 10, 7, 6, 8, 4]], [[2, 8, 3, 4, 4, 5, 4, 4, 4, 4, 5, 6]], [[1, 2, 4, 2, 2, 3, 0, 3, 3, 3, 3, 1, 4]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 10, 8, 6, 9]], [[1, 2, 2, 3, 9, 4, 3, 4, 6, 7, 8, 8, 10, 10, 8]], [[9, 0, 2, 4, 4, 0, 4, 2]], [[1, 2, 3, 7, 11, 8, 9, 1, 10, 3, 1, 3]], [[0, 0, 2, 2, 5, 4, 4, 11, 3, 0]], [[1, 2, 3, 10, 4, 5, 6, 7, 9, 10, 10, 10, 9]], [[0, 0, 2, 11, 2, 11, 4, 0, 4]], [[1, 3, 5, 6, 7, 1, 4, 5, 9, 10, 10, 8]], [[5, 0, 2, 2]], [[10, 8, 9]], [[2, 4, 4, 5, 4, 4, 4, 5, 6, 9, 4, 6, 4, 6]], [[1, 2, 2, 3, 4, 1, 6, 7, 8, 9, 10, 10, 8]], [[0, 2, 2, 2, 2, 2, 3]], [[1, 2, 4, 5, 6, 7, 8, 9, 10, 10, 8, 6, 10]], [[1, 12, 2, 3, 4, 2, 10, 6, 7, 10, 10, 7, 6, 8, 4]], [[1, 2, 3, 4, 5, 6, 6, 8, 9, 2, 10, 10]], [[1, 2, 4, 5, 6, 9, 7, 8, 9, 1, 10, 5, 1, 4]], [[1, 1, 1, 1, 1, 1, 1]], [[0, 1, 1, 2, 0, 5, 4, 4, 0, 2]], [[2, 7, 3, 7, 10, 10, 8]], [[12, 2, 3, 4, 6, 7, 8, 8, 9, 10, 7, 6, 4, 8]], [[1, 2, 3, 4, 6, 7, 8, 8, 10, 10, 7, 6, 4]], [[1, 2, 2, 3, 9, 8, 4, 3, 4, 6, 7, 8, 8, 10, 10, 8]], [[1, 3, 2, 6, 3, 3, 3, 3, 3]], [[1, 3, 5, 6, 7, 9, 1, 10, 1, 4, 1]], [[1, 1, 3, 1, 2, 2, 1, 2, 3, 3, 3, 2, 1]], [[0, 2, 2, 2, 2, 2, 3, 2]], [[2, 4, 4, 5, 4, 4, 12, 4, 5, 6, 5, 9, 4, 6, 4, 6]], [[1, 2, 2, 3, 4, 3, 5, 6, 7, 11, 8, 8, 10, 10, 8]], [[0, 0, 2, 2, 2, 11]], [[1, 2, 3, 6, 2, 6, 8, 9, 1, 10]], [[2, 3, 4, 6, 4, 4, 4, 4, 5, 6, 5, 3]], [[1, 2, 5, 4, 6, 7, 8, 10, 9, 1, 10, 3, 1, 6]], [[12, 2, 3, 4, 6, 6, 7, 8, 8, 10, 10, 7, 6, 4]], [[1, 2, 4, 5, 6, 7, 8, 9, 10, 8]], [[1, 2, 2, 4, 5, 6, 2, 8, 9, 10, 10, 8, 6, 4]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 1]], [[1, 2, 3, 5, 5, 7, 8, 9, 9, 10, 3]], [[1, 2, 3, 4, 5, 6, 6, 8, 9, 2, 10, 7, 10]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 2, 11]], [[1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 8, 2]], [[1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 8, 9]], [[1, 2, 3, 3, 5, 6, 7, 8, 8, 10, 10, 8]], [[1, 3, 2, 3, 3, 3, 3, 3]], [[1, 2, 2, 2, 2, 2, 5, 3, 2]], [[2, 3, 2, 4, 5, 4, 4, 4, 5, 6, 4]], [[1, 2, 3, 8, 10, 6, 7, 8, 2, 8, 10, 10, 8]], [[1, 2, 3, 7, 8, 10, 9, 1, 10, 11, 1]], [[1, 2, 3, 5, 4, 6, 7, 11, 8, 9, 10, 11, 1]], [[1, 2, 3, 5, 4, 6, 7, 2, 6, 6, 9, 10, 11, 10, 9, 5]], [[2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 5, 4, 4]], [[2, 4, 4, 5, 4, 4, 4, 5, 6, 5]], [[2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 10, 1, 4, 9]], [[1, 12, 2, 3, 4, 2, 10, 6, 7, 8, 8, 10, 10, 7, 6, 4, 2]], [[9, 0, 2, 4, 0, 4, 2]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 10, 8, 6, 8, 6]], [[1, 2, 3, 5, 4, 6, 7, 6, 6, 9, 10, 11, 5, 10, 10, 5, 3, 6]], [[1, 2, 3, 5, 4, 6, 7, 6, 6, 9, 9, 10, 11, 10, 10, 5, 6, 1, 6]], [[1, 1, 3, 4, 5, 6, 7, 8, 9, 10, 10, 8, 6]], [[1, 1, 2, 3, 2, 2, 3, 3, 3, 2, 3]], [[1, 0, 2, 3, 4, 5, 6, 7, 7, 5, 8, 4, 9, 10, 10, 8]], [[1, 2, 2, 3, 4, 5, 6, 2, 8, 9, 4, 10, 5, 8, 6, 4, 9, 6]], [[1, 2, 3, 8, 5, 4, 6, 7, 6, 6, 9, 10, 11, 10, 10, 2]], [[5, 2, 2, 3, 3, 4, 3, 1, 3]], [[1, 2, 2, 4, 5, 6, 2, 8, 10, 10, 8, 6, 4]], [[1, 2, 3, 4, 5, 5, 6, 6, 8, 9, 1, 10, 10, 10, 9, 9, 2, 9]], [[12, 2, 2, 3, 4, 1, 6, 6, 8, 9, 10, 10, 8, 9]], [[1, 2, 5, 6, 7, 9, 1, 10, 3, 1]], [[0, 0, 2, 12]], [[1, 2, 4, 5, 6, 7, 8, 9, 1, 10, 7]], [[2, 3, 4, 4, 3, 6, 4, 4, 4, 4, 5, 6, 5]], [[0, 2, 2, 2, 2, 3]], [[1, 1, 2, 3, 5, 4, 6, 7, 2, 6, 6, 9, 10, 11, 10, 9, 5]], [[1, 2, 2, 8, 2, 2, 2, 2, 3, 2]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 9, 3]], [[0, 0, 2, 2, 4, 4, 11, 4, 0]], [[1, 2, 3, 4, 6, 7, 6, 6, 9, 10, 2, 11, 10, 6, 9, 10, 5]], [[1, 0, 2, 11, 2, 11, 0]], [[1, 2, 2, 4, 5, 6, 2, 8, 9, 10, 10, 8, 6]], [[1, 3, 4, 2, 9, 5, 6, 7, 9, 9, 10, 8, 6, 3, 4]], [[1, 2, 3, 4, 5, 6, 6, 8, 9, 1, 10, 10, 1]], [[1, 3, 5, 6, 3, 4, 3, 3, 6]], [[1, 12, 2, 3, 4, 6, 7, 8, 7, 10, 10, 4, 6, 4, 7]], [[1, 2, 4, 5, 6, 7, 9, 1, 10, 2, 1]], [[1, 2, 6, 3, 5, 5, 9, 5, 10, 10]], [[10, 0, 1, 1, 2, 0, 5, 4, 4, 0, 2]], [[1, 12, 2, 3, 4, 10, 6, 7, 11, 8, 8, 10, 10, 7, 6, 4, 7, 10, 10]], [[2, 7, 4, 4, 5, 4, 3, 4, 4, 4, 5, 6, 12, 5, 6]], [[1, 0, 2, 1, 2, 3, 4, 12, 5, 6, 7, 7, 5, 8, 4, 9, 2, 10, 10, 8]], [[0, 0, 1, 1, 0, 1, 1, 2, 2, 9, 1, 2, 2]], [[1, 12, 2, 3, 4, 2, 6, 6, 8, 8, 10, 10, 7, 4, 2]], [[1, 2, 4, 5, 6, 7, 8, 9, 10, 1, 10, 10]], [[0, 6, 2, 2, 4, 4, 11, 4, 4, 4]], [[9, 0, 2, 4, 4, 0, 2, 4, 2]], [[1, 2, 5, 3, 4, 5, 6, 6, 8, 9, 1, 10, 10]], [[2, 7, 3, 4, 5, 6, 7, 8, 9, 1, 10]], [[7, 0, 2, 3, 4, 5, 6, 7, 8, 8, 9, 2, 10]], [[1, 9, 4, 9, 6, 7, 7, 8, 9, 9, 10, 8]], [[0, 3, 11, 11]], [[2, 1, 3, 5, 6, 3, 4, 3, 3, 6]], [[2, 3, 4, 4, 5, 4, 6, 9, 4]], [[1, 2, 4, 5, 6, 7, 8, 9, 10, 1, 10, 3, 10]], [[1, 2, 4, 5, 6, 7, 8, 9, 1, 10, 10]], [[0, 3, 11, 11, 11]], [[1, 2, 3, 4, 6, 7, 8, 8, 10, 10, 7, 6, 4, 10, 8]], [[1, 2, 3, 5, 4, 6, 7, 8, 9, 2, 11, 5]], [[1, 3, 2, 3, 3, 3, 3, 0]], [[1, 8, 2, 3, 6, 6, 8, 4, 10, 10, 8, 6, 1]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 2, 10, 8, 6, 8, 5]], [[1, 2, 2, 3, 4, 5, 6, 2, 8, 10, 10, 8, 6, 4, 2]], [[1, 2, 3, 4, 5, 6, 7, 9, 10, 10, 8, 8]], [[3, 2, 1, 3, 6, 6, 3, 4, 3, 3, 6, 5]], [[11, 1, 2, 3, 5, 4, 6, 7, 8, 9, 2, 11]], [[5, 5, 2, 3, 4, 5, 4, 4, 6, 4, 5, 6, 5]], [[1, 2, 2, 3, 4, 6, 6, 2, 8, 9, 4, 10, 5, 8, 6, 4, 9, 6, 6]], [[1, 2, 4, 5, 6, 9, 7, 8, 9, 1, 5, 10, 5, 1, 4]], [[1, 12, 2, 3, 4, 2, 10, 6, 7, 10, 7, 6, 8, 4]], [[0, 0, 1, 2, 11, 2]], [[5, 6, 0, 2, 11, 10]], [[0, 2, 2, 2, 2, 2, 11, 2]], [[1, 13, 2, 3, 4, 2, 10, 6, 7, 6, 8, 8, 10, 10, 7, 6, 4, 6]], [[1, 9, 4, 5, 6, 7, 8, 9, 1, 10, 10]], [[1, 3, 5, 6, 3, 4, 3, 3, 6, 5, 5]], [[5, 2, 6, 0, 2, 11, 10]], [[8, 2, 3, 7, 8, 9, 1, 10, 3, 1, 3]], [[1, 2, 4, 5, 6, 7, 7, 8, 9, 9, 10, 7]], [[2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 2, 3]], [[2, 3, 4, 4, 3, 6, 4, 4, 4, 4, 5, 5]], [[5, 5, 2, 3, 4, 5, 4, 7, 4, 6, 4, 5, 6, 5]], [[1, 2, 2, 3, 9, 4, 3, 4, 6, 7, 8, 13, 8, 10, 10, 8]], [[1, 2, 3, 5, 4, 6, 7, 6, 6, 9, 10, 6, 11, 11, 10, 10]], [[1, 2, 2, 2, 2, 9, 2, 3]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 2, 10, 8, 6, 8, 10]], [[1, 12, 2, 3, 4, 6, 7, 8, 7, 10, 10, 5, 6, 4, 7]], [[1, 3, 2, 6, 3, 3, 3, 6, 3]], [[1, 2, 3, 6, 2, 6, 9, 1, 10]], [[1, 2, 3, 6, 2, 6, 8, 9, 12, 10]], [[2, 4, 4, 5, 6, 7, 8, 9, 10, 10, 1, 4, 9]], [[1, 2, 3, 4, 2, 9, 5, 6, 7, 9, 10, 10, 6, 11, 6]], [[1, 1, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3]], [[1, 6, 9, 4, 6, 7, 8, 9, 1, 10, 10, 6]], [[2, 4, 3, 4, 4, 4, 4, 4, 4, 5, 6, 5]], [[2, 2, 2, 2, 2, 11, 2, 2]], [[10, 1, 3, 4, 1, 2, 9, 5, 6, 7, 9, 10, 10, 8, 6]], [[9, 0, 2, 4, 4, 0, 2, 4, 2, 4]], [[2, 7, 4, 4, 4, 4, 3, 4, 4, 4, 6, 12, 5, 6]], [[5, 2, 2, 3, 5, 3, 4, 3, 3, 3]], [[4, 5, 2, 3, 4, 5, 4, 4, 6, 4, 5, 6, 5]], [[1, 2, 3, 4, 10, 6, 6, 8, 8, 10, 10, 7, 4, 2]], [[6, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[1, 2, 4, 2, 2, 3, 0, 8, 3, 3, 3, 3, 1, 4]], [[1, 2, 3, 4, 5, 6, 6, 8, 9, 1, 10, 10, 10]], [[1, 2, 3, 4, 10, 6, 6, 6, 8, 8, 10, 10, 7, 4, 2]], [[1, 2, 3, 7, 9, 9, 1, 10, 3, 1, 1]], [[7, 0, 0, 2, 4, 4, 0, 4, 0]], [[2, 3, 4, 4, 4, 4, 8, 4, 4, 12, 6]], [[5, 0, 2, 2, 3]], [[2, 3, 4, 4, 5, 4, 4, 4, 4, 5, 6, 5, 5, 4, 5]], [[1, 2, 3, 4, 5, 6, 7, 7, 9, 1, 10, 10]], [[1, 12, 2, 3, 4, 2, 11, 6, 7, 10, 7, 6, 8, 4]], [[1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1]], [[1, 2, 3, 4, 10, 6, 6, 8, 8, 10, 10, 4, 2]], [[1, 12, 2, 4, 2, 10, 6, 7, 8, 8, 10, 7, 6, 4]], [[1, 2, 2, 3, 5, 6, 2, 8, 9, 10, 10, 8, 6, 4, 9, 10]], [[7, 0, 2, 3, 4, 5, 2, 6, 7, 8, 9, 2, 10, 3]]]\n    results = [True, True, False, True, True, False, True, True, False, False, False, True, True, True, False, False, True, False, False, True, False, True, False, True, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/127", "prompt": "\ndef intersection(interval1, interval2):\n    \n\n\n    def is_prime(a):\n        return not (a < 2 or any(a % x == 0 for x in range(2, int(a ** 0.5) + 1)))\n    if interval1[0] > interval2[0]: interval1, interval2 = interval2, interval1\n    l, r = interval2[0], min(interval1[1], interval2[1])\n    return \"YES\" if is_prime(r - l) else \"NO\"\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef intersection(interval1, interval2):\n    \n\n\n    def is_prime(a):\n        return not (a < 2 or any(a % x == 0 for x in range(2, int(a ** 0.5) + 1)))\n    if interval1[0] > interval2[0]: interval1, interval2 = interval2, interval1\n    l, r = interval2[0], min(interval1[1], interval2[1])\n    return \"YES\" if is_prime(r - l) else \"NO\"\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef intersection(interval1, interval2):\n    \n\n\n    def is_prime(a):\n        return not (a < 2 or any(a % x == 0 for x in range(2, int(a ** 0.5) + 1)))\n    if interval1[0] > interval2[0]: interval1, interval2 = interval2, interval1\n    l, r = interval2[0], min(interval1[1], interval2[1])\n    return \"YES\" if is_prime(r - l) else \"NO\"\n\n", "raw_modification": "```python\n<code_start>\ndef intersection(interval1, interval2):\n    \n    def is_prime(a):\n        # Introduce unnecessary variable assignments\n        result = True\n        if a < 2:\n            result = False\n        else:\n            for x in range(2, int(a ** 0.5) + 1):\n                if a % x == 0:\n                    result = False\n                    break\n        # Redundant check\n        if result:\n            return True\n        else:\n            return False\n\n    # Unnecessary swapping logic\n    if interval1[0] > interval2[0]:\n        temp = interval1\n        interval1 = interval2\n        interval2 = temp\n\n    # Redundant variable assignments\n    l = interval2[0]\n    r = min(interval1[1], interval2[1])\n    length = r - l\n\n    # Unnecessary function call\n    prime_check = is_prime(length)\n    if prime_check:\n        return \"YES\"\n    else:\n        return \"NO\"\n<code_end>\n```", "modification": "\ndef intersection(interval1, interval2):\n    \n    def is_prime(a):\n        \n        result = True\n        if a < 2:\n            result = False\n        else:\n            for x in range(2, int(a ** 0.5) + 1):\n                if a % x == 0:\n                    result = False\n                    break\n        \n        if result:\n            return True\n        else:\n            return False\n\n    \n    if interval1[0] > interval2[0]:\n        temp = interval1\n        interval1 = interval2\n        interval2 = temp\n\n    \n    l = interval2[0]\n    r = min(interval1[1], interval2[1])\n    length = r - l\n\n    \n    prime_check = is_prime(length)\n    if prime_check:\n        return \"YES\"\n    else:\n        return \"NO\"\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 2], [2, 3]], [[-1, 1], [0, 4]], [[-3, -1], [-5, 5]], [[-2, 2], [-4, 0]], [[-11, 2], [-1, -1]], [[1, 2], [3, 5]], [[1, 2], [1, 2]], [[-2, -2], [-3, -2]], [[0, 0], [0, 1]], [[10, 20], [15, 25]], [[-15, 15], [-10, 10]], [[0, 5], [6, 10]], [[5, 10], [1, 7]], [[11, 11], [11, 11]], [[1, 5], [3, 7]], [[-6, -2], [-1, 1]], [[7, 13], [10, 23]], [[-10, 0], [-2, 2]], [[-6, -2], [-6, -2]], [[6, 6], [6, 6]], [[0, 1], [0, 0]], [[3, 7], [3, 7]], [[7, 12], [10, 23]], [[-6, -2], [-1, 0]], [[1, 5], [1, 5]], [[5, 6], [5, 6]], [[5, 5], [5, 5]], [[0, 0], [0, 0]], [[3, 13], [3, 13]], [[-2, -2], [-2, -2]], [[2, 3], [2, 3]], [[10, 23], [10, 23]], [[-15, 20], [-15, 20]], [[10, 20], [10, 20]], [[5, 11], [1, 7]], [[7, 12], [7, 12]], [[5, 10], [-1, 7]], [[2, 5], [3, 7]], [[0, 3], [0, 0]], [[5, 10], [5, 10]], [[-10, 0], [-10, 0]], [[2, 2], [2, 2]], [[-15, 12], [-10, 10]], [[-2, 7], [-2, 7]], [[-15, 15], [-15, 15]], [[-10, 10], [-10, 10]], [[11, 15], [11, 15]], [[-15, 6], [-15, 6]], [[-15, 1], [-15, 1]], [[12, 12], [12, 12]], [[-10, 1], [-2, 2]], [[12, 13], [12, 13]], [[1, 1], [1, 1]], [[2, 5], [2, 5]], [[-10, 1], [-10, 1]], [[7, 13], [9, 10]], [[10, 15], [10, 15]], [[6, 10], [6, 10]], [[1, 6], [3, 7]], [[-10, -1], [-10, -1]], [[2, 13], [2, 13]], [[5, 9], [5, 9]], [[10, 21], [10, 21]], [[15, 25], [15, 25]], [[10, 10], [10, 10]], [[-15, 12], [-15, 12]], [[7, 13], [3, 10]], [[1, 5], [-1, 7]], [[-1, 1], [-1, 1]], [[-7, -2], [-7, -2]], [[4, 10], [4, 10]], [[-1, 0], [-1, 0]], [[9, 23], [9, 23]], [[0, 5], [9, 10]], [[2, 7], [2, 7]], [[6, 7], [6, 7]], [[-1, -1], [-1, -1]], [[23, 23], [23, 23]], [[9, 9], [9, 9]], [[1, 7], [1, 7]], [[10, 11], [10, 11]], [[7, 13], [7, 13]], [[0, 5], [0, 5]], [[0, 2], [0, 2]], [[8, 8], [8, 8]], [[-15, 10], [-15, 10]], [[-7, 5], [-7, 5]], [[5, 10], [-1, 6]], [[2, 12], [2, 12]], [[-15, -10], [-15, -10]], [[-7, 4], [-7, 4]], [[-7, 10], [-7, 10]], [[19, 23], [19, 23]], [[0, 1], [0, 1]], [[-10, 10], [-15, 15]], [[2, 4], [2, 4]], [[-12, 2], [-12, 2]], [[9, 10], [9, 10]], [[15, 15], [-10, -10]], [[-15, 9], [-15, 9]], [[4, 10], [-1, 7]], [[-11, 10], [-15, 15]], [[-11, 3], [-11, 3]], [[1, 12], [1, 12]], [[5, 23], [5, 23]], [[1, 6], [1, 6]], [[0, 5], [3, 10]], [[-10, 10], [-20, 20]], [[-100, 50], [25, 150]], [[-3, 5], [-9, -2]], [[-7, -5], [0, 5]], [[-1000, -999], [-1000, -999]], [[1000000000, 1000000001], [1000000001, 1000000002]], [[-999999999, 1000000000], [-1000000000, 1000000001]], [[7, 11], [13, 19]], [[100000007, 100000009], [100000009, 100000011]], [[-1000000000, 1000000000], [1, 1000000001]], [[-100, 50], [-100, 50]], [[-3, 50], [-3, 50]], [[50, 50], [50, 50]], [[1000000000, 1000000002], [1000000001, 1000000002]], [[-10, 1000000001], [-10, 1000000001]], [[1000000001, 1000000002], [1000000000, 1000000002]], [[1000000001, 1000000002], [1000000001, 1000000002]], [[-20, 20], [-10, 10]], [[1000000000, 1000000001], [1000000000, 1000000001]], [[-4, -4], [0, 5]], [[100000007, 100000009], [100000007, 100000009]], [[1000000000, 1000000001], [1000000001, 1000000001]], [[-20, 20], [-20, 20]], [[-999, -5], [-999, -5]], [[-20, 20], [-4, 10]], [[-100, 49], [-100, 49]], [[-4, 11], [-4, 11]], [[1000000001, 1000000001], [1000000001, 1000000001]], [[0, 1000000001], [0, 1000000001]], [[-1000000000, 1000000000], [-1000000000, 1000000000]], [[1000000000, 1000000002], [1000000000, 1000000002]], [[-999, 5], [-999, 5]], [[-999, -100], [-999, -100]], [[-100, -100], [-100, -100]], [[-999, -99], [-999, -99]], [[100000009, 100000011], [100000007, 100000009]], [[-4, 5], [-9, -2]], [[-20, 20], [-4, 9]], [[26, 150], [26, 150]], [[19, 19], [19, 19]], [[-999, 0], [-999, 0]], [[7, 11], [7, 11]], [[-9, -9], [-9, -9]], [[9, 11], [13, 19]], [[-4, -4], [-4, -4]], [[-999, 1], [-999, 1]], [[9, 11], [9, 11]], [[-999, 9], [-999, 9]], [[1000000000, 1000000003], [1000000001, 1000000002]], [[-4, 1000000000], [-4, 1000000000]], [[-1000000000, 999999999], [-1000000000, 999999999]], [[-20, 20], [-4, 5]], [[26, 27], [26, 27]], [[-100, 11], [-100, 11]], [[-3, -3], [-3, -3]], [[-1000, -5], [-1000, -5]], [[-999, 6], [-999, 6]], [[-999999999, 1000000000], [-999999999, 1000000000]], [[-4, 50], [-4, 50]], [[999999999, 999999999], [999999999, 999999999]], [[-9, 10], [-9, 10]], [[-4, 150], [-4, 150]], [[-4, 5], [-4, 5]], [[-1001, -1000], [-1001, -1000]], [[49, 1000000000], [49, 1000000000]], [[-1000, -1000], [-1000, -1000]], [[-20, 150], [-20, 150]], [[-1000, 7], [-1000, 7]], [[-1001, -1001], [-1001, -1001]], [[25, 25], [25, 25]], [[-999, -999], [-1000, -999]], [[13, 100000009], [13, 100000009]], [[-1000, 0], [-1000, 0]], [[-999, -999], [-999, -999]], [[-999999999, 20], [-4, 9]], [[-100, -99], [-100, -99]], [[-10, 50], [-10, 50]], [[-1000, -1], [-1000, -1]], [[-999, 25], [-999, 25]], [[13, 1000000000], [1, 1000000001]], [[150, 150], [150, 150]], [[1000000002, 1000000002], [1000000002, 1000000002]], [[-20, 20], [-4, -4]], [[-1000, -6], [-1000, -6]], [[-1000, 11], [13, 19]], [[19, 150], [19, 150]], [[-3, 999999999], [-3, 999999999]], [[26, 151], [26, 151]], [[-3, 51], [-3, 51]], [[-3, 1000000000], [-3, 1000000000]], [[-4, 0], [-4, 0]], [[-5, 0], [-5, 0]], [[-4, 10], [-4, 10]], [[100000009, 100000011], [100000008, 100000009]], [[-3, 25], [-3, 25]], [[49, 49], [49, 49]], [[-99, -99], [-99, -99]], [[-99, 25], [-99, 25]], [[100000009, 100000011], [100000008, 100000008]], [[-6, 999999999], [-6, 999999999]], [[50, 1000000001], [50, 1000000001]], [[100000008, 100000008], [100000008, 100000008]], [[100000007, 1000000000], [100000007, 1000000000]], [[19, 1000000000], [19, 1000000000]], [[-20, 1], [-4, 10]], [[-3, 0], [-3, 0]], [[50, 1000000002], [50, 1000000002]], [[50, 1000000000], [50, 1000000000]], [[25, 150], [25, 150]], [[-5, -5], [-5, -5]], [[25, 1000000001], [25, 1000000001]], [[-4, 13], [-4, 13]], [[8, 11], [13, 19]], [[-4, 10], [-20, 20]], [[-3, 100000009], [-3, 100000009]], [[13, 19], [9, 11]], [[-3, 100000008], [-3, 100000008]], [[-20, 1], [-20, 1]], [[-4, 19], [-4, 19]], [[-7, 5], [0, 5]], [[-4, 9], [-20, 20]], [[8, 11], [8, 11]], [[-20, 2], [-4, 10]], [[0, 1000000002], [0, 1000000002]], [[11, 1000000000], [11, 1000000000]], [[-1000, -99], [-1000, -99]], [[26, 26], [26, 26]], [[1000000000, 1000000003], [1000000000, 1000000003]], [[1000000000, 1000000004], [1000000000, 1000000004]], [[6, 25], [6, 25]], [[-20, 11], [-20, 11]], [[-11, 10], [-11, 10]], [[100000009, 100000011], [100000009, 100000009]], [[0, 11], [0, 11]], [[100000009, 100000011], [100000009, 100000011]], [[14, 100000009], [14, 100000009]], [[-999, -101], [-999, -101]], [[100000008, 100000009], [100000008, 100000009]], [[-10, 151], [-10, 151]], [[-1001, -1], [-1001, -1]], [[-11, 1], [-11, 1]], [[-100, 10], [-100, 10]], [[149, 150], [149, 150]], [[-4, 6], [-4, 6]], [[-1000000000, -4], [-1000000000, -4]], [[-10, -9], [-10, -9]], [[-999, 151], [-999, 151]], [[-100, -4], [-100, -4]], [[26, 149], [26, 149]], [[-4, 7], [-4, 7]], [[13, 1000000000], [13, 1000000000]], [[-2, 10], [-2, 10]], [[1000000000, 1000000001], [11, 1000000001]], [[-9, 1], [-9, 1]], [[-100, 0], [-100, 0]], [[1, 1000000002], [1, 1000000002]], [[-7, -5], [-7, -5]], [[151, 1000000001], [151, 1000000001]], [[-9, 11], [-9, 11]], [[100000009, 100000009], [100000009, 100000009]], [[13, 19], [13, 19]], [[11, 50], [11, 50]], [[-1000, 11], [-1000, 11]], [[-100, 150], [-100, 150]], [[1000000001, 1000000001], [1000000000, 1000000001]], [[-7, -6], [-7, -6]], [[100000011, 1000000002], [100000011, 1000000002]], [[8, 1000000004], [8, 1000000004]], [[-6, 50], [-6, 50]], [[-1000, -2], [-1000, -2]], [[-999999999, 1], [-999999999, 1]], [[-19, 150], [-19, 150]], [[-1002, -1000], [-1002, -1000]], [[-9, 1000000001], [-9, 1000000001]], [[-3, 24], [-3, 24]], [[-2, 51], [-2, 51]], [[-999999999, 50], [-999999999, 50]], [[-998, 0], [-998, 0]], [[48, 49], [48, 49]], [[999999999, 1000000002], [999999999, 1000000002]], [[14, 150], [14, 150]], [[48, 999999999], [48, 999999999]], [[100000008, 100000011], [100000008, 100000008]], [[-7, -3], [-7, -3]], [[-1000000000, -998], [-1000000000, -998]], [[-998, -100], [-998, -100]], [[27, 1000000001], [27, 1000000001]], [[999999999, 1000000000], [999999999, 1000000000]], [[-10, 9], [-10, 9]], [[13, 20], [13, 20]], [[-4, 27], [-4, 27]], [[11, 1000000000], [-1000000000, 1000000001]], [[-1, 51], [-1, 51]], [[5, 100000011], [5, 100000011]], [[27, 50], [27, 50]], [[-20, 1000000000], [-20, 1000000000]], [[-1, 11], [-1, 11]], [[-20, 1], [-4, -4]], [[5, 1000000002], [5, 1000000002]], [[-999999999, 51], [-999999999, 51]], [[100000010, 100000011], [100000010, 100000011]], [[-3, 100000008], [-9, -2]], [[999999998, 1000000002], [999999998, 1000000002]], [[-19, 0], [-19, 0]], [[-999, -2], [-999, -2]], [[14, 19], [14, 19]], [[-2, 11], [-2, 11]], [[-999, -1], [-999, -1]], [[-4, 28], [-4, 28]], [[-6, -6], [-6, -6]], [[-7, -4], [0, 5]], [[-999999999, 0], [-999999999, 0]], [[-99, 10], [-99, 10]], [[-3, 2], [-9, -2]], [[10, 13], [10, 13]], [[-1000000000, 1000000001], [-1000000000, 1000000001]], [[-5, 9], [-5, 9]], [[0, 6], [0, 6]], [[1000000000, 1000000000], [1000000000, 1000000000]], [[-21, 2], [-21, 2]], [[-4, 100000007], [-4, 100000007]], [[13, 149], [13, 149]], [[-7, -4], [-6, 5]], [[20, 150], [20, 150]], [[-5, 10], [-5, 10]], [[-999999999, 20], [-999999999, 20]], [[19, 151], [19, 151]], [[48, 48], [48, 48]], [[-21, 50], [-21, 50]], [[-20, 2], [-4, -4]], [[100000011, 100000011], [100000011, 100000011]], [[-11, -10], [-11, -10]], [[10, 27], [10, 27]], [[-4, 10], [-20, 9]], [[-998, 1], [-998, 1]], [[-998, -5], [-998, -5]], [[-999999998, -999999998], [-999999998, -999999998]], [[-999, 24], [-999, 24]], [[-21, 20], [-4, 10]], [[-1001, 7], [-1001, 7]], [[-10, -5], [-3, -1]], [[-10, -5], [-3, 0]], [[-1, 0], [0, 1]], [[0, 1], [2, 3]], [[0, 0], [1, 1]], [[1, 6], [4, 10]], [[0, 4], [-3, -1]], [[-10, 7], [-20, 20]], [[-8, -5], [-8, -5]], [[-999999999, 1000000001], [1000000001, 1000000002]], [[-1000, 7], [-20, 20]], [[-1, 5], [-1, 5]], [[-1001, -999], [-1001, -999]], [[-8, -7], [-8, -7]], [[-19, 20], [-19, 20]], [[-8, -6], [-8, -6]], [[-1001, 100000009], [-1001, 100000009]], [[-1, 150], [-1, 150]], [[-10, -8], [-10, -8]], [[-1000, 1000000001], [-1000, 1000000001]], [[-1001, 100000010], [-1001, 100000010]], [[-999, 1000000000], [1, 1000000001]], [[-6, 25], [-6, 25]], [[-1000000000, 100000010], [-1000000000, 100000010]], [[13, 13], [13, 13]], [[-6, 19], [-6, 19]], [[-1, 1000000002], [-1, 1000000002]], [[-7, 149], [-7, 149]], [[-999999999, 1000000000], [-8, 1000000001]], [[-100, 50], [25, 151]], [[25, 151], [25, 151]], [[-99, 50], [25, 150]], [[151, 151], [151, 151]], [[-8, 1000000002], [-8, 1000000002]], [[-9, 25], [-9, 25]], [[-1, 50], [-1, 50]], [[-999, 1000000000], [1000000000, 1000000001]], [[1, 1000000001], [1, 1000000001]], [[100000007, 100000007], [100000007, 100000007]], [[1, 26], [1, 26]], [[-10, 7], [-10, 7]], [[-19, -19], [-19, -19]], [[-999, 1000000000], [-999, 1000000000]], [[-19, 149], [-19, 149]], [[100000011, 1000000003], [100000011, 1000000003]], [[-19, 25], [-19, 25]], [[-999, 20], [-999, 20]], [[1000000001, 1000000002], [-999999999, 1000000001]], [[23, 151], [23, 151]], [[12, 100000007], [12, 100000007]], [[-999999999, 1000000000], [-8, -8]], [[7, 1000000000], [7, 1000000000]], [[-8, 1000000001], [-999999999, 1000000000]], [[0, 5], [-7, -5]], [[-5, 19], [-5, 19]], [[-19, 26], [-19, 26]], [[-1001, 1000000002], [-1001, 1000000002]], [[11, 100000007], [11, 100000007]], [[13, 50], [13, 50]], [[149, 149], [149, 149]], [[-20, 26], [-20, 26]], [[-9, -2], [-9, -2]], [[11, 151], [11, 151]], [[-10, 11], [-10, 11]], [[-9, 24], [-9, 24]], [[7, 7], [7, 7]], [[0, 100000007], [0, 100000007]], [[-999999999, 11], [-999999999, 11]], [[-1002, -1001], [-1002, -1001]], [[-3, 5], [-3, 5]], [[-10, -10], [-10, -10]], [[151, 152], [151, 152]], [[-7, 151], [-7, 151]], [[100000006, 100000007], [100000006, 100000007]], [[-999999999, 1000000001], [-999999999, 1000000001]], [[-2, 1000000002], [-2, 1000000002]], [[8, 1000000000], [8, 1000000000]], [[-2, 151], [-2, 151]], [[-8, -8], [-8, -8]], [[-1000000001, 1000000000], [1, 1000000001]], [[100000010, 1000000002], [100000010, 1000000002]], [[12, 50], [12, 50]], [[100000009, 1000000002], [-999999999, 1000000001]], [[-11, -8], [-11, -8]], [[12, 100000006], [12, 100000006]], [[12, 20], [12, 20]], [[1000000000, 1000000002], [-999999999, 1000000001]], [[-20, 10], [-20, 10]], [[-1000000001, 20], [-1000000001, 20]], [[11, 1000000001], [11, 1000000001]], [[1000000001, 1000000002], [1000000000, 1000000001]], [[1000000002, 1000000002], [1000000000, 1000000001]], [[20, 20], [20, 20]], [[-11, -7], [-11, -7]], [[-8, 1000000000], [-999999999, 1000000000]], [[-1000000001, 100000008], [-1000000001, 100000008]], [[-8, 100000011], [-8, 100000011]], [[-10, 8], [-10, 8]], [[-5, -1], [-5, -1]], [[-9, 1000000001], [1000000001, 1000000002]], [[-1000000000, 20], [-1000000000, 20]], [[13, 14], [13, 14]], [[-999999999, 1000000001], [1000000000, 1000000002]], [[-8, 7], [-8, 7]], [[12, 14], [12, 14]], [[-1001, 100000011], [-1001, 100000011]], [[150, 1000000002], [150, 1000000002]], [[-2, 150], [-2, 150]], [[100000007, 100000011], [100000007, 100000011]], [[-2, 19], [-2, 19]], [[-1000000000, -1001], [-1000000000, -1001]], [[23, 50], [23, 50]], [[-1002, -1002], [-1002, -1002]], [[24, 150], [24, 150]], [[999999999, 1000000000], [-8, 1000000001]], [[-11, 1000000000], [-8, -8]], [[-9, 12], [-9, 12]], [[-1003, -1002], [-1003, -1002]], [[-8, 1000000001], [-8, 1000000001]], [[-11, 19], [-11, 19]], [[-1000000000, 1000000000], [-999999999, -20]], [[14, 149], [14, 149]], [[12, 19], [12, 19]], [[100000010, 100000012], [100000010, 100000012]], [[100000009, 100000012], [100000009, 100000012]], [[149, 100000008], [149, 100000008]], [[11, 1000000002], [11, 1000000002]], [[11, 23], [11, 23]], [[14, 100000010], [14, 100000010]], [[20, 21], [20, 21]], [[150, 100000008], [150, 100000008]], [[11, 12], [11, 12]], [[151, 100000008], [151, 100000008]], [[100000010, 1000000003], [100000010, 1000000003]], [[-8, 25], [-8, 25]], [[-7, -7], [-7, -7]], [[-8, 1000000001], [1000000000, 1000000000]], [[-6, 27], [-6, 27]], [[-999, -11], [-999, -11]], [[26, 100000007], [26, 100000007]], [[-20, 50], [-20, 50]], [[-7, 1000000002], [-7, 1000000002]], [[-1000, 1000000000], [-1000, 1000000000]], [[-1000, -999], [-999, -999]], [[-9, 1000000001], [-999999999, 1000000000]], [[-1000, 100000009], [-1000, 100000009]], [[-999, 26], [-999, 26]], [[-1, 19], [-1, 19]], [[-6, 18], [-6, 18]], [[-8, -8], [-999999999, 1000000000]], [[-7, 100000007], [-7, 100000007]], [[-999999999, 1000000001], [13, 1000000002]], [[24, 24], [24, 24]], [[-999, 1000000000], [0, 1000000001]], [[-11, 1000000002], [-11, 1000000002]], [[18, 18], [18, 18]], [[8, 50], [8, 50]], [[-6, -5], [-6, -5]], [[-8, 1000000001], [999999999, 1000000000]], [[-10, 10], [-20, 0]], [[50, 151], [50, 151]], [[-11, 20], [-11, 20]], [[10, 149], [10, 149]], [[-20, 1000000002], [-20, 1000000002]], [[-100, 100000009], [-100, 100000009]], [[-999, 100000011], [-999, 100000011]], [[-1000, 12], [-1000, 12]], [[50, 100000009], [50, 100000009]], [[-5, 14], [-5, 14]], [[-6, 149], [-6, 149]], [[27, 149], [27, 149]], [[150, 1000000000], [150, 1000000000]], [[-2, 12], [-2, 12]], [[-1000, 151], [-1000, 151]], [[-5, 1000000002], [-5, 1000000002]], [[1000000001, 1000000002], [-999999999, 999999999]], [[-1000000000, -999999999], [-1000000000, -999999999]], [[-1000000001, 13], [-1000000001, 13]], [[-7, 11], [-7, 11]], [[-6, 147], [-6, 147]], [[-100, 149], [-100, 149]], [[-1000000001, -3], [-1000000001, -3]], [[-2, 1000000001], [-2, 1000000001]], [[-1003, -7], [-1003, -7]], [[-1000000000, 1000000001], [-999999999, 1000000000]], [[-19, 13], [-19, 13]], [[-8, 1000000000], [-8, 1000000000]], [[-8, 11], [-8, 11]], [[-999, -998], [-999, -998]], [[-1002, -5], [-1002, -5]], [[-11, -11], [-11, -11]], [[-999, 100000007], [-999, 100000007]], [[49, 151], [49, 151]], [[-1000000000, 100000011], [-1000000000, 100000011]], [[-1000000000, 100000008], [-1000000000, 100000008]], [[14, 14], [14, 14]], [[-8, 1000000001], [-1000000000, 1000000000]], [[-9, 1000000000], [-9, 1000000000]], [[11, 22], [11, 22]], [[-9, -8], [-9, -8]], [[14, 50], [14, 50]], [[-1000000001, 1000000000], [-1000000001, 1000000000]], [[100000007, 1000000002], [100000007, 1000000002]], [[50, 149], [50, 149]], [[-2, 21], [-2, 21]], [[14, 151], [14, 151]], [[-1000, -998], [-1000, -998]], [[-1000000000, 1000000000], [1, 21]], [[-3, 18], [-3, 18]], [[-999999998, 1000000000], [-8, 1000000001]], [[-3, 21], [-3, 21]], [[-999999999, 19], [-999999999, 19]], [[25, 100000007], [25, 100000007]], [[-999, 21], [-999, 21]], [[4, 5], [4, 5]], [[6, 8], [6, 8]], [[49, 1000000001], [49, 1000000001]], [[100000009, 1000000002], [-999999999, 1000000002]], [[-998, -998], [-998, -998]], [[-1001, 19], [-1001, 19]], [[-1003, 1000000001], [-1003, 1000000001]], [[-999, 19], [-999, 19]], [[100000009, 1000000001], [100000009, 1000000001]], [[-19, 49], [-19, 49]], [[21, 21], [21, 21]], [[-999999999, 1000000002], [-999999999, 1000000002]], [[-1, 151], [-1, 151]], [[4, 1000000001], [999999999, 1000000001]], [[-999999998, -7], [-999999998, -7]], [[-1000000001, 1000000000], [0, 1000000001]], [[-6, 150], [-6, 150]], [[-1000000000, -1000000000], [-1000000000, -1000000000]], [[-1000, 26], [-1000, 26]], [[-99, -1], [-99, -1]], [[-9, 100000012], [-9, 100000012]], [[-11, 27], [-11, 27]], [[21, 23], [21, 23]], [[15, 100000010], [15, 100000010]], [[20, 1000000002], [20, 1000000002]], [[-999, 153], [-999, 153]]]\n    resultsn    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/128", "prompt": "\ndef prod_signs(arr):\n    \n\n    if arr == []: return None\n    if 0 in arr: return 0\n    s, sgn = 0, 1\n    for x in arr:\n        s += abs(x)\n        sgn *= (x // abs(x))\n    return s * sgn\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef prod_signs(arr):\n    \n\n    if arr == []: return None\n    if 0 in arr: return 0\n    s, sgn = 0, 1\n    for x in arr:\n        s += abs(x)\n        sgn *= (x // abs(x))\n    return s * sgn\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef prod_signs(arr):\n    \n\n    if arr == []: return None\n    if 0 in arr: return 0\n    s, sgn = 0, 1\n    for x in arr:\n        s += abs(x)\n        sgn *= (x // abs(x))\n    return s * sgn\n\n", "raw_modification": "```python\n<code_start>\ndef prod_signs(arr):\n    \n    # Check if the array is empty\n    if len(arr) == 0: \n        return None\n    \n    # Check for zero in the array\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            return 0\n    \n    # Initialize sum and sign\n    s = 0\n    sgn = 1\n    \n    # Iterate over the array\n    for i in range(len(arr)):\n        x = arr[i]\n        \n        # Calculate absolute value\n        abs_x = abs(x)\n        \n        # Add to sum\n        for _ in range(abs_x):\n            s += 1\n        \n        # Determine sign\n        if x < 0:\n            sgn *= -1\n        else:\n            sgn *= 1\n    \n    # Calculate product of sum and sign\n    result = 0\n    for _ in range(s):\n        result += sgn\n    \n    return result\n<code_end>\n```", "modification": "\ndef prod_signs(arr):\n    \n    \n    if len(arr) == 0: \n        return None\n    \n    \n    for i in range(len(arr)):\n        if arr[i] == 0:\n            return 0\n    \n    \n    s = 0\n    sgn = 1\n    \n    \n    for i in range(len(arr)):\n        x = arr[i]\n        \n        \n        abs_x = abs(x)\n        \n        \n        for _ in range(abs_x):\n            s += 1\n        \n        \n        if x < 0:\n            sgn *= -1\n        else:\n            sgn *= 1\n    \n    \n    result = 0\n    for _ in range(s):\n        result += sgn\n    \n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 2, 2, -4]], [[0, 1]], [[1, 1, 1, 2, 3, -1, 1]], [[]], [[2, 4, 1, 2, -1, -1, 9]], [[-1, 1, -1, 1]], [[-1, 1, 1, 1]], [[-1, 1, 1, 0]], [[0, 0, 0, 0]], [[-1, -2, -2, -4]], [[-1, 0, 1, 2]], [[-2, -2, -2, 4]], [[1, 1, 1, 0]], [[-3, 5, -7, 9]], [[100, 10, 1, 0, -1, -10, -100]], [[2, 2, 2, 2, 2, 2, 2, -2]], [[1, 1, 1, -1, -1, -1, 0]], [[5, -3, 0, 4]], [[-1, 0, 2, 2, 2]], [[-1, 0, 1, -100, 0, 2]], [[-3, 5, -7]], [[-1, -2, -2, -4, -4, -4]], [[-1, -2, -2, -4, -4, -4, -4]], [[-1, 0, 0, -100, 0, 2]], [[0, 0]], [[-1, -3, -2, -4, -4, -4]], [[0, 4, 0, -100, 0]], [[-2, -2, 9, 4]], [[2, 2, 2, 2, 2, 2, 4, 2, -2]], [[2, 1, 1, -1, -1, 0]], [[0, 1, 0]], [[2, 1, 1, 0, -1, 0]], [[-1, 1, 2, -1]], [[2, 2, 2, 2, 2, 2, 3, 5, 2, -2]], [[0, 0, 0, -1, 1]], [[-1, 0, 1]], [[2, 3, 1, 1, -1, -1, 0]], [[100, 10, 1, -1, -10, -100, 10]], [[2, 2, 2, 2, 2, 2, -2, 2]], [[9, -1, -7, 0, 1, 9]], [[1, 2, 1, 1, 0, -1, 0]], [[5, -3, 0, 4, -3]], [[-2, 0, 0, -100, 0, 2]], [[2, 2, 2, 2, 2, 2, 2, -2, -2]], [[-2, -2, 9, -4]], [[1, 2, 1, 1, 0]], [[-3, -2, -4, -4, -4]], [[2, 2, 2, 2, 2, 2, -2, -2]], [[-1, 0, -100, 0, 2, 1]], [[3, -2, -4, -4, -4]], [[-1, 0, -100, 0, -2, 1]], [[2, 2, 2, 2, 2, 2, -2, -2, 2]], [[2, 0, 0, -100, 0, 2, 0]], [[2, 2, 2, 2, 2, 2, 3, 5, 2, -2, 2]], [[-1, 0, 0, -2, 1]], [[-3, -2, -4, -4]], [[-1, -3, -2, -2, -4, -4]], [[1, 10, 1, 0, -1, 0]], [[0, 1, 4, 0]], [[1, 1, -1, -1, -2, -1, 10]], [[2, 2, 2, 2, 0, 2, 2, 4, 2, -2]], [[1, 1, 0]], [[-3, 5, -7, 9, -3]], [[-3, -10, -4, -4]], [[-3, 3, -10, 9, -4, -4]], [[-3, 3, -10, 10, -4, -5]], [[-1, 0, 0, -2, 1, 0]], [[4, 10, -2, -1, 0]], [[-3, -1, -2, -2, -4, -4, -4, -4, -2]], [[2, 2, 2, -1, 2, 1, 2, 3, 5, 2, -2, 2]], [[0, 1, 1]], [[1]], [[-1, 1, 2, 2]], [[-1, 0, 1, -100, -1, 2]], [[2, 2, 2, 2, 2, 2, 2, -2, -2, -2]], [[1, 2, 1, 1, 0, -1, 0, 2]], [[9, -1, -7, 1, 1, 9]], [[-4, 0, 5, -10, 83, 4]], [[-2, 0, 0, -100, 0, 2, 0]], [[2, 2, 2, 2, 2, 2, -2]], [[-3, 1]], [[-3, -10, -4, -4, -10]], [[-3, -1, -2, -2, -4, -4, -4, -4, -2, -4]], [[0, 1, 1, 1]], [[1, 1, 1, 0, -1, 0]], [[3, 1, 1, -1, -1, 0, 0]], [[-3, 3, -10, 10, -4, -3, -5, 3]], [[9, -1, -7, 0, 1, 9, 0]], [[-1, 0, -100, 0, -2, 1, 0]], [[1, 1, 1, -7, 0, 1]], [[1, -10, 1, 1, 0, -1, 0]], [[2, 2, 2, 2, 2, 3, 2, -2, -2]], [[0, -1, -1, 0, 0]], [[-3, -10, 83]], [[2, 0, -100, 0, 2, 0]], [[100, 1, 1, -1, -1, -1, 0]], [[-1, 0, 1, -100, 0, -1, 2]], [[100, 10, 1, -1, -10, -100, 10, 1]], [[0, 0, -2, 1, 0]], [[-10, 3, -10, 10, -4, -5]], [[-2, 0, 0, -100, 0, 2, 0, 2]], [[2, 2, 2, 2, 2, 4, 2, -2]], [[0, 0, 0, -1]], [[9, -1, -7, 0, 1, 1, 9]], [[0, 1, 4, 0, 0, 1]], [[-1, 0, 0, 2, 1]], [[4, -7, -7]], [[1, 1, 2, -1, -1, 0, 1]], [[1, 2, 3, 4, 5, -6, -7, -8, -9, -10]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1]], [[1, 2, 3, 0, -3, -2, -1]], [[0, 0, 0, 0, 0, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7]], [[-1, -2, -3, -4, -5, -6, 0]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -10]], [[1, 2, 3, -4, -5]], [[1, 2, 3, 0, -3, 6, -1]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -10, -10]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[0, 1, 2, 2, 3, -4, -5, 10, 7, 8, -9, -10, -10, 7]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7, -6]], [[0, 1, 2, 2, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, -10]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7, -6]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -7, -6, 7]], [[0, 1, 2, 2, 3, -5, 10, 7, 8, 2, -10, -10, 7, -10, 10]], [[0, 0, 0, 0, 0, 3, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7, -6]], [[0, 0, 0, 0, 0, 13, 0, 0]], [[1, 2, 3, 0, 0, -3, -2, -1]], [[0, 1, 2, 2, 3, -5, 10, 7, 8, 2, -10, 7, -10, 10]], [[1, 2, 3, 4, 5, -6, -7, -8, -9]], [[-18, 0, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, -1]], [[1, 2, 3, 0, -3, 6, -1, 1]], [[1, 2, -3, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[2, 2, 3, 0, -3, 6, -1]], [[1, 2, 5, -4, -6, -5]], [[1, 2, 3, 4, 5, -6, -7, -8, -9, -10, 1]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, -20, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[1, 2, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[1, 2, 3, 4, 5, -6, -7, -8, -9, -7]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7]], [[1, 2, -9, 3, 0, -3, -2, -1, 1]], [[-18, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, -1]], [[0, 0, 0, 0, 0, 1, 2, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7]], [[0, 2, 2, 3, -5, 10, 7, 8, 2, -10, 7, -10, 10, 10]], [[0, 2, 2, 3, -5, 10, 8, 2, -10, 7, -10, 10, 10]], [[2, 3, 0, -3, 6, -1, 2]], [[1, 2, -3, 0, 5, 6, -7, 9, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 10]], [[0, 0, 0, -1, 0, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, -7, -6]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9]], [[1, 2, -9, -12, 3, 0, -3, -2, -1, 1]], [[0, 1, 2, 2, 3, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7]], [[0, 0, 0, 0, 0, 1, 2, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, -2]], [[0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0]], [[1, 2, -9, -13, 3, -19, -3, -2, -1, 1]], [[1, 2, 5, -4, -5]], [[1, 2, -9, -12, 1, 3, 0, -3, -2, -1, 1, -5, -12]], [[-18, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, -1, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 0]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 11, -12, 13, 14, -15, 16, 17, -19, -20, 9]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -7, -6, 7]], [[1, 2, 5, -4, -5, 1]], [[1, -9, 3, 0, -3, -2, 17, -1, 1]], [[1, 2, -9, -13, 3, -19, -2, -2, -1, 1]], [[1, 2, 2, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, -10]], [[-20, 1, 2, 2, -18, 3, -5, 10, 7, 8, 2, -10, -10, 7, -10, 10]], [[1, 2, -9, -12, 1, 3, 0, -2, -1, 1, -5, -12, 1]], [[0, 0, 0, 0, 0, 0, -1, 2, 1, 1, 1, 1, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1]], [[-18, 0, 2, 0, 0, 0, 0, -1, 1, 0, 1, -2, 1, 1, 1, -1]], [[1, -3, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -3, -19, -20, 9]], [[1, 2, -9, 8, -12, 1, 3, 0, -2, -1, 1, -5, -12, 1]], [[1, 2, -9, -13, 3, -19, -2, -2, -20]], [[-18, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, -1, -18]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 11, -12, 13, 14, -15, 16, 17, -19, -20, 9, 0]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 7, -5, -7, -6, 7, 0]], [[0, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1, 0]], [[1, 2, 3, 0, 0, -3, -19, -2, -1]], [[0, 2, 2, 3, -5, 10, 8, 2, -10, -1, 7, -10, 10, 10]], [[1, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 0]], [[1, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 0, 17]], [[1, 2, -10, 0, -3, -19, -2, -1]], [[2, 2, 3, 0, -3, 4, -1]], [[1, 3, -4, -12, 1]], [[0, 2, 2, 3, -5, 10, -19, -3, 2, -10, 7, -10, 10, 10]], [[1, 2, -3, -4, 0, 5, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1]], [[0, 2, 2, 3, -5, 10, 7, 2, -10, -10, 10, 10]], [[0, 1, 9, 2, 3, -4, -5, 10, 7, 8, -9, -10, 7]], [[1, 2, 3, -1, -3, -2, -1, 0]], [[0, 1, 2, 2, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7]], [[0, 0, 0, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, 6, -7, -6]], [[0, 2, 2, 3, -5, 10, 8, 2, -10, 7, -10, 10, 10, 10]], [[1, 2, -3, -4, 0, 5, 2, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, 11, -7, -6, 7, 5]], [[1, 2, 3, -3, -2, -1]], [[1, -4, 3, 4, 5, -6, -7, -8, -9, -7]], [[1, 1, 4, 0, -3, 6, -1, 1]], [[1, 2, 0, 5, 6, -7, 9, 16, 11, -12, 13, 14, -15, 16, 17, -18, -19, 17, -20, 9]], [[1, 5, -5, 1]], [[1, 4, 0, -3, 6, -1, 1]], [[0, 0, 0, 0, 0, 1, 2, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, -2, -6]], [[0, 2, 2, 3, -5, 10, 7, 2, -10, -10, 10, 10, 7]], [[0, 0, 0, 0, 1, 1, 2, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7]], [[0, 0, 0, -12, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, 6, -7, -6, -12]], [[1, 2, 3, -1, -3, -2, -1, 0, 2]], [[1, -6, 3, 0, -9, 6, -1]], [[1, 9, 2, 3, -4, -5, 10, 7, 8, -9, -10, 7]], [[-18, 0, 2, 0, 0, 0, -1, 1, 0, 1, -2, 1, 1, 1, -1]], [[1, 2, -3, -4, 0, 5, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1, -3]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -10, -19, -10]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -7]], [[0, 0, 0, 0, 1, 2, 4, -1, -2, -3, -4, 5, 7, -5, -7, -6, 7, 0]], [[-8, 0, 0, -18, 0, 1, 2, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7]], [[1, -4, 2, 3, 0, -3, 6, -1, 1]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 11, -12, 13, 14, -15, 16, 17, -19, -20, 9, 13]], [[1, 2, 5, -6, -5]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 9, -12, 13, 14, -15, 16, 17, -19, -20, 9, 13]], [[0, 2, 2, 3, -5, 10, 8, 2, -10, -1, 7, -10, 10, 10, 2]], [[1, 2, 5, -6, 3]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -2, -7]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -3, 5, 6, 7, -5, -6, -7]], [[1, 2, 3, 4, 5, -6, -7, -8, -8]], [[1, 2, -9, -12, 1, 3, 0, -3, -2, -1, -11, 1, -5, -12]], [[1, 2, 3, 4, 5, -6, 3, -7, -8, -8]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -7, -6, 7, 7]], [[1, 2, 3, 4, 5, 14, -6, -7, -8, -9, -10, 1, 1]], [[1, -13, 2, -10, 0, -3, -19, -2, -1, -19]], [[1, -4, 2, 16, 0, -3, 6, -1, 1]], [[0, 0, 0, -12, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, 6, -7, -6, -12, -12]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, 10, -3, -4, 5, 6, 7, -5, -6, -7]], [[1, -4, -9, 3, 4, 5, -6, -7, -8, -9, -7]], [[1, 2, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, -10]], [[2, 3, 0, -3, 6, -1, 2, 2]], [[0, 0, -2, 0, 0, 0, 0, -1, 2, 1, 1, 1, 1, 1, 2, 0]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -3, -4, 5, 6, 7, -5, -6, -7, -6]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 7, -5, -7, -6, 7, 0, -5]], [[2, 3, 4, 0, -3, 6, -1, 2, 2]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, -11, 9, -12, 13, 14, -15, 16, 17, -19, -20, 9, 13]], [[1, 2, 3, 0, -2, -1]], [[-18, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, -1, 1]], [[0, 1, 2, 2, 3, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7, -9, -5]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, 10, -7, 7, 5]], [[0, 2, 3, 10, -5, 10, 7, 2, -10, -10, 10, 10]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9, 2]], [[0, 2, 2, 3, 10, 7, 2, -10, -10, 10, 10, 7]], [[1, 2, -9, -13, 3, -19, 13, -3, -2, -1, 1]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -10, 1, -10]], [[-5, 0, 0, 0, 0, 1, 1, 2, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, 4, 0]], [[0, 1, 2, 2, 3, -4, -5, 10, 7, 7, -9, -10, -5, -10, 7, -10]], [[0, 0, 0, -12, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, 6, -7, -6, -12, -2, -12]], [[1, -4, -9, -10, 3, 4, 5, -6, -7, -8, -9, -7]], [[0, 1, 9, 2, 3, -4, -5, 10, 7, -8, 8, -9, -10, 7]], [[1, 2, 0, -3, 6, -1]], [[1, 2, 5, -6, -5, 2]], [[0, 1, 2, 2, 3, -4, -5, 10, 7, 8, -9, -10, 2, -5, -10, 7, -9, -5, -9]], [[1, 2, 5, -4, -6, 2]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, 6, 5, 6, 7, -5, -6, -7, -6, 0]], [[1, 2, -11, -4, -6, -5]], [[1, 2, 3, 4, 5, -6, 3, -7, -8, -8, -6, -7]], [[1, 2, 4, 5, 14, -6, -9, -8, -9, -10, 1, 1]], [[0, 0, 0, 0, 0, 1, 2, 4, -1, -2, -3, -4, 5, 7, -5, -7, -6, 7, 0, 2]], [[-1, -2, -3, -5, -6, -7, -9, -10, -10]], [[1, 2, 3, -1, -3, -2, -1, 0, 2, 1]], [[0, 2, 2, 3, -5, 10, 7, -10, -10, 10, 10, -10]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7, -6, 0, -6, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, 10, 6, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9, 2, -4]], [[2, 2, 3, 0, -3, 3, -1]], [[0, 10, 2, 2, 3, -5, 10, 8, 2, -10, 7, -10, -10, -11, 10, 0]], [[-18, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, -1]], [[0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0, 0, -1]], [[-5, 0, 0, 0, 0, 1, 1, 2, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, 4, 0, -6, 3]], [[1, -4, 3, 4, 5, -6, -7, -8, -9, -7, 1]], [[1, -4, -9, -10, 3, 5, -6, -7, -8, -9, -7]], [[0, 0, 0, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 7, 7, -6, 6, -7, -6]], [[0, 2, 2, 3, -5, 10, 7, -10, -18, 10, -10]], [[0, 0, 0, 0, 0, 1, 2, 3, 3, 4, -2, -3, 16, -4, 5, 6, 17, -5, -6, -7]], [[1, 2, 3, 0, -3, -19, -2, -1]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, 1]], [[0, 2, 2, 3, -5, 11, -4, 7, -10, -10, 10, 10, -10]], [[1, -5, 2, 3, -5]], [[-2, 0, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1, 0]], [[-2, -3, -4, -5, -6, 0]], [[0, 0, 0, 0, 2, 1, 2, 4, -1, -2, -3, -4, 5, 7, -5, -6, 7, 0, 2]], [[1, 2, 0, -3, -1]], [[1, -12, -9, -13, 3, -19, -20]], [[-1, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, 5, 7, -5, -7, -6, 7, 0]], [[1, 2, 3, -1, -3, -2, -1, 0, 2, 0]], [[1, -9, -12, 3, 0, -3, -2, -11, -1, 1]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, -20, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20]], [[1, 9, 2, 2, -4, -5, 7, 8, -9, -10, 7]], [[1, -4, -9, 3, 17, 5, -6, -8, -9, -7]], [[-8, 1, 2, -3, -4, 0, 5, 6, -7, 9, -20, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[2, -10, -3, 6, -1]], [[1, 0, 0, 0, 0, 0, 1, 2, 4, -1, -2, -3, -4, 5, 7, -5, -7, -7, 7, 0, 2]], [[1, 2, 4, 5, 14, -6, -9, -8, -11, -10, 1, 1]], [[0, 0, 0, 0, 13, 0]], [[0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, -20, 10, 11, -12, 13, -3, 14, -15, 16, 17, -18, -19, -20]], [[1, 2, -6, -9, -13, -6, -19, -2, -2, -20]], [[1, 2, 0, 5, -7, 9, 16, 11, -12, 13, 14, -15, 16, 17, -18, -19, 17, -20, 9]], [[1, 2, 3, 0, -3, -1]], [[1, 2, 3, -4, -5, 10, 7, -4, 8, 2, -10, -10, 7, -10]], [[0, 0, 0, -12, -1, 1, 2, 4, 4, -1, -7, -2, 11, -4, 5, 6, 7, -6, 6, -7, -6, -12, -2, -12]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, 13, -19, -10]], [[1, 2, -9, -13, 3, -19, -3, -2, -1, 1, -13]], [[-18, 0, -18, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, -1]], [[2, -10, -3, 6, -1, 2]], [[-18, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, -1, 0, 1]], [[-1, -2, -3, -4, -5, -6, -7, 8, -4, -9, -10]], [[1, -4, -9, 3, 17, 5, -6, -8, -9, -7, -6]], [[1, 2, 2, 0, -3, -19, -2, -1]], [[1, 2, 3, 4, 5, 3, -7, -8, -8]], [[-20, 3, -4, -12, 1]], [[0, 0, 0, 0, 4, -5, 1, 2, 3, 4, -1, -2, -3, -4, 6, 7, -5, 11, -7, -6, 7, 5, 7, 0]], [[1, -13, 2, -10, 0, -3, -19, -11, -2, -1, -19]], [[1, 10, 2, 5, -4, -6, -5]], [[1, 2, -9, -12, 3, -3, -2, -1, 1]], [[0, 2, 2, 3, -4, 10, 8, 2, -10, 7, -10, 10, 10, 10]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 3, -1, -2, 6, 5, 6, 7, -5, -6, -7, -6, 0]], [[-18, 0, 0, 0, 0, 0, 0, -2, 1, 1, 1, 1, 1, 1, -1, 1]], [[1, -13, 9, -10, 0, -3, -19, -11, -2, -1, -19]], [[0, 0, 2, 1, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 11, -12, 13, 14, -15, 16, 17, -19, -20, 9, 5, 0]], [[1, 5, -4, -5]], [[0, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1, 0, -1]], [[-18, 0, -18, 0, 1, 0, 0, -1, 1, 1, 1, 1, 1, -1]], [[0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -7, -6, 7]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9, 2, -4]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, 10, -15, -7, 7, 5, 6]], [[0, 1, 2, 3, -4, -5, 7, 8, -9, 13, -19, -10]], [[1, 2, 3, 4, 5, -6, -7, -8]], [[1, 2, -19, 3, 0, 0, -3, -2, -1, -1, 1]], [[0, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 0]], [[1, -7, -9, 3, 4, 5, -6, -7, -8, -9, -7]], [[1, 2, -9, -12, 3, 0, -3, -2, -1, 1, 0]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5]], [[0, 2, 2, 3, -5, 11, -4, 7, -2, -10, 10, 10, -10]], [[1, 2, 2, 0, -3, -19, -2, -1, -1]], [[0, 1, 2, 2, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7, -10, 8]], [[0, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, -3, 1, 0]], [[1, 2, 4, 4, 5, -6, -7, -8, -9]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, 10, 6, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9, 2, -4, 16]], [[1, 2, 0, -3, 6, -1, 6]], [[0, 1, 2, 2, 3, -5, 10, 7, 8, 2, -10, -10, 8, 10]], [[1, 2, 3, 4, 5, -6, -7, -8, -3, -9, 5, -10]], [[0, 1, 2, 3, -4, -5, -6, 7, 2, 8, -9, -10, -10]], [[3, 0, -3, 6, -1, 0]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, -1]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, 10, -15, -7, 7, 5, 6, -7]], [[0, 6, 1, 2, 3, -4, -5, -6, 8, -9, 13, -19, -10]], [[2, 2, -3, 6, -1, -1]], [[3, 1, 1, 4, 0, -3, 6, -1, 1]], [[0, 2, 3, -5, 10, 8, 2, -10, 7, -10, 10, 10, 10]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -3, 5, -1, 6, 7, -5, -6, -7, -3]], [[4, 2, 2, 3, 0, -3, 6]], [[0, 1, 2, 3, -4, -5, -6, 7, -9, -10, 1, -10]], [[0, 1, 2, 3, 13, -4, -5, -6, 7, 8, -9, -10, 1, -10]], [[1, -5, 2, 3, -5, -5]], [[0, 2, 2, 3, -5, 10, 7, -10, 1, -18, 10, -10]], [[1, -6, 3, 0, -9, -1]], [[2, -10, 2, 6, -1]], [[0, 2, 2, 3, -5, 10, -19, -3, -18, 2, -10, 7, 10, 10, 2]], [[0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, 1, 1, 0]], [[1, 2, -3, -10, 0, -3, -19, -2, -1, -3]], [[0, 0, 0, -12, 3, 1, 2, 4, 0, -1, -7, -2, 11, -4, 5, 6, 7, -6, 6, -7, -6, -12, -2, -12]], [[1, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, -2, 9, 2, -4]], [[1, 1, 4, 0, -3, 6, -1, 1, 6]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 7, -5, -7, -6, 7, 0, -2]], [[-1, -2, -3, -4, -5, -6, 0, 0]], [[0, 6, 1, 2, 3, -4, -5, -6, 8, -9, 13, -19, -10, -6]], [[0, 0, 0, -12, 3, 1, 2, 4, 0, -1, -7, -2, 11, -4, 6, -2, -6, 6, -7, -6, -12, -2, -12, 0]], [[1, 2, -6, -13, -6, -19, -2, -2, -20, -2]], [[1, -3, -4, 10, 0, 5, 6, -7, -8, -4, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 0, -8]], [[1, 2, -9, 0, 5, 6, -7, 8, 10, 11, -12, 13, 14, -15, 16, 17, -19, -20, 9, 0]], [[-1, -2, -3, -5, -4, -5, -6, -7, 8, -4, -9, -10]], [[1, -2, 0, -3, 6]], [[1, -4, 3, 17, 5, -6, -8, -9, -7, -6]], [[1, 2, 0, 5, -7, 9, 11, -12, 13, 14, -14, 16, 17, -18, -19, 17, -20, 9, -12]], [[0, 2, 2, 3, -4, 10, 8, 1, -10, 7, -10, 10, 10, 10, 3]], [[0, 1, 2, 2, 3, 10, 7, 8, 2, -10, -10, 7, -10, 10, 7]], [[0, 0, 0, 0, 0, 3, 1, 2, 4, -1, 1, -2, -3, -4, 5, 6, 7, -5, -6, -7, -6]], [[-2, -3, -6, -4, -5, -6, 0]], [[0, 0, 0, -12, 3, -8, 2, 4, 0, -1, -7, -2, 11, -4, 5, 6, 7, -6, 6, -7, -6, -12, -2, -12]], [[-18, 0, 0, -2, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, -1, 1]], [[0, 2, 2, 3, -5, 10, 7, 8, -10, -18, 10, -10]], [[1, -13, 2, -10, 0, -3, -19, -2, -1, -19, -1]], [[0, 0, 2, 1, 0, 0, -5, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1]], [[1, -3, -4, 10, 0, 5, 6, -7, -8, -4, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, 0, -8]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, 5, 6, 7, -5, 10, -15, -7, 7, 5, 6]], [[1, 2, -9, 3, 0, -3, -2, -1, 1, 1, 0]], [[2, 2, 6, -1]], [[1, 3, 4, 5, -6, -7, -8, -8]], [[0, 2, 2, 3, -5, 10, 8, 2, -10, 7, -10, 17, 10, 10, 10]], [[1, 0, 2, -3, -4, 0, 5, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1, -3]], [[0, 1, 2, 2, 3, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7, 1]], [[1, 2, 3, 4, 5, 3, 4, -7, -8, -8]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, -3, 5, 6, 7, -5, 10, -15, -7, 7, 6, 6, -7]], [[1, 14, 2, 0, 5, 6, -7, 9, 16, 11, -12, 13, 14, -15, 16, 17, -18, -19, 17, -20, 9, 16]], [[1, 9, 2, 3, -4, -5, 10, 7, 8, 10, -9, -10, 7, 1]], [[1, 2, -9, 3, -1, -3, -2, -1, 2]], [[0, 1, 2, 2, 1, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, 3]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -3, 5, 6, 7, -5, -6, -7, -5]], [[1, -4, 2, 16, 0, -3, 6, 1]], [[0, 0, 0, 0, 0, -1, 2, 1, 1, 1, 1, 0, 0, 0]], [[2, 3, 0, -3, 6, -1, 2, 3, 3]], [[2, -10, 2, 6, -1, 2]], [[0, 2, 0, 0, 0, 0, -1, 1, 0, 1, -2, 1, 1, 1, -1]], [[1, 2, 3, -9, 4, 5, -6, -7, -8, -9]], [[2, -10, -3, 6, -1, 2, 2]], [[1, 2, 3, 4, 5, -6, -7, -8, -9, -10, 1, 4]], [[0, 17, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -2, 0]], [[1, 9, -6, -13, -6, -19, -2, 16, -20, -2]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 11, -12, 14, -15, 16, 17, -19, -20, 9, 5, 0]], [[1, -7, 4, 5, -6, -7, -8, -9, -7]], [[1, 2, -9, -13, 3, -19, -3, -2, 1]], [[0, 0, 0, 0, -6, 1, 2, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, -2, -6]], [[1, 2, 0, -3, 6, -1, 6, -1]], [[0, 10, 0, -12, 3, -8, 2, 4, 1, 0, -1, -7, -2, 11, -4, 5, 6, 7, -6, 6, -7, -6, -12, -2, -12, 0]], [[1, 2, -9, -13, 3, -19, -2, -2, -1, 1, -2]], [[1, 1, 4, 0, -3, 6, 1]], [[0, 1, 2, 2, 1, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, 3, -5]], [[1, -13, 2, -9, 0, -3, -19, -2, -1, -19]], [[1, -5, 0, 3, -5]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -3, 5, -1, 7, -5, -6, -7, -3]], [[1, -9, -12, 3, 0, 2, -3, -2, -1]], [[-8, 0, 0, -18, 0, 1, 3, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, -7]], [[5, -15, -4, -5]], [[1, 2, -3, -4, 0, 5, -7, 9, 11, 13, 14, -15, 16, 17, -18, -19, -20, 1]], [[0, 2, 2, 3, -5, 11, -4, 7, -2, -10, 10, -10]], [[1, 2, 3, 0, -3, 17, -19, -2, -1]], [[0, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, -2, 1, 1, 1, 0]], [[0, 3, 2, 3, -5, 10, 7, -10, -10, 10, 10, -10]], [[1, 2, 3, 4, 5, -6, 3, -7, -8, -8, 3, 3]], [[1, 3, 0, 0, -3, -19, -2, -1]], [[4, 0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1, 0, 1]], [[2, -10, 0, -3, 6, -1, 2, 2]], [[-1, -2, -4, -5, -6, -7, -8, -8, -9, -10, -5]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -10, -6, 2]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 11, -12, 13, 14, -15, -19, -20, 9]], [[1, 2, 0, 5, 6, -7, 9, 16, 11, -12, 13, 14, -15, 16, 17, 3, -18, -19, 17, -20, 9]], [[1, 2, -18, 5, -4, 1, 5]], [[0, 1, 2, 2, -6, 3, -4, -5, 10, 8, -9, -10, -10, 7]], [[-1, -2, -4, -6, -7, -8, -8, -9, -10, -5]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -9, 5]], [[-8, 0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -9, 5]], [[0, 2, 3, 10, -5, 10, 7, 2, -10, -10, 10, 10, -14, 10, -5]], [[1, 2, -5, -9, -13, 3, -19, -2, -2, -20]], [[1, -1, -6, -4, 0, -9, 6, -1]], [[1, 2, -3, -8, -4, 0, 5, 6, -7, 9, 10, 6, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9, 2, -4, 16, -15]], [[0, 0, 0, -4, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 16, -5]], [[1, 2, 3, 3, -1, -3, -4, -1, 0, 2, 0]], [[0, 0, 0, -12, -1, 1, 2, 4, 4, -1, -7, -2, 11, -4, 5, 6, 7, -6, 6, -7, -6, -12, -2, -13, 0]], [[-2, 1, 14, 0, -1]], [[1, 9, 2, 3, -4, -5, 11, 7, 8, -9, -10, 7]], [[-2, 1, 0, -1, 0]], [[1, -13, -10, 0, -3, -19, -11, -2, -1, -19]], [[0, 2, 2, 3, -4, -5, -6, 7, 8, -9, -10, -10, 0]], [[2, 3, 0, -3, -10, -1, -2, 1, 2, 2]], [[1, 2, 3, 4, -6, -7, -8, -9, -7]], [[1, 2, -19, 3, 0, 0, -3, -2, -1, -1, 1, -1]], [[8, 1, 2, 3, -4, -5, -6, 7, 8, -9, -9, 5]], [[1, 2, -3, 0, 5, 6, -7, 9, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[4, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1, 0, 2]], [[1, -9, 3, 0, -3, -2, -1, 1, -9]], [[0, 0, 0, 0, 0, -1, 2, -1, 1, 1, 1, 1, 1]], [[2, -10, -3, 7, -1, 2, 2]], [[1, 2, -12, 1, 3, 0, -3, -2, -1, 1, -5, -12, -1]], [[1, 2, -9, -13, 3, -19, 13, -3, 14, 1]], [[0, 0, -5, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0]], [[0, 0, -5, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0]], [[0, 1, 2, 3, -4, -5, 7, 8, -9, -9, 5]], [[4, 3, 4, 5, -6, -7, -8, -8]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, 3]], [[2, 3, 0, -3, 6, -1, 2, 3, 3, -1]], [[0, 0, 13, 0]], [[1, 1, 4, -5, -3, 6, -1, 1]], [[2, 3, 0, -3, -10, -1, -1, 1, 2, 2]], [[0, 2, 2, 3, -5, 10, 8, 2, -10, -1, 7, -12, 10, 10]], [[7, 2, 3, -4, -5]], [[1, -6, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, -2, 9, 2, -4]], [[-1, -2, -3, -4, -6, 0]], [[2, 2, 1, 3, 0, -3, 4, -1]], [[1, 2, -3, -4, 0, 5, -7, 9, 11, -20, 13, 14, -15, 16, 17, -18, -19, -20, 1]], [[1, -13, 2, -10, 0, -3, -19, -2, -1, -19, 0]], [[1, 2, -3, -8, -4, 0, 5, 6, -7, 9, 10, 6, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 10, 2, -4, 16, -15]], [[1, 9, 2, 3, -4, -5, 11, 7, -9, -10, 7]], [[0, 1, 2, 2, -10, 3, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7, 1]], [[0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -9, -7, -1]], [[0, 1, 2, 2, -6, -4, -5, 10, 8, -9, -10, -10, 7]], [[2, 2, 6, -2]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7, -6, 4]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, 11, -5]], [[1, 2, 3, 0, -3, -2, -1, -1]], [[0, 2, 2, 3, -5, 10, -18, -10, 2, -18, 10, -10]], [[0, 1, 3, 2, 2, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7]], [[1, 2, 3, 0, -2, -1, 2]], [[1, 2, 3, 0, -3, 0]], [[0, 0, 0, 0, 1, 0, -1, 2, 1, 1, 1, 1, 1, 0]], [[1, -9, 3, 0, -3, -2, -1, 1, -9, 3]], [[0, 0, 0, 0, 0, 0, -1, 2, 1, 1, 1, 1, 1, 0, 0, 0, -1]], [[0, 1, 2, 2, 3, -4, 10, 7, 8, 2, -10, -10, 7, -10, 7]], [[1, -4, -9, -10, 3, 4, 5, -6, -7, -8, -20, -7]], [[-20, 3, -4, 1, -12, 1]], [[0, -5, 1, 2, 3, -4, -5, 7, 8, -9, 13, -19, -10]], [[2, 2, 6]], [[0, 17, 1, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -2, 0, 17, 6, 6]], [[1, 1, 2, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, -10]], [[0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, 10, -15, -7, 7, 5, 6, 7]], [[1, 2, 3, 3, 5, -6, -7, -8]], [[2, 2, -3, 6, -1, -1, -1]], [[1, -4, -4, 0, 3, 7]], [[2, -10, -3, 7, 2, 2]], [[0, 0, 0, -4, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 16, -5]], [[0, 2, 2, 3, -5, 11, -4, 7, -10, 10, 10, -10, -10]], [[0, 6, 1, 2, 3, -4, -6, 8, -9, 13, -19, -6]], [[1, 6, 2, 5, 14, -6, -9, -8, -11, -10, 1, 1]], [[1, 2, -3, -8, -4, 0, 5, 6, -7, 9, 10, 6, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 10, 2, -4, 16, -15, -3]], [[0, 0, 0, -2, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7]], [[1, 2, 3, 4, 5, 3, 4, -7, -8, -8, 4]], [[0, 1, 2, 2, 3, -5, 10, 7, 8, -9, -10, -5, -10]], [[1, 9, -6, -13, -19, -2, 16, -20, -2]], [[1, 2, -9, -12, 3, -3, -2, -2, 1]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 9, -12, 13, 14, -15, 16, 17, -19, -20, 9, 13, -20]], [[-12, 2, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[0, 2, 2, 3, -5, 10, 7, 8, -10, -18, 10, -10, 10]], [[0, 0, 0, 0, 0, 1, 1, 4, -1, -3, -3, -4, 5, 7, -5, -7, -6, 7, 0, 2]], [[1, -5, -9, 2, 3, -5, -5, -5]], [[1, -4, -9, 3, 17, -6, -8, -9, -7, -6]], [[1, -7, 4, 5, -6, -7, -8, -2, -7]], [[0, 3, 1, 2, 3, -4, -5, -6, 7, 8, -9, -10, -10]], [[0, 0, 0, 0, 0, 1, 2, 3, 3, 4, -2, 14, 16, -4, 5, 6, 17, -5, -6, -7, 0]], [[0, 1, 2, -4, -5, 10, 7, 8, -9, -10, -5, -10, 7]], [[0, 0, 0, 0, 1, 2, 3, 1, 4, -1, -2, -3, -4, 5, 6, 7, -5, -7]], [[4, -4, 2, 3, 0, -3, 6]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, -15, 17, -18, -19, -20, 0]], [[4, 1, 2, 2, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, -10]], [[1, -4, 2, 3, 0, -3, 6, -1, 1, 2]], [[1, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -19, -8, -20, -2, 9, 2, -4]], [[1, 9, -6, -20, -13, -19, -19, -2, 16, -20]], [[0, 1, 3, 2, 2, -4, -5, 10, 7, -13, -9, -10, -5, -10, 7, -10]], [[0, 0, 0, 0, 1, 0, -1, 2, 1, 1, 1, 1, -7, 1, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9, 2, -4, -3]], [[0, 0, 0, -12, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, 6, -9, -7, -6, -12, -2, -12]], [[0, 6, 1, 2, 3, -4, -6, -9, 13, -19, -6]], [[-1, -2, -3, -4, -5, -6, -7, 8, -3, 6, -9, -10, -10]], [[0, 0, 0, 0, 0, 1, 2, 3, 3, 4, -2, 14, 16, -4, 5, 6, 17, -5, -6, 0]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7, -6, -18]], [[1, 2, -3, -8, -4, 0, 5, 6, -7, 9, 10, -19, 6, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, 9, 2, -4, 16, -15]], [[0, 2, -7, 3, -5, 11, -4, 7, -10, 10, 10, -10, -1, -10]], [[1, 2, -9, 3, -1, 4, -3, -2, -1, 2, -2]], [[0, 6, 1, 2, 3, 14, -4, -5, -6, 8, -9, 13, -19, -10]], [[2, 2, 3, 0, -3, -1]], [[1, -6, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -8, -20, -2, 10, 9, 2, -4]], [[1, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 9]], [[1, 2, -9, -13, 3, -19, -2, -2, -20, -2]], [[0, 0, 0, 0, 0, 2, 3, 4, -1, -2, 6, 5, 6, 7, -5, -6, -7, -6, 0]], [[0, 0, 0, 0, 1, 13, 0]], [[0, 2, 2, 4, -5, 10, 8, 2, -10, 7, -10, 10, 10, 10]], [[0, 0, 0, 0, -1, 2, 1, 11, 1, 1, 0, 0, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, 9, -20, 5, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20]], [[0, -12, 0, 0, 0, 0, -1, 2, 1, 1, 1, 1, 1, 0, 0, 0, -1]], [[0, 13, 0, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, 6, -7, -6]], [[0, 1, 2, 2, 3, -4, 10, 7, 8, -9, -10, -10, 7]], [[1, 2, 0, 5, 6, -7, 0, 9, 16, 11, -12, 13, 14, -15, 16, 17, -18, -19, 17, -20, 9]], [[0, 2, 2, 3, 10, 7, 2, -10, -10, 10, 6, 10, 7]], [[0, 0, 0, -1, 1, 2, 0, 3, 4, -1, -7, -2, -3, -4, 5, 6, -6, 6, -7, -6, 1, -6]], [[-18, 0, 2, 0, 0, 0, -1, -3, 0, 1, -2, 1, 1, -1]], [[1, 0, 2, -4, 0, 5, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1, -3]], [[0, 0, 0, 0, 0, -15, 2, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, 2]], [[1, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, -21, 14, -15, 16, 17, -19, -8, -20, -2, 9, 2, -4]], [[1, 2, 3, -2, -1, -1]], [[0, 2, 2, -5, 10, 7, 8, 2, -10, 7, -10, 10, 10]], [[1, 2, 3, -1, -3, 8, -2, -1, 0, 2]], [[1, 2, -6, -13, -6, -19, -2, -2, -20, -2, 2]], [[1, 14, 2, 0, 5, 6, -7, 9, 16, 11, -12, 13, 14, -15, 16, 17, -18, -19, 17, -20, -8, 16]], [[1, 2, 0, -3, 6, -1, 6, 0]], [[0, 1, 9, 2, -4, 10, 7, 8, -9, -10, 7]], [[1, 2, 3, 4, 5, -6, 3, -7, 0, -8, -6, -7]], [[1, 13, 0, -1, 1, 2, 3, 4, -1, -7, -2, -3, -4, 5, 6, 7, -6, 6, -12, -6]], [[0, 2, 2, 3, -4, 10, 8, 1, -10, 7, -10, 10, 10, 10, 3, 3]], [[2, 3, 4, 5, 4, -7, -8, -8, 3]], [[-1, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, 5, 7, -5, -9, -6, 7, 0]], [[1, 2, -19, 3, 0, 0, -3, -2, -1, -1, 1, 3]], [[0, 1, 2, 3, -4, -5, 7, -9, 13, -19, -10]], [[-1, -2, -3, -4, -5, -6, -7, 8, -3, 6, -9, -10, -10, -20, -9]], [[1, 2, -3, -4, 0, 10, 5, -7, -8, 14, 9, 10, 11, 3, 13, 14, -15, 16, 17, -18, -20, 1, -3]], [[0, 0, 0, 0, 0, 0, 2, 3, 3, 4, -2, 14, 16, -4, 5, 6, 17, -5, -6, 0]], [[3, 6, 2, 5, 14, -6, -9, -8, -11, -10, 1, 1, 1]], [[1, 2, 0, 5, 6, -7, 9, 16, 11, -12, 13, 14, -15, 16, 17, 3, -18, -19, 17, -20, 9, 17]], [[0, 1, 2, 2, 1, 3, -4, -5, 10, 7, 8, 2, -10, -10, 1, 7, 3, -5]], [[1, 2, -3, 0, 5, 6, -7, 8, 10, 11, -12, 14, -15, 17, -19, -20, 9, 11]], [[1, -6, 2, 4, 4, -7, 5, -6, -7, -8, -9, -9]], [[4, 1, 2, 2, 3, -4, -5, 10, 7, 8, 2, -10, -10, 7, -10, -10]], [[1, 2, -3, -4, 9, 0, 5, 6, -7, 9, -20, 5, 11, -12, 13, 14, -15, 16, 17, -18, 14, -19, -20]], [[1, 2, -7, 3, 0, -2, -1]], [[0, 1, 3, 2, 2, -4, -5, 10, -13, -9, -10, -5, -10, 7, -10]], [[9, 2, 3, -4, -5, 11, 7, 8, -9, -10, 7]], [[1, 2, 2, 3, -4, -5, 0, 10, 8, 8, 2, -10, -10, 7, -10]], [[0, 0, 0, 0, 0, 4, 1, 2, 3, 4, -1, -2, 6, 5, 6, 7, -5, -6, -7, -6, 0, 0]], [[1, -4, 2, 16, 0, -3, 7, 1]], [[1, -4, 2, 3, 0, -3, 6, -1, 1, -19, 2, 2, 6]], [[0, 2, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1]], [[0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 5, 6, 7, -5, 1]], [[0, 0, 0, 0, 1, 0, 2, 1, 1, 1, 1, 1, 0]], [[1, 2, 3, 0, -3, -19, -2]], [[3, 4, 5, 4, -7, -8, -8, 3]], [[0, 0, 0, 0, 0, -15, 2, 0, 3, 3, 4, -2, -3, -4, 5, 6, 17, -5, -6, -7, 2]], [[1, -3, -4, -9, -10, 3, 5, -6, -7, -8, -9, -7, -7]], [[-9, 3, 0, -3, -2, -1, 1, -9]], [[0, 0, 0, 0, 0]], [[-1]], [[0]], [[1, -1, 0, 2, -2, 0]], [[7]], [[0, 0, 0]], [[2, 5, 10]], [[-1, -5, -10]], [[1, -1, 2, -2, 3, -3]], [[1, 2, 3, 0, -3, -2, -8]], [[1, 3, -4, -5]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -18, -19, -20]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -3, -10]], [[1, 2, 3, -3, -4, -5, -4]], [[1, 2, 3, 0, -3, -2, -8, -3]], [[1, -2, 3, -4, -5]], [[-1, 2, 4, -4, -5, 1]], [[-1, 0, 0, 0, 0, 0, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 2, 13, 14, -15, 16, 17, -3, -18, -19, -20]], [[-1, 0, 0, 0, 0, 0]], [[1, 2, 3, 0, -3, 16, -8]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1]], [[1, 2, 3, 0, -3, -2, -1, 3]], [[1, 2, 3, -3, -5, -4]], [[1, 2, 3, 4, 5, -6, -7, -9, -10]], [[-1, 2, 4, -4, -5, 0]], [[1, 3, -3, -4, -5, -4]], [[2, 4, -4, -5, 0, -5]], [[1, 2, 3, -3, -2, -1, 3]], [[2, 4, -4, -5, 0, 10, -5, -5]], [[2, 4, -4, -5, -5]], [[1, 2, 3, 4, -6, -7, -8, -9, -10]], [[1, 2, 3, 1, -3, -2, -8]], [[1, 2, 3, -10, -3, -2, -8]], [[1, 2, 3, 4, -6, -8, -9, -10, -10]], [[2, 3, 0, -3, 16, -8, -8]], [[1, 2, 3, 0, -3, -2, 3, -8]], [[-1, 2, -4, -4, -5, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 3, -18, -19, -20]], [[-1, 0, 0, 0, 0, 0, 0, 0]], [[1, 13, 2, 3, -3, -15, -4, -5, -4]], [[1, 2, 3, -3, -5, -4, 1]], [[2, 3, 0, -7, 16, -8, -8]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, 0]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -20]], [[0, 1, 2, 3, -4, -5, -20, 7, -9, -20, -20]], [[1, 13, -8, 3, -3, -15, -4, -5, -5]], [[1, 2, 3, 0, -1, -3, -2, 9]], [[1, -2, 0, -4, -5]], [[1, 2, 3, 1, -3, -2, -8, -8]], [[-1, -2, -3, -4, -5, -6, -8, -9, -3, -10]], [[1, 2, 4, -6, -8, -9, -10, -10]], [[1, 2, 3, 0, -3, 0, -2, -8]], [[1, 2, -3, -4, 10, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1, 0]], [[-1, 8, 0, 0, 0, 0, 0]], [[2, 4, -5, 0, -5]], [[-1, 2, -4, -4, -5, 0, -5]], [[-2, 2, 4, -4, -4, -5, 0]], [[1, 2, 3, 0, -3, -2, 9, -8]], [[2, 4, -4, -5]], [[1, 4, -4, -5, 0, 10, -5, -5, 2]], [[1, 2, 3, 0, -1, -2, 9]], [[1, -7, -3, -4, -5]], [[1, 2, 3, 0, -1, -3, -6, 9]], [[-1, 0, 0, 0, 0, 0, 0, 0, -1]], [[9, 2, 3, 0, -2, 9]], [[2, 4, -5, 0, -5, 2]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -19, -20, 1]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, -1, 0]], [[1, 1, 2, 3, 0, -3, 16, -8]], [[2, 4, -4, -5, 16, 10, -5, -5]], [[-1, 5, 2, 4, -4, 0, 4]], [[1, 2, 3, -3, -5, -4, 16]], [[2, -8, 0, -7, -6, 16, -8, -8]], [[2, 3, -3, -4, -5, -4]], [[-1, 2, -4, -4, -5, 0, -5, -1]], [[-1, 2, 4, -4, -5, -1]], [[2, 4, -4, -5, 4]], [[1, 0, 3, 4, -6, -7, -8, -9, -10]], [[1, 8, 3, 0, -3, -2, -8, -3]], [[1, 2, 3, 4, -3, -2, -1, 3]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -3, -11]], [[1, 2, 3, 0, -1, -3, -6, -4]], [[-5, -1, 5, 2, 4, -4, 0, 4]], [[9, 2, 3, -15, -1, 9]], [[0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, -1, 0]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -18, -19, -20, -3]], [[1, 2, 3, 0, -3, -2, -3]], [[-1, -2, -3, -4, -5, -6, 0, -1]], [[1, 3, -4, -5, -4]], [[-1, 0, 0, 0, 0, -20, 0, 0]], [[1, 2, 3, 0, -1, -3, -6, 9, -6]], [[2, 4, 11, 0, -5]], [[1, 2, 3, 4, 5, -6, -7, -8, -9, 1, -10, -10]], [[-1, 0, 0, 0, 0, 0, 0, -1]], [[2, 4, -4, -5, 2]], [[1, 2, 3, 1, -2, -8]], [[-1, 2, -4, -4, 9, -5, 0, -5, -1]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -6]], [[-1, 0, 0, 0, 0, 0, -1]], [[-1, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 1, 0, 0, -1, -1, 1, 1, 1, 1, 1]], [[1, 2, 3, 0, -1, -3, 9]], [[-1, 0, 0, 0, 0, 0, 0, -1, 0]], [[-1, 8, 0, 0, 0, 0, -1]], [[1, 3, -8, -5]], [[1, 3, -4, -5, -4, 3]], [[-1, -1, 0, 0, 0, -12, 0, 8]], [[2, 1, 2, 3, 0, -1, -3, -2, 9]], [[1, -20, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 12, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1, -3]], [[0, 0, 0, 0, 1, 0, 0, -1, -1, 1, -20, 1, 1, -1, 0]], [[-2, 2, 4, -4, -4, -5, 0, -2]], [[1, 2, 3, -5, -4]], [[1, 4, -4, -5, 0, -5, -5, 2]], [[0, 0, 0, 1, 0, 0]], [[1, 9, 2, 4, 5, -6, -7, -8, -9, -10]], [[-1, -1, 4, -4, -5, -1]], [[1, -2, -4, -5]], [[14, 1, 2, 4, -6, -8, -9, -10, -10]], [[2, 1, 2, 3, 0, -1, 0, -3, -2, 0, 0]], [[-1, -4, 2, -4, -4, 9, -5, 0, -5, -1, -4]], [[-1, -2, 5, -5, -8, -6, -7, -8, -9]], [[2, 3, 0, -7, 16, -8, -8, -8]], [[1, 8, 13, 3, -3, -15, -4, -5, -5, -5]], [[-1, 10, -2, -3, -4, -5, -6, -8, -9, -3, -10]], [[1, 13, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -18, -19, -9, -3]], [[1, 3, 3, 4, -3, -2, -1, 3]], [[2, -6, -5, 0, -5, 2]], [[-1, -2, -3, -4, -5, 3, -6, -7, -8, -9, -10]], [[-5, -1, 5, 2, 4, -4, 0, 4, 5]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 0, 1, 0, 0, 0]], [[-1, 8, 0, 0, 0, -1]], [[-5, -1, 5, 2, 4, -4, 6, 0, -12]], [[1, 13, -4, -5]], [[2, 1, 1, -2, 3, -4, -5]], [[1, 8, 13, 3, -3, -4, -5, -5, -5]], [[-1, 2, 4, -5, -5, 1, -5]], [[2, 3, -10, -3, -2, -8, -7]], [[1, 2, 5, 3, 4, -6, -8, -9, -10, -10]], [[0, 1, 2, 3, -4, -5, -6, 7, 8, -9, -10, -4]], [[-1, 8, 0, 0, 0]], [[0, 0, 0, 0, 1, 7, 0, 0, -1, -1, 1, 1, 1, 1, 1]], [[1, 2, 3, -3, 2, -5, -4, 16]], [[1, 2, 3, -5, -4, -5]], [[-1, 5, -5, -8, -6, -7, -8, -9]], [[2, 3, 12, -3, -2, -8, -7]], [[1, 1, 2, 3, 0, -4, -3, -2, -3]], [[9, 2, 3, 0, -2, 9, 9]], [[2, -6, 4, 9, -5, 4]], [[1, 7, 2, 0, -3, 0, -2, -8]], [[1, 4, -6, -8, -9, -10, -10]], [[-1, 5, 2, 4, -4, 5, 0, 4]], [[1, 7, 2, 0, -3, 0, -2, -8, 2]], [[-5, -1, 5, 2, 4, -4, 0, 5]], [[1, 2, 4, 5, -6, -7, -9, -10]], [[1, 2, 3, 0, -1, -3, -2]], [[9, 2, 3, 0, -2, 9, 2]], [[-12, -1, 0, 0, 0, 0, 0, 0, -1]], [[1, 2, 0, -3, -2, 3, -8]], [[1, 4, -4, -5, 0, -5, 17, -5, 2]], [[1, 8, 13, 3, 11, -3, -4, -5, -5]], [[0, 1, 2, 3, -4, -5, -6, 8, -9, -6]], [[-1, 0, 0, 0, 0, 0, 0, 1, -1]], [[1, 2, 3, 4, -3, -2, 3]], [[-5, -1, 5, 2, 4, -4, 0, 5, 4]], [[1, 7, 2, 0, 1, -3, 0, -2, -8, 2]], [[2, 4, -4, -5, 16, 10, -5, -5, 2]], [[-1, 0, -3, -4, -5, -6, -7, -8, -9, -3, -11]], [[1, 13, 14, -4, -5]], [[0, 1, 2, 3, -4, -5, -6, 8, -10, -9, -6]], [[2, 3, 0, -7, 16, -7, -8]], [[-2, -2, -3, -4, -5, -6, -7, -8, -9, -3, -10]], [[4, 0, 0, 0, 0, 0, 1, 2, 3, 4, -1, -2, -3, -4, 6, 7, -5, -6, -7]], [[-1, -1, 0, 0, 0, -11, 0, 8]], [[0, 3, -4, -5, -4, 3]], [[1, 5, -4, -5, 0, -5, -5, 2]], [[-18, -1, 0, 0, 0, 0, 0, -1]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20, 1, 17]], [[-1, 8, 0, 0, -1]], [[4, -4, -5, 0, -5, 0]], [[0, 1, 2, 3, -4, 13, -6, 7, 8, -9, 10, -10, -4]], [[14, 0, 0, 0, 0, 0, 0, 1, -1]], [[3, 1, 2, 3, -5, -4]], [[1, 2, 3, -3, -5, 1]], [[-1, 2, 3, 4, -4, -5, -1]], [[1, 2, 4, -3, -2, -1, 3]], [[2, 11, 4, -4, -5, 4]], [[2, 4, -4, -5, 2, -4]], [[1, 1, 2, 3, 4, 5, -6, -7, -10]], [[-1, 2, 4, -10, -5, 1, -5, -5]], [[1, 7, 2, 0, -3, 0, -2, -8, -8]], [[1, 1, 8, 3, 0, 12, -2, -8, -3]], [[-1, -2, -3, 11, -4, -5, -6, -7, -8, -9, -10]], [[8, 0, 2, 3, -5, -4, -5]], [[1, 2, 3, -3, 2, -5, -4, 16, 16]], [[-2, 2, 4, -4, -4, -5, -2]], [[0, 1, 2, 3, -9, 2, -4, -5, -6, 7, 8, -9, -10]], [[-1, 0, 0, 1, 0, 0, 0]], [[16, -1, 5, 2, 4, -4, 0, 5, 4]], [[0, 1, 2, -15, 3, -4, -5, -6, 7, 8, -9]], [[1, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -18, -19, -20]], [[2, 3, 0, -7, 16, -8, -8, -8, -8]], [[-1, 0, 0, 0, 0, 7, 7, 0, 0, 0]], [[2, 3, 0, -7, 16, -8, -8, -9, -8, -8]], [[0, 1, 2, 3, -4, 13, -6, 7, 8, -9, 10, 1, -10, -4, -4, -4]], [[1, 7, 2, -19, -3, 0, -2, -8, 2]], [[1, 2, 3, 0, 4, -1, -2, 9]], [[1, 1, 2, 3, 0, -4, -3, -2, -3, 1, 0]], [[-6, 3, 12, -5, -2, -7]], [[1, 3, 3, 4, -2, -2, -1]], [[1, 2, 3, 4, 8, -6, -8, -9, -10, -10]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -18, -19, -20, 1]], [[1, 2, 3, -4, 6, -5]], [[0, 0, 0, 8, 0, 0]], [[0, 1, -8, 2, 3, -9, 2, -5, -5, -6, 7, 8, -9, -10]], [[3, 1, 3, -5, -4]], [[1, 2, 3, 2, 4, 8, -6, -8, -9, -10, -10]], [[0, 1, 3, -4, -5, -6, 7, -6, 8, -9, -10]], [[1, 2, 3, -5, -5, -4, -5, -5]], [[-1, -2, -5, -8, -6, -7, -8, -9]], [[-1, 4, 2, 4, -4, 3, 5, 0, -20, 4]], [[1, 2, 3, -11, -1, -3, 1, 3, -2, 9]], [[1, 8, 13, 3, -3, -15, -4, -5, -5]], [[4, 6, -2, -3, -4, -5, -6, -7, -8, -9, -3, -11]], [[-2, -3, -4, -5, -6, -7, -8, -9, -3, -10, -10]], [[2, 3, -2, -3, -4, -5, -4]], [[0, 0, 0, 0, 0, 1, 2, 4, -1, -2, -3, -4, 5, 6, 7, -5, -6, -7, 0]], [[4, 1, 2, 3, -3, -4, 12, -5, -4, 1]], [[1, 7, 2, 0, -3, 0, -2, 2, -8, 2]], [[-1, -2, -3, -4, -5, -6, 0, -4]], [[-1, -2, 10, -5, -8, -6, -7, -8, 8]], [[4, 1, 2, 3, -4, 12, -5, -4, 1]], [[1, 2, 3, 2, 1, -2, -8]], [[-1, 0, 0, 0, 7, 7, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, -1, -1, -2, 1, 1, 1, 1, 1]], [[2, 3, 0, -7, 16, -8, -8, -9, -8, 6, -8]], [[1, 9, 0, -2, -2, 3, -8]], [[-6, 1, 7, 2, 2, -3, -19, -3, 0, -2, -8, 2]], [[-1, 0, 0, 0, 7, 7, 0, 0, 0, -1]], [[2, 3, 12, -3, -2, -8, -7, 3]], [[-1, 2, -4, -4, -5, 0, 1, -1]], [[3, 1, 3, -4]], [[2, 9, 3, 0, -7, 16, -8, -8, -8, -8, -7]], [[1, 3, 2, 3, -3, -5, -4]], [[0, 1, 2, 3, -4, 13, -6, 7, 5, 8, -9, 10, 1, -19, -10, -4, -3, -4]], [[1, 2, 3, 4, -6, -7, -8, -1, -10, -9]], [[1, -2, 3, -4, -5, 1]], [[-2, 3, -4, -5, 1]], [[2, 4, -5, 0, -5, 2, 4]], [[-1, 0, 0, -9, 0, 7, 7, 0, 0, 0, -1]], [[0, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 0]], [[1, 2, 3, -4, 6, 14]], [[0, 1, 2, -5, -15, 3, -4, -5, -6, 7, 8, -9]], [[1, 5, -4, -5, -5, -5, 2, 1]], [[1, 2, 4, 5, -6, -7, -9, 3]], [[-1, 2, 4, -10, -5, 1, -5, -5, -1]], [[4, 11, 6, -2, -3, -4, -5, -7, -6, -7, -8, -9, -3, -11, -7]], [[1, 3, -5, -5, -4, 3]], [[1, 4, 2, 4, 5, -6, -3, -9, -10]], [[1, 7, 2, 0, -3, 0, -2, 2, 2, 2]], [[-1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0]], [[3, 1, 3, -4, 3]], [[1, 2, 4, -4, 5, -6, -7, -9, -10]], [[1, 8, 3, -5, -4, -5, -5]], [[-1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0]], [[2, -6, 4, 9, -5, -12]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 13, 14, -15, 16, 3, -18, -19, -20]], [[-5, -1, 5, 2, 4, -4, -3, 0, 4, 4]], [[1, 3, 2, -5]], [[3, 0, -7, 16, -8, -8]], [[2, 3, -2, -3, 4, -5, -4]], [[-6, 2, 3, 1, -3, -2, -8]], [[2, 11, 4, 2, -4, -5, 4]], [[1, 2, -3, -4, 0, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -19, -20, 1, 1]], [[2, 3, 0, -7, 16, -8, -8, 9, -9, -8, -8, -8]], [[-1, 2, 4, -4, -5, -1, 4]], [[2, 1, 3, 3, 0, -1, -3, -2, 2]], [[4, 11, 6, -2, -3, -4, -5, -7, -6, -7, -8, -9, -3, -11, 9]], [[8, 0, 2, 3, -4, -5, -5]], [[2, 1, 1, 3, -5]], [[1, -4, -5]], [[2, 3, 0, -7, 16, -8, -9, -8]], [[2, 3, -10, -3, -2, -8]], [[2, 1, 3, 0, -1, -3, -2, 2]], [[3, 4, 0, 10, -5, -5, 3]], [[-18, 1, -1, 0, 0, 0, -3, 0, 0, -1, 1]], [[1, 2, -3, -4, 5, 6, -7, -8, 9, 10, 11, -12, 13, 13, 14, -15, 16, 3, -18, -19, -20]], [[2, 4, -4, -5, 0, -5, -5, -5]], [[0, 2, 3, 8, -4, 13, -6, 7, 5, 8, -9, 10, 1, -19, -10, 8, -4, -3, -4]], [[1, 2, 3, 0, -3, 0, -2, -1]], [[-2, 2, 4, -4, -5, -2]], [[0, -7, 2, 3, -4, -5, -20, 7, -9, -20, -20]], [[0, 3, -4, -5, -4, 3, 3]], [[1, 2, 3, 0, -3, 16, -7, -8, 0]], [[-1, -1, 0, 0, 0, -12, 0, 8, 8]], [[-15, 2, 4, -4, -5, 16, -5, -5]], [[-10, 1, 5, -4, -5, 0, -5, -5, 2]], [[1, 3, -7, -5]], [[1, -8, 1, 2, 3, 0, -3, 16, -8]], [[-1, 8, 0, 0, 0, 8]], [[0, -1, -4, 2, -4, -4, 9, -5, 0, -5, -1, -4]], [[1, 4, 2, 4, 5, 5, -6, -3, -9, -10, 4]], [[1, 0, -7, 3, 4, -6, -7, -8, -9, -10]], [[2, 3, -10, -3, -2, -8, -7, 2]], [[0, 1, -15, 3, -3, -5, -6, 7, 8]], [[1, -5, 4, 2, 0, -3, -19, -2, 3, -8]], [[1, 3, 3, 4, 16, -2, -2, -1, 3]], [[3, -8, 0, -7, -8, -8]], [[-1, 2, -4, -4, 9, -5, 0, -5, -1, -1]], [[-18, 13, -4, -5]], [[1, 2, -18, -4, -5]], [[1, 2, 3, -3, 2, 7, -5, -4, 16, 16]], [[1, 2, -3, -4, 0, 5, -7, -8, 9, 10, 11, -12, 13, 13, 14, -15, 16, 3, -18, -19]], [[1, 2, 0, -3, 16, -8]], [[1, 2, 3, 0, -4, -3, -2, -1]], [[-18, 3, 0, -7, 16, -8, -8, 9, -9, -8, -8, -8]], [[0, 0, 0, 8, 0, 0, 0]], [[-2, -2, -3, -4, -5, -6, -7, -8, -9, -3]], [[1, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, 3, -12, 13, 14, -15, 16, 3, -18, -19, -20]], [[-1, 2, 4, -10, 14, -5, 1, -5, -5]], [[-1, 5, 2, 4, -4, 4]], [[-2, 2, 13, 4, -4, -4, -5, 0]], [[-6, 1, 7, 2, 2, -3, -19, -3, 0, -2, -8, 2, -3]], [[1, 14, 2, -3, -4, 0, 5, 6, -7, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -19, -20]], [[1, 1, 2, 3, 0, 1, -4, -3, -2, -3]], [[2, -6, 0, -5, 2]], [[16, -1, 5, 2, 4, -4, 0, 5, -15, 0]], [[0, 0, 0, 0, 0, 1, -1, 0, -1, 1, 1, 1, 1]], [[-2, 2, 17, -4, -5, -2]], [[1, 3, 3, 4, -2, -2, -1, 1]], [[2, 3, 0, -3, 16, -8]], [[0, 3, -4, -5, -4, 3, 3, 3]], [[-6, 1, 7, 2, 2, 14, -3, -19, -3, 0, -2, -8, 2, -3]], [[1, 3, -4, -6, 1]], [[-1, -11, 2, 4, -5, -5, 1, -5]], [[4, 11, 6, -2, -3, -4, -5, -3, -7, -6, -7, -8, -9, -3, -11, -7]], [[1, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 5, 13, 14, -15, 16, 17, -3, -19, -19, -20]], [[2, 3, -10, -3, -2, -9, -7, 2]], [[-1, 5, 2, 14, -4, 5, 0, 4]], [[-5, -1, 5, 2, 4, -4, 0, 5, 4, 2]], [[1, 9, 2, 0, -3, 0, -2, -8, -8]], [[0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, 0, -1, 0]], [[4, -4, -5, 0, -5, 0, 4]], [[1, 2, 3, 4, -6, -8, -9, -10, -10, -8]], [[4, -7, 6, -2, -3, -4, -5, -6, -7, -8, -9, -3, -11]], [[-1, -11, 2, -1, 4, -5, -5, 1, -5]], [[2, 3, -10, -3, -2, -9, -7, 2, -10]], [[4, -4, -5, 5, 0, -5, 0]], [[1, -1, 3, 2, 1, -2, -8]], [[2, 4, -4, -5, 0, 10, -5, -5, 0]], [[0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 2, 0, 1, 0, 0, 0]], [[-1, -4, 5, 2, 4, -4, 0, 4]], [[3, 9, 3, 0, -7, 16, -8, -8, -8, -8, -7, -7]], [[1, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -18, -19, -20, -4]], [[-5, -1, 5, 2, 4, -4, 0, 5, -4]], [[2, 3, 0, -7, 16, -8, -8, -9, -8, 6, -8, -8]], [[-1, -2, -3, -4, -5, 3, -6, -7, -8, -9, -10, -9]], [[1, 2, 3, 4, 8, -6, -8, -9, -10, -10, 8]], [[3, 13, 1, 3, -4, 3]], [[1, 2, 3, -1, -3, 16, -8]], [[1, 2, 3, 3, 5, -6, -7, -9, -10, 2, 5]], [[2, 3, -4, -3, -4, -5, -4]], [[1, -13, 2, -3, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -18, -19, -20]], [[16, 0, 0, 0, 0, 1, -1, 0, -1, 1, 1, 1, 1]], [[-6, 1, 7, 2, 2, -19, -3, 0, -8, -8, 2, -3]], [[0, 1, 2, 4, -4, 13, -6, 7, 8, -9, 10, 1, -10, -4, -4, -4]], [[1, 2, 3, -3, -5, -4, 16, 16]], [[2, -5, 0, -5, 2]], [[1, -4, 0, 16, 6, -7, 9, 10, 11, -12, 5, 13, 14, -15, 16, 17, -3, -19, -19, -20]], [[1, 1, 8, -6, 0, 12, -2, -8, -3]], [[2, 11, 0, 1, 4, 2, -4, -5, 4, -5]], [[1, 2, 0, 4, 5, -6, -7, -9, -10]], [[8, 0, 2, 3, -5, -4]], [[-1, -2, -5, -3, 11, -4, -5, -6, -7, -8, -9, -10, -5]], [[0, 1, 2, -5, -15, 3, -4, -5, -6, 7, 8, -9, 2, -9]], [[3, 9, 3, -12, 0, -7, 16, -8, -8, -8, -8, -7, -7]], [[1, 8, 3, 0, 12, -2, -8, -3]], [[0, -1, -4, 2, -4, -4, 9, -5, 0, -5, 3, -4]], [[1, 13, 2, 3, -3, -15, -4, -5, -4, 1]], [[1, 5, -6, -4, -5, 0, -5, -5, 2]], [[2, 4, -5, 2, -4]], [[-5, 3, -4, -3, -4, -5, -4, 2]], [[1, 2, 4, 5, -6, -9, 3, 2]], [[1, 3, 3, 4, -2, -2, -1, 3, 4]], [[-1, 0, 0, 0, 7, 7, 0, 0, 0, -1, 0]], [[1, -4, -5, -4]], [[1, -4, 0, 5, 6, -7, -8, 9, 10, 11, -12, 13, 14, -15, 16, 17, -3, -19, -19, -20]], [[3, 2, 3, 0, -2, 9, 9]], [[-1, 2, 4, -5, 1, -5, -5, -1]], [[-4, 3, 0, -7, 16, -8, -8, -9, -8, -8]], [[1, 2, 4, 5, -6, -9, 3, 2, 1]]]\n    results = [-9, 0, -10, None, 20, 4, -4, 0, 0, 9, 0, -10, 0, 24, 0, -16, 0, 0, 0, 0, 15, 17, -21, 0, 0, 18, 0, 17, -20, 0, 0, 0, 5, -24, 0, 0, 0, -232, -16, 0, 0, 0, 0, 18, -17, 0, -17, 16, 0, 17, 0, 18, 0, -26, 0, 13, 16, 0, 0, 17, 0, 0, -27, 21, 33, 35, 0, 0, -26, 26, 0, 1, -6, 0, -20, 0, 28, 0, 0, -14, -4, -31, 30, 0, 0, 0, -41, 0, 0, 0, 0, 19, 0, 96, 0, 0, 0, -233, 0, 42, 0, -18, 0, 0, 0, 0, 18, 0, -55, 55, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, -23, -56, 0, 0, -52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 17, 0, 0, 0, 0, 0, 18, 0, 53, -81, 125, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -12, 54, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, -17, 0, 0, 44, 0, 47, 0, -71, 0, 0, 0, 0, -63, -79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 73, 0, 0, 21, 0, 20, 0, 29, 60, -70, 0, -53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 69, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, -77, 0, 0, 0, 0, 64, 69, 0, -22, 0, -72, 0, 0, 0, 80, 0, 0, 83, 0, 0, -67, 0, -24, 0, 59, -75, 0, -41, -40, 0, 0, -33, -34, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, -36, 0, 0, -66, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 63, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, 0, -21, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 0, 0, -64, 0, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 42, 0, 0, 0, -45, 0, 0, 86, -24, 0, 0, 0, 0, 0, 23, 0, -54, -26, -60, 0, -94, 0, 54, -53, 0, 0, 0, -55, 0, 0, 0, 0, 0, 0, 0, -29, 0, 0, 0, 0, 0, 53, 0, 0, 0, -65, 0, 0, 0, 36, 0, 60, 0, 0, 0, -76, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, -47, 0, -67, 0, 0, 0, 0, -27, 0, 78, 0, 0, 0, 45, 0, 0, 0, -22, 0, 0, 21, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, -41, 0, 10, 0, -80, 0, -35, 16, 0, 26, 0, 0, 0, -74, 0, 0, -49, 0, 88, -35, 0, 0, 0, 0, -35, -70, 47, 0, 0, 0, 0, 0, 0, -85, 0, 0, -125, 0, 0, 0, 0, 0, -74, 0, 0, 0, 0, 30, 0, 0, 0, 0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 75, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, -103, 0, 0, -77, 0, 0, 0, -68, 95, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, -42, 0, 79, 0, 0, -1, 0, 0, 7, 0, 17, -16, -12, 0, 13, 0, -58, 22, 0, -15, -17, 0, 0, 0, 0, 0, 0, -18, 47, 0, 20, 0, -15, 0, -20, -50, -20, 29, -53, 0, 0, 0, 0, 0, -50, -19, 0, 0, 0, 0, 57, 0, 0, 28, 51, -50, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 51, 0, -34, 0, 21, 0, 17, 19, 0, 0, -19, -59, 0, 0, 39, 0, 0, 0, 0, -17, 0, 0, 0, 66, 0, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 17, -20, 0, 0, 0, 0, 0, 15, 0, 0, -61, -16, -12, -64, 0, 0, 51, 0, 62, 61, 0, -20, 0, 58, 0, 0, 0, 0, 23, -18, -47, 23, -35, -58, 0, 0, 0, -36, -20, -49, 37, 0, 0, 30, 0, -48, 0, 0, 0, 44, 0, 0, 0, 0, 0, 53, 0, 0, 18, 0, 0, 53, 0, 37, 0, 0, -59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 15, 20, -16, 30, -21, -39, -33, 0, 0, 66, 0, -52, -23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, -16, -61, 0, 21, 0, 0, 16, -63, 0, -30, 46, 0, 36, -57, 68, -67, -23, 0, 39, 0, 0, -55, -36, 19, 0, 0, 0, 0, 0, 0, 40, 0, -11, 0, -21, 0, 51, -16, -15, 0, 0, 0, -30, 0, 28, -37, 34, 93, -21, 44, 0, 0, -14, -48, 31, 0, -38, 0, 0, -11, 0, 23, 25, 32, 0, 0, 21, 0, -95, 0, -12, 10, 0, 28, 0, 0, 0, -209, 0, 0, 0, 19, 0, 0, 0, 0, -56, 0, 16, 0, 0, 0, 53, 0, -37, 0, 0, -35, 0, 0, -40, -30, -59, 0, 0, 0, 0, 0, 49, 0, -47, 20, 0, 0, 0, 0, 0, 0, 0, 32, -17, 0, 0, 0, 15, -34, -96, 0, -38, 0, 0, 0, 0, 0, 61, -75, 35, 48, 0, -18, 0, 0, 0, 0, 0, 0, 0, -67, -69, -27, -34, 53, -25, 0, 0, 0, 0, -50, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, -51, 0, 17, 30, 32, -23, 0, -14, 0, 0, -24, 0, 33]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/129", "prompt": "\ndef minPath(grid, k):\n    \n\n\n    N = len(grid)\n    x, y = 0, 0\n    for i in range(N):\n        for j in range(N):\n            if grid[i][j] == 1:\n                x, y = i, j\n    mn = N * N\n    if x > 0: mn = min(mn, grid[x - 1][y])\n    if x < N - 1: mn = min(mn, grid[x + 1][y])\n    if y > 0: mn = min(mn, grid[x][y - 1])\n    if y < N - 1: mn = min(mn, grid[x][y + 1])\n    return [1 if i % 2 == 0 else mn for i in range(k)]\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef minPath(grid, k):\n    \n\n\n    N = len(grid)\n    x, y = 0, 0\n    for i in range(N):\n        for j in range(N):\n            if grid[i][j] == 1:\n                x, y = i, j\n    mn = N * N\n    if x > 0: mn = min(mn, grid[x - 1][y])\n    if x < N - 1: mn = min(mn, grid[x + 1][y])\n    if y > 0: mn = min(mn, grid[x][y - 1])\n    if y < N - 1: mn = min(mn, grid[x][y + 1])\n    return [1 if i % 2 == 0 else mn for i in range(k)]\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef minPath(grid, k):\n    \n\n\n    N = len(grid)\n    x, y = 0, 0\n    for i in range(N):\n        for j in range(N):\n            if grid[i][j] == 1:\n                x, y = i, j\n    mn = N * N\n    if x > 0: mn = min(mn, grid[x - 1][y])\n    if x < N - 1: mn = min(mn, grid[x + 1][y])\n    if y > 0: mn = min(mn, grid[x][y - 1])\n    if y < N - 1: mn = min(mn, grid[x][y + 1])\n    return [1 if i % 2 == 0 else mn for i in range(k)]\n\n", "raw_modification": "```python\n<code_start>\ndef minPath(grid, k):\n    N = len(grid)\n    x, y = 0, 0\n    found = False\n    # Inefficiently traverse the grid multiple times\n    for _ in range(2):  # Added redundant loop\n        for i in range(N):\n            for j in range(N):\n                if grid[i][j] == 1:\n                    x, y = i, j\n                    found = True\n                    break  # Break only the inner loop\n            if found:\n                break  # Break the outer loop\n        if found:\n            break  # Break the redundant loop\n\n    mn = N * N\n    # Inefficiently check all neighbors even if mn is already 0\n    if x > 0: \n        mn = min(mn, grid[x - 1][y])\n    if x < N - 1: \n        mn = min(mn, grid[x + 1][y])\n    if y > 0: \n        mn = min(mn, grid[x][y - 1])\n    if y < N - 1: \n        mn = min(mn, grid[x][y + 1])\n\n    # Inefficiently create the list with an unnecessary loop\n    result = []\n    for i in range(k):\n        if i % 2 == 0:\n            result.append(1)\n        else:\n            result.append(mn)\n    return result\n<code_end>\n```", "modification": "\ndef minPath(grid, k):\n    N = len(grid)\n    x, y = 0, 0\n    found = False\n    \n    for _ in range(2):  \n        for i in range(N):\n            for j in range(N):\n                if grid[i][j] == 1:\n                    x, y = i, j\n                    found = True\n                    break  \n            if found:\n                break  \n        if found:\n            break  \n\n    mn = N * N\n    \n    if x > 0: \n        mn = min(mn, grid[x - 1][y])\n    if x < N - 1: \n        mn = min(mn, grid[x + 1][y])\n    if y > 0: \n        mn = min(mn, grid[x][y - 1])\n    if y < N - 1: \n        mn = min(mn, grid[x][y + 1])\n\n    \n    result = []\n    for i in range(k):\n        if i % 2 == 0:\n            result.append(1)\n        else:\n            result.append(mn)\n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3], [[[5, 9, 3], [4, 1, 6], [7, 8, 2]], 1], [[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]], 4], [[[6, 4, 13, 10], [5, 7, 12, 1], [3, 16, 11, 15], [8, 14, 9, 2]], 7], [[[8, 14, 9, 2], [6, 4, 13, 15], [5, 7, 1, 12], [3, 10, 11, 16]], 5], [[[11, 8, 7, 2], [5, 16, 14, 4], [9, 3, 15, 6], [12, 13, 10, 1]], 9], [[[12, 13, 10, 1], [9, 3, 15, 6], [5, 16, 14, 4], [11, 8, 7, 2]], 12], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 8], [[[6, 1, 5], [3, 8, 9], [2, 7, 4]], 8], [[[1, 2], [3, 4]], 10], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 9], [[[9, 8, 7], [6, 5, 4], [3, 2, 1]], 3], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 5], [[[5, 4, 7], [2, 1, 8], [3, 6, 9]], 4], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 5], [[[1, 5, 3], [4, 2, 6], [7, 8, 9]], 4], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 6], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 15], [[[1, 5, 3], [4, 2, 6], [7, 8, 9]], 2], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 13], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 6], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 4], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 5], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 7], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 18], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 9], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 10], [[[1, 5, 3], [4, 2, 6], [7, 8, 9]], 3], [[[5, 4, 7], [2, 1, 8], [3, 6, 9]], 12], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 1], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 20], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 19], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 20], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 17], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 17], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 3], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 6], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 13], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 14], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 2], [[[1, 4, 7], [2, 5, 8], [3, 6, 9]], 21], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 12], [[[5, 4, 7], [2, 1, 8], [3, 6, 9]], 1], [[[2, 3, 4], [5, 6, 7], [8, 9, 1]], 15], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 16], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 16], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 1], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 5], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 10], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 20], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 10], [[[1, 2], [3, 4]], 2], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 1], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 9], [[[1, 2], [3, 4]], 3], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 8], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 11], [[[1, 2], [3, 4]], 24], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 11], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 6], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 4], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 10], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 9], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 15], [[[1, 2], [3, 4]], 18], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 14], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 5], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 23], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 6], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 8], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 9], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 15], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 18], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 9], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 4], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 21], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 17], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 25], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 16], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 7], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 19], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 3], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 21], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 5], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 9], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 14], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 7], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 11], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 2], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 22], [[[1, 2], [3, 4]], 25], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 7], [[[1, 2], [3, 4]], 17], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 12], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 20], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 17], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 2], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 13], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 16], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 24], [[[1, 2], [3, 4]], 19], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 13], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 13], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 24], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 9], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 22], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 12], [[[1, 2], [3, 4]], 16], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 19], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 10], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 4], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 3], [[[1, 2], [3, 4]], 22], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 22], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 24], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 23], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 23], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 22], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 19], [[[1, 2], [3, 4]], 5], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 10], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 12], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 1], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 8], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 25], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 18], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 23], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 11], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 2], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 12], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 7], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 11], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 18], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 8], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 18], [[[1, 2], [3, 4]], 21], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 21], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 24], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 2], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 2], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 12], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 8], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 21], [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 16], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 19], [[[1, 2], [3, 4]], 1], [[[1, 2], [3, 4]], 4], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 16], [[[1, 2], [3, 4]], 7], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 4], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 19], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 17], [[[1, 2], [3, 4]], 6], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 18], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 6], [[[1, 2], [3, 4]], 23], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 14], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 18], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 9], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 7], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 23], [[[1, 2], [3, 4]], 8], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 17], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 22], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 20], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 15], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 14], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 14], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 8], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 1], [[[1, 2], [3, 4]], 11], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 3], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 1], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 2], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 6], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 15], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 22], [[[1, 2], [3, 4]], 12], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 14], [[[1, 2], [3, 4]], 9], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 21], [[[1, 2], [3, 4]], 20], [[[10, 7, 14, 1], [15, 9, 8, 5], [12, 6, 2, 16], [13, 11, 3, 4]], 20], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 11], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 4], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 11], [[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]], 13], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 23], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 4], [[[1, 6, 13, 14], [9, 8, 7, 16], [12, 10, 2, 11], [5, 4, 3, 15]], 25], [[[1, 3, 5, 7], [9, 11, 13, 15], [2, 4, 6, 8], [10, 12, 14, 16]], 20], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 20], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 1], [[[2, 7, 4], [3, 1, 5], [6, 8, 9]], 14], [[[10, 5, 20, 14, 16], [7, 11, 12, 17, 9], [13, 19, 1, 15, 8], [3, 18, 4, 6, 2], [22, 21, 23, 24, 25]], 3], [[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]], 17]]\n    results = [[1, 2, 1], [1], [1, 2, 1, 2], [1, 10, 1, 10, 1, 10, 1], [1, 7, 1, 7, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 3, 1, 3, 1, 3, 1, 3], [1, 5, 1, 5, 1, 5, 1, 5], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1], [1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1], [1, 7, 1, 7, 1], [1, 2, 1, 2], [1, 2, 1, 2, 1], [1, 4, 1, 4], [1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 4], [1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1], [1, 2, 1, 2, 1, 2], [1, 7, 1, 7], [1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1], [1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7], [1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 4, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 7, 1], [1, 7, 1, 7, 1, 7], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 7], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7], [1], [1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1], [1, 3, 1, 3, 1], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5], [1, 2], [1], [1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1], [1, 3, 1, 3, 1, 3, 1, 3], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1], [1, 3, 1, 3, 1, 3], [1, 5, 1, 5], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 5, 1, 5, 1], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1], [1, 4, 1, 4, 1, 4], [1, 2, 1, 2, 1, 2, 1, 2], [1, 4, 1, 4, 1, 4, 1, 4, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 6, 1, 6, 1, 6, 1, 6, 1], [1, 4, 1, 4], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 3, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1], [1, 4, 1, 4, 1], [1, 5, 1, 5, 1, 5, 1, 5, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 4, 1, 4, 1, 4, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3, 1, 3, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1], [1, 5], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 2, 1, 2], [1, 5, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1], [1, 4, 1, 4, 1, 4, 1, 4], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1], [1, 6], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5], [1, 6, 1, 6, 1, 6, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 2, 1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5], [1, 2], [1, 4], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 6, 1, 6, 1, 6, 1, 6], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1], [1], [1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1, 5, 1, 5, 1, 5], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5], [1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 5, 1, 5, 1, 5, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 2, 1, 2, 1, 2, 1, 2], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 5, 1, 5, 1, 5, 1, 5], [1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1], [1], [1, 3], [1, 6, 1, 6, 1, 6], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], [1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 2, 1, 2], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1], [1, 3, 1, 3], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4], [1], [1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3], [1, 4, 1], [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1]]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/131", "prompt": "\ndef digits(n):\n    \n\n\n    has_odd, prod = False, 1\n    for ch in str(n):\n        if int(ch) % 2 == 1:\n            has_odd = True\n            prod *= int(ch)\n    return 0 if not has_odd else prod\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef digits(n):\n    \n\n\n    has_odd, prod = False, 1\n    for ch in str(n):\n        if int(ch) % 2 == 1:\n            has_odd = True\n            prod *= int(ch)\n    return 0 if not has_odd else prod\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef digits(n):\n    \n\n\n    has_odd, prod = False, 1\n    for ch in str(n):\n        if int(ch) % 2 == 1:\n            has_odd = True\n            prod *= int(ch)\n    return 0 if not has_odd else prod\n\n", "raw_modification": "```python\n<code_start>\ndef digits(n):\n    # Convert number to string and store in a list\n    str_n = list(str(n))\n    \n    # Initialize variables\n    has_odd = False\n    prod = 1\n    \n    # Iterate over each character in the list\n    for ch in str_n:\n        # Convert character to integer\n        num = int(ch)\n        \n        # Check if the number is odd\n        if num % 2 == 1:\n            # Set flag to True\n            has_odd = True\n            \n            # Multiply product by the number\n            prod *= num\n            \n            # Redundant check to increase complexity\n            if has_odd:\n                temp = prod * 1  # Useless multiplication\n                prod = temp  # Reassign to prod\n            \n            # Another redundant operation\n            if num % 2 == 1:\n                prod = prod * 1  # Useless multiplication\n    \n    # Redundant check before returning\n    if has_odd:\n        result = prod\n    else:\n        result = 0\n    \n    # Return the result\n    return result\n<code_end>\n```", "modification": "\ndef digits(n):\n    \n    str_n = list(str(n))\n    \n    \n    has_odd = False\n    prod = 1\n    \n    \n    for ch in str_n:\n        \n        num = int(ch)\n        \n        \n        if num % 2 == 1:\n            \n            has_odd = True\n            \n            \n            prod *= num\n            \n            \n            if has_odd:\n                temp = prod * 1  \n                prod = temp  \n            \n            \n            if num % 2 == 1:\n                prod = prod * 1  \n    \n    \n    if has_odd:\n        result = prod\n    else:\n        result = 0\n    \n    \n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[5], [54], [120], [5014], [98765], [5576543], [2468], [951], [246], [135797531], [888], [182135], [703], [999], [111], [1001], [3], [952], [889], [998], [2], [182136], [25], [701], [4], [24], [997], [247], [6], [953], [135797532], [7], [248], [23], [996], [135797533], [995], [994], [891], [26], [8], [112], [22], [950], [702], [1000], [704], [182137], [893], [993], [135797534], [135797535], [245], [249], [9], [244], [890], [47], [992], [700], [135797530], [705], [243], [27], [182134], [887], [46], [894], [699], [45], [707], [892], [182138], [182139], [1002], [113], [1], [88], [706], [250], [110], [949], [698], [242], [11], [135797529], [1003], [109], [135797536], [182133], [43], [135797538], [241], [71], [114], [28], [135797539], [10], [89], [954], [240], [44], [886], [115], [70], [991], [323456789101112131415161718192021222324252627282930313233343536], [182937457814614279640075438629345987263878749129823578184719333882443], [8843924584737538929273870549395092387583092748327447402387489518947358439582352948], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347584], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598343], [13579], [123456789], [945], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253], [182937457814614279640075438629345987263878749129823578184719333882442], [182937457814614279640075438629345987263878749129823578184719333882444], [123456788], [123456787], [944], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347585], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347583], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515254], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598344], [323456789101112131415161718192021222324252627282930313233343535], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515252], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598342], [182937457814614279640075438629345987263878749129823578184719333882441], [182937457814614279640075438629345987263878749129823578184719333882445], [943], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515251], [8843924584737538929273870549395092387583092748327447402387489518947358439582352947], [323456789101112131415161718192021222324252627282930313233343537], [323456789101112131415161718192021222324252627282930313233343534], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347587], [323456789101112131415161718192021222324252627282930313233343538], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347586], [182937457814614279640075438629345987263878749129823578184719333882446], [942], [182937457814614279640075438629345987263878749129823578184719333882448], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347582], [182937457814614279640075438629345987263878749129823578184719333882447], [941], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347581], [8843924584737538929273870549395092387583092748327447402387489518947358439582352946], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598341], [123456786], [8843924584737538929273870549395092387583092748327447402387489518947358439582352949], [13578], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515255], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515256], [8843924584737538929273870549395092387583092748327447402387489518947358439582352945], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598346], [8843924584737538929273870549395092387583092748327447402387489518947358439582352944], [8843924584737538929273870549395092387583092748327447402387489518947358439582352950], [53], [940], [52], [182937457814614279640075438629345987263878749129823578184719333882440], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515257], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515250], [946], [73], [947], [182937457814614279640075438629345987263878749129823578184719333882449], [55], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598340], [323456789101112131415161718192021222324252627282930313233343539], [16], [69], [15], [13577], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598345], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598347], [30], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347588], [74], [64], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515249], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515258], [72], [17], [8843924584737538929273870549395092387583092748327447402387489518947358439582352951], [14], [51], [95], [94], [123456785], [57], [8843924584737538929273870549395092387583092748327447402387489518947358439582352943], [32], [65], [62], [68], [182937457814614279640075438629345987263878749129823578184719333882439], [123456784], [18], [33], [323456789101112131415161718192021222324252627282930313233343533], [96], [76], [124834738571930288374895092375830274843252127479238048384758941827309258429539458173975894729347589], [948], [75], [13580], [13], [182937457814614279640075438629345987263878749129823578184719333882450], [123456783], [1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515248], [100], [11111111111111111111], [22222222222], [333333333333], [13581], [123456790], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598348], [3902482539585903843732859374089573948579380957409378540930757943758435987234095873947598349], [13576], [8843924584737538929273870549395092387583092748327447402387489518947358439582352942], [8843924584737538929273870549395092387583092748327447402387489518947358439582352941], [13582], [8843924584737538929273870549395092387583092748327447402387489518947358439582352940], [123456791], [8843924584737538929273870549395092387583092748327447402387489518947358439582352939], [323456789101112131415161718192021222324252627282930313233343532], [13583], [8843924584737538929273870549395092387583092748327447402387489518947358439582352938], [21], [49], [20], [13585], [123456792], [323456789101112131415161718192021222324252627282930313233343531], [99], [48]]\n    results = [5, 5, 1, 5, 315, 2625, 0, 45, 0, 99225, 0, 15, 21, 729, 1, 1, 3, 45, 9, 81, 0, 3, 5, 7, 0, 0, 567, 7, 0, 135, 99225, 7, 0, 3, 81, 297675, 405, 81, 9, 0, 0, 1, 0, 45, 7, 1, 7, 21, 27, 243, 99225, 496125, 5, 9, 9, 0, 9, 7, 81, 7, 99225, 35, 3, 7, 3, 7, 0, 9, 81, 5, 49, 9, 3, 27, 1, 3, 1, 0, 7, 5, 1, 81, 9, 0, 1, 297675, 3, 9, 99225, 9, 3, 99225, 1, 7, 1, 0, 893025, 1, 9, 45, 0, 0, 0, 5, 7, 81, 83053267329375, 2374385525072174368125, 9200959088342885342286486328125, 47338934509524145086063972158203125, 149749111277833459456445972784093017578125, 945, 945, 45, 83439724563916998046875, 791461841690724789375, 791461841690724789375, 105, 735, 9, 236694672547620725430319860791015625, 142016803528572435258191916474609375, 27813241521305666015625, 49916370425944486485481990928031005859375, 415266336646875, 27813241521305666015625, 49916370425944486485481990928031005859375, 791461841690724789375, 3957309208453623946875, 27, 27813241521305666015625, 64406713618400197396005404296875, 581372871305625, 83053267329375, 331372541566669015602447805107421875, 83053267329375, 47338934509524145086063972158203125, 791461841690724789375, 9, 791461841690724789375, 47338934509524145086063972158203125, 5540232891835073525625, 9, 47338934509524145086063972158203125, 9200959088342885342286486328125, 49916370425944486485481990928031005859375, 105, 82808631795085968080578376953125, 105, 139066207606528330078125, 27813241521305666015625, 46004795441714426711432431640625, 49916370425944486485481990928031005859375, 9200959088342885342286486328125, 46004795441714426711432431640625, 15, 9, 5, 791461841690724789375, 194692690649139662109375, 27813241521305666015625, 9, 21, 63, 7123156575216523104375, 25, 49916370425944486485481990928031005859375, 747479405964375, 1, 9, 5, 735, 249581852129722432427409954640155029296875, 349414592981611405398373936496217041015625, 3, 47338934509524145086063972158203125, 7, 0, 50063834738350198828125, 27813241521305666015625, 7, 7, 46004795441714426711432431640625, 1, 5, 45, 9, 525, 35, 27602877265028656026859458984375, 3, 5, 0, 0, 21369469725649569313125, 105, 1, 9, 249159801988125, 9, 7, 426050410585717305774575749423828125, 9, 35, 15, 3, 3957309208453623946875, 315, 5562648304261133203125, 1, 1, 0, 531441, 15, 945, 49916370425944486485481990928031005859375, 449247333833500378369337918352279052734375, 105, 9200959088342885342286486328125, 9200959088342885342286486328125, 15, 9200959088342885342286486328125, 945, 248425895385257904241735130859375, 83053267329375, 45, 27602877265028656026859458984375, 1, 9, 0, 75, 945, 83053267329375, 81, 0]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/132", "prompt": "\ndef is_nested(string):\n    \n\n\n    for i in range(len(string)):\n        if string[i] == \"]\": continue\n        cnt, max_nest = 0, 0\n        for j in range(i, len(string)):\n            if string[j] == \"[\":\n                cnt += 1\n            else:\n                cnt -= 1\n            max_nest = max(max_nest, cnt)\n            if cnt == 0:\n                if max_nest >= 2:\n                    return True\n                break\n    return False\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef is_nested(string):\n    \n\n\n    for i in range(len(string)):\n        if string[i] == \"]\": continue\n        cnt, max_nest = 0, 0\n        for j in range(i, len(string)):\n            if string[j] == \"[\":\n                cnt += 1\n            else:\n                cnt -= 1\n            max_nest = max(max_nest, cnt)\n            if cnt == 0:\n                if max_nest >= 2:\n                    return True\n                break\n    return False\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef is_nested(string):\n    \n\n\n    for i in range(len(string)):\n        if string[i] == \"]\": continue\n        cnt, max_nest = 0, 0\n        for j in range(i, len(string)):\n            if string[j] == \"[\":\n                cnt += 1\n            else:\n                cnt -= 1\n            max_nest = max(max_nest, cnt)\n            if cnt == 0:\n                if max_nest >= 2:\n                    return True\n                break\n    return False\n\n", "raw_modification": "```python\n<code_start>\ndef is_nested(string):\n    # Adding an unnecessary loop to increase complexity\n    for _ in range(1):\n        for i in range(len(string)):\n            # Adding redundant condition checks\n            if string[i] == \"]\" and string[i] != \"[\":\n                continue\n            cnt, max_nest = 0, 0\n            for j in range(i, len(string)):\n                # Adding redundant operations\n                if string[j] == \"[\":\n                    cnt += 1\n                    cnt -= 0  # Redundant operation\n                else:\n                    cnt -= 1\n                    cnt += 0  # Redundant operation\n                max_nest = max(max_nest, cnt)\n                # Adding unnecessary checks\n                if cnt == 0 and cnt <= 0:\n                    if max_nest >= 2:\n                        return True\n                    break\n    # Adding a redundant return statement\n    return False if False else False\n<code_end>\n```", "modification": "\ndef is_nested(string):\n    \n    for _ in range(1):\n        for i in range(len(string)):\n            \n            if string[i] == \"]\" and string[i] != \"[\":\n                continue\n            cnt, max_nest = 0, 0\n            for j in range(i, len(string)):\n                \n                if string[j] == \"[\":\n                    cnt += 1\n                    cnt -= 0  \n                else:\n                    cnt -= 1\n                    cnt += 0  \n                max_nest = max(max_nest, cnt)\n                \n                if cnt == 0 and cnt <= 0:\n                    if max_nest >= 2:\n                        return True\n                    break\n    \n    return False if False else False\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['[[]]'], ['[]]]]]]][[[[[]'], ['[][]'], ['[]'], ['[[[[]]]]'], ['[]]]]]]]]]]'], ['[][][[]]'], ['[[]'], ['[]]'], ['[[]][['], ['[[][]]'], [''], ['[[[[[[[['], [']]]]]]]]'], ['[[]][]'], ['[[]]]'], ['[]][[]'], ['[][][]'], ['[[][]['], ['[[[]]]]'], ['[[[][]]]'], ['[][][][[][]][]'], ['][[][]['], ['[[[[[[]]]]]]'], ['[[][[]['], ['][]][[]'], ['[[[[][]]]][]'], ['[[[[][]]]]][]'], ['][]][][]][[][]'], [']][[][[[]]]]['], [']][[][[]]]]['], ['[[[][]][[][][]]]]][]'], [']][[][[]]]][[[[[[][]]]]][][]]]][]['], ['[[[]]]'], ['[[[[[[]]]]]]][[][[]]]][[[[[[][]]]]][][]]]][][]'], ['][]][[[]]'], ['][]][]'], ['][][]['], ['][]][[[]'], ['][]][[[][]]]]]][[][[]]]][[[[[[][]]]]][][]]]][]['], ['[[[[[[]]]]]]]'], ['[[]]]]]]][]'], ['[[[]]]][]][][]][[][]]'], ['][][]][[[]]][[[]'], ['][]]][[][]'], ['[[[[[[]]]]]]][[][[]]]][[[[[[][]]]]][][]]]][]['], ['][][[[]'], ['][][][][]][[][]'], ['][][][[[]'], ['[[]]]]][[][[]]]]['], [']]'], ['[[]]]]]]][[[]]]][]][][]][[][]][]]'], ['[[[[[[]]]]'], ['[[[[[[]]]]][]]]'], ['[[]]]]]][]'], ['[][][][][][]'], ['][][][][][][][]][[[]'], ['[[]]]]][[][[]]]][['], ['[[[[[][]]]]]]'], ['[][][][][]][[[]]][][]'], ['[][][][][]][]][]][][]][[][]'], [']][[][[[]]['], ['[[[[][]]]][][[[[[[]]]]]]][[][[]]]][[[[[[][]]]]][][]]]][][[[]['], ['[[[[[[]]]]]]][[][[]]]]]['], ['][][[][[[[[[[[[][]][[[]]]]]]]]][[][[]]]][[[[]]][][]'], ['][[[[[[]]]]][]]][][[[]'], [']][[][[]'], ['[[[[][]]]][][[[[[[]]]]]]][[][[]]]][[[[[[][]]]]][][]]][][[[]][]][][]][[][]['], ['[[[[][]]]][][[[[[[]]]]]]][[][[]]]][[[[[[][]]]]][][]]]][][[[][[[]]]]][[][[]]]]['], ['][]]][][][]'], ['[[[][[]['], ['][][][][[[[]]]]][[][]'], ['[[]]]]][['], ['[[]]]]]][][][][[[[]]]]][[][][[][[]]]]['], ['][]][[[][]]]]]][[][[]]]][[[[[[][]]]]][][]]]][][[[[[][]]]]][]'], ['[][][][][][[]'], ['[[[[[[]]][[[[[[]]]]]]]]'], ['[[]]]]]]]][]'], ['[][[]]]]]][]][[][[[[[[]]][[[[[[]]]]]]]]'], ['[[[[[][]]]]][]'], [']]]'], ['[[[[[[]]]]]][]][[[]][]]]][][]'], ['[[[[[[]]]][[[][]][[][][]]]]][]]][[][[]'], ['][]]][[]][]'], ['][][[][[[[[[[[[][]][][[]]]]]]]]][[][[]]]][[[[]]][[][]'], [']][[][[]]]][[[[[[][]]]]]]]][]][]]]][]['], ['][[[[[[]]]]]][]][[[]][]]]][][]]'], ['[[]]]]][[][[[[[[][]]]][]]]]]['], ['[[]]]]][[][[]]]][[['], ['][]][[][[[[[[[[[][]][[[]]]]]]]]][[][[]]]][[[[]]][][]'], ['][[]['], [']][[][[]]]]][[[[[[][]]]]][][]]]][]['], ['[[]]]]][][[['], ['][]][[[][]]]]]][[][[]]]][[[[[[][]]]]][][]]]][][[[[[][]]]]]][]'], [']]][[][[]'], ['[]]]]][]'], ['[[[[[[]]]]][]]'], ['[[[[][]]]][][[[[[[]]]]]]][[][[]]]][[[[[[][]]]]][][]]]][][[[[][[[]][]]][[][[]]]]['], ['[[[[]]]]]][][][][[[[]]]]][[][][[][[]]]][]]]]]]][]'], ['[[[[][]]]][][[[[[[]]]]]]][[][[[[[[[][][][[[]]]]][[[][]][[][][]]]]][]]][[][[][]]]][[[[[[][]]]]][][]]]][][[[][[[]]]]][[][[]]]]['], ['[[]]]]][[][[][[[[][]]]][][[[[[[]]]]]]][[][[[[[[[][][][[[]]]]][[[][]][[][][]]]]][]]][[][[][]]]][[[[[[][]]]]][][]]]][][[[][[[]]]]][[][[]]]][]]]['], ['[[[[]]]]]][][][][[[[]]]]][[][][[][[]]]][[][[]['], ['[[]]]][[]][[[]]'], ['][][][][][][][]][[][]'], ['[[[]]]]]]]][][[[]]]]]][][][][[[[]]]]][[][][[][[]]]]][]][[[]][][[[]]['], ['][]][[[][]]]]]][[][[]]]][[[[[[]][]]]]][][]]]][][[[[[][]]]]]][]'], ['[[[]]]]]]]][][[[]]]]]][][][][[[[]]]]]][[][][[][[]]]]][]][[[]][][[[]]['], ['][][[][[[]]]]]]]][][[[[[[[[][]][][[]]]]]]]]][[][[]]]][[[[]]][[][]'], ['[][][][][]'], ['][][[][[[]]]]]]]]][][[[[[[[[][]][][[]]]]]]]]][[][[]]]][[[[]]][[][]'], ['[[[[]]]]]][][][[][[[[]]]]][[][][[[][[]]]][]]]]]]][]'], [']][[][][][][][[][][[]]]]['], ['[[[[]]]]]]][[[]]]][]][][]][[][]][]][[[[]]]]][]]]'], ['[[[[[[]]]]]][[][][]][[[]][]]]][][[]'], ['[[]]]][[[[[]'], ['[[[[]]][]'], ['[[[[]][[[]]]]'], ['[[]][[[]][][]]'], ['][[['], ['[[[[]]]][][][][[][]]][[[][]][[]]]'], ['[][[[[[[]]]][[]]]][][][[]]'], ['[[][]][[[[[]]]'], ['[[[[[[[[[[[[[]]]]]]]]]]]]]'], [']][[['], ['[[[[][[[[[]]]]'], ['[[[[[][[[[[]]]]'], ['[[]]]][[[[[[][[[[[][[[[[]]]]'], ['[[[[]][[[]]][]'], [']'], ['[[][[]]]][][][][[][]]][[[][]][[]]]'], ['[][]]]'], ['[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]]'], ['[[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]'], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[]]'], ['[[]]]][[[[[[]'], ['[[]]]][[[[[['], ['[[[['], ['[[[[[][[][[[]]]]'], ['[[][[]][[[[[]]]'], ['[[[[][[[[[[]]]]'], ['[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]]'], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]'], ['[[[][[]]]][][][][[][]]][[[][]]][[]]][[[]][[[]]]]'], ['][['], ['[[[][]][[[[[]]]'], ['[[]][[[]][][[[][[]][[[[[]]]['], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[['], ['[[]][[[[]][][]]'], ['[[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][][][[]]][[[[[]'], ['][[[[[[]][[[]]][]'], ['[[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]]]]'], ['][][[][]][[[[[]]][['], ['[[[[[][[][[[]]][]'], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]]'], ['[[[[[][[[[[[][[][[[][]]][][[[]]]['], ['[[]]]][[[][[[[[[]'], ['][[[[[[]]][[[][[[]]][]'], ['[[][]][[[[[][]]'], [']][[[[[[]][[[]]][]'], ['][[[[]]]][][][][[][]]][[[][]][[]]]]'], ['[[]]][][[[[[[]][][][[]]][[][]][[[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[[[[]]]][][][[]]][[[[[]'], ['[[]]][[[[[[[[[[[[[]][[]][[[]][][[[][[]][[[[[]]][[[[[]]]]]]]'], ['[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]]['], ['[[[[]]][][[[[]][[[]]][]'], ['[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]]]]]]]]]]'], ['[][[[[[[]]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]]'], ['[[]][[[[]][[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][][][[]]][[[[[][][]]'], [']][[[['], ['[[]][][[]][][]]'], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]][[]]]'], [']][[[[['], ['[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[]]]]]]]][][[]]]]]]]]]]]]]'], ['][]][[['], ['[[[[]]]][[[[[[][[][[[[[[]]]]'], ['][]['], ['[[][]][[[[[]]][[[[[]]]'], ['[[]][[[[][]]'], ['[[[[]]]][][]]][][[][]]][[[][]][[]]]'], ['[[][]][[[[[]]][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[]][[[[][]]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]]'], ['[][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][]][[[[[]]]][][][[]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]]'], ['[[][]][[[[[[[]]]][[[[[[][[[[[][[[[[]]]]]]]'], ['[[[[]]]][][][][[][]]][[[][]][[[[[][[[[[]]]]]][[[[[['], ['[]][]]]'], ['[][][[[[][[[[[[]]]][[['], ['[][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][]][[[[[]]]]][[[]]]]][[]]'], ['[[][]][[[[[[[]]]][[[[[[][[[[[][[[[[[]]]]]]]'], ['[][[[[[[]][][[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]]][[]]][[][]][[[[[]]]][][][[[]]'], ['[[[[]][[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]][]]]]'], ['[[][]][[[[[[]]]'], ['[[[[]][[[[]]][]'], ['[[[[[][[[[[[]'], ['[[[[[][[[[[[]]][][[[[]][[[]]][]][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]]'], ['[][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][]][[[[[]][]]][[[]]]]][[]]'], ['[[[[[][[][[[]]]]]'], ['[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]]]]]]]'], ['[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][]][[[[[]]]][][][[]]][[[[[][][]]'], ['[[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]][[[[[][[[[[]]]]'], ['[[]]]][[[[[[[][[[[[][[[[[]]]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]]'], [']['], ['[[]][[[][[]]]][][][][[][]]][[[][]]][[]]][[[]][[[]]]]]'], ['[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[[['], ['[[[[][[[[]]]][][]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[['], ['[[][[][][[[[[]]]'], ['[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][[]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]]['], ['][[][]][[[[[]]][[[[[]]]][[[['], ['[][[[[[[]]]][[]]]][[][][[]]'], ['[[[[]]]][[[][[[][[][[[[[[]]]]'], ['[[]][[[[]][[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][[][][[]]][[[[[][][]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]]]'], ['[[[[[[[]][[[[[[[[[[[]]]]][[[]]]]]]][[[[][[]]]]]]]][][[]]]]]]]]]]]]]'], ['[[]]][[[[[[[[[[[[]]]'], ['[[[[[[[]][[[[[[[][[]]]]]]]][][[]]]]]]]]]]]]]'], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][][[[[]]][[]]'], ['][[[][]][[[[[][]]'], ['[[[[][[][]][[[[[]]][[[[[]]]][[[[[[]]]'], ['[[[][]][[[[[][]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[[[[[][[[[[[]]][][[[[]][[[]]][]][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]][][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]]'], ['[[[[[][[][[[][[]]]][][][][[][]]][[[][]]][[]]][[[]][[[]]]][[[]]]]]'], ['[[]]][[[[[[[[[[[[[]][[]][[[]][][[[][[]]'], ['[[[[[][[[[[]]'], ['[[]][][[]][][]]][[[[[[]][[[]]][]'], ['[[[]][[[[]][][]][[[]][[]]][]'], ['[[[[[][][[[[]]'], ['][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[[][]][[]]][[[]][[[]]]][[]]]'], ['[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[['], ['[[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[][]][[[]]]]'], ['][[[[]][][[]][][]][[[[]]][[[][[[]]][]'], ['][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[]]][[[[[[[[[[[[[]][[]][[[]][][[[][[]][[[[[]]][[[[[]]]]]]][[[]][[]]]]]][][][][[][]]][[[][]][[][[[[][[[[[]]]]]][[]]]][[[[[['], ['[[][]][[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]]]]]]][[[]]]'], ['[[]]]][[[[[[][][[[[[][[[[[]]]]'], ['[[[[]'], [']][[[][]][[[[[][[[[[[][[[[[[]]]['], ['[][][[[[[][[]]]][][][][[][]]][[[][]][[]]][][[[[[[]]]][[['], ['[[[[][]][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]]'], ['[[]][[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[[[[[][[[[[[][[][[[][]]][][[[]]][[]]]'], ['][[[[[[]][[[[]]][][[[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[[]][[[[]]'], ['[[]][[[]][][[[][[]][[[[[]]]]['], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]][[[[][]][[]]]][][][[]]'], ['[[[[]][[[]][[[[]]][]][]'], ['[[[[[][[][[]]'], ['[][[[][]][[[[[][][][[[[][[[[[[]'], ['[[][[][][[[[]'], ['[][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][]][[[[[]]]][]]]'], ['[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]]]'], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[[]]]][[]]]'], ['[[[[]]][][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]'], ['[[[][[[[]]]][][][][[][]]][[[][]][[]]]][]][[[[]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]]][[[[[]]]]'], ['[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[][[[[[[]][[[]]][][['], ['[[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]]'], ['[[][[]]]][[[[[][][[]]]'], ['][[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]]'], [']][[[[[['], [']][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]]['], ['[[][[]]]][[[[[][][[]][[][[][][[[[[]]]]'], ['[[][][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[]][[[[[]]][[[[[]]]'], [']][[[][]][[[][[[]][][[]][][]][][[[[[[][[[[[[]]]['], ['[][]]]]'], ['][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[][][[[[]'], ['[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]]]'], ['][[[[[][]]'], ['[[[][]][[[[][[[[[]]]][[[[[]][[[]]]][[[[]]]'], ['[[][[]]]][[[[[][][[]][[][][][[][[[[][]]]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[][]][[[[[][][][[[[][[[[[[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]['], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]][][[[][]][[[[[][][][[[[][[[[[[]'], ['[[]][[[]]][[[[[]]]['], ['[[[[[][]][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[]]][][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[][]]][[[[[]]]'], ['[[[[][[['], ['[[]][[[[]][[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]][][][[]]][[[[[][][]]'], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][][[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[][]][[[]]]][[[[[]]][[]]'], ['[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][[]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[[[[[]]]]][[[][]][[]]]][][[[]]]['], ['[][[[[[[]][][][[]]][[][]][[[[[]][[[[]][[[]][[[[]]][]][]]][][][[][][[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[][]][[[]]]][[[[[]]][[]]'], ['[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]'], ['[][[[[[[]]]]][[]]][[][]][[[[[]]]][][][[]]'], ['[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[['], ['[][[[[[[]][][[][[[[[[]][][][[]]][[][]]]]]][][][[[]]'], ['[[]][[[][][]]'], ['[[[[[][[[[[[]]'], ['[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]]'], ['[[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]][]]'], ['[[[[]][[[[]]]]'], ['][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][]][][[[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[[]]]][][][][[][]]][[[][]]]][[[[[[[[][[[[[]]]]]][[[[[['], [']]][[['], ['[[[[][][[[[]'], ['][[[[]]]][][]][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[[]]]][[]]][[][]][[[[[]]][[[[[]]]][[[['], ['][[[[[[]][[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[][[[[[[]][[[]]][][[[[]]][]'], ['[[][][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]]][[]]]][[[[[[]][[[[[]]][[[[[]]]'], ['[[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]]'], ['[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][]][][[[][]]][[[][]][[]]][[]]]][[[[[[[[]]]]'], ['[[]][[[][[]]]][][][][[][]][[[[]]]][][][][[][]]][[[][]][[]]]]]][[[][]]][[]]][[[]][[[]]]]]'], [']][[[[]]]][][][][[][]]][[]]'], ['[[[][]][[[[][[[[[]]]][[[[[[[[[]]]][][][][[][]]][[[][]][[][]]][[[[[]]][[[[]]]'], ['[[[][]][[[][][[[[[]]]][[[[[]]]'], ['[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[[][[[[[[]]]]][[]]][[][]][[[[[]]]][][][[]]][[[[[][[][]][[[[[]]]]]]'], ['[[[[[][[[[[[][[][[[[][]][[[[]]]][][][][[][[]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[[[[[]]]]][[[][]][[]]]][][[[]]]['], ['[[]]]][[[[[[][][[[[[[][[[[[]]]]'], ['[[[[[[[[[]]]][][][][[][]]][[[][]][[][]]][[[[[]]]'], ['][[[][[]]]][][][][[][]]][[[][]]][[]]][[[]][[[]]]]'], ['[[]]][][[[[[[]][][][[]]][[[[]]][[[[[[[[[[[[]]]][]][[[[[[][[[[]]]][][][][[][]]][[[][]][][]]]][[][]]][[[][]][[]]][[]]]][[[[[[[[[]]]][][][[]]][[[[[]'], ['[[][[][][[[[[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][][[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[][]][[[]]]][[[[[]]][[]]]'], ['[[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[[]]]]][]]'], [']]]['], ['][[[[[[][[[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]][[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[[][]]][[[][]][[]]][[]]]][[[[[['], ['[[]][][[]][]][]]][[[[[[]][[[]]][]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[[]]]]]]][[[[[]]]][][][[]]'], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][[][[][]][[[[[[]]][[]][][[[][]][[[[[[[[][[[[[[]]]][][][][[[[][[[[[[]'], [']][[[[[[['], ['[[[[][]][[[[[][]]'], ['[[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]]]]]]]]]]][[[[[[]'], ['[[[[][[[[]]]][][][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[['], ['[[]][[][]][][[[][[]][[[[[]]]]['], ['[[[[]][[[]'], ['[[[][]][[[][][[[[[[[][]][[[[[]]]]]]][[[[[]]]'], ['][[]][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]]'], ['[[[[]][[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][][]]][[[]][[[]]]]][[[][]][[]]][]]]]'], ['[[[[]][[[[]'], ['[[]][[[[][]][[][][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[]][[[[[]]][[[[[]]]'], ['[[[[[[[[[[[[[]]]]][[[]]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]][]]]][[[[][[[[[[]]]][[[[[][[[[[]]]]'], ['[[[[[[[]][[[[[[[][[]]]]]]]][[[[]][[[]][[[[]]][]][][][[]]]]]]]]]]]]]'], ['[[[[[][]][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[]]][][[[[[][[][[[]]]]][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[[[[]]]][][][][[]][[[[]]]][][]][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[[]]]][[]]][[][]][[[[[]]][[[[[]]]][[[[[]]][[[][[[[[[][[][[[]]]]]]][[]]]][[[[[]]]]'], ['[[]]][][[[[[[]][][][[]]][[][]][[[[][]]]][][][[]]][[[[[]'], ['[]][[[[[[[]]]'], ['[[[[]]]]]][[[][]][[]]][[]]]][[[[[['], ['[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[]]]][[]]]'], ['[[]][[[]][[]]]['], ['[[[[]]]][][][][[][][[[[[[]][][[][[[[[[]][][][[]]][[][]]]]]][][][[[]][]]][[[][]][[]]][[]][][[[][]][[[[[][][][[[[][[[[[[[[[[[[[]][[[[[[[[[[[[[]]]]][][[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]['], ['[[][[][][[[[[]'], ['[][[[[[[]][]][[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]]][[]]][[][]][[[[[]]]][][][[[]]'], ['[[[[[[[]][[[[[[[][[]]]]]]]][]][[]]]]]]]]]]]]]'], ['[[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]]]]]]]]]]]][[[[[[]'], ['[[[[][]][[[[[[][]]'], ['[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]'], ['[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]]'], ['[[[[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]'], ['[[[[[[[[[[[[[]]]]][[[]]]]][[[[[[[[[[][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[]]][[[[[[[[[[[[[]][[]][[[]][][[[][[]][[[[[]]][[[[[]]]]]]][[[]][[]]]]]][][][][[][]]][[[][]][[]][[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]][]]]][[[[][[[[[[]]]][[[[[][[[[[]]]]'], ['[[][]][[[[]]]'], ['[[]][[[[][]][[][][[[[[[][[[[]]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[]][[[[[]]][[[[[]]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[][][[[[][[[[[[]]]][[[[]]]][[[[[['], ['[[[[[]][[[[]]]]'], ['[[][]][[[[[[[]]]][[[[[[][[[[[][[[[[[[[][[][[[]]]]][[[]]]]]]]'], ['[[[[[][[[[[[][[[][[[][]]][][[[]]]['], ['[[[[[][]][[[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]][[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[]]][][[[[[][[][[[]]]]][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[[[]][[[[]]][[]][[][][[[[[[[[]]][][[[[[[]][][][[]]][[][]][[[[][]]]][][][[]]][[[[[][[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]]]]'], ['[[[[[[[[[[]]]]][[[]]]]]]][[[[][[]]]]]]]][][[]]]]]]]]]]]]]'], ['[[]][[[[]][]]'], ['[[[[[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[[]]]][[]]][[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]]][[[[[[]]]]'], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[[]]]][][][][[][]]][[[][]][[]]]]][[[]][[[]]]][[]]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]['], ['[[][][][[[[]'], ['][[[[]]]][][]][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[[]]]][[]]][[][]][[[[[]]]][[[[[]]]][[[['], ['[[[[[[[[[]][[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]][[]]][[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]]]]]]]]]]]][[[[[[]'], ['[[][]][[[[[][[[[[[]]]][[[[][[]]'], ['[[[[][[[[]]]][][][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[[['], [']][[[[]]][]]['], [']][[[[[[]]]][[[[[]'], ['[[][[][][[[[[]][[[[[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[[]]]][[]]][[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]'], ['[[[[]]]][][][][[][]]][[[][]]]][[[[[[[[[][[[[[]]]]]][[[[[['], ['[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]]]]]]]]]][][]]]'], ['[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]]][[[[[]]]][][][[]]][[[[[][][]]'], ['[[]]][][[[[[[]][][][[]]][[][]][[[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][]][][[]]][[[[[]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]['], [']][][[][]][[[[[]]][['], ['[][[[[[[]]]][[]]]][][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]]][][[[][[[]][[[]]][]'], ['[[[[][[[[]]]][][][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][[[]]]][[[[[]][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[[['], ['[[[[[][]][[[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]][[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]][]]][][[[[[][[][[[]]]]][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[][]][[[[[[[[[[]]]][][][[][[][]]][[[][]][[]]]]][[[[[]]]][[[][]]'], ['[[[[[[[]][[[[[[[][[]]]]]]]][]][[]][[[][[[[]]]][][][][[][]]][[[][]][[]]]][]][[[[]]]]]]]]]]]]]'], ['[]][]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[[]]]]]]]'], ['[[]][[[][[][][[[[][[[[[[]]]][[[][]]'], ['[][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][]][[[[[]]][]][[[]]]]][[]]'], ['[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[][[][[]]]][[[[[][][[]]][[[[[[[]]]]'], ['[[[[[[[[[]]]][][][][[][]]][[[][[[][]][[[[][[[[[]]]][[[[[]][[[]]]][[[[]][][]][[][]]][[[[[]]]'], ['[[[[]]]][][][][[][]['], ['[[[]'], ['][[[[[[][[[][[][][[[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][]][[[[[]]]][][][[]]][[[[[][][]]]][[[]]][[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[[]]][][[[][]][[[[][[[[[]]]][[[[[]]]]'], ['[[[[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[]]]][][][[]][][[[[[]]]]'], ['[[[[]]]][][[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[[][][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]]][[]]]][[[[[[]][[[[[]]][[[[[]]][][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]]][[]]][[[]][[[]]]][[]]]'], ['[[[[]]]][[[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]][[[[][[][[[[[[]]]]'], ['[[[[]][[[[]][]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]][[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]]]][][][[]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]][[[[]][[[]]][]]]]]['], ['[[[[[[[[[[[[[]]]]][[]][[[][[]]]][][][][[][]]][[[][]]][[]]][[[]][[[]]]]]]]]]]][[[[][[[[[[]]]]]]]'], ['[[[[][[[[]]]][][[][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[[['], ['[[[[]]][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[]][[[][][]]]]][[[]][[[]]]][][[[][]][[[[[][][][[[[][[[[[[]][[[][]][[]]]][][[[]]]['], ['[[][]][[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]][[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]]]]]]][][[]]]]]]]]]]]]][[[]]]'], ['[[]]][][[[[[[]][][][[]]][[][]][[[[[[][[[[]][]]][[[[[]'], ['[[]]][[[[[[[[[[[[[[[[]]]][][]]][][[][]]][[[][]][[]]]]]][]'], ['[][[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]][[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]]]][][][[]]'], ['[[[[[][[[[[[][[][[[[][]][[[[]]]][][][][[][[]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[[[[[]]]]][[[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][[]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]][[][]][[]]]][][[[]]]['], ['[[[]][[[[[[]]]][[[[[][]][[[]][[[[]]][]][]'], ['[[[[]][[[[]][][[[][]][[[[[[[[[[]]]][][][[][[][]]][[[][]][[]]]]][[[[[]]]][[[][]]]'], ['[[[][]][[[][][[[[[[[][]][[[][[]]]][][][][[][]]][[[][]][[]]]]]]'], ['[][[[[[[]]]]][[]]][[][]][[[][[]]]][][][[]]'], ['[[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]'], ['[[[[][[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[[[[['], ['[[[[[][]][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[]]][][[[][]][[[[]][[[[[]]]][[[[[]]]'], ['[[[[[]][[[[]]][[]][[][][[[[[[[[]]][][[[[[[]][][][][[[[[[]][]][[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]]][[]]][[][]][[[[[]]]][][][[[]][[]]][[][]][[[[][]]]][][][[]]][[[[[][[[[[][[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]]]]'], ['[[[[[]][[[]]]][][[]]]][[[[[][][[]]]'], ['[][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][[]][[[]]][[[[[]]]['], ['[[[[[]]][]'], ['[[][[][][[[[[]][[[[[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[[[][]]]][[]]][[][][[][]][[[[[[]]]][[[[[]]]][][][[]][][[[[[]]]]]'], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[[]]]][][][][[][]]][[[][]][[[]]]]][[[]][[[]]]][[]]]'], ['[[][]][[[[[[[]]]][[[[[[][[[[[[][[[[[[[[][[][[[]]]]][[[]]]]]]]'], ['[[[[[][[[[[[][[][[[][]]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]]['], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[][]][[[]]]][[[[[]]][[]]'], ['[[[]][]'], ['[][[]]][]'], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[]]]][[]]]'], ['[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]]][[[[[]]]][][[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]]][[]]][[[[[][][]]'], ['[[[][]][]'], ['[[][[]][[[[[[[]]]][[[[[[[][[[[[][[[[[]]]]]]]'], ['[[[[[[[[[[[[[]]]]][[[[]]]]][]][[[[][[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]'], ['[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]]][[[[[]]]][][[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]][][[][[[[[[]][][][[]]][[][]]]]]][][][[[]]][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]]][[]]][[[[[][][]]'], ['[[[[[[[[[[[[[]][]]]]]]]]][[[[][[[[[[]]]]]'], ['[[[[]][[[[][]][[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]][[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]]]]]]][][[]]]]]]]]]]]]][[[]]][]]'], ['[[[][]][[[][[]]]][[[][[[[[[][]]]]]]][[[[[]]'], ['[[[][]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]]][[[[[[]]]][[[]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[][]]][[]'], [']][[[]][]][[[[[[]][][[]][][]][][[[[[[][[[[[[[]]]['], ['[[]][][[]][]][]]][[[[[[]]]'], ['[[[[][[[[[[]]'], ['[[[[]]]]][][][][[][]]][[[][]][[]]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[[[[[][[[[[[]]][][[[[]][[[]]]][]][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]][][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]]'], ['[[[[][[[[]]]][][]][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][[[]]]][[[[[]][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[[['], ['[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[[[[[][[[[]]]][][]][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][[[]]]][[[[[]][][[][[[[[]][[[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[[[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]]['], ['[[[][]]][[[[[[]][[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[][[[[[[]][[[]]][][[[[]]][][[[[][[[[[]]]][[[[[]][[[]]]][[[[]]]'], ['[][[[[[[]]][][][[[]]'], ['[[[[[][[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]]]'], ['[[][[][][[[[[]][][[[[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[[[][]]]][[]]][[][][[][]][[[[[[]]]][[[[[]]]][][][[]][][[[[[]]]]]'], ['[[[[]][]'], ['][[][[[[[[]][][][[[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]][][[[][]][[[[[][][][[[[][[[[[[][['], ['][[]]]'], ['[[[][]][[[][[]]]][[[][[[[[[][]]]]]]][[[[[[[]]]][][][][[][][[[]]'], ['[[[[][[[[]]]][][][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[[[[[]][[[]]][]][]][[]]]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[['], ['[[[[[][[][[]][[[[]][[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][[][][[]]][[[[[][][]][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]]'], ['[][[[[[][]][[[[[][]]]]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[][]][[[[[][][][[[[][[[[[[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]][]]]]]['], ['[[]][[[[]][[]]][][[[[[[]][][][[]]][[[[[[]][[[[]]][][[[[][]][[[[][[[[[]]]][[[[[]]]][[][]][[[[[]]]][][][[]]][[[[[][][]]'], ['[[[[[][[[[[[[][]][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[]]][][[[[[][[][[[]]]]][[[][]][[[[][[[[[]]]][[[[[]]][[[[]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[[[[]]][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[[]]]]'], ['[[[[][[]][][[]][]][]]][[[[[[]][[[]]][][]][[[[[[][]]'], ['[[][]][[[[[[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[[[[[][[[[]]]][][]][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][[[]]]][[[[[]][][[][[[[[]][[[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[[[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]][]]][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[][][[[[]]][[[[[[[[[[[[[]][[]][[[]][][[[][[]][[]][[[[[]]]'], ['[][[[[[[]]]][[]]]][][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]]][][[[][[[]][[[[]][[[[[[[]]]]]][]'], ['[[[[][[[[[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[[[[['], ['[[]][][[]][]][]]][[][]][[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]]]]]]][[[]]][[[[[]][[[]]][]'], ['[[[][]][[[[[[[[[[]]]][][][][[][]]][[[][]][[]]]]][[[[[[]]]][[[]]'], ['[[]][]][[]][]][]]][[[[[[]]]'], ['[][[[[[[]]][][][[]]][[][]][[[[[]]]][][][[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]][[]]]][]][[[[[]]][[]]'], ['[[[[]][[[[[[]]]][][][][[][]][[[][[]]]][][][]][[][]]][[[][]][][]]][[[]][[[]]]]][[[][]][[]]][]]]]'], ['[][[[[[[]]]][[]][[][][[]]'], ['[[[[]]]][[[[[[[[[[[[[]]][][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]][]][[]]][[[]][[[]]]][[]]]'], ['[[][]][[[[[[[]]]][[[[[[][[[[[[][[[[[[[[][[][[]]][[[]]]]]]]'], ['[[]][[[[]][[]]]][]][[[[[[]][][][[]]][[][][[[[[]]]][][][[]]]][[[[[][][]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[[[[[[][[[[[[][[][[[][]]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]][]]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]]][[[[[]]]][[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]]'], ['[[[[]]]][][][][[][]]][[[][]]]][[[[[[[]][[[]]]][][[]]]][[[[[][][[]]][[[[[[][[[[[]]]]]][[[[[['], ['[[[[]]]][][][][[][]]][[[][]]]][[[[[[[]][[[]]]][][[]]]][[[[[][][[]]][[[[[[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]][]][[][[[[[]]]]]][[[[[['], ['[[[][]][[[[][[[[[]]]][[[[[[]][[[]]]][[[[]]]'], ['][[[[[[]]][[[][[[]][[[[]]]][][][][[][]]][[[][]]]][[[[[[[[[][[[[[]]]]]][[[[[[][]'], ['[[[[]]]][[[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]][][[[[[]]]][][][[]][[[[][[][[[[[[]]]]'], ['[[[[[][]][[[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]][[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[]]]][[[[[]]]'], ['][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][]][][[[][]]][[[][]][[]]][[]]][][[[[[[]][][][[]]][[][]][[[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[[[[]]]][][][[]]][[[[[][[]]]][[[[[['], ['[[][]][[[[[[[]]]][[[[[[[]]]][[[[[[][][[[[[][[[[[]]]][][[[[[[][[[[[[[[][[][[]]][[[][]]]]]]'], [']][[[[]][][[]][][]][[[[]]][[[][[[]]][]['], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]][[[[][]][[][[]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]][[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[[[[][]][[[[[][]]]]][][[]]]][][][[]][][[][]][[[[[]]][[]]'], ['[[[]]'], ['[[]][[]][[[[[[[][[[][[]][[[[[]]]][[[][]]'], ['[[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[[[]]]]][][][][[][]]][[[][]][[]]]][[][]][[[]]]]'], ['[[[[][[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]]]]]]]]]]]][[[[[[]'], ['[[[]][[[[[[]]]][[[[[][]][[[]]][[[[]]][]][]'], ['[[[[]]]][[[[[[][[][[[[[[][]]]'], ['[[[[]]]][[[[[[[[[[[[[]]][][[[[[[]]]][[]]][[][]][[[[[]]][][][][[]][]][[]]][[[]][[[]]]][[]]]'], ['[[][[][][[[[[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][][[[][[]]]][][][][[][]]][[[]][]][[[]][[[]][][]][]]][[][]][[[]]]][[[[[]]][[]]]'], ['[]]][][[][]][[[[[]]][[][[[[[[[]]]'], ['[[]][]][[]][]]]'], ['[[[[]]]]]][[[][]][[]]][[]]][[[[[['], ['[[[[['], ['[[]][[][][[[[[]]]'], ['[[[[]]][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][[][[[[[[]]][][][[]]][[][]][[[[[]]]][][][[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]][[]]]][]][[[[[]]][[]]][][][[][]]][[[][]][[]]][[]]]][[[[[['], ['[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[[][[[[[[]]]]]][[]]][[][]][[[[[]]]][][][[]]][[[[[][[][]][[[[[]]]]]]'], ['[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[[][[[[[[]]]]]][[]]][[][]][[[[[]]]][][][[]]][[[[[][[][[[[[]]]]]]'], ['][[[][[]]]][][][][[][]]][[[][]]][[]]][[[][[[]]]]'], ['[[[[[[[]][[[[[[[][[]]]]]][]][]][[]][[[][[[[]]]][][][][[][]]][[[][]][[]]]][]][[[[]]]]]]]]]]]]]'], ['[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]'], ['[][[[[[[[]]][][[[][[[[[[][]]]][[]]][[[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]][][[[][]][[[[[][][][[[[][[[[[[]][]][[[[[]][]]][[[]]]]][[]]'], ['[[[[[[[[]]]][][[[[[][[[[[[[][]][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[]]][][[[[[][[][[[]]]]][[[][]][[[[][[[[[]]]][[[[[]]][[[[][][][[][]]][[[][]][[]]]][[[[[]]]'], ['[][]]][]'], ['[[[[[][[[[[[][[][[[[][]][[[[]]]][][][][[][[]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[[[[[]]]]][[[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][[]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]][[[[[]]]][[[[[[[[[[[[[]]][][[[[[[]]]][[]]][[][]][[[[[[]]]][][][[]][]][[]]][[[]][[[]]]][[]]][[[]]][[][]][[]]]][][[[]]]['], ['][[][[][]]][[[][]]][[]]][[[][[[]]]]'], ['[[[]]]][[[[[['], ['[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]]][[[[[[][[[[[[]]]]][[]]][[][]][[[[[]]]][][][[]]][[[[[][[][]][[[[[]]]]]]'], ['[][[[[]]][[]]][[][]][[[[[]]]][][][[]]'], ['][[][[[][]]'], ['[[[[[]][[][[[]]]]'], ['[[[[[]][[[]]]][][[]]]]]]'], ['[][[[[[[[]]]][[]]][[][]][[[[[]]]][][][[]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]][[[[]][[[]]][]]]]]['], ['[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][[]]][[[[]]]][][]][][[][]]][[[][]][[]]]]][[[]][[[]]]][[]]]'], ['[[[[[][]][[[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]][[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[]]]][[[[[]]]'], ['[[[[]][][[[[][[[[]]]][][][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[[[[[]][[[]]][]][]][[]]]]][[[][]]][[[[[[]][[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[][[[[[[]][[[]]][][[[[]]][][[[[][[[[[]]]][[[[[]][[[]]]][[[[]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[['], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]][[[[[[[[[]]]][][][][[][]]][[[][]][[][]]][[[[[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]['], ['[[[[[][[[[[[[]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][[[[][[[[[[]]][][[[[]][[[]]][]][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]][][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]]'], ['][[[[[[][[[][[][][[[[]][[[[]][[]]]][[[[[[[[[]]]][][][][[][]]][[[][[]][[]]]]][[[[[]]]][[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]]][[[[[[]][][][[]]][[][]][[[[[]]]][][][[[]]][[[[[][][]]]][[[]]][[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]][[[[][[[][][][][[[][]]][[[][]][[]]][[]]]][[[[[['], [']][[[][]][[[][[[]][[[[[]]]][][][][[][]]][[[][]][[]]][[][][[[[][[[[[[]]]][[[[]]]][[[[[[]]['], ['[[[]][[[[[[][[[][[][][[[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][]][[[[[]]]][][][[]]][[[[[][][]]]][[[]]][[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[[][]]][[[][]][[]]][[]]]][[[[[[[]][[[[][[[[[]]]][[[[[[]][[[]]]][[[[]]]'], [']]['], ['[[[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[[[[[][[[[]]]][][]][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][[[]]]][[[[[]][][[][[[[[]][[[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[[[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]][]]]][[[][[[[[[]'], ['[[[][][][[[][][[[[[[[][]][[[[[]]]]]]][[[[[]]]'], ['[[[[[[][[][[[]]]]'], ['[][[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]][[[[[][[][[[[][[[[[[]]]]][[[[]]]][][]][][[][]][[[][[]]]][][][][[][]]][[[[[][]][[]]][[[]][[[]]]][[]]][[][]][[[[[]]][[[[[]]]][[[[]]][][][[]]'], ['[[[[]][[[[[[]]]][][][][[][]]]]'], ['[][[[[[[]]][][[][[[]]'], [']][[[[[[][][[[]]][]'], ['][[[[[[][[[[]]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][]][][[[][]]][[[][]][[]]][[]]][][[[[[[]][][][[]]][[][]][[[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[[[[]]]][][][[]]][[[[[][[]]]][[[[[['], ['[[][]][[[[[[[]]]][[[[[[[]]]][[[[[[][][[[[[][[[[[]]]][][[[[[[][[[[[[[[]][[][[]]][[[][]]]]]]'], ['][[][[[[]][[[[]]][][[[[][]][[[[][[[[[]]]]][[[[[]]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]][][[[][]][[[[[][][][[[[][[[[[[]]]]][][]][][[][]]][[[][]][[]]]]]]][[[[]][[[]]][]]]]]['], [']][[[][]][[[][[[]][[[[[]]]][][][][[][]]][[[][]][[]]][[][][[[[][[[[[[]]]][[[[]]]][[[[][[]]['], ['[[][[]]]][[[[[][[]]]'], ['[[[]][[[[]][[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][][][[]]][[[[[][][]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[[[]]]]]]][[[[[]]]][][][[]]'], ['[[]]][][][[[[[]][][][[]]][[][]][[[[[]]]][][][[]]][[[[[]'], ['[[[[[[[[[[[[[]]]]][[[[[][[[[[[][[[]]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]][]]]][[[[][[[[[[]]]][[[[[][[[[[]]]]'], ['[[[[[[]]][[[[]]][]][]'], ['[[]][[[][[]]]][][][][[][]]][[[][]]][[][[[[[[]]][[[][[[]]][]]]][[[]][[[]]]]]'], ['[[[[[[][]][[[][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]][[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[]]]][[[[[]]][[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]][[[[[][[[[[]]]]'], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]][[[[[][[[[[[]][[[[]]][][[[[][]][[[[][[[[[]]]][[[[[]]][[[[]]]][][][][[][]]][[[][]][[][]]][[[[[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]['], ['][][[][]][[[[[]][[][[]][[[[[[]]][['], ['[][[[[[][]][[[[[][]]]'], ['[[[][[]]]][][][][[][]]][[[][[[][]][[[[[[[]]]][[[[[[[]]]][[[[[[][][[[[[][[[[[]]]][][[[[[[][[[[[[[[][[][[]]][[[][]]]]]]]][[[]][[[]][][]][]]][[[[]]]]][][][][[][]]][[[][]][[]]]][[][]][[[]]]]'], ['[[[[[[[[[[]]]]][[[]]]]]]][[[[][[]]]]]]]][][[]]]]]]]]]]]]][[]]][[[[[[[[[[[[]]]'], ['[[][[][][[[[[][[[[]]]][][[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[[][][[[[[[][[[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]]][][][][[][]]][[[][]][[]]]][[]]]][[[[[[]][[[[[]]][[[[[]]][][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]]][[]]][[[]][[[]]]][[]]]]]'], ['[[[[]]]]]][[[][]][[]]]][[]]][[[[[['], ['[[[][[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[]]]][[]]]]][]'], ['[[[[]]]][][][][[][]]][[[][[[['], ['[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[]][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]]][[[[[]]]][][[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]]][[]]][[[[[][][]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]]][[[[]]]'], ['[[[[]][[[[[[]]]][][][][[][]][[[][[]]]][][][]][[][]]][][[][]][][]]][[[]][[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[[[[]]]]][[[][]][[]]][]]]]'], ['[[]][[[[][[]]]][][][][[][]]][[[][]]][[][[[[[[]]][[[][[[]]][]]]][[[]][[[]]]]]'], ['][[[][[]]]][][][][[][]]][[[][]]][[]]]][[[]][[[]]]]'], ['[[]][[[[][[[[]]]][][][][[][]]][[[]][[[[[[]]][[[][[[]][[[[]]]][][][][[][]]][[[][]]]][[[[[[[[[][[[[[]]]]]][[[[[[][][]][[]]]]]][][][][[][]]][[[][]][[]]][[]]]][[[[[[[[[[][[[[[[][[][[[][]]][][[[]]][[]]]'], ['[[[[]]]][[[[[[][[][[[[[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]]]]]]]]]][]]]]'], ['[[[[][[[[]][][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][]][[[[[]]]]][[[]]]]][[]]]][][[][][[][]]][[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[[]['], ['[[[[[[[[]]]][][][][[][]]][[[][]][[][]]][[[[[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][][[[[]]][[]]'], ['[[][[]]]][][][][[][]]][[[][]]'], ['[[[][]][[[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[[[]]]]][][][][[][]]][[[][]][[]]]][[][]][[[]]]][[[[][]]'], ['[[[[]]]][[[[[[[[[[[[[]]][][[[[[[]]]][[]]][[][]][[[[[]]][][][][[]][]][]][[[]]]][[]]]'], ['[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[]]]]]]]][][[]]]]]]]]]]]]][[[[]]]]]]]]'], ['[[[[[[][]]'], ['[[[[][[[[]]]]][][][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]][[[[[][[[[[[]][[[[]]][][[[[][]][[[[][[[[[]]]][[[[[]]][[[[]]]][][][][[][]]][[[][]][[][]]][[[[[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]][[[[][]][[]]][[]]]][[[[[['], [']]][[[[['], ['][]][[[['], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]][[[[]][[[]]][]]]]][]]]][][][][[][][[[[[[]][][[][[[[[[]][][][[]]][[][]]]]]][][][[[]][]]][[[][]][[]]][[]][][[[][]][[[[[][][][[[[][[[[[[[[[[[[[]][[[[[[[[[[[[[]]]]][][[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[]]]][][][][[][]]][[[][]][[]]]]]]]]]]]['], ['[[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[][]][[[[[][][][[[[][[[[[[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][][[]]]]]][]]]]]['], ['[[[[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[]]]][[]][][[]][]][]]][[[[[[]]][][][[]][][[[[[]]]]'], ['[[[[]]]][[[[[[[[[[[[[]]][][[[[[[]]]][[]]][[][]][[[[[]]][][][][[]][[]][]][[[]]]][[]]]'], ['[[[][]][[[[][[[[[]]]][[[[[[]][[[]]]][[[[]]][][[[[[[[]]]][[[][[[[[[][]]]][[]]][[][]][[[[[]]]]][[[]]]]][[]]'], ['[[]][][[]][]][]]]][[[[[[]]]'], ['[[[[[][[[[[[][[][[[][]]][][[[][]][[[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[[[]]]]][][][][[][]]][[[][]][[]]]][[][]][[[]]]][[[[][]][[[]]]['], ['[[[[[]][[[]]]]][][[]]]]]]'], ['[][[[[[[[[[[][[[[[[[][]][[[[[][]][[[[[[[[[[[[]]]]]]]]]]]]][[[]]][][[[[[][[][[[]]]]][[[][]][[[[][[[[[]]]][[[[[]]][[[[][]]]][[]]]][[][][[]]'], ['[[][[[][][[[[[]]]'], ['[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][][[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][[[[]][[[[[[]]]][][][][[][]][[[][[]]]][][][][[][]]][[[][]][][]]][[[]][[[]]]]][[[][]][[]]][]]]][]][]]][[][]][[[]]]][[[[[]]][[]]'], ['[[[][[['], ['[][[[[[[]][][[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]]][[]]][[][[]][[[[[]]]][][][[[]]'], ['][[][[][][[[[[[[[[[[[[[[]]]]]]]][]][[[[][[[[[[]]]]]]][[[]]]'], ['][[[[]]]][][][][[][]]][[[][][[]]]]'], ['[[[[[[[[[[]][[[][]][[[[][[]]]][][][][[][]]][[[][]][[[]][[[]][][]][]]][[[[]]]]][][][][[][]]][[[][]][[]]]][[][]][[[]]]][[[[][]]]]][[[]]]]]]][[[[][[]]]]]]]][][[]]]]]]]]]]]]][[]]][[[[[[[[[[[[]]]'], ['[[]]][[[[[[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[[[]]]]]]][[[[[]]]][][][[]]][[]]]]]][]'], ['[[[[[][[[]]]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][[[[][[[[[[]]][][[[[]][[[]]][]][[[[][[[[[[]]]][[]]][[][]][[[[[[[][[[[[[]]]]]]]]]][[[[]][[[][[]]]][][][][[][]]][[[][]]][[]]]][[[]][[[]]]][[[[[[]]]]]]][[[[[]]]][][][[]][][]][[[[[[[][[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[[[]]]][][][[]]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]][[[[[][[][[[[][[]][[[[]][][]][[[[[[]]]][[]]][[][]][[[[[]]]][][[[][]][[[[][[[[[]]]][[[[[]]][][[]]]][][][[]]'], ['[[[[][[[[]]]][][][][[][]]][[[][]][[]]]]]][][][]][][['], ['[][[[[[[[[[][[[[[[][[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]][][[[][]][[[[[][][][[[[][[[[[[]'], ['[[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]][[[][][][[[][][[[[[[[][]][[[[[]]]]]]][[[[[]]]]]]]]]]]]]]][[[[[[]'], ['[[[[[]][[[][[[]]]]'], ['[[[[][[[[]]]][][][][[][]][][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[[[[[]][[[]]][]][]][[]]]]]][][][][[][[[[[]][[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[][]][[]]][[]]]][[[[[['], [']][][[][]][[[[[]]][[[]][[[[[[][]]]'], ['[[[[][[[[]]]][][[][][[][]]][[[[][]][[]]]]]][][][][[][]]][[[][]][[]][][[]]]][[[[[['], ['[[[[[[[[[[[]]]]]]'], ['[[[[[[[[[[[[[]]]][[]]][[[[[[[[[[[[]]]]]]]]][[[[][[[[[[]]]]]]]'], [']][[[[]][][[]][][]][[]['], ['[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[[][[[[[[]]]]]][[]]][[][[]][[[[[]]]][][][[]]][[[[[][[][[[[[]]]]]]'], ['[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[[]]]'], ['[[[[]]]][][][][[]]['], ['[[]]]][[[[[[[][[[[[][[[[[[]]]]'], ['[[]][][[[]][]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[[[[]]]]]]]]][]][]]][[[[[[]]]'], ['[[][]][[[[[[[[[[][[[[[[][[][[[][]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[[[[[][[[[]]]][][]][][[][]]][[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[]]][[][]][[]]]]]][][[[]]]][[[[[]][][[][[[[[]][[[[]]][[]][][[]][][]]][[[[[[]][[[]]][][]]]][[[[][]][[]]][[]]]][[[[[[[]]][[[]][[[]]]]][[[][]][[]]]][][[[]]][]]][[[][]][[[[][[[[[]]]][[[[[]]]'], ['[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]][[[[]][[[]]][]]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]'], ['[][[[][[]]]][][][][[][]]][[[][]]][[]]][[[]][[[]]]]'], ['[[][]][[[[[[[[[]][[[[[[[[[[[[[]]]]][[[]]]]]]][[[[][[[[][[]]]]]]]][][[]]]]]]]][[[][]][[[[[][]]]]]]][[[]]]'], ['[[[[[[[[]][[[[[[[][[]]]]]]]][]][[]][[[][[[[]]]][][][][[][]]][[[][]][[]]]][]][[[[]'], ['[[[[[][[][[[[][[[[[[]]]][[]]][[][]][[[[[]]][[]][[][][[[[[[[[[[[[[[[]]]]]]]]]][[[[][[[[[[]]]]]]][[[]]]]'], ['[]['], ['[[][[][[[[]]]][][][][[][]]][[[][]][[]]][[]][][[[[[[[[[[][[][[[[][[]][[[][]][[[[[[]][][[]][][]][][[[[[[][[[[[[]]][[[[[]]]][[]]][[][]][[[[[]]]][][][[]][][[[[[]]]]]]][[[[][[[[[[]]]]]]]][][[]]]]][[][[[][[[[[[]][][][[]]][[][]][[[[[]]]][][][[][]][[[[[]]][[]][][[[][]][[[[[][][][[[[][[[[[[]]]]][][]][][[][]]][[[][]][[]]]]]]][[[[]][[[]]][]]]]][][[[[[[[]]]][[[[[[[][[[[[][[[[[]]]]]]]'], ['[[[[[[[[]]]][][][][[][]]][[[][]][[]]]][[[[[[[[[[][[[[[[][[][[[][]]][[[[]]]][][][][[][]][[]]][[[][[]]]][][][][[][]]][[[][]][[]]][[[]][[[]]]]][[[][]][[]]]]][][[[]]][]]]'], ['[[]]]][[[[[[[][[[[[][[[[[[]][][[]]]]'], ['][[[[[[][[[][[][][[[[]][[[[]][[]]]][[[[[[[[[]]]][][][][[][]]][[[][[]][[]]]]][[[[[]]]][[[[[[[[]]]][][][][[][]]][[[][]][[]]][[[[[][[][[]][[[[]][[]]][][[[[[[]][][][[]]][[][]][[[[[]]]][[][][[]]][[[[[][][]][[[[][[[[[[]]]][[]]][[][]][[[[[]]]][][][[]]][[[[[]]]][[[[[[]][][][[]]][[][]][[[[[]]]][][][[[]]][[[[[][][]]]][[[]]][[[]]]][][][][[][]]][[[][][[]]]][[[][[[[[[]][[]]]]][[[[][[[][][][][[[][]]][[[][]][[]]][[]]]][[[[[['], ['[[]][[[[]][[]]]][][[[[[[]][][][[]]][[][[[[[]]]][[[[[[[[[[[[[]]]]]]]]]]][[[[][[[[[[]]]]]]][]]][[[[][]][[]]][[[]][[[[[[[]]]]]]][[[[[]]]][][[[[[[[[[[[[[[]]]]][[[[]]]]]]][[[[][[[[[[]]]][[[[[][[[[[][[][]][[[[[]]]]]]]][[]]][[[[[][][]]'], [']][['], ['['], ['[['], ['[][][][][][][][][][][][][][][][][][][[[[[[[[[[[[[[[[[[[['], [']][]'], ['[]]['], ['[][[[][['], ['[[[]][[[]][][]][[[]]]][][][][[][]]][[[][]][[]]]'], ['[[[][]][][[][]]][[[][]][[]]]'], ['[[[]]]][[[[[[][[[[]][[[]]]]'], [']][[][]][[[[[]]][[['], [']][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]['], [']][[]][]][[[[[]]][[['], ['[[[[]][[[[[[]]]][][][][[][]]][[[][]][[]]][]]]]'], ['[[]]]][[[['], [']][[][]][[[[[[[[][]][][[][]]][[[][[]][[]]]['], [']][[[]]]][[[[[[][[[[]][[[]]]][[][]][[[[[]]][[['], ['[[][]][[[]]]'], ['[[[]]]][[[[[]'], [']][[][]][[[[[]][[[]][[[]][][]][[[]]]][][][][[][]]][[[][]][[]]][['], ['[[]]][[[]][][]]'], ['[[]][[[[[]'], ['[[[[]]]][][][][[][][]][[[][]][[]]]'], [']][[][][][[[[[[[[][]][][[][]]][[[][[]][[]]]['], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][]][]'], ['[[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['[[]]]][[[[[]][[[]][[[]][][]][[[]]]][][][][[][]]][[[][]][[]]]'], ['[[[[]]][[]'], ['[[[[]]]][[[[[]'], ['[[]]]][[[[['], ['[][[[[[[]]]][[]]][][][][[]]'], ['[[[]][[[]][][]][[[]]]]][[][]][[[[[]]][[[][][][][[][]]][[[][]][[]]]'], ['[[[[[][]][[[[]]]]'], ['][[[]]]][[[[[[][[[[]][[[]]]]'], ['[[[]][]][[[[[]'], [']][[]][]][[[[[[]]][[['], ['[[[][]][][[][]]][[[][]][[]]][]'], ['[[][]][[[[]]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][[]]]['], ['[[][[[[]]]][[[[[[][[[[]][[[]]]]]]'], ['[[]][[[[[[]'], ['[[[[]]][[[]'], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[]]]][]'], ['[[[[][[[][]][][[][]]][[[][]][[]]]]][[[]'], ['[[[][]][][[][]][][[[][]][[]]][]'], ['[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][]'], ['[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['][[[]]]][[[[[[][[[[]][[[[][]][][[][]]][[[][]][[]]][[[]]]]'], [']][[][]][[[[[]][[[]][[[]][][]][[[]]]][][][][[][]]][[[[][]][][[][]]][[[][]][[]]]]][['], ['[[[[]][[[]][][]][[[]]]][][][][[][]]][[[][]][[]]][]][[[[[]]]'], ['[[[[]]]][[[]'], ['[[][[[[[[]]]][[]]]][][][[]][]][[[]][][]]'], ['[[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][]][]'], ['[[[]][]][][[][]][][[[][]][[]]][]'], ['[[[[]][[]]][[[]][][]]][]'], ['[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]]'], ['[[[][]][][[][]]]][[][]][[[[[]][[[]][[[]][][[[[]]]][[[]]]][][][][[][]]][[[[][]][][[][]]][[[][]][[]]]]][[][[[][]][[]]][]'], ['[[[][]][][[][]]]][[][]][[[[[]][[[]][[[]][][[[[]]]][[[]]]][][][[[[][]][][[][]]][[[][]][[]]][[][]][[]]][]'], ['[[][]][[[]'], ['[[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[][][][][[][]]][[[][]][[]]]'], ['[[][]]]]'], [']][[]][]][[[[[[[]]][[['], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[[]]]][[[[[[][[[[]][[[]]]][[]]]][]'], ['[[[]][]][][[][]][][[[]][]][[]]][]'], ['[[]][[[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][]][][[[[]'], ['[[[]][[[]][][]][[[]]]][][][][][[][]]][[[][]][[]]]'], ['[[[]][[[]]]][[[[[[][[[[]][[[]]]]'], ['[[[[]][[[]]]]]]'], ['[[[][]][][[]][[[][]][[]]]'], ['[[[]][]][][[][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['[[[[]]][[[[]'], ['[[[]][[[]][[[]]]][[[[[[][[[[]][[[]]]][[][]][[[[[]]][[[[]]][][][[][]]][[[][]][[]]]'], [']][[][]][[[[[]]][[[]][[['], ['[[[[]]][[][]][[[[[]]][[[][[[]]]]'], ['[[[][]]][][[][]]][[[][]][[]]]'], ['[[[[[]]][[][]][[[[[[[[][]][][[]][[[]]]][][[[[]][[[]]]][][]][]'], ['[[[[[[][]][][[][]]][[[][]][[]]]]]]][[[[[]'], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[[]]]][[[[[[][[[[]][[[]]]][[[[[[]]][[[[]]]]][]'], ['[[[[]]][[][]][[[[[[[[[[[[]]][[[[]]]]][]'], ['[[[]][[[]][][]][[[]]]][][][][][[][]]][[[]][]][[]]]'], ['[[[[]]][[[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][]'], ['[[[]][[[]][][]][[[][[]]]][[[[[]][][[[[[[]]]][[]]]][][][[]]]]]'], ['[[]]]][[[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][[[[]'], [']][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[]][[['], ['[[[]]][[][]][][[[][]][[]]][[]'], ['[[]][[[]]]]]]'], ['[[[]][][][[[[[[]]]][[]]]][][][[]][]][[[]][][]]'], ['[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]'], ['[[[]][[[]]][][]][[[]]]]][[][]][[[[[]]][[[][][][][[][]]][[[][]][[]]]'], ['[[[[[]]][[][]][[[[[[[[][]][][[]][[[]]]][][[[[]][[[]]]][][[]][]'], ['[[[]][[[]][][]][[[][[]]]][[[[[]][][[]]]][][][[]]]]]'], ['[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]][]][[]]]'], ['[[[[]]][[]]][[][]][[[[[]]][[[]][[[[]][[[[[[[[[[[[]]][[[[]]]]][]'], ['[[[[]]]][][][][[][][]][[[][]][[]]][[[[]]][[]]][[][]][[[[[]]][[[]][[[[]][[[[[[[[[[[[]]][[[[]]]]][]'], ['[[[]]]][[[[[]][[[]][[[]][][]][[[]]]][][][][[][]]][[[[][]][[]]]]]'], ['[[[][]][][[][]]]][[][]][[[[[]][[[]][[[]][][[[[]]]][[[]]]][]['], [']][[]][]][[[[[[[]][[[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][]][][[[[][[[[]]]][][][][[][][]][[[][]][[]]][[]]][[['], ['[[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]][]][[]]]['], ['[[[]][]][][[][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][[][][[][]]][[[][]]][[]]]'], ['][[[]][[[]][][]][[[][[]]]][[[[[]][][[]]]][][][[]]]]]'], [']][[][]][[[[[]][[[]][[[[]][][]][[[]]]][][][][[][]]][[[][]][[]]][['], ['[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]]'], ['[[[]][[[]][][]][[[][[[][][][][[][]]][[[][]][[]]]'], ['[[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]]'], ['[[[[]][[[[[[[[[[[[[]]]]]]]]]]]]]]][][][][[][][]][[[][]][[]]]'], ['[[[]][[[]][][]][[[]]]][][][][[][]]][[[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]]'], ['[[][[[]][][]]'], ['[[[]][[[]]]]][[[[[[][[[[]][[[]]]]'], ['[[]]][[[]]]]]]'], ['[[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]]][]][[]]]['], ['[[[[]]]][][][][[][][]][[[[[]]][[][[]][]][[]]]'], ['[[[]][[[]][][]][[[]]]]][[][]][[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][[[[][[]]][[[]]]]]]]][[[][][][][[][]]][[[][]][[]]]'], ['[[[][]]][[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]][][[][]]][[[][]][[]]]'], ['[[[]]][[[][]]][[]]][[[[]'], ['[[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]]'], ['[[[[]]][[][[[[]]]]][]'], ['[[[[][]]][[[]'], ['[]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[]][[[[]'], ['[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][][]]][[]]]'], ['[[][]][[[[[[]]][[[]][][]][]]]'], ['[[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[]][[]]]'], ['[[[[[]]][[][]][[[[[]]][[[][[[]]]][[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][][]]][[]]]'], ['[[[][[[[]]][[]]][[][]][[[[[]]][[[]][[][[]][[[[[[[[[[[[]]][[[[]]]]][]][[[[[[[]'], ['[[[[[]][[[[]'], [']][[][]][[[[[]][[[][]][][[][]]]][[][]][[[[[]][[[]][[[]][][[[[]]]][[[]]]][][][[[]][[['], [']][[][]][[[[[]][[[]][[[]][][]][[[]]]][][][][[][]]][[[[][]][]]][[[]]]][[[[[[][[[[]][[[]]]][[][]][[[[[]]][[[[[[][]][[]]]]][['], ['[[[]][[[]]]][[[[[[[]]]]'], ['[[[[[]]]]][[[[[]]][]][[[[[]'], [']][[][]][[[[]][[[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][]][][[[[][[[]][[[]][[[[]][][]][[[]]]][][][][[][]]][[[][]][[]]][['], ['[[[]][]][][[][]][][[[]][]][[]]][][[[]]][[[]]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['[[[[[[[]][]][][[][]][][[[]][]][[]]][]]]][[][]][[[[[]]][[[][[[]]]]'], ['[[]]]][[[[[[]][[[]]][[[][]][][[][]]]][[][]][[[[[]][[[]][[[]][][[[[]]]][[[]]]][][][[[[][]][][[][]]][[[][]][[]]][[][]][[]]][]]]][[[]'], ['[[[[]][]][][[][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][[]]'], ['[[[]][[[]][[[]]]][[[[[[][[[[]][[[]]]][[][]][[[[[]]][[[[]]][][][[][]]][[[[][]][[]]]'], ['[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]]'], ['[[[][]][][[][[][]]][[[][]][[]]]]][[][[[][]][[]]][]'], ['[[[[]]]][][[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[[]]]][[[[[[][[[[]][[[]]]][[]]]][][][][[][][]][[[[[]]][[][[]][]][[]]]'], ['[[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[[]]]'], ['[[[[[[[]][[[]][][]][[[]]]][][][][[][]]][[[][]][[]]][]]][[[[[]]][]]][]'], ['[[]][[[[[[[]'], ['[[][[[]][][][[[[[]][[[[]]'], ['[[[][]]][][[][]]][[[][]][[[]][[[[[[[][]]]'], ['[[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]][]][[]]]['], ['][[[]][][]]'], [']][[]][]][[[[[]][[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[][][][][[][]]][[[][]][[]]]][[['], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[[]]]][[[[[[][[[[][[[[][]]][[[]][[[]]]][[[[[[]]][[[[]]]]][]'], ['[]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[]][[[[]'], ['[[][[[][]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[]][[[[]][][]]'], ['[[[]][[[]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['[[[[[][]]][][[][]]][[[][]][[[]][[[[[[[][]]][][]][][[]][[[[][]][[[]]]'], ['[[[[][[[][]]][][[][]]][[[][]][[]]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][]][]'], ['[]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[[[[[]]][[][]][[[[[[[[][]][][[]][[[]]]][][[[[]][[[]]]][][[]][][]][[[[]'], ['[[][]][[[[]]]]'], ['[[][[[[]]]][[[[[[][[[[]][[[]]]]]]]'], ['[[[]][[[]][][]][[[]]]][][][][][[][]]][[[][]][[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]]]]'], ['[]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[[[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]'], ['[[][[[[]]][]'], [']][[[]]]][[[[[[][[[[]][[[]]]][][][]][[[[[]]][[['], ['[[[][]][[]]][[[]][][]]][]'], ['[[[[[]]][]]][[[][]]][[]]][][]]][[]]]'], ['[[[][]][][[]]]][[[]]]][][][[[[][]][][[][]]][[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]][[[][]][[]]][[][]][[]]][]'], [']][[]][]]][[[[[[[]]][[['], [']][[][][][[[[[[[[][]][][[][]]][[[][[]][[]]'], ['[[[]][[[]]]]][[[[[[][[[[]][[[]][[[[[][]][[[[]]]]]'], ['[[]]]][[[[[[[]][[[]][][[]][[[]]]][]][][][][[][]][]][[]]]['], ['[][[[[[[][[[][]][][[][]]][[[][]][[]]]]][[[][[[[]]]][[]]]][][][[]]'], ['[[[]]][[][]][][[[][]][[[[[]][[[]][][]][[[]]]]][[][]][[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][[[[][[]]][[[]]]]]]]][[[][][][][[][]]][[[][]][[]]]]]][[]'], ['[][[]]]][[[[[]'], ['[[]][[[[[][[[][]][[]]][[[]][][]]][]'], ['[[[]][[[]][][]][[[]]]][][][][][[][]]][[[][]][][]]]'], ['[[[[]]]][][][][[][][][][[[][]][[]]]'], ['[[]]][[[]]]]'], ['[[][]][[[[[[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]][]]]'], ['[[][[[[]]]][[[[[[][[[[]]][[[]]]]]]]'], ['[[[]][[[]][][]][[[]]]]][[]][]][[[[[]]]][[[]][[]]]'], ['[[[[[[][]][][[][]]][[[][]][[]]]]]]][[[[[][[]'], ['[[]][][[[][]]][][[][]]][[[][]][[]]]'], ['[[[]][[[]][][]][[[]]]]][[][][][[[[[[[[][]][][[][]]][[[][[]][[]]][[][][][[][]]][[[][]][[]]]'], ['[[][[]]]]'], [']]][[]][]][]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[]][[[[]][[[[[[[]]][[['], ['[[[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]][][]]]]'], ['[]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[][[[]][][]][[[[]][[[]]]][][[]]][[[[[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]'], ['[[][[[]][][][[[[[]][][[[]]'], ['[[][]][[[[[[]]][[[]][][]]][]]]'], ['[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][]][][][]]][[[][]]][[]]]'], ['[[[[]]][[][[[[][]]]][]'], ['[[][[[[]]]]'], ['[[[][]][][[][[][]]][[[][]][[]]]]][[][[[][]]][[]]][]'], [']][[]]]][[['], ['[[]][[][][][[[[[[[[][]][][[][]]][[[][[]][[]][[[]][[[[]'], ['[[[]][[[[]]][[]]][[][]][[[[[]]][[[]][[[[]][[[[[[[[[[[[]]][[[[]]]]][][[[]][][]][[[]]]]][[][]][[[[[]]][[[][][][][[][]]][[[][]][[]]]'], ['[[[]]][[[][[[]]][[[[]'], ['[]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]]]][[[[][[]]][[[[[[[]]][[][]][[[[[[[[[][]][][[]][[[]]]][][[[[]][[[]]]][][[]][][]][[[[]'], ['[[]]]][[[[]][[][]][[[[[[[[][]][][[][]]][[[][[]][[]]][[]'], ['[[[[]][]][][[][]][][[[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][[][][[][]]][[[][]]][[]]]]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[[[[[]]][[][]][[][]][][[]][[[]]]][][[[[]][[[]]]][][[]][][]][[[[]'], ['[[[][]][][[][]]]][[][]][[[[[]][[[]][[[]][][[[[]]]][[[]]]][][][[[[][]][][[][]]][[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]]][]][[]]][[[[][]][[]]][[][]][[]]][]'], ['[[[]][[[]]][][]][[[]]]][][][][[][]]][[][]][[[][[[][]]][[]]]'], ['[]][[]][]][[[[[[]]][[[[[[]]][[[]'], ['[[[]][[[]]]][[[]]]'], [']][[[]]][[][]][][[[][]][[]]][[][[['], ['[[]]][[[]]'], ['[[][[[[[[[][]]'], [']][[]][]][[]]][[['], ['[[[]][[[]][][]][[[][[[][][][][[][]]][[[][]][[]]'], ['[[[][[[[]][[[]]]]'], ['[[[[[]]][[][]][[[[[]]][[[][[[]]]][[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][][[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][][]]][[]]]'], ['[[[[][][[[]]]]]]]'], ['[[[][]]][][[][]]][[[][]][[[]][[[[[[[[][]]]'], [']]][[]][]][]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][][[]][[[[]][[[[[[[]]][[['], ['[[[[]][[[[[[[[[[[[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]][]]]]]]]]]]]]]]][][][][[][][]][[[][]][[]]]'], ['[[][[[[]]]][[[[[[][[[]]][[[]]][[[]]]]]][[]]]]]]]]'], ['[[[[]]]][][][][[][][]][[[][]][[[][]]][[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]][][[][]]][[[][]][[]]][[]]]'], ['[[]]][[[]][][[[][[[]][][][[[[[]][[[[]]]]'], ['[[[]][[[]][][]][[[]]]][][][][[][]]][[[][[[[][[[][]][][[][]]][[[][]][[]]]]][[[][]]]'], ['[[[]][]][[[[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]][]][[]]][[[[]'], ['[[[[]]][[][][[[]][[[]]][][]][[[]]]]][[][]][[[[[]]][[[][][][][[][]]][[[][]][[]]]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][]'], ['[[[[]]][[][[[[][]][[[[]]][[][[[[]]]]][]]][]'], ['[[[][[]]][][[][]]][[[][]][[]]]'], ['[[[[[]]][]]][[[][]]][[]]]][][]]][[]]]'], ['[[]]]][[[[]][[][]][[[[[[[[][]][][[][[[]][[[]]]][[[]]][]]][[[]]][[]'], ['[[][]][[[[[[]]][[[]][][]]][]]][[][[[[]]]][[[[[[][[[[]]][[[]]]]]]]'], ['[[[[]][[][]'], ['[[[[]]]][][][][[][]]][[[][]][[[]][[[]]]][[[]]][[]]]'], ['[[]]]][[[[[[[]][[[]][][]][[[]]]][[]][][][][[][]][]][[]]]['], ['[[]]][[[]]]'], ['[[]]][]'], ['[]][[][]]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[[[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]'], ['[[[]][[[[]]][[]]][[][]][[[[[]]][[[]][[[[]][[[[[[[[[[[[]]][[[[]]]]][][[][[]]]][[[]][][]][[[]]]]][[][]][[[[[]]][[[][][][][[][]]][[[][]][[]]]'], [']][[][]][[[[[[[]]][[[][][][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][][]]][[[]][[['], ['[[[][]]][[[][[[[[[]]]][[]]]][[][[[]][[[]][][]][[[][[]]]][[[[[]][][[]]]][][][[]]]]]][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]][][[][]]][[[][]][[]]]'], ['[[[]][[[]]]]][[[[[['], ['[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[[]][[[[[[]]]][][][][[][]]][[[][]][[]]][]]]][[[]]]][]'], ['[[[]][[[]]]]]][[]][]][]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][][[]][[[[]][[[[[[[]]][[[][[[[[[[][[[]][][]]]]]]'], ['[[]][][[[][]]][][[][]]'], ['[[[]][[[]][][]][[[]]]][][][][][[[][]]][[[][]][][]]]'], ['[[[]][[[]]][][]][[]][[[]]]][[[[[[][[[[]][[[]]]][[][]][[[[[]]][[[[][]]][[[]]]'], ['[[[]][[[]][][]][[[][[[]][[[]][][]][[[][[[][][][][[][]]][[[][]][[]]][[[][][][][[][[[]]]][[[[[[[]][[[]][][[]][[[]]]][]][][][][[][]][]][[]]][[[[]][[[]]]]][[[[[[][[[[]][[[]]]]]]][[[][]][[]]'], ['[[][[[]][[[]][][]][[[]]]][][][][][[][]]][[[[][]][[]]]][[[]][][]]'], ['[[]]][[[[[[]][[[]][[[]]]][[[[[[][[[[]][[[]]]][[][]][[[[[]]][[[[]]][][][[][]]][[[[][]][[]]]]]]]]]'], ['[[][]][[[[[[[][[[]]]][[[[[[][[[[]][[[]]]]][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]][]]]'], ['[][[[[[[]]]][[]]]][][][][[]]'], ['[[[[]]]][[[[]][[][]][[[[[[[[][]][][[][[[]][[[]]]][[[]]][]]][[[]]][[]]'], ['[[[]][[[]][][][][][][[][]]'], ['[[[]][]][][][[[][]][[]]][]'], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[[]]]][[[[[[][[[[]][[[[]]]][[[[[[][[[[]][[[]]]][[[[[[]]][[[[]]]]][]'], ['[[[]]]]][[[[[[][[[[]][[[]]]]'], ['[[[[[[[[]]][[][]][[[[[[[[[[[[]]][[[[]]]]][]]][[[]][][]][][[]]]][][][][[][]]][[[][][[[][]][][[][]][][[[][]][[]]][]][[]]][]][[[[[]]]'], ['[[[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]][]]][][[][]]]][[]]]'], [']][[[]]]][[[[[[][[[[][][[[]]]][[][]][[[[[]]][[['], ['[[][]][[[[[[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]][]][[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[]]]][]]'], ['[[[[[[[]]][[[]]]][[[]]][][]][[[]]]][][][][[][]]][[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][][]]][[]]]'], ['[[[]]][[][]][][]][[]'], ['[][[[]]'], ['[[[]][[[[]][[[]][][]][[[]]]][][][][][[[][]]][[[][]][][]]]][][[[][]][[]]][]'], [']]][[]][]][]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[]][[][[]][[[[[[[]]][[['], ['[[[]][[[]][][]][[[]]]][][][][[][]]][[[][[[[][[[][]][][[][]]][[[][]][[]]]]][[[[][[[]][[[]][][]][[[]]]][][][][][[][]]][[[[][]][[]]]][[[]][][]][][]][[[[]]][[][[[[][]]]][]]'], [']][[[]]]][[[[[[][[[[][[[[[]]][[][]][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][]][[[]]]][[][]][[[[[]]][[['], ['[[[]][[[][][[][]]][[[][]]][[]]]'], ['[[[[]]][[][]][[[[[[][]]][[[][[[]]][[[][[[]]]]'], ['[[[][]][][[][]][]]][[]][]][[[[[]][[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[][][][][[][]]][[[][]][[]]]][[[[[[][]][[]]][]'], ['[[[[[[[[]]][[][]][[[[[[[[[[[[]]][[[[]]]]][]]][[[]][][]][][[]]]][][][][[][]]][[[][][[[][]][][[][]][][[[][]][[]]][]][[]]][]][[[[[]]][[]][[[]][][]]'], ['[[[[[]]]]][[[[[]]][]][[[[][]][[[][[[]'], ['[[[[]]]][[[[]][[][]][[[[[[[[][]][][[][[[]][[[]]]]][[[]]][]]][[[]]][[]]'], ['[[[]]]]][[[[[[][[[]][]][][[][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['[[]]][[[[[][]][[[[[[]]][[[]][][]]][]]]]]]]]]'], ['[[[[[]]][[][]][[[[[[[[][]][][[]][[[]]]][][[[[]][][][]][]'], ['[[[]][[[]][][]][[[]]]][][][][][[][]]][[[]'], ['[[[]][[[]][][]][][[[[[[][[[][]][][[][]]][[[][]][[]]]]][[[][[[[]]]][[]]]][][][[]][[[]]]][][][][][[][]]][[[][]][][]]]'], ['[[[]][[[]][][][][[[][[]]]][[[[[]][][[[[[[]]]][[]]]][][][[]]]]]'], [']][[][]][[[[[]][[[]][[[]][][]][[][]]]][][][][[][][]][[[[][]][][[][]]][[[][]][[]]]]][['], ['[[[]]][[][]][[[[[[[]]][[[][][][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][][]]][[[]][[[]]][[[[[[][[[[]][[[]]]]'], ['[[[[[]]][[[]'], ['[[[[[[[[]]][[][]][[[[[[[[[[[[]]][[[[]]][[[]][[[]][][]][[[]]]][][][][][[][]]][[[]]][]]][[[]][][]][][[]]]][][][][[][]]][[[][][[[][]][][[][]][][[[][]][[]]][]][[]]][]][[[[[]]][[]][[[]][][]]'], ['[[]]][[[][[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]][]][[]]][]]]]]'], [']][[[]]]][[[[[[][[[[[]][[[]]]][[][]][[[[[]]][[['], ['[[[[[[]]]][][][][[][][][][[[][]][[]]]][[[[]]][]'], ['[[[]][][][[[[[[]]]][[]]]][][][[]][]][[[]]]'], ['[[][[[]][][][[[[[]]]]'], ['[[[]][[[]][][]][][[[[[[][[[][][[[[]][[[[[[[[[[[[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]][]]]]]]]]]]]]]]][][][][[][][]][[[][]][[]]]][][[][]]][[[][]][[]]][[[[]]]][[]]]][][][[]][[[]]]][][][][][[][]]][[[][]][][]]]'], [']][[][][][[[[[[[[][]][][[][]]][[[][[[[[[[[[[]]][[[]]][[[]]][[[]]]]][[[[[[][[[[]][[[]]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]][]]][][[][]]]][[]]][[]][[]]]['], ['[[[][]][][[][]][]]][[]][]][[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[][][][][[][]]][[[][]][[]]]][[[[[[][]][[]]][]'], ['[[[[]]]]][[[[[[][[[[]][[[]]]][[[[]][[[[]'], ['[[]][][[[][][[][]]'], ['[[[]][[[]]]]][[[][[[][[[[]][[[]]]]'], ['[[[[]][]][][[]][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][[]]'], ['[[[[]]]][][][][[][[]]][[[][]][[]]]'], ['[[[[]][]][][[][]][][[[]][]][]]][][[[]][[[]]][][]][[[]]]][]]][[]]][[]]'], ['[[[]][]][][[][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][[][][[][]]][[[][]]][[[[[]]]]][[[[[]]][]][[[[[][[]]]'], ['[[[]]]]][[[[[[][[[]][]][][[][]][][[[]][]][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['[[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][]]]'], ['[[[[[[[[[]]][[][]][[[[[[[[[[[[]]][[[[]]]]][]]][[[]][][]][][[]]]][][][][[][]]][[[][][[[][]][][[][]][][[[][]]]][]][[]]][]][[[[[]]]'], ['[[[[[[[[]]][[][]][[[[[[[[[[[[]]][[[[]]]]]][]]][[[]][][]][][[]]]][][][][[][]]][[[][][[[][]][][[][]][][][[][]][[]]][]][[]]][]][[[[[]]]'], [']][[][]][[[[[]][[[][[[[]]]][[[]]]][][][[[]][[['], ['[][[[[[[]]]][[]]][][][][][]]'], [']][[][]][[[[[]]][[[[][[[[[[]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][]]]'], ['[[]]][[[][[[]][[[]]]]][[[[[[][[[[]][[[]]]]]]'], ['[[[][]][][[][]]][]][[[]]][[][]][][[[][]][[]]][[][[[[[]][][[[]][[[]]][][]][[[]]]][][][][[][[[[]]][[][]]][[][]][[[][[[][]]][[]]]]][[[][]][[]]][]'], [']][[][]][[[[[[[[][]][][[]]]['], ['[[[][]]][[[][[[[[[]]]][[]]]][[][[[]][[[]][][]][[[][[]]]][[[[[]][][[]]]][][][[]]]]]][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]][][[][]]][[[][]][[[]][[[]]]][[[[[[[]]]][[]]]'], ['[]][[][]]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]][[][]][[[[[[]]][[[]][][]]][]]][[][[[[]]]][[[[[[][[[[]]][[[]]]]]]]][[[[[[[][]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[[]]][[[[[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]'], ['[[][[[[]]]][[[[[[][[[[]][]]][[]][]][]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][][[]][[[[]][[[[[[[]]][[[[[]]]]'], ['[][[[[[[][[[][]][][[][]]][[[][]][[]]]]][[[][[[[]]]][[]]'], ['[[[[][]]]][[[]'], ['[[[]][[[][][[][]][][[[][]]][[]]]'], ['[[]]]][[[[[[]][[[]]][[[][[[][[[[]]][[]]][[][]][[[[[]]][[[]][[][[]][[[[[[[[[[[[]]][[[[]]]]][]][[[[[[[][]][][[][]]]][[][]][[[[[]][[[]][[[]][][[[[]][[][[[[]]]][[[[[[][[[[]]][[[]]]]]]]]][[[]]]][][][[[[][]][][[][]]][[[][]][[]]][[][]][[]]][]]]][[[]'], ['[[][]][[[[[[]]][[[]][][]]][[[][[[]][][][[[[[]]]]]]]'], ['[[[[]]]][][][][[][][]][[[][]][[[][]]][[[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]][][[][]]][[[][]][[]]][[]]]'], ['[[[[]]][[][][][[[[[[[[][]][][[][]]][[[][[[[[[[[[[]]][[[]]][[[]]][[[]]]]][[[[[[][[[[]][[[]]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]][]]][][[][]]]][[]]][[]][[]]]['], ['[[[]]]][[]][[[[[[][[[[[]'], ['[[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]]'], ['[[[[[[]]]][][][][[][][][][[[][]][[]][[[[]]]]][[[[[[][[[[]][[[]]]][[[[]][[[[]]][[[[]]][]'], ['[[[[]][]][][[][]][][[[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][[]]'], ['[[][]]][]]'], ['[[][[[[[[]]]]]'], ['[[[[[[[]]]][[[]]][[[]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]]'], ['[[[[]]][]][[]][]]][[[[[[[]]][[[[][]][[[[[]]][[[][[[]]]]'], ['[[][]][[]][]][[[[[[[]]][[[[]]]'], ['[[[]]]]][[[[[[][[[]][]][][[][]][][[[]][]][[[]][[[]]][][]][[[]]]][][][][[][]]][[[[[[[]]]][][][][[][][]][[[][]][[[][]]][[[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]][][[][]]][[[][]][[]]][[]]]][]]][[]]]'], ['[[][]][[[]]][[][]][[[[[[[]]][[[][][][[[[[[[[][]][][[][[[[[]][[[]]]][][[[[]][[[]]]][][][]]][[[]][[[]]][[[[[[][[[[]][[[]]]][[[[[[]]]'], ['[[[[[[]]][]'], ['[[[[]]][[][[[[]][[[]]]][[[[[[][[[[]][[[]]]]]][[[[[]]][[[][[[]]]]'], ['[[[]][[[]][][]][[[]]]]][[][]][[[[[]]][[[][][][][[][]]][[[]][]][[]]]'], ['[[[][[[[][[[]]]][[[[[]][[[]]]]'], ['[[[[]]][[][[[[][[[][]][][[][]][]]][[]][]][[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[][][][][[][]]][[[][]][[]]]][[[[[[][]][[]]][]]]][]'], ['[[[[[][[[[][[[]]][]]]'], ['[[[[]]][[][]][[[[[[[[[[[[]]][[[[[[[[[[[[[[]]][[[]]][[[]]][][]][[[]][[[]]]]][[[[]][]][][[][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][[]][[[[[[[[[]]]][][][]][[][]]][[[][]]][[]]]][]]][][[][]]]][[]]]]'], ['[[[[[[[]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[[[[[[[]][[]]][[[[[][]][[[[[[]]][[[]][][]]][]]]]]]]]]][[[]]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][][]]][[]]]'], ['[[[[][[[][]][][[][]]][[[][]][[]]]]]][[[]'], [']][[]][]][[]]][[[]][[[['], ['[[[[][[[][]][[][[[[]]]][[[[[[][[[[]]][[[]]]]]]]]]]]][[[]'], ['[[][[[[[[]]]]]][[]]]][[][]][[[[[[[[][]][[][[][]]][[[][]][[]]][[]][][]]'], ['[[[][][[[]][][]][[[]]]]][[][]][[[[[]]]][[[]][[]]]'], ['[[[]][][][][][[][]]][[[][]]][[]]]'], ['[[][[[[]]]][[[[[[][[[[]][]]][[]][]][]][[][]][[[[[[[]]][[[][]][[[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][][[]][[[[]][[[[[[[]]][[[[[]]]][[[[]]][[][[[[]]]]][]'], ['[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]][]][[[[[[]]][[][[[[][[[][]][][[][]][]]][[]][]][[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[][][][][[][]]][[[][]][[]]]][[[[[[][]][[]]][]]]][]]'], [']][[[][[[[[]]][[][]][[[[[[[[][]][][[]][[[]]]][][[[[]][[[]]]][][[]][]]]][[[[[[][[[[][][[[]]]][[][]][[[[[]]][[['], ['[[[][]][][[][]]]][[][]][[[[[]][[[]][[[][[]]][[[][[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]][]][[]]][]]]]]][][[[[]]]][[[]]]][][][[[[][]][][[][]]][[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]]][]][[]]][[[[][]][[]]][[][]][[]]][]'], ['[[[]]][[[[][[[[]]]][[[[[[][[[[]]][[[]]]]]]]][[[]]][[[[]'], ['[[[]][[[[[]][[[]]]]]][[]][][]][[[]]]][][][][][[][]]][[[]'], ['[[[[]][]][][[][]][][[[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][[][][[][]]][[[][]]][[]]]]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][][[]]]][][[]]][[[[[[[]]][[][]][[][]][][[]][[[]]]][][[[[]][[[]]]][][[]][][]][[[[]'], ['[[]][[[[[[[][[[][][[[]][][]][[[]]]]][[][]][[[[[]]]][[[]][[]]]'], ['[[[[[]]][]]][][][]]][[]]]'], ['[][[[]]][[[]'], [']][[][][[[[[][[[][]]][][[][]]][[[][]][[]]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][]][][[[][[]][[]]]['], ['[[[]][[[]][][]][[[]]]]][][][][][[][]]][[[]][]][[]]]'], ['[[]]][[[]]]]]'], [']][[[][[[[[[]][]][][[][]][][[[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][[][][[][]]][[[][]]][[]]]]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[[[[[]]][[][]][[][]][][[]][[[]]]][][[[[]][[[]]]][][[]][][]][[[[][[]]][[['], ['[[][][[]]][[[]]][[[[[]]]'], ['[[[]][[[]][[[]]]][[[[[[][[[[[[]][[[]]]][[[[[[][[[[]][[[]]]][]][[[]]]][[][]][[[[[]]][[[[]]][][][[][]]][[[][]][[]]]'], ['[[[][[[[]][[[[][[[[]][[[]]]][[]]]]'], ['[[]]][[[]]]]][[]]]][[[[[[[]][[[]][][]][[[]]]][[]][][][][[][]][]][[]]]['], ['[[[]]][[][]][][[[[[[[[[[]]][[][]][[[[[[[[[[[[]]][[[[]]]]]][]]][[[]][][]][][[]]]][][][[[]]][[[]]]]][[]]]][[[[[[[]][[[]][][]][[[]]]][[]][][][][[][]][]][[]]][][[][]]][[[][][[[][]][][[][]][][][[][]][[]]][]][[]]][]][[[[[]]][][]][[]]][[]'], ['[[[[[[[[]]]][[[]]][[[]]][][]][[[]]]][][][]][[][]]][[[][]]][[]]]]'], ['[[][]][[[[[[]]][[[]][][]]][[[][[[]][][][[[][[]]]]]]]'], ['[[[]][[[[[[[]'], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[[]]]][[[[[[][[[[][[[[][]]][[[]][[[]]]][[[[[[]]]]][]'], ['[[[]]][[[][]]][[]]][[[[]]'], ['[[[[[][[[]][][]]][]][][[]][[[][]][[]]]'], ['[[[]][[[]][][]][[[]]]][][][][][[][]]][[[]]][]][[]]]'], [']][[[]]][[][]][][[]][[]][]][[]]][[[[][]][[]]][[][[['], ['[[]][[][][][[[[[[[[][]][][[][]]][[[][[]][][]][[[]][[[[]'], ['[[[]][[[][][[][]][][[[][]]][[[[]][[[]][][]][[[]]]][][][][][[][]]][[[][]]]'], ['[[[]][[[]][][]][[[]]]][][][][[][]]][[[][[[[][[[][]][][[][]]][[[][]][[]]]]][[[[][[[]][[[]][][]][[[]]]][][]][[]][]]][[[[[[[]]][[[][][][[][]]][[[[][]][[]]]][[[]][][]][][]][[[[]]][[][[[[][]]]][]]'], [']]][[][]][[[[[]]][[['], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]]]][[[[[[][[[[]][[[[]]]][[[[[[][[[]][]][][[][]][][[[]][]][[]]][][[[]][[[]]][][]][[[]]]][][[][][[][]]][[[][]]][[]]][[[[]][[[]]]][[[[[[]]][[[[]]]]][]'], ['[[[]][[[]]]]][[[[[[][[[[]][[[][][[[[[][]][[[[]]]]]'], ['[[[]][[[[]]][[]]][[][]][[[[[]]][[[]][[[[]][[[[[[[[[[[[]]][[[[]]]]][][[][[]]]][[[]][][]][[[]]]]][[][]][[[[[]]][[[][][[[[][]]][[[][[[[[[]]]][[]]]][[][[[]][[[]][][]][[[][[]]]][[[[[]][][[]]]][][][[]]]]]][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][][]][[[[[[]]][][[][]]][[[][]][[]]]][][[][]]][[[][]][[]]]'], ['[[]]][[[[[[][[[[][[[]]][]]][[]]]]'], ['[[[][]][][[][]]]][[][]][[[[[]][[[]][[[][[]]][[[][[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]][]][[]]][]]]]]][][[[[]]]][[[]]]][][][[[[][]][][[[][]]][[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]]][[[]]][]][[]]][[[[][]][[]]][[][]][[]]][]'], ['[[[]][]][][[][]][][[[]][]][[]]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]]'], ['[[][]][[[]]][[][]][[[[[[[]]][[[]][[][[[[[[]][[[]]][[[[[[][[[[]][[[]]]][[[[[[]]]'], ['[[[[]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]]][[[]][][[[[]][[[]]]][]'], ['[[[[]]][[][]][[[[[[[[[[[[]]][[[[[[[[[[[[[[]]][[[]]][[[]]][][]][[[]][[[]]]]][[[[]][]][][[][]][][[[]][]]][[]]][][[[]][[[]]][][]][[[]]]][][][][[][]]][[[][]]][[]]][[]][[[[[[[[[]]][[]]]][[[[[[[]][[[]][][]][[[]]]][]][][][][[][]][]][[]]][][][][]][[][]]][[[][]]][[]]]][]]][][[][]]]][[]]]]'], ['[[[]][[[]][][]][[[]]]]][][][][][[][]]][[[[[]]][][[[]][]][[]]]'], ['[[][]][[[[[[][]][[[]][][]][]]]'], ['][][[][]]][[[][]][[]]][['], ['[[]]][[[[[][]][[[[[[[[[][]][][[]]]][[[]]]][][][[[[][]][][[][]]][[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][[]][][]][[[][]][[]]][[][]][[]]][]]]][[[]][][]]][]]]]]]]]]'], ['[[][]][[[[][[[[[[]]][]]]'], ['[[[]][[[]][][]][[[]]]][][][][[][]]][[[][[[[][[[][]][][[][]]][[[][]][[]]]]][[[[][[[]][[[]][][]][[[]]]][]][][[][]]][[[[][]][[]]]][[[]][][]][][]][[[[]]][[][[[[][]]]][]]'], ['[[[[[][]][][][]][]'], ['[[[]][[[][]][[[[[]]][[][][[][]]][[[][]]][[]]]'], ['[]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][][]][][[]][[[]]]][][[[[]][[[]]]][][[]][][]][[[[]'], ['[]][]][[][]][[[[[[[[][]][][[][]]][[[][[]][[]]][[][]]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]]][[[[[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]'], ['[[]]]][[[[]][[][]][[[[[[[[[[]]]][[[[][]][][[][]]][[[][[]][[]]][[]'], ['[[[[]][[]][[]][]][[[[[[[]][[[[[[]]][[][]][[[[[[[[]]][[][[[[][[[][]][][[][]][]]][[]][]][[[]][[[]][][]][[[]]]]][[][]][[[[[]]]][[[][][][][[][]]][[[][]][[]]]][[[[[[][]][[]]][]]]][][]][[[]]]][][[[[]][[[[[[[[[]]][[[]]][[[]]][][]][[[]]]][[][][]][[][]]][[[][]]][[]]]][]][[[[]]][[][[[[][]][[[[]]][[][[[[]]]]][]]][]]][][]][][[[[][[[[]]]][][][][[][][]][[[][]][[]]][[]]][[[[]][][]][[[]]]][][][][[][]]][[[][]][[]]][]][[[[[]]]'], ['[[[[[][]][]][[][][][[[[[[[[][]][][[][]]][[[][[]][[]][]]]]'], ['[[[][]][][[][[][]]][[[[]][[][]]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[]][[][]][[[[[[]]][[[]][][]]][]]][[][[[[]]]][[[[[[][[[[]]][[[]]]]]]]][[[[[[[][]][[][]][[[[[[[][]][][[]][[[[[]][[[]]]][][[[[]][[[]]]][][[[]]][[[[[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]]][[][]][[[[[[[[[]][[[]]]][][[]][][]][[[[]][]][[]]]]][[][[[][]]][[]]][]'], ['[[[[]]][]][[]][[[[[]]]][][][][[][]]][[[][]][[[]][[[]]]][[[]]][[]]]]]][[[[[[[]]][[[[][]][[[[[]]][[[][[[]]]]'], ['[[][[[[[[]]]]][[]]]][[][]][[[[[[[[][]][][[][]]][[[][]][[]]][[]][][]][[[]][[[]][[[]]]][[[[[[][[[[[[]][[[]]]][[[[[[][[[[]][[[]]]][]][[[]]]][[][]][[[[[]]][[[[]]][][][[][]]][[[][]][[]]]'], ['[[[]][[[]][][]][[[[][][][[][]]][[[]][]][[]]]'], ['[[][]][[[[[[[][[[[[[]]]][[][]]][[][]][[[[[[[][]][][[][][[[[[[]]]][[]]][][][][][]][]]][[[][[]][][]][]]]'], ['[[[[]]][[[[[[[]]]][[[[]][[][]][[[[[[[[][]][][[][[[]][[[]]]][[[]]][]]][[[]]][[]]]']]\n    results = [True, False, False, False, True, False, True, False, False, True, True, False, False, False, True, True, False, False, False, True, True, True, False, True, False, False, True, True, False, True, True, True, True, True, True, True, False, False, False, True, True, True, True, True, False, True, False, False, False, True, False, True, True, True, True, False, False, True, True, True, False, True, True, True, True, True, False, True, True, False, False, True, True, True, True, False, True, True, True, True, False, True, True, True, True, True, True, True, True, True, False, True, True, True, False, False, True, True, True, True, True, True, True, False, True, True, True, True, False, True, True, True, True, True, True, True, True, True, False, True, True, True, True, False, True, True, True, True, False, True, False, True, True, True, True, True, False, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, False, True, False, True, False, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, False, True, False, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, False, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, False, False, False, False, False, False, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/133", "prompt": "\n\ndef sum_squares(lst):\n    \n\n    import math\n    return sum(map(lambda x: math.ceil(x) ** 2, lst))\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\n\ndef sum_squares(lst):\n    \n\n    import math\n    return sum(map(lambda x: math.ceil(x) ** 2, lst))\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\n\ndef sum_squares(lst):\n    \n\n    import math\n    return sum(map(lambda x: math.ceil(x) ** 2, lst))\n\n", "raw_modification": "```python\n<code_start>\ndef sum_squares(lst):\n    import math\n    # Introduce unnecessary variable assignments\n    total = 0\n    for i in range(len(lst)):\n        # Use an intermediate list to store results\n        intermediate = []\n        for j in range(len(lst)):\n            if i == j:\n                # Use a redundant function call\n                ceil_value = math.ceil(lst[j])\n                # Append to intermediate list\n                intermediate.append(ceil_value ** 2)\n        # Sum the intermediate list\n        for value in intermediate:\n            total += value\n    return total\n<code_end>\n```", "modification": "\ndef sum_squares(lst):\n    import math\n    \n    total = 0\n    for i in range(len(lst)):\n        \n        intermediate = []\n        for j in range(len(lst)):\n            if i == j:\n                \n                ceil_value = math.ceil(lst[j])\n                \n                intermediate.append(ceil_value ** 2)\n        \n        for value in intermediate:\n            total += value\n    return total\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 2, 3]], [[1.0, 2, 3]], [[1, 3, 5, 7]], [[1.4, 4.2, 0]], [[-2.4, 1, 1]], [[100, 1, 15, 2]], [[10000, 10000]], [[-1.4, 4.6, 6.3]], [[-1.4, 17.9, 18.9, 19.9]], [[0]], [[-1]], [[-1, 1, 0]], [[-3, 4, 5, 6, 7]], [[2, 3, 4, -5]], [[0, 3.3, 7.7, -2.2]], [[10, 20, 30, 40]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[0, 0, 0]], [[-1, -2, -3]], [[1.1, 2.5, 3.7]], [[-2.9, -2.5, -1.1]], [[0.1, 0.5, 0.9]], [[2, 3, 2, 4, -5]], [[1.1, 2.535790961084111, 3.7]], [[1.1, 2.5, 3.7, 1.1]], [[0.5, 0.9]], [[1, 2, 0, 4, 5, 6, 7, 8, 9, 10]], [[3, 4, -5]], [[0.1, 0.5, 0.9, 0.5]], [[-2.9, -2.5]], [[10, 20, 30, 40, 10]], [[-2.9, -2.5, -1.1, -1.1]], [[10, 3, 10, 2, 4, -5, 4]], [[1, 2, 0, 6, 5, 6, 7, 8, 9, 10]], [[2, 3, 2, 9, 4, -5]], [[2, 3, 2, 4, -5, -5]], [[1, 2, 0, 6, 5, 7, 8, 9, 10]], [[1.3807739357525621, 0.5, 0.9]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2]], [[-1, -2, -3, -1, -1]], [[10, 3, 10, 2, 4, -5, 4, 4]], [[0.5, 3.3, 0.5651200929607817]], [[1.1964179356010927, 2.5, 3.7, 1.1]], [[1.3807739357525621, 0.5, 0.9, 0.5]], [[30, 10, 20, 30, 40, 10]], [[-3, 4, 5, 6, 7, 4]], [[1, 2, 0, 5, 6, 7, 8, 9, 10]], [[-5, 20, 30, 40, 10, 10]], [[0, -2, -2]], [[2, 3, 4]], [[-0.0395412918863951, 1.3807739357525621, 0.5, 0.5]], [[0, 0, 0, 0]], [[-1, -2, 30, -1]], [[-3, 8, 4, 5, 6, 7]], [[-5, 20, 30, 10, 10, 10, 10, 10]], [[1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10]], [[-5, 20, 30, 9, 10, 10, 10, 10, 10]], [[1, 2, 0, 6, 5, 6, 7, 8, 9, 10, 6]], [[2, 4, -5]], [[-2, 30, 10, 20, 30, 40, 10]], [[1.1, 2.535790961084111, 3.7, 1.1]], [[1.3807739357525621, 0.5, 0.9, 0.5, 0.9]], [[-2, 30, -1]], [[40, -2, -2, 30, -1, 30, -1]], [[40, -2, -2, 30, -1, -3, -1]], [[-2.5, -1.1, -1.1]], [[40, -2, -2, 30, -1, 30, -1, -2]], [[2, 3, 2, 4, -5, -5, 2]], [[1, 4, 2, 0, 6, 5, 7, 8, 9, 10]], [[0, -2]], [[-2, 4, 5, 5, 6, 7, 5]], [[10, 20, 30, 7, 10]], [[-3, 8, 4, 5, 7, 6, 7]], [[1.3807739357525621, 0.5, 0.9, 3.3, 0.5, 0.5]], [[-1, -2, -3, -1, -1, -1]], [[-2.5, 0.5, 1.3122633441453049, -1.1, -1.820012478772272, -1.1, -2.5]], [[-2.5, -1.1]], [[1.1964179356010927, 2.5, 3.7, 1.1, 2.5]], [[2, 4, 2, 4, -5, -4, 2]], [[2.535790961084111, -0.0395412918863951, 2.535790961084111]], [[1, 2, 0, 10, 5, 6, 7, 8, 9, 10, 8, 10]], [[-4, 2, 4, -5, 2]], [[1.1964179356010927]], [[-4, 4, 2, 4, -5, -4, 2]], [[-2, -2, 30, -1, -1]], [[0, -2, -1]], [[1, 4, 2, 0, 6, 5, 7, 8, 9, 10, 7]], [[40, -2, -2, 30, 5, 30, -1, -2]], [[1, 4, -5]], [[4]], [[4, -3, 8, 4, 5, 7, 6, 7, 6]], [[-3, 8, 4, 5, 6, 7, 4]], [[10, 20, 30, 40, 10, 40]], [[1.3807739357525621, 0.13158576006729072, 0.9]], [[10, 9, 20, 30, 7, 10]], [[2, 3, 1, -5, 2, 4, -5]], [[2, 3, 2, -5, 4, -5, -5, 2]], [[1, 4, 2, 0, 6, 1, 5, 7, 8, 9, 10, 7]], [[10, 20, 30, 4, 10, 40]], [[-2.9, -1.1]], [[2, 0, 1, -5, 2, 4, -5]], [[2, 3, -5, -5]], [[-2, -2, 30, -1, -3, -1]], [[0, 0, 6, 0]], [[0, 0, 6, 5, 0]], [[-5, 9, 20, 30, 10, 10, 10, 10]], [[10, 4, 3, 10, 2, 4, -5, 4]], [[1.3807739357525621, 0.5, 0.5]], [[-1, 40, -2, -3, -1, -1]], [[-3, -5, 4, 5, 6, 7]], [[-5, 20, 30, 8, 10, 10, 10, 10]], [[1, 2, 0, 5, 6, 7, 8, 9, 10, 9]], [[1, 2, 3.4, -4.6, 5.1, 6]], [[1.1, 2.5, -3.7, -4.6, 5.2, 6]], [[-1.1, 2.5, -3.7, 4.6, 5.1, 6]], [[1, 2, -3.4, -4.6, -5.1, -6]], [[1.1, 2.5, -3.7, -4.6, -5.2, -6]], [[3.14, -8.09, 2.71, 0.69, 1.62, -9.99, 6.28, -14.04]], [[0.1, 1.5, 2.9, 3.2, 4.6, 5.1, 6.7]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 7.1, -6.5]], [[0.1, 1.5, 2.9, 3.2, 4.234081562814888, 6.851261387881998, 6.7]], [[1.1, 2.5, -3.7, -4.6, -2.8396588982482287, 5.2, 6]], [[1, 4, 3.4, 5.1, 6]], [[1.1, 2.5, -3.7, -4.716809497407311, 5, 5.2, 6]], [[-6, 1, 2, -3.4, -4.6, -5.1, -6]], [[0.1, 2.71, 3.2, 4.6, 5.1, 6.7, 6.7]], [[1, 2, -3.4, -5.1, -6]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7]], [[1.1, 2.5, -3.7, -4.716809497407311, 5, -6.5, 6]], [[1.1, 2.5, -3.7, -4.716809497407311, 5, -6.5, 6, 1.1]], [[4.5, 0.1, 1.5, 2.9, 3.2, 4.234081562814888, 6.851261387881998, 6.7]], [[0.1, 1.5, -4.716809497407311, 2.9, 3.2, 4.967726321372912, 4.6, 5.1, 6.7]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, -6.5, 7, 1.1]], [[1, 4, 3.4, 6]], [[1.1, 2.5, -3.7, -5.2, -6]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 4.234081562814888, 1.5]], [[6.28, 1.566848906209739, -3.7, 4.6, 5.1, 6]], [[0.1, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 6.7]], [[1, 2, 3.4, -4.6, 5.1, 6, 6]], [[0.1, 1.5, 2.9, 3.2, 4.234081562814888, 3.729477873601854, 6.7]], [[0.1, 5.5, 2.71, 3.2, 4.6, 5.1, 6.7, 6.7]], [[0.1, 1.5, -2.8396588982482287, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7]], [[1.1, 2.5, -3.7, -4.716809497407311, -6.5, 6, 1.1]], [[1.1, 2.5, -3.7, -4.6, -4.141299863600741, -6]], [[0.1, 5.5, 2.71, 3.2, 4.6, 5.1, 6.7, 6.7, 2.71]], [[1, -5, 2, -3.4, -2.7, -3.2596671445918055, -6]], [[0.1, 1.5, 3.890157601890744, 3.2, 4.6, 5.1, 6.7]], [[-1.1, 2.5, -3.7, 4.6, 5.1, 6, 5.1, 6]], [[0.1, 5.5, 6.851261387881998, 3.2, 4.6, 2.4936669865395658, 5.1, 6.7, 6.7]], [[1, 4, 3.4, 5.1]], [[1.1, 2.5, -3.7, -4.6, -4.276874536373084, -5.2, -9.99, -6]], [[3.14, -8.09, 2.71, 0.69, 1.62, -9.99, 6.28]], [[2, 4, 3.4, 5.1, 6]], [[0.1, 1.5, 2.9, 3.2, 4.6, 5.1, 3.890157601890744]], [[1.1, 2.5, -4.6, 5.2, 6, 5.2]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, -6.5, 1.1]], [[0.1, 2.230942080154173, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7]], [[1, -5, 2, -3.4, -2.7, -3.2596671445918055, 0, -6]], [[0.052289320520992534, 0.1, 1.5, 3.890157601890744, 3.2, 4.6, 5.1, 6.7]], [[0.1, 1.5, -4.716809497407311, 2.9, 2.9915540201886883, 4.967726321372912, 4.6, 5.1, 6.7]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 6.7]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, -6.5, 1.1, 1.1]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 3.5]], [[0.1, 5.5, -3.7, 3.2, 4.6, 5.1, 6.7, 6.7]], [[0.1, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 6.7, 4.234081562814888]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 4.234081562814888, 1.5, 2.4936669865395658]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 7.1, 1.5, 2.4936669865395658]], [[-1.1, 2.5, -3.7, -4.6, -2.8396588982482287, 5.2, 6]], [[1, 2, -3.4, -4.6, -6, -5.1, -6, -4.6, -4.6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 0, 1]], [[1.1, 2.5, 2.4, -5.2, -6]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 7.4145549533273405, 6.7]], [[6.28, -5.1, 1.566848906209739, -3.7, 4.6, 5.1, 6]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.6]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.6]], [[-6, 1, 2, -4.6, -5.1, -6]], [[0.1, 1.5, 2.9, 4.234081562814888, 6.851261387881998, 6.7, 2.9]], [[0.1, 1.5, 1.1, 3.0179751175777536, 4.234081562814888, 6.851261387881998, 6.7, 4.234081562814888, 4.234081562814888, 6.7]], [[4.164996313633066, 1, 4, 3.4, 5.1, 6, 3.4, 4]], [[0.061283494508126014, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 8.634480834505068, 6.7, 4.234081562814888]], [[0.1, 1.5, 2.9, 3.975992715202202, 6.851261387881998, 6.7, 2.9, 2.9]], [[-0.6763327164350088, 2.5, -3.7, -4.6, -2.8396588982482287, 6]], [[4.234081562814888, 0.1, 5.5, -3.7, 3.2, 4.6, 5.1, 6.7, 6.7, 6.7]], [[0.1, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 3.975992715202202, 4.6]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 2.230942080154173, 4.234081562814888, 1.5, 2.4936669865395658]], [[0.061283494508126014, 2.5, -3.7, 4.6, 5.1, 6]], [[0.1, 1.5, 2.9, 3.499530218204873, 3.975992715202202, 6.851261387881998, 6.7, 2.9, 2.9]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 6.7, 4.6]], [[0.1, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 6.851261387881998, 6.7, 2.9, 2.9]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 2.230942080154173, 4.234081562814888, 1.5, 2.4936669865395658, 4.234081562814888]], [[8.634480834505068, 1, -5, 2, -3.4, -3.2512040012099304, -3.2596671445918055, -6, -3.2512040012099304]], [[1, 2, 3.4, -4.6, 5.1, 6, 6, 6]], [[0.1, 5.5, 2.71, 3.2, 4.6, 5.1, 9.283640269180903, 6.7]], [[2.4, 4.2, 0, -1.5, -2.5091429749847305, 3.6, 7.1, -6.5]], [[-1.1, -3.7, -4.6, -2.8396588982482287, 5.2, 6]], [[-1.5, -3.7, 4.6, 5.1, -1.5, 6]], [[-1.1, 2.5, -3.7, 4.6, 5.147008615293544, 6, 5.1, 6]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 3.975992715202202, 6.7, 2.230942080154173, 4.234081562814888, 1.5, 2.4936669865395658, 4.234081562814888]], [[2, -3.4, -4.6, -6, -5.1, -6, -4.6, -4.6]], [[-1.1, -3.7, -4.6, -2.8396588982482287, 5.2, 6, -4.6]], [[-3.2596671445918055, 0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 7.4145549533273405, 6.7]], [[4.5, 2.034150193392351, 0.1, 1.5, 2.9, 3.2, 4.234081562814888, 3.499530218204873, 6.7]], [[1, 1, 2, -3.4, 9.283640269180903, -3.2596671445918055, -6]], [[4, 3.4, 5.1, 6, 2]], [[1, 2, -3.4, -4.6, -5.1, -6, 2]], [[1.1, 2.5, -3.7, -4.6, 6]], [[4.5, 0.3244010923433097, 1.5, 2.9, 3.2, 4.234081562814888, 6.851261387881998, 6.7]], [[-1.1, 2.5, -3.7, 4.6, 5.147008615293544, 6, 5.1, 6, 2.5]], [[4, 3.4, 4.129563514953585, 6, 2]], [[2, -3.4, -4.6, -5.1, -6]], [[2, -3.4, -4.6, -6, 3, -5.1, -6, -4.6, -4.6]], [[1.1, 2.5, -3.7, -4.6, 5.2, 6, 1.1]], [[0.1, -14.04, 5.5, 2.71, 3.2, 4.6, 5.1, 9.283640269180903, 6.7]], [[1, -5, 2, -3.4, -2.7, -3.2596671445918055, 0, -6, 2, 2]], [[1, -3, 2, -3.4, -4.6, 0, -5.1, -6, 2]], [[2.5, -3.7, 4.234081562814888, -4.716809497407311, 5, -6.5, 1.1]], [[-1.1, -3.7, 2.034150193392351, -4.6, -2.8396588982482287, 5.2, 6]], [[1.1, 2.5, -3.7, -4.6, -4, -5.2, -4.09005682631597, -6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 1, 3.5, 4, 4.5, 5, -2.5, 2.5]], [[-1.1, 3.4, 2.034150193392351, -4.6, -2.8396588982482287, 5.2]], [[-1.1, 2.5, -3.7, 4.6, 5.147008615293544, 5.1, 6]], [[3, 3.4, 4.129563514953585, 6, 2]], [[2, -3.4, -6.773948579844583, -6, -5.1, -6, -4.6, -2.98440779706064, -6.773948579844583]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 4.6]], [[3.14, -8.09, 2.71, 0.69, 1.62, -9.99, 6.28, 1.62, -8.09]], [[4.234081562814888, 0.1, 5.5, -3.7, 3.2, 4.6, 5.1, 6.7, 6.7, 6.7, 5.5]], [[0.1, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 6.7, 3.2]], [[1.1, 2.5, -3.7, 5, -6.5, 6, 1.1]], [[1, -4, -3.4, -4.6, -5.1, -6]], [[3.14, 2.71, 0.69, 1.62, -9.99, 3.5, -14.04]], [[1, 4, 3.4, 5.1, 3.4]], [[0.061283494508126014, 1.5, 1.1, 3.2, 6.851261387881998, 8.634480834505068, 6.7, 4.234081562814888, 6.851261387881998]], [[0.1, 1.5, 2.9, -6.5, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 4.487285882920272, 1.5]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, 1.5483316324617946, -4.716809497407311, 5, -6.5, 1.1, 4, 1.1]], [[1, -1, 2, 3.4, -8.09, -4.6, 5.1, 6, 6, 5.1]], [[6.28, 1.566848906209739, -3.7, 4.6, 5.1, 6, -3.7]], [[-5, 2, -3.4, -2.7, -3.2596671445918055, -6]], [[1, -1, 3, 3.4, -8.09, -4.6, 5.1, 6, 6, 5.1]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, 4.164996313633066, 1.1, 1.1]], [[2.5, -3.7, 4.234081562814888, -4.716809497407311, 5, -6.5, 3.890157601890744]], [[1.1, 2.5, -3.7, -4.6, 3.5, -6]], [[0.1, 5.5, 2.71, 3.2, 4.6, 5.1, 6.7]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 7.4145549533273405, 6.7, 6.7]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.6, 4.967726321372912]], [[1.1, 2.5, 6, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, -6.5, 1.1, 1.1]], [[1, 3.4, 2.7894813137255015, 5.1, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 2.964251544523867, 4, 4.5, 5, 0, 1, 0]], [[1, 4, -5, 2, -3.4, -2.7, -3.2596671445918055, 0]], [[1, 3.4, -4.6, 5.1, 6, 6, 6, -4.6]], [[2.5, -3.7, 4.234081562814888, -4.716809497407311, 5, -6.5, 1.1, 4.234081562814888]], [[4.164996313633066, 1, 4, 3.4, 6.851261387881998, 5.1, 6, 3.4, 4, 6, 1]], [[1, -5, -3.4, -2.7, -3.2596671445918055, 0, -6]], [[-6, -4.819527226651202, 1, 2, -3.4, -4.6, -5.1, -6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 4]], [[1.1, 2.5, -3.7, -4.6, -5.2, -6, -5.2]], [[1.1, 2.5, -3.7, -5.2, -6, -6]], [[0.1, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 6.7, -2.5091429749847305]], [[4.234081562814888, 0.1, 4.715583291999385, -3.7, 3.2, -3.3629337697813977, 4.6, 5.1, 6.7, 6.7]], [[4.5, 2.034150193392351, 0.1, 1.5, 2.9, 3.2, 3.287852215132159, 3.499530218204873, 6.7]], [[4, 2, -3.4, -4.6, -5.1, -6, 2]], [[-6, 1, 2, -3.4, -4.6, -5.1115162115352]], [[-6, 1, 2, -3.4, 0.5, -5.1, -6]], [[0.1, 1.5, 3.890157601890744, 3.2, 3.0021567711294432, 5.1, 6.7]], [[1.1, 2.5, -4.6, 0.6212597321029525, 5.2, 6, 5.2, 1.1]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 5.1, 4.6]], [[-1.1, 2.5, -3.7, 4.6, 5.147008615293544, 6, 5.1, 6, 4.6]], [[0.1, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 6.851261387881998, 6.7, 2.9, 2.9, 6.851261387881998]], [[0.1, 6.409972729146418, 6.851261387881998, 3.2, 4.6, 2.4936669865395658, 3.287852215132159, 6.7, 6.7]], [[0.1, 1.840256743666684, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 6.7, 3.2]], [[3.14, -8.09, 2.71, 0.69, 1.5224939717635053, -9.99, 6.28, 1.62, -8.09]], [[3, 3.4, 6, 2]], [[1.1, 2.5, -4.716809497407311, 5, -6.5, 6, 1.1]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, 4.164996313633066, 1.1, 1.1, 1.1]], [[-4.1487020521034745, 0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 7.4145549533273405, 6.7]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 6.7, 7.1, 4.6]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 4.234081562814888, 1.5, 2.4936669865395658, 0.584204380758542, 6.7]], [[-0.6763327164350088, 2.5, -3.7, -4.6, -2.8396588982482287, 6, 6, 6]], [[2.5, -3.7, -5.2, -6]], [[0.1, 1.5, -2.8396588982482287, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 0.7284547363306774, 6.7]], [[3.074745760163279, 1.1, 2.5, -3.7, -4.716809497407311, 5, -6.5, 6]], [[1, 3, 2, -4.1487020521034745, 3.4, -4.6, 0.5, 6, 6]], [[0.1, -7.77060807675203, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.6, -4.716809497407311]], [[0.1, -14.04, 5.5, 2.71, 3.2, 4.6, 5.1, 8.607004238120686, 6.7, 0.1]], [[-1.5, -3.7, -1.0030764293945094, 4.6, 5.1, -1.5, 6]], [[4.5, 2.034150193392351, 0.1, 1.5, 2.9, 3.2, 3.287852215132159, 3.499530218204873, 6.7, 3.287852215132159, 4.5]], [[-0.8317460690765607, 3.787597101449791, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 3.975992715202202, 4.6]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 4.6, 4.6]], [[4.234081562814888, 0.1, 5.5, 5.5, -3.7, 3.2, 4.6, 5.1, 6.7, 6.7, 6.7, 5.5, 5.1]], [[4.5, 0.1, 1.5, 2.9, 3.2, 6.851261387881998, -6.773948579844583, 6.7, 4.234081562814888]], [[-6, 3.0179751175777536, 1, -3.4, 0.5, -5.1, -6]], [[3.14, -8.09, 2.71, 0.6991319764835219, 1.62, -9.99, 6.28, 1.62, -8.09, 6.28]], [[0, 4, 3.4, 5.1, 6, 3.4]], [[1, 3, 2, -4.1487020521034745, 3.4, 3.6, 0.5, 6, 6, -4.1487020521034745, 6]], [[0.1, 6.7, 5.5, -6.5, 3.2, 4.6, -9.99, 5.1, 6.7, 6.7]], [[0.1, -7.77060807675203, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.715583291999385, 5.1, 6.7, 4.6, -4.716809497407311]], [[-1.1, 2.5, -2.9445611166646914, 4.6, 5.1, 6, -1.1]], [[3.4, 4.129563514953585, 6, 2, 2]], [[0.061283494508126014, 1.5, 1.1, 3.5445903520942394, 4.234081562814888, 6.851261387881998, 8.634480834505068, 6.7, 4.234081562814888]], [[1.1, 2.5, -3.7, -4.6, -4.276874536373084, -5.2, -9.99, -6, -9.99, -9.99]], [[-0.6763327164350088, 2.5, -3.7, -4.6, -4.6, -2.8396588982482287, 6, 6, 6, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 4, 4]], [[1.1, -3.7, -4.6, -4.276874536373084, -5.2, -9.99, -6]], [[-5, -4.276480747131856, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 3.5]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, -6.5, 1.5, 1.1]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 7.1, -6.5, -1.5]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 9.895068822944094, 6.7, 7.1, 0.5, 2.4936669865395658]], [[0.1, -2.5091429749847305, 1.5, 2.9, -2.5091429749847305, 3.2, 4.234081562814888, 3.729477873601854, 6.7]], [[0.1, 2.71, 9.895068822944094, 3.2, 4.6, 5.1, 6.7, 6.7]], [[3.14, -8.09, 0.69, 1.5224939717635053, -9.99, 6.28, 1.62, -8.09]], [[1.1, 2.5, -3.7, 4, -5.2, -6]], [[1.1, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, -6.5, 1.1, 1.1]], [[0.1, 1.5, 1.1, 3.2, -1.0030764293945094, 4.234081562814888, 6.851261387881998, 6.7, -2.5091429749847305]], [[1, -5, 2, -3.4, -3.2596671445918055, 0, -6, 2, 2]], [[1, 2, -3.4, 0.5, -5.1, -6]], [[1.1, 2.5, -4.716809497407311, 5, 4.234081562814888, -6.5, 6, 1.1]], [[1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 6.7]], [[-1.1, 2.832781453766651, -2.9445611166646914, 4.6, 5.1, 2.964251544523867, 6, -1.1]], [[0.1, 6.851261387881998, 3.2, 3.6993494219923884, 3.287852215132159, 6.7, 6.7]], [[-4.5, -4, -3.5, -3, -2.5, -2, -1.5, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 1, 3.5, 4, 4.5, 5, -2.5, 2.5]], [[2.71, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 3.499530218204873, 6.7, 2.9, 2.9]], [[1, -1, 2, 3.4, -8.09, -4.6, 5.1, 6, 6, 5.1, -8.09]], [[0.1, 1.5, 2.9, 2.4936669865395658, 6.074143235398845, 6.851261387881998, 6.7, 7.4145549533273405, 0.09750769450579759, 6.7]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 0, 0.584204380758542, 3, 1]], [[0, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6]], [[-6, 3.0179751175777536, 1, -3.4, 0.5, -5.1, -6, -5.1]], [[2.4, 4.2, 0, -1.5, -2.7, -4.276480747131856, 7.1, -6.5, -1.5, -1.9831292900001547, -2.7]], [[1, 4, 3.4, 5.1, 6.373235401692621, 3.4]], [[1, 2, 5.5, -4.6, 5.1, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 0, 0.584204380758542, 3, 1, -1]], [[3.14, -8.09, 2.71, 0.6991319764835219, 1.62, -6.5, -9.99, 6.28, 1.62, -8.09, 6.28]], [[3.4, 6, 2]], [[1.1, 2.5, -3.7, -4.6, -4, -2.9445611166646914, -5.2, -4.09005682631597, -6]], [[1, -5, -3.4, 0, -2.7, -3.2596671445918055, 0, -6]], [[4.234081562814888, 0.1, 4.8800688925364994, 5.5, -3.7, 3.2, 4.6, 5.1, 6.7, 6.7, 6.7, 5.1]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.246063504872289, 4.6, 5.014482212889489, 6.7, 4.6, 4.967726321372912]], [[4.5, 0.3244010923433097, 1.5, 4.914341801876925, 2.9, 3.2, 4.234081562814888, 6.851261387881998, -4.1487020521034745, 6.7]], [[-6, 1, 2, -3.4, -4.6, 6.851261387881998]], [[1, -2, 2, 4.5, -4.6, 0, -5.1, -6, 2]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.246063504872289, 5.014482212889489, 6.7, 4.6, 4.6, 4.967726321372912]], [[1.1, 2.5, -4.6, 0.6212597321029525, 5.2, 6, 5.2, 5.2]], [[0.1, 1.5, 3.2, 6.851261387881998, -6.773948579844583, 6.7, 4.234081562814888]], [[0.061283494508126014, 1.5, 3.2, 6.851261387881998, 8.634480834505068, 6.7, 4.234081562814888, 6.851261387881998]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 7.4145549533273405, 6.7, 1.5]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2, 2.5, 1, 3.5, 4, 4.5, 5, -2.5, 2.5]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 4.234081562814888, 1.5, 2.4936669865395658, 0.584204380758542, 6.7, 0.584204380758542]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5, 0, 1]], [[0.1, -2.5091429749847305, 1.5, 2.9, -2.5091429749847305, 3.499530218204873, 3.2, 3.729477873601854, 6.7]], [[0.1, 6.7, 5.5, -6.5, 3.2, 4.6, 4.487285882920272, 5.1, 6.7]], [[1, -1, 4.841112510159845, 3, 3.4, -8.09, -4.6, 5.1, 6, 6, 5.1]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.967726321372912]], [[1.5, 4.487285882920272, 2.9, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 2.230942080154173, 4.234081562814888, 1.5, 2.4936669865395658, 4.234081562814888]], [[1.1, 2.5, -3.7, -4.716809497407311, 5, 5.2, -3, 5.2]], [[1.1, 2.5, -4.716809497407311, 5, 4.234081562814888, -6.5, 6, 1.1, 2.5]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 4.234081562814888, 1.5]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 1.840256743666684, 7.1, -6.5, -1.5]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 0, 0.584204380758542, 3, 1, -1, 5]], [[0.1, 0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 6.7, 4.164996313633066, 4.6]], [[0.1, 2.9, 4.234081562814888, 6.851261387881998, 8.527593815012729, 4.234081562814888, 1.5]], [[0.1, -2.5091429749847305, 1.5, 2.9, -2.5091429749847305, 3.2, 4.234081562814888, 3.729477873601854, 6.7, 6.7]], [[1, 4, 3.4, 3.729477873601854, 6.373235401692621, 3.4, 6.373235401692621]], [[2.71, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 4.193079181251758, 6.7, 2.9]], [[2, 2, -3.4, -4.6, 1.5, -6]], [[-1.1, 2.5, -3.7, -4.6, 3.5739448781811447, -2.8396588982482287, 5.2, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.4936669865395658, 3, 3.5, 4, 4.5, 5, 0, 1]], [[-1.1, 5, 2.5, -3.7, 4.6, 5.147008615293544, 5.1, 6]], [[-1.1, 2.5, -0.8413477856752207, -2.9445611166646914, 4.6, 5.1, 6, -1.1]], [[1, 4, -5, 2, -3.4, -2.7, -3.2596671445918055, 7, 0]], [[1, 2, 3.4, -4.6, 5.1, 2, 6]], [[-1.1, 2.5, -3.7, 4.6, 5.570054272140174, 6, 5.1, 4.6]], [[-1.1, 2.5, -3.7, 4.6, 5.570054272140174, 6, 5.1, 4.6, 5.570054272140174]], [[2, -3.4, -4.6, -6, -5.1, -6, -4.6, -4.6, -6]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 7.4145549533273405, 6.7, 6.7, 6.851261387881998]], [[2.71, 1.7753151854022948, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 4.193079181251758, 6.7, 2.9]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7]], [[2.4, 4.2, -1.1914858495003662, 0, -1.5, -2.7, 3.6, 7.1, 7.1]], [[2, 4, 3.4, 1.8071929743812858, 5.1, 3.4]], [[6.28, 1.566848906209739, 4.6, 5.1, 6, -3.7]], [[2.4, 4.2, 0, -2.0796883804736686, -2.910512079602772, -2.5091429749847305, 3.6, 7.1, -6.5, -2.5091429749847305]], [[4.5, 0.1, 1.5, 0.052289320520992534, 2.9, 4.234081562814888, 6.851261387881998, 6.7]], [[1, -1, 3, 3.4, -8.09, -4.6, 6, 6, 5.1]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, -6.5, 1.1]], [[-5, -4.5, -4, -3.5, -3, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 3.5]], [[6.28, -3.7, 4.6, 5.1, 6, -3.7, -3.7]], [[2, -3.4, -6.773948579844583, -6, -5.1, -6, -4.6, -2.98440779706064, -6.773948579844583, 2]], [[0.1, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 6.851261387881998, 6.7, 3.172195971968054, 2.9, 2.9, 6.851261387881998]], [[4, 1, 2, -3.4, 9.283640269180903, -3.2596671445918055, -6]], [[3, 3.4, 2, 3]], [[0.1, 1.5, 2.9, 3.499530218204873, 1.1237040199009254, 3.975992715202202, 6.851261387881998, 6.7, 2.9, 2.9]], [[2, 4, 3.4, 5.1, 3.4, 3.4]], [[-0.6763327164350088, -1, -3.7, -4.6, -2.8396588982482287, 6]], [[4.5, 0.1, 1.5, 2.9, 3.2, 2.9, 6.851261387881998, -6.773948579844583, 6.7, -6.773948579844583, 6.7]], [[6.28, 1.566848906209739, -3.7, -4.09005682631597, 5.1, 6, -3.7]], [[6.28, 1.566848906209739, -3.7, 4, 4.6, 5.1, 6, -3.7]], [[-3.2596671445918055, 0.1, 1.5, 2.9, 2.4936669865395658, -3.2596671445918055, 6.851261387881998, 6.7, 7.4145549533273405, 6.7]], [[-5, 2, -3.4, 1, -2.7, -3.2596671445918055, -6]], [[1.1, 2.5, -3.7, -4.6, -3.99789403272053, 5.2, 6, 1.1]], [[-1.1, 2.5, -3.7, 3.51395547222391, 5.1, 6]], [[1, -5, 2, -3.4, 0, -6, 2, 2]], [[-1.5, 5.310292523850798, -4.6295639817413345, -1.0030764293945094, 4.6, 5.1, -1.3088872539122631, 6]], [[1.1, 2.5, -3.7, -4.6, -4, -5.2, -4.09005682631597, -6, 2.5]], [[1, -5, 2, -3.4, -3.2596671445918055, -1.1, -6, 2, 2]], [[1.1, 2.5, -3, -3.7, -4.6, 6]], [[1, -1, 3, -4.33753565336939, 3.4, -8.09, -4.6, 5.1, 6, 6, 5.1]], [[-5, -4.5, -4, 5.1, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5]], [[2.5, -3.7, -5.741411425705513, 5, -6.5, 1.1, 4.234081562814888]], [[1.5, 2.9, 2.4936669865395658, 6.851261387881998, 8.375338782048383, 6.7, 2.230942080154173, 4.234081562814888, 1.5, 2.4936669865395658, 4.234081562814888]], [[-5, -4.5, -4, 5.1, -3, -2.5, -2, -1.5, -1, -0.5, -3, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5.183640582073313, 5]], [[-1.1, 2.832781453766651, 0.6991319764835219, -2.9445611166646914, 4.6, 5.1, 2.964251544523867, 6, -1.1]], [[1.1, -3.7, 4.234081562814888, 5, -4.716809497407311, 3.14, 5, -6.5, 4.841112510159845, 1.1]], [[0.1, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 1.1960864681930536, 6.7, -2.5091429749847305]], [[0.061283494508126014, 1.5, 1.1, 3.2, 0.6212597321029525, 6.851261387881998, 8.634480834505068, 6.7, 4.234081562814888, 6.7]], [[1.1, 2.5, -3.7, -4.6, -2.8396588982482287, 5.2, 6, -2.8396588982482287]], [[0.1, -2.5091429749847305, 1.5, 2.9, -0.8413477856752207, -2.5091429749847305, 3.499530218204873, 3.2, 3.729477873601854, 6.7]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 8.042844849551145, 6]], [[0.1, 1.5, 3.2, 4.234081562814888, 6.851261387881998, 6.7]], [[2.5, -3.7, -5.2, -6, 2.5]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.246063504872289, 0.14826026329246098, 4.6, 5.014482212889489, 6.7, 4.6, 4.967726321372912]], [[0, -1, 2, 3.4, -8.09, -4.6, 5.1, 6, 6, 5.1, 5.1]], [[-1.1, 2.5, 3.380466316535683, -0.8413477856752207, -2.9445611166646914, 4.6, 5.1, 6, -1.1, -0.8413477856752207]], [[1, -3.330424793270251, -5, 2, -3.4, -2.7, -3.2596671445918055, -6, 1]], [[0.1, 1.5, 2.9, 1.275713502619218, 3.975992715202202, 6.851261387881998, 6.7, 3.172195971968054, 2.9, 2.9, 6.851261387881998]], [[0.1, 1.5, 1.1, 3.2, 4.234081562814888, 3.6155552298103606, 6.851261387881998, 6.7, -2.5091429749847305, 6.851261387881998]], [[0.1, 0.5548524556523429, 2.9, 3.975992715202202, 6.851261387881998, 2.9, 2.9]], [[-6, -3, 1, 2, -3.4, 0.5, -6, 0.5, 0.5]], [[-1.1, 2.5, -3.7, 4.6, 5.147008615293544, 5.1]], [[4.234081562814888, 0.1, 5.5, 5.5, -3.7, 3.2, 4.6, 5.1, 6.7, 6.7, 6.7, 5.5, 5.1, 5.1]], [[-1.1, 2.211013714786509, -3.7, 4.6, 5.147008615293544, 5.1]], [[0.1, 1.5, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.6]], [[-1, 2, 3.4, -8.09, -4.6, 5.1, 6, 6, 6]], [[1.5, 2.71, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 4.234081562814888, 1.5, 2.4936669865395658, 0.584204380758542, 6.7]], [[-1.1, -3.7, -4.6, -2.8396588982482287, 6]], [[2.71, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 5.080474606366394, 6.7, 2.9]], [[2.5, 2.9, 5.1, 6]], [[1.1, 2.5, -3.7, -4.680748699004898, -6]], [[-1.1, 2.5, -3.7, 3.074745760163279, 5.570054272140174, 6, 5.1, 4.6]], [[1, -5, 2, -2.7, -3.2596671445918055, -6]], [[0.9670100705040044, 6.409972729146418, 6.851261387881998, 3.2, 4.6, 9.283640269180903, 2.4936669865395658, 3.287852215132159, 6.7, 6.7]], [[1.1, 2.5, -4.6, 3.5, -6]], [[1, 3, 2, -4.1487020521034745, 3.4, -4.6, 0.5, 3.6617590099399284, 6, 6]], [[3.14, 1, 4, 3.4, 6]], [[0.1, 1.5, -4.716809497407311, 0.06472360550567396, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.6, 4.967726321372912]], [[0.1, 1.5, -4.716809497407311, 2.9, 3.2, 4.967726321372912, 4.6, 5.1, 6.7, 1.5]], [[1.5, 2.9, 2.4936669865395658, 6.851261387881998, 8.375338782048383, 1.7753151854022948, 6.7, 2.230942080154173, 4.234081562814888, 1.5, 2.4936669865395658, 4.234081562814888]], [[4, 3.4, 5.1, 6, 2, 2]], [[1, 3, 2, -4.1487020521034745, 3.4, 3.6, 0.5, 6, 6, -4.1487020521034745, 6, 3.4]], [[1.1, 2.5, -3.7, -5.2, -6, 2.5]], [[1, 3.4, -4.6, 5.1, 4.8800688925364994, 6, 6, -4.6, -4.6]], [[2, 3.4, -3.4, -5, -4.6, -6, 3, -5.1, -6, -4.6, -4.6]], [[0.1, 5.5, 3.2, 4.6, 5.1, 6.7, 6.7]], [[-3.2596671445918055, 0.1, 1.5, 2.9, 2.228516548185696, 4.234081562814888, 7.503336396687594, 6.7, 7.4145549533273405, 6.7]], [[1, 6, 3, 2, -4.1487020521034745, 3.4, 1.1237040199009254, -4.6, 0.5, 6]], [[3.14, -8.09, 2.71, 0.69, 1.62, 6.28, 1.62, -8.09, 2.71]], [[0.1, 2.9, 4.234081562814888, 6.851261387881998, 8.527593815012729, 4.234081562814888, 1.5, 2.9]], [[-1.1, -3.7, -4.6, -2.8396588982482287, 1.566848906209739, 6]], [[1.1, 2.5, -3.7, -14.04, -4.6, -3.99789403272053, 5.2, 6, 1.1]], [[8.607004238120686, 1.1, 2.5, -3.7, -4.716809497407311, 5, -6.5, 6]], [[-5, -3.4, 0, -2.7, -3.2596671445918055, 0, -6]], [[2, -3.4, -6.773948579844583, -6, -3.479116172840631, -6, -4.6, -2.98440779706064, 8.375338782048383, -6.773948579844583, 2]], [[1.1, -3.7, -4.6, -4, -5.2, -4.09005682631597, -6, 2.5]], [[1, 1, 2, -3.4, 9.283640269180903, -3.2596671445918055, -6, 2]], [[0.1, 1.5, 2.9, 4.234081562814888, 6.851261387881998, 6.7, 0.12719557110029214, 3.263069699177953, 6.851261387881998]], [[-4.5, -4, -3.5, -3, -2.5, -2, -1.5, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 1, 3.5, 4, 4.5, 5, -2.5, 2.5, 4]], [[1, 3.4, 5.1, 4.8800688925364994, 6, 6, -4.6, -4.6]], [[2.4, 4.2, 2.034150193392351, 0, -2.0796883804736686, -2.910512079602772, -2.5091429749847305, 3.6, 7.1, -6.5, -2.5091429749847305]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.967726321372912, 2.9]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, -1.3088872539122631, 3, 3.5, 4, 4.5, 5]], [[-1.1, 2.5, -3.7, 3.074745760163279, 5.570054272140174, 6, 5.1, 4.532971210865655, 4.6]], [[0.1, 6.409972729146418, 2.9167159120600434, 6.851261387881998, 3.2, 4.6, 2.4936669865395658, 3.287852215132159, 6.7, 6.7]], [[6, 2]], [[2, -6.773948579844583, -6, -3.479116172840631, -6, -4.6, -6.773948579844583, 2]], [[1.1, 5, -4.6, 5.2, 6]], [[0, -1, 2, 3.4, 5, -8.09, -4.6, 5.1, 7, 6, 5.1, 5.1]], [[2.4, 4.2, 0, -2.910512079602772, -2.5091429749847305, 3.6, 7.1, -6.5, -2.5091429749847305]], [[2.71, 1.7753151854022948, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 4.193079181251758, 6.7, 2.1196134413303294]], [[3.074745760163279, 1.1, 2.5, -3.7, 4.193079181251758, -4.716809497407311, 5, -6.5, 6]], [[2.71, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 5.080474606366394, 6.7, 2.9, 2.9]], [[4.5, 2.034150193392351, 0.1, 1.5, 2.9, 3.2, 3.287852215132159, 6.240762858871131, 3.287852215132159, 4.5]], [[2.5, 1.6394323213396855, -3.7, 4.234081562814888, -4.716809497407311, 5, -6.5, 3.890157601890744]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 9.552869613565447, 2.230942080154173, 4.234081562814888, 1.9034097986764364, 2.4936669865395658]], [[-5, -4.5, -4, 5.1, -3, -2.5, 2, -2, -1.5, -1, -0.5, -3, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5.183640582073313, 5]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 2.9]], [[1, -5, -3.4, 0, -2.7, -3.2596671445918055, -1, -6, -3.4]], [[-5, -4.5, -4, 5.1, -3, -2.5, 2, -2, -1.5, -1, -0.5, -3, 1.5277171248034649, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5.183640582073313, 5]], [[-5, -4.5, -4, 5.1, -3, -2.5, 2, -2, -1.5, 2, -1, -0.5, -3, 1.5277171248034649, 0.5, 1.5, 2, 2.5, 3, 3.5, 4, 5.183640582073313, 5]], [[0, 0.5, 2, 1.5, 2, 2.5, 3.5, 4, 4.5, 5, 5.5, 6]], [[1.1, -3.7, -6.198816864183874, -4.276874536373084, -5.2, -9.99, -6]], [[2, 4.967726321372912, -6.773948579844583, -6, -3.479116172840631, -6, -4.6, -6.773948579844583, 2]], [[1.1, 2.5, -3.7, -5.2, -6, 8.527593815012729, 2.5]], [[3, 4, 3.4, 5.1, 6, 3.4]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 2, 3.5, 4, 4.5, 5, 3.5]], [[1, 2, 4.046570157069361, -4.6, 5.1, 6, 6, -3.081504434169668, 6]], [[-1.1, 2.5, -3.7, 6.879000473686945, 4.6, 5.147008615293544, 6, 5.1, 6, -3.7]], [[2, 4, 3.4, 1.8071929743812858, 5, -4.6, 3.4]], [[1.1, 2.5, -3.7, -5.2, -6, -4.33753565336939, -6, -5.2]], [[1, -2, 2, 4.5, -4.6, 0, -5.1, -6, 2, -2]], [[4.2, 0, -1.5, -2.7, 3.6, 7.1, 1, -6.5, -1.5, -1.5]], [[4.5, 2.034150193392351, 0.1, 1.5, 2.9, 3.2, 3.287852215132159, 6.240762858871131, 3.287852215132159, 4.5, 0.1]], [[0, 4, 3.4, 5.1, 6, 3.4, 4]], [[-1.5, 5.310292523850798, -4.6295639817413345, -1.0030764293945094, 4.6, 5.1, -1.3088872539122631, 0.06472360550567396, 6]], [[4.234081562814888, 0.1, 4.715583291999385, -3.7, 3.2, -3.3629337697813977, 4.6, 5.1, 6.7, 6.7, 6.7]], [[1, 2, -3.4, -5.1, -6, 1, 1]], [[2.5, -3.7, -4.716809497407311, -6.5, 6, 1.1, 2.5]], [[-1, 2, 3.4, 5, -8.09, -4.6, 5.1, -11.746046942732079, 7, 6, 5.1, 5.1, -4.6]], [[0.1, 2.9, 4.234081562814888, 6.851261387881998, 8.527593815012729, 4.234081562814888, 1.5, 4.234081562814888]], [[1, 4.442220245176467, 4, 3.4, 5.1]], [[-1.1, 2.5, -0.8413477856752207, -2.9445611166646914, 4.6, 5.1, 6]], [[0.1, 1.5, 2.9, 3.2, 4.234081562814888, 3.729477873601854, 6.7, 0.1]], [[1.1, 4.3240944046206335, 2.5, -4.716809497407311, 5, 4.234081562814888, -6.5, 6, 1.1, 2.5]], [[1, 2, -3.4, 2.964251544523867, -6, -5.1, -6, -4.6, -4.6, -4.6]], [[0.1, 1.5, 2.211013714786509, 2.9, 4.129563514953585, 4.967726321372912, 4.6, 5.1, 6.7, 4.6]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 4.6, 4.6, 4.6]], [[2.71, 1.7753151854022948, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 4.193079181251758, 6.7, 2.9, 2.9]], [[1.1, 2.5, 4.234081562814888, 5, -4.716809497407311, 5, 4.164996313633066, 1.1, 1.1]], [[1.1, 2.5, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, 4.164996313633066, 1.1, 1.1, 4.164996313633066]], [[2.5, -3.7, -4.716809497407311, -6.5, 6, 7, 1.1, 2.5, 2.5]], [[-6, 3.0179751175777536, 1, -3.4, 0.5, -5.1, -7, -5.1]], [[4.5, 0.1, 1.5, 2.9, 3.2, 6.851261387881998, -6.773948579844583, 6.7, 4.234081562814888, 2.9]], [[-1.1, 2.5, -3.7, 4.6, 5.147008615293544, 6, 5.1, 6, 4.6, -3.7]], [[2, -3.4, -6.773948579844583, -6, -5.1, -6, -4.6, -2.98440779706064, -6.773948579844583, 2, -6.773948579844583]], [[1, 3.4, 2.7894813137255015, 2.37497846404422, 5.1, 6, 2.7894813137255015]], [[-0.8317460690765607, 3.454312388429943, 3.787597101449791, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 3.975992715202202, 4.6]], [[2.5, 2.9, -6.5, 5.1, 6]], [[1, -5, 2, -3.4, -2.7, -3.2596671445918055, 0, -6, 2, 2, -5]], [[0.1, 1.5, -4.716809497407311, 2.9, 3.8313894511030147, 2.9915540201886883, 4.967726321372912, 4.6, 5.1, 6.7]], [[-0.8317460690765607, 3.787597101449791, 1.5, 1.1, 3.2, 4.234081562814888, 6.851261387881998, 3.9336180777735263, 3.975992715202202, 4.6]], [[1, -5, 2, -1.1, -3.4, -2.7, -3.2596671445918055, 0, -6, 2, 2, -5, -3.4]], [[0.1, 1.5, 2.9, 4.234081562814888, 6.7, 1.4145967562528985, 2.9, 0.1]], [[3.263069699177953, 1.1, 2.5, -4.716809497407311, 5, -6.5, 6, 3.499530218204873, 0.6651634925536496, 1.1]], [[1.1, 0.5, -3.7, 4.234081562814888, 5, 3.6993494219923884, -4.716809497407311, 5, -6.5, 1.1]], [[3.14, -8.09, 2.71, 0.6991319764835219, 1.62, -6.5, -7.08893824300642, 6.28, 1.62, -8.09, 6.28]], [[-1.4388447986447082, 2.5, -3.7, 4.6, 5.147008615293544, 5.1, 6, 4.6]], [[-1.1, 2.5, -3.7, 4.6, 5.147008615293544, 5.1, 6, 5.1, 2.5]], [[1.1, -3.7, 4.234081562814888, 5, -4.716809497407311, 3.14, 5, -6.5, 4.841112510159845, 1.1, 4.841112510159845]], [[6.28, 1.566848906209739, -3.7, 4.6, 5.1, 6, 1.566848906209739]], [[0.1, 1.5, -4.716809497407311, 2.9, 4.129563514953585, 4.246063504872289, 5.014482212889489, 4.6, 4.6, 4.967726321372912]], [[4.5, 0.1, 1.5, 2.0026403456856325, 3.2, 6.851261387881998, -6.773948579844583, 6.7, 4.234081562814888, 4.5]], [[1, 2, -3.4, -4.6, -5.1, -6, 2, -6, -6]], [[-1.1, -3.7, -4.6, -2.8396588982482287, 7, 5.2, 7]], [[0.1, 0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 6.7, 4.164996313633066, 5.512119285062335]], [[1, -5, -3.4, 0, -5, -2.7, -3.2596671445918055, 0, -6]], [[2.056490122394295, 0.1, 1.5, 2.9, 3.2, 4.6, 5.1, 6.7]], [[1.5, 3.2, 6.851261387881998, -6.773948579844583, 6.7, 1.8071929743812858, 4.234081562814888]], [[0.1, 1.5, -4.716809497407311, 2.9, 2.9915540201886883, 4.967726321372912, 4.6, 5.1, 7.225026998188071]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 6.7, 4.234081562814888, 1.5, 2.4936669865395658, 0.584204380758542]], [[1, 6, 3, 2, 2.034150193392351, 3.4, 1.1237040199009254, -2.3744170907243327, 0.5, 6]], [[2, 4, 3.4, 7.1286095269742775, 5.1, 6]], [[1.1, 2.5, -4.6, 0.6212597321029525, 5.2, 6, 5.2]], [[0.1, 5.5, 2.71, 3.2, 4.6, 5.1, 6.7, 6.7, 0.1, 4.6]], [[1.1, -3.7, 2.596787976854052, 5, -4.716809497407311, -6.5, 1.1]], [[0.1, 5.080474606366394, 4.234081562814888, 6.851261387881998, 8.527593815012729, 4.234081562814888, 1.5, 4.234081562814888]], [[-5, -4.276480747131856, -4, 3.2, -2.5091429749847305, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 3.5]], [[-5, 2, -3.4, -2.7, -3.2596671445918055, -6, -3.4]], [[3.074745760163279, 1.1, 2.5, -3.7, -4.716809497407311, 5, -6.5, 6, -6.5]], [[1.5, 2.9, 2.4936669865395658, 6.851261387881998, 8.375338782048383, 6.7, 2.230942080154173, 5.121410407042558, 4.234081562814888, 1.5, 2.4936669865395658, 4.234081562814888]], [[-1.1, 2.5, -0.8413477856752207, -3.9938098070834855, -2.9445611166646914, 4.6, 5.1, 6]], [[1.1, -3.7, -4, 2.596787976854052, 5, -4.716809497407311, -6.5, 1.1]], [[0.1, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.975992715202202, 3.729477873601854, 6.851261387881998, 6.7, 3.172195971968054, 2.9, 2.9, 6.851261387881998]], [[-5, -4.5, -4, -3.5, -3, -2.5, -3, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4.6295639817413345, 4, 4.5, 5, 0, 1]], [[-5, -4.5, 5.1, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 5, 3.5, 4, 4.5, 5]], [[1.1, -3.7, -4.6, -4.276874536373084, -5.2, -9.99, -6, -9.99, -9.99, 2.5]], [[0.1, 1.5, -4.716809497407311, 2.9, 3.2, 4.967726321372912, 4.6, 5.1]], [[0.1, 1.5, 2.9, 3.499530218204873, 1.275713502619218, 3.994048159586825, 3.975992715202202, 6.851261387881998, 6.7, 2.9, 2.9, 6.851261387881998, 3.1777410668943764, 1.275713502619218]], [[1.1, 2.5, -3.7, -4.716809497407311, 5, -6.5, 6, 2.5]], [[0.1, -14.04, 2.71, 3.2, 4.6, 5.1, 9.283640269180903, 6.7]], [[1, -5, 7, 2, -2.7, -3.2596671445918055, -6, 2]], [[1, -1, 2, 3.4, -8.09, -4.6, 5.1, 6, 6, -8.09]], [[6.28, 4.6, 5.1, 6, -3.7, -3.7, -3.7]], [[1, 6, 3, 2, -4.1487020521034745, 3.4, 1.1237040199009254, 0.5, 6, 3]], [[0.1, 1.5, 1.1, 3.2, -1.0030764293945094, 4.234081562814888, 6.851261387881998, 6.7, -2.5091429749847305, -2.5091429749847305]], [[1, 3, -3.4, 0, -2.7, -3.2596671445918055, 0, -6]], [[1, -5, -3.4, 0, -5, -2.7, -3.2596671445918055, 0, -6, -2.7]], [[1, -1, 2, 3.4, -4.6, 4.960798642151972, 5.1, 6, 6, 5.1, 6]], [[1.1, 3.454312388429943, -3.7, -6.198816864183874, -4.276874536373084, -5.2, -9.99, -6]], [[1, 1, 2, 1, -3.4, 9.283640269180903, -3.2596671445918055, -6]], [[0.1, -8.09, -5.05526115977665, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 6.7, 4.6]], [[3.14, -8.09, 0.69, 1.5224939717635053, -9.99, 6.28, 1.62, -8.09, -8.09]], [[2.5, 6.122998757707743, -3.7, -4.716809497407311, 5, 5.2, 6]], [[2, -3.4, -6.773948579844583, -6, -5, -5.1, -5, -4.6, -2.98440779706064, -6.773948579844583, 3]], [[2.5, -3.7, 4.234081562814888, -4.716809497407311, 5, -6.5, -3.330424793270251]], [[54, 70, 13, -31, -99]], [[-1.1, 2.5, -0.8413477856752207, -3.9938098070834855, -2.9445611166646914, 4.6, 5.1]], [[1.1, -3.7, 4.234081562814888, 5, -4.716809497407311, 5, 54, -6.5, 1.1, 1.1]], [[-2.4010212753236457, 0.1, 1.5, 2.9, 2.228516548185696, 4.234081562814888, 7.503336396687594, 6.7, 7.4145549533273405, 6.7]], [[0.1, -14.04, 5.5, 2.71, 3.2, 4.6, 5.1, 8.607004238120686, 6.7, 0.1, 3.2]], [[-6, 1, 1, 2, -3.4, -4.6, -5.1115162115352]], [[-1.1, -3.7, -4.6, -2.8396588982482287, 5.2, -4.6]], [[-1.1, 2.5, -1.853311257563793, 4.6, 5.1, 6, -1.1]], [[1.1, 2.5, -4.716809497407311, 5, 4.234081562814888, -6.5, 6, 1.1, 2.5, 1.1]], [[-1.1, 2.5, -1.853311257563793, 4.6, 5.1, 6, -1.1, 4.6]], [[1.1, 2.5, -3.7, -4.6, 3.5, -6, -6]], [[-5, -3.4, 0, -2.7, -1.9236363858825494, -9.99, 0, -6]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 1.840256743666684, 7.1, -6.5, -1.5, 7.1]], [[0.1, 1.5, -4.716809497407311, 2.9, 3.985738011668973, 3.2, 4.967726321372912, 4.6, 5.1]], [[0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 8.634480834505068, 3.6617590099399284, 5.1, 6.7]], [[0.1, 1.5, 2.9, 2.4936669865395658, 6.851261387881998, 6.7, 1.5]], [[0.1, 1.5, 2.9, 2.9, 2.4936669865395658, 6.074143235398845, 6.851261387881998, 6.7, 7.4145549533273405, 0.09750769450579759, 6.7]], [[0.1, 1.5, 2.9, 3.2, 4.6, 0.7284547363306774, 6.7]], [[1.5, 2.9, 4.234081562814888, 6.7, 1.4145967562528985, 2.9, 0.1]], [[-3.2596671445918055, 0.1, 1.5, 2.9, 2.228516548185696, 4.234081562814888, 7.503336396687594, 7.4145549533273405, 6.7]], [[0.1, -0.7272026844382555, 4.234081562814888, 6.851261387881998, 8.527593815012729, 4.234081562814888, 1.5, 2.9]], [[0.1, 1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 6.7, 7.4145549533273405, 6.7, 6.7, 6.851261387881998, 0.1, 7.4145549533273405]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, -3.1047291694555414, 0, 0.5, 1, 1.5, 2, 2.4936669865395658, 3, 3.5, 4, 4.5, 5, 0, 1]], [[2.5, -3.7, 4.234081562814888, -4.716809497407311, 5, -6.5, -3.330424793270251, -3.330424793270251, -6.5]], [[-6, 1, 2, -3.4, -4.6, -6]], [[-3.2596671445918055, 0.1, 1.5, 2.9, 2.228516548185696, 4.234081562814888, 6.7, 7.4145549533273405, 6.7, 2.9, 7.4145549533273405]], [[-2.4010212753236457, 0.1, 1.5, 2.9, 4.234081562814888, 7.503336396687594, 6.7, 7.4145549533273405, 6.7]], [[1, -5, 2, -3.4, -2.7, 0, -6]], [[3.14, -8.09, 2.71, 0.69, 1.62, -5.4474913879499605, 6.28, 1.62, 3.739925690046062]], [[1, -5, -3.4, 0, -2.7, -3.298675345122931, -1, -6, -3.4]], [[0.1, -7.779577990481837, 0.1, -8.09, -4.716809497407311, 2.9, 4.129563514953585, 4.967726321372912, 3.499530218204873, 5.1, 6.7, 4.164996313633066, 4.6]], [[1.5, 2.9, 2.4936669865395658, 4.234081562814888, 6.851261387881998, 8.527593815012729, 9.895068822944094, 5.27131687733624, 6.7, 7.1, 0.5, 2.4936669865395658]], [[3.14, -8.09, 0.8407610504622577, 1.5224939717635053, -9.99, 6.28, 1.62, -8.09]], [[0.061283494508126014, 1.5, 3.2, 6.851261387881998, 7.859916102380617, 8.634480834505068, -0.9061133911750052, 6.7, 5.147008615293544, 6.851261387881998]], [[0.061283494508126014, 1.5, 1.1, 3.2, 6.851261387881998, 8.634480834505068, 6.7, 4.234081562814888]], [[0, -1, 2, 3.4, -8.09, -4.6, 5.1, 6, 6, 5.1, 5.1, 5.1]], [[0.1, -7.779577990481837, -7.77060807675203, 0.1, -8.09, -4.716809497407311, 2.9, -2.8396588982482287, 4.967726321372912, 3.499530218204873, 5.1, 6.7, 4.164996313633066, 4.6]], [[1, 54, 3, 2, -4.1487020521034745, 3.4, 1.1237040199009254, -4.6, 0.5, 6, 3.4]], [[4, 8.634480834505068, 4.129563514953585, 6, 2]], [[]], [[-1, -5, -10]], [[0.1, 0.2, 0.3]], [[-0.1, -0.5, -0.9]], [[9.1, 8.7, 7.3]], [[1.5, -2.4, 3, -4, 5.5]], [[0.5, 1.5, 2.5]], [[-1, -1.5, -2.5]], [[-1, 0, 1]], [[0, 0.5, 1, 1.5, 2, 2.5, -6, 3, 3.5, 4, 4.5, 5, 5.5, 6]], [[0, 0.5, 1, 1.817939135685336, 2, -6, 3, 3.5, 4, 4.5, 5, 5.5, 6, 2]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 5.5, 6, 2]], [[2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.6, 7.1, -6.5, 3.6]], [[-1.1, 1.62, 2.5, -3.7, 4.6, 5.1, 6]], [[-1.1, 2.5, -3.7, 4.6, -1.4030222827046124, 5.1, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 4.5, 2]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 7.1, -6.5, -2.7]], [[1, 2, -3.4, -4.6, -5.1, -2.4521274053810718, -6]], [[2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.6, 7.1, -6.5, 2.5]], [[-1.1, 2.5, -3.7, 4.6, 5.1]], [[0.1, 1.5, 2.4, 2.9, 3.2, 2.273475836168904, 4.6, 5.1, 6.7]], [[1, 3, 3.4, -4.6, 5.1, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 0, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5]], [[-6, -2.4521274053810718, 1.1, 2.5, -3.7, -4.6, -5.2, 1]], [[2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.6, 7.1, -6.5, 2.9, 3.6]], [[1, 2, -6, -3.4, -4.6, -5.1, -6]], [[1.1, 2.5, -3.7, 5.2, 6]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, -6.5]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, -1, 4.5, 5, 5.5, 6, 2]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 6.6775046302601595, 2]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 5.5, 6, 2, 2]], [[-9.99, 2.5, -3.7, -4.6, 5.2, 6, 1.1]], [[-5, -4.5, -4, 5.2, -3, -2.5, -2, -1.5, -1, -0.5, 0, 2, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5]], [[-5, -4.5, -4, -3, -2.5, -2, -1.5, -1, 3.4904607835802204, -0.5, 0, 0.5, 1, 1.5, 2.5, 3, 3.5, 4, 4.5, 5]], [[2.4, 4.2, 0, -1.5, -2.7, 7.1, -6.5, -2.7]], [[3.14, -8.09, 2.71, 0.69, 1.62, -9.721676958355848, 6.28, -14.04]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, -1, 5, 5.5, 6, 2]], [[-1.1, -2.7, -3.7, 4.6, -1.4030222827046124, 5.1, 6]], [[-1.1, 2.5, 3.9888913701360824, -3.7, 4.6, 5.1]], [[0.1, 1.5, 2.4, 2.9, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 5.1, 6.7]], [[1.1, 2.5, -3.7, -1.4030222827046124, -4.6, -5.2, 0, -6]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 7.1, -4.6]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 6.28]], [[-1.1, 3.9888913701360824, -3.7, 4.6, 5.1]], [[1, 2, 3.4, -4.6, 5.1, 6, 2]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, -0.5]], [[2.4, 4.2, 0, -1.5, -2.7, -6.5, -2.7]], [[0.1, 3.9888913701360824, 1.5, 2.4, 2.9, 3.2, 2.273475836168904, 4.6, 5.1, 6.7, 0.1]], [[3.14, -8.09, 0.3215624746733021, 2.71, 0.69, 1.62, -9.721676958355848, 6.28, -14.04]], [[0, 0.5, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6]], [[1.1, 2.5, -3.7, -4.6, -3.5, -5.2, -6, -4.6]], [[-1.1, 2.5, -2.5, -3.7, 4.6, -1.4030222827046124, 5.1, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 4.5, 5, -0.5]], [[2.4, 4.2, 0, -1.5, -2.7, -6.5]], [[0.1, 1.5, 2.4, 2.9, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 6.7, 6.7]], [[-2.7, -3.7, 4.6, -1.4030222827046124, 5.1, 6]], [[1.1, 2.5, -3.7, -4.6, -5.2, 0, -6]], [[-1.1, 2.5, -3.7, 4.6, 3.4]], [[0.1, 1.5, 2.4, 2.3547386137496993, 2.9, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 6.7, 6.7, 2.2366791542480873]], [[4.5, -1.1, -2.7, -3.7, 4.6, -1.4030222827046124, 5.1, 6]], [[-1.1, 1.62, 2.5, 3.5, -3.7, 4.6, 5.1, 6, 4.6]], [[-2, 2, 3.4, 6.28, -4.6, 5.1, 2]], [[0.1, 1.5, 2.4, 3.2, 2.2366791542480873, 2.273475836168904, -2.7, 4.6, 5.1, 6.7, 2.273475836168904, 3.2]], [[1, 1.5, 2, 2.5, -6, 3, -3.5, 4, -1, 5, 5.5, 6, 2]], [[1.1, 2.5, -3.7, -4.6, -3.5, -5.2, -6, -4.6, -4.6, -3.5]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5.5, 1, 6]], [[3.14, -8.09, 5.5, 0.69, 1.62, -9.721676958355848, 6.28, -14.04]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 7.1, 3.4904607835802204, 7.1]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 5, 5.5, 6, 2]], [[-2.5, 4.2, 0, -1.5, -2.7, 3.6, -3.7864140592085103]], [[1, 2, 0, 3.4, -4.6, 5.1, 6, 2, 2]], [[1, 2, 0, 1, 2.219466925563955, -4.6, 5.1, 6, 2, -1]], [[-2, 3.4, 6.477207896546531, -4.6, 5.1, 2]], [[-1.1, -2.7, -3.7, 4.6, -1.4030222827046124, -1.4319704534945266, 6]], [[1.1, 2.5, 5.1, -3.7, 5.2, 6, 2.5]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 6.6775046302601595, 7.1]], [[1.1, 2.5, -3.7, -4.6, 5.2, 6, -4.6]], [[2.4, 4.2, 0, -1.5, 2.219466925563955, -2.7, -6.5]], [[2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.4, 3.6, 7.1, -6.5, 2.5]], [[-7, 1, 2, -3.4, -4.6, -5.1, -2.4521274053810718, -6, -6]], [[0.1, 2.4, 2.273475836168904, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 5.1, 6.7]], [[-5.986694077231327, 2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.4, 3.6, 7.1, -6.5, 2.5]], [[1.1, -3.7, 5.2, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -1.5, -1, -0.5, 5, 0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 4.5, 5, -0.5]], [[-1.1, 2.5, -2.5, -3.7, 4.6, -1.4030222827046124, 5.1, 6, -1.1]], [[-1.1, 2.8132736798649614, -3.4, -3.7, 4.6, 3.4, 3.4]], [[1.1, 2.5, -4.6, -5.2, -6]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.0296477623825755, 4, 4.5, 5, 5.5, 6, 2, 2]], [[-5, -4.5, -4, -3, -2.5, -2, -1.5, -6, 3.4904607835802204, -0.5, 0, 0.5, 1, 1.5, 2.5, 3, 3.5, 4, 4.5, 5, 3.4904607835802204]], [[0.1, 1.5, 2.4, 2.9, 3.2, 2.273475836168904, 2.4, 4.6, 2.546264498725473, 5.1, 6.7]], [[1.1, 2.5, -3.7, 6]], [[2.5, -3.7, 4.6, 5.1]], [[1, 2, -6, -6, -3.4, -4.6, -5.1, -6]], [[-1.1, 1.62, 2.5, 3.5, -3.7, 4.6, 5.1, 6, 4.6, 4.6]], [[1.1, 2.5, 5.1, -3.7, 5.2, 5, 2.5, 5.1]], [[1, 2, 2.5, -4.6, -5.1, -2.4521274053810718, -6]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5.5, 1, 6, 5.5]], [[-1.1, 2.5, 3.9888913701360824, 4.6, 5.1]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 5.5, 6, 2, 2, 0]], [[0.1, 2.4, 2.273475836168904, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 4.334736767041201, 6.7]], [[0, 1, 1.5, 2, 2.5, -6, 0, 3, -3.0296477623825755, 4, 4.5, 5, 5.5, 6, 2, 2, 2.5]], [[3.14, 2.5145216637593935, -8.09, 5.5, 0.69, 1.62, -9.721676958355848, 6.28, -14.04]], [[2.4, 2.920636056879275, 0, -1.5, -2.7, 3.6, 6.28]], [[1.1, 2.5, -3.7, -0.5, -5.2, -6]], [[1.1, 2.5, 5.1, -3.7, 6, 1.6493522291861098]], [[6.9922715006859315, 2.4, 4.2, -1.5, -2.7, 3.6, 7.1]], [[-1.1, 1.62, 2.5, 3.5, -3.7, 2.1708877608703743, 5.1, 6, 4.6, 4.6]], [[-7, 1, 2, -3.4, -4.6, 0, -5.1, -2.4521274053810718, -6, -6, -4.106937042084065]], [[1.1, 2.5, 6]], [[-2.7, -3.7, 4.6, -1.4030222827046124, 5.1, 6, 6]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, -6.5, -2.7, 2.4]], [[1.1, 2.5, -3.7, 2.749995677486564, -1.4030222827046124, -4.6, -5.2, 0, -6]], [[1, 2, 0, 2.219466925563955, 2.5145216637593935, 5.1, 6, 2, -1]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5.5, 1, 6, 6.145489621506014]], [[1, 2, 0, 3.4, -4.6, 5.1, 6, 2, 2, 2]], [[1.1, 2.5, -3.7, 2.749995677486564, -1.4030222827046124, -4.6, 0.8223279570020958, -5.2, 0, -6]], [[1, 2, -6, -3.4, -4.6, -5.1, -6, -3.4]], [[2.4, 2.273475836168904, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 5.1, 6.7, 5.1]], [[2.4, 4.2, 0, 2.219466925563955, -2.7, -6.5]], [[1.1, 2.5, -3.7, -1.4030222827046124, -4.6, 0.8223279570020958, -3.5533453362323013, 0, -6]], [[4.763901218015793, 2.4, 4.2, 0, -1.5, -2.7, 3.6, -6.5, -1.4386495928063685, 2.4]], [[2.4, 4.2, 0, -1.4180889952675366, -2.7, 3.6, 7.1, 3.4904607835802204, 7.1]], [[-2.7, -3.7, 4.6, -1.4030222827046124, -0.6100297458611561, 5.1, 6]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, -0.6100297458611561]], [[-5, -4.5, -4, -3.5, -3, 3.2, -2, -1.5, -1, -0.5, 0, 0.5, 0, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 2.5]], [[-1.1, -1.269665958664233, 1.62, 2.5, 3.5, -3.7, 4.6, 5.1, 6, 4.6, 4.6, -1.269665958664233]], [[0, 0.5, 1, 1.5, 2, 2.5, 3.636734487171691, 3, 3.5, 4, 4.5, 5, 5.5, 6]], [[2.5145216637593935, -8.09, 5.5, 0.69, 1.62, -9.721676958355848, 6.28]], [[3.415302610166583, -8.09, 2.71, 0.69, 1.62, -9.99, 6.28, -14.04]], [[2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.6, 7.1, -6.5, 3.6, 3.6]], [[-1.1, 2.5, 3.9888913701360824, 4.6, 5.1, 2.5]], [[-2.7, -3.7, 4.6, -1.4030222827046124, -1.4319704534945266, 6]], [[1, 2, 3.4, -4.6, 5.1, 6, 3.4]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, -9.99, 6, 2, 2]], [[2.4, 4.2, 0, -2.7, 3.6, 6.6775046302601595, 7.1]], [[2.4, 4.2, 0, -1.5, -2.7, 4.117397448699318, -6.5]], [[2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.6, 7.1, -6.5, 3.6, 4.2]], [[2.4, 4.2, 0, -1.5, -2.7, -6.5, 5.1, -2.7, 4.2]], [[-1, 1, 2, 0, 3.4, -4.6, 6, 2]], [[-1.1, 2.5, 4.6, 5.1, 6]], [[1.1, 2.5, 4.334736767041201, -1.4030222827046124, -4.6, -5.2, 0, -6]], [[1.1, 2.5, -2.4521274053810718, 5.1, -3.7, 5.2, 6, 2.5]], [[2.4, 4.2, 0, 2.273475836168904, -1.5, -2.7, 3.6, -0.6100297458611561]], [[-2.7, -4.04983483792288, 4.6, -1.4319704534945266, 6]], [[-9.99, 2.5, -4.6, 5.2, 6, 1.1]], [[4.6, 2.4, 4.2, 0, -1.5, -2.7, 3.6, 6.6775046302601595, 7.1, 7.1]], [[1.62, 2.5, 3.5, -3.7, 4.6, 5.1, 6, 5.1019079087963215]], [[0, 0.5, 1, 1.5, 2, 2.5, 3.636734487171691, 3, 3.5, 4.5, 5, 5.5, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5]], [[-1.1, -2.7, 4.6, -1.4030222827046124, -1.4319704534945266, 6]], [[-5, 4, -4.5, -4, -3.5, -3, -6, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 6.6775046302601595, 2]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.0296477623825755, 4, 5, 5.5, 6, 2, 2]], [[1.1, 2.5, -4.6, 6.9922715006859315, 1.817939135685336, -5.2, -6, -4.6]], [[-4.344536610349558, -1.1, 2.5, -3.7, 4.6, 5.1, 6]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4.5, 5.5, 1, 6, 5.5]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1.4319704534945266, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5]], [[2.5, -3.7, 4.6, 3.4]], [[1.1, -3.7, -4.6, -5.2, -6]], [[-5, 4, -4.5, -4, -3.5, -3, -6, 5, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 6, 6.266841951443214, 2, 6.6775046302601595]], [[2.4, 2.273475836168904, 3.2, 2.2366791542480873, 2.273475836168904, 3.4904607835802204, 4.6, 5.1, 6.7, 5.1]], [[1, 2, 2, 0, 3.4, -4.6, 5.1, 6, 2, 2, 2]], [[2.4, 4.2, 0, 2.273475836168904, -1.5, -2.7, 3.6]], [[2.273475836168904, 0, -1.5, -3.8477823477077773, 3.6, 7.1, -4.6]], [[1.1, 1.9937426462347088, 4.6, -4.6, -1.4180889952675366, -6]], [[1.1, 2.5, -3.7, -0.5, -5.2, -6, -5.2]], [[1.1, 2.5, -3.7, -0.5, -5.2, -6, 3.415302610166583, 3.4904607835802204]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, -0.6100297458611561, -0.6100297458611561]], [[1, 2, 0, 2.219466925563955, 2.5145216637593935, 0, 5.1, 6, 2, -1]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5, 0]], [[2.4, 4.2, -2, 2.273475836168904, -1.5, -2.7, 3.6]], [[2.4, 2.273475836168904, 3.2, 2.2366791542480873, 2.273475836168904, 3.4904607835802204, 4.6, 5.1, 6.7, 5.1, 3.2]], [[3.14, -8.09, 5.5, 2.8132736798649614, 3.8913933006601304, 0.69, 1.62, -9.721676958355848, 6.28, -14.04]], [[1, 1.5, 2, 2.5, -6, 3, -3.5, 4, -1, 5, 5.0893253204939715, 6, 2]], [[-1.1, 2.5, 6.266841951443214, 4.6, 5.1, 6, -3.7]], [[0, -5.986694077231327, 2.4, 4.2, 0, -1.5, -8.09, -2.7, 3.4, 3.6, 7.1, 2.5]], [[0, 0.5, 1, 1.817939135685336, 2, 3, 3.5, 4, 4.5, 5, 5.5, 6, 2]], [[2.5145216637593935, -8.09, 5.5, -0.6100297458611561, 0.69, 1.62, -9.721676958355848, 6.28]], [[1, 2, 3.4, -4.6, 6, 2]], [[0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 4.5, 5, 5.5, 6]], [[1, 2, 7, 3.4, -4.6, 5.1, 6, 6, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, 5, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5]], [[-9.99, 2.5, -4.6, 6, 1.1]], [[1.1, -4.949230056545978, 2.5, -3.7, -4.6, 5.2, 6, -4.6]], [[-8, 1, 2, -3.4, -4.6, -5.1, 3.14, -6, -6, 1]], [[2.4, 4.2, 0, 2.273475836168904, -1.5, 4.445695355838067, -2.7, 3.6, -0.6100297458611561]], [[2.4, 4.2, 2.273475836168904, -1.5, 2.546264498725473, -2.7, 3.6, -0.6100297458611561]], [[2.4, 4.2, 0, -1.4180889952675366, -2.7, 3.6, 0.1, 3.4904607835802204, 7.1]], [[-1.1, 3.9888913701360824, -3.7, 4.6, 5.1, -1.1]], [[1.5, 2.9, 3.2, 4.6, -4.344536610349558, 5.1, 6.7]], [[1.1, 2.5, -3.7, -1.4030222827046124, -4.6, -5.2, 0, -6, -5.2]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, 4, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, 4.117397448699318, -0.5]], [[0, 2.4, 4.2, 0, -1.5, -2.7, 3.6, 6.6775046302601595, 7.1]], [[-5, 4, -1, -4.5, -4, -3.5, -3, -6, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 6.6775046302601595]], [[2.4, 4.2, -3.5, 0, -1.5, -2.7, 3.6, 7.1, -4.6]], [[0, 2.4, 4.2, 0, -1.5, -2.7, 3.6, -0.6100297458611561, 2.4]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.636734487171691, 3, 3.5, 4, 4.5, 5, 5.5, 6, 4]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1, -0.5, 0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 4.5, 5, -0.5]], [[1.088711792263298, 2.5, 5.1, -3.7, 6, 1.6493522291861098, 2.5]], [[1.1, 2.5, -3.7, 5.2]], [[0, 0.5, 1, 1.5, 2, 2.5, 1, 3, 3.5, 4, 4.5, 5, 5.5, 6]], [[1.1, -4.949230056545978, 2.5, -3.7, 4.6, 6, -4.6]], [[4.2, 0, 2.219466925563955, -2.7, -6.5]], [[1.1, -4.949230056545978, 3.0687507091327326, -3.7, 4.6, 6, -4.6, -4.949230056545978]], [[1, 2, 3.4, -4.6, 5.1, 6, 1]], [[-1.1, 2.5, 3.9888913701360824, -3.7, 4.6, 5.1, -1.1]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 4.376774415010225, 5, -0.5, -2.5]], [[-1, 1, 2, 0, 3.4, -4.6, 6, 2, 0]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5.5, 1, 6, 6.145489621506014, 4]], [[1, 2, -6, -3.071142782022182, -3.4, -4.6, -5.1, -6, -6, -3.4]], [[3.14, 2.5, -3.7, -0.5, -5.2, -6, -5.2, 1.1, -5.2]], [[1.1, 2.5, -3.7, -0.5, 6.477207896546531, -3.186467207295819, -6]], [[1.1, 2.5, -0.5, -5.2, -6, -5.2]], [[1.9937426462347088, 4.6, -4.6, -1.4180889952675366, -6, -4.6, 4.6]], [[1, 2, 4, 3.4, -4.6, 5.1, 6, 2, 2]], [[1.1, 2.5, -3.7, -4.949230056545978, 5.2, 6, -4.6]], [[1.1, -2.8445641444531704, 2.5, -3.7, 5.2]], [[1.62, 2.5, 3.5, -3.7, 4.6, 5.910939357877671, 6, 5.1019079087963215]], [[0.1, 1.5, -2.7, 2.4, 2.9, 3.2, 2.273475836168904, 4.6, 5.1, 6.7]], [[-5, -4.5, -4, -3.5, -3, -1.5, -1, -0.5, 5, 0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 4.5, 5, -0.5]], [[-1.1, 1.62, 2.5, 3.5, -3.7, 4.6, 5.1, 6, 4.6, 1.62]], [[1, 1, 7, 2.71, -4.6, 5.1, 6, 6, 6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 4.445695355838067, 4, 6.6775046302601595, 2]], [[1, 3, 5, 3.4, -4.6, -8, 5.1, 6]], [[-1.1, 2.5, 3.9888913701360824, -3.7, 4.6, 1.9937426462347088, 5.1]], [[2, -1.1, 1.62, 2.5, 3.5, -3.7, 4.6, 5.1, 6, 4.6]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, -1, 4.5, 5, 5.5, 2, 0]], [[-1.1, 5.406170932089104, 2.5, 3.9888913701360824, -3.7, 4.6, 1.9937426462347088, 5.1, -1.1]], [[1.1, -4.1555315727634365, 5.2]], [[1.1, 2.5, -3.7, 2.749995677486564, -1.4030222827046124, -4.6, 0.8223279570020958, -5.2, -6]], [[0.1, 1.5, 2.4, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 5.1, 6.7]], [[1.1, 2.5, -4.6, -5.2, -7]], [[-2, 1, 2, 0, 3.4, -4.6, 6, 0, 0]], [[0.1, 1.5, 2.9, 3.2, 2.273475836168904, 2.4, 2.273475836168904, 2.546264498725473, 5.1, 6.7]], [[2.4, 4.2, 0, 4.2, -8.09, -2.7, -3.090598813501536, 3.4, 3.6, 7.1, -6.5, 2.5]], [[3.415302610166583, -8.09, 2.71, 0.69, 1.62, -9.99, 6.28, -14.698999803874095]], [[-1.1, -5.1, 6.266841951443214, 4.6, 5.1, 6, -3.7]], [[1, 2, 0, 2.219466925563955, 2.5145216637593935, 5, 6, 2, -1]], [[4.2, 0, 2.219466925563955, -2.7, -6.5, 0, 0]], [[-2, 2, 0, 3.4, -4.6, 6, 0, 0]], [[1.1, 2.5, -2.4521274053810718, 5.1, -3.7, 5.2, -7, 2.5]], [[1, 2, 3.4, -4.6, 5.1, -5]], [[-1.1, 2.5, -2.5, -3.7, 4.6, -1.4030222827046124, 6, -1.1]], [[1.1, -3.7, -4.6, -5.2]], [[-1.1, -2.7, -2.052739052752247, 4.6, -1.4030222827046124, 5.1, 6]], [[-1.1, 2.5, 3.9888913701360824, 4.6, 2.5]], [[1, 2, 7, 3.4, -4.6, 1.7612406893234727, 6, 6, 6]], [[-1.1, -2.7, 4.6, -1.4319704534945266, 6]], [[-5, -4.5, -4, -3.5, -3, 3.2, 5, -2, -1.5, -1, -0.5, 0, 0.5, 0, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 2.5]], [[2.4, 4.2, 0, -1.4180889952675366, -2.7, 3.6, 7.1, 3.4904607835802204, 7.1, 0]], [[2.5, 5.1, -3.7, 6, 1.6493522291861098, 2.5]], [[2.0201484617102117, 4.2, 0, -1.5, -2.7, 3.6, 7.1, 3.4904607835802204, 7.1]], [[-1.1, 1.62, 2.5, 3.5, -3.3050773104066433, 2.1708877608703743, 5.1, 6, 4.6, 4.6]], [[-5, -4.5, -4, -3.5, -3, 3.2, -2, -1.5, -1, -0.5, 0, 0.5, 0, 1.5, 2, 2.5, 3, 3.5, 4, 5, 2.5, -2]], [[1.1, 2.5, -3.7, -1.4030222827046124, -4.6, -5.2, 0, -6, -5.2, -4.6]], [[2.0201484617102117, 4.2, 0, -1.5, -2.7, 3.6, 3.4904607835802204, 7.1]], [[0, 0.5, 1, 1.5, 2, 2.5, 3, 3.636734487171691, 3, 3.5, 4, 4.5, 5, 5.5, 6, 4, 4.5]], [[2.4, 0.8223279570020958, 4.2, 0, -1.4180889952675366, -2.7, 3.6, 0.1, 3.4904607835802204, 7.1]], [[-5, -4.5, -4, 5.1019079087963215, -3.5, -3, -1.5, 4.5, -1, -0.5, 5, 0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 5, -0.5]], [[2.5, 3.8913933006601304, -3.7, 4.6, 5.1, 4.6]], [[2, -6, -2.4521274053810718, 1.1, 1.33452930255498, -3.7, -4.6, 1, 1.1]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, 5, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5, 4.5]], [[-5, 4, -1, -4.5, -4, -3.5, -3, -6, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 6.6775046302601595, -5]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, 4, -0.5, 0, 0.5, 1, 0, 1.5, 2, 2.5, 3, -4, 4.5, 5, 4.117397448699318, -0.5]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 5.5, 2]], [[1.1, 2.5, -3.7, -4.949230056545978, 5.2, 6, -4.6, 2.5, -4.6]], [[0, 1, 2, 2.5, -6, 3, -3.5, 4, -1, 5, 5.5, 6, 2]], [[-7, 1, 2, -3.4, -7.378009948706506, -4.6, -5.1, -2.4521274053810718, -6, -6]], [[1.1, -4.949230056545978, -4.264737834772669, 3.0687507091327326, -3.7, 4.6, 6, -4.6, -5.986694077231327, -4.949230056545978]], [[2.4, 4.2, 0, 2.1708877608703743, -2.7, 3.6, 6.6775046302601595, 7.1]], [[-1.1, 2.5, 3.5, -3.7, 2.1708877608703743, 5.1, 6, 4.6, 4.6]], [[1, -6, -3.4, -4.6, -5.1, -6, -5.1]], [[1.1, -3.071142782022182, -3.7, -4.949230056545978, 5.2, 6, -4.6, 2.5, -4.6]], [[1.1, 2.5, -3.7, -4.6, -5.2, 2.3547386137496993, 0, -6]], [[-5, -4.5, -4, -3.5, -3, 3.2, 5, -2, -1.5, -1, -0.5, 0, 0.5, 0, 2, 2.5, 3, 3.5, 4, 4.5, 5, 2.5, -5, 1.5]], [[1, 2, -3.4, -4.6, -5.1, -6, -6]], [[-1.1, 2.5, -2.5, 4.6, -1.4030222827046124, 5.1, 6, -1.1]], [[-3.0296477623825755, 3.14, 2.5, -3.7, -0.5, -5.2, -6, 1.1, -5.2]], [[1, 1, 2, 3.4, -4.6, 5.1, 6, 1]], [[-1.4386495928063685, -8.09, 5.5, 0.69, 1.62, -9.721676958355848, 6.28, -14.261675339369988]], [[-5, -5.089800239845543, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5]], [[2.4, 4.2, -2.7, 3.6, 6.6775046302601595, 7.1]], [[-1.1, 2.5, 4.6, 2.5]], [[3.2, -4.949230056545978, 2.5, -3.7, -4.6, 5.2, 6, -4.6]], [[2.5169349786213426, -1.1, 5.406170932089104, 2.5, 3.9888913701360824, -3.7, 4.6, 1.9937426462347088, -0.6100297458611561, -1.1]], [[1.1, 2.5, -3.7, -4.6, -5.2, -6, -4.6, -4.6, -3.5]], [[0, 1, 1.5, 2, 2.5, -6, 0, 3, -3.0296477623825755, 4, 4.5, 5, 5.5, 6, 2, 2, -5.986694077231327, 2.5]], [[2.71, 2.5, -3.7, 2.749995677486564, -1.4030222827046124, -4.6, -5.2, 0, -6]], [[-1.1, 2.121057984229812, 0.8957346503262392, 2.5, 6.266841951443214, 4.6, 5.1, 6]], [[-3.7, 5.2, 6, 5]], [[0.1, 1.5, 2.4, 2.9, 3.2, 2.273475836168904, 2.219466925563955, 6.7, 6.7]], [[1.1, 2.5, -0.5, -5.2, -6, 3.415302610166583, 3.4904607835802204, 2.5]], [[1.1, 2.5, -0.5, -5.2, -6, 3.415302610166583, 1.4422096460861824, 3.4904607835802204, 2.5]], [[1.1, -2.8445641444531704, -3.7, 5.2, -2.8445641444531704]], [[-3.7, 5.2, 6, 5, -3.7]], [[1.1, -3.071142782022182, -3.7, -4.5, 5.2, 6, -4.6, -4.56071541305902, 2.5, -4.6, -4.56071541305902]], [[-1.1, 4.6, 2.5]], [[1.1, 2.5, -3.7, -4.6, -5.2, -4.949230056545978, -6, -4.6, -4.6, -3.5, -6]], [[-1, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 5.5, -0.5, 6, 2]], [[1, 2, 2, 0, 3.4, -4.6, 5.1, 6, 2, 3, 2]], [[3.14, 3.0862421726231712, -9.721676958355848, -8.09, 5.5, 0.69, 1.62, -9.721676958355848, 6.28, -14.04]], [[-1.1, 1.62, 3.5, -3.7, 4.6, 5.1, 6, 4.6, 1.62]], [[1, 2, 0, 3.4, 2.546264498725473, 4.763901218015793, 5.1, 6, 2, 2]], [[-5, 4, -4.5, -4, -3.5, -3, -6, 5, -2.5, -1.5, -1, -0.5, 0, 0.5, 1, -4, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 6, 6.266841951443214, 2, 6.6775046302601595]], [[-2.7, -3.7, 4.6, -4, -1.4030222827046124, 2.749995677486564, 6, 6, -1.4319704534945266]], [[-1, 1, 2, 2.5, -4.6, -5.1, -2.4521274053810718, -6]], [[-1.1, 1.62, 2.5, 3.5, -3.7, 5.1, 6, 4.6, 1.62]], [[-5, -4.5, -4, 5.2, -3, -2.5, -2, -1.5, -1, -0.5, 0, 2, 0.5, 1, 1.5, 2.5, 3, 3.5, 4, 4.5, 5]], [[-1.1, 3.9888913701360824, -3.7, 4.6]], [[-5, -5.089800239845543, -4, -3.5, -3, -2.5, -2, -1.5, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -2.1202168585911467, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 4.445695355838067, 4, 6.6775046302601595, 2, 2.1708877608703743]], [[1.1, 2.5, -3.7, -1.4030222827046124, -4.6, 0.8223279570020958, -5.2, -6]], [[1.1, -3.071142782022182, -3.7, -4.5, 5.2, 6, -4.6, -4.56071541305902, 2.5, 6.7, -4.6, -4.56071541305902]], [[2.4, 4.2, 2.273475836168904, -1.5, 2.546264498725473, -2.6419541777974347, 3.6, -0.6100297458611561]], [[-5, -4.5, -4, -3.5, -3, -2.5, -1.5, -1, 5, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5, 4.5]], [[1.1, 2.5, -3.7, -4.6, -5.2, -6, -4.673541451357892, -4.6, -3.5]], [[-1.1, 1.5831905408125861, 2.5, -3.7, 4.6]], [[-2.7, -1.4030222827046124, 5.1, 6, 6]], [[0.1, 2.4, -4.56071541305902, 4.264531624920706, 3.2, 2.2366791542480873, 2.273475836168904, 4.6, 6.7, 6.7]], [[3.14, -8.09, 2.71, 0.69, 1.62, -9.721676958355848, 1.163099159985125, 6.28, -14.04]], [[-5, -4.5, -4, 5.1019079087963215, -3.5, -3, -1.5, 4.5, -1, -0.5, 5, 0, 0.5, -1.7075174220993832, 1, 1.5, 2, 3, 3.5, 4, 5, 2.8132736798649614]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, 5, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 5, -0.5, 4.5]], [[-3.4191045010192274, -5, -4.5, -4, 5.2, -3, -2.5, -2, -1.5, -1, -0.5, 0, 2, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5]], [[-5, -4.5, -4, -3, -2.5, -2, -1.5, -1, 3.4904607835802204, 5, -0.5, 0, 0.5, 1, 1.5, 2.5, 3, 3.5, 4, 4.5, 5]], [[1.1, 2.5, -3.7, -0.5, -5.2, -6, 4.763901218015793]], [[1, 1, 2, 3.4, -4.6, 5.1, 6, 1, 1]], [[-8, 1, 2, -3.4, -4.6, 2.121057984229812, -5.1, 3.14, -6, -6, 1]], [[1.1, -4.949230056545978, 2.5, -2.894496233330983, 4.6, 6, -4.6]], [[3.14, -8.09, 0.3215624746733021, 2.71, 0.69, 1.62, -14.505612154397998, 6.28, -14.04]], [[0, 1, -2.4521274053810718, 2, 2.5, -6, 3, -3.5, 4, 5.097104505395701, -1, 4.5, 5, 5.5, 6, 2]], [[1.1, -3.7, -1.4030222827046124, -4.6, -5.2, 0, -6, -5.2, -5.2]], [[-5, 4, -1, -4.5, -4, -3.5, -3, -8, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, -3.8477823477077773, 2, 2.5, 3, 3.5, 4, 6.6775046302601595, -5]], [[-2, 2, 6.28, -4.6, 5.1, 2, 2]], [[0, 1, 1.5, 2, -6, 3, -3.5, 4, -1, 5, 5.5, 6, 2, 5.5]], [[-1.1, -5.1, 6.266841951443214, 4.6, 5.1, 6, -3.7, 4.6]], [[1, 1.5, 2, 2.5, -6, 3, -3.5, 4, -1, 5, 5.5, 6, 2, 7, 4]], [[-1.1, 2.5, 4.6, 2.5, 4.6]], [[-1, -7, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 5.5, -0.5, 6, 2]], [[-1.1, 1.4422096460861824, 5.2, 3.1842930235177858, -3.7, 4.6, 5.1, -1.1]], [[1.5, -2.8445641444531704, 2.9, 3.2, 4.6, -4.344536610349558, 5.1, 6.7]], [[-9.99, 2.5, -4.6, 6, 1.1, 1.1, 1.1]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.0296477623825755, 4, 4.5, 1, 5, 5.5, 6, 2, 2]], [[1.1, 5.715004335425014, 2.5, 5.1, -3.7, 6, 1.6493522291861098]], [[-2.7, -3.7, 4.6, -1.4030222827046124, 5.1, -1.84062214755369]], [[0.1, 1.5, 2.307038896064827, 2.2366791542480873, 2.273475836168904, 4.6, 5.1, 6.7]], [[6, 2, -6, -3.4, -4.6, -5.1, -6]], [[-5, 4, -4.5, -4, -3.5, -3, -6, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 4, 6.6775046302601595, 2]], [[1, 1, 5, 3.4, -4.6, 5.1, 6, 1, 2]], [[3.6, -2.7, -3.7, 4.6, -4, -1.4030222827046124, 2.749995677486564, 6, 6, -1.4319704534945266]], [[1, 2, 0, 3.4, 2.546264498725473, 4.763901218015793, 6, 2, 2]], [[3, 3.4, -4.6, 5.1, 3.8069780653403997, 6]], [[1, 2, 7, 3.4, -4.6, 1.7612406893234727, 6, 6]], [[2.4, 4.2, 0, -1.5, -2.7, 3.6, 6.28, 6.28]], [[2.4, 4.2, 0, 2.273475836168904, -1.5, 4.445695355838067, -2.7, -0.6100297458611561, 4.445695355838067]], [[1, 2, 2, 0, 3.4, -4.6, 5.1, 6, -3, 2, 2, 2]], [[-2.7, -4.04983483792288, 6.9922715006859315, -1.4319704534945266, 6, -1.4319704534945266]], [[-5, 1, 2, -6, -6, -3.4, -4.6, -6]], [[-7, 2, -3.4, -7.378009948706506, -4.6, -5.1, -2.4521274053810718, -6, -6]], [[1.1, 2.5, -4.6, 6.9922715006859315, 1.817939135685336, -5.2, -2, -4.6, -6]], [[-5.1, 6.266841951443214, 4.6, 5.1, 6, -3.7, 4.6]], [[-5, -4.5, -4, -3.5, -3, -2.5, -1.5, -1, 6, -0.5, 0, 0.5, 1, 1.5, 2, 2.5, 3, -4, 4.5, 5, -0.5, 4.5]], [[-5, -4.5, -4, 5.2, -3, -2.5, -2, -1.5, -1, -0.5, 0, 2, 0.5, 1, 1.5, -2, 2.5, 3, 3.5, 4, 4.5, 5, 2]], [[-5, 4, -6, -1, -4.5, -4, -8, -3.5, -3, -6, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 4, 6.6775046302601595, -5]], [[2.4, 5.2, 4.2, 0, -1.4180889952675366, -2.7, 3.6, 0.1, 3.4904607835802204, 7.1]], [[-9.99, 2.5, 5.2, 6, 1.1]], [[-7, 1, 2, -3.4, -7.378009948706506, -4.6, -5.1, -2.4521274053810718, -7, -6]], [[1.62, 2.5, 3.5, 1.9833613278429287, -3.7, -4.949230056545978, 5.1, 6, 5.1019079087963215]], [[-1.1, -2.7, -3.7, 4.6, -1.4030222827046124, 5.1, 6, -1.4030222827046124]], [[1.1, -3.7, -4.6, -5.2, -4.673541451357892, -4.6, -3.5]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 5.5, 6, 1.4422096460861824, 2, 2]], [[1.1, 2.5, -3.7, -0.5, -6]], [[1.1, 2.5, -3.7, 2.749995677486564, -1.4030222827046124, -4.6, 0.8223279570020958, -5.2, 0, -6, 0.8223279570020958]], [[-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1, 2.1708877608703743, 2, 2.5, 3, 3.5, 6.6775046302601595, 2]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, 4.5, 5, 6.781023380124337, 6, 2, 4]], [[-1.1, 2.5, -3.7, 4.6, 5.1, 6, 1.62]], [[2.4, 4.2, -2, 2.273475836168904, -1.5, -2.7, 4.511943821816748]], [[2.5, -3.7, 5.2, 6, 2.5]], [[6.7, 2.5, -3.7]], [[1.1, 2.5, -3.7, -4.6, -5.2, 2.3547386137496993, 4.511943821816748, 0, -6]], [[-1.1, 1.62, 3.5, -3.7, 4.6, 5.1, 3, 4.6, 1.62]], [[2.4, 4.2, -3.5, 0, -1.5, -2.7, 3.6, 7.1, -4.6, 2.4]], [[-1.1, 2.121057984229812, 0.8957346503262392, 2.5, 6.266841951443214, 4.6, 5.1, 5, 6.255431757016205, -1.1]], [[2.4, 4.2, 0, -1.4180889952675366, -2.7, 3.6, 7.1, 3.4904607835802204, 7.1, 0, 0]], [[0, 0.5, -1, 1.5, 2, 2.5, 5, 3.5, 4, 5.5, 1, 0, 6, 6.145489621506014, 4]], [[2.4, 4.2, 2.273475836168904, -1.5, 2.546264498725473, -2.6419541777974347, 3.6, 3.14, -0.6100297458611561]], [[2.4, 4.34685453735128, 0, -1.5, -2.7, 3.6, 6.28]], [[0, 0.5, 1.5, 2, 2.5, 3, 1.6493522291861098, 4, 4.5, 5, 5.5, 6, 1.5]], [[-1.1, 1.4422096460861824, 5.2, 3.1842930235177858, -3.7, 5.652668931909759, 4.6, 7.258417242145231, -1.1]], [[1, -2.34580378504941, 2, -6, -3.4, -4.6, -5.1, -6]], [[0, 0.5, -1, 1.5, 2, 2.5, 5, 3.5, 4, 5.5, 1, -2, 6, 6.145489621506014, 4]], [[0, 1, 1.5, 2, 2.5, -6, 3, -3.5, 4, -1, 4.5, 5, 5.5, 2, 0, 1.5, -6]]]\n    results = [14, 14, 84, 29, 6, 10230, 200000000, 75, 1086, 0, 1, 2, 135, 54, 84, 3000, 385, 0, 14, 29, 9, 3, 58, 29, 33, 2, 376, 50, 4, 8, 3100, 10, 270, 396, 139, 83, 360, 6, 389, 16, 286, 18, 33, 7, 4000, 151, 360, 3125, 8, 29, 6, 0, 906, 199, 1825, 394, 1906, 432, 45, 4004, 33, 8, 905, 3410, 2519, 6, 3414, 87, 376, 4, 180, 1549, 248, 24, 17, 16, 5, 42, 85, 18, 624, 65, 4, 97, 910, 5, 425, 3438, 42, 16, 300, 215, 4700, 6, 1630, 84, 112, 426, 3116, 5, 75, 63, 919, 36, 61, 1806, 286, 6, 1616, 160, 1789, 441, 109, 110, 116, 91, 99, 420, 140, 182, 195, 155, 153, 114, 105, 135, 127, 185, 75, 146, 135, 139, 178, 181, 202, 69, 83, 256, 159, 148, 145, 120, 221, 141, 114, 90, 230, 88, 147, 188, 270, 69, 196, 224, 108, 107, 137, 153, 155, 88, 148, 174, 195, 157, 211, 221, 173, 264, 303, 111, 159, 196, 83, 259, 184, 215, 275, 118, 146, 247, 162, 254, 146, 74, 295, 140, 273, 116, 162, 266, 166, 298, 183, 181, 272, 155, 102, 108, 188, 233, 158, 118, 268, 154, 160, 108, 95, 74, 178, 197, 97, 90, 167, 114, 468, 96, 104, 124, 111, 131, 200, 82, 152, 90, 202, 217, 292, 331, 164, 123, 103, 323, 85, 278, 292, 177, 246, 168, 87, 251, 146, 136, 90, 172, 308, 240, 193, 98, 189, 68, 193, 149, 248, 84, 143, 211, 124, 119, 152, 244, 145, 110, 91, 112, 138, 142, 201, 213, 215, 263, 164, 292, 65, 130, 150, 275, 330, 314, 146, 79, 142, 151, 135, 276, 450, 109, 186, 155, 242, 403, 214, 124, 341, 120, 187, 378, 276, 112, 85, 254, 358, 198, 227, 187, 211, 157, 156, 400, 128, 285, 283, 99, 148, 153, 92, 76, 155, 147, 121, 196, 174, 141, 310, 284, 206, 181, 149, 161, 134, 129, 207, 377, 56, 135, 84, 356, 240, 219, 115, 115, 240, 174, 180, 274, 262, 196, 315, 171, 119, 273, 276, 215, 314, 144, 164, 207, 160, 232, 292, 194, 177, 163, 141, 73, 127, 196, 177, 112, 117, 113, 177, 213, 194, 357, 141, 250, 184, 92, 159, 166, 163, 215, 128, 207, 173, 206, 231, 175, 38, 166, 104, 66, 283, 159, 184, 252, 88, 123, 107, 83, 152, 140, 93, 83, 267, 222, 133, 273, 242, 122, 185, 156, 279, 118, 119, 227, 144, 88, 241, 281, 128, 98, 215, 217, 94, 98, 116, 439, 116, 199, 245, 314, 66, 152, 90, 74, 168, 79, 363, 81, 151, 85, 232, 185, 277, 112, 203, 92, 198, 208, 212, 283, 139, 220, 203, 70, 319, 216, 83, 271, 131, 164, 203, 190, 182, 175, 224, 187, 193, 272, 40, 177, 117, 319, 162, 141, 176, 161, 170, 140, 324, 246, 155, 94, 250, 253, 176, 207, 202, 173, 129, 215, 199, 246, 97, 160, 119, 149, 171, 136, 153, 293, 77, 119, 456, 219, 94, 111, 121, 189, 168, 208, 267, 150, 137, 171, 177, 162, 223, 222, 242, 116, 171, 126, 121, 190, 171, 131, 102, 163, 161, 345, 177, 197, 210, 163, 191, 239, 167, 164, 303, 109, 149, 183, 189, 265, 120, 172, 138, 247, 103, 246, 217, 96, 187, 309, 120, 119, 247, 201, 222, 358, 132, 251, 144, 432, 132, 274, 173, 132, 157, 68, 113, 243, 223, 161, 275, 347, 180, 225, 129, 18747, 84, 3064, 278, 466, 92, 82, 109, 168, 134, 126, 156, 224, 148, 322, 125, 293, 105, 101, 234, 194, 422, 205, 174, 102, 292, 269, 79, 188, 94, 341, 436, 283, 349, 229, 317, 369, 3035, 162, 0, 126, 3, 0, 245, 69, 14, 6, 2, 218, 213, 214, 235, 120, 117, 179, 159, 95, 228, 80, 158, 114, 194, 104, 244, 127, 94, 91, 215, 203, 218, 191, 226, 198, 143, 420, 190, 112, 96, 167, 100, 135, 104, 87, 113, 195, 79, 175, 421, 181, 124, 121, 186, 75, 180, 111, 99, 60, 198, 137, 161, 129, 187, 190, 149, 158, 447, 199, 189, 59, 117, 108, 125, 77, 139, 168, 126, 84, 244, 180, 163, 269, 85, 207, 122, 85, 90, 218, 249, 176, 58, 79, 163, 186, 164, 95, 194, 87, 218, 152, 227, 456, 88, 83, 98, 168, 170, 196, 49, 147, 104, 109, 100, 207, 121, 110, 136, 198, 83, 85, 126, 199, 111, 55, 215, 188, 198, 244, 420, 251, 96, 76, 125, 263, 167, 100, 260, 140, 78, 107, 116, 143, 64, 82, 182, 257, 171, 182, 179, 68, 255, 193, 159, 132, 178, 180, 59, 90, 365, 214, 125, 64, 115, 86, 108, 115, 55, 100, 179, 68, 230, 472, 190, 165, 233, 177, 244, 77, 173, 230, 204, 146, 142, 208, 89, 73, 136, 88, 155, 125, 220, 168, 252, 144, 64, 223, 185, 107, 58, 183, 115, 74, 138, 110, 97, 190, 78, 223, 181, 149, 116, 99, 123, 133, 126, 62, 171, 162, 203, 165, 220, 212, 203, 100, 165, 179, 137, 56, 110, 158, 103, 77, 151, 277, 420, 181, 89, 74, 76, 156, 98, 86, 54, 107, 60, 198, 67, 240, 199, 103, 199, 170, 194, 141, 135, 248, 137, 239, 120, 82, 229, 277, 220, 178, 151, 186, 229, 179, 176, 166, 148, 151, 108, 265, 127, 113, 133, 111, 432, 188, 167, 44, 154, 110, 140, 252, 114, 166, 106, 155, 115, 119, 57, 115, 183, 35, 192, 215, 130, 544, 156, 135, 377, 137, 96, 140, 222, 51, 187, 224, 101, 232, 73, 225, 140, 48, 113, 208, 424, 249, 204, 235, 223, 108, 112, 217, 110, 536, 251, 141, 305, 117, 217, 206, 255, 69, 263, 128, 159, 154, 219, 134, 76, 142, 162, 239, 136, 153, 99, 129, 162, 153, 98, 134, 107, 163, 228, 163, 205, 236, 230, 377, 172, 166, 242, 166, 113, 95, 222, 58, 111, 187, 243, 120, 77, 99, 67, 133, 129, 153, 205, 199, 214, 89, 104, 173, 192, 131, 218, 219]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/134", "prompt": "\ndef check_if_last_char_is_a_letter(txt):\n    \n\n    if len(txt) == 0: return False\n    if len(txt) == 1: return txt.isalpha()\n    return txt[-1].isalpha() and txt[-2] == \" \"\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef check_if_last_char_is_a_letter(txt):\n    \n\n    if len(txt) == 0: return False\n    if len(txt) == 1: return txt.isalpha()\n    return txt[-1].isalpha() and txt[-2] == \" \"\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef check_if_last_char_is_a_letter(txt):\n    \n\n    if len(txt) == 0: return False\n    if len(txt) == 1: return txt.isalpha()\n    return txt[-1].isalpha() and txt[-2] == \" \"\n\n", "raw_modification": "```python\n<code_start>\ndef check_if_last_char_is_a_letter(txt):\n    # Introduce unnecessary variable assignments\n    txt_length = len(txt)\n    is_empty = txt_length == 0\n    is_single_char = txt_length == 1\n\n    # Check for empty string\n    if is_empty:\n        result = False\n        return result\n\n    # Check for single character string\n    if is_single_char:\n        single_char_result = txt.isalpha()\n        return single_char_result\n\n    # Introduce redundant slicing and variable assignments\n    last_char = txt[-1]\n    second_last_char = txt[-2]\n    last_char_is_alpha = last_char.isalpha()\n    second_last_char_is_space = second_last_char == \" \"\n\n    # Use redundant logical operations\n    if last_char_is_alpha and second_last_char_is_space:\n        final_result = True\n    else:\n        final_result = False\n\n    return final_result\n<code_end>\n```", "modification": "\ndef check_if_last_char_is_a_letter(txt):\n    \n    txt_length = len(txt)\n    is_empty = txt_length == 0\n    is_single_char = txt_length == 1\n\n    \n    if is_empty:\n        result = False\n        return result\n\n    \n    if is_single_char:\n        single_char_result = txt.isalpha()\n        return single_char_result\n\n    \n    last_char = txt[-1]\n    second_last_char = txt[-2]\n    last_char_is_alpha = last_char.isalpha()\n    second_last_char_is_space = second_last_char == \" \"\n\n    \n    if last_char_is_alpha and second_last_char_is_space:\n        final_result = True\n    else:\n        final_result = False\n\n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['apple'], ['apple pi e'], ['eeeee'], ['A'], ['Pumpkin pie '], ['Pumpkin pie 1'], [''], ['eeeee e '], ['apple pie'], ['apple pi e '], ['Pumpkin pi e'], ['Pumpkin pie!'], ['pUMPKIN PIE'], ['!'], ['aaaaa A'], ['aaaaa 1'], ['12'], ['apple pie!'], ['blueberry muffin!'], ['cake?'], ['pUMPKPIE'], ['aaaaaa 1'], ['cake?blueberry muffin!'], ['pUMPKPIEPumpkin pi e'], ['?blueberry muffin!'], ['Pumpkin pie!cake?'], ['Pumpkin e!'], ['applel pUMPKPIEPumpkin pi epie!'], ['caake?'], ['c?blueberry muffin!ke?'], ['aaaaa aaaaa 1A'], ['aaaaaa A'], ['aaaaaa aaaaa 1A'], ['cake?blueberrymuffin!'], ['cake?blueberrymuffinc!'], ['ceberrymuffinc!'], ['pUMPK'], ['aaaaa aaaaaa 1A'], ['1Pumpkin pie!cake?2'], ['ceberrymu12ffinc!'], ['?blueberruy muffin!'], ['ceberrymuffinc!Pumpkin pie!cake?'], ['acake?'], ['aaaaa aaa'], ['1Pumpkin pie!cake?applel pUMPKPIEPumpkin pi epie!2'], ['aaaaa 1cake?'], ['cakel?blueberrymuffinc!'], ['aaaaaa aaaa 1A'], ['cblueberry muffin!'], ['cake?blueberrymuffina!'], ['caaaaaaaa aaaaa 1Ake?'], ['cake?blueberrymufufinc!'], ['aaaaaaaaaa Aa aaa'], ['bluebepUMPKIN PIErry muffin!'], ['ceberrymunc!Pumpekin pie!ecake?'], ['ccake?'], ['blueberry muf'], ['cakel?blueberarymuffinc!'], ['bluebepUMEPKIN PIErry muffin!'], ['i?blueberry muffin!'], ['Pblueberry mufumpkin e!'], ['cakel?blupUMPKPIEPumpkin pi eeberrymuffinc!'], ['aaaaaa aaaaa 1?blueberruy muffin!A'], ['Pumpkin piie!cake?'], ['ccakapple pie!e?'], ['aaaaa pUMPKPIEPumpkin pi eaaaaa 1A'], ['blueberry ceberrymuffinc!Pumpkin pie!cake?muf'], ['Peumpkine pie!cake?'], ['pUMPcake?blueberrymufufinc!KPIEPulmpkin pi e'], ['1Pumpkin pie!c ake?applel pUMPaaaaa aaaaa 1AKPIEPumpkin pi epie!2'], ['applel pUMPKPIEPumpkin pi epiie!'], ['aaaaaa aaaaaa 1A'], ['cbluebeerry muffin!'], ['bluebepn!'], ['pUcake?blueberry muffin!IE'], ['jpBTU'], ['apple p!ie!'], ['OPxQV'], ['ccakceberrymuffinc!Pumpkin pie!cake?apple pcakel?blueberrymuffinc!iie!e?'], ['acceberrymuffinc!Pumpkin pie!cake?ake?'], ['pPUMPK'], ['blueberry mceberrymuffinc!Pumpkin pie!cake?in!'], ['aaaaaaaaaaaaaa 1cake?a pUcake?blueberry muffin!IEAa aaa'], ['21'], ['cakel?bluebec?blueberry muffin!ke?rarymuffinc!'], ['cake?blueberry mu ffin!'], ['aaaaapUMPK aaaaaa 1A'], ['aaaaacake?aa aaaaa 1A'], ['Pumie!cake?'], ['OPxQVV'], ['cmbluebeerry muffin!'], ['pUcake?blueberry muffnin!IE'], ['acake?blueberrymuffin!aaaa 1'], ['blueberry aaaaaa aaaaa 1An pie!cake?muf'], ['apple piaaaaaa aaaa 1Ae!'], ['cebOPxQVerrymuffinc!'], ['bluebepbUMEPKIN PIErccakceberrymuffinc!Pumpkin pie!cake?bapple pcakel?blueberrymuffinc!iie!e?muffin!'], ['bluebepUMEapple piaaaaaa aaaa 1Ae!muffinM!'], ['cebcbluebeerry muffin!errymuffcinc!'], ['aaa1Pumpkin pie!c ake?applel pUMPaaaaa aaaaa 1AKPIEPumpkin pi epie!2aaa A'], ['21Peumpkine pie!cake?'], ['cebcbluebeerry muffinPblueberry mufumpkin e!!errymuffcinc!'], ['cake?blueberrymufficebOPxQVerirymuffinc!n!'], ['cebcbluebeerry muffin!errymuffcinaaaaapUMPK aaaaaa 1Ac!'], ['pUMblueberry ceberrymuffinc!Pumpkin pie!cake?mufPKPIEPumpkin pi e'], ['applel pUMPKPIEPumpkin pi eppie!'], ['acake?bluebferrymuffin!aaaa 1'], ['cberry muffin!'], ['21Peumpki?'], ['aa1aaceberrymunc!Pumpekin pie!ecake?aa 1'], ['Apple $%^pie'], ['Hello, wor1d!'], ['The quick brown fox jumps over the lazy dogs.'], ['apple pie... or is it?'], ['My favorite food is fish, even though it swims.'], ['apple pi\\ne'], ['the quick brown fox jumps over the lazy dogs'], ['apple pie! '], ['appple pie 1 '], ['A$pple $%^pie'], ['Apple $%^$p$%^pieie'], ['$%^$p$%^pieie'], ['food'], ['My favorite food is fish, even thougeh it swims.'], ['The quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dogs.'], ['The'], ['Apple'], ['pi'], ['A$ppleapple pie!'], ['$%^$p$ieie'], ['aapple pie!pple pie!'], ['Hello, wor1d!!'], ['Apple $$%^pie'], ['A$ppl'], ['swims.'], ['p'], ['brown'], ['brwor1d!!own'], ['KeBambuP'], ['thApple $%^$p$%^pieieps over the lazy dogs'], ['over'], ['a'], ['apple piee! '], ['My favorite food is fish, even though it swims'], ['ffish,'], ['My favorite food is fish, even thougeh it s$%^piewims.'], ['dogs'], ['woquickr1d!'], ['A$ppleapple piapple pie! e!'], ['ap'], ['My favorite food is fish, even tho,ugh it swims'], ['foofd'], ['s$%^piewims.swims.'], ['$%^$p$%^pieeie'], ['A$ppleappl!e pie!'], ['thApple'], ['aapplfavoritee pie!pple pie!'], ['ApA$pplple'], ['apple pi\\neapple piee! '], ['$%^$p$%^pieeie$%^$p$%^pieeie'], ['apple pie..A$ppleappl!e pie!. or is it?'], ['applpi\\ne'], ['$%^$p$%^pieieps'], ['the quick brA$pplapple pie! eappl!es'], ['My favorite food is fish, even tho,ugh itjumps swims'], ['fooffd'], ['appl pie! '], ['fofooffdod'], ['Apple $%^$p$%^p'], ['My favoriitte food is fiwims.'], ['ovoer'], ['wor!!'], ['broA$ppleappl!e pie!wn'], ['ofoofd'], ['apppl pie! '], ['apple pie..A$ppleappl!e piei!. or is it?'], ['Apple $$%^ps$%^piewims.swims.ie'], ['Hello, wor1d!My favorite food is fish, even though it swims.'], ['apple pie..A$ppleappl!e pieipiapplet?'], ['ff'], ['appple pie 1brwor1d!!own'], ['apThe quick brown fox jumps over the lazy dogs.lpple pie 1 '], ['fox'], ['A$ippleapple pie!'], ['My favorite food is fisheven tho,ugh it swims'], ['or'], ['A$ppleapplee pie!'], ['apple pie..A$ppleappl!e piei!. or is it?fopie!wnofd'], ['pieipiapplet?'], ['1brwor1d!!own'], ['woquickr1d!ap'], ['wor1appl pie! d!Mry'], ['A$ppleappl!e pie!ApA$pplple'], ['pie!ApA$pplple'], ['A$pple'], ['foxx'], ['Hello, woor1d!'], ['ee'], ['fooapppl pie! d'], ['Hello,'], ['quick'], ['foA$ippleappleoapppl pie! d'], ['foA$ippleoapppl pie! id'], ['lazy'], ['Helleo,'], ['ApA$ppl$%^$p$%^pe'], ['foA$ippleoapppl'], ['My favorite fod is fisheven tho,ugoh it swimse'], ['apple '], ['jl'], ['My favorite food is fish, even though it swimis'], ['A$ppleappl!pie...e pie!ApA$pplple'], ['My favorite food is fish,My even tho,ugh it swims'], ['A$pp$le'], ['appiei!. or is itf?fopie!wnofd'], ['favorite'], ['jumps'], ['brA$pplapple'], ['Tehe'], ['!wor!!'], ['owoquickr1d!ap'], ['id'], ['wor1d!Mya'], ['fiwims.'], ['sdogs.'], ['bnnrown'], ['1brwor1wd!!own'], ['eHello, woor1d!'], ['MMy'], ['$$%^ps$%^piewims.swims.ie'], ['$%^e$p$%^p%ieeie$%^$p$%^pieeie'], ['bbroA$ppleappl!e'], ['$%^$p$%^pieeie$%^$p$%^pie'], ['My favorite food is fish, eveni tho,ugh it swims'], ['A$ppleappl!e fish,pie!ApA$pplple'], ['AA$ippleapple pie!'], ['appl apie! '], ['broA$ppleae pie!wn'], ['My favorite food is fish, even though it swimisHello, wor1d!!'], ['it'], ['My favorite food is fems.'], ['pie!.'], ['swims.apppl pie! '], ['t?'], ['brwor1d!1!own'], ['ppi'], ['1brwor1!d!!own'], ['Hello, 1woor1d!'], ['appe! '], ['fofx'], ['n'], ['HelA$ippleapplelo,'], ['applpi'], ['appl'], ['fooffoxxd'], ['pp'], ['eveni'], ['bnnrobwn'], ['$%^$p$%^pieiepsfood'], ['piei!.'], ['ApplAe $aapple pie!pple pie!$%^ps$%^piewims.swims.i'], ['thHello, 1woor1d!Apple $%^$p$%^pieieps over the lazy dogs'], ['A$ppleapple'], ['appfisl'], ['t??'], ['The quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dohgs.'], ['pieipipie!wnapplet?woquickr1d!'], ['Appl$e $$%^ps$%^piewims.swims.ie'], ['A$ippleapple pi'], ['!!wor!!'], ['appl pie ! '], ['fooffoA$ip$pleoapppld'], ['A$ppKeBambuP'], ['A$$pple $%^pie'], ['KeBambuPA$ippleapple pi'], ['hWwY'], ['!w!r!!'], ['A$ppleappl!e fish,pie!Hello, wor1d!My favorite food is fish, even though it swims.A$pplple'], ['1woor1d!Apple'], ['oovoer'], ['the quick brA$pplapplappple pie 1brwor1d!!owne pie! eappl!es'], ['foA$ippl1eopapppl'], ['$%^pie'], ['Heo,'], ['A$ppKeBamb'], ['AApsp^My favorite food is fish, even tho,ugh itjumps swimspie'], ['dogsn'], ['Hello, wor1d!!i!.'], ['ppfish,pie!Hello,'], ['pie!pple'], ['ppfish,p,ie!Hello,'], ['d'], ['Hello, wor1,d!'], ['AA$ippleapple pThe quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dohgs.ie!'], ['ffof'], ['evewor1appli'], ['A$$pple'], ['nTehe'], ['$%^^pie'], ['applpieappl!es'], ['My favorite food is fish, even though imt swims.'], ['thApple $%^$p$%^pieieps over the laozy dogs'], ['ffofwor!!'], ['KeBambuPA$ippleapple'], ['pieswimisHello,!pple'], ['Hel wor1d!!'], ['zLkykywysmc'], ['swims'], ['zLkykwysmc'], ['foooffd'], ['appe!'], ['$%^$p$%^pieei$eo,'], ['broA$ppleappl!!wn'], ['thee quick brA$pplapplaA$ippleappleppple pie 1brwor1d!!owne pie! eappl!es'], ['apie!'], ['woaapple!!i!.'], ['The quick browthe quick zbrown fox jumps orver the lazy dogsn fox jumps over the lazy dohgs.'], ['My favorite food, even thougeh it swims.'], ['A$ppleappl!e fish,pie!Hello, wor1d!My favorite food is fish, even though it swfoxims.A$pplple'], ['ppfish,piie!Hello,'], ['Apple $%The quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dogs.^p'], ['A$$pe'], ['OqmEHnVTg'], ['pie!$%^ps$%^piewims.swims.i'], ['the quick brA$pplapplappple pie 1Applerwor1d!!owne pie! eappl!es'], ['A$$applpieappl!es'], ['AA$ippleapie!'], ['fooapppl'], ['Hello,1 wor1d!!i!.'], ['d!Mry'], ['brA$pp$lapple'], ['My favoriote food is fish,My even tho,ugh i t swims'], ['KeBambuPA$ippleapplei'], ['MM'], ['thApple $%^$p$%^pieieps over the lazyit?fopie!wnofd dogs'], ['t'], ['gxThe quick browthe quick zbrown fox jumps orver the lazy dogsn fox jumps over the lazy dohgs.'], ['aapplfavoritee pie!ppapple piee! le pie!'], ['A$ppleappl!e fish,pie!Hello, wor1d!My favorite fven though it swfoxims.A$pplple'], ['A$ppleappl!e fish,pie!Hello, wor1d!My favorite food is firsh, even though it swims.A$pplple'], ['My favorite food is fish, even thougeh it s$%^ewims.'], ['A$A$ppleapplepp$le'], ['thApple $%^$p$%^pieieps over the lapie!nofd dogs'], ['appli apie! '], ['brwor1d!woquickr1d!ap1!own'], ['Hel'], ['ffff'], ['pieipiappllet?'], ['HelloMy favorite food is fish, even thougeh it s$%^piewims.,'], ['Apple $%The qA$pp$leuick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dogs.^p'], ['upquicA$pple'], ['s$%^pieappiei!.wims.swims.'], ['szLkykywysmc'], ['thAppl'], ['sdogs.t??'], ['fven'], ['brA$pplapplaA$ippleappleppple'], ['oo'], ['quickbrwor1d!1!owfoA$ippleoapppl pie! idn'], ['$%^^pipe'], ['A$A$laozypp$le'], ['ii'], ['A$ppleapple piapple pie!e!'], ['aepplpieappl!es'], ['$%$^$p$%^pieie'], ['i'], ['apThe'], ['HelloMy favorite food is fish, even thougeh it s$%^piewims.,over'], ['A$ipHello, wor1d!My favorite food is fish, even though it swims.ple pi'], ['ofwor!!'], ['ppfish,p,ie!Hello,zLmc'], ['Appl$e $$%^ps$%^pi$%^$p$%^pieiepswims.ie'], ['A$ppleappl!e fish,pie!Hello, wori1d!My favorite food is fish, even though it swfoxims.A$pplple'], ['the quick brA$pplapplappplee pie 1Applerwor1d!!owne pie! eappl!es'], ['A$ppleappl!e fish,pie!Hello, wor1d!My favorite fven though it swfolxims.A$pplple'], ['My fa vorite food is fish, even tho,ugh itjumps swims'], ['appple'], ['Apple $%The quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dfiwims.ogs.^p'], ['iE'], ['The quick brown foxk jumps over the lazy dogs.'], ['A$eplple'], ['doogsn'], ['applMy favorite food is fish, even thougeh it s$%^ewim s.'], ['$aapple'], ['broA$ppleappl!e'], ['$%%^e$p$%^p%ieeie$%^$p$%^pieeie'], ['My favoriote food is fish,Mtho,ugh i t swims'], ['A$ppApple $%^pie pie!ApA$pplple'], ['apppe!'], ['My favoriote fMood is fish,Mtho,ugh i t swims'], ['orver'], ['is'], ['pie..A$ppleappl!e'], ['My favorite food is fish, eveni tho,ugh it swwor1d!Myhifms'], ['My favorite food is fish, even aapplfavoritee pie!pple pie!though imt swims.'], ['Apple $%The quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dfiwims.oppfish,p,ie!Hello,zLmcgs.^p'], ['HelloMy favorite food is fish, even thougeh it s$%^piewims.,overi'], ['Apple $%The qA$pp$leuick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dogs.Apple $%^pie^p'], ['brpiei!.'], ['foxk'], ['lA$ppleapple piapple pie!e!'], ['apThe quick brown fox jumps over the fooapppllazy dogs.lpple pie 1 '], ['Hllo,1'], ['fems.'], ['pie!'], ['zbrown'], ['My favorite ftood is fish, even though imt swims.'], ['apppapple pie!e!'], ['appee!  '], ['swfolxims.A$pplpple'], ['fffof'], ['My favoriitteood is fiwims.'], ['eappe!'], ['ae'], ['pie!$%^ps$%^piewims.sA$ppleapplee pie!wims.i'], ['fooofd'], ['My favorite food is fish, evenMy favorite food is fewims'], ['pieipipie!wnapplet?woqui1d!'], ['ipiapple'], ['swims.A$pplple'], ['KeleBambuPA$ippleapple pi'], ['A$ppleappl!e fishA$A$ppleapplepp$le,pie!Hello, wor1d!My favorite food is firsh, even though it swims.A$pplple'], ['iit'], ['My favorite fod is fie'], ['!r!!'], ['fowor1d!!i!.x'], ['dosgs'], ['bbnnrown'], ['!w!r!!!'], ['aei\\ne'], ['swfolxims.A$pplple'], ['Apidple'], ['A$A$Apple $%The quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dfiwims.ogs.^pppleapplepp$le'], ['MylA$ppleapple favoriitte food is fiwims.'], ['Heollleo,'], ['!worMy favorite food is fish, even aapplfavoritee pie!pple pie!though imt swims.!!'], ['bnnroA$ppleapplee pie!bwn'], ['lHello, wor1d!!'], ['MylA$ppleapple favoriitte food is fiwims.$%^$p$ieiA$ipHello, wor1d!My favorite food is fish, fofooffdodeven though it swims.ple pi'], ['Apple $%^$$p$%^p'], ['foofA$ppleappl!e fish,pie!Hello, wor1d!My favorite fven though it swfolxims.A$pplpled'], ['sUwxpM'], ['Hello,o woor1d!'], ['the quick brA$pplappplappplee pie 1Applerwor1d!!owne piel!es'], ['A$A$ppleappl!e fish,pie!Hello, wor1d!My favorite food is firsh, even though it swims.A$pplple$pe'], ['fmJnMBo'], ['fmJfnMBo'], ['My favorite food is fish, even tApple $%foA$ippleappleoapppl^$$p$%^pho,ugh it swims'], ['My ifavorite food, even thougeh it swims.'], ['ifavoriteofwor!!'], ['A$ppleapeplee pie!'], ['A$ppleappl!e fish,pie!Hello, wor1d!My favorite fven though it MylA$ppleapplexims.A$pplple'], ['A$ppleappl!e fish,pie!ApA$pplpleswims.'], ['quickbrwor1d!1!owfoA$ippleoapppl'], ['A$ppleappl!pie...we pie!ApA$pplwor1appl pie! d!Mryple'], ['ewims.'], ['app iei!. or is itf?fopie!wnofd'], ['the quick brA$pplapplappplee pie 1Athe quick brA$pplapplappple pie 1brwor1d!!owne pie! eappl!espplerwor1d!!owne pie! eappl!es'], ['ipialpple'], ['$%^$$p$%^p'], ['pi.'], ['ppi.'], ['foolA$ppleapple piapple pie!e!ofd'], ['gxThe quick browthe quick zbrown fox jumps orver the lazy dogsn fox jumps ofvenver the lazy dohgs.'], ['ffooffd'], ['lA$ppleapple piapple pieA$ppApple!e!'], ['Hel1brwor1d!!ownelo,'], ['pie!$%^ps$%^p^iewims.sA$pp!wims.i'], ['A$ppleappl!pie...we pie!ApA$pplwor1appl pie! d!ofwor!!Mryple'], ['ipialnTeheple'], ['A$ppleapplee'], ['$%^$p$%^pie^eie'], ['pie!$%^piewims.sA$ppleapplee pie!wims.i'], ['woaapple!!i!.MylA$ppleapple favoriitte food is fiwims.$%^$p$ieiA$ipHello, wor1d!My favorite food is fish, fofooffdodeven though it swims.ple pi'], ['A$ppleappl!e pie!AppipA$ppdogs.^plple'], ['foofA$pplefoxxd'], ['Hello, wor1d!My favorite food mis fish,ugms.'], ['s.'], ['dy!Mry'], ['Appl$e'], ['My ifavorite.'], ['KMy favorite food is fisheven tho,ugh it swimsueBapplpiambuPA$ippleapple'], ['appewim\\ne'], ['fooffoA$ip$pleoappppieswims.ple!$%^piewims.sA$ppleapplee pie!wims.ild'], ['even'], ['Apple $$%^ppiee!'], ['rovoer'], ['fie'], ['app iei!. or is itf?fo!wnofd'], ['oovHel wor1d!!oApple $$%^ppiee!er'], ['My favoriitteood sis fiwims.over'], ['A$ppleapplee swimsie!'], ['atho,ugoe'], ['ewims.gxThe quick browthe quick zbrown fox jumps orver the lazy dogsn fox jumps ofvenver the lazy dohgs.'], ['My favorite food is fish, even tApple $%foA$ippleappleoapppl^$$p$%^pho,ugh it swiHel1brwor1d!!ownelo,ms'], ['iQVJS'], ['apppl'], ['fewims'], ['Hllo,1oo'], ['ipie!'], ['$$%^^pie'], ['Hello,o'], ['foxkk'], ['Zrm'], ['A$A$Apple'], ['dogs.'], ['pi..'], ['brwthApple $%^$p$%^pieieps over the lazy dogsor1d!!own'], ['aa'], ['a$$%^^piee pie! '], ['$%p^$p$%^pieie'], ['a,ugoe'], ['pie!$%^ps$%^piewims.sA$ppleapplee'], ['My faovorite food is fish, even tho,ugh it swims'], ['The quick bro wn fofirsh,xk jumps over the lazy dogs.'], ['the quick brA$pplappplappplee pi e 1Apprite ftood is fish, even though imt swims.el!es'], ['thApple $%^$p$%^pieiepidns over the lazyit?fopie!wnofd dogs'], ['woMy favorite food is fish, even tApple $%foA$ippleappleoapppl^$$p$%^pho,ugh it swimsquickr1d!'], ['applMy'], ['$%^pie^p'], ['lA$ppleapple piapple pieA$ppApple!e!zLkykwysmc'], ['Apple $%The quick browthe quick brown fox jumps over the lazy dogsn fox jumps eover the lazy dogs.^p'], ['e$%^$p$%^pieeie'], ['1woor1d!Aappplpple'], ['brA$pplapplaA$ippleapie!thoughle'], ['Apple $$%^ps$zbrown%^piewims.swims.iie'], ['brwthApple $%^$p$%^pieieps over the laz$y dogsor1d!!own'], ['1brwor1d!!owne'], ['nA$ppleappl!e fish,pie!Hello, wor1d!My favorite fven though it swfoxims.A$pplpleTehe'], ['My fa vorite food ithe quick brA$pplapplappplee pie 1Applerwor1d!!owne pie! eappl!ess fish, even tho,ugh itjumps swims'], ['My favorite fod is fisheven th o,ugoh it swimse'], ['$%^$p$%^pfavoriitteoodieeie'], ['wor1d!!'], ['My favorite fod is fisheven th o,ugoh pie!.swimse'], ['ap!'], ['woraapplfavoritee pie!ppapple piee! le pie!1d!Mya'], ['.dogs.'], ['wofoxkr1appl pie! d!Mry'], ['pfoA$ippl1eopapppliei!.'], ['fish,pie!ApA$pplpleswims.'], ['foofA$ppleappl!e'], ['fooapppllazy'], ['foA$ippleappleoaswimsueBapplpiambuPA$ippleapplepppl pie! d'], ['iQJswimsie!VJS'], ['thHello, 1wooer1d!Apple $%^$p$%^pieieps over the lazy dogs'], ['upquiHello, woor1d!cA$pple'], ['upquiHello,'], ['idn'], ['pfoA$ippl1eoppapppliei!.'], ['udoogsn'], ['$^%^$$p$%^p'], ['foooMy favorite food, even thougeh it swims.fd'], ['rbrownA$$pe'], ['$%apie!^$p$%^pieei$eo,'], ['woor1d!cpA$pple'], ['evewor1aHllo,1ppli'], ['A$pppleappl!e pie!AA$ppleapplp!e pie!ApA$pplplepA$pplple'], ['KMy favorite food is fisheven tho,ugh it swimsueBapplpiaembuPA$ippleapple'], ['upquicA$ppule'], ['apple pie..A$ppleap. or is it?'], ['eve$%^$p$%^pieiepsfoodn'], ['brwor1d!!n'], ['bThe quick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dogs.nnrown'], ['eveMy favorite food is fish, even tho,ugh it swimsoodn'], ['foooMy favorite food,swfoxims.A$pplpswimsele even thougeh it swims.fd'], ['A$A$Apple $%The equick browthe quick brown fox jumps over the lazy dogsn fox jumps over the lazy dfiwims.ogs.^pppleapplepp$le'], ['My favorite food is fish, even tApple $%foA$ippleappleoappp$%p^$p$%^pieieho,ugh it swims'], ['wewims.gxTheor1d!!'], ['ethApple'], ['A$ppleappl!e fishA$A$ppleapplepp$le,pie!Hello, wor1d!My favorite food is firsh, eve n though it swims.A$pplple'], ['My favoriote food is fish,Mtho,ugh i t shwims'], ['$$%^thApple $%^$p$%^pieieps over the laozy dogspie'], ['appiei!.'], ['.Hello, wor1d!My favorite food mis fish,ugms.'], ['KMy favorite food is fisheven tho,ugh it swimsueBapplpiampieA$ppApple!e!zLkykwysmcbuPA$imppleapple'], ['ftood'], ['wofoxkr1appl pie! d!'], ['apple pieei! '], ['ththe quick brA$pplappplappplee pie 1Applerwor1d!!owne piel!esApple'], ['pie!$%^ps$%^p^iewims.sA$pp!wiA$ppleappl!ems.i'], ['$$%^i$p$%^pie^eie'], ['lHello, wo!!'], ['swimsueBapplpiambuPA$ippleapple'], ['brA$pplapplappple'], ['My favorite food is p$%^pieieho,ugh it swims'], ['$$%^ps$%^piewims.sweims.ie'], ['thHellA$ppleappleo, 1wooer1d!Apple $%^$p$%^pieieps o1ver the lazy dogs'], ['pie!1d!Mya'], ['thApple $%^$p$%^pieiepidns over ^the lazyit?fopie!wnofd dogs'], ['favoriitte'], ['pie!wims.i'], ['eapple'], ['1brr1d!!owne'], ['ffoofffd'], ['A$ppleapple epiapple pie!e!'], ['d!!ownelo,'], ['apThe quick brown fox jumps over thfe fooapppllazy dogs.lpple pie 1 '], ['oovHel wor1A$ippleapple pid!!oApple $$%^ppiee!er'], ['wor1dapplpi\\ne!!'], ['s$%^ewim'], ['!worMy favorite fththeood is fish, even aapplfavoritee pie!pple pie!though imt swims.!!'], ['swimisHello,'], ['dfood,'], ['wn'], ['My faveorite food is fish, even tAppple $%foA$ippleappleoappp$%p^$p$%^pieieho,ugh it swims'], ['AfooffofooffoA$ip$pleoappppieswims.ple!$%^piewims.sA$ppleappleexxd'], ['appppe!'], ['foofA$pptleappl!e fish,pie!Hello, wor1d!My the quick brA$pplappplappplee pi e 1Apprite ftood is fish, even though imt swims.el!esfavorite fven though it swfolxims.A$pplpled'], ['woquickr!1d!ap'], ['ppA$ppleapple pie!i'], ['apple pie!foooMy favorite food, even thougeh it swims.fd'], ['Hello, wor1d!My favorite food is fish, e ven though it swims.'], ['appple pieei! '], ['A$ppleappl!e'], ['A$pppleapple'], ['brworwor1dfood,d!!!1!own'], ['k '], ['e1 '], ['.'], [' '], ['1'], ['                 '], ['Z'], ['aeiou'], ['AEIOU'], ['quickover'], ['apple pitie!'], ['the quick brown foox jumps over the lazy dogs'], ['My'], ['Hello, d!'], ['pie'], ['The quick brown fox jumps over zy dogs.'], ['foox'], ['appple pitie!'], ['appple pie! '], ['apple piie!'], ['app1le pitie!'], ['qkuicky'], ['fish,'], ['The quick brown fox jumps over zy app1le pitie!dogs.'], ['HHello, d!'], ['Apple $%appple pitie!^pie'], ['The quick brown fox jump app1le pitie!dogs.'], ['applefavorite pifoox\\ne'], ['nGwMUkIwSw'], ['pifoox'], ['jThe quick brown fox jumps over zy app1le pitie!dogs.umps'], ['The quick brown Hello,fox jumps over the lazy dogs.'], ['fooxit?'], ['quiover'], ['The quickapple pitie! brown fox jumps oapple piie!gs.'], ['The quick brown fox jumps over apple pie!zy app1le pitie!dogs.'], ['app1lee piti'], ['pitie!^piepie'], ['piie!'], ['applApple $%appple pitie!^pieefavoritequickapple pifoox\\ne'], ['foxMy'], ['Myy'], ['appapplApple $%appple pitie!^pieefavoritequickapple pifoox\\nele pitie!'], ['jThe quick brown fox jumps over zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumps oapple piie!gs.ps'], ['qkuickky'], ['wor1d!'], ['The quick brown Hello,fox jumsps over the lazy dogs.'], ['e'], ['apple pie... or  is it?'], ['$%^piwor1d!e'], ['applefavep pifoox\\ne'], ['eeThe quickapple pitie! brown fox jumps oapple piie!gs.'], ['Apple $%appple ppitie!^pie'], ['The quickapple pitie! brown fox jumps oapiple piie!gs.'], ['appapplApple'], ['applejump pie... or is it?'], ['aThe quick brown fox jump app1le 1le pitie!'], ['applApple $%appppitie!dogs.umps^pieefavoritequickapple pifoox\\ne'], ['app1l'], ['Apple $%appple ppiptie!^pie'], ['appplappple pie! e 1 '], ['HHello,d d!'], ['pitie!dogs.umps'], ['dgs'], ['pie!zy'], ['My favorite food is fish,jThe even though it swims.'], ['My favori$%apppletse food is fish,jThe even though it swims.'], ['appapplAppl$%^piwor1d!ee $%appple pitie!^pieefavoritequickapple pifoox\\nele pitie!'], ['app1'], ['applApple $%appple ppitie!^pieefavoritequickapple pifoox\\ne'], ['The quick brown fox jumps over zy app1le pitie!dogTs.'], ['$%appple'], ['browwn'], ['pitie!dogs!.'], ['The quickapple pitie! bTrown fox jumps oapple piie!gs.'], ['$%apppleThe quick brown fox jumps over apple pie!zy app1le pitie!dogs.'], ['The qupick brown fox jump app1le pitie!dogs.pitie!dogs!.'], ['quickk'], ['$%apppleThe quick brown fox jumps over apple pie!zy app1lgs.'], ['ppitie!^pie'], ['The quick brown fy dogs.'], ['appitie!dogs.umpsap1l'], ['wd!'], ['Apple $%appple ppiltie!^pie'], ['Apple $%e^pie'], ['The quick brown foxver zy dogs.'], ['Hllo, wor1d!'], ['though'], ['applx\\ne'], ['eeThe'], ['piie!gs.'], ['Apple $%appple ppiptthe quick brown fox jumps over the lazy dogsie!^pie'], ['piti'], ['HHello,d dMy favori$%apppletse food is fish,jThe even though it swims.!'], ['br'], ['applejump pie.. or is it?'], ['appleApple $%appple ppiltie!^piejump pie.. or is it?'], ['foxMyplx\\ne'], ['broapple'], ['YRtcLsP'], ['iapplejump pie... or is it?'], ['swims.!'], ['pitie!^fish,jThepiepi'], ['quswims.!ickk'], ['favori$%apppletse'], ['The qupick brown fox  app1le pitie!dogs.pitie!ddogs!.'], ['qick'], ['$%e^pie'], ['Apple $%a ppple ppiltie!^pie'], ['applefavorite HHello, d!pifoox\\ne'], ['appplappple piep! e 1 '], ['quickoHello, wor1d!ver'], ['Apple iee'], ['jThe quick brown fox jumps ovepitie!^fish,jThepiepir zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumps oapple piie!gs.ps'], ['applx'], ['appe pitie!'], ['The quck brown fox jump app1le piptie!dogs.'], ['pitie!ogs.umps'], ['appfavoritequickapple pifox\\ne'], ['The qupappe pitie!ick brown fox jump app1le pitie!dogs.pitie!dogs!.'], ['$%^piw1or1d!e'], ['$%^piwor'], ['HHello,'], ['pitie!'], ['jumsps'], ['jumpus'], ['appplappple piep! dgse 1 '], ['favotrite'], ['Apple $%^pipe'], ['piifoox$%^piwor1d!e'], ['applAp^pipeefavoritequickapple pifoox\\ne'], ['bron'], ['The quick brown fox jump app1le pitie!dogso.'], ['The quick brown fox jumps over zy app1le pis.'], ['foodwd!'], ['pitie!dogs.'], ['appplapitie!^fish,jThepiepippple piep! dgse 1 '], ['quck'], ['piptie!dogs.'], ['appapplApple $%appple pitie!^pieefavoriteqckapple pifoox\\nele pitie!'], ['pitie!pdogs.'], ['My favorite ms.'], ['jThe quick broiswn fox jumps over zy app1le pitie!dogs.umps'], ['!wd!'], ['pis.'], ['Hello, wor1djump !'], ['jThe quick brown fox jumps ovepitie!^fish,jThepiepiapplxr zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumps oapple piie!gs.ps'], ['pitie!^quickoHello, wor1d!verfish,jThepiepi'], ['$%apppleThe quickthough brown fox jumps over apple pie!zy app1lgs.'], ['aThe'], ['apple pie...p s it?'], ['jThe quick brown fox jumps over zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumpsp oapple piie!gs.ps'], ['favoripitie!dogs!.te'], ['aT'], ['jumspappfavoritejquickappleHHello,s'], ['bappthe quick brown foox jumpls over the lazy dogs '], ['applefavoritte'], ['jThe quick brown fox jumps ovepitie!^fish,jThepiepiapplxr zy app1le pitiegs.umThe quickapple pitie! brown fox jumps oapple piie!gs.ps'], ['pifoeleox'], ['apeepleApple $%appple ppquickthoughiltie!^piejump pie.. or is it?'], ['vXshDwOJiX'], ['jThe quick brown fox jumps over zy app1le pitie!dogs.umThmpsp oape!gs.ps'], ['favoritee'], ['ox$%^piwor1d!e'], ['$%^pi$e'], ['pitie!dogTs.'], ['HHelljumplso, d!'], ['pie...p'], ['pitie!^pieefavoritequickapple'], ['The quick brown fox juppiltie!^piejumpmp app1le pitie!dogso.'], ['pitie!^fish,Hello, d!jThepiepi'], ['$%apppleThe quick brown f$%apppleTheox jumps over apple pie!zy app1le pitie!dogs.'], ['aThe quick brown fox juppiltie!^piejumpmp app1ele pitie!dogso.pplx\\ne'], ['The qupdogs!.'], ['pitie!^pieefavoritapple'], ['foxver'], ['Apple $l%^pipe'], ['appplapitie!^fish,jThepiepippple'], ['ppiltie!^piejump'], ['pitie!dogHHello,d dMy favori$%apppletse food is fish,jThe even though it swims.!s.'], ['appe'], ['pitipitie!dogs.umThmpsp'], ['appee pitie!'], ['The quickapple pitie! birown fox jumps oapple piie!gs.brown'], ['pitie!dogso.'], ['My favori$%apppletse food is fish,jThe evenApple $%appple ppapplApple $%appple ppitie!^pieefavoritequickapple pifoox\\neitie!^pe though it swims.'], ['The quickapple pitie! birown fThe quickapple pitie! bTrown fox jumps oapple piie!gs.ox jumps oapple piie!gs.brown'], ['HHello,applAp^pipeefavoritequickapple pifoox\\ne d!'], ['TThe'], ['feover'], ['ps'], ['ipitie!'], ['ppitie!^pieefavoritequickapple'], ['favoripitie!dogsbrown!.te'], ['The quick brown fox evenApplejumps over zy app1le pitie!dogTs.'], ['ppiptie!^pie'], ['pietie!dogso.'], ['qkuickkypifoox'], ['favoripritie!dogsbrown!.te'], ['My favori$%apppletse food is fish,jThe evenApple $%appple ppapplApple $%appple ppitie!^pieefavoritequickapple pifoox\\neitie!^pe thoufavoripitie!dogsbrown!.tegh it swims.'], ['appfavoritequickapple'], ['iee'], ['My favori$%apppletse food is fish,jThe evepapplApple $%appple ppitie!^pieefavoritequickapple pifoox\\neitie!^pe though it swims.'], ['The quick brown fox jHHello,d d!apple pie!zy app1le pitie!dogs.'], ['Meleyy'], ['qkuickoHello, wor1d!ver'], ['hh'], ['MeapeepleAppleleyy'], ['d!pifoox'], ['qupick'], ['The quck brown fox jump app1lfye piptie!dogs.'], ['pitie!!dogs!.'], ['thhough'], ['eee'], ['piiee!'], ['d!!'], ['$%apppleThe quick brown fox jumps over apple pqupickapp1lgs.'], ['pitie!s'], ['nGwwMappple pie! UkIwSw'], ['The qthe quick brown fox jumps over the lazy dogsuick brown fox jumps over apple pie!zy app1le pitie!dogs.'], ['appplapp ple piep! e 1 '], ['piep!'], ['faveoritee'], ['pitie!dogso.pplx'], ['qupApple $%appple ppapplApple $%appple ppitie!^pieefavoritequickapple pifoox\\neitie!^peick'], ['pitdogsuickie!dogTs.'], ['quickthough'], ['pitile!^quickoHello, wor1d!verfish,jThepiepi'], ['d!jThepiepi'], ['eitie!^peick'], ['pitie!^pieefav$%^piwor1d!eoritapple'], ['foood'], ['pitie!dogHHello,d'], ['appapplApple $%appple pitie!^pieefavoritequicMyykapple pifoox\\nele pitie!'], ['My favorite food is fish,jThe evHHello,applAp^pipeefavoritequickappleen though it swims.'], ['pietie!dogjumpso.'], ['pitiepitie!^fish,Hello,!dogs.umpsor'], ['The app1leqjuck brown fox jump app1lfye piptie!dogs.'], ['eThe qupappe pitie!ick bropwn fox jump app1le pitie!dogs.pitie!dogs!.'], ['The quickapple pitie!qupick brown fox jumps oapple piie!gs.'], ['Apple $%e^piswims.!s.e'], ['qkuickoHello,'], ['piapp1leqjucktise!ogs.umps'], ['applAp^pipeefavoritequickaplple pifoox\\ne'], ['quickapple'], ['appappapplApplepplAppl$%^piwor1d!ee $%appple pitie!^pieefavoritequickapple pifoox\\nele pitie!'], ['piapp1leqjucktise!dogsuickofavoritegs.umps'], ['ovepitie!^fish,jThepiepiapplxr'], ['11'], ['bTrown'], ['appapplApple $%appple pitie!^pieefavoritequickapple pifoox\\nele pitie!piiee!'], ['foxMypiptie!dogs.'], ['ppitifavoriteee!^pie'], ['pitie!ogs.dogs.ps'], ['qkuickkypiappapplApple $%appple pitie!^pieefavoritequickapple pifoox\\nele pitie!piiee!foox'], ['HHello,applAp^pipeefavoritapplAp^pipeefavoritequickaplpleequickapple pifoox\\ne d!'], ['qpitdogsuickie!dogTs.uck'], ['appplapp'], ['applAp^pipeefavoritequickaplaple pifoox\\ne'], ['$%apppleThe quick brown fox jumps over af$%apppleTheoxpple pie!zy app1lgs.'], ['The qupickapple pitie!qupick brown fox jumps oapple piie!gs'], ['fd'], ['evHHello,applAp^pipeefavoritequickappleen'], ['pitie!doigTs.'], ['pitie!^pieefavoriteqckapple'], ['appappapplApplepplAppl$%^piwor1d!eepie'], ['My fadogs.vorite food is fish, even though it swims.'], ['jjThe quick brown fox jumps ovepitie!^fish,jThepiepiapplxr zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumps oapple piie!gs.psumpus'], ['pifoThe quick brown fox evenApplejumps over zy app1le pitie!dogTs.ox'], ['appplejump pie... or is it?'], ['Hellod, d!'], ['appappapplApplepplAppl$%^piwor1d!ee'], ['jumppitie!^pies'], ['Apple pie'], ['pitie!dog.pplx'], ['ppitie!^pieeHello, wor1djump !favoritequickapple'], ['apd!applepe pitie!'], ['The quick brown fox jump app1 le pitie!dogso.'], ['even!wd!'], ['YIjGPAGiyb'], ['appllAp^pipeefavoritequickapple pifoox\\ne'], ['Hello, wor1djuomp !'], ['aaT'], ['rbro'], ['My favori$%apppletse food isle ppitie!^pieefavoritequickapple pifoox\\neitie!^pe though it swims.'], ['jjThe quick brown fox jumps ovepitie!^fish,jThepiepiiapplxr zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumps oapple piie!gs.psumpus'], ['awor1djuomp! '], ['the quick brownpie.. foox jumps over the lazy dogspitie!dogs.'], ['applApple $%appple pitie!dogs.ppitie!^pieefavoritequickapple pifoox\\ne'], ['$%apppleThe quick brown fox jumps over appple pie!zy app1lgs.'], ['pitiee!^pieefavoritapple'], ['piie!gs'], ['Apppiltie!^piejumpe pitie!^pie'], ['aaTeThe qupappe pitie!ick bropwn fox jump! app1le ppitie!sitie!dogs.pitie!dogs!.'], ['swims.!s.'], ['appplappple pie! e HHello,applAp^pipeefavoritapplAp^pipeefavoritequickaplpleequickapple pifoox\\ne d!1 '], ['apple pie... or .is it?'], ['appplepitie!qupick pie! '], ['The quick brown fox jHHelo,d d!apple pie!zy app1le pitie!dogs.'], ['jumspappfavoritejquickapplpitie!dogs.pitie!dogs!.eHHello,s'], ['1le'], ['pie.pitie!s..'], ['applAp^pipeefavoox\\ne'], ['pitie!dogs.pitie!dogs!.'], ['d!d1'], ['eApple $%^pie'], ['ppapplApple'], ['eitie!^p^eick'], ['ewd!favoriteqfavoripritie!dogsbrown!.teuickapple!'], ['aqkuickyThe'], ['TMy fadogs.vorite food is fish, even though it swims.'], ['MyjThe'], ['jThe quick brown fox jump,jThepiepiapplxr zy app1le pitiegs.umThe quickapple pitie! brown fox jumps oapple piie!gs.ps'], ['ppquickthoughiltie!^piejump'], ['doguick'], ['pitie!dogs.umThmpsp'], ['pitie!dogs.ppitie!^pieefavoritequickapple'], ['lapplx\\ne'], ['favoriprqkuickkypiappapplApple $%appple pitie!^pieefavoritequickapple pifoox\\nele pitie!piiee!fooxitie!dogsbrown!.te'], ['Applie pie'], ['The quickpiifoox$%^piwor1d!e brown fox jHHelo,d d!apple pie!zy app1le pitie!dogs.'], ['$%apppleThTThee quick brown fox jumps over af$%apppleTheoxpple pie!zy iapp1lgs.'], ['RcRJCoSsej'], ['appplappple pie! e HHello,applAp^pbTrownipeefavoritapplAp^pipeefavoritequickaplpleequickapple pifoox\\ne d!1 '], ['pietijjThe quick brown fox jumps ovepitie!^fish,jThepiepiapplxr zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumps oapple piie!gs.psumpuse!dogso.'], ['qupickapple'], ['Applet  $%appdgsppitie!dogs.pitie!ddogs!.le ppitie!^pie'], ['favoripitie!dpie...pogs!.te'], ['pitie!dogs.ppkitie!^pieefavoritequic$%apppleThe quick brown f$%apppleTheox jumps over apple pie!zy app1le pitie!dogs.ple'], ['ox$%^piwor1d!eapplx\\ne'], ['jThe quick brown fox jumps ovepitie!^fish,jThepiepiapplxr zy app1le pitiegs.umThe quickapple pitie! brown fox jumps oapple piie!s'], ['ppip^tie!^pie'], ['the quick brownpie.. foox jumps over the lazy dogspitie!dogs.piie!gs.brown'], ['$%apppleTheck brown fox jumps over apple pie!zy app1le pitie!dogs.'], ['rbo'], ['pitile!^quTMyickoHello, wor1d!verfish,jThepiepi'], ['$%apppleThecak'], ['pit$^%^piwor1d!eie!^piieefavoritapple'], ['the quick brownpie.. qupApple $%appple ppapplApple $%appple ppitie!^pieefavoritequickapple pifoox\\neitie!^peickfoox jumps over the lazy dogspitie!dogs.'], ['Apple $%appple ppii$%ae!^pie'], ['pitie!dogs.fppitie!^pieefavoritequickapple'], ['Apple pieappplepitie!qupiick pie! '], ['pitie!^piepefavoritapple'], ['MeapeepleAppleleyey'], ['brownpie..'], ['apeepleApple $%appple ppquiappple pie!  it?'], ['hquickthough'], ['dapplApple $%appple pitie!dogs.ppitie!^pieefavoritequickapple pifoox\\neick'], ['appplejump'], ['REVTbqcIZ'], ['ipit!ie!'], ['jTh e quick brown fox jumps ovepitie!^fish,jThepiepir zy app1le pitie!dogs.umThe quickapple pitie! brown fox jumps oapple piie!gs.ps'], ['the'], ['aThe quick brown fox juppiltie!^piejumpmp app1equswims.!ickkle pitie!dogso.pplx\\ne'], ['pitie!dogHHello,d dMy favori$%apppletse f$%apppleThTTheeood is fish,jThe even though it swims.!s.'], ['apple pie... pitie!dogTs.oxr .is it?'], ['qupicekapple'], ['pitie!^pieefav$%^poiwor1d!ieoritapple'], ['eThe qupappe pitie!ick bropwn fox jump app1le pitie!dogs.pitieppiltie!^pie!dogs!.'], ['piitie!dogs.ple'], ['ox$MeapeepleAppleleyy%dgse^piwor1d!e'], ['piieewor1d!!'], ['appljThe quick brown fox jumps ovepitie!^fish,jThepiepiapplxr zy app1le pitiegs.umThe quickapple pitie! brown fox jumps oapple piie!s pitie!'], ['ApEuple $%a ppple ppiltie!^pie'], ['swims.!.'], ['pitie!dogHHello,d dMy favori$%apppletse food i$%apppleThecaks fish,jThe even though it swims.!s.'], ['Hello,  d!'], ['pitie!dogs.ppitie!^pieeifavoritequickapple'], ['The quick brown fox jumps over apppp1le pitie!dogs.'], ['qucqqk'], ['pitie!^pieefavoritequicMyykapple'], ['Apple $%e^pieThe quick brown fox jumps over zy app1le pis.'], ['applApple $le pitiepppie...ple pifoox\\ne'], ['appppple1le pitie!'], ['pitie!dogs.pepitie!^pieefavoritequickapple'], ['hhox$%^piwor1d!eapplx'], ['le'], ['Hello, wor1!djuomp !'], ['pitiegs.umThe'], ['appleApplepie... $%appple ppiltie!^piejump pie.. or is it?'], ['Apple $%appple ppipitie!^pie'], ['jusmps'], ['ppitie!sitie!dogs.pitie!dogs!.']]\n    results = [False, True, False, True, False, False, False, False, False, False, True, False, False, False, True, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/135", "prompt": "\ndef can_arrange(arr):\n    \n\n\n    for i in range(len(arr) - 1, 0, -1):\n        if not (arr[i] >= arr[i - 1]):\n            return i\n    return -1\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef can_arrange(arr):\n    \n\n\n    for i in range(len(arr) - 1, 0, -1):\n        if not (arr[i] >= arr[i - 1]):\n            return i\n    return -1\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef can_arrange(arr):\n    \n\n\n    for i in range(len(arr) - 1, 0, -1):\n        if not (arr[i] >= arr[i - 1]):\n            return i\n    return -1\n\n", "raw_modification": "```python\n<code_start>\ndef can_arrange(arr):\n    # Introduce unnecessary variable assignments\n    n = len(arr)\n    result = -1\n\n    # Use a while loop instead of a for loop for added complexity\n    i = n - 1\n    while i > 0:\n        # Add redundant condition checks\n        if arr[i] < arr[i - 1]:\n            result = i\n            break\n        elif arr[i] >= arr[i - 1]:\n            pass  # Redundant pass statement\n        else:\n            continue  # Redundant continue statement\n\n        # Unnecessary arithmetic operation\n        temp = arr[i] + arr[i - 1]\n        temp -= arr[i - 1]\n\n        # Decrement i with unnecessary operation\n        i = i - 1 + 0\n\n    # Return result through a redundant variable\n    final_result = result\n    return final_result\n<code_end>\n```", "modification": "\ndef can_arrange(arr):\n    \n    n = len(arr)\n    result = -1\n\n    \n    i = n - 1\n    while i > 0:\n        \n        if arr[i] < arr[i - 1]:\n            result = i\n            break\n        elif arr[i] >= arr[i - 1]:\n            pass  \n        else:\n            continue  \n\n        \n        temp = arr[i] + arr[i - 1]\n        temp -= arr[i - 1]\n\n        \n        i = i - 1 + 0\n\n    \n    final_result = result\n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 2, 4, 3, 5]], [[1, 2, 4, 5]], [[1, 4, 2, 5, 6, 7, 8, 9, 10]], [[4, 8, 5, 7, 3]], [[]], [[1]], [[1, 2, 3, 4, 5]], [[5, 4, 3, 2, 1]], [[1, 3, 5, 4, 6, 7, 9, 8]], [[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]], [[1, 4, 2, 5, 6, 7, 8, 9, 10, 3]], [[1, 3, 2, 4]], [[5, 4, 3, 2]], [[-1, 0, 1, 2, 3]], [[2, 3, 1, 4]], [[1, 3, 4]], [[6, 0, 1, 2, 3]], [[1, 4, 2, 5, 6, 8, 9, 10, 3]], [[2, 3, 4, 5]], [[2]], [[1, 2, 5, 6, 8, 9, 10, 3]], [[5, 4, 3, 1, 2]], [[1, 3, 5, 4, 6, 7, 8]], [[3, 1]], [[1, 4, 2, 5, 6, 7, -1, 9, 10, 3]], [[1, 4, 2, 5, 7, -1, 9, 10, 3]], [[6, 0, 1, 3]], [[-1, 0, -2, 1, 2, 3]], [[1, 4, 2, 5, 6, 8, 7, -1, 9, 10, 3]], [[10, 1]], [[5, 4, 2]], [[2, 1]], [[3, 2, 4]], [[5, 4, 6, 2]], [[1, 4, 2, 6, 8, 7, -1, 9, 10, 3]], [[6, 0, 1, 2, 4]], [[5, 4, 2, 1, 8]], [[9, 8, 7, 6, 5, 4, 3, 2, 1]], [[8, 4, 3, 2]], [[1, 4, 2, 6, 7, 5, -1, 10, 3]], [[-1, 2, 1]], [[1, 3, 5, 4, 6, 7, 9]], [[1, 3, -2]], [[-1, 2, 0]], [[5, 10, 1]], [[6, 0, 10, 2, 4]], [[6, 3, 4, 5]], [[1, 4, 2, 5, 6, 7, -1, 9, 3]], [[6, 0, 10, 4]], [[2, 3, 7, 4]], [[10, 8, 7, 6, 5, 4, 3, 2, 1]], [[6, 0, 2, 4]], [[2, 4, 10, 5]], [[8, 4, 3]], [[3]], [[5, 4, 6, -2]], [[5, 4, 2, 1]], [[4, 2, 1]], [[10, 3, -2, -1, 1]], [[1, 3]], [[3, 7]], [[0, 4, 2, 1, 8]], [[10, 9, 8, 7, 6, 5, 4, 3, 2, 0]], [[10, 3, 2, -2, -1, 1]], [[6, 4, 3, 1, 2]], [[-1, 0, 1, 7, 3]], [[1, 8, 4, 3, 2]], [[1, 3, 5, 4, 6, 7, 10, 8]], [[3, 1, 4]], [[1, 6, -2, 3]], [[5, 4, -3]], [[-1, 0, 6, 7, 3]], [[5, -3]], [[6, 0, 1, 2, 3, 4]], [[-1, 5, 0, 1, 2, 3]], [[7]], [[1, 3, 5, 4, 10, 6, 7, 9]], [[6, 3, 2, 4]], [[1, 3, 2, -3, 4]], [[1, 4, 2, 5, -2, 7, -1, 9, 10, 3]], [[1, 3, 5, 4, -1, 6, 7, 9, 8]], [[1, 4, 5, 6, 8, 7, -1, 9, 10, 3]], [[-3, 5, 4, -2]], [[5, 3, 2]], [[-1, -2, 1, 2, 3]], [[2, 1, 4, 10, 5]], [[0, 3]], [[-2, 5, -3]], [[2, 3, 4, 7]], [[10, 9, 8, 7, 6, 5, 4, 3, 1, 0]], [[6, 1, 2, 4]], [[4, 1]], [[-1, 2]], [[5, 6, 7, 0, 10, 4]], [[0, 1, 2, 4]], [[10]], [[1, 6, 0, -2, 3]], [[5, -3, 4, 6, -2]], [[5, 10]], [[4, 2, 1, 3, 5, 6, 7]], [[10, 9, 8, 4, 7, 6, 5, 2, 1]], [[3, 6, 9, 12, 15, 18, 21, 19, 16, 13, 10, 7, 4, 1, 2, 5, 8, 11, 14, 17, 20]], [[1, 3, 5, 4, 2, 6, 8, 7, 10]], [[1, 2, 3, 10, 9, 8, 7, 6, 5]], [[10, 9, 8, 1, 2, 3, 4, 7, 6, 5]], [[1, 10, 2, 9, 3, 8, 4, 7, 5, 6]], [[5, 4, 3, 2, 1, 6, 7, 8, 9, 10]], [[1, 3, 2, 5, 4, 7, 6, 9, 8, 10]], [[4, 3, 2, 1]], [[4, 8, 2, 1]], [[4, 6, 2, 1]], [[10, 8, 17, 7, 6, 5, 2, 18, 1]], [[3, 6, 9, 12, 15, 18, 21, 19, 16, 13, 10, 7, 4, 1, 2, 5, 8, 14, 17, 20]], [[10, 9, 8, 4, 17, 6, 5, 2, 1]], [[1, 3, 2, 5, 4, 7, 9, 8, 10]], [[4, 6, 3, 1]], [[4, 3, 2, 5, 1]], [[1, 2, 4, 10, 9, 8, 7, 6, 5]], [[2, 4, 10, 9, 8, 7, 6, 5]], [[1, 5, 4, 2, 6, 8, 7, 10]], [[1, 3, 5, 4, 2, 8, 7, 10]], [[10, 9, 8, 1, 2, 3, 4, 7, 6]], [[4, 3, 12, 2, 1]], [[19, 4, 3, 2, 1]], [[10, 9, 8, 4, 18, 6, 5, 2, 1]], [[4, 2]], [[4, 3, 2, 5]], [[4, 9, 3, 2, 5]], [[4, 2, 5, 1]], [[4, 3]], [[4, 6, 3]], [[10, 9, 8, 1, 18, 2, 3, 4, 7, 6]], [[9, 4, 2, 1]], [[4, 3, 1]], [[0, 1, 3, 2, 5, 4, 7, 9, 8, 10]], [[0, 1, 3, 2, 5, 4, 6, 7, 9, 8, 10]], [[3, 2, 1, 5]], [[1, 3, 5, 4, 0, 2, 6, 8, 7, 10]], [[0, 3, 12, 18, 2, 5, 4, 6, 7, 9, 8, 10]], [[1, 3, 5, 2, 6, 8, 7, 10]], [[4]], [[1, 3, 5, 2, 6, 8, 10]], [[1, 4, 5, 2, 6, 8, 10]], [[1, 2, 3, 10, 9, 8, 6, 5]], [[4, 3, 2, 5, 16, 1]], [[1, 3, 2, 5, 4, 7, 6, 8, 10]], [[1, 5, 4, 2, 8, 7, 10]], [[4, 3, 2, 5, 19, 1]], [[1, 0, 3, 2, 5, 4, 7, 6, 9, 8]], [[4, 2, 3, 5, 1]], [[0, 3, 12, 18, 21, 5, 4, 6, 7, 9, 11, 8, 10]], [[5, 4, 9]], [[1, 0, 5, 4, 2, 6, 8, 7, 10]], [[0, 1, 3, 5, 4, 6, 7, 9, 8, 10]], [[19, 4, 2, 1]], [[19, 4, 17, 2, 1]], [[11, 3]], [[1, 3, 5, 4, 0, 16, 6, 8, 7, 10]], [[8, 3, 1]], [[5, 15, 2]], [[11, 2, 3]], [[1, 2, 4, 10, 9, 7, 6, 5]], [[3, 5]], [[3, 6, 9, 12, 15, 18, 21, 19, 16, 13, 7, 4, 1, 2, 5, 8, 14, 17, 20]], [[19, 4, 3, 10, 8, 9, 1]], [[1, 3, 5, 4, 0, 16, 8, 7, 10]], [[19, 0, 4, 2, 1]], [[9, 13, 4, 2, 1]], [[2, 5]], [[4, 16, 2, 5, 19, 1]], [[5, 4, 9, 2]], [[10, 9, 8, 4, 17, 6, 5, 15, 2, 1]], [[3, 6, 9, 12, 15, 18, 21, 19, 16, 13, 4, 1, 2, 5, 8, 14, 17, 20]], [[19, 4, 12, 2, 1]], [[5]], [[8, 14, 3, 1]], [[1, 3, 2, 5, 14, 4, 0, 16, 7, 10]], [[19, 4, 12, 2]], [[3, 5, 4, 8, 15, 7, 10]], [[5, 2]], [[1, 4, 5, 18, 2, 6, 8, 10]], [[1, 4, 5, 2, 6, 8]], [[2, 1, 5]], [[3, 6, 9, 12, 15, 21, 19, 16, 13, 10, 7, 4, 1, 2, 5, 8, 11, 14, 17, 20]], [[10, 9, 8, 1, 2, 3, 4, 7, 5]], [[9, 4, 2]], [[4, 18, 3, 1]], [[15, 2, 3, 10, 9, 8, 6, 5]], [[9, 2, 1]], [[4, 2, 5, 19, 1]], [[4, 6, 17]], [[1, 3, 5, 2, 4, 8, 10]], [[5, 4, 2, 6, 8, 7, 10]], [[8, 4, 15, 9, 2]], [[1, 5, 0, 16, 8, 7, 10]], [[5, 4]], [[5, 4, 3, 2, 1, 6, 7, 9, 10]], [[4, 3, 5, 16, 1]], [[3, 4]], [[8, 4, 3, 15, 9, 2]], [[4, 3, 7, 5, 19, 1]], [[4, 6, 2, 7, 9]], [[6, 9, 12, 15, 21, 19, 16, 13, 10, 7, 4, 1, 2, 5, 8, 11, 14, 17, 20]], [[5, 15]], [[4, 21, 3, 9]], [[11, 2]], [[1, 3, 5, 2, 6, 8]], [[1, 0, 5, 14, 2, 6, 8, 7, 10]], [[6, 2, 1]], [[5, 4, 15, 2]], [[20, 19, 4, 3, 2, 1]], [[1, 3, 2, 6, 8, 7, 10]], [[5, 4, 3, 1, 6, 7, 9, 10]], [[12, 3]], [[8, 4, 15, 10, 9, 2]], [[1, 3, 5, 4, 0, 17, 16, 8, 7, 10]], [[3, 5, 0, 16, 8, 7, 10]], [[19, 18, 3, 1]], [[5, 9]], [[4, 5, 1]], [[15]], [[3, 2, 1]], [[0, 20, 2, 1]], [[15, 1, 12, 3, 5, 4, 2, 8, 7, 10]], [[1, 3, 2, 6, 5, 8]], [[1, 3, 5, 9, 6, 8, 10]], [[2, 3]], [[3, 4, 21, 2, 9]], [[4, 10, 2, 7]], [[12, 1]], [[20, 1, 2, 3, 10, 9, 8, 7, 6, 5]], [[3, 2, 5]], [[4, 0, 1]], [[0, 1, 5, 4, 6, 7, 9, 8, 10]], [[1, 10, 2, 9, 3, 8, 4, 13, 5, 6]], [[1, 3, 5, 2, 21, 4, 8, 10]], [[2, 4, 10, 8, 7, 6, 5]], [[8, 4, 15, 9]], [[3, 12, 2, 1]], [[3, 5, 0, 16, 15, 8, 7]], [[19, 4, 13, 2, 1]], [[15, 3, 5, 4, 2, 8, 7, 10]], [[1, 3, 5, 6, 8, 14, 10]], [[19, 3, 0, 4, 2, 1]], [[19, 4, 12, 1]], [[4, 5, 19, 1]], [[10, 8, 17, 7, 5, 3, 18, 1]], [[3, 6, 9, 12, 15, 18, 21, 19, 16, 13, 4, 1, 2, 8, 14, 17, 20]], [[11, 10, 2]], [[4, 9, 3, 2]], [[2, 8, 4, 3, 15, 9]], [[19, 3, 13, 2, 1]], [[12, 5, 9]], [[1, 3, 2, 5, 14, 4, 16, 7, 10]], [[10, 2, 7]], [[4, 3, 2, 1, 6, 7, 8, 9, 10]], [[1, 20, 5, 2, 21, 4, 8, 10]], [[5, 19, 1]], [[1, 3, 5, 4, 2, 8, 10]], [[1, 3, 2, 12, 8, 7, 10]], [[13, 6, 2, 1]], [[19, 4, 12, 0, 1]], [[10, 3, 5, 19, 1]], [[5, 6, 9]], [[19, 8, 14, 3]], [[4, 18, 20, 5, 2, 1]], [[15, 1, 12, 20, 5, 4, 2, 8, 7, 10]], [[10, 9, 21, 4, 17, 6, 15, 2, 1]], [[15, 5, 4, 2, 7, 10]], [[4, 5, 12, 1]], [[1, 4, 5, 2, 11, 8, 10, 6]], [[-1, 5, 0, 2]], [[16, 9, 2, 1]], [[2, 3, 10, 9, 8, 6, 1, 5]], [[4, 6, 2, 0, 1]], [[20, 4, 12, 1]], [[3, 2, 5, 19, 1]], [[1, 3, 0, 6, 8, 14, 10]], [[4, 15, 2]], [[4, 10, 12]], [[9]], [[3, 2, 5, 4, 7, 9, 8, 10]], [[4, 18, 20, 5, 9, 1]], [[4, 16, 2, 5, 19]], [[5, 4, 3, 2, 1, 6, 15, 9, 10]], [[4, 5, 2, 6, 8]], [[4, 20, 5, 9, 1]], [[15, 16, 2, 3, 5, 19]], [[10, 9, 8, 1, 5, 2, 3, 4, 7, 6]], [[3, 2, 15, 5]], [[10, 8, 17, 7, 6, 2, 18, 1]], [[1, 2, 4, 17, 10, 9, 7, 6, 18]], [[1, 3, 2, 5, 8]], [[3, 2]], [[4, 10, 7]], [[18, 4, 6, 17]], [[19, 4, 3, 20, 2]], [[5, 6, 4, 9]], [[1, 3, 5, 4, 6, 7, 9, 8, 10]], [[1, 20, 5, 6, 2, 21, 4, 8, 10]], [[19, 4, 14, 3, 2, 1]], [[19, 18, 1]], [[4, 3, 2, 0, 5, 16, 1]], [[19, 4, 10, 8, 9, 1]], [[19, 5]], [[3, 0, 2, 1]], [[4, 13, 12]], [[37.45846213316932, -21.8131802318007, -18.630055685163583, -76.49298700358514, -63.655488885630994, 81.75342869524977, 96.86306070463999, 77.21191831561089, 22.028951203200748, -54.83341431889768]], [[20, 6, 3, 2, 1]], [[1, 20, 3, 5, 4, 0, 2, 6, 8, 7, 10]], [[6, 4, 3, 2, 1]], [[5, 2, 6, 21, 8]], [[1, 2, 10, 9, 8, 6, 5, 3]], [[1, 3, 2, 5, 14, 4, 0, 16, 10]], [[19, 4, 10, 7, 9]], [[1, 3, 2, 5]], [[3, 6, 9, 12, 0, -1, 21, 19, 16, 13, 10, 7, 4, 1, 2, 5, 8, 11, 14, 17, 20]], [[5, 3, 2, 1, 6, 7, 8, 9, 10]], [[2, 0]], [[4, 2, 10, 9, 8, 6, 5, 3]], [[3, 5, 0, 16, 15, 7]], [[19, 4, 13, 2, 8]], [[4, 3, 2, 1, 6, 15, 9, 10]], [[5, 4, 3, 2, 1, 6, 7, 17, 10]], [[15, 2, 5, 19]], [[18, 9, 6, 15, 16, 2, 3, 5, 19]], [[1, 3, 2, 6, 8]], [[19, 12, 1]], [[-1, 12, 3]], [[22.028951203200748, -21.8131802318007, 37.45846213316932, -76.49298700358514, 90.03562713717855]], [[6, 21, 1]], [[6]], [[15, 16, 2, 3, 4, 19]], [[9, 1]], [[1, 10, 2, 9, 3, 18, 8, 4, 5, 6]], [[4, 18, 20, 2, 1]], [[1, 4, 2]], [[1, 5, 2, 6, 8]], [[18, 5]], [[20, 15]], [[4, 10, 11, 12]], [[3, 2, 12, 8, 7, 10]], [[20]], [[8]], [[10, 3, 16, 19, 1]], [[13, 1]], [[19, 4, 3, 20, 1]], [[19, 4, 6, 2, 1]], [[0, 5, 4]], [[8, 3]], [[17, 3, 0, 2]], [[20, 5, 1, 2]], [[10, 9, 8, 5, 2, 3, 4, 7, 6]], [[7, 4, 15, 9]], [[19, 4, 10, 8, 9, 16, 1]], [[19, 4, 13, 3, 2, 1]], [[10, 9, 1, 2, 3, 4, 7, 6, 5]], [[4, 3, 5, 1]], [[0, 20, 1, 5, 4, 6, 7, 9, 8, 10]], [[1, 5, 4, 2, 6, 7, 10]], [[19, 4, 3, 8, 9, 1]], [[1, 5]], [[13, 9, 0, 8, 4, 18, 6, 5, 2, 1]], [[4, 2, 1, 6, 15, 9, 10]], [[4, 9, 19, 2]], [[4, 3, 2, 5, 21]], [[10, 3, 6, 19, 1]], [[4, 17, 18, 20, 2, 1]], [[20, 3, 12, 1]], [[5, 1]], [[2, 11, 3]], [[1, 0, 3]], [[10, 9, 21, 17, 6, 15, 2, 1]], [[19, 4, 6, 2]], [[4, 1, 3, 5]], [[2, 3, 1]], [[0, 1, 3, 2, 5, 4, 6, 15, 7, 9, 8, 10]], [[4, 2, 13, 6, 15, 9, 10]], [[4, 3, 2, 6]], [[1, 3, 0, 5, 4, 2, 6, 8, 7, 10]], [[10, 2]], [[2, 21, 5]], [[4, 3, 0, 5, 16, 1]], [[1, 4, 20, 2, 6, 8, 10]], [[10, 8, 17, 6, 2, 18]], [[1, 10, 9, 3, 8, 4, 13, 5, 6]], [[5, 2, 1, 4, 21, 8]], [[1, 3, 5, 4, 6, 7, 8, 10]], [[6, 3]], [[1, 5, 2, 6]], [[1, 4, 15, 18, 2, 6, 8, 10]], [[9, 2]], [[8, 4, 3, 15, 9]], [[18, 9, 6, 15, 20, 16, 2, 3, 5, 19]], [[19, 21, 17, 3, 1]], [[-1, 15]], [[4, 2, 10, 9, 8, 6, 13, 5, 3]], [[4, 3, 11, 2, 5, 21]], [[1, 3, 2, 5, 4, 7, 6, 9, 10]], [[6, 16, 1]], [[9, 8, 5, 2, 3, 4, 7, 6]], [[20, 1, 2, 3, 10, 9, 8, 7, 17, 5]], [[5, 10, 7]], [[19, 5, 17, 7, 2, 1]], [[19, 4, 18, 3, 1]], [[8, 4, 13, 9]], [[11, 4, 10, 9, 12]], [[19, 4, 12, 15, 2]], [[4, 2, 3, 5, 0]], [[1, 15, 3]], [[1, 3, 4, 2, 6, 8, 7, 10]], [[18, 9, 4, 6, 15, 20, 16, 2, 3, 5, 19]], [[10, 3, 12, 6, 19, 1]], [[3, 2, 5, 4, 7, 8, 10]], [[3, 2, 5, 4, 14, 7, 8, 10]], [[1, 13, 4, 5, 18, 2, 6, 8, 10]], [[15, 1, 12, 3, 19, 4, 2, 8, 7, 10]], [[18, 4, 5]], [[1, 3, 2, 5, 13, 4, 7, 6, 9, 8, 10]], [[4, 1, 3, 11, 2, 5, 21]], [[4, 19, 2, 5, 1]], [[19, 4, 13, 3, 2]], [[4, 9, 19, 3]], [[1, 5, 2, 6, 20]], [[5, 3, 2, 1]], [[19, 4, 10, 8, 9, 18, 16, 1]], [[4, 18, 2, 1]], [[1, 4, 15, 18, 11, 2, 6, 8, 10]], [[8, 4, 15, 2]], [[20, 19, 4, 3, 1, 0]], [[4, 2, 13, 12, 15, 9, 10]], [[1, 5, 6, 8, 14, 10]], [[16, 4, 12, 2]], [[5, 15, 17, 2]], [[1, 4, 15, 18, 11, 2, 8, 10]], [[19, 4, 13, 2]], [[1, 3, 4, 0, 2, 8, 7, 10]], [[3, 2, 5, 7, 9, 8, 10]], [[19, 4, 10, 8, 9, 16]], [[1, 20, 5, 2, 3, 21, 4, 8, 10]], [[6, 20, 1]], [[8, 10, 12]], [[3, 2, 4, 5, 21]], [[1, 20, 5, 16, 3, 4, 8, 10]], [[11, 4, 17, 18, 20, 2, 1]], [[11, 2, 4]], [[4, 6]], [[13, 4, 10, 12]], [[18, 19, 3, 13, 2, 1]], [[8, 4, 2]], [[10, 8, 17, 7, 9, 6, 2, 18, 1]], [[20, 1, 2, 3, 10, 9, 8, 6, 5]], [[0, 1, 5, 6, 4, 8, 14, 10]], [[4, 2, 3, 1]], [[3, 5, 0, 16, 7, 10]], [[14, 5, 2, 19, 1]], [[1, 3, 9, 6, 8, 10]], [[5, 2, 6, 20]], [[12, 2, 3]], [[8, 4, -1, 3, 15, 9, 2]], [[1, 0, 2, 5, 4, 7, 6, 9, 8]], [[1, 5, 0, 16, 8, 7, 12, 10]], [[13, 10, 12]], [[2, 4]], [[15, 1, 12, -1, 20, 5, 4, 2, 8, 7, 10]], [[20, 2, 3, 10, 9, 8, 7, 17, 5]], [[4, 6, 3, 2, 5, 1]], [[10, 2, 12, 6, 1]], [[3, 10, 2, 7]], [[5, 9, 19, 3]], [[1, 5, 4, 2]], [[3, 5, 2, 16, 8, 7, 10]], [[4, 20, 1]], [[19, 17, 4, 3, 21, 2]], [[3, 5, 18, 0, 16, 15, 8, 7]], [[4, 6, 2, 5, 1]], [[13, 4, 2, 1]], [[9, 6]], [[20, 1, 2, 4, 10, 9, 8, 6, 5]], [[1, 3, 5, 16, 4, 2, 8, 7, 10]], [[8, 4, 1]], [[4, 3, 1, 5]], [[8, 7, 4, 15, 9]], [[20, 4, 6, 3]], [[10, 8, 5, 2, 3, 4, 7, 6]], [[1, 5, 4, 2, 6, 8, 10]], [[10, 21, 17, 15, 2]], [[8, 4, 15, 11, 9]], [[19, 13, 3, 2, 1]], [[0, 5]], [[13, 11, 4, 10, 12]], [[20, 5, 1]], [[5, 4, 21, 9]], [[3, 2, 4, 7, 9, 8, 10]], [[1, 3, 5, 4, 0, 6, 8, 7, 10]], [[4, 5, 6, 1]], [[16, 15]], [[0, 2, 3, 10, 9, 8, 6, 1, 5]], [[13, 12]], [[15, 2, 3, 10, 9, 6, 5]], [[13]], [[4, 17, 18, 20, 1]], [[10, 16, 17, 7, 5, 3, 18, 1]], [[3, 6, 9, 12, 15, -1, 21, 19, 16, 13, 10, 7, 4, 1, 2, 5, 8, 11, 14, 17, 20]], [[16, 9, 3, 1]], [[20, 4, 17, 2, 1]], [[19, 4, 3, 12, 2]], [[13, 11, 4, 10, 14]], [[20, 3, 0, 4, 2, 1]], [[21, 1]], [[19, 4, 3, 1]], [[16, 4, 12, 3]], [[19, 4, 10, 8, 9, 11, 1]], [[4, 18, 20, 5, 1]], [[1, 5, 4, 2, 6, 8]], [[1, 3, 6, 8, 7, 10]], [[3, 0, 6, 8, 14, 10]], [[19, 6, 5]], [[1, 4, 16, 15, 18, 11, 6, 8, 10]], [[8, 15]], [[15, 2, 3, 9, 6, 5]], [[4, 8, 19, 16, 3]], [[4, 18, 20, 5, 2]], [[19, 4, 10, 8, 11, 1]], [[12]], [[9, 7, 8, 20, 1]], [[16, 1]], [[1, 10, 2, 9, 3, 18, 8, 4, 13, 6]], [[16, 21, 1]], [[19, 20, 13, 4, 10, 8, 9, 16]], [[1, 5, 0, 16, 7, 10]], [[15, 2, 3, 9, 8, 6, 5]], [[7, 4, 3, 15, 9]], [[2, 12]], [[4, 11, 7]], [[5, 4, 17, 2, 1]], [[6, 2, 5, 1]], [[8, 4, 10, 9, 2]], [[6, 12, 2, 3]], [[4, 10, 20, 12]], [[3, 2, 12, 8, 7, 14, 10]], [[1, 3, 14, 5, 4, 0, 17, 15, 16, 10]], [[4, 1, 16, 5]], [[4, 10, 14, 12]], [[1, 0, 5, 4, 10, 7, 6, 9, 8]], [[1, 4, 15, 11, 2, 8, 10]], [[19, 17, 4, 3, 21, 20, 2]], [[10, 11]], [[1, 5, 4, 6, 8, 7, 10]], [[1, 4, 11, 2, 5, 8]], [[0, 7, 1, 5, 6, 4, 8, 14, 10]], [[19, 4, 10, 8, 11, -1]], [[5, 4, 15, 17, 2]], [[16, 9, 3, 2, 1]], [[20, 19, 4, 12, 2, 1]], [[4, 14, 2]], [[7, 15]], [[1, 5, 6, 8]], [[1, 3, 2, 0, 13, 4, 7, 6, 9, 8, 10]], [[15, 16, 2, 7, 3, 5, 19]], [[17, 5, 9, 19, 3]], [[10, 20, 2, 7]], [[18, 3]], [[16, 0, 6, 8, 14]], [[1, 3, 2, 8]], [[1, 3, 2, 5, 14, 4, 16, 10]], [[15, 8, 2, 7, 3, 10]], [[4, 9, 3, 11, 2, 5, 21]], [[1, 10, 2, 9, 3, 18, 8, 4, 6]], [[1, 13, 4, 5, 18, 2, 6, 8, 11]], [[1, 5, 0, 17, 8, 10]], [[8, 20, 19, 4, 3, 2, 1]], [[5, 4, 3, 1, 6, 8, 9, 10]], [[4, 0, 3, 12, 2, 19, 1]], [[1, 3, 4, 2, 6, 8, 7, 9]], [[5, 10, 14, 12]], [[11, 1, 4]], [[1, 20, 6, 2, 21, 8, 10]], [[4, 13]], [[3, -1, 0, 2, -2]], [[1, 2, 3, 4, 5, 6]], [[6, 5, 4, 3, 2, 1]], [[1, 5, 2, 4, 3]], [[4, 2, 1, 3, 11, 7]], [[6, 1, 3, 11, 7]], [[3, 6, 9, 12, 15, 18, 21, 19, 13, 10, 7, 4, 1, 2, 5, 8, 11, 14, 17, 20]], [[1, 2, 3, 10, 9, 8, 7, 5]], [[1, 3, 7]], [[2, 1, 3, 11, 7]], [[0, 2, 3, 10, 9, 8, 6, 5]], [[1, 2, 3, 18, 9, 8, 7, 5]], [[1, 10, 2, 9, 3, 14, 4, 7, 5, 6]], [[1, 2, 4, 18, 9, 8, 7, 5]], [[0, 1, 3, 7]], [[2, 1, 3, 7]], [[10, 9, 8, 1, 2, 4, 7, 6, 5]], [[0, 2, 3, 21, 9, 8, 6]], [[0, 2, 4, 10, 9, 8, 6, 5]], [[1, 10, 2, 9, 14, 7, 5, 6]], [[19, 2, 1, 3, 11, 7]], [[1, 2, 18, 9, 8, 7]], [[2, 3, 11, 7]], [[2, 3, 10, 9, 8, 7, 6, 5]], [[1, 2, 3, 10, 9, 7, 5]], [[18, 1, 3]], [[2, 3, 10, 9, 7, 5]], [[1, 2, 3, 18, 9, 8, 7]], [[0, 2, 4, 10, 17, 9, 8, 6, 5]], [[5, 4, 3, 2, 12]], [[18, 1, 20, 3]], [[1, 2, 18, 9, 8, 7, 5]], [[2, 3, 10, 9, 8, 7, 6]], [[1, 2, 18, 10, 7, 5]], [[16, 2, 3, 10, 9, 8, 7, 6, 5]], [[16, 2, 3, 10, 9, 8, 6]], [[5, 14, 3, 2, 12]], [[1, 14, 3, 18, 9, 8, 7, 5]], [[13, 1, 2, 3, 10, 9, 8, 7, 5]], [[4, 2, 1, 19, 5, 6, 7]], [[4, 2, 1, 6, 7, 8, 9, 10]], [[5, 4, 3, 2, 10, 12]], [[4, 2, 3, 1, 19, 5, 6, 7]], [[2, 10, 9, 7, 5]], [[1, 4, 7]], [[4, 3, 2, 1, 6, 8, 9, 10, 7]], [[1, 2, 18, 9, 8, 7, 11]], [[14, 4, 7]], [[1, 3, 10, 9, 8, 7, 5]], [[2, 1, 3, 10, 7]], [[10, 9, 8, 2, 4, 7, 6, 5]], [[1, 3, 0, 10, 9, 8, 6, 15]], [[3, 6, 9, 12, 15, 18, 21, 19, 13, 10, 7, 4, 1, 2, 5, 8, 14, 17, 20]], [[2, 3, 10, 9, 7, 6]], [[18, 1, 21, 20, 3]], [[1, 2, 18, 10, 7, 4]], [[2, 1, 6, 7, 9, 10]], [[11, 2, 18, 10, 7, 4]], [[1, 2, 5, 4, 7, 6, 9, 8, 10]], [[18, 1, 3, 2]], [[2, 3, 10, 9, 8, 6, 5]], [[3, 5, 4, 2, 6, 8, 7, 10]], [[5, 14, 3, 2, 6, 12]], [[2, 1, 3, 11]], [[4, 2, 1, 5, 7, 8, 9, 10]], [[4, 2, 1, 6, 7, 8, 9, 20, 10]], [[4, 2, 1, 5, 7, 9, 10]], [[2, 3, 10, 9, 14, 8, 6, 5]], [[4, 2, 1, 6, 7, 11, 9]], [[1, 2, 4, 18, 9, 3, 13, 7, 5]], [[3, 2, 5, 4, 7, 6, 9, 8, 10]], [[5, 14, 3, 12]], [[19, 2, 0, 3, 11, 7]], [[2, 1, 4, 7]], [[2, 17, 3, 10, 9, 8, 6, 5]], [[2, 17, 11, 3, 10, 9, 8, 6, 5]], [[11, 1, 18, 10, 7, 4]], [[4, 2, 1, 19, 5, 14, 6, 7]], [[4, 3, 2, 1, 6, 7, 8, 11, 10]], [[1, 3, 10, 9, 8, 7]], [[1, 7]], [[4, 2, 19, 5, 6, 7]], [[6, 1, 3, 11, 13]], [[2, 1, 5, 7, 9, 10]], [[16, 2, 3, 11, 7]], [[2, 17, 11, 3, 10, 9, 8, 6]], [[4, 2, 1, 17, 19, 5, 14, 6, 7]], [[1, 2, 8, 3, 10, 9, 7, 5]], [[6, 1, 13]], [[2, 3, 10, 9, 7]], [[11, 3, 10, 9, 7, 5]], [[3, 4, 7]], [[1, 2, 18, 9, 8, 19]], [[12, 1, 10, 2, 9, 3, 14, 4, 7, 5, 6]], [[4, 2, 1, 5, 7, 8, 9]], [[4, 2, 5, 6, 7]], [[2, 4, 7]], [[2, 1, 6, 7, 8, 9, 10]], [[2, 11, 7]], [[1, 10, 2, 9, 3, 8, 7, 5, 6]], [[2, 10, 9, 7]], [[13, 1, 2, 3, 6, 10, 9, 8, 7, 5]], [[2, 3, 10, 5, 8, 7, 6]], [[1, 3, 2]], [[11, 5, 4, 3, 2, 10, 12]], [[0, 2, 4, 10, 17, 9, 8, 5]], [[16, 2, 10, 9, 8, 7, 6, 5]], [[11, 3, 10, 9, 8, 7, 5]], [[1, 4, 3, 7]], [[2, 1, 3, 11, 18]], [[4, 2, 1, 19, 5, 14, 18, 7]], [[2, 17, 4, 7]], [[2, 1, 5, 7, 10]], [[4, 3, 2, 1, 6, 7, 8, 9, 20, 10]], [[14, 1, 3, 7]], [[4, 2, 1, 12, 6, 7, 11, 9]], [[6, 1, 3, 12, 11, 13]], [[2, 18, 10, 6, 4]], [[6, 4, 3, 2, 12]], [[0, 2, 10, 9, 8, 6, 5]], [[4, 2, 1, 5, 7, 9, 10, 3]], [[2, 20, 10, 9, 7]], [[1, 2, 4, 20, 18, 9, 8, 7, 5]], [[13, 1, 2, 3, 10, 9, 8, 7]], [[4, 2, 1, 21, 6, 7, 8, 9, 10]], [[2, 17, 11, 3, 10, 9, 8, 13, 6, 5]], [[18, 1, 21, 3]], [[2, 10, 9, 7, 3, 5]], [[4, 2, 1, 6, 8, 9, 10]], [[4, 3, 2, 1, 6, 7, 8, 9]], [[4, 2, 1, 6, 8, 19, 9, 10]], [[3, 5, 4, 2, 6, 8, 20, 10]], [[4, 17, 1, 5, 7, 8, 9, 10]], [[0, 1, 2, 3, 7]], [[18, 1, 20, 15]], [[4, 2, 1, 5, 7, 14, 8, 9, 10]], [[2, 1, 5, 3, 10, 7]], [[2, 7]], [[18, 1, 14, 3]], [[1, 3, 0]], [[1, 0, 2, 10, 9, 8, 6, 5]], [[10, 0, 7]], [[1, 2, 9, 14, 7, 5, 6]], [[2, 20, 10, 9, 8, 7, 6]], [[1, 5, 4, 2, 6, 12, 7, 10]], [[1, 2, 18, 9, 3, 8, 7, 5]], [[3, 10, 8, 9, 6, 5]], [[4, 7]], [[4, 14]], [[2, 4, 10, 9, 7, 5]], [[2, 0, 5, 3, 10, 7]], [[1, 2, 3, 18, 8, 7]], [[1, 18, 9, 8, 7]], [[6, 20, 10, 9, 7]], [[1, 2, 9, 14, 7, 5, 10, 6]], [[2, 1, 3, 13]], [[2, 10, 9, 7, 6, 5]], [[2, 1, 3, 10, 11, 18]], [[9, 14, 4, 7]], [[1, 2, 17, 3, 18, 9, 8, 7, 5]], [[18, 3, 2]], [[0, 2, 4, 10, 17, 9, 6, 5]], [[3, 2, 18, 10, 6, 4]], [[18, 1, 15]], [[0, 14, 3, 18, 9, 8, 7, 5]], [[4, 2, 1, 6, 8, 13, 19, 9, 10]], [[1, 14, 17, 4, 7]], [[1, 15, 2, 9, 14, 7, 5, 6]], [[13, 11, 3, 6, 10, 9, 8, 7, 5]], [[4, 16, 2, 1, 6, 8, 13, 19, 9, 10]], [[1, 11, 3, 2]], [[3, 1, 6, 8, 9, 10]], [[1, 2, 9, 8, 19]], [[17, 18, 1, 21, 3]], [[13, 1, 2, 3, 10, 9, 7, 5]], [[3, 5, 2, 6, 8, 20, 10]], [[2, 5, 3, 11, 7]], [[2, 1, 6, 7, 8, 9]], [[18, 10, 6, 4]], [[2, 1, 3, 9]], [[0, 2, 4, 10, 17, 9, 5]], [[6, 4, 17, 2, 12]], [[21, 4, 7]], [[18, 1, 6]], [[2, 17, 3, 10, 9, 8, 6]], [[0, 2, 10, 9, 8, 6]], [[2, 1, 5, 18, 10, 7]], [[4, 2, 1, 12, 6, 7, 8, 9, 10]], [[0, 21, 2, 4, 10, 17, 9, 6, 5]], [[0, 2, 10, 16, 17, 9, 8, 5]], [[2, 1, 9]], [[1, 2, 9, 16, 7, 5, 6]], [[2, 1, 5, 0, 7, 10]], [[4, 2, 1, 6, 7, 8, 11, 9, 20, 10]], [[1, 2, 9, 19]], [[0, 10, 2, 9, 3, 14, 4, 7, 5, 6]], [[5, 7]], [[1, 6]], [[4, 2, 1, 19, 5, 14, 18, 12, 7]], [[21, 9, 5, 7]], [[6, 14, 1, 3, 7]], [[1, 2, 3, 9, 8, 6, 5]], [[3, 5, 2, 6, 8, 20]], [[2, 1, 5, 3, 10, 11, 4, 18]], [[1, 5, 7]], [[2, 1, 5, 13, 10]], [[18, 2, 1, 21, 3]], [[1, 19, 2, 5, 4, 7, 9, 8, 10]], [[4, 2, 3, 1, 18, 5, 6, 7]], [[1, 2, 18, 10, 6, 5]], [[17, 1, 2, 18, 9, 8, 7]], [[0, 2, 11, 10, 17, 9, 8, 6, 5]], [[18, 10, 9, 8, 1, 2, 3, 4, 7, 6, 5]], [[4, 2, 1, 5, 7, 14, 9, 10]], [[1, 2, 3, 9]], [[0, 2, 11, 17, 9, 8, 6, 5]], [[15, 10, 0]], [[4, 2, 1, 6, 8, 9]], [[4, 2, 1, 19, 6, 14, 18, 7]], [[13, 1, 2, 3, 6, 10, 9, 8, 7, 11, 5]], [[2, 0, 3, 10, 7]], [[16, 2, 3, 10, 9, 7, 6, 5]], [[9, 3, 7]], [[4, 2, 0, 6, 8, 9]], [[12, 1, 10, 2, 9, 14, 4, 7, 5, 6]], [[0, 2, 3, 4, 10, 17, 9, 8, 5]], [[1, 2, 20, 3, 9, 8, 6]], [[1, 2, 8, 3, 10, 9, 14, 5]], [[4, 2, 19, 5, 6]], [[20, 14, 4, 7]], [[2, 9, 14, 7, 5, 10, 6]], [[2, 3, 10, 9, 8, 7, 5]], [[1, 10, 8, 9, 7]], [[2, 8, 3, 7]], [[1, 13]], [[6, 14, 1, 7]], [[21, 1, 5, 7]], [[3, 18, 10, 6, 4]], [[4, 2, 1, 5, 7, 15, 9, 10]], [[2, 12, 3, 11, 10, 9, 8, 7, 5]], [[2, 3, 10, 9, 1, 7, 5]], [[17, 1, 2, 18, 21, 8, 7]], [[10, 1, 7]], [[18, 20, 14]], [[14, 3, 4, 7]], [[11, 2, 10, 7, 4]], [[4, 1, 3, 5, 6, 7]], [[2, 6, 4, 7]], [[17, 2, 18, 21, 8, 7]], [[0, 1, 6]], [[18, 1, 2, 3, 9, 8, 6, 5]], [[4, 1, 3, 18, 5, 6, 7]], [[1, 10, 2, 9, 14, 7, 4, 6]], [[2, 20, 10, 9, 8, 7, 5]], [[2, 1, 13]], [[2, 12, 11, 10, 9, 8, 7, 5]], [[3, 10, 8, 7, 6, 5]], [[1, 2, 9, 14, 7, 20, 10, 17]], [[4, 1, 6, 7, 5, 9]], [[1, 16, 14, 3, 18, 9, 8, 7, 5]], [[19, 2, 0, 11, 7]], [[1, 0, 2, 10, 8, 6, 5]], [[1, 2, 8, 10, 9, 14, 5]], [[1, 2, 18, 0, 7, 5]], [[18, 10, 6]], [[0, 1, 2, 4, 10, 21, 17, 9, 6, 5]], [[13, 1, 2, 3, 6, 10, 9, 7, 11]], [[1, 2, 10, 6, 5]], [[18, 0, 1]], [[5, 2, 6, 8, 20]], [[4, 2, 1, 5, 19, 8, 9]], [[6, 1, 16, 13]], [[18, 10, 14, 6, 4]], [[6, 1, 3, 11, 5, 7]], [[1, 2, 5, 7]], [[0, 1, 8, 2, 3, 7]], [[1, 9]], [[4, 2, 1, 5, 7, 13, 14, 9, 10]], [[4, 2, 19, 6]], [[2, 6, 14, 1, 7]], [[4, 15, 3, 5, 6, 7]], [[2, 17, 11, 3, 10, 8, 6, 5]], [[1, 3, 12, 10, 9, 8, 6, 15]], [[13, 1, 2, 3, 6, 10, 9, 8, 11, 7, 5]], [[0, 5, 3, 10, 7]], [[4, 2, 1, 5, 7, 9, 21, 10, 3]], [[1, 2, 13, 14, 7, 5, 6]], [[17, 4, 7]], [[1, 10, 2, 3, 8, 4, 7, 5, 6]], [[0, 14, 3, 18, 9, 7, 5]], [[4, 2, 11, 1, 5, 7, 15, 9, 10]], [[0, 2, 4, 17, 9, 5]], [[1, 3, 9, 8, 6, 5]], [[0, 5, 3, 7, 19, 10]], [[19, 2, 1, 8, 3, 11, 7]], [[12, 1, 10, 2, 9, 4, 7, 5, 6]], [[3, 4, 5, 2, 6, 8, 20]], [[4, 3, 2, 6, 7, 8, 11, 9]], [[1, 8, 9, 7]], [[2, 17, 11, 3, 10, 8, 15, 5]], [[1, 2, 9, 14, 7, 5, 0, 6]], [[7, 1, 3, 11, 13]], [[3, 6, 8, 9, 10]], [[3, 4, 2, 1, 6, 7, 8, 9, 20]], [[2, 5, 7]], [[16, 2, 3, 10, 9, 7, 6, 0, 5]], [[2, 1, 3]], [[0, -1, 21, 2, 4, 10, 17, 9, 6, 5]], [[2, 21, 10, 9, 8, 7, 5]], [[17, 18, 1, 21, 2]], [[2, 1, 7]], [[3, 5, 2, 19, 8, 21]], [[2, 1, 6, 5, 7, 10]], [[17, 1, 20, 3]], [[1, 2, 3, 6, 10, 9, 7, 11]], [[1, 10, 7, 5]], [[1, 2, 3, 9, 6, 12]], [[21, 5, 7]], [[21, 4, 1, 5]], [[12, 3, 11, 10, 9, 8, 7, 5]], [[1, 16, 14, 3, 19, 11, 13, 7, 5]], [[4, 1, 5, 7, 9, 10, 3]], [[3, 10, 8, 9, 6]], [[11, 7]], [[1, 3, 9, 8, 5]], [[5, 14, 3, 2, 9]], [[2, 6, 14, 4, 7]], [[1, 5, 3, 10, 11, 4, 18]], [[10, 2, 3, 8, 4, 7, 5, 6]], [[18, 0, 21, 1]], [[1, 3, 20]], [[18, 12, 3]], [[0, 2, 16, 7]], [[19, 2, 1, 3, 12, 10, 11, 7]], [[2, 6, 4]], [[4, 1, 5, 7, 8, 9]], [[1, 4]], [[14, 4, 17, 1, 5, 7, 8, 9, 10]], [[19, 1, 0, 11, 7]], [[4, 2, 1, 17, 19, 5, 14, 6]], [[14, 7]], [[14, 3, 2, 12]], [[10, 2, 11, 7]], [[2, 1, 6, 7, 8, 20, 10]], [[1, 3, 5, 4, 2, 6, 8, 7, 14, 10]], [[1, 9, 7]], [[14, 9, 1, 20, 15]], [[1, 20, 9, 8, 6]], [[0, 2, 10, 16, 17, 19, 9, 8, 5]], [[1, 8, 3, 10, 9, 7, 5]], [[1, 2, 4, 10, 17, 9, 6, 5]], [[1, 8, 9]], [[17, 1, 2, 18, 9, 8, 3, 7]], [[2, 1, 6, 7, 8, 20, 5, 10]], [[1, 5, 16, 7, 9, 10, 3]], [[0, 4, 17, 1, 5, 7, 8, 19, 10]], [[5, 2, 6, 12, 8, 20]], [[5, 3, 2, 1, 6, 7, 8, 9, 20, 10]], [[4, 2, 1, 6, 8, 13, 9, 10]], [[1, 2, 5, 4, 7, 6, 9, 8, 12]], [[1, -1, 3, 6, 10, 9, 7]], [[1, 5, 4, 7, 6, 8, 12, 2]], [[4, 3, 2, 1, 6, 7, 8, 11, 9, 10]], [[1, 2, 18, 9, 19]], [[2, 8, 5, 3, 7]], [[4, 2, 1, 3, 5, 6, 12, 7]], [[2, 1, 7, 10]], [[3, 5, 4, 2, 6, 9, 20, 10]], [[6, 19, 2, 11, 7]], [[10, 1, 17, 7]], [[13, 1, 2, 3, 6, 10, 9, 8, 5]], [[10, 8, 9, 7]], [[1, 4, 12]], [[4, 2, 0, 6, 7, 8, 9, 10]], [[2, 14, 11, 3, 10, 9, 8, 6, 5]], [[2, 1, 3, 11, 12, 7]], [[16, 2, 3, 10, 9, 8, 14, 6]], [[6, 4]], [[0, 14, 3, 18, 9, 7]], [[1, 2, 3, 18, 9, 6, 5]], [[2, 12, 0, 11, 10, 9, 8, 7, 5]], [[13, 11, 3, 6, 10, 9, 8, 5]], [[4, 1, 18, 5, 6, 7]], [[10, 18, 2, 3, 8, 4, 7, 5, 6]], [[18, 20, 3]], [[3, 14, 4, 7]], [[5, 14, 11, 3, 2, 12]], [[8, 1, 20, 3]], [[2, 1, 6, 7, 8, 10]], [[2, 6, 5, 7, 10]], [[1, 3, 9]], [[2, 20, 10, 7, 4]], [[18, 2, 1, 21]], [[4, 3, 1, 6, 8, 13, 19, 9, 10]], [[8, 1, 5, 3, 10, 7]]]\n    results = [3, -1, 2, 4, -1, -1, -1, 4, 7, 9, 9, 2, 3, -1, 2, -1, 1, 8, -1, -1, 7, 3, 3, 1, 9, 8, 1, 2, 10, 1, 2, 1, 1, 3, 9, 1, 3, 8, 3, 8, 2, 3, 2, 2, 2, 3, 1, 8, 3, 3, 8, 1, 3, 2, -1, 3, 3, 2, 2, -1, -1, 3, 9, 3, 3, 4, 4, 7, 1, 2, 2, 4, 1, 1, 2, -1, 5, 2, 3, 9, 8, 9, 3, 2, 1, 4, -1, 2, -1, 9, 1, 1, -1, 5, -1, -1, 3, 4, -1, 2, 8, 13, 7, 8, 9, 8, 4, 8, 3, 3, 3, 8, 13, 8, 7, 3, 4, 8, 7, 6, 6, 8, 4, 4, 8, 1, 2, 3, 3, 1, 2, 9, 3, 2, 8, 9, 2, 8, 10, 6, -1, 3, 3, 7, 5, 6, 5, 5, 9, 4, 11, 1, 7, 8, 3, 4, 1, 8, 2, 2, 1, 7, -1, 12, 6, 7, 4, 4, -1, 5, 3, 9, 11, 4, -1, 3, 8, 3, 5, 1, 4, 3, 1, 12, 8, 2, 3, 7, 2, 4, -1, 3, 5, 4, 5, 1, 4, 4, -1, 5, 5, 2, 11, -1, 2, 1, 3, 7, 2, 3, 5, 5, 3, 1, 5, 8, 5, 3, -1, 2, -1, 2, 3, 8, 4, 4, -1, 3, 2, 1, 9, 1, 1, 7, 8, 5, 6, 3, 3, 6, 4, 6, 6, 5, 3, 3, 7, 11, 2, 3, 5, 4, 1, 7, 1, 3, 5, 2, 4, 5, 3, 3, 4, -1, 3, 5, 8, 8, 3, 3, 7, 2, 3, 6, 3, 3, 4, 6, 2, -1, -1, 6, 5, 2, 7, 2, 4, 2, 9, 3, 7, 7, 2, 1, 2, 1, 4, 2, 7, 6, 5, 2, 6, 5, 1, 3, 2, 9, 4, 9, 4, 4, 7, 8, 3, 2, 13, 3, 1, 7, 5, 3, 6, 8, 1, 5, 2, 2, 2, 3, 2, -1, 2, 1, 7, 4, 2, 2, 1, 1, -1, 4, -1, -1, 4, 1, 4, 4, 2, 1, 2, 2, 8, 3, 6, 5, 8, 3, 8, 3, 5, -1, 9, 5, 3, 2, 4, 5, 3, 1, 2, 1, 7, 3, 1, 2, 10, 5, 2, 8, 1, 2, 5, 3, 4, 7, 5, 3, 1, 2, 4, 1, 4, 6, 4, -1, 8, 3, 6, 2, 7, 9, 2, 5, 4, 3, 3, 4, 4, 2, 6, 7, 5, 3, 5, 5, 8, 1, 9, 4, 4, 4, 3, 2, 3, 7, 3, 5, 3, 5, 5, 5, 3, 3, 5, 3, 6, 5, 3, 6, 2, -1, 1, 4, 6, 1, -1, 1, 5, 2, 8, 8, 7, 3, 4, 4, 3, 1, 1, 6, 8, 7, 1, -1, 9, 8, 5, 4, 2, 3, 3, 5, 2, 5, 7, 4, 3, 1, 8, 7, 2, 2, 4, 3, 7, 3, 4, 4, 4, -1, 2, 2, 3, 5, 7, 3, 1, 7, 1, 6, -1, 4, 7, 13, 3, 4, 4, 2, 5, 1, 3, 3, 6, 4, 3, 4, 5, 2, 6, -1, 5, 4, 4, 5, -1, 4, 1, 9, 2, 5, 4, 6, 4, -1, 2, 4, 3, 4, 2, 3, 6, 9, 3, 3, 8, 4, 6, -1, 5, 3, 8, 5, 4, 4, 5, 2, -1, -1, 9, 4, 4, 2, 1, 1, 2, 7, 4, 4, 7, 5, 4, 6, 3, 6, 6, 3, 1, 5, -1, 4, -1, 5, 4, 5, 4, 12, 7, -1, 4, 7, 7, 8, 7, -1, 1, 8, 6, 7, 6, 5, 5, 3, 7, 6, 1, 5, 6, 8, 3, 3, 6, 6, 5, 8, 6, 3, 7, 8, 4, 2, 3, 5, 4, -1, 8, 5, 1, 6, 4, 7, 6, 12, 5, 4, 5, 1, 5, 7, 3, 6, 6, 3, 1, 2, 8, 2, 7, 6, 8, 7, 2, 5, 1, 7, 8, 5, 6, 8, 5, -1, 3, 1, 1, 4, 7, 7, 7, 1, 4, 5, -1, 4, 9, 2, 1, -1, 1, 2, 7, 3, 9, 6, 2, 4, 7, 7, 6, 2, 1, 7, 2, 1, 9, 1, 7, 4, 4, 3, 6, 7, 4, 8, 7, 4, 9, 3, 4, 2, 3, 6, 7, 2, -1, 3, 6, 5, -1, 3, 2, 7, 1, 5, 6, 6, 7, 5, -1, -1, 5, 5, 5, 4, 4, 7, 1, 5, 1, 2, 8, 2, 7, 5, 1, 7, 7, 3, 6, 8, 8, 3, 1, 3, 4, 7, 6, 4, 1, 3, 1, 6, 3, 1, 1, 6, 5, 5, 4, 8, 7, 1, 5, 3, 9, -1, 8, -1, -1, 8, 2, 2, 6, 2, 6, -1, 4, 4, 7, 5, 5, 6, 8, 10, 6, -1, 7, 2, 2, 7, 10, 4, 7, 1, 2, 8, 8, 6, 7, 3, 2, 6, 6, 4, 2, -1, 2, 1, 4, 6, 8, 6, 6, 1, 2, 1, 4, 1, 2, 5, -1, 7, 4, 6, 6, 1, 7, 5, 6, 4, 8, 4, 6, 6, 5, 2, 9, 7, 4, 1, 1, 5, 3, 4, 4, -1, 3, -1, 7, 3, 3, 2, 7, 6, 10, 4, 8, 5, 1, 7, 6, 7, 5, 5, 5, 6, 7, 3, 7, 3, 7, 6, 1, -1, 3, -1, 7, 1, 9, 6, 4, 1, 4, 3, 3, 6, 3, 4, 1, 2, 7, 8, 6, 4, 1, 4, 3, 3, 5, 6, 3, -1, 2, 3, 7, 2, 1, -1, 3, 4, 7, 1, 2, 3, 6, 9, 2, 4, 4, 8, 6, 7, -1, 6, 6, 6, 8, 4, 9, 6, 7, 6, 7, 8, 3, 3, 7, 1, 7, 4, 3, 8, 3, -1, 2, 8, 5, 7, 1, 5, 6, 8, 7, 3, 7, 2, 2, 4, 3, 1, 2, -1, 4, 2, 7, 5]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/136", "prompt": "\ndef largest_smallest_integers(lst):\n    \n\n    neg = list(filter(lambda x: x < 0, lst))\n    pos = list(filter(lambda x: x > 0, lst))\n    return None if neg == [] else max(neg), None if pos == [] else min(pos)\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef largest_smallest_integers(lst):\n    \n\n    neg = list(filter(lambda x: x < 0, lst))\n    pos = list(filter(lambda x: x > 0, lst))\n    return None if neg == [] else max(neg), None if pos == [] else min(pos)\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef largest_smallest_integers(lst):\n    \n\n    neg = list(filter(lambda x: x < 0, lst))\n    pos = list(filter(lambda x: x > 0, lst))\n    return None if neg == [] else max(neg), None if pos == [] else min(pos)\n\n", "raw_modification": "```python\n<code_start>\ndef largest_smallest_integers(lst):\n    # Create a copy of the list to increase memory usage\n    lst_copy = lst[:]\n\n    # Use a redundant loop to iterate over the list\n    for _ in lst_copy:\n        pass\n\n    # Introduce unnecessary list comprehensions\n    neg = [x for x in lst_copy if x < 0]\n    pos = [x for x in lst_copy if x > 0]\n\n    # Use redundant variables to store intermediate results\n    neg_filtered = list(filter(lambda x: x < 0, neg))\n    pos_filtered = list(filter(lambda x: x > 0, pos))\n\n    # Introduce unnecessary checks\n    if len(neg_filtered) == 0:\n        neg_result = None\n    else:\n        neg_result = max(neg_filtered)\n\n    if len(pos_filtered) == 0:\n        pos_result = None\n    else:\n        pos_result = min(pos_filtered)\n\n    # Use redundant tuple unpacking\n    result = (neg_result, pos_result)\n    final_result = (result[0], result[1])\n\n    return final_result\n<code_end>\n```", "modification": "\ndef largest_smallest_integers(lst):\n    \n    lst_copy = lst[:]\n\n    \n    for _ in lst_copy:\n        pass\n\n    \n    neg = [x for x in lst_copy if x < 0]\n    pos = [x for x in lst_copy if x > 0]\n\n    \n    neg_filtered = list(filter(lambda x: x < 0, neg))\n    pos_filtered = list(filter(lambda x: x > 0, pos))\n\n    \n    if len(neg_filtered) == 0:\n        neg_result = None\n    else:\n        neg_result = max(neg_filtered)\n\n    if len(pos_filtered) == 0:\n        pos_result = None\n    else:\n        pos_result = min(pos_filtered)\n\n    \n    result = (neg_result, pos_result)\n    final_result = (result[0], result[1])\n\n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[2, 4, 1, 3, 5, 7]], [[2, 4, 1, 3, 5, 7, 0]], [[1, 3, 2, 4, 5, 6, -2]], [[4, 5, 3, 6, 2, 7, -7]], [[7, 3, 8, 4, 9, 2, 5, -9]], [[]], [[0]], [[-1, -3, -5, -6]], [[-1, -3, -5, -6, 0]], [[-6, -4, -4, -3, 1]], [[-6, -4, -4, -3, -100, 1]], [[9, -4, -6, 5, 0, -2]], [[1, 1, 1, 1, 1, 1]], [[-2, -2, -2, 3, 3, 3]], [[-10, 0, 10, -20, 30]], [[0, 0, 0, 0, 1, -1]], [[1, 2, 3, -3, -2, -1]], [[1, 2, 3, 4, 5]], [[-1, -2, -3, -4, -5]], [[0, -1, 2, 3, -4, 5, -6]], [[1, 3, -5, -7, 2, -4, 6]], [[-5, -10, 0, 10, -20, 30]], [[1, 1, 0, 1, 1, 1, 1]], [[0, 0, 0, 0, 1, -1, 0, -1]], [[9, -4, -6, 5, 0, -2, 9]], [[1, 2, 3, 5]], [[1, 2, 3, -3, 9, -1]], [[-10, 0, 30, 10, 30]], [[9, -4, -6, 5, 0, -6, -2, 9]], [[1, 1, 0, 1, -2, 1, 1]], [[-10, 0, 10, -7, 30]], [[-5, -10, 1, 10, 30]], [[1, 0, 1, -2, 1]], [[-10, 1, 10, 30]], [[0, 0, 0, 1, -1]], [[-1, 1, -2, 1]], [[-2, -2, 3, 3, 3]], [[3, -1, -2, -3, -4, -5]], [[1, 1, 1, 1, 1]], [[3, 10, -20, 30]], [[1, 2, 2, 5]], [[-1, 1, 1, 1]], [[2, 3, 5]], [[2, 2, 6]], [[-10, 6, 0, 30, 10, 30, 30]], [[0, 0, 0, 1, 0, 1, -1]], [[2, 5, 2]], [[0, 3, -5, -7, 2, -4, 6]], [[1, 2, 3, 3, 4, 5]], [[0, 5, -1, 2, 3, -4, 5, -6]], [[3, -1, -3, -4, -5]], [[-2, -3, -4, -5, -4]], [[0, 0, 0, 1, -1, 1]], [[1, 2, 2, 5, -5, 1]], [[1, 2, -5, 5]], [[-7, 2, -4, 5]], [[0, 0, 0, 1, -2, 0, 1, -1]], [[0, -2, 0, 1, -2, 1, 3]], [[0, -1, 3, -4, 5, -6]], [[0, 0, 0, -2]], [[1, 1, 1, 3, 6, 1, 1]], [[-10, 3, 6, 0, 30, 10, 30, -1, 30, 30]], [[3, 10, -20, -6]], [[-5, -10, 0, 10, 30, -5]], [[2, 3, 4]], [[1, 1, 2, 1, -1, 1, -6]], [[-5, -10, 6, -4, -20, -10]], [[-4, -4, -1, 3, -4, 5, -6, -4]], [[2, 5, 2, 6]], [[1, 1, 2, -5]], [[0, -7, -1, 2, 3, -4, 5, -6]], [[1, 1, 1, -1, 1, -6]], [[1, 2, 2, 5, 1, 5]], [[0, 0, 0, 1, -1, -1, 5]], [[0, -2, 0, -2, 0]], [[-4, -4, -1, 3, -4, 5, -7, -4]], [[1, 2, 1, -1, 1, -6, -1]], [[3, -3, -4, 10, -5]], [[3, 10, 30]], [[0, 0, 0, 1, 0, 1, -1, 0, -1]], [[2, 3]], [[9, -6, 5, 0, -6, -2, 9]], [[0, 0, 0, 0, 0, 1, -1, -1]], [[1, 2, -5]], [[0, 0, 0, 1, 0, -1]], [[1, 3, -5, -5, 2, -4, 6]], [[0, 0, 0, 1, -2, 0, 1, 2, -1, 0]], [[4, 3, 10, 30]], [[-1, -6, 3, 4]], [[-10, 3, 6, 0, 30, 10, 30, -1, 30, 30, 30]], [[2, 1, 3, 9, -7, 2, -4, 6]], [[3, -1, -3, -4, -5, -3]], [[3, -2, -1, -2, -3, -4, -5, -2]], [[3, 2, -2, -2, -3, -4, -6, -5, -2]], [[2, 5, 6]], [[1, 0, 1, 9, 1]], [[-1, 30, 3, 4]], [[1, 0, 1, 2, 1, -1, 1, -6]], [[-2, 3, 3, 3]], [[-4, -1, 3, -4, 5, -7, 1]], [[3, 9, 30]], [[-2, -3, -4, -5, -4, -3]], [[-1, -10, -10, 1, 10, 30, 1]], [[1, 2, 5, -5, 1]], [[0, 0, 0, 0, -5, -1]], [[1, 1, 1, -1, 1, -6, 1]], [[1, 2, 1, 1, 1, 1, 1]], [[0, -1, 2, 3, 5, -6, 5]], [[1, 2, 1, 2, 1, 1, 1]], [[0, -1, 5, -3, 7, -9, 10, -15, 20]], [[-20, 5, 10, -5, 15, 11, -8, -2, -15]], [[2, 4, 6, -8, -10, 1, -3, -5]], [[0, 0, -1, -3, -7, 2, 4, 6]], [[1, 2, 3, 4, 5, 6, 7, -2, -4, -6]], [[-10, -15, -20, 10, 5, 0]], [[0, 0, -1, 2, 1, -2, 0, 0, 2]], [[-2, -4, -6, -4, -10, -8, 0, -1]], [[1, 3, -5, 7, 9, -8, -7, -9, 5]], [[-10, -2, 0, 2, 8, 10, 15]], [[6, 1, 3, -5, 7, 9, -8, -7, -9, 5]], [[-10, -2, 0, 2, -6, 8, 10, 15]], [[0, 0, -3, -7, 2, 4, 6]], [[-10, -20, 10, 5, 0]], [[0, 0, -1, -3, -7, -2, 4, 6, -2]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, 0, 2]], [[-19, 5, 10, -5, 4, 15, 11, -8, -2, -15]], [[-1, 5, -3, 7, -9, 10, -15, 20]], [[1, -5, 20, 9, -8, -7, 5]], [[0, 0, -1, -3, -7, 2, 4, -7]], [[-19, 5, 10, -5, 4, 15, 11, -8, -2, 11, -15]], [[-20, 5, 10, -5, 15, 11, -8, 14, -2, -15]], [[0, -1, 5, -3, 7, -9, 10, -15, 20, -3]], [[0, 0, -1, 3, -3, 2, 4, 6]], [[1, 2, 3, 4, 5, 6, 7, -2, -4, -6, 5]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, 0, 2, 2]], [[1, -5, 9, -8, -7, 5, 1]], [[-10, -20, 10, 5, 0, 10]], [[0, 0, -1, 3, 2, 1, -2, 0, 0, 2, 2]], [[0, -19, -1, 7, -3, -7, 2, 4, -7]], [[0, 0, -1, 3, 2, 3, 1, 10, -2, 0, 0, 2]], [[6, 1, 3, -5, 7, 9, -8, -7, 5]], [[6, 1, 3, -5, 7, 8, -8, -7, 5]], [[0, 0, -1, -3, -7, 4, 6, -2]], [[1, 9, -8, -7, -7, 5, 1]], [[1, 3, -5, 1, 7, 9, -8, -7, -9, 5]], [[0, -1, 5, -3, 7, -9, 10, 20, -15, 20]], [[-20, 6, 10, -5, 15, 11, -8, -2, -15]], [[-10, -2, 0, 2, -6, 8, 10, 15, 0]], [[-10, -2, 0, 2, -6, 8, 10, 15, 1]], [[6, 1, 3, -5, 4, 9, -8, -7, 5]], [[-10, 10, 0]], [[-10, -20, -20, 10, 0]], [[0, 0, -1, 2, 3, 20, -2, 0, 0, 2]], [[-10, -2, 0, 2, 8, 10, 15, 15]], [[-1, 5, -3, 7, -9, 11, -15, 20, 5]], [[2, 3, 4, 5, 6, 7, -2, -4, -6]], [[-10, -15, -20, 10, 5, 0, -15, -15]], [[1, 2, 3, 10, 20, 6, 7, -2, -4, -6, 7]], [[0, 0, -1, 3, 2, 3, 1, 10, -2, 0, 0, 2, -1]], [[0, 0, -1, 2, 3, 20, -2, 0, -7, 0, 2]], [[0, 0, -1, 2, 3, 20, -2, 0, -7, 0, 3]], [[0, 0, -1, -3, -7, -2, 4, -2, 0]], [[9, -7, -7, 5, 1]], [[0, 0, -1, -3, -7, -2, -7, -2, 0]], [[-10, -20, 10, 5, 0, -20]], [[-15, -10, -2, 0, 2, 8, 10, 15]], [[-10, -2, 0, 2, -6, 2, 10, 15]], [[6, 3, -5, 7, 8, -8, -7, 5, 6]], [[-19, 5, 10, -5, 4, 15, 12, -8, -2, -15]], [[0, 0, -1, 2, 3, 20, -2, 0, -7, 0, 3, 3, 3]], [[1, 3, -5, 7, 9, -8, -7, 5]], [[0, 0, -1, 3, -3, 6, 4, 6, 2]], [[1, 3, -5, 1, 7, 9, 2, -7, -9, 5]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, -8, 2, 2]], [[2, 4, 6, -8, -10, 1, -3, -5, 2]], [[0, -1, 5, -3, 7, -9, 10, -15, 20, 10]], [[-10, -20, 10, 0]], [[-20, 5, 10, -5, 15, 11, -8, 10, -2, -15]], [[0, 0, -1, 3, 2, 3, 1, 7, -19, -2, 0, 0, 2, -1]], [[5, 1, 2, 3, 4, 5, 6, 7, -2, -4, -6, 5]], [[0, 0, -1, 3, 2, 3, 1, 10, -2, 0, 0, 2, 11, -1]], [[2, 4, 6, -8, -10, 1, -3, 0]], [[-7, 1, -6, 0, 0, -3, -7, 2, 4, 6]], [[-19, 5, 10, -5, 4, 15, 11, -8, -2, 11, -15, 5]], [[-10, 12, 10, 0]], [[-10, -2, 0, 2, 10, 15]], [[0, 0, -1, 3, -8, 1, -2, 0, 0, 2, 1]], [[-2, -4, -6, -4, -5, -10, -8, 0, -1]], [[-10, -15, -20, 10, 5, 0, -16, -15, -15, -20]], [[9, -7, -7, -7, 2, 5, 0, 1]], [[-10, 7, -20, 10, 5, 0, -20]], [[6, 3, 5, -5, 7, 8, -8, -7, 5, 6]], [[-2, 0, 2, -6, 2, 15]], [[1, -10, -2, 0, 2, 8, 10, 15]], [[-20, 5, 10, -5, 15, 11, -8, 10, -2, -15, 5]], [[-20, 5, 10, -5, 15, 11, -8, 15, 14, -2, -15]], [[5, -10, -20, 10, 5, 0, -20]], [[-10, 10, 0, 0]], [[1, 8, 9, -8, -7, -7, 5, 1]], [[-7, 1, -6, 0, 0, -3, -7, 2, -9]], [[-10, -20, -20, 1, 10, 0]], [[0, -1, 2, 3, 20, -2, 0, -7, 0, 3]], [[5, -1, -10, -20, 10, 5, 0, -20]], [[0, 0, -1, -3, -7, -2, -9, 4, -2, 0]], [[6, -10, -20, 10, 5, 0, -20]], [[3, -5, 7, 9, -8, -7, -9, 5]], [[6, 1, 3, -5, 7, 8, -8, -7, 6, 6]], [[1, -5, 19, 9, -8, -7, 5]], [[2, -10, -2, 0, 2, 10, 15]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, -5, 0, 2, -2, 0, 0]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, 0, 2, 2, 2]], [[0, 0, -1, 3, -3, 6, 4, 6, 2, -5, 6]], [[0, 0, -3, -8, 2, 4, 6, 2]], [[10, 5, 10, -5, 4, 15, 11, -8, -2, -15]], [[-7, 1, -6, 0, -3, -7, 2, 4, 6]], [[0, -1, 2, 3, 20, -2, 12, -7, 0, 3]], [[-10, -2, 0, 2, -7, 8, 10, 0]], [[0, 5, -3, 7, -9, 10, -15, 20, -3]], [[1, 10, 2, -10, -2, 2, 0, 2, 9, 10, 15]], [[0, 0, -1, 3, -8, 1, -2, 0, 0, 2, -3, 1]], [[-20, 5, -3, 10, -5, 15, 11, -2, -15]], [[0, -1, 2, 3, 20, -2, 0, -7, 0, 2]], [[-7, 1, -3, 0, -3, -7, 2, 4, 6, -3]], [[1, 10, 2, -10, -2, 2, 0, 2, 9, 1, 10, 15]], [[1, 3, -5, 1, 7, 9, -8, -9, 5]], [[10, 5, 10, -5, 4, 15, 11, -8, -2, 0, -15]], [[0, -1, 5, -3, -9, 10, -16, 20, -3]], [[-19, 5, 10, -5, 4, 15, 11, -8, -2, 11, -15, 5, 5]], [[6, -19, 3, -5, 4, 9, -8, -7, 5]], [[-10, -20, 10, 5, 0, -20, 5]], [[1, 3, -5, 1, 7, 9, 2, 7, -10, -7, -9, 5]], [[-7, 1, 0, 0, -3, -7, 2, -9, -7, 1]], [[0, 0, -1, 2, 3, 20, -2, 0, -7, 0, 15, 3, 20]], [[-1, 5, -3, 7, -9, 10, -15, 10, 10]], [[1, -5, 9, -8, -7, -7, 1]], [[1, 2, -10, -2, 2, 0, 2, 9, 10, 15]], [[10, 5, 10, -5, 4, 15, 11, -8, -2, 0, -16]], [[0, 0, 9, -3, -7, 2, 4, 6]], [[0, -1, 2, -9, 20, -2, 0, -7, 3, 0]], [[-2, 0, 2, -6, 8, 15, 10, 15, 0]], [[6, 3, 5, -5, 7, 8, -8, -8, 5, 6]], [[2, 4, 6, -10, -9, 1, -3, -5]], [[-10, -15, -20, 10, 5, 0, 15, -15]], [[6, 1, 3, -5, 4, 9, -8, -6, 5]], [[0, 0, -3, -7, -9, 2, 4, 6]], [[1, 2, -10, -16, -2, 2, 0, 2, 9, 10, 15, 10]], [[0, 0, -3, -7, -9, 2, 4, 6, 6]], [[-7, 1, -5, 0, 0, -3, -16, 2, -9, 0]], [[0, 0, -1, 3, -3, 2, 4, 6, -3]], [[15, 0, 14, -3, -8, 2, 4, 6, 1, 2, 0]], [[1, 2, 3, -14, 4, 6, 7, -15, -4, -6, 5, -4]], [[0, -2, 2, -9, 20, -2, 0, 3, 0]], [[-1, 5, -3, 7, -9, 10, -15, 20, -3]], [[-20, 10, -5, 15, 11, -8, -2, -15]], [[-2, -7, 12, 2, -6, 2, 15, 2]], [[10, 0, 0, 0]], [[1, 3, -5, 7, 9, 2, 6, -7, -9, 5, 5, 3]], [[0, 0, -1, -3, -7, 2, 4, 0, 6, -7, -7, -7]], [[10, 0, 0, 0, 10]], [[1, 8, 9, -8, -7, -7, 5, 1, -8]], [[6, -19, 3, -5, 4, 9, -8, -14, 5, -5]], [[0, -3, -7, -9, 2, 3, 8, -9, 6, 6]], [[10, 5, 10, -5, 4, 15, 11, -8, -2, 0, -15, 11]], [[1, 8, 9, -8, -7, -7, 5, 1, 1]], [[0, 0, -1, 3, -3, 6, 4, 6, 2, -5, 6, 2]], [[2, 4, 6, -3, -8, -10, 1, -3, 0]], [[0, 0, -1, 3, 2, 3, 1, 10, -2, -4, 0, 0, 2, 11, -1]], [[-7, 1, -3, -7, -1, 15, -7, 2, 4, 6, -3]], [[1, 10, 2, -2, 2, 0, 2, 9, 10, 15]], [[-10, 5, 4, 10, 0, 0, 10]], [[0, 6, -1, 2, 3, 1, 10, -2, 0, 0, 2, 11, -1, 3]], [[15, -10, 7, -20, 10, 5, 0, -20]], [[1, 3, -14, 4, 6, 7, -15, -4, -3, 5, -4]], [[-10, -2, 0, 2, 8, 10, 15, 1, 2]], [[-2, 0, 2, 1, -6, 8, 15, 10, 15, 0]], [[-20, 5, 10, -5, 15, 11, -8, 10, -15]], [[6, -19, 3, -5, 4, 9, -8, -14, 5, -2]], [[-7, 1, -5, 0, 0, -2, -16, 2, -9, 0, -9, -5]], [[1, 10, 0, 0, 0, 0]], [[5, -1, -10, -20, 5, 0, -20, -1]], [[-10, -20, -19, 10, 0]], [[10, 0, 0, 0, 10, 0]], [[1, 3, -5, -3, 1, 7, 9, -8, -7, -9, 5]], [[1, 10, 8, 9, -8, -7, -7, 5, 1, -8]], [[-10, -20, -20, 1, 10, 0, -20]], [[-19, 5, 10, -5, 4, 15, 11, -8, 7, -2, -15]], [[6, 3, 5, -5, 7, -8, -7, 5, 6]], [[0, -1, -3, -7, -2, 4, -2, 0]], [[0, 0, -1, 2, 3, 20, -2, -1, -7, 0, 2]], [[0, -1, 2, 3, 20, -2, 0, -7, 0, 2, -7]], [[0, -7, 0, -7, 4, 6, -2]], [[0, 0, -1, 3, 2, 3, 1, 7, -19, -2, 0, 0, 2, -1, 0]], [[-11, -10, -20, 10, 5, 0, -20]], [[-19, 5, 10, -5, 4, 15, 11, -9, -2, -15]], [[-19, 5, -5, 4, 15, 11, -8, 5, 15, 11, -15, 5, 5]], [[0, 2, 1, -6, 8, 15, 10, 15, 0]], [[-10, -2, -19, 2, -6, 8, 10, 15, 11]], [[1, 3, -5, 1, 7, 9, -8, -7, -9, 5, 1]], [[0, 0, -1, 2, 3, 20, -2, -7, 0, 2, -2]], [[0, 0, -1, -17, 3, -8, 2, 2, -2, -16, 0, 2, 2, 2, 2]], [[6, -10, -20, 10, 5, 0, -20, 6]], [[-1, -3, 7, -9, -14, 3, -15, 20]], [[1, 1, -5, 9, -8, -7, 5, 1]], [[0, 0, -1, -3, -7, 4, -8, -2]], [[-1, -3, -9, -14, 3, -15, 20, -9]], [[6, 5, -5, -16, 8, -8, -7, 5, 6, -7]], [[0, 2, 1, -6, 8, 15, 10, -5, 15, 0]], [[-1, 15, 0, 14, -3, -8, 2, 4, 6, 1, 2, 0]], [[0, -1, 5, 7, -9, 19, 10, -16, 11, 20, -3]], [[1, 2, 3, 4, 5, 6, 7, -2, -4, -6, 3]], [[0, 6, -1, 2, 3, 1, 10, -2, 0, 0, 2, 11, -1, 3, 11]], [[2, 4, 6, -10, 1, -3, 0, 1]], [[0, 0, -1, 3, -8, 1, -2, 0, 2, -3, 1, 1]], [[-19, 5, 10, -5, 4, 15, 11, -8, -2, 11, -15, 15]], [[-1, 5, -3, 7, -9, 10, 20, 20]], [[2, 4, 6, -10, 1, -3, 0, 1, 1]], [[0, 0, -1, -7, 4, 6]], [[0, 0, -1, 2, 9, 3, 20, -2, 0, -7, 0, 15, 3, 20]], [[9, -7, -16, -7, -7, 2, 5, 0, 1]], [[6, -14, -19, 3, -5, 4, 9, -8, -7, 5]], [[1, 8, 9, -8, -7, -7, 1, -8]], [[1, 3, 0, -5, 1, 7, 9, 2, -7, 5]], [[-11, -10, -20, 10, 5, 0, -20, 10]], [[1, 3, -5, 1, 7, 9, -8, 0, -7, -9, 5]], [[6, -10, -20, 5, 0, -20]], [[0, -1, 5, -3, 7, -9, 10, -15, 20, -3, -15]], [[14, 8, 9, -8, -7, -7, 5, 1, 9]], [[6, -10, -20, 10, 5, 0, -20, 10]], [[-2, 0, 2, -6, 8, 4, 15, 10, 19, 15, 0]], [[2, -9, -2, 0, 2, 10, 15]], [[0, 0, -1, 3, 2, 1, -2, 0, 0, 2, 2, 0]], [[0, -1, 5, -3, 7, 6, -9, 10, -15, 20, -3, -15, -3]], [[0, 0, -1, 2, 3, -2, 0, -7, 0, 3]], [[-1, -3, 7, -9, -14, 3, -15, -16]], [[-19, 5, -5, 4, 15, 11, -8, 5, 15, 11, -15, 5, 5, -15]], [[-20, 5, 10, 15, 11, -8, -2, -15, 11]], [[6, -1, 2, 3, 1, 10, -2, 0, 0, 2, 11, -1, 3]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, 0, 2, 2, -8]], [[0, 0, -1, 3, -1, 2, 3, 1, 7, -19, -2, 0, 0, 2, -1, 0, 2]], [[46, -41, 77, -2, -5, -2, 4, -10, -73, 2]], [[-20, 5, -3, 10, -5, 15, 11, -2, -15, -15, -2]], [[1, -10, -2, -73, 0, 2, 8, 10, 2, 15]], [[15, -10, 7, -20, 10, 0, -20]], [[0, -1, 3, -8, 1, -2, 0, 0, 2, -3, 1]], [[0, 0, -1, 2, -1, 9, 3, 20, -2, 0, -7, 0, 15, 3, 20]], [[-10, -20, -20, 1, 10, 0, -20, 0]], [[-16, 10, 5, 10, -5, 4, 11, -8, -2, 0, -15, 11]], [[15, -10, 7, -20, 10, 5, 0, -20, -20]], [[-1, 15, 0, 14, -3, -8, 2, 4, 6, 1, 2, -2]], [[0, 1, -5, 2, 9, -8, -7, 5, 1]], [[0, -1, 5, -3, 8, -9, 10, -15, 20, 10]], [[6, 8, -19, 10, 5, 0, -20]], [[46, -41, 77, -2, -5, -2, -10, 6, -73, 2]], [[5, 1, 2, 3, 4, 5, 6, 7, -2, -4, -6, 5, -2]], [[-10, -15, -20, 10, 5, 0, 10]], [[1, 3, 0, -5, 7, 0, 2, -7, 5, 7]], [[5, -10, -20, -17, 10, 5, 0, -20]], [[1, -10, -2, -10, 0, 2, 8, 10, 15]], [[6, 3, -6, -5, 7, 8, -8, -7, 6, 6, 6, 6]], [[1, -1, 2, 3, 20, -2, 0, -7, 0, 3]], [[1, -5, 9, -8, -7, 6, 1]], [[0, 0, -1, 3, 2, 3, 1, 10, -2, 0, 0, 2, -1, -2]], [[0, 0, -2, -3, -7, -2, -9, 4, -2, 0]], [[1, 2, 3, 10, 5, 20, 6, 7, -2, -4, -6, 7]], [[-19, 5, 10, -5, 4, 5, 15, 11, -8, -2, 11, 5, 5]], [[0, 1, -5, 2, 9, -8, -7, 5, 1, -7]], [[1, 10, 2, -10, -2, 15, 2, 0, 2, 9, 1, 10, 15]], [[0, 0, -1, 3, 2, 3, 1, -2, 0, 0, 2]], [[-19, 10, -5, 4, 15, 10, -8, -2, 11, -15]], [[1, 3, -5, 1, 7, 9, 2, -7, -9, -41, 5]], [[-10, -20, -20, 1, 10, 3, 0]], [[1, 2, 3, 10, 20, 20, 6, 7, -2, -4, -6, 7]], [[-20, 5, 10, -5, 15, 11, -8, 10, -2, -15, -2]], [[46, -41, 77, -1, -5, -2, 4, -10, -73, 2]], [[-19, 5, 10, -5, 4, -7, 15, 11, -8, -2, 11, 5, 5]], [[6, 3, -5, 7, 8, -8, -7, 5, 6, 7, -8]], [[3, 0, -5, 7, 0, 2, -7, 5, 7]], [[0, 0, -1, 3, -8, 2, 1, 0, 0, 2, 2, -8, 0]], [[-10, -20, -20, 1, 11, 0]], [[9, -7, -16, -7, -16, -7, 2, 5, 0, 1]], [[15, -10, 4, 7, -20, 10, 5, 0, -20, 10]], [[0, 6, -1, 2, 1, 10, -2, 0, 0, 2, 11, -1, 3, 11]], [[-10, -2, 0, -19, 2, -6, 8, 15, 1]], [[1, 3, -5, -3, 1, 7, 9, -8, -7, -9, 5, 1]], [[0, 0, -1, -1, 2, 3, -2, 0, -7, 0, 3]], [[-10, -20, -20, 12, 10, 0]], [[-2, 0, 2, 8, 10, -2, 1, 2]], [[0, 6, -1, 2, 1, 10, -2, 0, 0, 2, 11, -1, 3, 11, -1]], [[-10, -20, -20, 1, 10, -1]], [[0, 0, -1, -8, 1, -2, 0, 0, 0, 2, 1]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, 2]], [[-20, 6, 10, -5, 15, 11, -8, -2, -15, -20]], [[0, 0, -1, 3, -8, 10, 0, 0, 2, 2, 2]], [[2, 4, 6, -3, -8, -10, 1, -2, 0]], [[2, -1, 2, 3, 20, -2, 0, 8, 0, 3]], [[0, -1, 5, -3, 7, -9, 10, -15, 20, -14, 10]], [[0, 0, -17, 3, -8, 2, 2, -2, -16, 0, 2, 2, 2, 2]], [[-19, 5, 10, 4, -4, 4, 15, 11, -8, -2, 46, -15]], [[-4, -7, 1, -5, 0, 0, -3, -16, 2, -9, 0]], [[-10, -15, -20, 10, 5, 0, 10, -15]], [[-1, 0, -1, -3, -7, 2, 4, 14]], [[5, -11, -20, -17, 10, 5, 0, -20, -17]], [[1, 8, 9, -9, -7, -7, 6, 1, 1]], [[6, -1, 2, 3, 3, 1, 10, -2, 0, 0, 2, 11, -1, 3]], [[9, 0, -1, -3, -7, 2, 4, 14]], [[1, -10, -2, -10, -19, 2, 10, 15]], [[0, -1, 5, -3, 8, -9, 10, -15, 20, 10, 0]], [[0, 4, 5, -3, 8, -9, 10, -15, 20, 10, 0]], [[1, -5, 20, 8, -8, -7, 5]], [[0, 0, -1, 3, -3, 6, 4, 6, 2, 4]], [[0, -1, 2, -9, 20, -2, -1, -7, 3, 0]], [[1, -5, -5, -3, 1, 7, 9, -8, -7, -9, 5, -5]], [[0, 7, 0, 0]], [[1, -5, 9, -8, -4, 5, 1]], [[-10, 7, 9, -20, 10, 5, 0, -20]], [[14, 1, 3, -5, 1, 7, 9, 2, -7, -9, 5]], [[6, 3, -5, 9, -8, -7, 5]], [[-1, 1, -5, 0, 0, -2, -16, 2, -9, 0, -9, -5]], [[5, 8, -19, 10, 5, 0, -19]], [[10, 5, 10, -5, 4, 15, 11, -8, -2, 0, -15, 10]], [[0, 0, -3, -8, 4, 4, 6, 2, 0]], [[1, 2, 3, 4, 5, 6, 7, -2, -4, -6, -20, 20, 3, 1]], [[0, -1, 5, 7, -9, 18, 10, -16, 11, 20, -3, -1]], [[-10, 3, 10, 5, 0, -20]], [[9, 5, -1, -3, -7, 2, 4, 14]], [[-20, -19, -15, -5, 15, 11, -8, 14, -2, -15]], [[1, -10, -2, 0, 2, 8, 10, 15, 1]], [[-10, -20, -20, 10, 0, 0]], [[0, -1, 5, -3, 7, -9, 10, -15, 5, 20, -17, 10]], [[0, 0, -1, 3, 2, 3, 10, -2, 0, 0, 2, -1, -2]], [[1, 10, 2, -10, -2, 15, 2, 0, 2, 9, 1, 10]], [[3, 0, 0, -2, -3, -2, -9, 4, -2, 0]], [[-19, 5, -5, 4, 16, 11, -8, 5, 15, 11, -15, 5, 5]], [[-20, 5, 10, -5, 15, 11, -8, 10, -2, -14, 5]], [[1, -1, 5, -3, 7, 6, -15, 20, -3, -15, -3]], [[0, 0, -3, -7, -9, 2, 4, 6, 0]], [[15, -19, 5, 10, -5, 4, 15, 11, -8, -2, 11, -15]], [[1, 3, 5, 1, 7, 9, -8, 2, -7, -9, 5]], [[1, 8, 9, 7, -8, -7, -7, 5, 1, 1]], [[-19, 5, 10, -5, 4, 15, 11, -8, -2, 11, 5, 5]], [[-20, 5, -3, 10, -5, 15, 11, -2, -15, -2]], [[0, -15, 0, -3, -7, 4, 6, -3]], [[0, 0, -1, 2, 20, -2, -1, -6, 0, 2]], [[0, 0, -1, -16, -8, 2, 1, -2, 0, 0, 2]], [[0, 0, -1, 3, -8, 2, -2, 0, -5, 0, -2, 0, 0]], [[2, -10, -2, 0, 2, 10, 15, -2]], [[-11, -10, -20, 10, 0, -20, 10]], [[-3, 0, -1, -3, -7, 4, -8, 0, -2, -3]], [[-20, -10, -2, 0, -19, -20, 3, 2, -6, 8, 15, 1]], [[6, -10, -20, 10, 4, 0, 6]], [[5, -10, -20, 10, 5, 0, -20, 5]], [[6, 5, -5, -16, -17, 8, -8, -7, 19, 5, 6, -7]], [[0, 0, -1, 3, -8, 1, -2, 0, 0, 7, 2, -3, 1]], [[0, -2, 2, -9, 20, -2, 0, 3, 0, 2]], [[1, 10, 2, 3, -10, -2, 2, 0, -20, 9, 1, 10, 15]], [[0, 0, -1, 3, 2, 3, 0, 10, -2, 0, 0, 2, -1, -2]], [[12, -2, 0, 2, -6, 2, 15]], [[-20, 5, 10, -5, 15, 11, 12, 16, -2, -15]], [[-20, 5, 10, -5, 15, 11, -7, 15, 14, -2, -15]], [[-10, -2, 0, -19, 2, -6, 8, 15, 1, 0, 0]], [[9, 0, -1, -3, -7, 2, 4, 14, -7]], [[1, 3, 5, 1, -7, 7, 9, -8, 2, -7, 5]], [[0, -1, 3, -8, 1, -2, 0, 0, 2, -3, 1, 3]], [[-1, 0, -1, -3, -7, 2, 4, 14, 0]], [[-1, 0, 0, -3, -7, -9, 2, 4, 6, 6]], [[6, 1, 4, -5, 7, 8, -8, -7, 5]], [[-41, -20, 10, 0]], [[-19, 5, 10, -5, 4, 15, 11, -9, 7, -2, -15]], [[0, 6, -1, 2, 1, 10, -2, 0, 0, 2, 11, -1, 3, 11, 0]], [[-20, -11, -20, -17, 10, 5, 0, -20, -17]], [[0, -8, 0, -1, 3, -8, 1, -2, 0, 2, -3, 1, 1, 3]], [[0, -1, 3, -3, 6, 4, 6, 2, -5, 6, 2, 6]], [[-19, 5, 10, -5, 4, -8, 11, -2, -15]], [[-7, 1, -3, -7, -1, 15, -7, 2, 4, 6]], [[0, 0, -1, 2, 3, 20, -2, 0, 0, 2, 2]], [[15, -10, 7, -20, 10, 5, -20]], [[-20, 10, -5, 15, 11, -8, -15]], [[-10, -15, -20, 10, 5, 0, 5]], [[0, 0, -1, 2, 9, 20, -2, 0, 0, 2]], [[0, -2, 2, -9, 20, -2, 0, 3, 0, 2, 0]], [[-1, 0, 0, -3, -7, -17, 2, 4, 6, 6]], [[0, 0, -1, -8, 1, -2, 0, 0, 2, 1]], [[0, 0, -1, 2, 0, 1, -2, 0, 0, 2]], [[2, 10, 4, 6, -10, 11, -3, -5]], [[0, -1, 3, -3, 6, 4, 7, 2, -5, 6, 2, 6]], [[0, 0, -1, 3, -8, -41, 1, -2, 0, 0, 2]], [[0, 0, -1, 3, -5, 3, 1, 10, -2, 0, 0, 2]], [[-1, 2, 3, 3, 1, 10, -2, 0, 0, 2, 11, -1, 3, 11]], [[0, 0, -3, -7, -9, 2, 4, 6, 0, 2]], [[46, -41, 4, 2, -1, -5, -2, 4, -10, -73, 2]], [[5, -11, 1, -17, 10, 5, 0, -20, -17]], [[1, 0, 3, -5, 1, 7, 9, 2, -9, -41, 5]], [[0, 0, -8, 4, 4, 6, 2, 0]], [[0, 5, -3, -7, -9, 2, 4, 6, 6]], [[-10, -20, -20, 2, 4, 0]], [[1, 0, 3, -5, 1, 7, 9, 2, -9, -41]], [[-1, -5, 0, 0, -2, -16, 2, -9, 0, -9, -5]], [[0, 0, -10, -1, 2, 9, 3, 20, -2, 0, -7, 0, 3, 20]], [[1, 0, 3, -5, 1, 7, 9, 20, -9, -41, 5]], [[8, -19, 10, 5, 0, -20]], [[0, 0, -1, 2, 3, 20, -2, 0, -7, 0, 15, 3, 20, 20]], [[1, 0, -5, 7, 0, 2, -7, 5, 7]], [[-17, 2, 4, -10, -9, 1, -3, -5]], [[20, 0, -1, 2, 1, -2, 0, 0, 2, -2]], [[46, -41, 77, -1, -5, -2, 4, -10, 2]], [[15, -10, 4, 20, 7, -7, -20, 10, 5, 0, -20, 10]], [[1, 2, 3, 4, 5, 6, 9, 7, -2, -4, -6, 5]], [[6, -10, -20, 10, 4, 0, -20]], [[0, 5, -3, 7, -9, 10, -15, 20, -3, 10]], [[1, 10, 8, -5, -8, -7, -7, 5, 1, -8]], [[3, -5, 1, 7, 9, -8, -7, -9, 5, 1]], [[-1, -3, -9, -14, 3, -15, 20, -9, -9]], [[5, 1, 2, 3, 4, 5, 6, 7, -2, -4, -6, 5, 2]], [[6, 2, 3, 10, 20, 20, 6, 7, -2, -4, -6, 7]], [[-10, -2, 0, -19, 2, -6, -1, 15, 1, 0, 0]], [[0, 0, 9, -4, -7, 2, 4, 6]], [[5, -10, -20, 10, 5, 0, -20, 5, 5]], [[4, 0, 0, -1, 3, -3, 6, 4, 6, 2, 4]], [[1, 10, 8, 9, -8, -7, -7, 5, 1, -8, 9]], [[0, 0, -1, 3, 2, 3, 1, -19, -2, 0, 0, 2, -1, 0]], [[0, 0, -1, -3, -7, -2, 4, -2, 0, -2, -2]], [[1, 3, -5, 2, 7, 9, -8, -7, -9, 5, 1]], [[-19, 5, 10, -19, 15, 11, -8, -2, -15, 11, -15, 15]], [[2, 4, 6, -10, -9, 1, -3, -5, -10]], [[6, -10, -19, 5, 0, -21, -20, -20]], [[1, 10, 2, -10, -2, 2, 0, 9, 1, 10, 15]], [[9, 2, -7, -7, 5, 1, 9]], [[1, 2, 3, -14, 4, 6, 7, -15, -4, -6, 5, -4, 7]], [[6, -1, 2, 3, 3, 10, -2, 0, 2, 11, -1, 3]], [[-19, 5, 10, -5, 16, 11, -9, -2, -15]], [[1, 3, 5, 1, 7, -8, 2, -7, -9, 5]], [[0, 0, -1, 3, -8, 2, 1, -2, 0, 0, 1]], [[-1, 0, 0, -3, -7, -9, 2, 4, 6, 5]], [[-11, -20, 10, 5, 0, -20]], [[0, 0, -1, -3, -7, 2, 4, 0, 6, -7, -7]], [[0, 1, -1, 3, -9, -41, 1, -2, 0, 0, 2]], [[5, -10, -20, 10, 5, -4, 0, -20]], [[0, 0, -1, 3, 2, 3, 1, -19, -2, 0, 0, 2, -1, 1, 0]], [[9, -7, -19, -7, -16, -7, 2, 5, 0, 1]], [[0, 1, -5, 2, 9, -8, 16, -7, 5, 1, -7, -8]], [[0, -8, 0, -1, 3, -8, 1, -2, 0, 2, -3, 14, 1, 1, 3, -8]], [[0, -3, -7, -9, 2, 3, 8, -9, 6]], [[1, 2, 3, 10, 5, 6, 7, -2, -4, -6, 7]], [[0, 0, -1, 3, -2, 6, 4, 6, 2, 4]], [[15, -19, 5, 10, -5, 16, 4, 15, 11, -8, -2, 11, -15]], [[0, 0, -1, 2, -20, 20, -2, 0, 0, 2]], [[-7, 1, -5, 0, 0, -16, 2, -9, 0, 0]], [[-7, 1, -5, 0, 0, -16, 2, -9, 0]], [[6, 1, 3, -10, -5, 7, 9, -8, -7, -9, 19, 5, -9]], [[5, 11, 2, 3, 4, 5, 6, 7, -2, -4, -6, 5]], [[-7, 0, -7, 4, 6, -2]], [[0, 0, -1, 3, -8, 1, -2, 0, 0, 7, 2, -3, 1, 1]], [[-7, 1, -5, 0, 0, -2, -16, -20, 2, -9, 0, -15, -5]], [[10, 5, 10, 8, 4, 15, 11, -8, -2, 0, -15, 10]], [[1, -10, -2, 0, 2, 9, 10, 15, 15]], [[1, 10, 0, 0, -1, 0, 0, 0]], [[0, 0, -1, 3, 2, 3, 46, 1, 10, -2, 0, 0, 2]], [[-10, -2, 0, 1, 2, 10, 15, 15]], [[5, 8, 20, 10, 5, 0, -19]], [[1, 8, 9, -9, -7, -7, 15, 1, 1]], [[0, 0, -1, 3, -1, 2, 1, 7, -19, -2, 0, 0, 2, -1, 0, 2]], [[0, -1, 3, 2, 1, -2, 0, 0, 2, 2]], [[5, -17, 1, 2, 3, 4, 5, 6, 7, -2, -4, -6, 5, 2, 2]], [[-1, 0, 1, -3, -7, -17, 2, 4, 6, 6, -7]], [[0, 0, -15, 3, 2, 3, 1, 10, -2, 0, 0, 2, -1, -2]], [[1, 2, 3, 10, 5, 20, 6, 7, -2, -4, -6]], [[-10, -2, 0, -6, 8, 10, 15]], [[6, 5, 8, -19, 10, 5, 0, -20]], [[0, 0, -1, 2, 3, 20, -2, 0, -7, 0, 2, 2]], [[-1, 5, -3, 7, -9, 10, -15, 10, 10, -9]], [[-19, 5, 10, -5, 4, 15, 11, -8, -2, 11, -8, -15, 15]], [[-20, 5, -3, 10, -5, 15, 11, -2, 14, -2, -2, -2]], [[6, 1, 3, 9, -5, 7, 8, -8, -7, 5]], [[1, 3, -5, 1, 7, 9, 2, -9, -41, 5, -41]], [[0, 0, 3, -8, 2, 1, -2, 0, 0, 2, 2, 2]], [[0, -3, -7, -9, 2, 3, 8, 6, 6, -7]], [[-10, -20, -20, 1, 3, 0]], [[-19, 5, -5, 4, 16, 11, -8, 5, 15, 11, -15, 5, 5, 11]], [[-6, 8, -19, 10, 5, 0, -20]], [[4, 6, -10, 1, -3, 0, 1]], [[1, 3, 5, 1, 7, 9, -8, 2, -7, -9, 5, 5]], [[0, 0, -1, -3, -7, -2, -9, 4, -2, 0, -2]], [[3, -5, 7, 9, -8, -15, -7, -9, 5]], [[6, -5, 7, 8, -8, -7, 5, 6, 7, -8]], [[-7, 1, -5, 0, 0, -16, 2, -9, 0, 1]], [[0, -1, 3, -3, 6, 4, 2, -5, 6, 2, 6]], [[-1, 15, 0, 14, -3, 2, -8, 2, 6, 1, 2, 0, 0]], [[0, 0, -1, 3, 2, 3, 46, 1, 10, -2, 0, 0, 2, -2]], [[-73, -2, 0, 2, 8, 10, 15, 15]], [[-20, -11, -20, -17, 10, 5, 0, -20]], [[-20, 5, 10, -5, 4, 11, 12, 16, -2, -15, 16]], [[-1, 2, 3, 3, 1, 10, 0, 0, 2, 11, -1, 3, 11]], [[12, -2, 2, -6, 2, 15]], [[1, -5, 20, 8, -8, -7, 4]], [[-20, -5, 0, 0, -5, -2, -16, 2, -9, 0, -5]], [[-10, -15, -20, 10, 5, 0, 5, -20]], [[1, -10, -2, 46, 0, 2, 9, 10, 15, 15]], [[0, 1, -10, -10, -19, 2, 10, 15]], [[-1, 5, -3, 7, -9, 10, -15, 20, -3, 5]], [[-8, 1, -1, 2, 3, 20, -2, 0, -7, 0, 3]], [[-21, 5, -10, -20, 10, 5, 0, -20, 5]], [[-1, 3, -3, 6, 4, 7, 2, -5, 6, 2, 6]], [[0, 0, -1, 3, -1, -19, 2, 1, 7, -19, -2, 0, 0, 2, -1, 0, 2, 2]], [[15, -19, 5, 10, -5, 4, 11, -8, -2, 11, -15, 15]], [[1, -5, 0, 0, -16, 2, -9, 0, 0]], [[6, -19, 12, -10, -19, 5, 0, -21, -20, -20, 0]], [[0, 0, -1, 3, 2, 3, 1, 7, -19, -2, 0, 14, 2, -1, 0, 1]], [[0, 0, -1, 3, 2, 3, 1, 7, -19, -2, 0, 14, 2, -1, 0, 1, -2]], [[-1, 15, 0, 14, -3, 2, -8, 2, 77, 1, 2, 0, 0, -1]], [[10, 5, 10, -5, 4, 15, 11, -8, -2, 0, 18, -15, -8, 16, 10]], [[6, 5, -5, -16, 8, -8, -7, 5, 6, -7, 6, -7]], [[-10, -20, 10, 0, 10]], [[0, 0, 12, -1, 2, 3, 20, -2, 0, -7, 0, 2, 0]], [[-19, 5, 10, -19, 15, 11, 8, -8, -2, -15, 11, -15, 15]], [[4, 6, 5, -5, -16, 8, -8, -7, 5, 4, 6, -16]], [[7, -19, 10, 5, -20]], [[1, -5, 9, -8, -7, -7, 1, -5]], [[3, -5, 2, 7, 9, -8, -7, -9, 5, 1]], [[-5, 0, 5]], [[-5, 0, 5, 0, -5]], [[0, 0, 0]], [[-1, -2, -3]], [[1, 2, 3]], [[-1000000, 0, 1000000]], [[-9, -6, -3, -1, -8]], [[-10]], [[-5, 10]], [[1, 2, 3, 4]], [[0, 0, -1, 2, 1, 2, -2, 0, 0, 2]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3]], [[-2, -4, -6, 0, -4, -10, 0, -1]], [[0, -1, -1, 2, 1, -2, 0, 0, 2]], [[7, 1, 3, -5, 7, 9, -8, -7, -9, 5]], [[0, 2, -1, -1, 2, 1, -2, 0, 0, 2, 0]], [[0, -1, 5, -3, 7, -9, 10, -15]], [[0, 0, -1, 2, 1, -2, 0, 0, 2, -1]], [[-10, -15, -20, 10, 5, -20, 0]], [[-20, 5, 10, -5, -4, 15, 11, -8, -2, -15]], [[-20, 5, 10, -5, 16, -4, 15, 11, -8, -2, -15]], [[0, 2, -1, -1, 2, 1, -2, 0, 0, 2, 0, 0]], [[5, 10, -5, 15, 11, -2, -15]], [[0, 2, -1, -1, 2, 1, -2, 0, 0, 8, 2, 0]], [[-2, -4, -6, 0, -4, -10, 0, -1, -10]], [[5, 10, -5, 15, 6, -2, -15]], [[-20, 5, -5, -4, 15, 11, -8, -2, -15, -20]], [[2, 4, 1, 6, -8, -10, 1, -3, -5]], [[1, 3, -5, 7, 9, -8, -7, -9, 5, -9]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, 3, 3]], [[0, 2, -1, -1, 2, 1, -2, 0, -7, 2, 0, 0, 0]], [[0, 2, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0]], [[0, 2, -1, -1, 2, 1, -2, 0, -7, 2, 0, 0, 0, -7]], [[2, 4, 6, -8, -10, 1, -3]], [[0, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0]], [[0, 2, -1, -1, 2, -2, 0, 0, 2, 0, -1]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 0, 0, 0, -7]], [[2, 4, 6, -10, 1, -3, -5]], [[2, 4, 6, -10, 1, -3, -5, 1]], [[-20, 5, -5, -4, 15, 11, -8, -2, -15, -20, -20]], [[0, 2, -1, -1, 2, -2, 0, 0, 2, 0]], [[-20, 0, 10, -5, 15, 11, -8, -2, -15]], [[0, -1, 2, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0]], [[-2, -4, -6, -4, -10, -8, 0, -1, -6]], [[0, -4, 0, -1, -1, 2, -2, 0, 0, 2, 0, -4]], [[-2, -4, -6, 16, -4, -10, 0, -1]], [[0, 5, -3, 7, -9, 10, -15, 6, 20]], [[0, -2, -1, 5, -3, 7, 10, -15]], [[-20, 0, -5, 5, 15, 11, -2, -15, -20]], [[-1, -4, -6, 16, -4, -10, 0, -1]], [[1, 5, -5, -4, 15, 11, -8, -2, -15, -20]], [[2, 4, 1, 6, -8, -9, -6, -3, -5]], [[2, 5, 6, -10, 1, -3, -5, 1]], [[-10, -15, -20, 5, -20, 0, 0]], [[2, 5, 6, -10, 1, -3, -3, -5, 20]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 0, -7]], [[1, 2, 3, 5, 6, 7, -2, -4, -6]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 0, -7, -7, -7]], [[1, 2, 3, 5, 4, 5, 6, 7, -2, -4, -6, 6]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, -10]], [[2, -1, -1, 2, 1, -2, 0, 0, 2, 0, 0]], [[1, 2, 3, 5, -1, 6, 7, -2, -4, -6]], [[0, 2, -1, -1, 2, 1, 15, -2, -1, 0, 8, 16, 0]], [[-6, 0, 0, -1, 2, 1, 2, -2, 0, 0, 2]], [[3, 2, 4, 6, -8, -10, 1, -4, -5, 3]], [[1, 2, -6, 3, 5, -8, 6, 7, 16, -6]], [[0, 2, 1, -1, -1, 2, 1, -2, 0, 2, 0, 0, 0, -7, -7]], [[0, 2, -1, -1, 2, -2, 0, 0, 2, -3]], [[0, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0, 1]], [[-10, -15, -20, 4, 10, 0]], [[-10, -15, -20, 10, 5, -20, 0, 0]], [[-20, 0, 10, -5, 15, 11, 0, -8, -2, -15]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 3, 0, -7, 0]], [[-20, 5, -5, 15, 11, 4, -2, -15, -20, -20]], [[-20, 0, -5, -20, 15, 11, -2, -15, -20]], [[3, 2, 4, 6, -8, -7, -10, 1, -3, -5, -4, 3, -10, -8]], [[0, 5, 6, -3, 7, -9, 10, -15, 6, 20, 20]], [[0, 0, -1, 2, 1, 2, -2, 0, 8, 2]], [[0, 2, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0, 1, 0]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, -7, -7, -7]], [[2, 5, 6, -10, 1, -3, -5, 20]], [[2, -1, -1, 2, 1, -2, 0, 2, 0, 0]], [[0, 2, -1, -1, 2, 2, 1, -2, 0, -7, 2, 0, 0, -7]], [[-20, 5, 10, -5, 15, 11, -8, -2, 4, -15]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, -8]], [[-10, -15, -20, -15, 10, 5, 0]], [[7, 1, 3, -20, 7, 9, -8, -6, -9, 5, -8]], [[-1, -1, 2, 1, -2, 0, 0, 2, 0, 0]], [[0, 0, -1, 2, 1, 2, -2, 0, 0, 2, 0, 2]], [[0, -1, 2, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0, 0]], [[0, 0, -1, 2, 1, 2, -2, 0, 0, 2, 0, 2, 2]], [[0, -1, 5, -3, 7, -9, 10, -15, 2]], [[2, 4, 1, 6, -8, -9, -6, -3]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, 3]], [[2, 4, 6, -8, -10, -2, 1, -3]], [[-7, -10, -15, -20, 10, 5, -20, 0, 0, -15]], [[-2, -4, -6, 0, -4, -10, 0, -1, -10, -10]], [[2, 4, 6, -10, 1, -3, -5, 0]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, -7, -7, 0]], [[1, 2, -6, 3, 5, -8, 6, -2, 16, -6]], [[3, 2, 4, 6, -8, -7, -10, 1, -3, -5, -4, 3, -8]], [[2, 4, 6, -8, 4, 1, -3, -5, 4]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, 3, 0, 3]], [[-6, 0, -1, 2, 1, 2, -2, 0, 0, 2]], [[0, 2, -1, -1, 2, 1, 8, -2, -95, 0, -7, 2, 2, 0, 0, 0, -7, 0, 8]], [[2, 7, 1, 3, -5, 7, 9, -8, -7, -9, -4, 5]], [[2, 5, 6, 2, 1, -3, -5, 1]], [[2, 5, 6, 2, -95, -3, -5, 1]], [[-10, -15, -20, 10, 5, -20, -19, 0]], [[-10, -15, -20, 10, 5, -15, -20, 0, -10]], [[-10, -20, -15, -20, 4, 10, 0]], [[0, -1, 5, -3, 0, 7, -9, 10, -15, 2, 5]], [[2, -10, 4, 1, 6, -8, -9, -6, -3, -5]], [[-20, -5, 10, -5, 16, -4, 15, 11, -8, -2, -15]], [[-10, -15, -11, 9, 10, 5, -20, 0]], [[2, 11, 4, 6, -10, 1, -3, -5, 10, 1]], [[2, 4, 6, -8, -7, -10, 1, -3, -5, -4, 3, -8, -3, -3]], [[2, 2, 4, 6, -8, -10, 1, -3, 15, 3, 3, 0, 3, 4]], [[0, -1, 5, -3, 7, -9, 10, 20]], [[2, 5, 6, -10, 1, -3, -5, 20, 2]], [[2, -10, 4, 1, 6, -8, -9, -6, -3, -5, 2]], [[-10, -15, -20, 4, 10, 0, 10, 4, -10]], [[0, 2, -1, -1, 1, 8, -2, -95, 0, -7, 2, 2, 0, 0, 0, -7, 0, 8]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, 3, 4]], [[0, -1, 5, -3, 7, -9, 20, -3]], [[1, 2, 10, 3, 5, -8, 6, -2, 16, -6, 6]], [[-20, 0, -5, -20, 15, 11, -2, -15, 2]], [[3, 2, 4, 6, 7, -10, 1, -3, -5, 3, 3]], [[-20, 5, -5, -4, 15, 11, -8, -2, -15, -20, -20, -5]], [[-10, -15, -20, 10, 5, 0, 0, -20, -10]], [[2, 4, 6, -8, -10, -2, 1, -3, 6, -2]], [[3, 2, 4, 6, -8, -10, 20, -3, -5, 3, 3, 0, 3]], [[2, -1, -1, 2, 1, 0, 0, 2, 0, 0]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 0, -7, 0]], [[0, 0, -1, 1, 2, 1, 2, -2, 0, 0, 2, 0, 2, 2]], [[3, 2, 4, 6, -11, -10, 2, -3, -5, 3, 2]], [[0, -1, 5, -3, 7, -9, 10, -15, -16, 2]], [[0, 0, -1, 2, 1, 2, -2, -1, 0, 2, 0, 2]], [[-20, 5, 10, -5, 15, 11, -8, -2, -15, 14]], [[2, 5, 5, 6, 6, -10, 1, -3, -5]], [[0, -1, 2, 1, -2, -1, 0, 8, 2, 0, 1]], [[2, 4, -8, -10, 1, -3, -5, -4, 3, -8, -3, -3]], [[1, 2, 10, 3, 5, -8, 6, -2, -6, 6, 1]], [[0, 2, -1, -1, 2, 1, -2, 0, -7, 2, 0, 0, 0, -11, -7]], [[-20, 0, 10, -5, 15, 11, 0, -4, -2, -15]], [[-2, -4, -6, 0, -4, -10, 0, -1, -10, -10, 0]], [[0, -1, 2, -1, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0, 0]], [[2, 4, 6, -8, 4, 1, -3, -5, 4, -3, 6]], [[-20, 5, 10, -5, 15, 11, -8, -2, 4, -15, -20]], [[0, 5, 6, -3, 7, -9, -4, 10, -15, 6, 20, 20]], [[0, -1, -10, 5, -3, -9, 10, -15]], [[3, 2, 4, 6, -11, -10, 2, -5, 3, 2]], [[0, -1, -10, 5, -3, 10, -15]], [[2, 5, 5, 6, 6, 3, -10, 1, -3, -5]], [[3, 2, 4, 6, -9, -10, 1, -4, -5, 3]], [[1, 2, 10, 3, 5, -8, 6, -2, -6, 6, 1, 6]], [[0, 2, -1, 2, 1, 15, -2, -1, 0, 8, 16, 0, 0, -1]], [[2, 4, 6, -8, -10, 1, -3, -5, 1]], [[-20, 5, -5, -4, 15, 20, 11, -8, -2, -15, -20]], [[-2, -4, -6, 16, -4, -10, 0, -1, -4]], [[2, -1, -1, 2, 1, -2, 0, 9, 0, 2, 0, 0]], [[-15, -20, 5, -20, 0]], [[-2, -4, -6, -20, -4, -10, -2, 0, -1, -6]], [[1, 5, -5, -4, 15, 11, -8, -2, -15, -20, 3]], [[5, 6, -3, 7, -9, -4, 10, -15, 6, 20, 20]], [[2, 4, 6, -10, -2, 1, -3]], [[2, 5, -6, 15, 6, 3, 1, -3, -5, 6]], [[3, 2, 4, 6, -8, -10, 1, -5, -5, 3]], [[1, 9, 2, 10, 10, 3, 5, -8, 6, -2, -6, 6, -4, 1]], [[2, 2, 4, 6, -8, 3, -10, 1, -3, 15, 3, 3, 0, 3, 4]], [[4, 6, -10, -3, -5, -5]], [[7, 1, -10, 3, -20, 7, 9, -8, -6, -11, -9, 5, -8]], [[2, 5, 6, -10, 1, -15, 20, -3, -5, 20]], [[0, -1, -3, 7, -9, 10, -15, 20]], [[2, 5, 6, -10, -19, -15, 20, -3, -5, 20]], [[9, 5, 6, 2, 1, -3, -5, 1]], [[-20, 5, 10, -5, 16, -4, 15, 11, -8, -2, 1]], [[-15, 85, 0, 0, -1, 2, 1, 2, -2, 0, 0, 2]], [[2, 4, 1, 6, -9, -6, -3, -5]], [[4, 5, -10, -3, -5, -5, 4]], [[0, -1, -1, 1, 8, -2, 0, -7, 2, 2, 0, 7, 0, 0, -7, -7, -7]], [[-20, 5, 10, -5, -4, 15, 11, -8, -2, -15, 5]], [[3, 2, 2, 4, 6, -8, -10, 1, -4, -5, 3]], [[0, 2, -1, -1, 2, 1, -2, 0, 0, 2, 0, 0, 0]], [[2, 4, 6, -10, 1, -3, -5, -3]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 0, -7, -7, 0]], [[0, -6, 2, -1, -1, 2, 1, 8, -2, -95, 0, -7, 2, 2, 0, 0, 0, -7, 0, 8]], [[-15, 2, 4, 1, 6, -9, -6, -3]], [[0, 2, -1, -1, 2, 0, 0, 2]], [[2, 4, 6, -8, -10, 1, 8]], [[-20, 5, 10, -5, 15, -6, 11, -8, -2, 4, -15]], [[-10, -15, -20, 10, 5, -20, -15, -20, 0, -10]], [[0, -1, 2, -1, -1, -1, 2, 1, -2, -1, 0, 8, 2, 0, 0, -1]], [[2, -1, -1, 2, 0, 0, 2, 0, -1]], [[2, 5, 6, -10, -19, -15, 20, -3, -3, -5, 20]], [[1, 9, 2, 10, 10, 3, 5, -8, 5, -2, -6, 6, -4, 1]], [[2, 2, 4, 6, -8, 3, -10, 1, -3, 15, 3, 3, 0, 3, 4, 3, 15]], [[3, 2, 4, 6, -8, -10, 1, -5, -5, 3, -5]], [[5, 6, -3, -2, 7, -9, -4, 10, -15, 6, 20, 20]], [[5, 6, -3, -2, 7, -9, 2, -4, 10, -15, 6, 20, 20, 6]], [[-2, 2, 5, 5, 6, 4, -10, 1, -3, -5, 6]], [[1, 9, 2, -16, 10, 3, 6, -8, 5, -2, -6, 6, -4, 1]], [[0, 0, 2, -1, 2, 1, 2, -2, 0, 0, 2]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 0, -7, 1]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, 6, 3, 3]], [[2, -1, -1, -95, 2, 1, 0, 0, 2, 0, 0]], [[2, 4, -8, -7, -10, 1, -3, -1, -4, 3, -8, -3, -3]], [[-20, 0, -5, -20, 15, 11, -2, -15, -20, -20]], [[0, -1, -1, 2, 1, -2, 0, -1, 0, 8, 2, 0, 1, 1]], [[-2, -4, -6, -4, -10, -9, 0, -1, -6]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 3, 0, -7, 0, 0]], [[2, 5, 6, -10, 1, -15, 20, -3, -5, 20, -15]], [[2, 4, 6, -10, 1, -3, 9, 1]], [[3, 2, 6, -8, -7, -10, 1, -3, -5, -4, 3, -10, -8]], [[0, -1, -1, 1, 8, -2, 0, -7, 2, 2, 0, 7, 0, 0, -7, -7, -7, 0]], [[0, -2, -1, 5, -3, 7, -2]], [[0, 5, -3, 7, 10, -15, -16, 2]], [[2, 5, 6, -10, 1, -15, 20, -3, -5, 20, 8, -15]], [[2, 4, 1, 6, 2, -9, -6, -3, -5, -9]], [[3, 2, 6, -8, -7, 1, -3, -5, -4, 3, -10, -8]], [[3, 2, 4, 6, -9, -10, 1, -5, -5, 3]], [[1, 2, 10, 3, -16, 11, 6, -2, 16, -6, 6]], [[-20, 0, 10, -5, 15, 11, -2, -15]], [[-10, -15, -20, -9, 4, 10, 0]], [[0, 2, -1, 2, 1, 15, -2, 4, 0, 8, 16, 0, 0, -1]], [[2, -1, 2, 0, 0, 2, -1]], [[0, 2, -1, 2, 1, 15, -2, 4, 0, 8, 16, 0, -7, -20, -1]], [[3, 6, 4, 6, -9, -10, 1, -4, -5, 3]], [[-20, 5, -5, -4, 15, 11, -8, -15, -20, -20, -5]], [[2, 4, 6, -8, 4, 1, 3, -5, 4, -3, 6]], [[-20, 0, -5, -20, 15, 11, -2, -15, -20, -20, -20]], [[3, 2, 6, -8, -7, -4, 1, -3, -5, -4, 3, -10, -8]], [[2, 4, 6, 15, -8, -10, 1, -3, -5, 1, 1]], [[2, 6, 1, 6, 2, -9, -6, -3, -5, -9]], [[2, -10, 4, 1, 6, -8, -9, -6, -3, 2, -5, 2]], [[-20, 5, 10, -2, 15, -6, 11, -8, -2, 4, -15]], [[1, 2, 11, 3, 5, -8, 6, -2, -6, 6, 1]], [[-7, -15, -20, 10, 5, -15, -20, 0, -10]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, -7, 0]], [[1, 2, -16, 10, 3, 6, -8, 5, -2, -6, 6, -4, 1]], [[0, 0, 2, -1, 2, 1, 8, -2, 0, -7, 2, 2, 0, 0, 0, -7, -7, -7]], [[3, 2, 6, -8, -7, -4, 7, 1, -4, -5, -4, 3, -10, -8]], [[-20, 5, 10, -5, 16, -4, 15, 11, -8, -2, 1, 1, -20]], [[0, 2, -1, -1, 1, 8, -2, -95, 0, -7, 2, 2, 0, 0, 0, -7, 0, 8, 1]], [[0, 0, -1, 2, 1, 2, -2, 0, 0, 2, 0, 2, 2, 4]], [[0, -7, 0, -1, 2, 1, 2, -2, 0, 2, 0, 2]], [[0, 5, 6, 7, -9, 10, -15, 6, 20, 20]], [[1, 2, 10, 7, 3, 5, -8, 6, -2, -6, 6]], [[3, -95, 6, -8, -7, -10, 1, -3, -5, -4, 3, -10, -8, -8]], [[2, 2, 4, 6, -8, -10, 1, -3]], [[4, 5, -10, -3, -5, -5]], [[2, 4, -8, -10, 1, -3, -4, 3, -8, -3, -3, -3]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, 2, 0, 0, -7, 0, 8]], [[3, 2, 6, -8, -10, 1, -3, -5, 3, 6, 3, 3, 6]], [[5, 6, -3, -2, 7, 11, -9, 2, -4, 10, -15, 6, 20, 20, 6, 6]], [[-20, 5, 10, -5, 15, 11, -8, -2, 4, -15, -20, 10]], [[-20, 5, 10, -4, -4, 16, 15, 11, -8, -2, -15, 15]], [[9, -20, 5, 10, -5, 15, -6, 11, 1, 11, -8, -2, 4, -15]], [[2, -11, 4, 6, -8, -10, 1, 8]], [[2, -1, 2, 1, -2, 0, 0, 2, 0, 0]], [[5, 10, -4, -4, 15, 11, -2, 11, -15]], [[-2, -4, -6, 0, -4, -10, -10, 0, -1, -10, -10, 0]], [[0, -1, 5, -3, 7, -9, 10, -15, -16, 2, 0]], [[2, 4, 6, -10, 1, -3, 9, 85, 1]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, 6, 3, 3, 3]], [[0, 2, -1, -1, 2, 1, 8, -2, -95, 0, -7, 2, 2, 0, 0, 0, -7, 0, 8, 2]], [[-20, 5, 10, -5, 16, -4, 15, 12, -8, -2, -15]], [[0, 0, -1, 1, -2, 0, 0, 2, 0, -5, 85, 2]], [[2, 2, 4, 6, -8, 3, 1, -3, 15, 3, 3, 0, 3, 4]], [[2, -1, 2, 1, -2, 0, -4, 0, 2, 0, 0]], [[0, 5, 6, 7, 7, -9, 10, -15, 6, 20, 20]], [[1, 3, -5, 7, 9, 3, -8, -7, -9, 5]], [[0, 2, -1, -1, 2, 0, 0, 2, -3]], [[-1, -1, 2, 1, -2, -1, 0, 0, 2, 0, 0]], [[0, -3, 7, 10, -15, -16, 2]], [[0, 5, -3, -9, 10, -15, 20]], [[-20, 5, 10, -5, 16, -4, 15, 12, -8, -2, -15, -5]], [[3, -95, 6, -8, -7, -10, 1, -3, -5, -4, 3, -10, -8, -6, -8]], [[0, -2, -1, 5, -3, 7, 10, -15, -1]], [[2, -8, -1, 2, 0, 0, 2, -1, -1, -1]], [[-2, -4, -6, 16, -4, -10, 0, -1, -4, -1]], [[3, 2, 6, -8, 1, -3, -5, -4, 3, -10, -8]], [[-20, 5, -5, -4, 11, -8, -2, -15, -20]], [[1, 9, 2, 10, 10, 3, -10, -8, 5, -2, -6, 6, -4, 1]], [[-10, -15, -20, -9, 4, 10, 0, 10, 10]], [[1, 2, 10, 3, 5, -8, 6, -2, -20, -6, 6]], [[0, 2, -1, 2, 1, -2, 0, 0, 8, 2, 0]], [[2, -11, 4, -8, -10, 1, 8]], [[-20, 5, 10, -5, 16, -4, 15, 12, -8, -2, -15, -5, 10]], [[0, 5, -3, 7, 10, -15, -16, 2, -16]], [[2, -1, -1, 2, 1, -2, 0, 0, 2, 0, 0, -2]], [[1, 2, 3, 5, 6, 7, -2, -3, -6, -6]], [[2, 6, -10, 1, -3, -5, -3]], [[-9, -10, -15, -20, 4, 0]], [[3, 16, 2, 4, 6, -8, -10, 1, -3, -5, 3, 3, 3, 4, -8]], [[3, 2, 6, -8, 1, -3, -5, -4, 3, -10, -4]], [[3, 2, 4, 6, -8, -10, 0, -3, -5, 3, 3]], [[2, -1, -1, 2, 1, -2, 0, 2, 0, 0, 0, 0]], [[-10, -15, -20, 10, 5, 0, 0, -20, 4, -10]], [[0, -1, 2, -1, -1, 2, 1, -2, -1, 0, 8, 2]], [[-1, -10, -16, -20, 4, 0]], [[-20, 5, 10, -4, -4, 16, 15, 11, -8, -2, 15]], [[0, 0, -1, 85, 1, 2, -3, 0, 0, 2]], [[1, -5, 7, 9, -8, -7, -9, 5, -9, 1]], [[-6, 0, 2, 2, 2, -2, 0, 0, 2]], [[2, 5, 6, -10, 1, -9, -3, -5, 1, -10, -10]], [[2, 7, 1, 3, -5, 7, 9, -7, -7, -9, -4, 5]], [[-20, 5, 10, -5, 16, -4, 15, 12, -8, -2, -15, -15]], [[0, -2, -1, 11, 5, -3, 7, 10, -15, -1]], [[-15, -20, 10, 5, -20, -19, 0]], [[0, 0, -4, -1, 2, 1, 2, -2, 0, 0, 2]], [[-15, 85, 0, 0, -1, 2, 1, 2, -1, 0, 0, 2]], [[0, -1, 4, -3, 7, -9, 20, -3]], [[1, -11, 4, 6, -8, -10, 1, 8]], [[1, 2, 10, 10, 3, 5, -8, 5, -2, -6, 6, -4, 1]], [[2, 2, 4, -8, -10, 1]], [[0, 2, 0, -1, -1, 2, 1, 8, -2, -95, 0, -7, 2, 2, 0, 0, 0, 0, -7, 0, 8, -1, 8]], [[-1, -1, 2, 1, -2, -1, 0, 2, 0, 0]], [[3, 2, 4, 6, 2, 7, -10, 1, -3, -5, 3, 3]], [[0, -1, -1, 1, 8, 0, -7, 2, 2, 0, 7, 0, -7, -7, -7]], [[7, 1, 7, -20, 7, 9, -6, -9, 5, -8]], [[3, 2, -9, -8, -7, -10, 1, -3, -5, -4, 3, -10, -8]], [[2, 6, 1, 6, 2, -9, -6, -3, -5, -5, -9, -6]], [[2, 4, 6, -11, 4, 1, 3, -5, 4, -3, 6]], [[0, 5, 6, -3, 7, -9, -4, 10, -15, 6, 20, 20, -3]], [[0, 3, 0, -1, 2, 1, 2, -2, 0, 0, 2, 0, 2, 2, 4, 0, 2]], [[0, 2, -1, -1, 2, 0, 0, 1, -3]], [[1, 2, 10, 3, -8, 6, -2, -6, 6, 1]], [[-20, 5, -5, -4, 15, 11, -8, -2, -15, -20, -20, 5]], [[2, 4, 1, 6, -8, -8, -9, -6, -3, -5]], [[2, 4, 6, -10, -2, -3]], [[1, 2, 10, 10, 3, 5, -8, 5, -2, -6, 6, -4]], [[9, -20, 5, 10, -5, 15, -6, 11, 1, 11, -8, -2, 4, -15, -15]], [[-20, 5, 10, -5, 16, -4, 15, -8, -8, -2, -15, -5]], [[3, 2, 4, 6, -8, 1, 6, -3, -5, 3, -8]], [[2, 2, 4, 6, -8, 3, -10, -3, 15, 3, 3, 0, 3, 4, 4]], [[0, -1, 5, -3, 7, -9, 10, -15, -16, 2, -16]], [[2, -20, 5, -6, 15, 6, 11, 3, 1, -3, -5, 6]], [[3, 2, 4, 6, -8, -10, 1, -3, -5, 3, 3, 0, 3, 2]], [[0, -2, 0, -1, 5, -3, 7, -2]], [[-2, -4, -6, -4, -10, 0, -1, -4]], [[-1, -4, -6, 16, -4, -10, 0, -1, 0]], [[2, 2, 6, -8, 3, 0, -3, 15, 3, 3, 0, 3, 4]], [[3, 0, 2, 3, 6, -8, 1, 6, -3, -5, 3, -8]], [[20, -20, 5, -20, 0]], [[0, -1, 5, -3, -9, 10, -15]], [[1, 9, 2, 10, 10, 3, 5, -8, 7, -2, -6, 6, -4, 0, 1, -2]], [[2, 7, 1, 3, -5, 9, -8, -7, -9, -4, 5]], [[-2, -4, -6, -4, -10, -8, 0, -1, -6, -8]], [[20, -6, 16, -4, -10, 0, -1, 16, -4, -1]], [[0, 0, -1, 2, 1, 2, -2, -1, 0, 2, 1]], [[0, 5, -3, 7, -9, 10, -15, 7, 20]], [[0, 2, -1, -1, 2, 0, 6, 2]], [[2, 11, 6, -10, 1, -3, -5, 10, 1]], [[20, 7, 5, 0]], [[0, 3, -1, -1, 2, 0, 0, 2]], [[0, 5, 6, 7, 7, -9, 10, -15, -8, 6, 20, 20, -15]], [[-1, 2, -1, 2, -4, 0, 2]], [[0, 2, -1, -1, 2, 1, 8, -2, -95, 15, 0, -7, 2, 2, 0, 0, 0, -7, 0, 7, 8, -2]], [[-2, -3, -6, 16, -4, -10, 0, -1, -4]], [[2, 4, -8, -8, -10, -2, 1, -3, 6, -2]], [[0, 5, 7, -9, 10, -15, 4, 7, 20]], [[3, 2, 4, 6, 2, 7, -10, 1, -3, -5, 3, -8]], [[2, 4, 6, -10, 1, -3, 5, -5, 2]], [[0, 0, -1, 2, 1, 2, -2, 0, 3, 8, 2]], [[2, 4, 6, -8, -7, -10, 1, -3, -5, -4, -8, -3, -3]], [[-2, -4, -4, -10, -8, 0, -1, -6]], [[1, 2, 3, -3, 5, -8, 6, -2, 16, 6, 1]], [[0, -4, 0, -1, -1, 2, -2, -16, 0, 2, 0, -4]], [[0, 2, -1, -1, 2, 1, -2, 0, 0, 8, 2, 0, 2]], [[0, 2, -1, 2, -2, 0, 0, 8, 2, 0, 2]], [[-20, -20, 0, -5, -20, 15, 11, -2, -15, -20, -20, -20]], [[0, -1, 2, -1, -1, 2, 1, -2, -1, 0, 8, 2, 1, 0]], [[0, 0, -1, 9, 1, 2, -2, 0, 3, 8, 2]], [[3, 2, 6, -8, -8, -7, 1, -3, -5, -4, 3, -10, -8]], [[0, 2, -1, -1, 2, 1, 8, -2, 0, -7, -1, 2, 2, 0, 0, 0, -7, 0]], [[-20, 0, -5, -2, 5, 15, 11, -2, -15, -20]], [[-2, -4, -6, -4, -10, -8, 0, -1, -8, -8]], [[2, 2, 4, 6, -8, -10, 1, -3, 6]], [[1, 5, -5, -4, 15, 11, -8, -2, -15, -20, 1]], [[-2, -4, -6, -4, -10, -8, 0, -1, -8, -8, -8]], [[0, -1, -1, 1, -4, 8, -2, 0, -7, 2, 2, 0, 7, 0, 0, -7, -7, 1, -7, 0]], [[4, 1, 6, -8, -9, -6, -3, -5]], [[0, 2, -1, 2, -2, 0, 0, 8, 2, 0, 2, 0]], [[1, 2, 3, 5, -1, 7, -2, -4, -6]], [[1, 5, -5, -4, 15, 11, -8, 10, -2, -15, -20, -15]], [[-20, 5, 10, -5, 15, 11, -8, -2, 4, 85, -15]], [[-20, 5, 10, -6, 15, 11, -8, -2, 4, -15, -20, 5]], [[0, -4, 0, -1, -1, 2, -2, -16, 0, 2, 0, -4, -4]], [[0, 0, -1, -95, 1, 2, -2, 0, 3, 8, 2]], [[-20, 5, 10, -5, -4, 15, 11, -8, -5, -15]]]\n    results = [(None, 1), (None, 1), (-2, 1), (-7, 2), (-9, 2), (None, None), (None, None), (-1, None), (-1, None), (-3, 1), (-3, 1), (-2, 5), (None, 1), (-2, 3), (-10, 10), (-1, 1), (-1, 1), (None, 1), (-1, None), (-1, 2), (-4, 1), (-5, 10), (None, 1), (-1, 1), (-2, 5), (None, 1), (-1, 1), (-10, 10), (-2, 5), (-2, 1), (-7, 10), (-5, 1), (-2, 1), (-10, 1), (-1, 1), (-1, 1), (-2, 3), (-1, 3), (None, 1), (-20, 3), (None, 1), (-1, 1), (None, 2), (None, 2), (-10, 6), (-1, 1), (None, 2), (-4, 2), (None, 1), (-1, 2), (-1, 3), (-2, None), (-1, 1), (-5, 1), (-5, 1), (-4, 2), (-1, 1), (-2, 1), (-1, 3), (-2, None), (None, 1), (-1, 3), (-6, 3), (-5, 10), (None, 2), (-1, 1), (-4, 6), (-1, 3), (None, 2), (-5, 1), (-1, 2), (-1, 1), (None, 1), (-1, 1), (-2, None), (-1, 3), (-1, 1), (-3, 3), (None, 3), (-1, 1), (None, 2), (-2, 5), (-1, 1), (-5, 1), (-1, 1), (-4, 1), (-1, 1), (None, 3), (-1, 3), (-1, 3), (-4, 1), (-1, 3), (-1, 3), (-2, 2), (None, 2), (None, 1), (-1, 3), (-1, 1), (-2, 3), (-1, 1), (None, 3), (-2, None), (-1, 1), (-5, 1), (-1, None), (-1, 1), (None, 1), (-1, 2), (None, 1), (-1, 5), (-2, 5), (-3, 1), (-1, 2), (-2, 1), (-10, 5), (-1, 1), (-1, None), (-5, 1), (-2, 2), (-5, 1), (-2, 2), (-3, 2), (-10, 5), (-1, 4), (-1, 1), (-2, 4), (-1, 5), (-5, 1), (-1, 2), (-2, 4), (-2, 5), (-1, 5), (-1, 2), (-2, 1), (-1, 1), (-5, 1), (-10, 5), (-1, 1), (-1, 2), (-1, 1), (-5, 1), (-5, 1), (-1, 4), (-7, 1), (-5, 1), (-1, 5), (-2, 6), (-2, 2), (-2, 1), (-5, 1), (-10, 10), (-10, 10), (-1, 2), (-2, 2), (-1, 5), (-2, 2), (-10, 5), (-2, 1), (-1, 1), (-1, 2), (-1, 2), (-1, 4), (-7, 1), (-1, None), (-10, 5), (-2, 2), (-2, 2), (-5, 3), (-2, 4), (-1, 2), (-5, 1), (-1, 2), (-5, 1), (-1, 1), (-3, 1), (-1, 5), (-10, 10), (-2, 5), (-1, 1), (-2, 1), (-1, 1), (-3, 1), (-3, 1), (-2, 4), (-10, 10), (-2, 2), (-1, 1), (-1, None), (-10, 5), (-7, 1), (-10, 5), (-5, 3), (-2, 2), (-2, 1), (-2, 5), (-2, 5), (-10, 5), (-10, 10), (-7, 1), (-3, 1), (-10, 1), (-1, 2), (-1, 5), (-1, 4), (-10, 5), (-5, 3), (-5, 1), (-5, 1), (-2, 2), (-1, 1), (-1, 1), (-1, 2), (-3, 2), (-2, 4), (-3, 1), (-1, 2), (-2, 2), (-3, 5), (-2, 1), (-1, 1), (-2, 5), (-1, 2), (-3, 1), (-2, 1), (-5, 1), (-2, 4), (-1, 5), (-2, 4), (-5, 3), (-10, 5), (-5, 1), (-3, 1), (-1, 2), (-1, 5), (-5, 1), (-2, 1), (-2, 4), (-3, 2), (-1, 2), (-2, 2), (-5, 3), (-3, 1), (-10, 5), (-5, 1), (-3, 2), (-2, 1), (-3, 2), (-3, 1), (-1, 2), (-3, 1), (-4, 1), (-2, 2), (-1, 5), (-2, 10), (-2, 2), (None, 10), (-5, 1), (-1, 2), (None, 10), (-7, 1), (-5, 3), (-3, 2), (-2, 4), (-7, 1), (-1, 2), (-3, 1), (-1, 1), (-1, 1), (-2, 1), (-10, 4), (-1, 1), (-10, 5), (-3, 1), (-2, 1), (-2, 1), (-5, 5), (-2, 3), (-2, 1), (None, 1), (-1, 5), (-10, 10), (None, 10), (-3, 1), (-7, 1), (-10, 1), (-2, 4), (-5, 3), (-1, 4), (-1, 2), (-1, 2), (-2, 4), (-1, 1), (-10, 5), (-2, 4), (-5, 4), (-6, 1), (-2, 2), (-5, 1), (-1, 2), (-1, 2), (-10, 5), (-1, 3), (-5, 1), (-1, 4), (-1, 3), (-5, 5), (-5, 1), (-1, 1), (-1, 5), (-2, 1), (-1, 1), (-3, 1), (-1, 1), (-2, 4), (-1, 5), (-3, 1), (-1, 4), (-1, 2), (-7, 1), (-5, 3), (-7, 1), (-5, 1), (-10, 5), (-5, 1), (-10, 5), (-1, 5), (-7, 1), (-10, 5), (-2, 2), (-2, 2), (-1, 1), (-1, 5), (-1, 2), (-1, 3), (-5, 4), (-2, 5), (-1, 1), (-1, 1), (-1, 1), (-2, 2), (-2, 5), (-2, 1), (-10, 7), (-1, 1), (-1, 2), (-10, 1), (-2, 4), (-10, 5), (-1, 1), (-5, 1), (-1, 5), (-19, 5), (-2, 2), (-2, 1), (-10, 5), (-5, 1), (-10, 5), (-2, 1), (-5, 3), (-1, 1), (-5, 1), (-1, 1), (-2, 4), (-2, 1), (-2, 4), (-5, 1), (-2, 1), (-1, 1), (-2, 4), (-5, 1), (-10, 1), (-2, 1), (-2, 5), (-1, 2), (-2, 4), (-5, 3), (-5, 2), (-1, 1), (-10, 1), (-7, 1), (-10, 4), (-1, 1), (-2, 1), (-3, 1), (-1, 2), (-10, 10), (-2, 1), (-1, 1), (-1, 1), (-1, 1), (-1, 1), (-2, 6), (-1, 2), (-2, 1), (-1, 2), (-1, 5), (-2, 2), (-2, 4), (-3, 1), (-10, 5), (-1, 2), (-11, 5), (-7, 1), (-1, 1), (-1, 2), (-2, 1), (-1, 5), (-3, 4), (-5, 1), (-1, 2), (-1, 2), (-3, 1), (None, 7), (-4, 1), (-10, 5), (-5, 1), (-5, 3), (-1, 1), (-19, 5), (-2, 4), (-3, 2), (-2, 1), (-1, 5), (-10, 3), (-1, 2), (-2, 11), (-2, 1), (-10, 10), (-1, 5), (-1, 2), (-2, 1), (-2, 3), (-5, 4), (-2, 5), (-1, 1), (-3, 2), (-2, 4), (-7, 1), (-7, 1), (-2, 4), (-2, 5), (-3, 4), (-1, 2), (-1, 1), (-1, 2), (-2, 2), (-10, 10), (-1, 4), (-2, 1), (-10, 4), (-10, 5), (-5, 5), (-1, 1), (-2, 2), (-2, 1), (-1, 2), (-2, 2), (-2, 5), (-2, 5), (-2, 1), (-1, 2), (-7, 1), (-1, 1), (-1, 2), (-1, 2), (-5, 1), (-20, 10), (-2, 4), (-1, 1), (-11, 5), (-1, 1), (-1, 2), (-2, 4), (-1, 1), (-1, 2), (-10, 5), (-5, 10), (-10, 5), (-1, 2), (-2, 2), (-1, 2), (-1, 1), (-1, 1), (-3, 2), (-1, 2), (-1, 1), (-1, 1), (-1, 1), (-3, 2), (-1, 2), (-11, 1), (-5, 1), (-8, 2), (-3, 2), (-10, 2), (-5, 1), (-1, 2), (-1, 2), (-5, 1), (-19, 5), (-1, 2), (-5, 1), (-3, 1), (-1, 1), (-1, 2), (-7, 4), (-2, 1), (-10, 4), (-3, 5), (-5, 1), (-5, 1), (-1, 3), (-2, 1), (-2, 2), (-1, 1), (-4, 2), (-10, 5), (-1, 2), (-7, 1), (-1, 1), (-1, 4), (-5, 1), (-2, 5), (-3, 1), (-10, 5), (-2, 1), (-7, 1), (-4, 1), (-1, 2), (-2, 5), (-7, 1), (-1, 1), (-1, 2), (-11, 5), (-1, 2), (-1, 1), (-4, 5), (-1, 1), (-7, 1), (-5, 1), (-1, 1), (-3, 2), (-2, 1), (-1, 2), (-2, 4), (-1, 2), (-5, 1), (-5, 1), (-5, 1), (-2, 2), (-2, 4), (-1, 1), (-2, 1), (-2, 4), (-2, 1), (-1, 1), (-1, 1), (-2, 1), (-19, 5), (-7, 1), (-1, 1), (-1, 1), (-2, 1), (-1, 1), (-1, 1), (-2, 1), (-2, 8), (-19, 5), (-1, 2), (-1, 5), (-2, 4), (-2, 5), (-5, 1), (-5, 1), (-2, 1), (-3, 2), (-10, 1), (-5, 4), (-6, 5), (-3, 1), (-7, 1), (-1, 4), (-5, 3), (-5, 5), (-5, 1), (-1, 2), (-1, 1), (-1, 1), (-2, 2), (-11, 5), (-2, 4), (-1, 1), (-2, 2), (-5, 1), (-2, 2), (-10, 5), (-2, 1), (-10, 1), (-1, 5), (-1, 1), (-10, 5), (-1, 2), (-1, 1), (-2, 4), (-5, 1), (-10, 5), (-1, 1), (-1, 1), (-1, 1), (-2, 4), (-5, 5), (-10, 10), (-1, 2), (-2, 5), (-5, 4), (-19, 5), (-5, 1), (-5, 1), (-5, 5), (-5, 5), (None, None), (-1, None), (None, 1), (-1000000, 1000000), (-1, None), (-10, None), (-5, 10), (None, 1), (-1, 1), (-3, 1), (-1, None), (-1, 1), (-5, 1), (-1, 1), (-1, 5), (-1, 1), (-10, 5), (-2, 5), (-2, 5), (-1, 1), (-2, 5), (-1, 1), (-1, None), (-2, 5), (-2, 5), (-3, 1), (-5, 1), (-3, 1), (-1, 1), (-1, 1), (-1, 1), (-3, 1), (-1, 1), (-1, 2), (-1, 1), (-3, 1), (-3, 1), (-2, 5), (-1, 2), (-2, 10), (-1, 1), (-1, None), (-1, 2), (-1, 16), (-3, 5), (-1, 5), (-2, 5), (-1, 16), (-2, 1), (-3, 1), (-3, 1), (-10, 5), (-3, 1), (-1, 1), (-2, 1), (-1, 1), (-2, 1), (-3, 1), (-1, 1), (-1, 1), (-1, 1), (-1, 1), (-4, 1), (-6, 1), (-1, 1), (-1, 2), (-1, 1), (-10, 4), (-10, 5), (-2, 10), (-1, 1), (-2, 4), (-2, 11), (-3, 1), (-3, 5), (-1, 1), (-1, 1), (-1, 1), (-3, 1), (-1, 1), (-1, 1), (-2, 4), (-3, 1), (-10, 5), (-6, 1), (-1, 1), (-1, 1), (-1, 1), (-1, 1), (-1, 2), (-3, 1), (-3, 1), (-2, 1), (-7, 5), (-1, None), (-3, 1), (-1, 1), (-2, 1), (-3, 1), (-3, 1), (-3, 1), (-1, 1), (-1, 1), (-4, 1), (-3, 1), (-3, 1), (-10, 5), (-10, 5), (-10, 4), (-1, 2), (-3, 1), (-2, 10), (-10, 5), (-3, 1), (-3, 1), (-3, 1), (-1, 5), (-3, 1), (-3, 1), (-10, 4), (-1, 1), (-3, 1), (-1, 5), (-2, 1), (-2, 2), (-3, 1), (-2, 5), (-10, 5), (-2, 1), (-3, 2), (-1, 1), (-1, 1), (-1, 1), (-3, 2), (-1, 2), (-1, 1), (-2, 5), (-3, 1), (-1, 1), (-3, 1), (-2, 1), (-1, 1), (-2, 10), (-1, None), (-1, 1), (-3, 1), (-2, 4), (-3, 5), (-1, 5), (-5, 2), (-1, 5), (-3, 1), (-4, 1), (-2, 1), (-1, 1), (-3, 1), (-2, 5), (-1, 16), (-1, 1), (-15, 5), (-1, None), (-2, 1), (-3, 5), (-2, 1), (-3, 1), (-5, 1), (-2, 1), (-3, 1), (-3, 4), (-6, 1), (-3, 1), (-1, 7), (-3, 2), (-3, 1), (-2, 1), (-1, 1), (-3, 1), (-3, 4), (-1, 1), (-2, 5), (-4, 1), (-1, 1), (-3, 1), (-1, 1), (-1, 1), (-3, 1), (-1, 2), (-8, 1), (-2, 4), (-10, 5), (-1, 1), (-1, 2), (-3, 2), (-2, 1), (-3, 1), (-5, 1), (-2, 5), (-2, 2), (-2, 1), (-2, 1), (-1, 1), (-1, 1), (-3, 1), (-1, 1), (-1, 1), (-2, 11), (-1, 1), (-1, None), (-1, 1), (-3, 1), (-3, 1), (-3, 1), (-1, 1), (-1, 5), (-3, 2), (-3, 1), (-3, 1), (-3, 1), (-5, 1), (-2, 1), (-2, 10), (-9, 4), (-1, 1), (-1, 2), (-1, 1), (-4, 1), (-4, 5), (-3, 1), (-2, 11), (-3, 1), (-3, 1), (-3, 1), (-3, 1), (-2, 4), (-2, 1), (-7, 5), (-1, 1), (-2, 1), (-1, 1), (-4, 1), (-2, 1), (-1, 1), (-1, 1), (-1, 1), (-9, 5), (-2, 1), (-3, 1), (-3, 1), (-3, 4), (-3, 1), (-1, 1), (-3, 1), (-2, 2), (-2, 4), (-2, 5), (-2, 1), (-8, 1), (-1, 1), (-2, 5), (-1, None), (-1, 2), (-3, 1), (-3, 1), (-1, 1), (-2, 5), (-1, 1), (-3, 1), (-1, 1), (-9, 5), (-5, 1), (-1, 2), (-1, 1), (-3, 2), (-3, 5), (-2, 5), (-3, 1), (-1, 5), (-1, 2), (-1, 16), (-3, 1), (-2, 5), (-2, 1), (-9, 4), (-2, 1), (-1, 1), (-8, 1), (-2, 5), (-3, 2), (-1, 1), (-2, 1), (-3, 1), (-9, 4), (-3, 1), (-3, 1), (-3, 2), (-1, 1), (-10, 4), (-1, 1), (-1, 4), (-2, 5), (-1, 1), (-5, 1), (-2, 2), (-3, 1), (-4, 1), (-2, 5), (-1, 5), (-15, 5), (-1, 1), (-1, 1), (-1, 4), (-8, 1), (-2, 1), (-8, 1), (-1, 1), (-1, 1), (-3, 1), (-1, 1), (-6, 1), (-3, 1), (-3, 1), (-3, 1), (-3, 5), (-1, 1), (-1, 1), (-2, 1), (-2, 5), (-3, 1), (-2, 2), (-2, 1), (-2, 1), (-2, 5), (-3, 1), (-3, 2), (-1, 2), (-3, 1), (-3, 1), (-1, 5), (-1, None), (-1, 16), (-3, 2), (-3, 1), (-20, 5), (-1, 5), (-2, 1), (-4, 1), (-1, None), (-1, 16), (-1, 1), (-3, 5), (-1, 2), (-3, 1), (None, 5), (-1, 2), (-8, 5), (-1, 2), (-1, 1), (-1, 16), (-2, 1), (-9, 4), (-3, 1), (-3, 1), (-1, 1), (-3, 1), (-1, None), (-2, 1), (-1, 2), (-1, 1), (-1, 2), (-2, 11), (-1, 1), (-1, 1), (-3, 1), (-1, 1), (-2, 5), (-1, None), (-3, 1), (-2, 1), (-1, None), (-1, 1), (-3, 1), (-1, 2), (-1, 1), (-2, 1), (-2, 4), (-2, 4), (-1, 2), (-1, 1), (-4, 5)]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/137", "prompt": "\ndef compare_one(a, b):\n    \n\n\n    num_a = float(str(a).replace(\",\", \".\"))\n    num_b = float(str(b).replace(\",\", \".\"))\n    if num_a == num_b:\n        return None\n    return a if num_a > num_b else b\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef compare_one(a, b):\n    \n\n\n    num_a = float(str(a).replace(\",\", \".\"))\n    num_b = float(str(b).replace(\",\", \".\"))\n    if num_a == num_b:\n        return None\n    return a if num_a > num_b else b\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef compare_one(a, b):\n    \n\n\n    num_a = float(str(a).replace(\",\", \".\"))\n    num_b = float(str(b).replace(\",\", \".\"))\n    if num_a == num_b:\n        return None\n    return a if num_a > num_b else b\n\n", "raw_modification": "```python\n<code_start>\ndef compare_one(a, b):\n    # Convert inputs to strings\n    str_a = str(a)\n    str_b = str(b)\n    \n    # Replace commas with dots\n    replaced_a = str_a.replace(\",\", \".\")\n    replaced_b = str_b.replace(\",\", \".\")\n    \n    # Convert to float\n    num_a = float(replaced_a)\n    num_b = float(replaced_b)\n    \n    # Redundant operations to increase complexity\n    redundant_check_a = num_a == float(replaced_a)\n    redundant_check_b = num_b == float(replaced_b)\n    \n    # Additional unnecessary variable assignments\n    temp_a = num_a\n    temp_b = num_b\n    \n    # More redundant checks\n    if redundant_check_a and redundant_check_b:\n        if temp_a == temp_b:\n            return None\n    \n    # Unnecessary conditional flow\n    if temp_a > temp_b:\n        result = a\n    else:\n        result = b\n    \n    # Another layer of redundancy\n    final_result = result if temp_a != temp_b else None\n    \n    return final_result\n<code_end>\n```", "modification": "\ndef compare_one(a, b):\n    \n    str_a = str(a)\n    str_b = str(b)\n    \n    \n    replaced_a = str_a.replace(\",\", \".\")\n    replaced_b = str_b.replace(\",\", \".\")\n    \n    \n    num_a = float(replaced_a)\n    num_b = float(replaced_b)\n    \n    \n    redundant_check_a = num_a == float(replaced_a)\n    redundant_check_b = num_b == float(replaced_b)\n    \n    \n    temp_a = num_a\n    temp_b = num_b\n    \n    \n    if redundant_check_a and redundant_check_b:\n        if temp_a == temp_b:\n            return None\n    \n    \n    if temp_a > temp_b:\n        result = a\n    else:\n        result = b\n    \n    \n    final_result = result if temp_a != temp_b else None\n    \n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[1, 2], [1, 2.5], [2, 3], [5, 6], [1, '2,3'], ['5,1', '6'], ['1', '2'], ['1', 1], [3, 3], [-1, -1], [0, 0], [-2.5, 2.5], [10, '10.0'], ['5,000', 5000], ['7.3', 7.3], [-3, '-3.0'], ['-4,1', '-4.0'], [-2.0, 3], [1, 0], ['77.3', '7.3'], [10, 0], [-1.0425166390148266, -1.123543564552395], ['5,000', 4999], ['773.3', '7.3'], [1, -1], ['7.3', -2.5], [5000, 0], [4999, 5000], [4999, -1], ['7.3', -2.0], [-1, 10], ['7.30', '-3.0'], [10, '77.3'], [5001, 0], [5000, 5001], [5000, 5000], [0, 5001], [-2.0, 2.5], [10, -1], ['5,0050', 10], [11, 10], ['7.3', '7.3'], [-1, -3], [10, 10], [10, '1.0'], [0, 4999], ['5,000', '5,000'], [4999, 5001], ['773.3', 5000], [5000, 3], [2, 1], ['5,000', '05,000'], [0, -1], [3, 0], [3, -1], [-1, '77.3'], [1, 5001], [5001, -3], [1.496091849454374, 2.5], [-2.0, 2], [-1, -2], [-3, 2], [-1.0425166390148266, -1.0425166390148266], [9, 10], [5002, -3], [1, 1], [1.496091849454374, 2], [4999, 1], [1, 9], [-3, -3], [0, 1], [-3, -2], ['11.0', '1.0'], ['7.3', '-4,1'], [10, 5000], [5002, 5000], [-3, 5000], [7.3, 7.3], ['7.3', 1.496091849454374], [-2.0, 5002], [41, 40], ['-4.0', '-4.0'], [2.5, 5002], [4999, 4999], [1, -2], [-1.123543564552395, 2.5], [9, '77.3'], [41, -2], [5000, 2], [9, '10.0'], [-1.123543564552395, 3], [-2.0, -2.0], [5002, '77.3'], [10, 5002], [1, 10], [11, 0], [5000, 4998], [1.496091849454374, -1.0425166390148266], [-2, 4999], ['7.33', '7.3'], [-2, 2], ['-4,1', '7.3'], [10, '-4,1'], [40, -2], [11, 11], ['05,000', '1.0'], ['11.0', '77.3'], [-3, 3.14], [-9.876, '-9.123'], ['-8,9', -7.654], ['1.23', '1,45'], ['-6.7', '6.7'], ['3', '3.0'], ['-2', '-2.0'], ['0', 0], [1, '1.00000001'], ['1.25', '1,250'], ['1,45', '1.25'], ['15,415', '1,45'], ['3', '1.25'], ['6.7', '1.25'], ['1,45', '1.225'], ['1.25', '1.25'], ['1,45', 0], ['0', '1.25'], ['1.25', '6.7'], ['00', 0], ['15.25', '1.25'], [-7.915238266264661, -7.654], ['7', '1.25'], [1, -3], ['1', '1.125'], [1, '1,45'], ['3,415', '41,45'], [-8.74973784205587, -9.876], ['-9.123', '-9.123'], ['-9.12', '-9.123'], ['1.205', '1.25'], ['3', '15.25'], [-3, -7.915238266264661], ['-2.0', '1.25'], ['00', '00'], ['3', '1.205'], ['1.225', '1.225'], ['-8,9', '00'], ['1.23', '1.225'], ['15.25', '15.25'], ['3', '1.215'], ['6.7', '-15,4159'], ['1,250', '1.2'], ['3.0', '-2.0'], ['16.7', '16.7'], ['15,415', '1'], ['41,45', '41,45'], [-2, -3], [2.767386384178415, 3.14], ['41,45', '4,45'], ['145', '145'], ['-6.7', '-2.0'], [-7.654, -7.014581866391794], ['00', '1.25'], [-8.74973784205587, -8.74973784205587], ['1.23', '16.7'], ['1,45', '1,45'], ['0', '1,45'], ['1,45', '1,4'], ['1,45', '1,'], ['33', '1.25'], ['00', -1], [-12.967215344684003, -4.51094653769451], ['1.20', '33.0'], ['1.23', '-6.7'], ['1.23', '1.125'], ['1.215', '1.215'], ['1', '15,415'], ['1.25', '6337'], ['-.123', '-.123'], ['0', -1], ['1.25', '63371.25'], ['1.23', '1.1'], ['0', '0'], ['33.0', '1.215'], ['1', '1.225'], ['1.0205', '1.25'], ['0', -2], ['415', '41,45'], [-12.774935986016603, -12.967215344684003], ['.0', '-2.0'], ['1.1', '1.25'], ['1.23', '1.23'], ['000', '1,'], ['415', '415'], ['2151,250', '1.2155'], [-2, -1], [-7.915238266264661, -7.014581866391794], ['3', '3'], ['-9.12', '415'], ['1.20', '1.25'], [-12.774935986016603, -12.774935986016603], [34, -2], ['-2.000', '-2.0'], ['41,45', '6.7'], ['11.23', '1.225'], ['-9.12', '1.1'], ['1,250', '1,250'], ['1.2', '-9.1'], ['1.1', '33'], ['-6.7', '1.23'], ['63371.25', '-2'], ['115.25', '15.25'], ['1,45', '0'], ['1,4', '1,45'], [-3, 34], [-2, -2], ['333', '1.1'], [-2, 3.14], ['-2.000', '-9.1'], ['1.0205', '1.1'], ['-8,9', '-8,9'], ['-2.0', '16.7'], ['1.03', '-6.7'], ['3.0', '-2.'], ['1.23', '415'], ['33', '1.205'], ['330003', '1.25'], [-6.4514534689514935, -9.876], ['63371.25', '1.0205'], ['1.1', '1.2'], ['11', '1.225'], ['00', -3], ['000', -2], [1, 11], ['333', '333'], ['1.23', '41,45'], ['-2.000', '63371.25'], ['115.25', '11.23'], ['-.123', '4,45'], ['-6.7', '16.7'], [-8.298650833465093, -7.014581866391794], ['1.205', -1], ['-2.0', '1.20000'], ['00', '0'], ['41,45', '000'], [-2, 34], ['33', '4,45'], ['15', '1.25'], ['1.323', '1.23'], [-7.014581866391794, -7.915238266264661], ['15,4115', '6337'], [1, 34], ['.7', '16.7'], ['7', '7'], [-8.298650833465093, -12.967215344684003], ['333', '33'], ['000', '00'], [-7.654, -7.654], [35, -2], ['15.25', '21.25'], ['5', '-2.0'], [-1, 34], ['1.1', '1.1'], ['1.205', '1.205'], ['415', '-9.12'], ['-8,9', '3113'], ['-9.12', '3'], ['6.7', '3,415'], ['1.23', '63371.25'], ['21.20', '00'], ['3113', '63371.25'], [-15.232196952601557, -5.75363867961704], ['11', '1.125'], ['13.323', '1.323'], ['11', '1.20'], [12, 11], ['-84,45', -7.654], [84, -2], [-3, -1], ['13.323', '1.225'], ['1.23', '15.25'], ['145', '1.0205'], [1, 35], ['-2.000', '-9.123'], ['3300', '4,45'], ['3,415', '0'], ['3415', '3,415'], ['1.00000001', '21.25'], ['33.0', '33.0'], [2.767386384178415, -7.654], ['000', '-2.000'], [-15.232196952601557, -15.232196952601557], ['5', '-15,4159'], [2.767386384178415, -8.226976895748662], ['1.00000001', '41,45'], ['-6.75', '-6.00075'], [-8.900537956858544, -12.774935986016603], ['-9.12', '1.11'], ['-6.00075', '7'], ['0', 84], ['-6.7', '15,4115'], ['1.133000323', '1.33000323'], ['-6.75', '21.25'], [12, 12], ['1.1', '63371.25'], [-5.75363867961704, -12.774935986016603], ['6337', '-84,45'], ['11.1', '1.1'], [3.712550934925414, 2.767386384178415], ['-8,9', '1.25'], ['-9.12', '-9.12'], ['6.7', '-15,41159'], [-7.654, -4.5668177959472835], ['-6.7', '-6.7'], [1, 70], ['125', '21.25'], ['15,41', '1'], ['1.000000001', '1.00000001'], ['-2.0', '115.25'], ['-15,41159', '11.23'], [-9.13887722899935, -7.654], ['-2.000', '1.125'], ['00', '6.7'], ['11.23', '11.23'], [-3, 11], ['41,4', '4,45'], [-2, 70], [34, 34], [-4, 11], ['1.20', '1.20'], ['-9.12', '44'], ['-6.7', '41,45'], ['151,411115', '15,4115'], ['-6.7', '3415'], ['-.123', '1.23'], ['1.20000', '1.215'], [-12.967215344684003, -12.967215344684003], ['-9.1', '1.23'], ['1.23', '1225'], ['4,45', '4,45'], ['-.123', '1415.23'], ['15,41', '11'], ['1.23', '13.02125'], ['1.02205', '1.02205'], ['77', '7'], [-4, -3], ['6.7', '11'], ['115.25', '-2'], [-8.648925493228285, -7.654], [-12.774935986016603, -7.654], ['-2.0044', '000'], ['415', '1415.23'], ['.0', '115.25'], [-2, 1], ['.7', '3.0'], ['41,45', '1.1'], ['1,545', '3415'], ['00', '1.03'], ['-8,9', -9.761009327429885], [2.8215418518706716, 3.14], ['-2.0', '1.11'], [-7.014581866391794, -7.014581866391794], [-7.947227268681752, -7.947227268681752], ['1.225', '15,4115'], [2.8215418518706716, -7.014581866391794], ['-8,9', '13.02125'], ['41,4', '33'], [-10.397627547678898, -11.107660229810385], ['-9.12', '11.23'], ['-125.00075', '7'], ['1.20000', '1.00000001'], [-1, 33], ['0011', '0011'], [2, 34], ['1225', '13.02125'], ['1.25', '-2'], [2.767386384178415, 4.569736337135209], ['-2', '-2'], ['1,45', '145'], ['000', -3], [-1, 35], ['33', '33'], ['155', '15'], [-1, 36], ['-8,9', '000'], ['1,250', '151,411115'], ['63371.25', '6337'], [-12.774935986016603, -7.014581866391794], ['1,545', '3333300'], [-8.648925493228285, -98.33564388101799], ['00', '-9.123'], ['0', '-9.123'], ['415', '-9.1'], ['155', '155'], ['1', '-9.12'], [-5.75363867961704, -7.654], ['1.000000001', '1.000000001'], ['00', '3,415'], [-9.761009327429885, -8.226976895748662], ['1.205', '1.00000001'], ['115.25', '15,415'], [-6.4514534689514935, -7.654], [-6.122895581745484, -6.122895581745484], [-1, 38], ['15500', '67.7'], [4.569736337135209, 2.767386384178415], ['11.23', '.7'], ['16.7', '16.77'], ['33', '77'], ['12257', '13.02125'], ['-6.00075', '-6.00075'], ['-15,4159', '63371.25'], ['1.125', '11.125'], ['55', '5'], ['03415', '1,45'], ['1,5', '1.25'], ['1,45', '00'], [-69.38740384414959, -69.38740384414959], [1, '11'], ['-8,9', '.0'], [-8.648925493228285, -8.74973784205587], ['2151,250', '-2'], ['1', '12251'], ['-91.12', '-9.12'], ['41.22515', '-9.1'], ['.7', '1.2155'], ['33.0', '-2.0'], ['1.233', '1.23'], ['-9.1', '1.0000'], ['41,455', '-9.1'], ['415', '414,45'], ['1.125', '-8,9'], ['4,45', '1.1'], ['000', 0], ['63371.25', '3415'], [-9.13887722899935, -4.5668177959472835], ['333', '3333'], ['-15,41593', '3333'], [-3, 84], ['1,45', '41,45'], [36, 84], ['41,4', '1,'], ['-9.12', '-15,4159'], ['151.25', '-2.0'], ['12257', '-9.1'], ['1.3300023', '1,45'], ['1.2155', '155'], [-4, -2], [-7.915238266264661, -4.51094653769451], ['6337', '1.215'], ['12215', '1225'], ['5', '16.77'], ['-2.0', '1.02205'], [75, -68], [-68, -68], ['151.235', '155'], [-7.945789698508423, -7.014581866391794], ['0', '1,5'], ['00', 84], ['3333300', '13415,545'], ['-9.12', '444'], ['1.2205', '1.00000001'], [-12.774935986016603, -7.915238266264661], ['15500', '41,45'], ['777', '000'], ['00', '3300'], ['1', '1'], ['03415', '1.23'], [-7.654, -12.774935986016603], ['1.20', '0011'], ['-9.123', '1.5'], [11, 34], ['111', '1'], [-15.232196952601557, -7.014581866391794], [-69.90474800626136, -69.38740384414959], ['00', '151.25'], ['-9444.12', '-9.12'], ['15', '15'], ['11.23', '11.123'], [-15.232196952601557, -5.649489992448723], [0, -4], ['1.0000000001', '1.000000001'], [-9.876, -9.876], ['-91.1215', '1.25'], ['0', '-91.1215'], ['55', '-2.0'], ['3113', '151.235'], ['-91.12', '1.2333330025'], ['0', '-2'], ['-125.00075', '77'], ['13415,5451', '1'], ['00', '01.03'], [34, 35], ['3,4415', '3,4415'], [-8.298650833465093, -12.0138597047669], [34, 0], ['115.25', '115.25'], ['-84,45', '-2.0'], [-14.727099773983543, -9.876], ['1,45', '-9.1'], ['63371.25', '63371.25'], ['-15,41159', '-2.0'], ['1,545', '-84,45'], [-8.298650833465093, -8.298650833465093], ['414,45', '414,45'], ['11', '21.125'], ['1.5', '1.233'], [-1, 2], ['1,250', '1.2155'], ['111.23', '11.23'], ['1', '15,41'], ['1.25', '1.33003'], ['1.2205', '1.000000001'], ['-91.1215', '-2.0'], ['11.223', '11.23'], ['3415', '3415'], ['-15,4159', '13415,5451'], [11, 2], ['-6.050075', '-6.00075'], ['33', '-9.123'], [1, -4], [-5.75363867961704, -4.9122923154404425], ['-6.050075', '-6.050075'], [38, -50], ['9.1', '-9.1'], ['6337', '-.123'], [-7.915238266264661, -8.22566929632332], ['0', '77'], ['3333', '33'], [-9.084182019357039, -9.084182019357039], ['-2.0044', '-2'], ['13.02125', '13.02125'], ['1.23', '63371.275'], ['15500', '1.5'], ['3415', '1.2'], [-5.649489992448723, -7.959931287366305], ['1.2034155', '1.205'], [-68, 12], ['1.22205', '1.2205'], ['115', '1.225'], ['55', '-2.0044'], ['1,54533', '33'], ['444', '12251'], ['0', '1.5'], ['1.02125', '13.02125'], ['-6.7333', '3333'], ['1.2155', '-6.050075'], ['-6.75', '33'], ['-11159', '-15,41159'], ['1.2', '1,45'], ['-2.0', '-2.0'], ['215150', '2151,2550'], ['1.0205', '1,4'], ['1.125', '11.23'], ['41,4', '3,415'], ['115.255', '115.25'], [-4.51094653769451, -5.4389252401123995], ['41533', '1415.23'], ['1.020000', '1.00000001'], ['414', '41,4'], [-7.654, -9.761009327429885], ['15500', '1515'], ['000', '000'], [3.14, -6.122895581745484], ['3300', '3300'], ['1.0205', '11.1'], ['1.02125', '3,415'], ['01.03', '0'], ['1.5', '3,44115'], ['1.2034155', '1.2034155'], ['1225', '1225'], ['11', '115'], ['1.2333330025', '-91.12'], ['3113', '-2'], ['-6.00075', '77'], ['1.1333000323', '1.1333000323'], [-9.876, -13.001526912961886], ['15500', '67.'], ['12215', '11225'], ['-2.', '-2.000'], ['3,4341515', '3,4341515'], ['13.323', '1.23'], ['5', '16.7'], [-8.74973784205587, -5.75363867961704], ['-9444.12', '1.2205'], ['15,41000', '15,41000'], ['1,45', -50], ['1.2125', '1.2'], [3.712550934925414, -6.06088794991491], [-7.947227268681752, 2.767386384178415], [-98.33564388101799, -9.084182019357039], ['701.037', '77'], ['1.23335', '9.1'], [75, 1], ['1.20', '13.323'], ['0', '1.03'], ['1.123', '-6.7'], ['1.22205', '15,4115'], ['-15,41159', 0], ['-15,41593113', '155'], ['13.323', '-9.123'], [-69.90474800626136, -5.75363867961704], ['1.20', '11'], ['-6.7', '155'], ['12.2155', '1.2155'], ['1.02205', '1225'], ['3,4415', '71.33003'], ['44115', '4415'], ['441,45', '441,45'], ['13415,5451', '13415,5451'], ['1,', 2], [1, '1.'], [100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, 2], [-1.0, '-2,3'], ['5,1', -6], ['1.1', '1.0'], ['1.', 1], ['0.0', 0], [-11.11171337843259, -9.876], ['-23', '-9.123'], ['-2.0', '-2'], [-7.654, '-9.123'], [0, -3], [-11.11171337843259, '-9.123'], [3.14, 3.14], ['-3.023', '-9.123'], ['-26.73', '-9.123'], [3.14, 3.5098365670180556], [-3, 0], ['0', -3], ['1.2', '1.25'], [3.5098365670180556, 3.14], ['1,250', '-3.023'], [1, '1.2'], ['1,45', '1.23'], ['-26.73', '1.00000001'], ['-6.7', '-2'], ['-2', '1.00000001'], ['.2', '1.2'], [-11.11171337843259, -11.11171337843259], [4.452161057484629, -9.876], [4.452161057484629, 4.452161057484629], ['3.0', '3.0'], [-11.931240615627274, '-9.123'], ['-9.123', '-2.03'], ['1,250', '1.00000001'], ['1,250', '11.000000010'], [-9.876, -9.707613442054273], ['-23', '11.000000010'], ['1,250', '11.00000001'], [-5.403249230556667, '.2'], ['-2.0', '-9.123'], ['-3.023', -7.654], ['-2', '-9.123'], ['6.7', '6.7'], [-9.514520957128042, -9.876], [-9.514520957128042, -9.514520957128042], ['23', 0], [1.9155795783061915, 3.14], [11, -2], [-9.876, -8.997546011069746], [-9.876, -9.514520957128042], [-5.403249230556667, -7.654], ['-9.123', '-2.0'], ['0', 11], [-9.514520957128042, -8.997546011069746], ['1.00000001', '-6.7'], ['-21.00000001', '-2'], [-6.410274451315487, '0'], [-9.876, -12.944537034527363], [2.1344375030805596, 2.1344375030805596], ['1,250', '-2.03'], [2.506774567617957, 1.6388390454446027], ['-3.023', '-3.023'], ['23', '1.000000001'], [2.506774567617957, 1.0206072532818764], ['1.000000000', '1.000000001'], [-4.636255829707621, -8.997546011069746], [-6.410274451315487, '3'], ['1.23', '-9.2'], [-7.654, '11.000000010'], ['-2.73', '1.00000001'], [-11.651945761505571, -9.876], [-4.636255829707621, -4.636255829707621], [-4, '0'], ['116.700000001', '1.000000001'], ['1.000000001', '-9.2'], ['116.700000001', '116.700000001'], ['1.000000000', '6.7'], ['-8,9', '6.77'], [-2, 11], [-6.104752540884294, -9.876], ['-8,9', -7.934743523840704], [-9.514520957128042, -6.104752540884294], [-9.05245650953129, -8.997546011069746], [-11.11171337843259, -11.931240615627274], [2.091017020991142, 2.091017020991142], [-5.403249230556667, -5.403249230556667], ['116.700000001', '-9.2'], [-9.686625445264218, '-9.123'], [3.1711504871820364, 3.14], ['116.7000000001', '116.700000001'], [0, '-22'], [-11.651945761505571, -11.651945761505571], ['1,250', '11.0000000100'], [-4.636255829707621, 3.1711504871820364], ['-22', '-22'], ['11.0000000100', '11.0000000100'], ['-9', '-9.123'], [3.14, 2.091017020991142], ['-2.73', '-2.03'], ['-2.03', '-2.03'], [-5.980190696257784, '3'], ['-33.023', '-3.023'], ['6.7', '-2.0'], [3.865653910216933, 4.073918637875315], ['31.2', '33'], ['-2.023', '-2.03'], [-5.980190696257784, -9.514520957128042], [-8.374241519953129, -8.374241519953129], ['23', '-9.123'], [-3, 1.8062716857029506], [3.1711504871820364, 3.1711504871820364], ['-2', '-22'], [-6.104752540884294, 1.6388390454446027], [-5.980190696257784, 2.079441987825791], [3.5119518593157366, 2.506774567617957], [-6.410274451315487, '-2.00'], ['116.7000000001', '-6.7'], [-6.410274451315487, '1.00000001'], ['-8,9', '6.7'], [1, 3.14], [1.8180729788847423, 1.7876030675945356], [-8.906662049468062, -7.654], [-5.980190696257784, -9.804910491929277], [-11.651945761505571, -12.944537034527363], ['-89', '-8,9'], [1.1541131551442234, 2.1344375030805596], [-9.707613442054273, -9.707613442054273], [-8.906662049468062, -11.11171337843259], ['23', '33'], [4.063414424831626, 4.073918637875315], ['31.23', '1.23'], [-11.617559750797245, -9.707613442054273], [-11.651945761505571, -9.05245650953129], [1.8062716857029506, -9.514520957128042], ['-9.123', '-26.73'], ['-2.73', '116.700000001'], [4.063414424831626, -9.755810211622222], [-9.208288330318375, '-9.123'], [0, 49], ['1,5250', '11.00000001'], [-11.651945761505571, 1.1541131551442234], [-7.7849907211524485, -8.997546011069746], ['1.00000001', '11.00000001'], [-9.804910491929277, 2.8877032195044543], ['-29.123', '-21.00000001'], [1.8180729788847423, -9.514520957128042], ['1.000000001', '-29.123'], [3.898938614903911, 3.1711504871820364], [-8.543777712835121, -7.654], ['-2.00', '3.0'], ['-26.73', '11.0000000100'], ['1.2', '-2.00'], [-4.636255829707621, -11.651945761505571], ['1,45', '-21.00000001'], [-11.651945761505571, -18.187100371299287], ['3.0', '116.700000001'], ['116.7000000001', '-9.123'], ['1.000000001', '11.0000000100'], ['-2.03', '11.000000010'], [2, 2], [1.9155795783061915, -11.651945761505571], [4.452161057484629, 2.506774567617957], [1.8180729788847423, 1.8180729788847423], ['3.', '116.700000001'], ['-9.2', '-9.123'], [3.5119518593157366, 4.452161057484629], ['-9.2', '-9.2'], ['116.700000001', '1.0001'], ['.2', '.2'], [2.6874712351441374, -9.514520957128042], ['.2', '-9.123'], [0, 2], [-4.636255829707621, 3.865653910216933], ['.2', '-2.023'], ['-9.1213', '-9.1213'], ['31.2', '-9.2'], [-11.651945761505571, 4.073918637875315], ['3.', '33.'], ['23', -11.11171337843259], [-11.651945761505571, -8.997546011069746], ['-2.023', 11], [-9.686625445264218, -9.686625445264218], [1.7459388376772054, 1.322437089578019], [-7.934743523840704, 2.226295551080672], ['-6.72', '1.00000001'], [2.2929741837650237, 1.322437089578019], [4.063414424831626, 3.14], [4.031158731806144, -9.514520957128042], [-3, 12], [0, 11], ['3.0', '1.2'], ['1123700000001', '116.700000001'], [-2, 1.8062716857029506], [-9.707613442054273, -9.686625445264218], [-4.636255829707621, -15.114554817875211], ['-21.00000001', '-21.00000001'], [1.6388390454446027, 1.6388390454446027], ['-99.2', '-99.2'], [1.8180729788847423, -6.410274451315487], [-11.651945761505571, 0.2002599393512665], ['8,9', '-8,9'], [-9.804910491929277, -9.686625445264218], [-7.187050569843611, 2.1344375030805596], ['31.23', '1.000000001'], [-3, -4], [4.031158731806144, -9.804910491929277], [3.898938614903911, -5.403249230556667], [2.6874712351441374, 2.6874712351441374], [12, 2], ['-9.2', '11.0000000100'], ['1.000000001', '1.0000001'], ['-9.2', '00100'], [1.6412621306995587, 1.6388390454446027], [-18.187100371299287, -6.410274451315487], ['-3.023', '-2'], [1.6388390454446027, -11.931240615627274], ['1123700000001', '3.0'], ['1.0010000001', '1.000000001'], ['111.0000', '11.0000000100'], ['-22', '-26.73'], [3.8141252898018707, 3.7057202433370326], ['-9.123', '-9.1323'], [3.865653910216933, 2.6874712351441374], [-5.980190696257784, -6.631137567433889], ['-2.0', -7.654], [3.5119518593157366, -9.707613442054273], ['-20.03', '11.000000010'], [-4.076712034563361, -9.05245650953129], [1.6388390454446027, 2.8877032195044543], [-6.410274451315487, '00'], [11, 1], ['31.2', '-9.123'], [3.5605751592559205, -9.876], ['00100', '1.23'], [4.063414424831626, -9.208288330318375], [-5.403249230556667, -6.410274451315487], ['1.25', '-9.123'], [-7.934743523840704, -7.934743523840704], [-9.344465870872105, -8.468456444880985], ['1.0010000001', '11.000000010'], [-3, '0'], ['-9.123', '1.000000000'], ['116.700000001', '-9.92'], ['1.001', '-6.7'], ['33.', '116.700000001'], ['-9.', '-9.2'], [-4, -4], ['-9.11223', '-9.11223'], [1.5604055856320835, 1.1541131551442234], [4.073918637875315, 4.452161057484629], [3.7057202433370326, 3.7057202433370326], ['-6.72', '-9.123'], [-3.105257478570193, -4.636255829707621], ['-9', '-93.123'], [-8.468456444880985, 5.408759332706278], ['11.0000000010', '11.0000000010'], ['-20.03', '116.7000000001'], [-13.993306012707142, 3.5119518593157366], [-11.651945761505571, 3.14], [-5.403249230556667, -9.755810211622222], [-20.35575943991219, -8.468456444880985], [2.1344375030805596, 4.452161057484629], [-5.129467798985429, -7.654], ['1.00000001', '-9.123'], [-11.328754454519512, '.2'], [-8.906662049468062, -11.210098728611017], [12, 1], ['-2201', '-212.00000001'], [3.898938614903911, 3.898938614903911], [-9.876, -6.104752540884294], [-9.755810211622222, 3.865653910216933], [-6.104752540884294, 1.4502280067005207], ['.2', '1232'], [3.14, 1.9155795783061915], [3.5605751592559205, -13.304004571051902], [-18.187100371299287, -8.468456444880985], ['1.000000000', '-9.1233'], ['1,5250', '1,5250'], [-5, -4], [-8.056337912443711, -8.997546011069746], ['11.000000010', '11.000000010'], [1.9155795783061915, 1.9155795783061915], ['33', '116.7000000001'], [-11.651945761505571, 0.6862384998319798], [3.14, 1.3891044281947666], ['-26.73', '.2'], [10, 11], [-12.623799923993685, -11.651945761505571], [0, 48], [-11.651945761505571, -11.328754454519512], [1.5604055856320835, 1.5604055856320835], [-9.686625445264218, -9.707613442054273], [-11.05875160279082, -11.651945761505571], [2.1873356443842775, 1.9155795783061915], [-6.484980695659161, -6.642959048484541], ['1,20', '-3.023'], [3.5119518593157366, 1.4502280067005207], [-9.064301674215525, -8.997546011069746], [-13.962701352806974, '-9.123'], [-9.804910491929277, 4.073918637875315], [2.581352134350697, 3.14], [0.8812652369326962, 1.1019679079350322], [-5.436029261483907, -9.876], ['-30.023', '-9.123'], [11, -3], [-7.934743523840704, 1.1541131551442234], [-22.122410199397468, -8.468456444880985], ['-9', '3.0'], [1.910960686555556, 3.865653910216933], [1.5604055856320835, -4.636255829707621], [-5.436029261483907, -5.436029261483907], [-13.056145599512103, 3.5119518593157366], [2.1344375030805596, -13.962701352806974], [-6.887985839769855, -8.906662049468062], ['11.000000001', '1,5250'], [-3, 49], ['1,20', '1,20'], [1.6388390454446027, 2.0493903471747634], ['.2', '-9.92'], [1.7459388376772054, 1.7459388376772054], ['1,250', '-9.1213'], [-11.617559750797245, -9.514520957128042], [1.5604055856320835, 3.865653910216933], [2.226295551080672, 1.4502280067005207], ['-9.1213', '-91.1213'], [2.091017020991142, 2.971135439138305], [-15.114554817875211, -13.962701352806974], ['116.700000001', '1.0010000001'], ['-8,99', '-8,9'], ['00100', '00100'], ['-2.0300', '1232'], ['1.3323', '31.23'], ['-29.123', '116.700000001'], ['-2.0300', '-8,9'], [2.226295551080672, 1.9861619902493355], [3.898938614903911, 4.044626695207136], [-8.056337912443711, -4.636255829707621], ['11237000000011,5250', 1.322437089578019], [-6.887985839769855, -8.976482342288637], [2.581352134350697, -12.38768626074286], [-13.962701352806974, -5.980190696257784], [3.14, 2.7956678864919873], [3, -4], [3.14, 4.488747947339361], [1.3891044281947666, -6.104752540884294], [-63, 10], [4.063414424831626, -11.617559750797245], ['116.7000000001', '1,250'], [2.1964045622059976, 1.8830987968399917], [-3, 2.971135439138305], ['31.23', '-2.023'], [1.8062716857029506, -8.374241519953129], [1.1541131551442234, 1.1541131551442234], [1.4502280067005207, -15.114554817875211], [-5.403249230556667, -13.962701352806974], ['150', '51,250'], ['1.0010000001', '6.7'], [2.226295551080672, 2.226295551080672], [4.419932179709408, 1.322437089578019], [0, 10], [-9.876, 5.408759332706278], [1.784943491672312, 2.0493903471747634], [-11.94746282248088, -11.651945761505571], [1.322437089578019, 1.322437089578019], [2.226295551080672, -7.934743523840704], [-9.804910491929277, 2.757142833975825], [1.6412621306995587, 1.6412621306995587], [2.2669562582463536, 1.8062716857029506], [1.2806826733888153, 2.6845541156529644], [-5.980190696257784, 2.6874712351441374], ['-9.2', '51,250'], [-9.707613442054273, 3.5605751592559205], [-9.514520957128042, 2.1964045622059976], [-14.862049118108715, -12.000815116055994], ['1123700000001', '1123700000001'], ['3', '33.0'], [1.5700165584201082, 1.1541131551442234], [1.1019679079350322, 1.1019679079350322], [-12.944537034527363, -12.944537034527363], ['-2.0', '3.0'], [-9.514520957128042, -9.208288330318375], ['1,250', '1,2550'], [-22.122410199397468, -9.876], [2, 49], [-9.208288330318375, -8.997546011069746], ['-21.00000001', '33.'], [-9.514520957128042, -7.654], [-11.617559750797245, -11.617559750797245], [-5.980190696257784, -15.114554817875211], [1.6412621306995587, -7.654], [-6.104752540884294, 1.9455316441084491], [1.9155795783061915, 3.1711504871820364], [2.1140423577676475, 1.6388390454446027], ['11.00000001', '11.00000001'], [1.8062716857029506, -8.997546011069746], [-7.654, -9.804910491929277]]\n    results = [2, 2.5, 3, 6, '2,3', '6', '2', None, None, None, None, 2.5, None, 5000, None, None, '-4.0', 3, 1, '77.3', 10, -1.0425166390148266, 4999, '773.3', 1, '7.3', 5000, 5000, 4999, '7.3', 10, '7.30', '77.3', 5001, 5001, None, 5001, 2.5, 10, 10, 11, None, -1, None, 10, 4999, None, 5001, 5000, 5000, 2, None, 0, 3, 3, '77.3', 5001, 5001, 2.5, 2, -1, 2, None, 10, 5002, None, 2, 4999, 9, None, 1, -2, '11.0', '7.3', 5000, 5002, 5000, None, '7.3', 5002, 41, None, 5002, None, 1, 2.5, '77.3', 41, 5000, '10.0', 3, None, 5002, 5002, 10, 11, 5000, 1.496091849454374, 4999, '7.33', 2, '7.3', 10, 40, None, '05,000', '77.3', 3.14, '-9.123', -7.654, '1,45', '6.7', None, None, None, '1.00000001', None, '1,45', '15,415', '3', '6.7', '1,45', None, '1,45', '1.25', '6.7', None, '15.25', -7.654, '7', 1, '1.125', '1,45', '41,45', -8.74973784205587, None, '-9.12', '1.25', '15.25', -3, '1.25', None, '3', None, '00', '1.23', None, '3', '6.7', '1,250', '3.0', None, '15,415', None, -2, 3.14, '41,45', None, '-2.0', -7.014581866391794, '1.25', None, '16.7', None, '1,45', '1,45', '1,45', '33', '00', -4.51094653769451, '33.0', '1.23', '1.23', None, '15,415', '6337', None, '0', '63371.25', '1.23', None, '33.0', '1.225', '1.25', '0', '415', -12.774935986016603, '.0', '1.25', None, '1,', None, '2151,250', -1, -7.014581866391794, None, '415', '1.25', None, 34, None, '41,45', '11.23', '1.1', None, '1.2', '33', '1.23', '63371.25', '115.25', '1,45', '1,45', 34, None, '333', 3.14, '-2.000', '1.1', None, '16.7', '1.03', '3.0', '415', '33', '330003', -6.4514534689514935, '63371.25', '1.2', '11', '00', '000', 11, None, '41,45', '63371.25', '115.25', '4,45', '16.7', -7.014581866391794, '1.205', '1.20000', None, '41,45', 34, '33', '15', '1.323', -7.014581866391794, '6337', 34, '16.7', None, -8.298650833465093, '333', None, None, 35, '21.25', '5', 34, None, None, '415', '3113', '3', '6.7', '63371.25', '21.20', '63371.25', -5.75363867961704, '11', '13.323', '11', 12, -7.654, 84, -1, '13.323', '15.25', '145', 35, '-2.000', '3300', '3,415', '3415', '21.25', None, 2.767386384178415, '000', None, '5', 2.767386384178415, '41,45', '-6.00075', -8.900537956858544, '1.11', '7', 84, '15,4115', '1.33000323', '21.25', None, '63371.25', -5.75363867961704, '6337', '11.1', 3.712550934925414, '1.25', None, '6.7', -4.5668177959472835, None, 70, '125', '15,41', '1.00000001', '115.25', '11.23', -7.654, '1.125', '6.7', None, 11, '41,4', 70, None, 11, None, '44', '41,45', '151,411115', '3415', '1.23', '1.215', None, '1.23', '1225', None, '1415.23', '15,41', '13.02125', None, '77', -3, '11', '115.25', -7.654, -7.654, '000', '1415.23', '115.25', 1, '3.0', '41,45', '3415', '1.03', '-8,9', 3.14, '1.11', None, None, '15,4115', 2.8215418518706716, '13.02125', '41,4', -10.397627547678898, '11.23', '7', '1.20000', 33, None, 34, '1225', '1.25', 4.569736337135209, None, '145', '000', 35, None, '155', 36, '000', '151,411115', '63371.25', -7.014581866391794, '3333300', -8.648925493228285, '00', '0', '415', None, '1', -5.75363867961704, None, '3,415', -8.226976895748662, '1.205', '115.25', -6.4514534689514935, None, 38, '15500', 4.569736337135209, '11.23', '16.77', '77', '12257', None, '63371.25', '11.125', '55', '03415', '1,5', '1,45', None, '11', '.0', -8.648925493228285, '2151,250', '12251', '-9.12', '41.22515', '1.2155', '33.0', '1.233', '1.0000', '41,455', '415', '1.125', '4,45', None, '63371.25', -4.5668177959472835, '3333', '3333', 84, '41,45', 84, '41,4', '-9.12', '151.25', '12257', '1,45', '155', -2, -4.51094653769451, '6337', '12215', '16.77', '1.02205', 75, None, '155', -7.014581866391794, '1,5', 84, '3333300', '444', '1.2205', -7.915238266264661, '15500', '777', '3300', None, '03415', -7.654, '0011', '1.5', 34, '111', -7.014581866391794, -69.38740384414959, '151.25', '-9.12', None, '11.23', -5.649489992448723, 0, '1.000000001', None, '1.25', '0', '55', '3113', '1.2333330025', '0', '77', '13415,5451', '01.03', 35, None, -8.298650833465093, 34, None, '-2.0', -9.876, '1,45', None, '-2.0', '1,545', None, None, '21.125', '1.5', 2, '1,250', '111.23', '15,41', '1.33003', '1.2205', '-2.0', '11.23', None, '13415,5451', 11, '-6.00075', '33', 1, -4.9122923154404425, None, 38, '9.1', '6337', -7.915238266264661, '77', '3333', None, '-2', None, '63371.275', '15500', '3415', -5.649489992448723, '1.205', 12, '1.22205', '115', '55', '33', '12251', '1.5', '13.02125', '3333', '1.2155', '33', '-15,41159', '1,45', None, '215150', '1,4', '11.23', '41,4', '115.255', -4.51094653769451, '41533', '1.020000', '414', -7.654, '15500', None, 3.14, None, '11.1', '3,415', '01.03', '3,44115', None, None, '115', '1.2333330025', '3113', '77', None, -9.876, '15500', '12215', None, None, '13.323', '16.7', -5.75363867961704, '1.2205', None, '1,45', '1.2125', 3.712550934925414, 2.767386384178415, -9.084182019357039, '701.037', '9.1', 75, '13.323', '1.03', '1.123', '15,4115', 0, '155', '13.323', -5.75363867961704, '11', '155', '12.2155', '1225', '71.33003', '44115', None, None, 2, None, 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, -1.0, '5,1', '1.1', None, None, -9.876, '-9.123', None, -7.654, 0, '-9.123', None, '-3.023', '-9.123', 3.5098365670180556, 0, '0', '1.25', 3.5098365670180556, '1,250', '1.2', '1,45', '1.00000001', '-2', '1.00000001', '1.2', None, 4.452161057484629, None, None, '-9.123', '-2.03', '1,250', '11.000000010', -9.707613442054273, '11.000000010', '11.00000001', '.2', '-2.0', '-3.023', '-2', None, -9.514520957128042, None, '23', 3.14, 11, -8.997546011069746, -9.514520957128042, -5.403249230556667, '-2.0', 11, -8.997546011069746, '1.00000001', '-2', '0', -9.876, None, '1,250', 2.506774567617957, None, '23', 2.506774567617957, '1.000000001', -4.636255829707621, '3', '1.23', '11.000000010', '1.00000001', -9.876, None, '0', '116.700000001', '1.000000001', None, '6.7', '6.77', 11, -6.104752540884294, -7.934743523840704, -6.104752540884294, -8.997546011069746, -11.11171337843259, None, None, '116.700000001', '-9.123', 3.1711504871820364, '116.700000001', 0, None, '11.0000000100', 3.1711504871820364, None, None, '-9', 3.14, '-2.03', None, '3', '-3.023', '6.7', 4.073918637875315, '33', '-2.023', -5.980190696257784, None, '23', 1.8062716857029506, None, '-2', 1.6388390454446027, 2.079441987825791, 3.5119518593157366, '-2.00', '116.7000000001', '1.00000001', '6.7', 3.14, 1.8180729788847423, -7.654, -5.980190696257784, -11.651945761505571, '-8,9', 2.1344375030805596, None, -8.906662049468062, '33', 4.073918637875315, '31.23', -9.707613442054273, -9.05245650953129, 1.8062716857029506, '-9.123', '116.700000001', 4.063414424831626, '-9.123', 49, '11.00000001', 1.1541131551442234, -7.7849907211524485, '11.00000001', 2.8877032195044543, '-21.00000001', 1.8180729788847423, '1.000000001', 3.898938614903911, -7.654, '3.0', '11.0000000100', '1.2', -4.636255829707621, '1,45', -11.651945761505571, '116.700000001', '116.7000000001', '11.0000000100', '11.000000010', None, 1.9155795783061915, 4.452161057484629, None, '116.700000001', '-9.123', 4.452161057484629, None, '116.700000001', None, 2.6874712351441374, '.2', 2, 3.865653910216933, '.2', None, '31.2', 4.073918637875315, '33.', '23', -8.997546011069746, 11, None, 1.7459388376772054, 2.226295551080672, '1.00000001', 2.2929741837650237, 4.063414424831626, 4.031158731806144, 12, 11, '3.0', '1123700000001', 1.8062716857029506, -9.686625445264218, -4.636255829707621, None, None, None, 1.8180729788847423, 0.2002599393512665, '8,9', -9.686625445264218, 2.1344375030805596, '31.23', -3, 4.031158731806144, 3.898938614903911, None, 12, '11.0000000100', '1.0000001', '00100', 1.6412621306995587, -6.410274451315487, '-2', 1.6388390454446027, '1123700000001', '1.0010000001', '111.0000', '-22', 3.8141252898018707, '-9.123', 3.865653910216933, -5.980190696257784, '-2.0', 3.5119518593157366, '11.000000010', -4.076712034563361, 2.8877032195044543, '00', 11, '31.2', 3.5605751592559205, '00100', 4.063414424831626, -5.403249230556667, '1.25', None, -8.468456444880985, '11.000000010', '0', '1.000000000', '116.700000001', '1.001', '116.700000001', '-9.', None, None, 1.5604055856320835, 4.452161057484629, None, '-6.72', -3.105257478570193, '-9', 5.408759332706278, None, '116.7000000001', 3.5119518593157366, 3.14, -5.403249230556667, -8.468456444880985, 4.452161057484629, -5.129467798985429, '1.00000001', '.2', -8.906662049468062, 12, '-212.00000001', None, -6.104752540884294, 3.865653910216933, 1.4502280067005207, '1232', 3.14, 3.5605751592559205, -8.468456444880985, '1.000000000', None, -4, -8.056337912443711, None, None, '116.7000000001', 0.6862384998319798, 3.14, '.2', 11, -11.651945761505571, 48, -11.328754454519512, None, -9.686625445264218, -11.05875160279082, 2.1873356443842775, -6.484980695659161, '1,20', 3.5119518593157366, -8.997546011069746, '-9.123', 4.073918637875315, 3.14, 1.1019679079350322, -5.436029261483907, '-9.123', 11, 1.1541131551442234, -8.468456444880985, '3.0', 3.865653910216933, 1.5604055856320835, None, 3.5119518593157366, 2.1344375030805596, -6.887985839769855, '11.000000001', 49, None, 2.0493903471747634, '.2', None, '1,250', -9.514520957128042, 3.865653910216933, 2.226295551080672, '-9.1213', 2.971135439138305, -13.962701352806974, '116.700000001', '-8,9', None, '1232', '31.23', '116.700000001', '-2.0300', 2.226295551080672, 4.044626695207136, -4.636255829707621, '11237000000011,5250', -6.887985839769855, 2.581352134350697, -5.980190696257784, 3.14, 3, 4.488747947339361, 1.3891044281947666, 10, 4.063414424831626, '116.7000000001', 2.1964045622059976, 2.971135439138305, '31.23', 1.8062716857029506, None, 1.4502280067005207, -5.403249230556667, '150', '6.7', None, 4.419932179709408, 10, 5.408759332706278, 2.0493903471747634, -11.651945761505571, None, 2.226295551080672, 2.757142833975825, None, 2.2669562582463536, 2.6845541156529644, 2.6874712351441374, '51,250', 3.5605751592559205, 2.1964045622059976, -12.000815116055994, None, '33.0', 1.5700165584201082, None, None, '3.0', -9.208288330318375, '1,2550', -9.876, 49, -8.997546011069746, '33.', -7.654, None, -5.980190696257784, 1.6412621306995587, 1.9455316441084491, 3.1711504871820364, 2.1140423577676475, None, 1.8062716857029506, -7.654]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/138", "prompt": "\ndef is_equal_to_sum_even(n):\n    \n\n    return n >= 8 and n % 2 == 0\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef is_equal_to_sum_even(n):\n    \n\n    return n >= 8 and n % 2 == 0\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef is_equal_to_sum_even(n):\n    \n\n    return n >= 8 and n % 2 == 0\n\n", "raw_modification": "```python\n<code_start>\ndef is_equal_to_sum_even(n):\n    # Introduce unnecessary variables and operations\n    check1 = n >= 8\n    check2 = n % 2 == 0\n    result = False\n    \n    # Use redundant if-else structure\n    if check1:\n        if check2:\n            result = True\n        else:\n            result = False\n    else:\n        if check2:\n            result = False\n        else:\n            result = False\n    \n    # Introduce unnecessary loops\n    for _ in range(1):\n        for _ in range(1):\n            final_result = result\n    \n    # Use redundant operations\n    final_result = final_result or False\n    final_result = final_result and True\n    \n    return final_result\n<code_end>\n```", "modification": "\ndef is_equal_to_sum_even(n):\n    \n    check1 = n >= 8\n    check2 = n % 2 == 0\n    result = False\n    \n    \n    if check1:\n        if check2:\n            result = True\n        else:\n            result = False\n    else:\n        if check2:\n            result = False\n        else:\n            result = False\n    \n    \n    for _ in range(1):\n        for _ in range(1):\n            final_result = result\n    \n    \n    final_result = final_result or False\n    final_result = final_result and True\n    \n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[4], [6], [8], [10], [11], [12], [13], [16], [20], [22], [24], [30], [36], [40], [42], [48], [50], [28], [41], [21], [39], [23], [25], [35], [19], [49], [51], [52], [47], [37], [34], [-79], [29], [53], [57], [56], [-2], [0], [2], [5], [9], [15], [27], [100], [105], [-3], [76], [101], [98], [3], [97], [7], [1], [99], [-50], [102], [-71], [-1], [-72], [-27], [104], [96], [-26], [-39], [-55], [-29], [-66], [14], [-42], [77], [-38], [-30], [-25], [-34], [78], [103], [-65], [-49], [-18], [-7], [75], [-37], [-73], [-51], [106], [64], [-52], [-8], [-6], [-10], [107], [26], [18], [108], [109], [17], [110], [31], [-98], [-87], [-5], [-40], [-88], [-4], [55], [-86], [32], [54], [-68], [-90], [-91], [-78], [-80]]\n    results = [False, False, True, True, False, True, False, True, True, True, True, True, True, True, True, True, True, True, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, True, False, True, False, False, False, False, False, False, True, False, False, False, False, True, True, False, False, False, False, False, True, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, True, True, True, False, False, True, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/140", "prompt": "\ndef fix_spaces(text):\n    \n\n    ans = text\n    for i in range(len(text), 2, -1):\n        ans = ans.replace(\" \" * i, \"-\")\n    return ans.replace(\" \", \"_\")\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef fix_spaces(text):\n    \n\n    ans = text\n    for i in range(len(text), 2, -1):\n        ans = ans.replace(\" \" * i, \"-\")\n    return ans.replace(\" \", \"_\")\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef fix_spaces(text):\n    \n\n    ans = text\n    for i in range(len(text), 2, -1):\n        ans = ans.replace(\" \" * i, \"-\")\n    return ans.replace(\" \", \"_\")\n\n", "raw_modification": "```python\n<code_start>\ndef fix_spaces(text):\n    ans = text\n    \n    # Introduce unnecessary variable assignments\n    temp = ans\n    temp = text\n    \n    # Add redundant loop to increase complexity\n    for _ in range(1):\n        for i in range(len(text), 2, -1):\n            # Introduce redundant condition check\n            if i > 2:\n                ans = ans.replace(\" \" * i, \"-\")\n    \n    # Add unnecessary slicing and concatenation\n    ans = ans[:]\n    \n    # Add redundant operations\n    ans = ans + \"\"\n    ans = ans.replace(\"\", \"\")\n    \n    # Introduce a redundant loop\n    for _ in range(1):\n        ans = ans.replace(\" \", \"_\")\n    \n    return ans\n<code_end>\n```", "modification": "\ndef fix_spaces(text):\n    ans = text\n    \n    \n    temp = ans\n    temp = text\n    \n    \n    for _ in range(1):\n        for i in range(len(text), 2, -1):\n            \n            if i > 2:\n                ans = ans.replace(\" \" * i, \"-\")\n    \n    \n    ans = ans[:]\n    \n    \n    ans = ans + \"\"\n    ans = ans.replace(\"\", \"\")\n    \n    \n    for _ in range(1):\n        ans = ans.replace(\" \", \"_\")\n    \n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['Example'], ['Mudasir Hanif '], ['Yellow Yellow  Dirty  Fellow'], ['Exa   mple'], ['   Exa 1 2 2 mple'], ['Hello,   world!'], ['happy 123'], ['Hey    there!'], ['  spaces  every  where  '], ['NoSpacesHere'], ['This is  a  test'], ['Testing     1  2   3'], ['Hello World'], ['Hello   World'], ['   Hello World'], ['This is  a  tesst'], ['This is  a  tes'], ['This is  a This is  a  tes test'], ['Hello r  World'], ['This is  a Hello r  World tsesst'], ['This is  a This is  a  tes test  spaceNoSpacesHere '], ['Thish is  a  tesst'], ['HelloNoSpacesHere,   world!'], ['Hey   e there!'], ['  spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHere is  a  tes testry  where  '], ['happy 123  spaces  every  where  '], ['  spaces  eveThis is  a This  This is  a This ishappy 123  a  tes test  spaceNoSpacesHere is  a  tes testry  where  '], ['Hello r  Word'], ['This is  a sst'], ['  spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHello r  WorldHere is  a  tes testry  where  '], ['  spaces  eveery  where  '], ['happy1233'], ['  spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHeNoSpacesHerello r  WorldHere is  a  tes testry  where  '], ['happy 123 p spaces  every  where  '], ['  spaces  eveThis is  a This This is  a This is  tes testry  where  '], ['Thish isThis is  a Hello r  World tsTesting     1  2   3 a  This is  a ssttesst'], ['Helleo World'], ['happyw 123 p spacees  every  where  '], ['Thish is  a  tesHey    there!st'], ['happyw 123 p spacees  This is  a sstevery  wher  '], ['  spaces  every  w here  '], ['Th is is  a This is  a  tes test'], ['This is   a This is  a  tes test  spacoeNoSpacesHere '], ['  spaces  eveThis is  a This  This is  a This is happy 123  a  tes test  spaceNoSpacesHere is  a  tes testry  where  '], ['Thihappyw 123 p spacees  This is  a sstevery  wher  s is  a Hello r  Woreld tsesst'], ['  spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHtry  where  '], ['happThis is  a  tessty'], ['This is  a T  spaces  eveThisTh is is  a This is  a  tes test is  a This  This is  a This ishappy 123  a  tes test  spaceNoSpacesHere is  a  tes testry  where  his is  a  tes test'], ['This is Thish is  a  tesHey    there!st a This is  a  tes test  spaceNoSpacesHere '], ['Thish is  asst'], ['  spaces  everThis is  a This is  a  tes testy  where  '], ['This is  This is  a T  spaces  eveThisTh is is  a This is  a  tes test is  a This  This is  a This ishappy 123  a  tes test  spaceNoSpacesHere is  a  tes testry  where  his is  a  tes testa  tes'], ['  spaces  eveThis tis  a This This is  a This is  a  tes test  spaceNoSpacesHere is  a  tes testry  where  '], ['  spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHello r   WorldHere is  a  tes testry  where  '], [' happyw 123 p spacees  every  where  '], ['happyw 123 p spacees  This is  a sstevery  whser  '], ['  spaces  eveThis is  a This This is  a This is  a This is  a  tes test  spaceNoSpacesHere This is  tes testry  where  '], ['haappy1233'], ['Testing   Hey   e there!  1  2   3'], ['Hello r   spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHello r   WorldHere is  a  tes testry  where   Word'], ['Testing   s  1  2   3'], ['Th is is  a This is  a  tes teHello,   world!st'], [''], ['ThThis is  a Hello r  World tsesstis is  a sst'], ['This is  This is  a T  spaces  eveThisThh is is  a This is  a  tes test is  a This  This is  a This ishappy 123  a  tes test  spaceNoSpacesHere is  a  tes testry  where  his is  a  tes testa  tes'], ['This is  sst'], ['NoSere'], ['ThTthis is  a Hello r  World tsesstis is  a sst'], ['This is  a This is  a  tes test  spaceNioSpacesHere '], ['This iis  a sst'], ['Thihappyw 123 p spacees  Thi s is  a sstevery  wher  s is  a Hello r  Woreld tsesst'], ['This is  a This istest'], ['Helleo Worldhappyw 123 p spacThis iis  a sstees  every  where  '], ['Hello r  Worlld'], ['Testing This is  a sst  e there!  1  2   3'], ['ere!st'], ['This is  a This is  a  t  spaces  eveThis is  a This This is  a This is  a This is  a  tes test  spaceNoSpacesHere This is  tes testry  where  est'], ['Hhappy 123 p spaces  every  where  ello r  Word'], ['He  spaces  eveThis is  a This This is  a This is  a This is  a  tes test  spaceNoSpacesHere This is  tes testry  where  llo,   wod!'], ['rCMrcvK'], ['This sis  a  tes'], ['  spaces  eveThis is  a This This is  a This is  a This is  a  tes test  spaceNoSpacesHere This is  tes testr  where  '], ['  spaThis  This is  a This ishappy 123  a  tes test  spaceNoSpacesHere is  a  tes testry  where  '], ['Th is is  a This is  aHey   e there!  tes test'], ['Thish Helleo Worldhappyw 123 p spacThis iis  a sstees  every  where  is  a  tesHey    there!st'], ['Hello r   spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHellThish isThis is  a Hello r  World tsTesting     1  2   3 a  This is  a ssttessto r   WorldHere is  a  tes testry  where   Word'], ['Th is is  a This is  a  tes teTHello,   world!st'], ['ThTthis sis  a Hello r '], ['Thihappyw 123 p  spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHtry  where   spacees  This is  a sstevery  wher  s is  a Hello r  Woreld tsesst'], ['  spaces  everThis is  a This is  a  tes tThish Helleo Worldhappyw 123 p spacThis iis  a sstees  every  where  is  a  tesHey    there!stesty where  '], ['NoSer'], ['Thish Helleo Worldhappyw 123 p spacThis iis  a sstees  every  where  ishappy 123 p spaces  every  where    a  tesHey    there!st'], ['Hello rr  Word'], ['Hello r   spaces  eveThis is  a This This iThis is  Hey   e there!a This is  a  tes tests  a This is  a  tes test  spaceNoSpacesHellThish isThis is  a Hello r  World tsTesting     1  2   3 a  This is  a ssttessto r   WorldHere is  a  tes testry  where   Word'], ['HeThis is  a This istestlWlo World'], ['NoS'], ['Testing   Hey   e there!  1  2 This is  a This is  a  tes test  spaceNoSpacesHere   3'], ['  spaces  eveThis is  a This This is  a This is  a This is  a  tes test  spaceNoSpacesHere This is  tes testry  where '], ['NSooSerre'], ['Hello r   spaces  eveThis is  a This This iThis is  Hey   e there!a This is  a  tes tests  a This is  a  tes test  spaceNoSpacesHellThish isThis is  a Hello r  World happy 12Testing   s  1  2   33  spaces  every  where  tsTesting     1  2   3 a  This is  a ssttessto r   WorldHere is  a  tes testry  where   Word'], ['This is  This is  a T  spaces  eveThisTh is is  a This is  a  tes test is  a This  This is  a This ishappy 123  a  tes test  spaceNoSpacesHere is  a  tesHello r   spaces  eveThis is  a This This iThis is  Hey   e there!a This is  a  tes tests  a This is  a  tes test  spaceNoSpacesHellThish isThis is  a Hello r  World tsTesting     1  2   3 a  This is  a ssttessto r   WorldHere is  a  tes testry  where   Word testry  where  his is  a  tes testa  tes'], ['Helo r  Worlld'], [' happyw 123 p spacees  every  whhere  '], ['HTh is is  a This is  a  tehappy 123  spaces  everyHello r   spaces  eveThis is  a This This is  a This is  a  tes test  spaceNoSpacesHello r   WorldHere is  a  tes testry  where   Wordo,   world!stey   !'], ['Thish isThis is  a Hello r  World tsTesting 3 a  This is  a ssttesst'], ['   Exa 1 2 2\\nmple\\tExample   3'], ['   A-B-*_--C   '], ['---a-a-a---b-b-b-c-c-c---'], ['Big gaps    between words    in this sentence'], ['          '], ['    '], ['         '], ['Exa 1 2 2 mple'], ['Example  1'], ['    Example   2'], ['    Example   2    Example   2'], ['  E  Example   2'], ['this'], ['----a-a-a---b-b-b-c-c-c---'], ['     '], ['his'], ['words'], ['ExampleEthisxa3e  1'], ['Exx1'], ['  his   '], ['gaps'], ['ggaps'], ['ggga'], ['  his    '], ['   Ex     2\\nmple\\tExample   3'], ['---a-a-a---b-b-b-c-c-c---     '], ['Example    Example   2    Example   2  1'], ['A-B-*_--C'], ['EEx'], ['Exa'], ['   A-B-*_-E-C   Ex     2\\nmple\\tExample   3'], ['---a-ac-c---      '], ['ExampleEthisxa3e'], ['  his     '], ['2'], ['in'], ['  E  Egapsxample   2'], ['  ExampleE  Expample   2'], ['   Exa 1 2 Exa2\\nmple\\tExample   3'], ['  E  Ega psxample   2---sa-ac-c---'], ['ExampleeEthisxa3e'], ['zPb'], ['ExampleEt  E  Ega psxample   2---sa-ac-c---hisxa3e'], ['hsis'], ['  E  Example  2'], ['   A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3'], ['EExample  1Ex'], ['  his    EExample'], ['psxample'], ['ExampleEthitsxa3e'], ['1'], ['----a-aa-a---b-b-b-c-c-c---'], ['---a--a-a---b-b-b-c-c-c---'], ['hsExampleEthisxa3es'], ['Expample'], ['his  ExampleE  Expample   2'], ['sentence'], ['Exa2'], ['   Exa 1 2 2\\nmple\\tExample   2---sa-ac-c---'], ['   Exa 1 2 Exa2\\nmple\\tEx3'], ['   '], ['   Exa 1 2 2\\nmple\\tExample 3'], ['ExampleEtEhisxa3e  1'], ['    E  Ega psxample   2---sa-ac-c--- A-B-*_-E-C   Ex     2\\nmple\\tExample   3'], ['hsE2xampleEthisxa3es'], ['Example    Example   2    Examle   2  1'], ['  hExampleEthitssxa3eis    EExample'], ['          EEx'], ['thits'], ['----a-a-a---b-b-b-c-c-c---ExampleEtEhisxa3e'], ['---a-ac-c---'], ['      psxample EEx'], ['E'], ['    his    A-B-*_--C   '], ['TnYIFZqaAz'], ['between'], ['zEx3Pbb'], ['gs'], ['      '], ['---a--a-a---b-b-b-c-c--c---'], ['   Ex     2\\nmple\\tExample   3i'], ['   Exa mpleample   3'], ['  hismpleample     '], ['thitts'], ['ExampleEt  E  Ega psxample   2---sa-ac-c---h-isxa3e'], ['  '], ['  his  hismpleample '], ['---a--a-a---b-b-b--c-c-c---'], ['word'], ['thi  E   Exa 1 2 2\\nmple\\tExample 3  2'], ['---a-ac-   A-B-*_-E-C   Ex     2\\nmple\\tExample   3c---'], ['Exampl   eEthishiExamlesxa3e  1'], [' Exx1   '], ['ggap'], ['  hExampleEthitssxa3eis    EExampple'], ['E  x3'], ['  his  h  hismpleample     ismpleample '], ['R'], ['   Ex     2\\nmple\\tExample   ExampleEi'], ['ExampleEtEhisxa3e  1gggaps'], ['hsExmampleEthisxa3es'], ['ExaxmpleEthitsxa3e'], ['   Exa 1ExampleEtEhisxe  1gggaps   3'], ['gss'], ['           '], ['hhis'], ['gggga'], ['Exampl'], ['ExampleEtExampl   eEthishiExamlesxa3e  1'], ['    his    A-B-*           _--C   '], ['ExampleEtExampl'], ['hhi---a-a-a---b-b-b-c-c-c---s'], ['---a--a-a---b-b-b-c-c--'], ['Big gaps    between words    i2---sa-ac-c---n this sentence'], ['Exam    Example   2pleEtEhisxa3e  1'], ['2---sa-ac-c---'], ['11'], ['dwords'], ['betweeExampleEthisxa3e  1n'], ['hhi---a-a-a---  E  Ega psxample   2---sa-ac-c---b-b-b-c-c-c---s'], ['E  E2---sa-ac-c---b-b-b-c-c-c---sx'], ['hhi-    his    A-B-*           _--C   --a-a-a---'], ['hsExampthitsleEthisxa3es'], ['ismpleample'], ['hhi---a-a-a---'], ['hsExampleEtheisxa3es'], ['   Exa mp  leample   3'], ['ExampleEt  E  Ega psxample   2---sa-ac-c---h-isx'], ['EleEatEhisxa3e  1'], ['  hs'], ['---a--a-a---b-      psxample EExb-b-c-c--'], ['s'], ['ExExamplampleEthisxa3e'], ['   his  h  hismpleample     ismpleample '], ['---a-ac-ca---'], ['  hExa  hsmpleEthitssxa3eis    EExample'], ['A-B-*_  hExampleEthitssxa3eis    EExampple-E-C'], ['ExExamplampleEt  E  Example   2hisxggggaa3e'], ['---a-a-a----c---     '], ['Exampitsxa3e'], ['----a-a-a---b-hsmpleEthitssxa3eisb-b-c-c-c---'], ['thtis'], ['---a-ac-c-thitts-'], ['hihis'], ['---a-a  ExampleE  Expample   2  3c---'], ['wo'], ['Exaword'], ['thhisis'], ['hhi-'], ['    his     A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3thitssxa3eis    EExample-C   '], ['zPPb'], ['EExampple-E-C'], ['E  c-c-c---sx'], ['i2---sa-ac-c---n'], ['    his   Exx1   --C   '], ['ExampleEtEhisxa3e'], ['hhi---a-a-a---c-c---s'], ['Exmpl'], ['3'], ['Rhsis'], ['sjRboRkSy'], ['2---sa-ac-c---h-isx'], ['mples'], ['Exa3c---leEtEhisxa3e'], ['hsE    his   Exx1   --C   xmampleEthisxa3es'], ['i2---sa-a-c-c---n'], ['   Exa 1 2 Exa2\\nmpl'], ['thi'], ['hsExampleExthisxa3es'], ['hh'], ['hhhis'], ['hsE    his   Exx1   --C   xmampleEthis   Exa mp  leample   3xa3es'], ['EExample-C'], ['2  2   '], ['2---sa-ac-c---h-isxa3e'], ['3xa3es'], ['his  ExampleE  E3thitssxa3eisxpample   2'], ['Exam'], ['---a-ac-   A-B-*m_-E-C   Ex     2\\nmple\\tExample   3c---'], ['2----sa-ac-c---'], ['thhiss'], ['wodhhi-s'], ['FoFlZTDagW'], ['   Exa 1 2 2\\nmple\\tExBig gaps    between words    i2---sa-ac-c---n this sentenceample 3'], ['ExampleEtExpampl'], ['   Exa 1 2 2\\nmple\\tExa---a-ac-mple 3'], ['   Exa mp  leample   3Example  1'], ['Exa---a-ac-mple'], ['sgs'], ['---a-thits-a-a---b-b-'], ['xmampleEthisxa3es2  ExaxmpleEthitsxa3e3c---'], ['his  ExampleE     2'], ['  ---a-ac-c---       Example   2'], ['3c---'], ['ggagp'], ['EFoFlZTDagWE'], ['hs'], [' p ExaxmpleE  Expample   2'], ['111'], ['ggagExampleEtEhisexa3gep'], ['   Exal mp  leample   3'], ['gapshhi---a-a-a---  E  Ega psxample   2---sa-ac-c---b-b-b-c-c-c---s'], ['ga Exx1   s'], ['---a-a-a----c---'], ['wwo'], ['   Exa 1ExampleEtEhmisxe  ggaps   3'], ['A-B-*'], ['    Example   2    Example words  2'], [' Ex3  Ex     2\\nmple\\tExample   3i'], ['thhi'], ['iin'], ['--a-a-a---'], ['his  ExapmpleE  E3thitssxa3eisxpample   2'], ['---a-ac-c-a---'], ['jgOtGgdMm'], ['ExampleEt  E  Ega pshhi---a-a-a---b-b-b-c-c-c---sxample   2---sa-ac-c--11-h-isx'], ['1gggaps'], ['-E  c-c-c---sxxample EExb-b-c-c--'], ['hhi-hhh'], ['   Exa 1gaps   3'], ['hsExampleExthi  hssxa3es'], ['----a--a-a---b-b-b-c-c--c---'], [' p Exax  Expample   2'], ['ExExameplampleEthisxa3e'], ['thi  E   Exa 1 2 2\\nmple\\tExampExampleEtle 3  2'], ['hsmpleeEthishiExamlesxa3eEthitssxa3eis'], ['---a-a-aExampleEt  E -c---hisxa3e--c---'], ['  hExampxleEtEhisxa3e  1ile'], ['EleEatEhisxa3e'], ['ExampleEi'], ['wo_--C'], ['Exampl   eEthish iExamlesxa3e  1'], ['c-c-c---sxxample'], ['   Exple   3'], ['  his '], ['   hi s  h  hismpleample     ismpleample '], ['gapshhi---a-a-a---  E  Ega psxample   2---sa-ac-c----b-b-b-c-c-c---s'], ['  E  Ega psxa   Ex     2\\nmple\\tExample   3mple   2---sa-ac-c---'], ['A-B-*_'], ['     his   Exx1   --C       '], ['sentenceample'], ['ggs'], ['    Example   2    Example   2   Exa 1ExampleEtEhisxe  1gggaps   3'], ['c-c-c----sx'], ['hsmpleEthitssxa3eis'], ['  his  hi2hisxggggaa3e '], ['----a-ac-c-thitts-'], ['2   2   '], ['Ex3ampleEtEhisxa3e  1'], ['his  Exam   A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3pleE  mE3thitssxa3eisxpample   2'], ['   Ex     2\\nmple---a-a-a----c---\\tExample  eEi'], ['   Exa 1 2 2\\nmple\\tExBig gaps    between words    i2---sa-ac-c---n this sentenceeample 3'], ['-E'], ['---a--a-a---b-b-Example  1-c--c---'], ['  E  Ega psxample   2---sa-ac-c-  E  Example   2--'], [' Exx   Ex     2\\nmple\\tExamhhple   3i1   '], ['hsExampleExthi  hssxA-B-*_--Ca3es'], ['    his    A-B-*          3i1 _--C   '], ['E2---sa-ac-c---b-b-b-c-c-c---sx'], ['  E 2 Example   2'], ['A-B*--*_--C'], ['gapshhi---a-a-a---'], ['thi  E   Exa 1 2 2\\nmple\\tExampExamplE  c-c-c---sxeEtle 3  2'], ['cc-cggs-c---sxxcample'], ['hhi---a-a-a---b-b-b--c-c-c---s'], ['sggs'], ['  EExb-b-c-c--  Example   2'], ['ss'], ['   Eexa 1 2 2\\nmple\\tExample 3'], ['gapshhi---a-2---sa-ac-c---hisxa3e---'], ['mple---a-a-a----c---'], ['xmampleEthisxa3es'], ['ggss'], ['E E x3'], ['sjRboRkS'], ['  his   hi2hisxgEleEatEhisxa3egggaa3e '], ['EEE'], ['ExampleEtExampl   eEthishiExamlesxa3e  e1'], ['hhh'], ['   his     '], ['22--'], ['   3'], ['---a--a-a---b-b-b-c-bismpleample'], ['c-c-c---sxxamplthi  E   Exa 1 2 2\\nmple\\tExampExampleEtle 3  2e'], ['   A-B-*_-E-C   Ex     2\\nmple\\tExamp1gggapsle  m 3'], ['Examle'], ['    Example   2    Example words  22'], ['tshitts'], ['2---sssa-ac-c---h-isxa3e'], ['his  ExExampl   eEthishiExamlesxa3e  1ampleE  Expample   2'], ['Examhhple'], ['hsE'], ['hisExampBig gaps    between words    in this sentenceleEthisxa3es'], ['ExampleEtEhisx'], ['senteExamplnce'], [' p ExaxmpleE  Expample a  2'], ['dwoc-c-c---sxeEtlerds'], ['Exal'], ['hsmpleeEthishiExame1lesxa3eEthitssxa3eis'], ['E sc-c-c---sx'], ['worrd'], ['Exam    Example   2pleEA-B-*_-E-CtEhisxa3e  1'], ['Eexa'], ['betweeExasxa3e  1n'], ['sss'], ['ExampleEtEhis3xa3e'], ['   A-B-*_-E-C   Ex     2\\nmple\\tExampsenteExamplnce1gggapsle  m 3'], ['2---sa-ac-c-Exax--'], ['Eampl'], ['IclExampleEthisxa3e  1'], ['---a--a-a---b-b--Example  1-c--c---'], ['bet3e  1n'], ['---a-a--a----c---'], ['hsExampleExthi ExampleEi hssxA-B-*_--Ca3es'], ['EExx'], ['IclExample'], ['fwlMxhGm'], [' sentenceleEthisxa3esc-c---'], ['hjnY'], ['2   2'], ['2hsExampleExtEleEatEhisxa3e  1hi2--'], ['ga'], ['    Example   2    Exampxle   2'], ['ExamxpbetweeExasxa3e  1nl'], ['---a-thits-a-a- sentenceleEthisxa3esc-c-----b-b-'], ['ybsTcN'], ['dw   his     ords'], ['2---sa-ac--c---'], ['htsExampthitsleEthisxa3es'], ['hsihis'], ['ihihis'], ['  E  ExaExx2'], ['---a-thits-a-a- sentenceleEthisxa3esc-c-----bggagp-b-'], ['EExampple'], ['Exmp---a--a-a---b-b-Examplel'], [' sRentenceleEthisxa3esc-c--'], ['-   '], ['ExampleEmtExampl   eEthishiExamlesxa3e  e1'], ['  ExampleE  Expamplp2'], ['---a-thits-a-a- sentenceleEthisxa3esc-c-----his  ExampleE  Expample   2b-b-'], ['Exampthhisisa3e'], ['--C'], ['KsMcxuu'], ['ce-c-c---sxxample'], ['22  2   '], ['_--C'], ['EExpampl'], ['xmamspleEthisxae3es'], ['-ExapmpleEc-thitts-'], ['his  Exam   A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3pleE  mE3thitssxa3ei   2'], ['ple'], ['3Example    Example   2    Example   2   Exa 1ExampleEtEhisxe  1gggaps   3'], ['ExampleEtExampl   eEthishiExamlesxa3e p e1'], ['1gapszzPPb'], ['DQaiLlVsgN'], ['    his     A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3thitssxa3eis    EExample  hismpleample     -C   '], ['ExamplhsEteEthitsxa3e'], ['ExampleEt  E  Ega psxample   2---sa-abetweeExasxa3e  1n-isx'], ['Ku   A-B-*_-E-C    Ex     2\\nmple\\tExample   3Mcxuu'], ['ssgs'], ['---a-thits-a-a- sentenceleEt p ExaxmpleE  Expample a  2-b-b-'], ['ExaxmpleEthitsxa3e3c---'], ['ExampleEt   E  Ega pshhi---a-a-a---b-ggsb-b-c-c-c---sxample   2---sa-ac-c--11-h-isx'], ['sentenceleEthisxa3esc-c---'], ['thmple'], ['ssss'], ['cc-cggss-c---sxxcample'], ['Ku   A-B-*_-E-C    Ex     2\\nmple\\tExample   cc-cggs-c---sxxcample3Mcxuu'], ['  hExampleEthitssxa3eis Ex3ampleEtEhisxa3e  1   EExample'], ['sentenceleEthisxa3esc-c-----his'], ['3Mcxu     u'], ['gsss'], ['   A-B-*_-E-C   Ex    hismpleamplegapsle  m 3'], ['---a-thits-a-a  his    ---b-b-'], ['zExmplPb'], ['EExammle'], ['---a-a  ExampleE  Exp-ample   2  3c---'], ['EF2---sa-ac-c--11-h-isxoFlZTDagWE'], ['  his EF2---sa-ac-c--11-h-isxoFlZTDagWE'], ['hExampleEthitssxa3eis'], ['hsExampaleEtheisxa3es'], ['h'], ['T'], ['_wo_--C'], ['2hsExampleExtEleEatEh-isxa3e  1hi2--'], ['A-B---C'], ['2hsExampleExtEleEatEh-is-'], ['   Ex     2ple   3i'], ['his  ExampleE      2'], ['  his   ExampExampleEtle EExample'], ['mE3thitssxa3eisxpample'], ['    his     A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3thitssx   A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3a3eis    EExample-C   '], ['c-c-c---sxxamplthi  E   Exa2 2\\nmple\\tExampExampleEtle 3  2e'], ['    his   Exx1 Exa2--C   '], ['2pleEtEhisxa3e'], ['xal'], ['    Example   2     Example words  22'], ['Examxpbetw--CeeExasxa3e  1nl'], ['hhi---a-a-a---b-b-bKu-c-c-c---s'], ['2----sa-aciin-c---'], ['rpfY'], ['c-c-c---sxeEtle'], ['---a--a-a---b-b-Example'], ['----a-aa-a2-b-b-c-c-c---'], ['Examxpbetweel'], ['ExampExamplE'], ['wodhhi-ws'], ['1ileExBig'], [' ExampleEtEhisx  Exa mp  leample   3'], ['2hsExampleEis-'], ['zExmbplPb'], ['2  2---a-a--a----c---   '], ['----a-a-a---b-b-b-c-c-c---ExamplceEtEhisxa3e'], ['2---sa-abetweeExasxa3e'], ['Ega'], [' ExampleEtEhis  his   ExampExampleEtle EExamplex  Exa mp  lmeample   3'], ['---a--ba-a---b-b-b-c-bismpleample'], ['beteweeExasxa3e  1n'], ['Exa1ExampleEtEhmisxemple  1'], ['hhi----a-thits-a-a- sentenceleEthisxa3esc-c-----bggagp-b-hhh'], ['3pleE'], ['wordss'], ['---a-a'], ['Exa3c--i-leEtEhisxa3e'], ['EExam  E  ExaExx2ple  1Ex'], ['hhihh'], ['---a---b-b-b-c-c-c---ExampleEtEhisxa3e'], ['plethmple'], ['xalxmamspleEhhhi---a-a-a---b-b-b--c-c-c---sthisxae3es'], ['g    his    A-B-*_--C   gs'], ['hiss'], ['n'], ['gsentencele-a---'], ['PzPPb'], ['2---sa-ac---c---'], ['3Example'], ['  hjnYExample'], ['--CC'], ['---a--a-a---b-'], ['--CExampleEmtExamplC'], ['Examxpbe2   2tw--CeeExasxa3e  1nl'], ['22EExample-C--'], ['     his   Exx1   --C       d'], ['EExc-c-c---sxeEtlepampl'], ['ExampleEt  E  Ega psxample   2---sa-ac-c---hisxa3eE'], ['1   Exa 1 2 2\\nmple\\tExBig gaps    between words    i2---sa-ac-c---n this sentenceample 3aps'], ['hExampxleEtEhisxa3e'], ['sentenceleEthicsxa3esc-c---'], ['mplees'], ['   Ex     2\\nmple\\tExample   ExmampleEi'], ['         Example   2    Example   2   Exa 1ExampleEtEhisxe  1gggaps   3      '], ['gW'], ['htsExampthitsleEthisxahhi---a-a-a---b-b-bKu-c-c-c---s3es'], ['i2---s-a-a-c-c---n'], ['sentenceleEt3mplehicsxa3esc-c---'], ['---a--a-a---b-b-b-c-c----'], ['  his  h  hismplhsExampleExthi ExampleEi hssxA-B-*_--Ca3eseample     ismpleample '], ['wordrd'], ['thitExampExampleEtles'], ['   A-B-*_-E- C   Ex     2\\nmple\\t    E  Ega psxample   2---sa-ac-c--- A-B-*_-E-C   Ex     2\\nmple\\tExample   3ampsenteExamplnce1gggapsle  m 3'], ['  E  xaExx2'], ['xaE sentenceleEthisxa3esc-c---'], ['zP----a-a-a---b-b-b-c-c-c---ExamplceEtEhisxa3e'], ['tsthitts'], ['3apswd'], ['ExExamplampleEt  E  Example   2hisxggaa3e'], ['thitteEthishts'], ['A-B-*m_-E-C'], ['sentenceleEthisxaa3es'], ['ExampleEt  E  Ega psxample   2---sa-ac-c---hisxa3e-C'], ['3thitssx'], ['---E  c-c-c---sxxample EExb-b-c-c----a-a-a---b-b-b-c-c-c---ExamapleEtEhisxa3e'], ['    Examp2pleEtEhisxa3eExample   2'], ['s3thitssxa3eis'], ['    his    A-BA-B-*_  hExampleEthitssxa3eis    EExampple-E-C-*           _--C   '], ['  hExampleEthitssxahsE2xampleEthisxa3es3eis    EExam'], ['1ampleE'], ['mE3tshitssxa3eisxpample'], ['2---sa-ac-c--  Exx1   -h-isxa3e'], ['   shis     '], ['A-B-*mA_-E-C'], ['ExExamplampleEt  E  Example   2hisx'], ['ithits'], ['---a--a-a---b-   Ex     2\\nmple\\tExample   ExmampleEib-b--c-c-c---'], ['hismpleamplegapsle'], ['nn'], ['hsE    his   Exx1   --CE   xmampleEthisxa3es'], ['Exeamggapsle'], [' s ExampleeEthisxa3e'], ['ExampsenteExamplnce1gggapsle'], ['bExametweeExasxa3e  1n'], ['---a--a-a---b-   Ex     2\\nmple\\tExample   ExmampleEib-b--cc-c-c---'], ['E1ExampleEtEhisxeaEzExmplPbEEE'], ['   Exa 1ExampleEtEEhmisxe  ggaps   3'], ['gaTnYIFZqaAzpshhi---a-a-a---'], ['2-    his     A-B-*_-E-C   Ex     2\\nmple\\tExample  m 3thitssxa3eis    EExample-C   --sa-ac---c---'], ['    his    A-BA-B-*_  hEx  hExampleEthitssxa3eis    EExamppleampleEthitssxa3eis    EExampple-E-C-*           _--C   '], ['cc-cggss-c---sxxcgapshhi---a-2---sa-ac-c---hisxa3e----ample'], ['   A-B-*_-E-C   Ex     2\\nmple\\tExample  E  c-c-c---sx3'], ['ExpampA-B-*_le'], ['2hsExampleExtEleEasRentenceleEthisxa3esc-c--tE2   2h-is-'], ['sRentenceleEthisxa3esc-c--'], ['thitExmE3thitssxa3eisxpampleampExampleEtles'], ['hisExampBig gaps    between words    in this sentenceleEthisxa3 es'], ['   Ex     22\\nmple\\tExample   3'], ['Exa-E'], ['hhis2---sa-ac-c---h-isx'], ['2---sa-ac-c-i--h-isxa3e'], [' '], [' a b c '], [' a  b  c '], ['        '], [' a   b c  '], ['ABC'], ['1 2 3'], ['\u767e\u5ea6\u662f\u4e2d\u56fd\u6700\u5927\u7684\u641c\u7d22\u5f15\u64ce'], ['Big gaps    between words    in thce'], ['Big gaps    between words    in this sen3tence'], ['  Big gaps    between words    in thce      '], ['        mple'], ['  Big        '], ['mple'], ['  Big gaps    between words    Big gaps    between words    in this sen3tencein thce          '], ['  Big            Example   2'], ['Exa 1 2 2 mplle'], ['   gaps'], ['wor  Big gaps    between words    Big gaps    between words    in this sen3tencein thce          ds'], ['thce'], ['mmple'], ['   Example  1 '], ['    Example 2'], ['sen3tence'], ['mmpleExample  1'], ['  Big            ExamExaple   2'], ['Big'], ['     Example   2   '], ['Exa 1 2 2 mpsen3tencee'], ['ExamExaple'], ['Exxa'], ['   A-BExample   '], [' Big gaps    between words    in thce  '], ['Big gap        mples    between words    in thce'], ['     gaps A-B-*_--C   '], ['sen3tencein'], ['se3n3tence'], ['Big gaps    between words     in this sen3tence'], ['mmpleExample'], ['mplExa 1 2 2 mpsen3tenceees'], ['Exa 1 2 2 mpl  Big            ExamExaple   2e'], ['mmpleE1'], ['   A-B-*_--C  Big gaps    between words    in this sen3tence- '], ['   A-gapsB-*_--C   '], ['t Big gaps    between words    in thce  his'], ['Exa 1 2 2 mpExample  1sen3tencee'], ['  Big gaps    between words    in thce      fKqrpAGA'], ['EExample  1'], ['  Big gaps    between words   o in thce      '], ['th   Exa 1 2 2\\nmple\\tExample   3s'], ['BiBg'], ['mfKqrpAGApleE1'], ['EExampEle  1'], ['BWnXAhX'], ['                    '], ['sen3tenncein'], ['EExa'], ['Ex     mmpleE1   ample  1'], ['mpsen3tenceees'], [' Big gap        mples    between words    in thce'], ['   A-gaps-B-*_*--C   '], ['  Big gaps    between words   o in thce          '], ['Ex    Example 2xa'], ['EExample'], ['   A-gaps-B-*_*s--C   '], ['         sen3tenncein'], ['   le   '], ['Exa 1 2 2 m'], ['tthhce'], ['Exa 1 2 2 mpsent3tencee'], ['Exa 1 2  2 m'], ['   A-B-*_--C   mplExa'], ['A-gapsB-*_--C'], ['BWnXAh'], ['fKqrpAGA'], ['Exa 1 2 2 mp'], ['Big gaps    bet ween words    in this sentence'], ['se3n3ntence'], ['EExa 1 2 2 mpsent3tencee2xa'], ['    ExampleEx    Example 2xa 2'], ['   A-B--*_--C   mplExa'], ['se3n           3tence'], ['Exa 1 2 2 mpl  Big            ExamExa 1 2 2 me'], ['ample'], ['th   Exae 1 2 2\\nmple\\tExample   3s'], ['BBig'], ['   A-x   '], ['   A-gapsB- '], ['ExxEa'], ['     gEExampleaps A-B-*_--C   '], ['sen3tence-'], ['Bg'], ['    2'], ['ExxA-xEa'], ['                   '], ['mplExa'], [' Big gaps    between words   Big         in thce  '], ['ttse3n           3tencehhce'], ['EEpxample'], ['A-gapsB-**_--C'], ['pBig gap        mples    between wo rds    in thce'], ['  Big            Exaple   2'], ['m'], ['sce'], ['EEpxampl'], ['xExxEA-xEa'], ['2xa'], ['ExamExaplae'], ['mmpleEmexample  Big gaps    between words   o in thce          1'], ['Big 3tenceds    in thce'], ['gap'], ['   A-B-*---a-a-a---b-b-b-c-c-c---_--C   '], ['ExamEA-gapsB-*_---Caple'], ['isenn3tenncein '], ['   le    '], ['me'], ['ggasen3tenceinp'], ['Ex    Examplxe 2xa'], ['BWnnX'], ['EEpxampl     '], ['tthhcewords'], ['A-_B--*_--C'], ['    le    '], ['EEx  a'], ['     gA-B-*---a-a-a---b-b-b-c-c-c---_--CEExampleaps A-B-*_--C   '], ['bet'], ['  Big   Exa 1 2 2\\nmple\\tExample   3        '], ['mpl   A-x   '], ['thh'], ['   x Example   2'], ['mplExa 1 2 2 mpsen3tenEExceees'], ['A-gapsB--**_--C'], ['  Big gaps    between words    A-xin thce      fKqrpAGA'], ['   x Example   2gap'], ['A-gapsB-'], ['mm'], ['Big gaps    bet ween words    in this senbtence'], ['3tenceds'], ['2e'], ['     gaps A-B-*_--C  msen3tenceinp thce'], ['     gaps A-B-*_--C  msen3tenceinp thcae'], ['mpscelle'], ['se3n'], ['Exaa'], ['    A-gapsB- '], ['EEExa 1 2 2 mpl  Big            ExamExaple   2e'], ['ExamExbetweenlae'], ['   Exa 1 2 2\\nmple\\tE  Big gaps    between words   o in thce          xample   3'], ['isenn3tenncein'], ['     ExampleEx    Example 2xa 2'], ['BWn  Big        XAh'], ['ExampleEx'], ['ggasen3tenceinpsce'], ['Big gaps    bet ween words    in this senbtenc   A-gapsB- e'], ['   x ExamEEpxample 2'], ['  in thce          '], ['2Big gaps    between words    in thcee'], ['tbet'], ['sen3tencte'], ['A-gapsB--**_--C Big gap        mples    between words    in thce'], ['Big gaps    between wocrds     in this sen3tence'], ['  Big   1 2 2\\nmple\\tExample   3 '], ['sen3tenecein'], ['2xExa 1 2 2 mpsen3tenceea'], ['A-gaps-B-*_*--C'], ['isennmpsen3tencee3tenncein '], ['mpsen3tenceeees'], ['mpsent3tencee2xa'], ['A-gapsB--**_--C Big gap        mples    between words    in thceEExample'], ['betmples'], ['  Big ga ps    between words    Big gaps    between words    in this sen3tencein thce          '], ['Exa 1 2 2 mpsen32tencee'], ['Big gaps    between words   '], ['pBiggap'], ['mpsen3tenEExceees'], ['rds'], ['BiBgg'], ['mmpleExample  ExampleEx1'], ['mmpl  Big gaps    between words   o in thce          eExample  1'], ['   ExampExaplele  1 '], ['Big gaps  A-gapsB--**_--C Big gap        mples    between words    in thce  between words   '], ['Exa 1 2 2  ampsen3tencee'], ['mplle'], ['se3n   A-gapsB- -C   '], ['Big gaps    between words    in this sen3tenwce'], ['tthhwords'], ['pBig gap        mples in thce'], ['am    A-gapsB- ExamExaple'], ['BWnXsenbtenceAhX'], ['CWSrjljyFR'], ['Big gaps    bet weens    in this senbtenc   A-gapsBmplExa 1 2 2 mpsen3tenEExceees- e'], ['amplmmpleExample  ExampleEx1'], ['ttse3n           3tencehhce    Example   2'], ['gaa'], ['    Ethcele  1 '], ['    Example  2'], ['th   Exa 1 2 2\\nm3s'], ['   Exa 1 2 2\\nmple\\tE  Big gaps    betwe2Big gaps    between words    in thceeen words   o in thce          xample   3'], ['e'], ['   ExampExaplelea  1 '], ['A-gapsB--**_--C Big gap        mples    between words n   in thce'], ['sen3tenc  Big gaps    between words   o in thce          te'], ['weens'], ['   A-B--*_--C   mExampleplExa'], ['mExampleplExa'], ['th   Exa 1 2 2\\nmple\\tExample   3smp'], ['wse3n3ntenceor'], ['eExample'], ['Exa    ExampExaplele  1 1 2 2  ampsen3tencee'], ['isennmpsen3tencee3tennceinbet'], ['se3n   A-gap -C 3  '], ['mmpleExample gA-B-*---a-a-a---b-b-b-c-c-c---_--CEExampleaps ExampleEx1'], ['bets'], ['mp'], ['   A-Bb-c-c-c---_--C   '], ['EEpx'], ['   A-B-- *_--C    mplExa'], ['ExamEA-gapsB-*_a--m-Cap'], ['  Bi           Exaple   2'], ['pBig gap   *_--C     mples    between wo rds    in thce'], ['BWnX         Ah'], ['xExxEA-xEaExae'], ['sen3tenc'], ['mmpleExample p 1'], ['tthh'], ['isennmpsen3teEExampEle    Example  2ncee3tennceinbet'], ['  a                 '], ['  Big gaps    between wordae      fKqrpAGA'], ['BWnX         mmpleExample p 1Ah'], ['     Ethcele  1 '], ['ebS'], ['A-gaps-B-*_*s--C'], ['eaxa'], ['rrds'], ['sece-'], ['pBig gap   *_--C     mples    bet   A-gaps-B-*_*--C   ween wo rds    in thce'], ['A**_--C Big g ap        mples    bempl   A-x   hce'], ['t Biig gaps    between wordshis    in thce  his'], ['ExamExaEple'], ['     Example   2mpsen3tenceea   '], ['BWnXAxExxEA-xEaExaeX     Ethcele  1 '], ['ps'], ['a'], ['isennmpsen3tencee3tennceintbet'], ['ExampExaplelea'], ['   Exa 1 2 2\\nmple\\tE  Big gaps    betwe2Big gaps    between words xExxEA-xEaExae   in thceeen words   o in thce          xample   3'], ['pmp'], ['n           3tencehhce'], ['rNfUBspa'], ['     Epxample   2   '], ['wocrds'], [' Ex    Examplxe 2xaA-B-*_--C   mplExa'], ['rNfteUBspa'], ['Bigmpsent3tencee    in this sentence'], ['esen3tencempsen3tenEExceee3s-'], ['        mpl  Big            ExamExaple   2e'], ['EEEpx'], ['t Biig gaps    between wordshis    in thce t his'], ['   x xample 2'], ['betmeples'], ['th   Exa 1 2 2\\nm3sBig gaps    between words    in thce'], ['te'], ['  Big            ExamExaple   2ExamExbetweenlae'], ['XRSIx'], ['BWnXAXhX'], ['     A-gapsB-    ExamEEpxamplemplExa'], ['  Big   1 2 2\\nmple\\tEx2ample   3 '], ['A-gapsB-B*_--C'], ['th   Big     gaps    bet ween words    in this senbtenc   A-gapsB- eExa 1 2 2\\nmple\\tEx  3smp'], ['mpsece-lExa'], ['tth'], ['  mpsent3tencee                 '], ['ExagmEA-gapsB-*_---Caple'], ['ggasen3tenp'], ['mmpleEsen3tenc  Big gaps    between words   o in thce          temexample  Big gaps    between words   o in thce          1'], ['m3sBig'], ['Exa 1 2 '], ['BWnXhceAh'], ['smpl   A---a-a-a---b-b-b-c-c-c----x   ece-'], ['XBWX'], ['A-B-*_-C'], ['  Big gaps    betwneen words   o in thce      '], ['  a                  '], ['sp'], ['mpsen3tenEExceees-'], ['EExampEle'], ['BWnXAXhEEpxamplX'], ['3tencehhce'], ['   A-B--*mm_--C   mExampleplExa'], ['     gaps-- C  msen3tenceinp thcae'], ['Exa 1 2 2 m psen3tencee'], ['lmmple'], ['secn3tExa 1 2 2 mpsent3tenceeencte'], ['Exaisennmpsen3tencee3tennceinbet1 2 '], ['   Exa 1 2 2\\nmple\\tE  Big gaps    betwe2Big gaps    between words xExxEA-xEaEhxae   in thceeen words   o in thce          xample   3'], ['    Examaple  2'], ['tben            3tencehhcebt'], ['betmEx    Example 2xaples'], ['ebBig gaps    between words     in this sen3tenceetween'], ['A-B-*---a-a-a---b-b-b-c-c-c---_--C'], ['senbtenc'], ['BWn i Big         XAh'], ['mmpleEsen3tenc'], ['Examplxe'], ['th   Exa 1 2 2\\nmple\\tExampale   3smp'], ['tthhX'], ['sen3tenwce'], ['EExEampEle'], ['mpsen33tenceees'], ['  e A-B--*mm_--C   mExampleplExa'], ['tthhrwords'], ['ebese3n   A-gap -C 3  tsExxEa'], ['Big gaps    between words    in this sebSentencte'], ['     x ExamEEpxample 2  Example 2'], ['Ex2ample'], ['betms'], ['  Big gaps    betweentthhcewords words   o in thce      '], ['smpl   A---a-a-a---b-b-b-c--c-c----x   ece-'], ['m    le    ple'], ['BWnXpAXhEEpxamplX'], ['mmpleEsen3tenc  Big gaps    beBWnX         Ahtween words   o in thce          temexample  Big gaps    between words   o in thce          1'], ['gga   A-x   sen3tencce'], ['pl   A-B-*_--C  Big gaps    between words    in this sen3tence- ee'], ['mpsen3ttenceemmpleExample  1s'], ['mpsecmpscellee-lExa'], ['plmmple'], ['lmmpletthhcewords'], ['wo  Big            EEExample  1ds'], ['Big gaps    between words    in s sentence'], ['am'], ['Big gaps    bet ween words    in tsentence'], ['epBig gap        mples in thce'], ['psen3tencee'], ['A-gapsB--**_s--C'], ['Big gaps    between words    iExaen this sen3tenwce'], ['th   Exa 1 2 2\\nmmple\\tExampale   3smp'], ['meaxaplle'], ['   Exa 1 2 2\\nmple\\tE  Big gaps    betwe2Big gapmpsen3tenEExceees-between words xExxEA-xEaExae   in thceeen words   o in thce          xample   3'], ['pBgig'], ['A-gap--**_s--C'], ['mmmpleExample'], ['mExa 1 2 2 mpl  Big            ExamExaple   2ee'], ['ExampleEx1'], ['ggasenp3tenp'], ['XBWXX'], ['betwneen'], ['2hcee'], ['BWnplX'], ['2xExa'], ['pBgiBg'], ['EA---a-a-a---b-b-b-c-c-c----x2 mpsent3tencee'], ['t Biig gaps  e  between wordshis    in thce  his'], ['Big  gaps    between words    in this sen3tence'], ['bteet'], ['mpsen33temmpleEmexample  Big gaps    between words   o in thce          1nceees'], ['BWnAXAh'], ['BWnXAXhEEpxampllX'], ['senbtence'], ['ampl3tencehhcele'], ['mfKqrpAGAlpleE1'], ['   A-gaps-B-*_*Bigmpsent3tencee    in this sentence--C -  '], ['  Bigi        '], ['mmpleExA-_B--*_--Cample p 1'], ['   Exa 1 2 2\\nmple\\tE  Big gaps    betwe2Big gaps    between words xEx     xEA-xEaExae   in thceeen words   o in thce          xample   3'], ['smpl   A---a-a-a---bisennmpsen3tencee3tenncein-b-b-c--c-c----x   ece-'], ['A-Bb-c-c-c---_--C'], ['tbsenbtencet'], ['Big gaps    bet weens    in this senbtenc   A-gapsBmplsExa 1 2 2 mpsen3tenEExceees- e'], ['Exaisennmpsen3tencee3tennceinbet1'], ['   xExxEA-xEaExae  Ethcele  1 '], ['Bmpsent3tenceetween words   '], ['A-Bf-*_-mfKqrpAGApleE1C'], ['crdsExamplxe'], ['betmEx    Epxample 2xaples'], ['A-gapsBmplsExa'], ['mmmp'], [' Big gaps    between words   Big         in '], ['   A-B--ExamEA-gapsB-rNfUBspa*_---Caple*_--C   mplEx'], ['mpsen33temmpleEe          1nceees'], ['senbteenc'], ['ExapleEx'], ['thisebBig'], ['mpl   A-C-x   '], ['EamExbetwe    Ethcele  1 enlae'], ['Exa 1 2 2 mpExample  1  Big        sen3tencee'], ['ebBigmp'], ['pBig gap   *_--C     mples    ebSbetween wo rds    in thce'], ['E   Ethcele  1 enlae'], ['mmmm'], ['mpsen3ttenceemmpple'], ['1nceees']]\n    results = ['Example', 'Mudasir_Hanif_', 'Yellow_Yellow__Dirty__Fellow', 'Exa-mple', '-Exa_1_2_2_mple', 'Hello,-world!', 'happy_123', 'Hey-there!', '__spaces__every__where__', 'NoSpacesHere', 'This_is__a__test', 'Testing-1__2-3', 'Hello_World', 'Hello-World', '-Hello_World', 'This_is__a__tesst', 'This_is__a__tes', 'This_is__a_This_is__a__tes_test', 'Hello_r__World', 'This_is__a_Hello_r__World_tsesst', 'This_is__a_This_is__a__tes_test__spaceNoSpacesHere_', 'Thish_is__a__tesst', 'HelloNoSpacesHere,-world!', 'Hey-e_there!', '__spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__', 'happy_123__spaces__every__where__', '__spaces__eveThis_is__a_This__This_is__a_This_ishappy_123__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__', 'Hello_r__Word', 'This_is__a_sst', '__spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHello_r__WorldHere_is__a__tes_testry__where__', '__spaces__eveery__where__', 'happy1233', '__spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHeNoSpacesHerello_r__WorldHere_is__a__tes_testry__where__', 'happy_123_p_spaces__every__where__', '__spaces__eveThis_is__a_This_This_is__a_This_is__tes_testry__where__', 'Thish_isThis_is__a_Hello_r__World_tsTesting-1__2-3_a__This_is__a_ssttesst', 'Helleo_World', 'happyw_123_p_spacees__every__where__', 'Thish_is__a__tesHey-there!st', 'happyw_123_p_spacees__This_is__a_sstevery__wher__', '__spaces__every__w_here__', 'Th_is_is__a_This_is__a__tes_test', 'This_is-a_This_is__a__tes_test__spacoeNoSpacesHere_', '__spaces__eveThis_is__a_This__This_is__a_This_is_happy_123__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__', 'Thihappyw_123_p_spacees__This_is__a_sstevery__wher__s_is__a_Hello_r__Woreld_tsesst', '__spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHtry__where__', 'happThis_is__a__tessty', 'This_is__a_T__spaces__eveThisTh_is_is__a_This_is__a__tes_test_is__a_This__This_is__a_This_ishappy_123__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__his_is__a__tes_test', 'This_is_Thish_is__a__tesHey-there!st_a_This_is__a__tes_test__spaceNoSpacesHere_', 'Thish_is__asst', '__spaces__everThis_is__a_This_is__a__tes_testy__where__', 'This_is__This_is__a_T__spaces__eveThisTh_is_is__a_This_is__a__tes_test_is__a_This__This_is__a_This_ishappy_123__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__his_is__a__tes_testa__tes', '__spaces__eveThis_tis__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__', '__spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHello_r-WorldHere_is__a__tes_testry__where__', '_happyw_123_p_spacees__every__where__', 'happyw_123_p_spacees__This_is__a_sstevery__whser__', '__spaces__eveThis_is__a_This_This_is__a_This_is__a_This_is__a__tes_test__spaceNoSpacesHere_This_is__tes_testry__where__', 'haappy1233', 'Testing-Hey-e_there!__1__2-3', 'Hello_r-spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHello_r-WorldHere_is__a__tes_testry__where-Word', 'Testing-s__1__2-3', 'Th_is_is__a_This_is__a__tes_teHello,-world!st', '', 'ThThis_is__a_Hello_r__World_tsesstis_is__a_sst', 'This_is__This_is__a_T__spaces__eveThisThh_is_is__a_This_is__a__tes_test_is__a_This__This_is__a_This_ishappy_123__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__his_is__a__tes_testa__tes', 'This_is__sst', 'NoSere', 'ThTthis_is__a_Hello_r__World_tsesstis_is__a_sst', 'This_is__a_This_is__a__tes_test__spaceNioSpacesHere_', 'This_iis__a_sst', 'Thihappyw_123_p_spacees__Thi_s_is__a_sstevery__wher__s_is__a_Hello_r__Woreld_tsesst', 'This_is__a_This_istest', 'Helleo_Worldhappyw_123_p_spacThis_iis__a_sstees__every__where__', 'Hello_r__Worlld', 'Testing_This_is__a_sst__e_there!__1__2-3', 'ere!st', 'This_is__a_This_is__a__t__spaces__eveThis_is__a_This_This_is__a_This_is__a_This_is__a__tes_test__spaceNoSpacesHere_This_is__tes_testry__where__est', 'Hhappy_123_p_spaces__every__where__ello_r__Word', 'He__spaces__eveThis_is__a_This_This_is__a_This_is__a_This_is__a__tes_test__spaceNoSpacesHere_This_is__tes_testry__where__llo,-wod!', 'rCMrcvK', 'This_sis__a__tes', '__spaces__eveThis_is__a_This_This_is__a_This_is__a_This_is__a__tes_test__spaceNoSpacesHere_This_is__tes_testr__where__', '__spaThis__This_is__a_This_ishappy_123__a__tes_test__spaceNoSpacesHere_is__a__tes_testry__where__', 'Th_is_is__a_This_is__aHey-e_there!__tes_test', 'Thish_Helleo_Worldhappyw_123_p_spacThis_iis__a_sstees__every__where__is__a__tesHey-there!st', 'Hello_r-spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHellThish_isThis_is__a_Hello_r__World_tsTesting-1__2-3_a__This_is__a_ssttessto_r-WorldHere_is__a__tes_testry__where-Word', 'Th_is_is__a_This_is__a__tes_teTHello,-world!st', 'ThTthis_sis__a_Hello_r_', 'Thihappyw_123_p__spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHtry__where-spacees__This_is__a_sstevery__wher__s_is__a_Hello_r__Woreld_tsesst', '__spaces__everThis_is__a_This_is__a__tes_tThish_Helleo_Worldhappyw_123_p_spacThis_iis__a_sstees__every__where__is__a__tesHey-there!stesty_where__', 'NoSer', 'Thish_Helleo_Worldhappyw_123_p_spacThis_iis__a_sstees__every__where__ishappy_123_p_spaces__every__where-a__tesHey-there!st', 'Hello_rr__Word', 'Hello_r-spaces__eveThis_is__a_This_This_iThis_is__Hey-e_there!a_This_is__a__tes_tests__a_This_is__a__tes_test__spaceNoSpacesHellThish_isThis_is__a_Hello_r__World_tsTesting-1__2-3_a__This_is__a_ssttessto_r-WorldHere_is__a__tes_testry__where-Word', 'HeThis_is__a_This_istestlWlo_World', 'NoS', 'Testing-Hey-e_there!__1__2_This_is__a_This_is__a__tes_test__spaceNoSpacesHere-3', '__spaces__eveThis_is__a_This_This_is__a_This_is__a_This_is__a__tes_test__spaceNoSpacesHere_This_is__tes_testry__where_', 'NSooSerre', 'Hello_r-spaces__eveThis_is__a_This_This_iThis_is__Hey-e_there!a_This_is__a__tes_tests__a_This_is__a__tes_test__spaceNoSpacesHellThish_isThis_is__a_Hello_r__World_happy_12Testing-s__1__2-33__spaces__every__where__tsTesting-1__2-3_a__This_is__a_ssttessto_r-WorldHere_is__a__tes_testry__where-Word', 'This_is__This_is__a_T__spaces__eveThisTh_is_is__a_This_is__a__tes_test_is__a_This__This_is__a_This_ishappy_123__a__tes_test__spaceNoSpacesHere_is__a__tesHello_r-spaces__eveThis_is__a_This_This_iThis_is__Hey-e_there!a_This_is__a__tes_tests__a_This_is__a__tes_test__spaceNoSpacesHellThish_isThis_is__a_Hello_r__World_tsTesting-1__2-3_a__This_is__a_ssttessto_r-WorldHere_is__a__tes_testry__where-Word_testry__where__his_is__a__tes_testa__tes', 'Helo_r__Worlld', '_happyw_123_p_spacees__every__whhere__', 'HTh_is_is__a_This_is__a__tehappy_123__spaces__everyHello_r-spaces__eveThis_is__a_This_This_is__a_This_is__a__tes_test__spaceNoSpacesHello_r-WorldHere_is__a__tes_testry__where-Wordo,-world!stey-!', 'Thish_isThis_is__a_Hello_r__World_tsTesting_3_a__This_is__a_ssttesst', '-Exa_1_2_2\\nmple\\tExample-3', '-A-B-*_--C-', '---a-a-a---b-b-b-c-c-c---', 'Big_gaps-between_words-in_this_sentence', '-', '-', '-', 'Exa_1_2_2_mple', 'Example__1', '-Example-2', '-Example-2-Example-2', '__E__Example-2', 'this', '----a-a-a---b-b-b-c-c-c---', '-', 'his', 'words', 'ExampleEthisxa3e__1', 'Exx1', '__his-', 'gaps', 'ggaps', 'ggga', '__his-', '-Ex-2\\nmple\\tExample-3', '---a-a-a---b-b-b-c-c-c----', 'Example-Example-2-Example-2__1', 'A-B-*_--C', 'EEx', 'Exa', '-A-B-*_-E-C-Ex-2\\nmple\\tExample-3', '---a-ac-c----', 'ExampleEthisxa3e', '__his-', '2', 'in', '__E__Egapsxample-2', '__ExampleE__Expample-2', '-Exa_1_2_Exa2\\nmple\\tExample-3', '__E__Ega_psxample-2---sa-ac-c---', 'ExampleeEthisxa3e', 'zPb', 'ExampleEt__E__Ega_psxample-2---sa-ac-c---hisxa3e', 'hsis', '__E__Example__2', '-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3', 'EExample__1Ex', '__his-EExample', 'psxample', 'ExampleEthitsxa3e', '1', '----a-aa-a---b-b-b-c-c-c---', '---a--a-a---b-b-b-c-c-c---', 'hsExampleEthisxa3es', 'Expample', 'his__ExampleE__Expample-2', 'sentence', 'Exa2', '-Exa_1_2_2\\nmple\\tExample-2---sa-ac-c---', '-Exa_1_2_Exa2\\nmple\\tEx3', '-', '-Exa_1_2_2\\nmple\\tExample_3', 'ExampleEtEhisxa3e__1', '-E__Ega_psxample-2---sa-ac-c---_A-B-*_-E-C-Ex-2\\nmple\\tExample-3', 'hsE2xampleEthisxa3es', 'Example-Example-2-Examle-2__1', '__hExampleEthitssxa3eis-EExample', '-EEx', 'thits', '----a-a-a---b-b-b-c-c-c---ExampleEtEhisxa3e', '---a-ac-c---', '-psxample_EEx', 'E', '-his-A-B-*_--C-', 'TnYIFZqaAz', 'between', 'zEx3Pbb', 'gs', '-', '---a--a-a---b-b-b-c-c--c---', '-Ex-2\\nmple\\tExample-3i', '-Exa_mpleample-3', '__hismpleample-', 'thitts', 'ExampleEt__E__Ega_psxample-2---sa-ac-c---h-isxa3e', '__', '__his__hismpleample_', '---a--a-a---b-b-b--c-c-c---', 'word', 'thi__E-Exa_1_2_2\\nmple\\tExample_3__2', '---a-ac--A-B-*_-E-C-Ex-2\\nmple\\tExample-3c---', 'Exampl-eEthishiExamlesxa3e__1', '_Exx1-', 'ggap', '__hExampleEthitssxa3eis-EExampple', 'E__x3', '__his__h__hismpleample-ismpleample_', 'R', '-Ex-2\\nmple\\tExample-ExampleEi', 'ExampleEtEhisxa3e__1gggaps', 'hsExmampleEthisxa3es', 'ExaxmpleEthitsxa3e', '-Exa_1ExampleEtEhisxe__1gggaps-3', 'gss', '-', 'hhis', 'gggga', 'Exampl', 'ExampleEtExampl-eEthishiExamlesxa3e__1', '-his-A-B-*-_--C-', 'ExampleEtExampl', 'hhi---a-a-a---b-b-b-c-c-c---s', '---a--a-a---b-b-b-c-c--', 'Big_gaps-between_words-i2---sa-ac-c---n_this_sentence', 'Exam-Example-2pleEtEhisxa3e__1', '2---sa-ac-c---', '11', 'dwords', 'betweeExampleEthisxa3e__1n', 'hhi---a-a-a---__E__Ega_psxample-2---sa-ac-c---b-b-b-c-c-c---s', 'E__E2---sa-ac-c---b-b-b-c-c-c---sx', 'hhi--his-A-B-*-_--C---a-a-a---', 'hsExampthitsleEthisxa3es', 'ismpleample', 'hhi---a-a-a---', 'hsExampleEtheisxa3es', '-Exa_mp__leample-3', 'ExampleEt__E__Ega_psxample-2---sa-ac-c---h-isx', 'EleEatEhisxa3e__1', '__hs', '---a--a-a---b--psxample_EExb-b-c-c--', 's', 'ExExamplampleEthisxa3e', '-his__h__hismpleample-ismpleample_', '---a-ac-ca---', '__hExa__hsmpleEthitssxa3eis-EExample', 'A-B-*___hExampleEthitssxa3eis-EExampple-E-C', 'ExExamplampleEt__E__Example-2hisxggggaa3e', '---a-a-a----c----', 'Exampitsxa3e', '----a-a-a---b-hsmpleEthitssxa3eisb-b-c-c-c---', 'thtis', '---a-ac-c-thitts-', 'hihis', '---a-a__ExampleE__Expample-2__3c---', 'wo', 'Exaword', 'thhisis', 'hhi-', '-his-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3thitssxa3eis-EExample-C-', 'zPPb', 'EExampple-E-C', 'E__c-c-c---sx', 'i2---sa-ac-c---n', '-his-Exx1---C-', 'ExampleEtEhisxa3e', 'hhi---a-a-a---c-c---s', 'Exmpl', '3', 'Rhsis', 'sjRboRkSy', '2---sa-ac-c---h-isx', 'mples', 'Exa3c---leEtEhisxa3e', 'hsE-his-Exx1---C-xmampleEthisxa3es', 'i2---sa-a-c-c---n', '-Exa_1_2_Exa2\\nmpl', 'thi', 'hsExampleExthisxa3es', 'hh', 'hhhis', 'hsE-his-Exx1---C-xmampleEthis-Exa_mp__leample-3xa3es', 'EExample-C', '2__2-', '2---sa-ac-c---h-isxa3e', '3xa3es', 'his__ExampleE__E3thitssxa3eisxpample-2', 'Exam', '---a-ac--A-B-*m_-E-C-Ex-2\\nmple\\tExample-3c---', '2----sa-ac-c---', 'thhiss', 'wodhhi-s', 'FoFlZTDagW', '-Exa_1_2_2\\nmple\\tExBig_gaps-between_words-i2---sa-ac-c---n_this_sentenceample_3', 'ExampleEtExpampl', '-Exa_1_2_2\\nmple\\tExa---a-ac-mple_3', '-Exa_mp__leample-3Example__1', 'Exa---a-ac-mple', 'sgs', '---a-thits-a-a---b-b-', 'xmampleEthisxa3es2__ExaxmpleEthitsxa3e3c---', 'his__ExampleE-2', '__---a-ac-c----Example-2', '3c---', 'ggagp', 'EFoFlZTDagWE', 'hs', '_p_ExaxmpleE__Expample-2', '111', 'ggagExampleEtEhisexa3gep', '-Exal_mp__leample-3', 'gapshhi---a-a-a---__E__Ega_psxample-2---sa-ac-c---b-b-b-c-c-c---s', 'ga_Exx1-s', '---a-a-a----c---', 'wwo', '-Exa_1ExampleEtEhmisxe__ggaps-3', 'A-B-*', '-Example-2-Example_words__2', '_Ex3__Ex-2\\nmple\\tExample-3i', 'thhi', 'iin', '--a-a-a---', 'his__ExapmpleE__E3thitssxa3eisxpample-2', '---a-ac-c-a---', 'jgOtGgdMm', 'ExampleEt__E__Ega_pshhi---a-a-a---b-b-b-c-c-c---sxample-2---sa-ac-c--11-h-isx', '1gggaps', '-E__c-c-c---sxxample_EExb-b-c-c--', 'hhi-hhh', '-Exa_1gaps-3', 'hsExampleExthi__hssxa3es', '----a--a-a---b-b-b-c-c--c---', '_p_Exax__Expample-2', 'ExExameplampleEthisxa3e', 'thi__E-Exa_1_2_2\\nmple\\tExampExampleEtle_3__2', 'hsmpleeEthishiExamlesxa3eEthitssxa3eis', '---a-a-aExampleEt__E_-c---hisxa3e--c---', '__hExampxleEtEhisxa3e__1ile', 'EleEatEhisxa3e', 'ExampleEi', 'wo_--C', 'Exampl-eEthish_iExamlesxa3e__1', 'c-c-c---sxxample', '-Exple-3', '__his_', '-hi_s__h__hismpleample-ismpleample_', 'gapshhi---a-a-a---__E__Ega_psxample-2---sa-ac-c----b-b-b-c-c-c---s', '__E__Ega_psxa-Ex-2\\nmple\\tExample-3mple-2---sa-ac-c---', 'A-B-*_', '-his-Exx1---C-', 'sentenceample', 'ggs', '-Example-2-Example-2-Exa_1ExampleEtEhisxe__1gggaps-3', 'c-c-c----sx', 'hsmpleEthitssxa3eis', '__his__hi2hisxggggaa3e_', '----a-ac-c-thitts-', '2-2-', 'Ex3ampleEtEhisxa3e__1', 'his__Exam-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3pleE__mE3thitssxa3eisxpample-2', '-Ex-2\\nmple---a-a-a----c---\\tExample__eEi', '-Exa_1_2_2\\nmple\\tExBig_gaps-between_words-i2---sa-ac-c---n_this_sentenceeample_3', '-E', '---a--a-a---b-b-Example__1-c--c---', '__E__Ega_psxample-2---sa-ac-c-__E__Example-2--', '_Exx-Ex-2\\nmple\\tExamhhple-3i1-', 'hsExampleExthi__hssxA-B-*_--Ca3es', '-his-A-B-*-3i1__--C-', 'E2---sa-ac-c---b-b-b-c-c-c---sx', '__E_2_Example-2', 'A-B*--*_--C', 'gapshhi---a-a-a---', 'thi__E-Exa_1_2_2\\nmple\\tExampExamplE__c-c-c---sxeEtle_3__2', 'cc-cggs-c---sxxcample', 'hhi---a-a-a---b-b-b--c-c-c---s', 'sggs', '__EExb-b-c-c--__Example-2', 'ss', '-Eexa_1_2_2\\nmple\\tExample_3', 'gapshhi---a-2---sa-ac-c---hisxa3e---', 'mple---a-a-a----c---', 'xmampleEthisxa3es', 'ggss', 'E_E_x3', 'sjRboRkS', '__his-hi2hisxgEleEatEhisxa3egggaa3e_', 'EEE', 'ExampleEtExampl-eEthishiExamlesxa3e__e1', 'hhh', '-his-', '22--', '-3', '---a--a-a---b-b-b-c-bismpleample', 'c-c-c---sxxamplthi__E-Exa_1_2_2\\nmple\\tExampExampleEtle_3__2e', '-A-B-*_-E-C-Ex-2\\nmple\\tExamp1gggapsle__m_3', 'Examle', '-Example-2-Example_words__22', 'tshitts', '2---sssa-ac-c---h-isxa3e', 'his__ExExampl-eEthishiExamlesxa3e__1ampleE__Expample-2', 'Examhhple', 'hsE', 'hisExampBig_gaps-between_words-in_this_sentenceleEthisxa3es', 'ExampleEtEhisx', 'senteExamplnce', '_p_ExaxmpleE__Expample_a__2', 'dwoc-c-c---sxeEtlerds', 'Exal', 'hsmpleeEthishiExame1lesxa3eEthitssxa3eis', 'E_sc-c-c---sx', 'worrd', 'Exam-Example-2pleEA-B-*_-E-CtEhisxa3e__1', 'Eexa', 'betweeExasxa3e__1n', 'sss', 'ExampleEtEhis3xa3e', '-A-B-*_-E-C-Ex-2\\nmple\\tExampsenteExamplnce1gggapsle__m_3', '2---sa-ac-c-Exax--', 'Eampl', 'IclExampleEthisxa3e__1', '---a--a-a---b-b--Example__1-c--c---', 'bet3e__1n', '---a-a--a----c---', 'hsExampleExthi_ExampleEi_hssxA-B-*_--Ca3es', 'EExx', 'IclExample', 'fwlMxhGm', '_sentenceleEthisxa3esc-c---', 'hjnY', '2-2', '2hsExampleExtEleEatEhisxa3e__1hi2--', 'ga', '-Example-2-Exampxle-2', 'ExamxpbetweeExasxa3e__1nl', '---a-thits-a-a-_sentenceleEthisxa3esc-c-----b-b-', 'ybsTcN', 'dw-his-ords', '2---sa-ac--c---', 'htsExampthitsleEthisxa3es', 'hsihis', 'ihihis', '__E__ExaExx2', '---a-thits-a-a-_sentenceleEthisxa3esc-c-----bggagp-b-', 'EExampple', 'Exmp---a--a-a---b-b-Examplel', '_sRentenceleEthisxa3esc-c--', '--', 'ExampleEmtExampl-eEthishiExamlesxa3e__e1', '__ExampleE__Expamplp2', '---a-thits-a-a-_sentenceleEthisxa3esc-c-----his__ExampleE__Expample-2b-b-', 'Exampthhisisa3e', '--C', 'KsMcxuu', 'ce-c-c---sxxample', '22__2-', '_--C', 'EExpampl', 'xmamspleEthisxae3es', '-ExapmpleEc-thitts-', 'his__Exam-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3pleE__mE3thitssxa3ei-2', 'ple', '3Example-Example-2-Example-2-Exa_1ExampleEtEhisxe__1gggaps-3', 'ExampleEtExampl-eEthishiExamlesxa3e_p_e1', '1gapszzPPb', 'DQaiLlVsgN', '-his-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3thitssxa3eis-EExample__hismpleample--C-', 'ExamplhsEteEthitsxa3e', 'ExampleEt__E__Ega_psxample-2---sa-abetweeExasxa3e__1n-isx', 'Ku-A-B-*_-E-C-Ex-2\\nmple\\tExample-3Mcxuu', 'ssgs', '---a-thits-a-a-_sentenceleEt_p_ExaxmpleE__Expample_a__2-b-b-', 'ExaxmpleEthitsxa3e3c---', 'ExampleEt-E__Ega_pshhi---a-a-a---b-ggsb-b-c-c-c---sxample-2---sa-ac-c--11-h-isx', 'sentenceleEthisxa3esc-c---', 'thmple', 'ssss', 'cc-cggss-c---sxxcample', 'Ku-A-B-*_-E-C-Ex-2\\nmple\\tExample-cc-cggs-c---sxxcample3Mcxuu', '__hExampleEthitssxa3eis_Ex3ampleEtEhisxa3e__1-EExample', 'sentenceleEthisxa3esc-c-----his', '3Mcxu-u', 'gsss', '-A-B-*_-E-C-Ex-hismpleamplegapsle__m_3', '---a-thits-a-a__his----b-b-', 'zExmplPb', 'EExammle', '---a-a__ExampleE__Exp-ample-2__3c---', 'EF2---sa-ac-c--11-h-isxoFlZTDagWE', '__his_EF2---sa-ac-c--11-h-isxoFlZTDagWE', 'hExampleEthitssxa3eis', 'hsExampaleEtheisxa3es', 'h', 'T', '_wo_--C', '2hsExampleExtEleEatEh-isxa3e__1hi2--', 'A-B---C', '2hsExampleExtEleEatEh-is-', '-Ex-2ple-3i', 'his__ExampleE-2', '__his-ExampExampleEtle_EExample', 'mE3thitssxa3eisxpample', '-his-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3thitssx-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3a3eis-EExample-C-', 'c-c-c---sxxamplthi__E-Exa2_2\\nmple\\tExampExampleEtle_3__2e', '-his-Exx1_Exa2--C-', '2pleEtEhisxa3e', 'xal', '-Example-2-Example_words__22', 'Examxpbetw--CeeExasxa3e__1nl', 'hhi---a-a-a---b-b-bKu-c-c-c---s', '2----sa-aciin-c---', 'rpfY', 'c-c-c---sxeEtle', '---a--a-a---b-b-Example', '----a-aa-a2-b-b-c-c-c---', 'Examxpbetweel', 'ExampExamplE', 'wodhhi-ws', '1ileExBig', '_ExampleEtEhisx__Exa_mp__leample-3', '2hsExampleEis-', 'zExmbplPb', '2__2---a-a--a----c----', '----a-a-a---b-b-b-c-c-c---ExamplceEtEhisxa3e', '2---sa-abetweeExasxa3e', 'Ega', '_ExampleEtEhis__his-ExampExampleEtle_EExamplex__Exa_mp__lmeample-3', '---a--ba-a---b-b-b-c-bismpleample', 'beteweeExasxa3e__1n', 'Exa1ExampleEtEhmisxemple__1', 'hhi----a-thits-a-a-_sentenceleEthisxa3esc-c-----bggagp-b-hhh', '3pleE', 'wordss', '---a-a', 'Exa3c--i-leEtEhisxa3e', 'EExam__E__ExaExx2ple__1Ex', 'hhihh', '---a---b-b-b-c-c-c---ExampleEtEhisxa3e', 'plethmple', 'xalxmamspleEhhhi---a-a-a---b-b-b--c-c-c---sthisxae3es', 'g-his-A-B-*_--C-gs', 'hiss', 'n', 'gsentencele-a---', 'PzPPb', '2---sa-ac---c---', '3Example', '__hjnYExample', '--CC', '---a--a-a---b-', '--CExampleEmtExamplC', 'Examxpbe2-2tw--CeeExasxa3e__1nl', '22EExample-C--', '-his-Exx1---C-d', 'EExc-c-c---sxeEtlepampl', 'ExampleEt__E__Ega_psxample-2---sa-ac-c---hisxa3eE', '1-Exa_1_2_2\\nmple\\tExBig_gaps-between_words-i2---sa-ac-c---n_this_sentenceample_3aps', 'hExampxleEtEhisxa3e', 'sentenceleEthicsxa3esc-c---', 'mplees', '-Ex-2\\nmple\\tExample-ExmampleEi', '-Example-2-Example-2-Exa_1ExampleEtEhisxe__1gggaps-3-', 'gW', 'htsExampthitsleEthisxahhi---a-a-a---b-b-bKu-c-c-c---s3es', 'i2---s-a-a-c-c---n', 'sentenceleEt3mplehicsxa3esc-c---', '---a--a-a---b-b-b-c-c----', '__his__h__hismplhsExampleExthi_ExampleEi_hssxA-B-*_--Ca3eseample-ismpleample_', 'wordrd', 'thitExampExampleEtles', '-A-B-*_-E-_C-Ex-2\\nmple\\t-E__Ega_psxample-2---sa-ac-c---_A-B-*_-E-C-Ex-2\\nmple\\tExample-3ampsenteExamplnce1gggapsle__m_3', '__E__xaExx2', 'xaE_sentenceleEthisxa3esc-c---', 'zP----a-a-a---b-b-b-c-c-c---ExamplceEtEhisxa3e', 'tsthitts', '3apswd', 'ExExamplampleEt__E__Example-2hisxggaa3e', 'thitteEthishts', 'A-B-*m_-E-C', 'sentenceleEthisxaa3es', 'ExampleEt__E__Ega_psxample-2---sa-ac-c---hisxa3e-C', '3thitssx', '---E__c-c-c---sxxample_EExb-b-c-c----a-a-a---b-b-b-c-c-c---ExamapleEtEhisxa3e', '-Examp2pleEtEhisxa3eExample-2', 's3thitssxa3eis', '-his-A-BA-B-*___hExampleEthitssxa3eis-EExampple-E-C-*-_--C-', '__hExampleEthitssxahsE2xampleEthisxa3es3eis-EExam', '1ampleE', 'mE3tshitssxa3eisxpample', '2---sa-ac-c--__Exx1--h-isxa3e', '-shis-', 'A-B-*mA_-E-C', 'ExExamplampleEt__E__Example-2hisx', 'ithits', '---a--a-a---b--Ex-2\\nmple\\tExample-ExmampleEib-b--c-c-c---', 'hismpleamplegapsle', 'nn', 'hsE-his-Exx1---CE-xmampleEthisxa3es', 'Exeamggapsle', '_s_ExampleeEthisxa3e', 'ExampsenteExamplnce1gggapsle', 'bExametweeExasxa3e__1n', '---a--a-a---b--Ex-2\\nmple\\tExample-ExmampleEib-b--cc-c-c---', 'E1ExampleEtEhisxeaEzExmplPbEEE', '-Exa_1ExampleEtEEhmisxe__ggaps-3', 'gaTnYIFZqaAzpshhi---a-a-a---', '2--his-A-B-*_-E-C-Ex-2\\nmple\\tExample__m_3thitssxa3eis-EExample-C---sa-ac---c---', '-his-A-BA-B-*___hEx__hExampleEthitssxa3eis-EExamppleampleEthitssxa3eis-EExampple-E-C-*-_--C-', 'cc-cggss-c---sxxcgapshhi---a-2---sa-ac-c---hisxa3e----ample', '-A-B-*_-E-C-Ex-2\\nmple\\tExample__E__c-c-c---sx3', 'ExpampA-B-*_le', '2hsExampleExtEleEasRentenceleEthisxa3esc-c--tE2-2h-is-', 'sRentenceleEthisxa3esc-c--', 'thitExmE3thitssxa3eisxpampleampExampleEtles', 'hisExampBig_gaps-between_words-in_this_sentenceleEthisxa3_es', '-Ex-22\\nmple\\tExample-3', 'Exa-E', 'hhis2---sa-ac-c---h-isx', '2---sa-ac-c-i--h-isxa3e', '_', '_a_b_c_', '_a__b__c_', '-', '_a-b_c__', 'ABC', '1_2_3', '\u767e\u5ea6\u662f\u4e2d\u56fd\u6700\u5927\u7684\u641c\u7d22\u5f15\u64ce', 'Big_gaps-between_words-in_thce', 'Big_gaps-between_words-in_this_sen3tence', '__Big_gaps-between_words-in_thce-', '-mple', '__Big-', 'mple', '__Big_gaps-between_words-Big_gaps-between_words-in_this_sen3tencein_thce-', '__Big-Example-2', 'Exa_1_2_2_mplle', '-gaps', 'wor__Big_gaps-between_words-Big_gaps-between_words-in_this_sen3tencein_thce-ds', 'thce', 'mmple', '-Example__1_', '-Example_2', 'sen3tence', 'mmpleExample__1', '__Big-ExamExaple-2', 'Big', '-Example-2-', 'Exa_1_2_2_mpsen3tencee', 'ExamExaple', 'Exxa', '-A-BExample-', '_Big_gaps-between_words-in_thce__', 'Big_gap-mples-between_words-in_thce', '-gaps_A-B-*_--C-', 'sen3tencein', 'se3n3tence', 'Big_gaps-between_words-in_this_sen3tence', 'mmpleExample', 'mplExa_1_2_2_mpsen3tenceees', 'Exa_1_2_2_mpl__Big-ExamExaple-2e', 'mmpleE1', '-A-B-*_--C__Big_gaps-between_words-in_this_sen3tence-_', '-A-gapsB-*_--C-', 't_Big_gaps-between_words-in_thce__his', 'Exa_1_2_2_mpExample__1sen3tencee', '__Big_gaps-between_words-in_thce-fKqrpAGA', 'EExample__1', '__Big_gaps-between_words-o_in_thce-', 'th-Exa_1_2_2\\nmple\\tExample-3s', 'BiBg', 'mfKqrpAGApleE1', 'EExampEle__1', 'BWnXAhX', '-', 'sen3tenncein', 'EExa', 'Ex-mmpleE1-ample__1', 'mpsen3tenceees', '_Big_gap-mples-between_words-in_thce', '-A-gaps-B-*_*--C-', '__Big_gaps-between_words-o_in_thce-', 'Ex-Example_2xa', 'EExample', '-A-gaps-B-*_*s--C-', '-sen3tenncein', '-le-', 'Exa_1_2_2_m', 'tthhce', 'Exa_1_2_2_mpsent3tencee', 'Exa_1_2__2_m', '-A-B-*_--C-mplExa', 'A-gapsB-*_--C', 'BWnXAh', 'fKqrpAGA', 'Exa_1_2_2_mp', 'Big_gaps-bet_ween_words-in_this_sentence', 'se3n3ntence', 'EExa_1_2_2_mpsent3tencee2xa', '-ExampleEx-Example_2xa_2', '-A-B--*_--C-mplExa', 'se3n-3tence', 'Exa_1_2_2_mpl__Big-ExamExa_1_2_2_me', 'ample', 'th-Exae_1_2_2\\nmple\\tExample-3s', 'BBig', '-A-x-', '-A-gapsB-_', 'ExxEa', '-gEExampleaps_A-B-*_--C-', 'sen3tence-', 'Bg', '-2', 'ExxA-xEa', '-', 'mplExa', '_Big_gaps-between_words-Big-in_thce__', 'ttse3n-3tencehhce', 'EEpxample', 'A-gapsB-**_--C', 'pBig_gap-mples-between_wo_rds-in_thce', '__Big-Exaple-2', 'm', 'sce', 'EEpxampl', 'xExxEA-xEa', '2xa', 'ExamExaplae', 'mmpleEmexample__Big_gaps-between_words-o_in_thce-1', 'Big_3tenceds-in_thce', 'gap', '-A-B-*---a-a-a---b-b-b-c-c-c---_--C-', 'ExamEA-gapsB-*_---Caple', 'isenn3tenncein_', '-le-', 'me', 'ggasen3tenceinp', 'Ex-Examplxe_2xa', 'BWnnX', 'EEpxampl-', 'tthhcewords', 'A-_B--*_--C', '-le-', 'EEx__a', '-gA-B-*---a-a-a---b-b-b-c-c-c---_--CEExampleaps_A-B-*_--C-', 'bet', '__Big-Exa_1_2_2\\nmple\\tExample-3-', 'mpl-A-x-', 'thh', '-x_Example-2', 'mplExa_1_2_2_mpsen3tenEExceees', 'A-gapsB--**_--C', '__Big_gaps-between_words-A-xin_thce-fKqrpAGA', '-x_Example-2gap', 'A-gapsB-', 'mm', 'Big_gaps-bet_ween_words-in_this_senbtence', '3tenceds', '2e', '-gaps_A-B-*_--C__msen3tenceinp_thce', '-gaps_A-B-*_--C__msen3tenceinp_thcae', 'mpscelle', 'se3n', 'Exaa', '-A-gapsB-_', 'EEExa_1_2_2_mpl__Big-ExamExaple-2e', 'ExamExbetweenlae', '-Exa_1_2_2\\nmple\\tE__Big_gaps-between_words-o_in_thce-xample-3', 'isenn3tenncein', '-ExampleEx-Example_2xa_2', 'BWn__Big-XAh', 'ExampleEx', 'ggasen3tenceinpsce', 'Big_gaps-bet_ween_words-in_this_senbtenc-A-gapsB-_e', '-x_ExamEEpxample_2', '__in_thce-', '2Big_gaps-between_words-in_thcee', 'tbet', 'sen3tencte', 'A-gapsB--**_--C_Big_gap-mples-between_words-in_thce', 'Big_gaps-between_wocrds-in_this_sen3tence', '__Big-1_2_2\\nmple\\tExample-3_', 'sen3tenecein', '2xExa_1_2_2_mpsen3tenceea', 'A-gaps-B-*_*--C', 'isennmpsen3tencee3tenncein_', 'mpsen3tenceeees', 'mpsent3tencee2xa', 'A-gapsB--**_--C_Big_gap-mples-between_words-in_thceEExample', 'betmples', '__Big_ga_ps-between_words-Big_gaps-between_words-in_this_sen3tencein_thce-', 'Exa_1_2_2_mpsen32tencee', 'Big_gaps-between_words-', 'pBiggap', 'mpsen3tenEExceees', 'rds', 'BiBgg', 'mmpleExample__ExampleEx1', 'mmpl__Big_gaps-between_words-o_in_thce-eExample__1', '-ExampExaplele__1_', 'Big_gaps__A-gapsB--**_--C_Big_gap-mples-between_words-in_thce__between_words-', 'Exa_1_2_2__ampsen3tencee', 'mplle', 'se3n-A-gapsB-_-C-', 'Big_gaps-between_words-in_this_sen3tenwce', 'tthhwords', 'pBig_gap-mples_in_thce', 'am-A-gapsB-_ExamExaple', 'BWnXsenbtenceAhX', 'CWSrjljyFR', 'Big_gaps-bet_weens-in_this_senbtenc-A-gapsBmplExa_1_2_2_mpsen3tenEExceees-_e', 'amplmmpleExample__ExampleEx1', 'ttse3n-3tencehhce-Example-2', 'gaa', '-Ethcele__1_', '-Example__2', 'th-Exa_1_2_2\\nm3s', '-Exa_1_2_2\\nmple\\tE__Big_gaps-betwe2Big_gaps-between_words-in_thceeen_words-o_in_thce-xample-3', 'e', '-ExampExaplelea__1_', 'A-gapsB--**_--C_Big_gap-mples-between_words_n-in_thce', 'sen3tenc__Big_gaps-between_words-o_in_thce-te', 'weens', '-A-B--*_--C-mExampleplExa', 'mExampleplExa', 'th-Exa_1_2_2\\nmple\\tExample-3smp', 'wse3n3ntenceor', 'eExample', 'Exa-ExampExaplele__1_1_2_2__ampsen3tencee', 'isennmpsen3tencee3tennceinbet', 'se3n-A-gap_-C_3__', 'mmpleExample_gA-B-*---a-a-a---b-b-b-c-c-c---_--CEExampleaps_ExampleEx1', 'bets', 'mp', '-A-Bb-c-c-c---_--C-', 'EEpx', '-A-B--_*_--C-mplExa', 'ExamEA-gapsB-*_a--m-Cap', '__Bi-Exaple-2', 'pBig_gap-*_--C-mples-between_wo_rds-in_thce', 'BWnX-Ah', 'xExxEA-xEaExae', 'sen3tenc', 'mmpleExample_p_1', 'tthh', 'isennmpsen3teEExampEle-Example__2ncee3tennceinbet', '__a-', '__Big_gaps-between_wordae-fKqrpAGA', 'BWnX-mmpleExample_p_1Ah', '-Ethcele__1_', 'ebS', 'A-gaps-B-*_*s--C', 'eaxa', 'rrds', 'sece-', 'pBig_gap-*_--C-mples-bet-A-gaps-B-*_*--C-ween_wo_rds-in_thce', 'A**_--C_Big_g_ap-mples-bempl-A-x-hce', 't_Biig_gaps-between_wordshis-in_thce__his', 'ExamExaEple', '-Example-2mpsen3tenceea-', 'BWnXAxExxEA-xEaExaeX-Ethcele__1_', 'ps', 'a', 'isennmpsen3tencee3tennceintbet', 'ExampExaplelea', '-Exa_1_2_2\\nmple\\tE__Big_gaps-betwe2Big_gaps-between_words_xExxEA-xEaExae-in_thceeen_words-o_in_thce-xample-3', 'pmp', 'n-3tencehhce', 'rNfUBspa', '-Epxample-2-', 'wocrds', '_Ex-Examplxe_2xaA-B-*_--C-mplExa', 'rNfteUBspa', 'Bigmpsent3tencee-in_this_sentence', 'esen3tencempsen3tenEExceee3s-', '-mpl__Big-ExamExaple-2e', 'EEEpx', 't_Biig_gaps-between_wordshis-in_thce_t_his', '-x_xample_2', 'betmeples', 'th-Exa_1_2_2\\nm3sBig_gaps-between_words-in_thce', 'te', '__Big-ExamExaple-2ExamExbetweenlae', 'XRSIx', 'BWnXAXhX', '-A-gapsB--ExamEEpxamplemplExa', '__Big-1_2_2\\nmple\\tEx2ample-3_', 'A-gapsB-B*_--C', 'th-Big-gaps-bet_ween_words-in_this_senbtenc-A-gapsB-_eExa_1_2_2\\nmple\\tEx__3smp', 'mpsece-lExa', 'tth', '__mpsent3tencee-', 'ExagmEA-gapsB-*_---Caple', 'ggasen3tenp', 'mmpleEsen3tenc__Big_gaps-between_words-o_in_thce-temexample__Big_gaps-between_words-o_in_thce-1', 'm3sBig', 'Exa_1_2_', 'BWnXhceAh', 'smpl-A---a-a-a---b-b-b-c-c-c----x-ece-', 'XBWX', 'A-B-*_-C', '__Big_gaps-betwneen_words-o_in_thce-', '__a-', 'sp', 'mpsen3tenEExceees-', 'EExampEle', 'BWnXAXhEEpxamplX', '3tencehhce', '-A-B--*mm_--C-mExampleplExa', '-gaps--_C__msen3tenceinp_thcae', 'Exa_1_2_2_m_psen3tencee', 'lmmple', 'secn3tExa_1_2_2_mpsent3tenceeencte', 'Exaisennmpsen3tencee3tennceinbet1_2_', '-Exa_1_2_2\\nmple\\tE__Big_gaps-betwe2Big_gaps-between_words_xExxEA-xEaEhxae-in_thceeen_words-o_in_thce-xample-3', '-Examaple__2', 'tben-3tencehhcebt', 'betmEx-Example_2xaples', 'ebBig_gaps-between_words-in_this_sen3tenceetween', 'A-B-*---a-a-a---b-b-b-c-c-c---_--C', 'senbtenc', 'BWn_i_Big-XAh', 'mmpleEsen3tenc', 'Examplxe', 'th-Exa_1_2_2\\nmple\\tExampale-3smp', 'tthhX', 'sen3tenwce', 'EExEampEle', 'mpsen33tenceees', '__e_A-B--*mm_--C-mExampleplExa', 'tthhrwords', 'ebese3n-A-gap_-C_3__tsExxEa', 'Big_gaps-between_words-in_this_sebSentencte', '-x_ExamEEpxample_2__Example_2', 'Ex2ample', 'betms', '__Big_gaps-betweentthhcewords_words-o_in_thce-', 'smpl-A---a-a-a---b-b-b-c--c-c----x-ece-', 'm-le-ple', 'BWnXpAXhEEpxamplX', 'mmpleEsen3tenc__Big_gaps-beBWnX-Ahtween_words-o_in_thce-temexample__Big_gaps-between_words-o_in_thce-1', 'gga-A-x-sen3tencce', 'pl-A-B-*_--C__Big_gaps-between_words-in_this_sen3tence-_ee', 'mpsen3ttenceemmpleExample__1s', 'mpsecmpscellee-lExa', 'plmmple', 'lmmpletthhcewords', 'wo__Big-EEExample__1ds', 'Big_gaps-between_words-in_s_sentence', 'am', 'Big_gaps-bet_ween_words-in_tsentence', 'epBig_gap-mples_in_thce', 'psen3tencee', 'A-gapsB--**_s--C', 'Big_gaps-between_words-iExaen_this_sen3tenwce', 'th-Exa_1_2_2\\nmmple\\tExampale-3smp', 'meaxaplle', '-Exa_1_2_2\\nmple\\tE__Big_gaps-betwe2Big_gapmpsen3tenEExceees-between_words_xExxEA-xEaExae-in_thceeen_words-o_in_thce-xample-3', 'pBgig', 'A-gap--**_s--C', 'mmmpleExample', 'mExa_1_2_2_mpl__Big-ExamExaple-2ee', 'ExampleEx1', 'ggasenp3tenp', 'XBWXX', 'betwneen', '2hcee', 'BWnplX', '2xExa', 'pBgiBg', 'EA---a-a-a---b-b-b-c-c-c----x2_mpsent3tencee', 't_Biig_gaps__e__between_wordshis-in_thce__his', 'Big__gaps-between_words-in_this_sen3tence', 'bteet', 'mpsen33temmpleEmexample__Big_gaps-between_words-o_in_thce-1nceees', 'BWnAXAh', 'BWnXAXhEEpxampllX', 'senbtence', 'ampl3tencehhcele', 'mfKqrpAGAlpleE1', '-A-gaps-B-*_*Bigmpsent3tencee-in_this_sentence--C_-__', '__Bigi-', 'mmpleExA-_B--*_--Cample_p_1', '-Exa_1_2_2\\nmple\\tE__Big_gaps-betwe2Big_gaps-between_words_xEx-xEA-xEaExae-in_thceeen_words-o_in_thce-xample-3', 'smpl-A---a-a-a---bisennmpsen3tencee3tenncein-b-b-c--c-c----x-ece-', 'A-Bb-c-c-c---_--C', 'tbsenbtencet', 'Big_gaps-bet_weens-in_this_senbtenc-A-gapsBmplsExa_1_2_2_mpsen3tenEExceees-_e', 'Exaisennmpsen3tencee3tennceinbet1', '-xExxEA-xEaExae__Ethcele__1_', 'Bmpsent3tenceetween_words-', 'A-Bf-*_-mfKqrpAGApleE1C', 'crdsExamplxe', 'betmEx-Epxample_2xaples', 'A-gapsBmplsExa', 'mmmp', '_Big_gaps-between_words-Big-in_', '-A-B--ExamEA-gapsB-rNfUBspa*_---Caple*_--C-mplEx', 'mpsen33temmpleEe-1nceees', 'senbteenc', 'ExapleEx', 'thisebBig', 'mpl-A-C-x-', 'EamExbetwe-Ethcele__1_enlae', 'Exa_1_2_2_mpExample__1__Big-sen3tencee', 'ebBigmp', 'pBig_gap-*_--C-mples-ebSbetween_wo_rds-in_thce', 'E-Ethcele__1_enlae', 'mmmm', 'mpsen3ttenceemmpple', '1nceees']\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/141", "prompt": "\ndef file_name_check(file_name):\n    \n\n    if len(list(filter(lambda ch: ch.isdigit(), file_name))) > 3:\n        return \"No\"\n    f_list = file_name.split(\".\")\n    if len(f_list) != 2: return \"No\"\n    if len(f_list[0]) == 0: return \"No\"\n    if not f_list[0][0].isalpha(): return \"No\"\n    if f_list[1] not in [\"txt\", \"exe\", \"dll\"]: return \"No\"\n    return \"Yes\"\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef file_name_check(file_name):\n    \n\n    if len(list(filter(lambda ch: ch.isdigit(), file_name))) > 3:\n        return \"No\"\n    f_list = file_name.split(\".\")\n    if len(f_list) != 2: return \"No\"\n    if len(f_list[0]) == 0: return \"No\"\n    if not f_list[0][0].isalpha(): return \"No\"\n    if f_list[1] not in [\"txt\", \"exe\", \"dll\"]: return \"No\"\n    return \"Yes\"\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef file_name_check(file_name):\n    \n\n    if len(list(filter(lambda ch: ch.isdigit(), file_name))) > 3:\n        return \"No\"\n    f_list = file_name.split(\".\")\n    if len(f_list) != 2: return \"No\"\n    if len(f_list[0]) == 0: return \"No\"\n    if not f_list[0][0].isalpha(): return \"No\"\n    if f_list[1] not in [\"txt\", \"exe\", \"dll\"]: return \"No\"\n    return \"Yes\"\n\n", "raw_modification": "```python\n<code_start>\ndef file_name_check(file_name):\n    # Convert the file name to a list of characters to increase complexity\n    char_list = list(file_name)\n    \n    # Use a loop to count digits instead of filter and lambda\n    digit_count = 0\n    for ch in char_list:\n        if ch.isdigit():\n            digit_count += 1\n    if digit_count > 3:\n        return \"No\"\n    \n    # Split the file name and check conditions\n    f_list = file_name.split(\".\")\n    \n    # Use a loop to check the length of f_list instead of direct comparison\n    f_list_length = 0\n    for _ in f_list:\n        f_list_length += 1\n    if f_list_length != 2:\n        return \"No\"\n    \n    # Check if the first part of the split is empty\n    if len(f_list[0]) == 0:\n        return \"No\"\n    \n    # Use a loop to check if the first character is alphabetic\n    first_char_is_alpha = False\n    for i, ch in enumerate(f_list[0]):\n        if i == 0 and ch.isalpha():\n            first_char_is_alpha = True\n    if not first_char_is_alpha:\n        return \"No\"\n    \n    # Use a loop to check the file extension instead of direct membership test\n    valid_extensions = [\"txt\", \"exe\", \"dll\"]\n    extension_is_valid = False\n    for ext in valid_extensions:\n        if f_list[1] == ext:\n            extension_is_valid = True\n    if not extension_is_valid:\n        return \"No\"\n    \n    return \"Yes\"\n<code_end>\n```", "modification": "\ndef file_name_check(file_name):\n    \n    char_list = list(file_name)\n    \n    \n    digit_count = 0\n    for ch in char_list:\n        if ch.isdigit():\n            digit_count += 1\n    if digit_count > 3:\n        return \"No\"\n    \n    \n    f_list = file_name.split(\".\")\n    \n    \n    f_list_length = 0\n    for _ in f_list:\n        f_list_length += 1\n    if f_list_length != 2:\n        return \"No\"\n    \n    \n    if len(f_list[0]) == 0:\n        return \"No\"\n    \n    \n    first_char_is_alpha = False\n    for i, ch in enumerate(f_list[0]):\n        if i == 0 and ch.isalpha():\n            first_char_is_alpha = True\n    if not first_char_is_alpha:\n        return \"No\"\n    \n    \n    valid_extensions = [\"txt\", \"exe\", \"dll\"]\n    extension_is_valid = False\n    for ext in valid_extensions:\n        if f_list[1] == ext:\n            extension_is_valid = True\n    if not extension_is_valid:\n        return \"No\"\n    \n    return \"Yes\"\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['example.txt'], ['1example.dll'], ['s1sdf3.asd'], ['K.dll'], ['MY16FILE3.exe'], ['His12FILE94.exe'], ['_Y.txt'], ['?aREYA.exe'], ['/this_is_valid.dll'], ['this_is_valid.wow'], ['this_is_valid.txt'], ['this_is_valid.txtexe'], ['#this2_i4s_5valid.ten'], ['@this1_is6_valid.exe'], ['this_is_12valid.6exe4.txt'], ['all.exe.txt'], ['I563_No.exe'], ['Is3youfault.txt'], ['no_one#knows.dll'], ['1I563_Yes3.exe'], ['I563_Yes3.txtt'], ['final..txt'], ['final132'], ['_f4indsartal132.'], ['.txt'], ['s.'], ['example.py'], ['my.docx'], ['hello world.exe'], ['alice.123.txt'], ['abc123def.exe'], ['1script.bat'], ['validfile.txt'], ['.exe'], ['123.txt'], ['file.doc'], ['.ex'], ['heello world.exe'], ['ffile.docile.doc'], ['.exalice.12123.txt3.xtxte'], ['.exalice.123.txt'], ['.exmy.docx'], ['fle.doc'], ['1script.batt'], ['.exalic1script.bate.123.txt'], ['.exalice.123..exalice.123.tx.t'], ['my.dcx'], ['.exmy.docx.exe'], ['..ex'], ['abc123defexe'], ['hello world.exe.exmy.docx.exe'], ['alice.123.taxt.i.ex'], ['abcheello world.exe123defexe'], ['heell.exalice.12123.txt3.xtxteo world.exe'], ['.exalice.12123.ex.txt3.xtxt.e'], ['filc'], ['.eex'], ['alice.123.i.ex'], ['.e.ex'], ['.exal.123.txt'], ['123.ttxt'], ['.efile.doc.ex'], ['1script.ba.exet'], ['alice.123.i.1script.batex'], ['.exali123.ttxtc1script.bate.123.txt'], ['alice.123.i.exalice.123.txt'], ['hello world1script.bat.exe.exmy.docx.exe'], ['alice.exali123.ttxtc1script.bate.123.txt.123.i.ex'], ['.efile.dex'], ['alice.l12l3.i.exalice.123.txt'], ['.efil.exal.123.txte.dex'], ['validftile.txt'], ['1script.ba.eexert'], ['hello world1script.bat.exe.exmy.docx.exealice.12i.ex'], ['.exmy.docx.efil.exal.123.txte.dex.exe'], ['hehello world.exe.exmy.docx.exello world.exe'], ['1script.ba.xet'], ['.exali123.ttxtc1script.bate.123.tx.efil.exal.123.txte.dext'], ['.exali123.ttxtc1script.bate.123.tx.efil.exal.123.txte.defile.docxt'], ['FX'], ['.heello world.exeexalice.123..exalice.123.tx.t'], ['alice.123.i.exalice..123.txt'], ['file.dolc'], ['hehello world.exe.exmy.docx.exelwlo world.exe'], ['.exalict1script.bate.123.txt'], ['....ex'], ['validfilve.txtFX'], ['.exali123.ttxtc1script.bate.123.tx.efil.exal.123.txte.dex.exm1y.docxt'], ['....e.eexx'], ['mhello world.exe.exmy.docx.exey.dcx'], ['valfile.txit'], ['alicealice.exali123.ttxtc1script.bate.123.txt.123.i.ex.l12l3.i.exalice.123.txt'], ['.eex1script.ba.exet'], ['alice.l12validfile.txtl3.i.exalice.123.txt'], ['1.txt'], ['...ex'], ['.eeex'], ['.exmy.docx.FXexe'], ['.exali123.ttxtc1sc..exript.bate.123.tx.efil.exal.123.txte.dext'], ['hello worl.d.exe'], ['....e.eeheell.exalice.12123.txt3.xtxteo world.exe'], ['abcheelrld.exe123defexe'], ['alice.l12validfile.txtlalice.exali123.ttxtc1script.bate.123.txt.123.i.ex3.i.exalice.123.txt'], ['.exali123.ttxtc1scriptt.bate.123.txt'], ['.heello world.exheell.exalice.12123.txt3.xtxteo world.exeeexalice.123..exalice.123.tx.t'], ['.exalice.12121232d.efexexte'], ['.exalice.l12validfile.txtl3.i.exalice.123.txtal.123.txt'], ['.exalice.l12validfile.txtl3.i.my.docx'], ['.exhello worl.d.exealic1script.batFXe.12.txt'], ['.exmya.docx.efil.emy.docxxal.123.txte.dex.exe'], ['.exali123c.ttxtc1script.bate.123.txt'], ['.exali123alice.exali123.ttxtc1script.bate.123.txt.123.i.exc.ttxabc123defexetc1script.bate.123.txt'], ['alice.l12validflile.txtl3.i.exalice.123.ttxt'], ['1script.batt.exalic1script.bate.123.t'], ['.e.exali123.ttxtc1script.bate.123.tx.efil.exal.123.txte.dextfile.doc.ex'], ['.exalice.12123.txxtxte'], ['1script.bai.exet'], ['.exa.exalice.12123.txt3.xtxteli123.ttxtc1scriptt.bate.123.txt'], ['ffile.d.efile.doc.exocile.doc'], ['validfilalice.l12validflile.txtl3.i.exalice.123.ttxte.txt'], ['.efil.exal.validftile.txt123.txte.dex'], ['.eee'], ['.exalice.123.txt.exalice.123..exalice.123.tx.t'], ['.exal.123my.docx.txt'], ['.efile.dxoc.ex'], ['.exmy.docx.FX1script.ba.exetexe'], ['therearemorethan3digits1234567890inthisname.exe'], ['example.'], ['.example'], ['alreadyexists.txz'], ['\u00e9xample.exe'], ['.tx.to.'], ['example'], ['123.exe'], ['I_have_no_digits_or_dots'], ['abcd.txtt'], ['Qflg'], ['abctxtt'], ['examQflgple'], ['abcd.x.txtt'], ['.exam123.exeple'], ['I_have_n_dots'], ['abcd.x.txtt.tx.to.'], ['abctxatt'], ['e.example'], ['I_have_no_digits_or_dotsalreadyexists.txz'], ['alreadyexists.example.txz'], ['e'], ['1.exam123.exeple23.exe'], ['abcd.x.txtt.tx.to.I_have_no_digits_or_dots'], ['I_have_no_de.exampleigits_or_do_ts'], ['Qalreadyexists.txzflg'], ['abctxI_have_no_de.exampleigits_or_do_tsatt'], ['I_have_no_de.exampltherearemorethan3digits1234567890inthisnamae.exeeigits_or_do_ts'], ['I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts'], ['alralreadyexists.txzeadyexists.example.txz'], ['e.exampleabctxtt'], ['I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txz'], ['abctxI_have_no_de.exampleigits_or_do_I_have_no_de.exampltherearemorethaen3digits1234567890inthisnamae.exeeigits_or_tstsatt'], ['l\u00e9xample.exe'], ['T'], ['ab1.exam123.exeple23.exetxtt'], ['abcd.ctxxtt'], ['alreadI_have_n_dotsyexists.example.txz'], ['I_have_no_de.exaampltherearemorethan3digits1234567890inthisnamae.exeeigits_or_do_ts'], ['abct'], ['abctx\u00e9xample.exett'], ['therearemorethan3digits1.tx.to.234567890inthisname.exe'], ['I_have_n_dos'], ['examlplI_have_n_dose.'], ['lQflg'], ['123.I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tsexe'], ['I_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts'], ['therearemorethan3digits1.tx.to.23456123.exe7890inthisname.exe'], ['I_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tes'], ['\u00e9xample.exae'], ['Q'], ['ee.example'], ['.exam123.exeplee'], ['aabcd.x.txtt.tx.to.I_have_no_digits_or_dotsbct'], ['I_have_\u00e9xample.exaeno_digits_or_dotsalreadyexists.txz'], ['examlplexample._have_n_dose.'], ['.3.exeeplee'], ['.3.exeeplabcd.ctxxtt'], ['1.exaem123.exeple23.exe'], ['1.exexamQflgpleam123.exeple23.exe'], ['I_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tes'], ['CFP'], ['e.examplctxtt'], ['examlplexample._have_n_dose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txz'], ['lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_teslg'], ['lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattempleigits_or_do_teslg'], ['therearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exe'], ['example.T'], ['I_have_\u00e9xample.exaeno_digits_or_dotsalreadyexists.txzQ'], ['p.3.exeeplee'], ['abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exett'], ['I_have_no_digits_or_dotsaltreadyexists.txz'], ['I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxtt'], ['\u00e9xtherearemorethan3digits12345123.exe67890inthiisname.exeample.exae'], ['abt'], ['I_have_no_de.Qalreadyexists.txzf1.exam123.exmpleigits_or_do_ts'], ['exam123.exeple'], ['1.exe.examplctxttaem123.exeple23.exe'], ['.exam123.exepleeexample'], ['ee'], ['therearemoreI_have_n_dotsthan3digits1234567890inthisname.exe'], ['aabcd.xI_have_no_digits_or_dotsbct'], ['p.3.exeepleeabcd.xt.txtt.tx.to.'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_teslg3.exeepleeabcd.xt.txtt.tx.to.'], ['\u00e9xampl1.exaem123.exeple23.exee.exae'], ['oI_have_no_digits_or_dots'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.'], ['I_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQ'], ['alreadI_have_ists.example.txz'], ['I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQzflgists.txz'], ['alreadI_have_ists.example.txzee'], ['CF'], ['ealreadI_hlave_ists.example.txz'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesflgpleam123.exeple23.exe'], ['alralreadyexists.txzeadyexiI_have_n_dotssts.example.txz'], ['1.exexamQflgpleam123.exeple23.exeabctxatt'], ['therearemorethan3digits1.tx.to.23456i7890inthisname.exe'], ['p.3.exeepleealralreadyexists.txzeadyexiI_have_n_dotssts.example.txzabcd.xt.txtt.tx.to.'], ['p.lQflg3.exeeplee'], ['eealreadI_hlave_ists.example.txzxample'], ['.3.exeeplabcd.ctp.lQflg3.exeepleexxtt'], ['therearemexample.Torethan3digits1.tx.to.23456i7890inthisname.exe'], ['abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct'], ['examlplexample._have_n_dose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txnz'], ['e.examplleabctxtee.examplet'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxttdo_ts'], ['1.exexamQflgpleam123.exepltherearemorethan3digits1.tx.to.23456i7890inthisname.exee23.exeabctxatt'], ['exmple'], ['abctx\u00e9xeealreadI_hlave_ists.example.txzxampleample.exett'], ['ab1.exam123.exeple23.exetxett'], ['.exam12.tx.to.xepl'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.123.exe'], ['exmmple'], ['abctI_have_n_dotsxI_have_no_de.exampleigits_or_do_tsatt'], ['I_have_no_dde.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxttdo_ts'], ['alreadI_have_n_dotsyexists.example.txvz'], ['I_have_no_de.QalreadyabctxI_havex_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tes'], ['alreadI_have_n_dotsyexists.exam1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesflgpleam123.exeple23.exeple.txvz'], ['thaabcd.x.txtt.tx.to.I_have_no_digits_or_dotsbcterearemorethan3digits1234567890inthisname.exe'], ['therearemorethan3digits123456890inthisname.exe'], ['examplee.exampleabctxtt'], ['alralreadyexists.txzeadyexiexample.sts.example.txz'], ['therearemorethan3digits1.tx.to.23456789r0inthisname.exe'], ['1.exaem123.exeple23.exee'], ['atbcd.txtt'], ['I_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigitsalreadI_have_ists.example.txz_or_do_ts'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23.exe'], ['ealreadI_hlavtherearemorethan3digits123456890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['I_haabctxI_have_no_de.exampleigits_or_do_tsattve_no_digits_Qalreadyexists.txzflgor_dotsalreQzflgists.txz'], ['.exampleealreadI_hlave_ists.example.txz'], ['\u00e9xa1mpl1.exaem123.exeple23.exee.exae'], ['ealrep.3.exeepleeabcd.xt.txtt.tx.to.adI_hlave_ists.example.txz'], ['1.exaem123.exeple2ee'], ['.exam'], ['mple.'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz'], ['NVPsZuOM'], ['.3.exeeplabcd.ctp.lQflp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.g3.exeepleexxtt'], ['alralreadyexists.txzeadyexistabctxI_have_no_de.exampleigits_or_do_tsatts.example.p.3.exeepleez'], ['alreadI_have_n_dotsyexists.example.txI_have_no_de.exampleigits_or_do_tsvz'], ['.3.exeeplabcd.ctp.lQflp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txQalreadyexists.txzflgzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.g3.exeepleexxtt'], [''], ['Qflgexmple'], ['alreadI_have_n_dotsyexistsI_have_\u00e9xample.exaeno_digits_or_dotsalreadyexists.txz.example.txvz'], ['therearemorethan3digits1.tx.toabct.234alralreadyexists.txzeadyexiexample.sts.example.txz56123.exe7890inthisname.exe'], ['\u00e9xampl1.exaem123abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exae'], ['alreadI_have_n_dotsyeCFxists.example.txvz'], ['I_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exa123.exeple23.exempleigits_or_do_tes'], ['1.exexamQflgpl123.exeeam123.exepltherearemorethan3digits1.tx.to.23456i7890inthisname.exee23.exeabctxatt'], ['I_have_no_digits_Qalreadyexixsts.txzflgor_dotsalreQflgists.txz'], ['abctx\u00e9xaoI_have_no_digits_or_dotsmple.exett'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctabctx\u00e9xample.exettxxttdo_ts'], ['1.exexamQI_have_nao_de.Qalream123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23.exe'], ['therearemorethan3digealreadI_hlave_ists.example.txzits1234567890inthisname.exe'], ['.exam123.e2xeple'], ['therearemorethan3digits1.tx.to.23456123.exe7890inthisnameabcd.ctxxttexe'], ['\u00e9xample.e.3.exeeplabcd.ctp.lQflg3.exeepleexxttxae'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalrieadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz'], ['\u00e9xample.e.3.exeeplI_have_\u00e9xample.exaeno_digits_or_dotsalreadyexists.txzQabcd.ctp.lQflg3.exeepleexxttxae'], ['alreadI_have.tx.to._ists.ep.3.exeepleexample.txzee'], ['.exam112.tx.to.xepl'], ['I_have_no__or_dotsaltreadyexistsexample..txz'], ['alreadyexists.exampp.3.exeepleetxz'], ['p.3.exeepleeabcd.xto.'], ['therearemorethant3digits1.tx.to.234567890inthisname.exe'], ['therearemoreethan3digits123456890inthisname.exe'], ['alralereadyexists.txzeadyexistabctxI_have_no_de.exampleigits_or_do_tsatts.example.p.3.exeepleez'], ['I_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexp.lQflg3.exeepleeis1ts.txzf1.exam123.exeple23.exempleigits_or_dos'], ['\u00e9xample.pexaae'], ['I_have_no_de.QalreadyabctxI_havex_no_de.exampleigits__or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tes'], ['1.exe.examplctxttaem123.exeple23xe'], ['1.exaem123..exeple2ee'], ['abcQalreadyexists.ttxzflxgt'], ['e.examplleabctxtee.extherearemorethan3digits1.tx.to.23456i7890inthisname.exeamplet'], ['eealreadI_hlave_iststxzxample'], ['.tabctx\u00e9xample.exettxexamlplexample._have_n_dose..to.'], ['p.3.exeepleealralreadyexists.txzeadyexiI_have_n_dotssts.example.txzabcde.exampleabctxtt.xt.txtt.tx.to.'], ['alreadI_havab1.exam123.exeple23.exetxette_ists.example.txzee'], ['\u00e9xample.e.3.exeeplabcd.ctp.lQflg3.exeepleexxttxaeF'], ['alreadI_have_n_dotsyexists.exoample.txvz'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesflgplea1.exaem123.exeple2eem123.exeple23.exe'], ['.examplempmle.'], ['examplee.'], ['I_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exemplehigitsalr_do_ts'], ['p.3.eI_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigitsalreadI_have_ists.example.txz_or_do_tsxeeplee'], ['abcttx\u00e9xample.exett'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigitsexamplee._or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exz'], ['therearemorethan3digits1.tx.to.234561eabcd.ctxxttexe'], ['at'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.etherearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz'], ['examxm123.exeple'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.ethefrearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxdttdo_ts'], ['therearemrorethan3digits1.tx.to.234561eabcd.ctxxttexe'], ['ealreadI_hlavthe.tabctx\u00e9xample.exettxexamlplexample._have_n_dose..to.rearemorethan3digits123456890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['exap.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to..T'], ['atat'], ['examlplexa.3.exeeplabcd.ctp.lQflg3.exeepleexxttle._have_n_dose.'], ['.3.e123.exexeeplabcd.ctp.eexxtt'], ['alQfllgtbcd.txtt'], ['alreadI_have_ists.example.txe.examplez'], ['e.examplleabctxtee.exthere.aremorethan3diabctxttname.exeamplet'], ['e.exampl'], ['1.exe.examplctxttaem123.etherearemorethan3digits1234567890inthisname.exexeple23.exe'], ['NVZuOMM.3.exeeplee'], ['I_have_no_de.exampltherearemoretha\u00e9xampl1.exaem123abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exaen3digits1234567890inthisnamae.exeeigits_or_do_ts'], ['examexamxm123.exeple.'], ['\u00e9xampl1.exaem123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exae'], ['I_have_no_de.QalreadyabctxI_havex_no_de.exampleigits__or_do_tsattexis1ts.txzf1.exam123.exeple23.exemplei1.exe.examplctxttaem123.exeple23.exegits_or_do_tes'], ['oI__have_no_digits_or_dots'], ['I_have_no_dtigits_Qalreadyexists.txzflgor_dotsalreQzflgists.txz'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123example..exeple23.exempleigits_or_do_ts.3.exI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_teseeplabcd.ctxxttdo_ts'], ['e.exa'], ['ab'], ['alreadyyexists.exampp.3.exeepleetxz'], ['1.examlplexample._have_n_dose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txzexexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23.exe'], ['I_have_no_de.exaaTmpltherearemorethan3digits1234567890inthisnamae.exeeigits_or_do_ts'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.eexample.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz'], ['eaalreadI_hlave_ists.example.txz'], ['alreadI_have_atatn_dotsyexists.exoample.txvz'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exedple23.exempleigits_or_do_teslg3.exeepleeabcd.xt.txtt.tx.to.'], ['\u00e9xample.e.3.exeepltherearemorethan3digits1.tx.to.23456789r0inthisname.exe_digitI_have_no_de.QalreadyabctxI_havex_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tess_or_dotsalreadyexists.txzQabcd.ctp.lQflg3.exeepleexxttxae'], ['ab1.exam123.exeple23.exeett'], ['alreadI_have_iists.example.txzee'], ['ots'], ['bab'], ['therearemoreI_have_n_dotsthan3digits1234567890inthisnamabctxI_have_no_de.exampleigits_or_do_I_have_no_de.exampltherearemorethaen3digits1234567890inthisnamae.exeeigits_or_tstsatte'], ['I_hQave_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts'], ['\u00e9xampl1.exaeam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exae'], ['I_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzfe1.I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxttpexam123.exeple23.exempleigits_ores'], ['.examalreadI_have_n_dotsyexists.example.txz123.e2xeple'], ['alrea.exam123.e2xeples.txz'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_d.3.exeeplabcd.ctp.lQflp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeplQe23.exempleigits_or_do_txtt.tx.to.g3.exeepleexxtto_tesflgpleam123.exeple23.exe'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesflgplea1.exaem123.exeple2eem123.exI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_teseple23.exe'], ['abcd.x.txtt.txe.to.I_have_no_digits_or_dots'], ['aabcd.x.txtt.tx.to.I_alreadyyexists.exampp.3.exeepleetxzhav_doct'], ['I_have_no_de.exampltherearemoretha\u00e9xampl1.exaem123abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexistealrep.3.exeepleeabcd.xt.txtt.tx.to.adI_hlave_ists.example.txzs.txzQct.exeple23.exee.exaen3digits1234567890inthisnamae.exeeigits_or_do_ts'], ['I_have_mno_de.Qalreab1.exam123.exeple23.exetxttadyexists.txzf1.exam123.exeple23.exemplehigitsalr_do_ts'], ['\u00e9xampl1.exaeam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple2'], ['.exxaem'], ['e.examplcttxtt'], ['examxem123.exeplabctx\u00e9xeealreadI_hlave_ists.example.txzxampleample.exette'], ['1.exxaem123.exeple2ee'], ['there.aremorethan3digits1.tx.to.234567890inthisname.exe'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abthave_n_dose..to.rearemorethan3digits123456890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['I_haveI_n_dots'], ['\u00e9xa1mplx1.exaem123.exeple23.exee.exae'], ['NPsZuOM'], ['eaalreadI_hlave_ists.examtherearemorethan3digits1.tx.to.234567890inthisname.exeple.txI_have_mno_de.Qalreab1.exam123.exeple23.exetxttadyexists.txzf1.exam123.exeple23.exemplehigitsalr_do_tsz'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexistsalralreadyexists.txzeadyexiI_have_n_dotssts.example.txzm.txzf1.exam123.exeple23.exempleigitthaabcd.x.txtt.tx.to.I_have_no_digits_or_dotsbcterearemorethan3digits1234567890inthisname.exes_or_do_ts.3.exeeplabcd.ctxxdttdo_ts'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abthave_n_dose..to.rearemorethan3digits123456890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_rists.example.txz'], ['therearemorethan3digits1.tx.toabct.2abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exettexample.txz56123.exe7890inthisname.exe'], ['I_hQave_no_de.Qalreadyexists.ts'], ['abctaxatt'], ['p.lQQfI_have_no_de.Qdo_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exemple.ttxexamlplexample._abthave_n_dose..to.rearemorethan3digits123456890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_rists.example.txz'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abthave_n_dose..to.rearemorethan3digits12345abctaxatt6890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['there.aremorethan3digitms1.tx.to.234567890inthisname.exe'], ['alreadI_have.tx.to._ists.ep.3.exeepleexample.txzeebab'], ['e.examplmeabctxtt'], ['12I_have_no_digits_or_dots3.ex_\u00e9xampl1.exaeam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exaee'], ['alreadI_have_n_dotsyexists.example.txI_have_no_de.exampleigits_.exam112.tx.to.xeplor_do_tsvz'], ['I_haabctxI_have_no_de.exampleigzflgists.txz'], ['I_haxempleigits_or_dxo_ts.3.exeeplabcd.ctxxttdo_ts'], ['I_haxempleigits_or_dxo_ts.3.exeeplabcd.ctxxtabttdo_ts'], ['1.exaem123..exepealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.eexample.txzttexies1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txzle2ee'], ['exaQmple.T'], ['1.exexamQI_have_no_de.Qalrenadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesflgpleam123.exeple23.exe'], ['abcd.x.txtt.txe.to.I_have_no_digits_aobr_dots'], ['1.exexamQI_have_nao_de.Qalream123ts_or_do_tesflgpleam123.exeple23.exe'], ['\u00e9xampl1.etherearemoreethan3digits123456890inthisname.exexaem123abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exae'], ['1.exe.examp.3.exeeplabcd.ctp.lQflp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.g3.exeepleexxttlctxtt\u00e9xample.exaeaem123.exeple23xe'], ['I_have_no_dtigits_Qalreadyexists.txzflgor_dotasalreQzflgists.txz'], ['I_have_mno_de.Qalreab1.exam123.exeple23.exetxttadyexists.txzf1.exam123.exeple23.exemplehigitsalr_do_ts\u00e9xample.pexaae'], ['I_haxempleigits_or_dxo_ts.3.exeeplabcd.cexamlplI_have_n_dose.txxttdo_ts'], ['therearemor'], ['NVPsZM'], ['I_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzfe1.I_have_no_de.QalreadyexistsI_have_no_de.QalreadyabctxI_havex_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxttpexam123.exeple23.exempleigits_ores'], ['I_haabctxI_have_no_de.exampleigzflgiaabcd.x.txtt.tx.to.I_have_no_digits_or_dotsbctsts.txz'], ['.eam'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txztteabctI_have_n_dotsxI_have_noleigits_or_do_txtt.tx.to.123.exe'], ['alreadye1.exe.examp.3.exeeplabcd.ctp.lQflp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.g3.exeepleexxttlctxtt\u00e9xample.exaeaem123.exeple23xe.txz'], ['abctx\u00e9xe.exett'], ['I_have_no_dae.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tes'], ['\u00e9xample.e.3.exeeplabcd.ctp.lQflg3.exe'], ['\u00e9xampl1.exaem123abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQc\u00e9xample.e.3.exeeplabcd.ctp.lQflg3.exeepleexxttxaet.exeple23.exee.exae'], ['alralreadyexists.txzeadyexistabctxI_have_no_de.example_tsatts.example.p.3.exeepleez'], ['alreadI_have_n_dotsyexists.exam1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesflgpleam123.exeple23.exeple.txvzb'], ['alreadI_havab1.exam123Qalreadyexists.txzflg.exeple23.exetxette_ists.example.txzee'], ['therearemorethan3digits1.tx.to.9r0inthisname.exe'], ['F'], ['exampleec.exampleabctxtt'], ['therearemorethan3digits1.tx.toabct.2abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exettexample.txz56123.exe7890insthisname.exe'], ['e.examplcttxtet'], ['alreadI_have.tx.to._ists.ep.3.exeepleeI_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxdttdo_tsxample.txzee'], ['cd.x.NVPsZMtxtt'], ['I_have_no_de.QalreadyabctxI_have_no_de.examipleigits_or_do_tsattexp.lQflg3.exeepleeis1ts.txzf1.exam123.exeple23.exempleigits_or_dos'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exdam123.exedple23.exempleigits_or_do_teslg3.exeepleeabcd.xt.txtt.tx.to.'], ['oI_have_no_digits_o'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abcttx\u00e9xample.exettabthave_n_dose..to.rearemorethan3digits12345abctaxatt6890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['alreadI_have_n_dotsyexists.exa1.exe.examplctxttaem123.exeple23xemple.txvz'], ['exam\u00e9xample.e.3.exeeplabcd.ctp.lQflg3.exexm123.exeple'], ['alreadI_have_n_dotsyI_have_no_de.exaaTmpltherearemorethan3digits1234567890inthisnamae.exeeigits_or_do_tseCFxists.example.txvz'], ['I_have_no_dtigits_Qalreadyexists.txztxz'], ['therearemor1.exe.examplctxttaem123.exeple23xeethan3digits1.tx.to.23456123.exe7890inthisnameabcd.ctxxttexe'], ['abctx\u00e9xeexaQmple.Ttt'], ['eealreadI_hlave_istI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exa123.exeple23.exempleigits_or_do_tess.example.txzxample'], ['I_have_mno_de.Qalreab1.exam123.exeple23.exetxttadyexists.txzf1.exam123.exeple23.exemplehigitsalr_do_ts\u00e9xatherearemrorethan3digits1.tx.to.234561eabcd.ctxxttexemple.pexaae'], ['1.exexamQflgpleealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.etherearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txzam123.exple23.exe'], ['p.lQQfI.eameple23.exempleigits_or_do_txtt.tx.to.'], ['oI__have_no_digits_or_dotrs'], ['abctabcd.x.txtt.txe.to.I_have_no_digits_or_dots'], ['alreadyextists.txz'], ['examlplexample._have_n_dose.I_hp.3.exeepleeabcd.xto.salreQflgists.txnz'], ['ex\u00e9xampl1.etherearemoreethan3digits123456890inthisname.exexaem123abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exaeple'], ['12I_have_no_digits_or_dots3.ex_\u00e9xampl1.exaeam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.ep.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txztteabctI_have_n_dotsxI_have_noleigits_or_do_txtt.tx.to.123.exexeple23.exee.exaee'], ['I_have_mno_de.Qalreab1.exam123.exeplem23.exetxttadyexists.txzf1.exam123.exeple23.exemplehigitsalr_do_ts'], ['therearemexample.T.to.23456i7890inthisname.e'], ['.31.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23.exe.e123.exexeeplabcd.ctp.eexxtt'], ['alreadI_have_n_dotsyeCFxists.nexample.txvz'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexiNVZuOMM.3.exeeplees1ts.txzf1.exam123.exedple23.exempleigits_or_do_teslg3.exeepleeabcd.xt.txtt.tx.to.'], ['lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam12its_or_do_teslg'], ['ealhreadI_hlave_ists.example.txz'], ['therearemoreI_have_n_dotabcQalreadyexists.ttxzflxgtsthan3digits1234567890inthisname.exe'], ['\u00e9xample.e.3.exeeplaexaQmple.Tbcd.ctp.lQflg3.exeepleexxttxae'], ['1.exe.examplctxttaem3123.exeple23xe'], ['therearemor1.exe.examplctxttaem123.exeple23xeethan3digits1.tx.to.23456123.exe7890inthisnameabcd.ctxxttI_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigitsalreadI_have_ists.example.txz_or_do_tse'], ['examlplexample._have_n_I_have_no_digits_or_dotsaltreadyexists.txzdose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txnz'], ['\u00e9xa1mpl1.exaem123.exoI__have_no_digits_or_dotrseple23.exee.exae'], ['therearemor1.exe.examplctxttaem123x.exeple23xeethan3digits1.tx.to.23456123.exe7890inthisnameabcd.ctxxttexe'], ['NPsZ1.exexamQI_have_nao_de.Qalream123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23.exeuOM'], ['exam1ple'], ['p.3.exeepleealralreadyexists.txzeadyexiI_have_n_dottssts.example.txzabcde.exampleabctxtt.xt.txtt.tx.to.'], ['I_have_no_dtigits_Qalreadyexists.txzflgor_dotsalreQzflgistI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exa123.exeple23.exempleigits_or_do_tess.txz'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23e.exe'], ['.ep.3.exeepleealralreadyexists.txzeadyexiI_have_n_dotssts.example.txzabcde.exampleabctxtt.xt.txtt.tx.to.am'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleirtdo_ts'], ['I_have_mno_de.Qalreab1.examlplexample._have_n_I_have_no_digits_or_dotsaltreadyexists.txzdose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txnzs\u00e9xample.pexaae'], ['\u00e9xampl1.exaI_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tseam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exae'], ['.exam112.tx.toI_have_no_digits_oepl'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.texettxexamlplexample._abcttx\u00e9xample.exettabthave_n_dose..to.rearemorethan3digits12345abctaxatt6890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['Otherearemor1.exe.examplctxttaem123.exeple23xeethan3digits1.tx.to.23456123.exe7890inthisnameabcd.ctxxettI_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigitsalreadI_have_ists.example.txz_or_do_tseKI'], ['I_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigitsalreadI_have_istss.example.txz_or_do_ts'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexistsalralreadyexists.txzeadyexiI_have_n_dotssts.example.txzm.txzf1.exam123.exeple23.exempleigitthaabcd.x.txtt.tx.to.I_have_no_digits_or_dotsbcterearemorethan3digits1234567890inthisalralreadyexists.txzeadyexistabctxI_have_no_de.exampleigits_or_do_tsatts.example.p.3.exeepleezname.exes_or_do_ts.3.exeeplabcd.ctxxdttdo_ts'], ['\u00e9x'], ['tI_hQave_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tsherearemorethan3digits1.tx.to.23456123.exe7890inthisname.exe'], ['examlplexample._have_n_dose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalrexamplee.exampleabctxtteQflgists.txz'], ['\u00e9xample.e.3.exeeplabcd.ctp.lQflg3.exeepleexxttexaeF'], ['exaexamplee.exampleabctxttmlplI_have_n_dose.'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_d.3.exeeplabcd.ctp.lQflp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeplQe2e3.exempleigits_or_do_txtt.tx.to.g3.exeepleexxtto_tesflgpleam123.exeple23.exe'], ['1.exam123.exeple23\u00e9xampl1.exaeam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.t.exeple23.exee.exaee'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple.23e.exe'], ['I_have_no_de.exampleigits_or_I_have_no_de.Qtalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctabctx\u00e9xample.exettxxttdo_ts'], ['examI_hQave_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tslplI_have_n_dose.'], ['examlplexample._have_n_I_have_no_digits_or_dotsaltreadyexists.txzdose.I_have_no_digitsi_Qalreadyexists.txzflgor_dotsalreQflgists.txnz'], ['aalreadI_have_n_dotsyexists.exa1.exe.examplctxttaem123.exeple23xemple.txvzbcd.ctxxtt'], ['gudadVYH'], ['therearemor1.exe.examplctxttaem123x.ep.3.exeepleealralreadyexists.txzeadyexiI_have_n_dotssts.example.txzabcd.xt.txtt.tx.to.xeple23xeethan3digits1.tx.to.23456123.exe7890inthisnameabcd.ctxxttexe'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_t_xtt.tx.to.'], ['1.exexamQI_have_nao_de.Qalream1alreadI_have_atatn_dotsyexists.exoample.txvz23ts_or_do_tesflgpleam123.exeple23.exe'], ['abI_haveI_n_dots1.elxam123.exeple23.exetxett'], ['ab1.examplpe23.exeett'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abcttx\u00e9xampI_haxempleigits_or_dxo_ts.3.exeeplabcd.ctxxtabttdo_tsle.exettabthave_n_dose..to.rearemorethan3digits12345abctaxatt6890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['exp.lQQfI.eameple23.exempleigits_or_do_txtt.tx.to.amplee.'], ['abcd.ct567890inthisname.exett'], ['NOVPsZuOM'], ['1.exexamQI_have_no_deealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.ethefrearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23.exe'], ['CCF'], ['exam123.etherearemoreethan3digits123456890inthisname.exexeple'], ['I_hQave_n_de.Qalreadyexistse.ts'], ['alralreadyexists.txzeadyexiexample.ss.example.txz'], ['therearemoreI_have_n_dotsthan3digits1234567890inthisname.exealreadI_have_n_dotsyexists.example.txvz'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abthave_n_dose..to.rearemorethan3digits123456890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_istsabcttx\u00e9xample.exett.example.txz'], ['eexaQmple.T'], ['p.3.exeepleealralreadyexists.txzeadyerxiI_have_n_dotssts.example.txzabcd.xt.txtt.tx.to.'], ['alreadI_have_atatn_dotsyexists.exmple.txvz'], ['abeealreadI_hlave_iststxzxamplectx\u00e9xeexaQmple.Ttt'], ['abcdI.x.txtt.txe.to.I_have_no_digits_or_dots'], ['.exampleealreadI_hlave_ists.example.examplempmle..txz'], ['I_have_no_de.QalreadyabctxI_atathave_no_de.examipleigits_or_do_tsattexp.lQflg3.exeepleeis1ts.txzf1.exam123.exeple23.exempleigits_or_dos'], ['ex\u00e9xampl1.etherearemoreethan3digits123456890inthisname.exexaem123abI_have_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exoee.exaeple'], ['e.exampltleabctxtee.examplet'], ['ab1.exam123.exeplep.3.exeepleealralreadyexists.txzeadyexiI_have_n_dotssts.example.txzabcd.xt.txtt.tx.to.23.exeett'], ['therearemorethan3digits123456890inththere.aremorethan3digitms1.tx.to.234567890inthisname.exeisname.exe'], ['.3.exeeplabcd.ctp.lQflg3.exeepleexxttp.3.exeeplee'], ['alreadI_have.tx.to._ists.ep.3.exeepleexample.txzeebababctx\u00e9xepealreadI_hlave_ists.example.txzxampleample.exett'], ['\u00e9xample.e.3.xexeeplaexaQmple.Tbcd.ctp.lQflg3.exeepleexxttxae'], ['I_have_no_de.Qalre1.exam123.exeple23\u00e9xampl1.exaeam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.t.exeple23.exee.exaeeadyabctxI_havex_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tes'], ['I_have_no_de.Qalreadyexists.ttherearemorethan3digits1234567890inthisname.exexzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxtt'], ['tI_hQave_no_de.Qalreadyexists.txzf1.e.examplctxttexam123.exeple23.exempleigits_or_do_tsherearemorethan3digits1.tx.to.23456123.exe7890inthisname.exe'], ['I_haeve_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam1233.exempleigits_or_do_tesflgpleam123.exeple23e.exe'], ['.3.exeeplabcd.ctp.lQflg3.exeeplee'], ['examQflgpltherearemorethan3digits1.tx.to.23456i7890inthisname.exee'], ['1.exe.exI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesamplctxttaem123.exeple23xe'], ['eealrxeadI_have_n_dotsyeCFxists.nexample.txvz'], ['alreaadI_have_n_dotsyexists.exoample.txvz'], ['I_haabctxI_have_no_de.exampleigits_or_do_tsattve_no_digits_alreadyexists.txzflgor_dotsalreQzflgists.txz'], ['ab1.exam123.exeple23.exetxettherearemorethant3digits1.tx.to.234567890inthisname.exet'], ['I_haxempleigits_or_dxo_alreadI_have.tx.to._ists.ep.3.exeepleeI_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxdttdo_tsxample.txzeets.3.exeeplabcd.ctxxttdo_ts'], ['1.exe.exI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempNVZuOMM.3.exeepleeleigits_or_do_tesamplctxttaem123.exeple23xe'], ['thaabcd.x.txtt.tx.to.I_have_no_digits_or_dotsbcterearemorethan.exe'], ['I_have_nalreaadI_have_n_dotsyexists.exoample.txvzos'], ['alreadyyexists.'], ['there.aremorethan3digitms1.tx.to.234567890ointhisname.exe'], ['eealreadI_hlave_eistse.exaImpale.txzxample'], ['gudadVtherearemexample.T.to.23456i7890inthisname.eH'], ['abctx\u00e9xeexTaQmple.Ttt'], ['1.exaem2123.exeple2ee'], ['alrea_have_n_dotsyeCFxists.example.txvz'], ['I_hQave_no_de.Qalreadyexists.txzf1.exam123.exeple23.ex.empleigits_or_do_ts'], ['ba.exampleealreadI_hlave_ists.example.txz'], ['.exam123.e2xepl1xe'], ['tI_hQave_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tsherearemorethan3digits1.tx.to.23456123..exe7890inthisname.exe'], ['p.3.exeepleealralreadyexists.txzeadyerxiI_have_n_dotssts.example.txxzabcd.xt.txtt.tx.to.'], ['\u00e9xamI_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxttple.exae'], ['1.exaem2123.exeple1.exexamQI_have_no_de.Qalreadyexis1ts.tpxzf1.exam1233.exempleigits_or_do_tesflgpleam123.exeple23e.exe2ee'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_t_xtt.tx.toalralreadyexists.txzeadyexistabctxI_have_no_de.exampleigits_or_do_tsatts.example.p.3.exeepleez.'], ['therearemorethan3digi9ts1.tx.to.9r0inthisname.exe'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abthave_n_dose..to.rearemorethan3digits123456890inthisnamtep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['I_have_no_de.QalreadyabctxI_have_no_de.example1.exe.examplctxttaem123.exeple23xeigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tes'], ['ealCCFtxexamlplecttx\u00e9xampI_haxempleigits_or_dxo_ts.3.exeeplabcd.ctxxtabttdo_tsle.exettabthave_n_dose..to.rearemorethan3digits12345abctaxatt6890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['alreadI_have_atatn_therearemoreI_have_n_dotsthan3digits1234567890intdhisnamabctxI_have_no_de.exampleigits_or_do_I_have_no_examplee.de.exampltherearemorethaen3digits1234567890inthisnamae.exeeigits_or_tstsattedotsyexists.exmple.txvz'], ['exmmleealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.etherearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.atxz'], ['I_haxempleigits_or_dxo_ts.3.exeeplabcdc.ctxxtabttdo_ts'], ['1.exexamQI_have_no_de.Qalrenadyexis1ts.txzf1.exam123.exeple23.exempleigitstherearemorethan3digits1.tx.toabct.2abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exettexample.txz56123.exe7890inthisname.exe_or_do_tesflgpleam123.exeple23.exe'], ['I_have_no_de.QalreadyabctxI_have_no_de.examipleigits_or_do_tsattexp.lQflg3.exeepleeis1ts.txzf1.exam123.exeple23.exemealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abthave_n_dose..to.rearemorethan3digits123456890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_istsabcttx\u00e9xample.exett.example.txzpleigits_or_dos'], ['therearemoexamlplexample._have_n_dose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txnzrethan3digits1.tx.toabct.2abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exettexample.txz56123.exe7isname.exe'], ['abctxI_have_no_de.extherearemorethan3digits1.tx.toabct.2abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exettexample.txz56123.exe7890insthisname.exeampleigits_or_do_tsatt'], ['ex1ple'], ['I_ahave_no_digits_Qalreadyexixsts.txzflgor_dotsalreQflgists.txz'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.xQalreadyabctxI_have_no_de.etherearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz'], ['aabcd.xI_have_noNVZuOMM.3.exeeplee_digits_or_dotsbct'], ['\u00e9xa1mpl1.exaem123.exoI__have.exae'], ['1.exexamQflgpleam123p.exeple23.exeabctxatt'], ['abctxat1.exexamQI_have_no_de.Qalrenadyexis1ts.txzf1.exam123.exeple23.exempleigitstherearemorethan3digits1.tx.toabct.2abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exettexample.txz56123.exe7890inthisname.exe_or_do_tesflgpleam123.exeple23.exet'], ['therearemorethant3digits1.tx.to.234567890inthiI_have_mno_de.Qalreab1.examlplexample._have_n_I_have_no_digits_or_dotsaltreadyexists.txzdose.I_have_no_digits_Qalreadyexists.txzflgor_dotsalreQflgists.txnzs\u00e9xample.pexaaesname.exe'], ['ab.exxaemctx\u00e9xe.exett'], ['I_e.examplctxttalreadyexistse.ts'], ['e.examplleabctxtebe.examlet'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexiNVZuOMM.3.exeeplees1lts.txzf1.exam123.exedple23.exempleigits_or_do_teslg3.exeepleeabcd.xt.txtt.tx.to.'], ['alreadI_have_n_dotsyeC\u00e9xampl1.exaem123.exeple23.exee.exaeFxists.nexample.txvz'], ['e.examplleabctxtee.exthere.aremorexamlplexample._have_n_I_have_no_digits_or_dotsaltreadyexists.txzdose.I_have_no_digitsi_Qalreadyexists.txzflgor_dotsalreQflgists.txnzethan3diabctxttname.exeamplet'], ['p.3.exeepleeabcd.xt.txtt.txp.to.'], ['I_hQave_n_de.yexeistse.tsexett'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.texettxexamlplexample._abcttx\u00e9xample.exettts.example.txz'], ['1.exexamQflgpleealreadI_hlave_is\u00e9xamI_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxttple.exaets.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.etherearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txzam123.exple23.exe'], ['NZPsZ1.exexamQI_have_nao_de.Qalream123.exeplee23.exempleigits_or_do_tesflgpleam123.exeple23.exeuOM'], ['.3.exctp.lQflg3.exeepleexxtt'], ['aldyexists.txzeadyexiI_have_tn_dotssts.example.txz'], ['1.exe.examp.3.exeeplabcd.ctp.lQflp.lQQfI_eadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.g3.exeepleeeaem123.exeple23xe'], ['therearemor1.e\u00e9xampl1.exaI_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tseam123abI_hCFave_\u00e9xample.exaen1.exam123.exeple23.exeo_digits_or_dotsalreadyexists.txzQct.exeple23.exee.exaexe.examplctxttaem123.exeple23xeethan3digits1.tx.to.23456123.exe7890inthisnameabcd.ctxxttexe'], ['ealreadI_hlavthe.tabctx\u00e9xam.exam12.tx.to.xeplple.exettxexamlplexample._abcttx\u00e9xampI_haxempleigitxs_or_dxo_ts.3.exeeplabcd.ctxxtabttdo_tsle.exettabthave_n_dose..to.rearemorethan3digits12345abctaxatt6890inthisnamep.3.exeepleeabcd.xt.txtt.tx.to..exee_ists.example.txz'], ['NPsZ1.exexamQI_have_nao_de.Qalream123.exeplee23.exempleigiQts_or_do_te3.exeuOM'], ['alreadI_have_atatn_.txvz'], ['abat'], ['tI_hQave_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tsherearemorethan3digits1.xe7890inthisname.exe'], ['\u00e9xa.mpl1.exaem123.exeple23.exee.exae'], ['.exampleealreadtherearemorethan3digits1234567890inthisname.exeI_hlave_ists.example.txz'], ['\u00e9xa1mplx1.exaem123.exeple23.exee.exalQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam12its_or_do_teslge'], ['I_have_no_de.exampleigits_or_I_have_no_deI_have_no_digits_or_dotsalreadyexists.txz.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctabctx\u00e9xample.exettxxttdo_ts'], ['NOVPsI_haabctxI_have_no_de.exampleigits_or_do_tsattve_no_digits_alreadyexists.txzflgor_dotsalreQzflgists.txzZuOM'], ['\u00e9xa1.exee.exae'], ['ee.exam.example'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigitsexamplee._or_do_tsaalreadyexists.I_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tsexample.txzttexis1ts.txzf1.exam123.exeple23.exz'], ['\u00e9xample.e.3.xexeeplaeQxaQmple.Tbcd.ctp.lQflg3.exeepleexxttxa'], ['\u00e9xtherearemorethan3digits12345123.exe67890inthiisnample.exae'], ['ab1.exam123.exeple23.exetxettherabearemorethant3digits1.tx.to.234567890inthisname.exet'], ['1.exe.exI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempNVZuOMM.3.exeepleeleigits_or_do_tI_have_no_de.QalreadyabctxI_atathave_no_de.examipleigits_or_do_tsattexp.lQflg3.exeepleeis1ts.txzf1.exam123.exeple23.exempleigits_or_dosesamplctxttaem123.exeple23xe'], ['examI_hQave_no_de.Qalreadyexists.txzgits_or_do_tslplI_have_n_dose.'], ['l\u00e9xaxmple.exe'], ['ealreadI_hlave_ists.exp.lQQfI_have_no_de.xQalreadyabctxI_have_no_de.etherearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexI_haxempleigits_or_dxo_alreadI_have.tx.to._ists.ep.3.exeepleeI_have_no_de.exampleigits_or_I_have_no_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_ts.3.exeeplabcd.ctxxdttdo_tsxample.txzeets.3.exeeplabcd.ctxxttdo_tsis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txz'], ['exampexampleec.exampleabctxttle.T'], ['\u00e9xtherearemorethan3digits12e345123.exe67890inthiisnample.exae'], ['\u00e9xa1mplxe1.exaem123.exeple23.exee.exae'], ['alreadyyexists.aexampp.3.exeepleetxz'], ['1.exe.examp.3.exeeplabcd.ctp.lQflp.lQQfI_eadyexists.example.txzttherearemorethan3digits1234567890inthisname.exetexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.g3.exeepleeeaem123.exeple23xe'], ['p.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txztteabctI_have_n_dotsxI_have_noleigits_or_do_123.exe'], ['\u00e9xa1mpl1.exaem123.exoI__have_no_digiseple23.exee.exae'], ['therearemorethan3digits123456890inththere.aremorethan3digitms1.tx.to.r234567890inthisname.exeisname.exe'], ['I_have_no_de.exampleigits_or_I_have_no_de.QalreadyeI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tests.txzf1.exam123.exeple23.exempleirtdo_ts'], ['1.exe.exI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_tesamplctxttaem123.exeple23alreadI_have.tx.to._ists.ep.3.exeepleexample.txzeee'], ['examlplexample._have_n_I_have_no_digits_or_dotsaltresadyexistseQflgists.txnz'], ['abctxxtt'], ['1.exexamQflegpleam123.exeple23.exe'], ['oI_have_I_have_no_de.exampltherearemorethan3digits1234567890inthisnamae.exeeigits_or_do_tsno_digits_o'], ['ab1.exampt'], ['abctxat1.exexamQI_have_no_de.Qalrenadyexis1ts.txzf1.exam123.exepl.e23.exempleigitstherearemorethan3digits1.tx.toabct.2abcd.ctxxtherearemorethan3digits1.tx.to.234567890inthisname.exettexample.txz56123.exe7890inthisname.exe_or_do_tesflgpleam123.exeple23.exet'], ['NO_VPsI_haabctxI_have_no_de.exampleigits_or_do_tsattve_no_digits_alreadyexists.txzflgor_dotsalreQzflgists.txzZuOM'], ['\u00e9xaI_have_\u00e9xample.exaeno_digits_or_dotsalreadyexists.txzQmple.e.3.xexeeplaexaQmple.Tbcd.ctp.lQflg3.exeepleexxttxae'], ['.alreadI_have_n_dotsyexists.example.txI_have_no_de.exampleigits_or_do_tsvz'], ['.exam112e.tx.to.xepl'], ['l\u00e9xaxmple.e.xe'], ['I_have_\u00e9xample.exaen1.exam12ealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigitsexamplee._or_do_tsaalreadyexists.I_have_mno_de.Qalreadyexists.txzf1.exam123.exeple23.exempleigits_or_do_tsexample.txzttexis1ts.txzf1.exam123.exeple23.exz3.exeple23.exeo_digits_or_dotsalreadyexists.txzQ'], ['alreadyyexisealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigitsexamplee._or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exzts.aexampp.3.exeepleetxz'], ['.3.exeep'], ['.3.exeeplabcd.ctp.lQflg3.exeepleexxtalreadI_have_n_dotsyexists.example.txI_have_no_de.exampleigits_.exam112.tx.to.xeplor_do_tsvzt'], ['altherearemoreI_have_n_dotabcQalreadyexists.ttxzflxgtsthan3digits1234567890inthisname.exereadyexists.txz'], ['p.lQQfI_havI_have_no_de.QalreadyabctxI_have_no_de.examipleigits_or_do_tsattexp.lQflg3.exeepleeis1ts.txzf1.exam123.exeple23.exempleigits_or_dose_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsattexiNVZuOMM.3.exeeplees1lts.txzf1.exam123.exedple23.exempleigits_or_do_teslg3.exeepleeabcd.xt.txtt.tx.to.'], ['\u00e9xampl1.exaem123abI_have_\u00e9xample.exaen1.exam1NOVPsZuOM.txzQct.exeple23.exee.exae'], ['1.exexamQI_have_no_de.Qalreadyexis1ts.txzf1.exam123.exeplee23.exempleigits_or_d.3.exeeplabcd.ctp.lQflp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.exampleigits_or_do_tsaalreadyexists.example.txztgudadVYHtexis1ts.txzf1.exam123.exeplQe23.exempleigits_or_do_txtt.tx.to.g3.exeepleexxtto_tesflgpleam123.exeple23.exe'], ['alreadI_have_n_hdotsyexists.example.txvz'], ['e.examplleabctxtee.eextherearemorethan3digits1.tx.to.23456i7890inthisname.exeamplet'], ['therearemor1.exe.examplctxttaem123x.exeple23xeethan3digits1.tx.to.23456123.exe7890inthisnameabe.examplexxttexe'], ['NPsZu\u00e9xa1mpl1.exaem123.exoI__ha1.exexamQflgpleealreadI_hlave_ists.exp.lQQfI_have_no_de.QalreadyabctxI_have_no_de.etherearemorethan3digits1.tx.toabct.23456123.exe7890inthisname.exexampleigits_or_do_tsaalreadyexists.example.txzttexis1ts.txzf1.exam123.exeple23.exempleigits_or_do_txtt.tx.to.ample.txzam123.exple23.exeve.exaeM'], ['a23.e2xeples.txz'], ['.exam12.3.exeple'], ['FWYVZodEW'], ['therearemexample.Torethan3digits1.tx.to.e23456i789inthisname.exe'], ['alreadI_have_atatn_therearemoreI_have_n_dotsthan3digits12345r67890intdhisnamabctxI_have_no_de.exampleigits_or_do_I_have_no_examplee.de.exampltherearemorethaen3digits1234567890inthisnamae.exeeigits_or_tstsattedotsyexists.exmple.txvz'], ['..txt'], ['exam_ple.com'], ['example.xlsx'], ['invalid_name'], ['example.1234.txt'], ['example.TXt'], ['example.txt.'], ['.exetxt'], ['abcalreadyexisttxzd.txtt'], ['o.tx.to.'], ['.t.x.to.'], ['\u00e9xample.e'], ['\u00e9xamabcd.txttple.e'], ['.t.123.exeo.'], ['\u00e9xaemple.exe'], ['aebcalreadyexisttxzd.txtt'], ['labcalreadyexisttxzd.txtt'], ['exameple'], ['aebcalrea\u00e9xamabcd.txttple.edyexisttxzd.txtt'], ['.exampo.tx.to.le'], ['.t.t.123.exeo..to.'], ['.exxaample'], ['eemxample.'], ['o.tx..to.'], ['o.tx...t.t.123.exeo..to.to.'], ['.exxaamplabcalreadyexisttxzd.txttle'], ['aebca\u00e9xaemple.exelreadyexisttxzd.txtt'], ['o.tx.to.example'], ['.ttherearemorethan3digits1234567890inthisname.exe.x.to.'], ['\u00e9axamabcd.txttple.e'], ['abcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.'], ['aabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.'], ['.ttherearemorethan3digits123456789.example0inthisname.exe.x.to.'], ['aabcalreadyexisttxzd.txttbced.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.exampple.'], ['o.tx...t.t.123example..exeo..to.to.'], ['aebca\u00e9sxaemple.exelreadyexisttxzd.txtt'], ['.exampmle'], ['aebcalrea\u00e9xamabcd.txttple.tt'], ['.\u00e9xo.tx...t.t.123example..exeo..to.to.ample.e'], ['abo.tx...t.t.123.exeo..to.to.cd.txtt'], ['\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.e'], ['o.tx...t.t.123example..exeo..taebcalreadyexisttxzd.txtto.'], ['\u00e9xamabxcd.txttple.e'], ['o.tx.tto.'], ['aebaebcalrea\u00e9xamabcd.txttple.ttca\u00e9sxaemple.exelreadyexisttxzd.txtt'], ['.ttherearemeorethan3digits1234567890inthisname.exe.hx.to.'], ['o.t.to.example'], ['aabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3\u00e9xamabcd.txttple.edi'], ['12.exxaamplabcalreadyexisttxzd.txttle3.exe'], ['\u00e9xa\u00e9xample.emabxcd.txttple.e'], ['\u00e9xa.\u00e9xample.emabxcd.txttple.e'], ['.eaabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.xample'], ['Hle'], ['.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.e'], ['alre\u00e9xample.exe'], ['\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.t.123.exeo..to.to.cd.txtt'], ['therearemorethan3digits12345i67890inthisnhame.exe'], ['\u00e9xa\u00e9xample.emabxcd.txttplme.e'], ['o.t.to.exam\u00e9xample.eple'], ['aebca\u00e9dsxaemple.exelreadyexisttxzd.txtt'], ['CDLe.t.t.123.exeo..to.Q'], ['\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.t.12\u00e9xamabcd.txttple.e.e.xeo..to.to.cd.txtt'], ['\u00e9xal\u00e9xample.emabxcd.txttplme.e'], ['\u00e9xal\u00e9xample.aemabxcd.txttplme.e'], ['alre\u00e9xample.exee'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.xample'], ['\u00e9xam\u00e9xample.exeple.e'], ['aebca\u00e9dsxaemple.exelreadytexisttxzd.txtt'], ['therearemoHlerethan3digits12o.tx...t.t.123example..exeo..taebcalreadyexisttxzd.txtto.345i67890inthisnhame.exe'], ['.eo.tx..to.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.ample'], ['CDLe.t.t.123.exeo..toQ'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3digits1234567890inthisname.exe.x.to.xample'], ['.'], ['.eaabcalreadyexisttxzd.t\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.exttbcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.xample'], ['QVam'], ['al.tx.to.re\u00e9xample.exee'], ['.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.ample'], ['.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemoorethan3digits1234567890inthisnam.ttherearemeorethan3digits1234567890inthisname.exe.hx.to.e.exe.x.to.ample'], ['\u00e9xa\u00e9xample.emabxcd.txlttplme.e'], ['eemxaeemple.'], ['\u00e9xamab\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.ecd.txtttple.e'], ['\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.tt.12\u00e9xamabcd.txttple.e.e.xeo..to.to.cd.txtt'], ['Hleo.tx.tto.'], ['\u00e9axamabc.d.txttple.e'], ['.eaabcalreadyexisttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisname.e.xe.x.to.xample'], ['\u00e9xa\u00e9xample.emabxcd.txttple\u00e9xamabcd.txttple.e.e.xeo..to.to.cd.txtt'], ['aebcalrea\u00e9xamaabcalreadyexisttxzd.txttexisttxzd.txtt'], ['aebcaclreadyexisttxzd.txtt'], ['.t.t.123.e.xeo..to.'], ['aeaebca\u00e9dsxaemple.exelreadyexisttxzd.txttbcalreadyexisttxzd.txtt'], ['aebaebcalrea\u00e9xamabcad.txttple.ttca\u00e9sxaemple.exelreadyexisttxzd.txtt'], ['ample'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisname.e.to.xample'], ['ampal.tx.to..re\u00e9xample.exeele'], ['QV.exxaamplabcalreadyexisttxzd.txttleam'], ['QQVam'], ['aebcalrea\u00e9xamabcd.txxttple.tt'], ['abcal\u00e9xaemple.exereadyexisttxzd.txtt'], ['alr.t.t.123.e.xeo..to.e\u00e9xample.exee'], ['aabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisna1me.exe7.x.to.'], ['\u00e9xa.\u00e9xample.emabe'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890intaabcalreadyexisttxzd.txttbcd.txtt.ttherearalreadyexists.txzemorethan3digits1234567890inthisna1me.exe7.x.to.hisname.e.to.xample'], ['\u00e9xa.\u00e9xample.bemabxcd.txttple.e'], ['abcal\u00e9xa123.exeemple.exereadyexisttxzd.txtt'], ['o.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisname.e.to.xample.t.to.example'], ['o.tx.aebca\u00e9dsxaemple.exelreadyexisttxzd.txtt.to.'], ['aaebcalreadyexisttxzd.txtto.tx.aebca\u00e9dsxaemple.exelreadyexisttxzd.txtt.to.abcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisna1me.exe7.x.to.'], ['ulUJxJw'], ['.lexxaample.exampmle'], ['aabcalreadyexisttxzd.txttbced.txtt.ttherearemorethan3digits1234567890inthisnax.to.exampple.'], ['\u00e9xa\u00e9xampl.e.emabxcd.txlttplme.e'], ['\u00e9xxample.exe'], ['\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.t..123.exeo..to.to.cd.txtt'], ['aebcalrea\u00e9xamabcd.txttplet.edyexisttxzd.txtt'], ['\u00e9a\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.t.12\u00e9xamabcd.txttple.e.e.xeo..to.to.cd.txttxamabcd.txttple.e'], ['aebca\u00e9xaemple.exelreadyexisttxzd..eo.tx..to.xxa.ttherearemts1234567890inthisname.exe.x.to.ampletxtt'], ['lHHl'], ['ampal.tx.to..re\u00e9xam.ple.exeele'], ['aabcalreadyexistttxzd.txttbcd.txtt.ttherearemorethan3\u00e9xamabcd.txttple.edi'], ['HlHe'], ['o.tx...t.t.123example..exeo..to.teo.'], ['\u00e9xal\u00e9xample.aemabxcd.txt.e'], ['.eaabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.xample'], ['.\u00e9xo.tx...tp.t.123example..exeo..to.to.ampl.t.123.exeo3.e.e'], ['\u00e9xa\u00e9xample.emabxcd.txlttplme..exampmlee'], ['ulUJxJwo.tx..to.'], ['o.tx...t.t.12aebcalrea\u00e9xamabcd.txttplet.edyexisttxzd.txtt3example..exeo..to.to.'], ['aabcalreadyexisttxzd.txttbcd.txtt3.ttherearemorethHlean3digits1234567890inthisname.exe.x.to.'], ['o.tx...t.t.123examptle..exeo..to.to.'], ['.ttherearemorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits1234567890inthisname.exe.x.to.'], ['x\u00e9axamabc.d.txttple.e'], ['ampleabcal\u00e9xa123.exeemple.exereadyexisttxzd.txtt'], ['\u00e9axamabecd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.ee.e'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.x.to.xample'], ['aebca\u00e9dsxaemple.exelreadytexisttxzd.tabcal\u00e9xa123.exeemple.exereadyexisttxzd.txtt'], ['.tt.to.'], ['ex.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisnamoe.e.to.xampleameple'], ['.eaabcalreadyexisttxzd.t\u00e9x.tx.to.aaebcalreadyexisttxzdhan3digits1234567890inthisname.exe.x.to.xample'], ['o.tx...t.t.12ax\u00e9axamabc.d.txttple.eebcalrea\u00e9xamabcd.txttplet.edyexisttxzd.txtt3example..exeo..to..to.'], ['\u00e9axamabecd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxztxttmabcd.txttple.ee.e'], ['..ttx.to.'], ['abcal\u00e9xa123.exeemple.exereadyexisttxbzd.txtt'], ['Hleo.txt.tto.'], ['o.tx.to.\u00e9xa\u00e9xampl.e.emabxcd.txlttplme.e'], ['.t.t.123.e.xeo.tx.aebca\u00e9dsxaemple.exelreadyexisttxzd.txtt.to.o..to.'], ['alreaebcalrea\u00e9xamabcd.txttplet.edyexisttxzd.txttadyexists.txz'], ['\u00e9xamabCDLe.t.t.123.exeo..to.Qxcd.txttple.e'], ['o.tx...t.t.123examplex.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisnamoe.e.to.xampleameplee..exeo..to.teo.'], ['.t.t.123.e.xeo.tx.aebca\u00e9dsxaemple.eHlHexelreadyexisttxzd.txtt.to.o..to.'], ['.exampml'], ['MmaD'], ['OkzLhkzAu'], ['ex.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.t\u00e9xample.exetherearemorethan3digits1234567890inthisnamoe.e.to.xampleameple'], ['HlCDLe.t.t.123.exeo..to.eQ'], ['\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.txtt'], ['\u00e9axamabecd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxzd.txtetmabcd.txttple.ee.e'], ['\u00e9xamab\u00e9x.tx.to.aaebcalreadyexistQQVamtxzd.txttmabcd.txttple.ecd.txtttple.e'], ['therearemoHlerethan3digits12o.tx...t.t.123example...exxaampleexeo..taebcalreadyexisttxzd.txtto.345i67890inthisnhame.exe'], ['\u00e9xa.\u00e9xample.bemabxcd.xttple.e'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemorae.x.to.xample'], ['.tthereaeremorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits1234567890inthisname.exe.x.to.'], ['aebcalrea\u00e9xamabcd.txttple.\u00e9edyexisttxzd.txtt'], ['.tt.t.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.ampleo.'], ['.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemoorethan3digits1234567890inthCDLe.t.t.123.exeo..toQisnam.ttherearemeorethan3digits1234567890inthisname.exe.hx.to.e.exe.x.to.ample\u00e9xal\u00e9xample.aemabxcd.txt.e'], ['\u00e9.xa.\u00e9xample.emabe'], ['.\u00e9xo.tx...t.t.123exam.t.x.to.ple..exeo..to.to.ample.e'], ['\u00e9xam\u00e9xam.t.t.123.exeo..to.ple.exeple.e'], ['\u00e9axamabecd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxzd.txtetmabcd.txttple.ee.ce'], ['o.tx.aebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to.'], ['.exxaamplabcalreadyexisttxzd.txttlo.tx.aebca\u00e9dsxaemple.exelreadyexisttxzd.txtt.to.e'], ['therearemorethan3digits12345690inthisname.exe'], ['aabcalready\u00e9xample.exeexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemorethan3digitas1234567890inthisname.exe.x.to.xample'], ['.eo.tx..to.xxa.ttherearemorethan3digits12364567890inthisname.exe.x.to.ample'], ['\u00e9xa\u00e9xample.emabxcd.tx.ttherearemorethan3digits1234567890inthisname.exe.x.to.lttplme.e'], ['alreaebcalrea\u00e9xamabcd.txttplet.edyexisdttxzd.txttadyexists.txz'], ['CDLe.t.t.123.exeaabcalreadyexisttxzd.txttbced.txtt.ttherearemorethan3digits1234567890inthisnax.to.exampple.o..to.Q'], ['aabcalrneadyexisttxzd.txttbcd.txtt3.ttherearemorethHlean3digits1234567890inthisname.exe.x.to.'], ['alr.t.t.o.tx.tto..t.x.to.ee'], ['o..tx...t.t.123example..exe\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.eo..to.to.'], ['.eaabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.edxe.x.xample'], ['abcd.txtt.ttherearemorettthan3digits1234567890inthisname.exe.x.to.'], ['alreaebcalrea\u00e9xamabcd..eaabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.edxe.x.xampletxttplet.edyexisdttxzd.txttadyexists.txz'], ['aabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisn.'], ['\u00e9xal\u00e9xample.aemabxcd.txttplmeo.tx.tto.'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890intaabcalreadyexisttxzd.txttbcd.txtt.ttherearalreadyexists.txzemorethan3digits1234567890inthisna1me.exe7.x.to.hisname.e.toxample'], ['\u00e9xamabcd.txttpo.tx.tto.le.e'], ['aebca\u00e9dalre\u00e9xample.exesxaemple.exelreadytexisttxzd.tabcal\u00e9xa123.exeemple.exereadyexisttxzd.txtt'], ['axe\u00e9xample.exee'], ['.ttherearemeorethan3digits1234567890inthisname.e.xe.hx.to.'], ['aabcalready\u00e9xample.exeexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisdname.exe.x.to.'], ['\u00e9.xa.\u00e9xample.o.t.to.exam\u00e9xample.epleemabe'], ['\u00e9x.tx.to.aaebcalreaebca\u00e9dsxaemple.exelreadytexisttxzd.tabcal\u00e9xa123.exeemple.exereadyexisttxzd.txtttmabcd.txttple.e'], ['\u00e9xamabxcd.txtHletple.e'], ['o.t.to.eple'], ['aabcalreadyexistttxzd.txttbcd.txtt.ttherearemorethan3\u00e9xamabcd.txttpl.e.edi'], ['Hleo.txt.o.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemxorethan3digits1234567890inthisname.e.to.xample.t.to.exampletto.'], ['aabcalreadyexisttxzd.txttbcd.txtt.ttherearemHlHeorethan3digits1234567890inthisn.'], ['ex.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcdgits1234567890inthisnamoe.e.to.xampleameple'], ['\u00e9xao.tx.to.\u00e9xa\u00e9xampl.e.emabxcd.txlttplme.ele.ee'], ['alreaebcalrea\u00e9xamabcd..tbcd.txtt.ttherearemorethan3digits1234567890inthisname.edxe.x.xampletxttplet.edyexisdttxzd.txttadyexists.txz'], ['\u00e9xamab\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcdc.txttple.ecd.txtttple.e'], ['.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemoorethan3digits1234567890inthCDLe.t.t.123.exeo..toQisnam.ttherearemeorethan3digits1234567890inthisname.exe.hx.to.e.exe.x.to.ample\u00e9xal\u00e9xample.aemabxcd5.txt.e'], ['o.tx..o.tx.aebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to.to.'], ['alre\u00e9xample.ex\u00e9e'], ['\u00e9xamabCDLe.t.t.123.exeo..to.Qxcd.tttple.e'], ['ampleabcal\u00e9xa123.exeemple.exeready.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemorethan3digitas1234567890inthisname.exe.x.to.xampleexisttxzd.txtt'], ['.eo.tx..to.xxa.ttherearemoretho.tx...t.t.123examplex.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisnamoe.e.to.xampleameplee..exeo..to.teo.an3dio.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisname.e.to.xample.t.to.examplegits12364567890inthisname.exe.x.to.ample'], ['\u00e9xamabCDLe.t.t.123.exeo..to.Qxcd.taabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisn.ttple.e'], ['.eaabcalreadyexisttxztd.toxttbcd.txtt.ttherearemorethan3digitcs1234567890inthisname.e.xe.x.to.xample'], ['.exampleeaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.x.to.xample'], ['..ttx.to.o.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisname.e.to.xample.t.to.example'], ['o.tx.aebca\u00e9dsxaempale.exeelreadyexisttxzd.txtt\u00e9.to.'], ['aebca\u00e9xaemple.eexelreadyexisttxzd.txtt'], ['Yo.t.to.exampleUG'], ['\u00e9xamab\u00e9x.tx.to.a.exampleaebcalreadyexisttxzd.txttmabcd.txttple.ecd.txtttple.e'], ['\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.txt\u00e9xamabcd.txttple.et'], ['\u00e9xao.tx.to.\u00e9xa\u00e9xamalre\u00e9xample.exeepl.e.emabxcd.txlttplme.ele.ee'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemoretaebcalrea\u00e9xamabcd.txttplet.edyexisttxzd.txtthan3digits1234567890inthisname.e.to.xample.d.txttple.e'], ['alreaebcttherearemorethan3digits1234567890inthisname.edxe.x.xampletxttplet.edyexisdttxzd.txttadyexists.txz'], ['o.tx...t.t.123.exe.t.x.to...to.to.'], ['.ttherearemeorethan3digits1234567890inthisame.e.xe.hx.to.'], ['aabcalreadyexisttHleo.tx.tto.xzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisn.'], ['.\u00e9xo.tx...t.t.123examp12.exxaamplabcalreadyexisttxzd.txttle3.exele..exeo..to.to.ample.e'], ['\u00e9xa.\u00e9xample.bemaabxcd.txttple.e'], ['\u00e9axamabo.tx..o.tx.aebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to.to.ecd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxzd.txtetmabcd.txttple.ee.e'], ['\u00e9mxa\u00e9xample.emabxcd.txlttplme..exampmlee'], ['o.tx.to.examp'], ['\u00e9xaemplee.exe'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xample'], ['.eaabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits123abcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.67890inthisname.exe.x.to.xample'], ['\u00e9xa\u00e9xample.emabxcd.txlttplmme..exampm.exampmllee'], ['exaample'], ['oYo.t.to.exampleU'], ['o.tx...txisttxzd.txtt.to.to...to.to.'], ['abcd.txtt.ttherearemorettthan3digits1234567890inthisname.exe..exampmleo.'], ['alex.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcdgits1234567890inthisnamoe.e.to.xampleameplere\u00e9xample.exee'], ['\u00e9.exxaamplabcalreadyexisttxzd.txttlo.tx.aebca\u00e9dsxaemple.exelreadyexisttxzd.txtt.to.ex.tx.to.aaebcalreaebca\u00e9dsxaemple.exelreadytexitsttxzd.teabcal\u00e9xa123.exeemple.exereadyexisttxzd.txtttmabcd.txttple.e'], ['o.tx...t.t.12ax\u00e9axamabc.d.txttple.eebcalrea\u00e9xamabcd.txttplet.edyexisttxzd.txtt3\u00e9example..exeo..to..to.'], ['aebca\u00e9dsxaemplei.exelreadytexisttxzd.tabcal\u00e9xa123.exeemple.exereadyexisttxzd.txtt'], ['\u00e9xamab\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.dtxttple.ecd.txtttple.e'], ['djCJo.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemoorethan3digits1234567890inthisnam.ttherearemeorethan3digits1234567890inthisname.exe.hx.to.e.exe.x.to.amplesWi'], ['CDLe.t.t.123.exeaabcalreadyexisttxzd.txttbced.txtt.ttherearemorethan3digitsn1234567890inthisnax.to.exampple.o..to.Q'], ['.ttherearemorethan3digits1234567890inthisnam.eo.tx..to.xxa.ttherearemorethan3digits12364567890inthisname.exe.x.to.amplee.exe.x.to.'], ['aebcalrea\u00e9xamao.tx.to.\u00e9xa\u00e9xampl.e.emabxcd.txlttplme.ebcd.txttple.edyexisttxzd.txtt'], ['abcd.txtt.t.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampletherearemorethan3digits1234567890inthisname.exe.x.to.'], ['o..tx...t.t.123example..exe\u00e9x.tx.to.aaebcalreadyexisttxzd.txttdmabcd.txttple.eo..to.to.'], ['aelre\u00e9xample.exee'], ['therearemoHlerethan3digits12to.tx...t.t.123example...exxaampleexeo..taebcalreadyexisttxzd.txtto.345i67890inthisnhame.exe'], ['o.tx..eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampleaebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to.'], ['o.tx.aebca\u00e9dsxaemple.exeelreadiyexisttxzd.txtt.to.'], ['examplabo.tx...t.t.123.exeo..to.to.cd.t'], ['aebcalrea\u00e9xamabcd.txttpo..tx...t.t.123example..exe\u00e9x.tx.to.aaebcalreadyexisttxzd.txttdmabcd.txttple.eo..to.to.le.tt'], ['\u00e9xa\u00e9xampl.e.ebaebcalrea\u00e9xamabcd.txttple.ttmacdplme.e'], ['therearaebcalrea\u00e9xamabcd.txttpo..tx...t.t.123example..exe\u00e9x.tx.to.aaebcalreadyexisttxzd.txttdmabcd.txttple.eo..to.to.le.ttemorethan3digits12345690inthisname.exe'], ['CDLe.to.tx..eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampleaebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to..t.123.exeaabcalreadyexisttxzd.txttbced.txtt.ttherearemorethan3digitsn1234567890inthisnax.to.exampple.o..to.Q'], ['.ttt.to.'], ['alreaebcttherearemorethan3digits1234567890inthisname.edxe.x.xampletxttplet.edyexisdttxzd.t\u00e9xamabxcd.txttple.eidyexists.txz'], ['.exampleeaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits12345678o.tx...t.t.123example..exeo..taebcalreadyexisttxzd.txtto.90inthisname.exe.x.to.xample'], ['.exampo.tx.aaebcalreadyexisttxzd.txtto.tx.aebca\u00e9dsxaemple.exelreadyexisttxzd.txtt.to.abcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisna1me.exe7.x.to.to.le'], ['.eo.tx..to.xxa.ttherearem3orethan3digits1234567890inthisname.exe.x.to.ample'], ['aeaebca\u00e9dsxaemple.exelreadyexisttxzd.txttherearemorethan3digits12345eemxample.i67890inthisnhame.exetbcalreadyexisttxzd.txtt'], ['.ttt.talr.t.t.o.tx.tto.o.eeo.'], ['\u00e9xam\u00e9xample.exeple.le'], ['.ttt.talr.t.t.o.tx.tto.o.e'], ['aebaebcalre.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.x.to.xamplea\u00e9xamabcd.txtple.ttca\u00e9sxaemple.exelreadyexisttxzd.txtt'], ['exaebca\u00e9dsxaemple.exelreadyexisttxzd.txttaample'], ['.eo.aebca\u00e9dsxaemple.exelreadytexisttxzd.txtttx..to.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.ample'], ['CDLe.to.tx..eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampleaebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to..t.123.exeaabcalreadyexisttxzd.txttbced.txtt.ttherearem\u00e9xa\u00e9xample.emabxcd.txlttplme.eorethan3digitsn1234567890inthisnax.to.exampple.o..to.Q'], ['therearemoHlerethan3digits12to.tx...t.t.123example...exxaampleexeo..taebcal.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemorethan3digitas1234567890inthisname.exe.x.to.xamplereadyexisttxzd.txtto.345i67890inthisnhame.exe'], ['ulUJxJwo.tx..toYo.t.to.exampleUG.'], ['aelere\u00e9example.exee'], ['RKYe'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890intaabcalreadyexisttxzd.\u00e9xa.\u00e9xample.emabetxttbcd.txtt.ttherearalreadyexists.txzemorethan3digits1234567890inthisna1me.exe7.x.to.hisname.e.toxample'], ['C\u00e9xam\u00e9xample.exeple.leDLe.t.t.123.exeaabcalreadyexisttxzd.txttbced\u00e9xal\u00e9xample.aemabxcd.txt.ettherearemorethan3digitsn1234567890inthisnax.to.exampple.o..to.Q'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890intaabcalreadyexisttxzd.\u00e9xa.\u00e9xample.emabetxttbcd.txtt.CDLe.to.tx..eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampleaebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to..t.123.exeaabcalreadyexisttxzd.txttbced.txtt.ttherearem\u00e9xa\u00e9xample.emabxcd.txlttplme.eorethan3digitsn1234567890inthisnax.to.exampple.o..to.Qttherearalreadyexists.txzemorethan3digits1234567890inthisna1me.exe7.x.to.hisname.e.toxample'], ['aebca\u00e9xaempredadyexisttxzd.txtt'], ['aabcalreadyexistttxzd.txttbcd.txtt.ttherearemorethaxn3\u00e9xamabcd.txttpl.e.edi'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemore.than3digits1234567890inthisname.e.to.xample'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemorethan3digitas1234567890inthisname.exe.x.to.xampleo.tx.tto.'], ['.exampleeaabcalreadyexistthan3drigits12345678o.tx...t.t.123example..exeo..taebcalreadyexisttxzd.txtto.90inthisname.exe.x.to.xample'], ['\u00e9xa\u00e9xample.emabxcd.txlttplme..examptmlee'], ['.exaebcalrea\u00e9xamabcd.txttple.\u00e9edyexisttxzd.txttampml'], ['\u00e9xamabCDLe.t.t.123.exeo..to.Qxcpd.txttple.e'], ['C\u00e9xam\u00e9xample.exeple.leDLe.t.t.123.exeaabcalreadyexisttxzd.txttbced\u00e9xal\u00e9xample.aemabxcd.txt.etthereaeremorethan3digitsn1234567890inthisnax.to.exampple.o..to.Q'], ['e.t.t.123.exeo..to.Q'], ['eemxaeemmple.'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123exaxmple..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemore.than3digits1234567890inthisname.e.to.xample'], ['alreaebcalrea\u00e9xamabcd..tbcd.txtt.ttherearemorethan3digits1234e567890inthisname.edxe.x.xampletxttplet.edyexisdttxzd.txttadyexists.txz'], ['\u00e9xaempC\u00e9xam\u00e9xample.exeple.leDLe.t.t.123.exeaabcalreadyexisttxzd.txttbced\u00e9xal\u00e9xample.aemabxcd.txt.ettherearemorethan3digitsn1234567890inthisnax.to.exampple.o..to.Qlee.exe'], ['\u00e9xao.tx.to.\u00e9xa\u00e9xampl.e.emabxcd.txlttplme.eele.eee'], ['aebcalrea\u00e9xamab.t.t.123.exeo..to.cd.txttple.\u00e9edyexisttxzd.txtt'], ['aelre\u00e9xam\u00e9axamabecd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttpeemxaeemmple.le.ee.eple.exee'], ['\u00e9xamabCDLe.t.t.123.exeo..to.abcd.txtt.t.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampletherearemorethan3digits1234567890inthisname.exe.x.to.Qxcd.txttple.e'], ['alreaebcttherearemorethan3digits12345678xampletxttplet.edyexisdttxzd.txttadyexists.txz'], ['QfZGFbPFj'], ['o.tx...txisttxzd.txtt.to.eto...to.to..txttple.e.e.xeo..to.to.cd.txtt'], ['\u00e9xa.\u00e9xaaebcalrea\u00e9xamabcd.txttple.ttmple.emabxcd.txttple.e'], ['.ttherearemorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits1234567890inthisnabcal\u00e9xa123.exeemple.exereadyexisttxzd.txtt.to.'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemoretaebcalrea\u00e9xamabcd.txttplet.edyexisttxzd.txtthan3digits1234567890inthisname.e'], ['labcalreadyexisttxz\u00e9xamabCDLe.t.t.123.exeo..to.Qxcd.txttple.ed.txtt'], ['ex.eaabcalreadyexi.\u00e9xo.tx...tp.3t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisnamoe.e.to.xampleameple'], ['\u00e9axamabecd.txttpl\u00e9x.tx.to.aeaebcalreadyexisttxzd.txttmabcd.txttple.ee.e'], ['bKdJbDq'], ['lHaabcalreadyexisttxzd.txttbced.txtt.ttherearemorethan3digits1234567890inthisnax.to.exampple.l'], ['.eo.tx..to.xxa.tthereCDLe.t.t.123.exeo..toQarem3orethan3digits1234567890inthisname.exe.x.to.ample'], ['\u00e9xao.taebaebcalrea\u00e9xamabcad.txttple.ttca\u00e9sxaemple\u00e9xa\u00e9xample.emabxcd.txttple.eabo.tx...t.txtt.exelreadyexisttxzd.txttx.to.\u00e9xa\u00e9xampl.e.emabxcd.txlttplme.eele.eee'], ['aebca\u00e9xaemple.eexelreadyexist\u00e9xa\u00e9xample.emabxcd.tx.ttherearemorethan3digits1234567890inthisname.exe.x.to.lttplme.etxzd.txtt'], ['aebca\u00e9xaebmple.exelreadyexisttxzd..eo.tx..to.xxa.ttherearemts1234567890inthisname.exe.x.to.ampletxtt'], ['fAefFQan.ttherearemorethan3digits1234567890inthisname.exe.x.to.ZV'], ['.eo.tx..to.xxa.tthereCDLe.t.t.123.exeo..toQarem3orethan3digits1234567890inthisname.exe.x.to.ampl\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.ee'], ['.eo.tx..to.xxa.ttherearem3orethan3digits1234567890inthisname.exe.x.taabcalrneadyexisttxzd.txttbcd.txtt3.ttherearemorethHlean3digits1234567890inthisname.exe.x.to.o.ample'], ['\u00e9xamabCDLe.t.t.123.exeo..to.Qxcd.txttpleaebcalrea\u00e9xamaabcalreadyexisttxzd.txttexisttxzd.txtt.e'], ['o.ttx.tto.'], ['\u00e9x.tx.to.aaebcalreaebca\u00e9dsxaemple.exelreadytexisttxzd.tabcal\u00e9xa123.exeemp.le.exereadyexisttxzd.txtttmabcd.txttple.e'], ['.eo.tx..to.xxa.ttherearemoretha3digits12364567890inthisname.exe.x.tao.ample'], ['ulUJxJwo.taebaebcalrea\u00e9xamabcad.txttple.ttca\u00e9sxaemple.exelreadyexisttxzd.txttx..toYo.t.to.exampleUG.'], ['\u00e9xa\u00e9xample.emabxcd.txttRKYe'], ['ulUJxJwo.tx..toYo.t.to.empl.'], ['CDLe.to.tx..eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3dr4567890inthisn9ame.exe.xo.xampleaebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to..t.123.exeaabcalreadyexisttxzd.txttbced.txtt.ttherearem\u00e9xa\u00e9xample.emabxcd.txlttplme.eorethan3digitsn1234567890inthisnax.to.exampple.o..to.Q'], ['.ttherearemorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits1230inthisname.exe.x.to.'], ['alre\u00e9xamo.tx...t.t.123example..exeo..taebcalreadyexisttxzd.txtto.ple.ex\u00e9e'], ['\u00e9axamabc.txttple.e'], ['o.tx.to.ex.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemoorethan3digits1234567890inthCDLe.t.t.123.exeo..toQisnam.ttherearemeorethan3digits1234567890inthisname.exe.hx.to.e.exe.x.to.ample\u00e9xal\u00e9xample.aemabxcd.txt.eample'], ['CDLe.t.t.123.exeo..\u00e9xa.\u00e9xample.emabxcd.txttple.etoQ'], ['o.tx..eaabcalreadyexo.tx...txisttxzd.txtt.to.eto...to.to..txttple.e.e.xeo..to.to.cd.txttisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampleaebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to.'], ['\u00e9xal\u00e9xample.emabxcd.etxttplme.e'], ['o.tx...t.t.123examptle..exeo..to.oto.'], ['\u00e9xa\u00e9xampl.e.emabxcd.txlttplmaeaebca\u00e9dsxaemple.exelreadyexisttxzd.txttherearemorethan3digits12345eemxample.i67890inthisnhame.exetbcalreadyexisttxzd.txtte'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemoretaebcalprea\u00e9xamabcd.txttplet.edyexisttxzd.txtthan3digits1234567890inthisname.e.to.xample.d.txttple.e'], ['\u00e9xa\u00e9xample.emabxcd.txttRKYo.tx...t.t.123.exe.t.x.to...to.to.e'], ['\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmtabcd.txttple.e'], ['aabcalreadyexistttxzd.txttbcd.txtt.tt\u00e9xa.\u00e9xample.bemabxcd.txttple.eherearemorethan3\u00e9xamabcd.txttpl.e.edi'], ['\u00e9xamab\u00e9xa\u00e9xampl.e.emabxcd.txlttplmaeaebca\u00e9dsxaemple.exelreadyexisttxzd.txttherearemorethan3digits12345eemxample.i67890inthisnhame.exetbcalreadyexisttxzd.txtte\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcdc.txttple.ecd.txtttple.e'], ['o.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890int\u00e9xamabCDLe.t.t.123.exeo..to.Qxcpd.txttple.ehisname.e.to.xample.t.to.example'], ['aebca\u00e9xaebmple.exelreadyexisttxzd..e.t.t.123.exeo..to.Qrearemts1234567890inthisname.exe.x.to.ampletxtt'], ['o.aabcalreadyexisttxzd.txttbced.txtt.ttherearemorethan3digits1234567890inthisnax.to.exampple..tx...t..t.123example..exe\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.eo..to.to.'], ['\u00e9x.eo.aebca\u00e9dsxaemple.exelreadytexisttxzd.txtttx..to.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.ampleal\u00e9xample.emabxcd.etxttplme.e'], ['alre\u00e9xamo.tx...t.t.123example..exeo..taebcalraebcalrea\u00e9xamabcd.txttple.\u00e9edyexisttxzd.txtteadyexisttxzd.txtto.ple.ex\u00e9e'], ['.\u00e9xo.tx...t.t.123examp1a2.exxaamplabcalreadyexisttxzd.txttle3.exele..exeo..to.to.ample.e'], ['\u00e9xtherearemorethan3digits1234567890inthisname.exeample.e'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890intaabcalreadyexisttxzd.\u00e9xa.\u00e9xample.emabetxttbcd.txtt.CDLe.to.tx..eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3drigits1234567890inthisname.exe.xo.xampleaebca\u00e9dsxaemple.exeelreadyexisttxzd.txtt.to..t.123.exeaabcalreadyexisttxzd.txttbced.txtt.ttherearem\u00e9xa\u00e9xample.emabxcd.txlttplme.eorethan3digitsn1234567890inthisnax.to.exampple.o..to.Qttherearalreadyexina1me.exe7.x.to.hisname.e.toxample'], ['\u00e9xamab\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.dtxttple.ecd.txt\u00e9ttple.e'], ['ex.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd.txtt.ttherearemor12.exxaamplabcalreadyexisttxzd.txttle3.exeethan3digits1234567890inthisnamoe.e.to.xampleameple'], ['ulUJxJwo.tux..to.'], ['\u00e9mxa\u00e9xample.emabxcd..txlttplmxe..exampmlee'], ['.ttherearemorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits1234567aebca\u00e9xaemple.exelreadyexisttxzd.txtt890inthisname.exe.x.to.'], ['.ttherearemorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits1234567890inthi.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.amplexzd.txtt.to.'], ['.eaabc.alreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3digits1234567890inthisname.exe.x.to.xample'], ['o..tx...t.t.123example..exe\u00e9x.tx.to.aaxebcalreadyexisttxzd.txttmabcd.txttple.eo..to.to.'], ['\u00e9mxa\u00e9xample.emabxcd..txlttplmxe..exampxmlee'], ['o..tx.o..t.t.123example..exe\u00e9x.tx.to.aaebcalroeadyexisttxzd.txttdmabcd.txttple.eo..to.to.'], ['.eaabcalreadyexi.\u00e9xo.tx...tp.t.123example..exeo..to.to.ample.esttxztd.toxttbcd...ttx.to.txtt.ttherearemorethan3digits1234567890inthisname.e.to.xample'], ['aebca\u00e9xaemple.exelreadyexisttxzd..eo.tx..to.xxa.ttherearemts1234567890inthisnam.ttherearemorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits1234567890inthi.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.amplexzd.txtt.to.e.exe.x.to.ampletxtt'], ['o..tx.o..t.t.123example..exe\u00e9x.tx.to.aaebcalroeadye\u00e9xal\u00e9xample.aemabxcd.txttplme.exidsttxzd.txttdmabcd.txttple.eo..to.to.'], ['alreaebcalrea\u00e9xamabcd..tbcd.txtt.ttherearemorethan3digits1234567890inthisname.edxe.x.xampletxtherearemorethan3digits1234567890inthisname.exettplet.edyexisdttxzd.txttadyexists.txz'], ['\u00e9axama..ttx.to.becd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxzd.txtetmabcd.txttple.ee.ce'], ['aeaebca\u00e9dsxaemple.exelreadyexisttxzd.txttherearemorethan3digits12345eemxample.i67890inthisnhame.exeadyexisttxzd.txtt'], ['therearemorethan3digit.exe'], ['ulUJxJwo.taebaebcalrea\u00e9xamabcad.txttple.ttca\u00e9sxaemple.abcal\u00e9xaemple.exereadyexisttxzd.txttexelreadyexisttxzd.txttx..toYo.t.to.exampleUG.'], ['CDLe.Lt.t.123.exeo..to.Q'], ['aeaebca\u00e9dsxaemple.exelreadyexisttxzd.txttherearemorethan3digits12345eemxample.i67890intt'], ['therearemorethan3dampal.tx.to..re\u00e9xample.exeeleigits1234567890inthisname.exe'], ['\u00e9axamabecd.txttpl\u00e9x.tx.to.aaebcalreadyexisttxztxttmabcd.txttple.exe.e'], ['alreaebcttherearemorethan3digits1234567890inthisname.edxe.x.xampletxttplet.edyexisdttxzd.eaabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.edxe.x.xample.txttadyexists.txz'], ['\u00e9xa.\u00e9xample.emabxcd.txttpl.e.e'], ['aabcalreadyexisttxzd.txttbcd.txtt.ttherearemHlHeoaebca\u00e9xaempredadyexisttxzd.txttrethan3digits1234567890inthisn.'], ['fAefFQan.ttoherearemorethan3digi.ZV'], ['.eaabcalreadyexisttxzd.txttbcd.txtt.tth12.exxaamplabcalreadyexisttxzd.txttle3.exeerearemorethan3digits123abcd.txtt.ttherearemorethan3digits1234567890inthisname.exe.x.to.67890inthisname.exe.x.to.xample'], ['\u00e9xa\u00e9xample.emabxcd.txlttplemme..exampm.exampmllee'], ['.ttt.to'], ['o.ttxt.tto.'], ['aebca\u00e9xaemple.exelreadyexisttxzd..eo.tx..to.xxa.ttherearemts1234567890inthisnam.ttherearemorethan3di\u00e9xa\u00e9xample.emabxcd.txttple.egits12345HlHe67890inthi.eo.tx..tlabcalreadyexisttxzd.txtto.xxa.ttherearemorethan3digits1234567890inthisname.exe.x.to.amplexzd.txtt.to.e.exe.x.to.ampletxtt'], ['.\u00e9xo.tx...tp.t.1223example..exeo..to.to.ample.e'], ['aabulUJxJwo.taebaebcalrea\u00e9xamabcad.txttple.ttca\u00e9sxaemple.abcal\u00e9xaemple.exereadyexisttxzd.txttexelreadyexisttxzd.txttx..toYo.t.to.exampleUG.calreadyexisttHleoerearemorethan3digits1234567890inthisn.'], ['.eaabcalreadyexistttxztd.toxttbcd.txtt.ttherearemorethan3digits1234567890inthisname.e.xe.x.to.xample'], ['\u00e9xamabxcd.txtHleetple.e'], ['\u00e9axamabecd.txttpl\u00e9x.tx.to.aaebcalreadyexis.eo.tx\u00e9xamabCDLe.t.t.123.exeo..to.Qxcd.taabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisn.ttple.e..to.xxa.tthereCDLe.t.t.123.exeo..toQarem3orethan3digits1234567890inthisname.exe.x.to.ampl\u00e9x.tx.to.aaebcalreadyexisttxzd.txttmabcd.txttple.eettxzd.txtetmabcd.txttple.ee.e'], ['C'], ['aebca\u00e9xaemple.exelreadyexisttxzd..eo.tx..to.xxa.ttherearemts1234567890inthisname.exex.x.to.ampletxtt'], ['C\u00e9xam\u00e9xample.exeple.leDLe.t.t.123.exeaabcalreadyexisttxzd.txttbced\u00e9xal\u00e9xample.aemabxcd.txt.ettherearemorethan3digitsn1234567890inthisnax.to.e\u00e9axamabc.txttple.exampple.o..to.Q'], ['LyPW'], ['alreaebcalrea\u00e9xamabcd..tbcd.txtt.ttherearemorethan3digits1234e567890inthisname.edxe.x.xampletxttplet.edyexisdttxmzd.txttadyexists.txz'], ['\u00e9x.tx.to.aaebcalreaebca\u00e9dsxaemple.exelreadytexisttxzd.tabcal\u00e9xa123.exee.mple.exereadyexisttxzd.txtttmabcd.txttple.e'], ['alre\u00e9xamo.tx...t.t.123example..e.xeo..taebcalereadyexisttxzd.txtto.ple.ex\u00e9e'], ['\u00e9xaempC\u00e9xam\u00e9xample.exeple.leDLe.t.t.123.exeaabcalreadyexisttxzd.txttbced\u00e9xal\u00e9xal\u00e9xample.emabxcd.txttplme.e\u00e9xample.aemabxcd.txt.ettherearemorethan3digitsn1234567890inthisnax.to.exampple.o..to.Qlee.exe'], ['aabcabcd.txttalrneadyexisttxzd.txttbcd.txtt3.ttherearemorethHlean3digits1234567890inthisname.exe.x.to.'], ['.eaabcalreadyexisttxzd.toxttbcd.txtt.ttherearemoraethan3digits1234567890xample'], ['\u00e9xa\u00e9xlample.emabxcd.txlttplemme..exampm.exampmllee'], ['alreaebcalrxamabcd..eaabcalreadyexisttxzd.txttbcd.txtt.ttherearemorethan3digits1234567890inthisname.edxe.x.xampletxttplet.edyexisdttxzd.txttadyexists.txz']]\n    results = ['Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No']\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/142", "prompt": "\n\n\ndef sum_squares(lst):\n    \n\n    ans = 0\n    for i, num in enumerate(lst):\n        if i % 3 == 0:\n            ans += num ** 2\n        elif i % 4 == 0:\n            ans += num ** 3\n        else:\n            ans += num\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\n\n\ndef sum_squares(lst):\n    \n\n    ans = 0\n    for i, num in enumerate(lst):\n        if i % 3 == 0:\n            ans += num ** 2\n        elif i % 4 == 0:\n            ans += num ** 3\n        else:\n            ans += num\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\n\n\ndef sum_squares(lst):\n    \n\n    ans = 0\n    for i, num in enumerate(lst):\n        if i % 3 == 0:\n            ans += num ** 2\n        elif i % 4 == 0:\n            ans += num ** 3\n        else:\n            ans += num\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef sum_squares(lst):\n    ans = 0\n    for i, num in enumerate(lst):\n        # Introduce unnecessary variable assignments\n        temp = num\n        index = i\n        \n        # Add redundant checks\n        if index % 3 == 0 and index % 3 == 0:\n            ans += temp ** 2\n        elif index % 4 == 0 and index % 4 == 0:\n            ans += temp ** 3\n        else:\n            ans += temp\n        \n        # Add unnecessary loop\n        for _ in range(1):\n            pass\n        \n        # Add redundant operations\n        ans = ans + 0\n        temp = temp * 1\n    return ans\n<code_end>\n```", "modification": "\ndef sum_squares(lst):\n    ans = 0\n    for i, num in enumerate(lst):\n        \n        temp = num\n        index = i\n        \n        \n        if index % 3 == 0 and index % 3 == 0:\n            ans += temp ** 2\n        elif index % 4 == 0 and index % 4 == 0:\n            ans += temp ** 3\n        else:\n            ans += temp\n        \n        \n        for _ in range(1):\n            pass\n        \n        \n        ans = ans + 0\n        temp = temp * 1\n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 2, 3]], [[1, 4, 9]], [[]], [[1, 1, 1, 1, 1, 1, 1, 1, 1]], [[-1, -1, -1, -1, -1, -1, -1, -1, -1]], [[0]], [[-1, -5, 2, -1, -5]], [[-56, -99, 1, 0, -2]], [[-1, 0, 0, 0, 0, 0, 0, 0, -1]], [[-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]], [[-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]], [[2, 4, 6, 8, 10, 12]], [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[3, 6, 9, 12, 15, 18, 21, 24, 27]], [[-2, 5, -6, 7, -8]], [[2, 4, 6, 8, 10, 12, 14, 16, 18, 20]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10]], [[3, 6, 9, 12, 15, 18, 21, 24, 27, 30]], [[0, 1, 0, 1, 0, 1, 0, 1, 0, 1]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -8]], [[3, 6, 9, 12, 6, 19, 18, 21, 24, 27]], [[1, -2, 3, -4, 5, -6, 7, -8, 6, 9, -10]], [[3, 9, 12, 5, 19, 18, 2, 21, 24, 27]], [[3, 3, 6, 12, 15, 18, 21, 24, 27]], [[3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 21]], [[0, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -8, 5]], [[3, 6, 9, 12, 18, 21, 24, 27]], [[6, 18, 12, 15, 18, 21, 24, 27, 30]], [[2, 4, 6, 8, 10, 12, 10, 10]], [[3, 6, 9, 12, 18, 21, 24, 28]], [[1, -2, 3, -4, 5, -6, -8, 6, -10]], [[3, 3, -8, 6, 12, 15, 18, 21, 24, 27]], [[3, 6, 9, 22, 12, 18, 21, 24]], [[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]], [[0, 0, 0, 0, 3, 0, 0, 0, 0, 0]], [[3, 9, 12, 5, 19, 18, 2, 21, 24]], [[1, -2, 3, -4, 5, -6, -9, 7, -8, 9, -10, -8]], [[3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 21, 24]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[3, 6, 9, 12, 15, 21, 24, 27, 30]], [[1, -2, 4, -4, 5, -6, 7, 18, 9, -10, -8, 5]], [[3, 6, 9, 12, 15, 18, 21, 24, 27, 12]], [[3, 6, 9, 22, 12, 18, 21, 25]], [[1, -2, 2, -4, 5, -6, 7, -8, 9, -10, -8]], [[2, 4, 6, 10, 12, 10, 10]], [[3, 6, 14, 10, 15, 21, 24, 27, 23, 30]], [[1, -2, 2, -2, 5, -6, 7, -8, 9, -10, -8]], [[1, -2, 3, -4, 5, -6, -9, 7, -8, 9, 7, -8]], [[1, -2, 3, -4, -6, 7, -8, 9, -10, -8, 5]], [[6, 9, 12, 15, 18, 21, 24, 27, 12]], [[7, 1, -2, 3, -4, -6, 7, -8, 9, -10, 5]], [[23, 6, 8, 10, 12, 10, 10]], [[1, -2, 4, -4, 5, -6, 7, 18, 9, 0, -8, 5]], [[0, 0, 0, 0, 3, 0, 0, 8, 0, 0]], [[9, 12, 15, 18, 21, 24, 27, 12]], [[21, 6, 22, 12, 18, 21, 12, 24]], [[0, 0, 0, 0, 3, 0, 23, 0, 8, 0, -1, 0]], [[3, 3, 6, 12, 15, 18, 21, 27]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[2, 30, 6, 9, 12, 18, 21, 24, 28, 28]], [[0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0]], [[2, 30, 6, 12, 18, 21, 24, 0, 28]], [[1, 19, 3, -4, -6, 7, -8, 9, -10, -8, 5]], [[0, 0, 0, 3, 0, 0, 0]], [[1, -2, 3, -4, 5, -6, -9, 7, -8, 9, 7, -8, -6]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -8, 3]], [[3, 6, 9, 12, -6, 15, 18, 21, 24, 27]], [[0, 0, 0, 3, 14, 0, 0, 3]], [[2, 30, 6, 13, 18, 21, 24, 0, 28]], [[3, 6, 12, 15, 18, 21, 24, 27, 30, 21]], [[9, 14, 15, 18, 21, 24, 27, 12]], [[-2, 5, -6, -6, 7, -8, -6]], [[1, 2, -2, 3, 5, -7, 7, -8, 1, 9, -10, -8, 3, 5]], [[1, -2, 4, -4, 5, -6, 7, 18, 9, 0, 5]], [[1, -2, 3, -4, 5, -6, 7, -8, 21, -10, -8, 3]], [[2, 30, 6, 13, 18, 20, 24, 0, 28]], [[3, 6, 9, 12, 18, 16, 21, 24, 28]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, -7, 5]], [[2, 4, 6, 8, 10, 12, 14, 16, 20]], [[0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0]], [[30, 6, 13, 18, 21, 24, 0, 28]], [[2, 30, 6, 12, 18, 21, 24, 28]], [[0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0]], [[0, 0, 0, 3, 14, 24, 19, 0, 0, 3]], [[0, 0, 0, 27, 3, 0, 23, 0, 8, 0, -1, 0]], [[1, -2, 3, -4, 5, -6, -9, 7, -8, 9, 7, -8, -6, 3]], [[3, 6, 9, 8, 12, 15, 18, 21, 24, 30, 21]], [[3, 6, 9, 22, 11, 18, 21, 24]], [[2, -9, 6, 8, 12, 18, 21, 24, 28, 28, 12]], [[3, 10, 6, 9, 8, 12, 15, 18, 21, 24, 30, 21]], [[3, 6, 2, 22, 12, 18, 21, 25]], [[1, -2, 2, -4, 5, -6, 7, 9, -10, -8]], [[13, 3, -8, 6, 12, 15, 18, 21, 24, 27]], [[1, -2, 3, -4, 5, -6, 7, -8, 21, -10, -8, 8]], [[1, 2, -4, 5, -6, 7, 9, -10, -8]], [[10, 6, 9, 8, 12, 15, 18, 21, 24, 30, 21]], [[0, 0, 3, 0, 3, 0, 0, 0]], [[1, -2, 4, -4, 5, -6, 7, 18, 9, 5]], [[0, 0, 0, 3, 11, 14, 24, 19, 0, 0, 3, 0]], [[1, -3, 3, -4, 5, -6, 7, -8, 9, -10, -7, 5]], [[0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0]], [[2, 4, 6, 13, 10, 12]], [[1, -2, 4, -4, 5, -6, 7, 18, 0, -8, 5, 0]], [[1, -2, -4, 5, -6, 7, -8, 9, -10, -8]], [[3, 2, 22, 12, 18, 21]], [[21, 5, 22, 12, 18, 21, 12, 24]], [[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12, 13, -14]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13]], [[3, 6, 1, 7, 0, 8, -9, -3, 10, 11]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12, 20, -14]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 18, 19, 20]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, -14]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, -14, 1]], [[2, 2, 2, 2, 2, 3, 3, 3, -9, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 3]], [[1, -2, 3, -4, -2, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, -14, 1]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[3, 6, 1, 7, 8, -9, -3, 4, 11]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, 20]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, -15, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 1]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, -1, 94, 50]], [[2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 18, 19, -16, 20]], [[3, -16, 6, 19, 7, -9, -3, 4, 11]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19]], [[3, 6, 1, 8, 0, 8, -9, -3, 10, 11]], [[2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 9, 5, -10, -12, 13, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 7]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, -14, -12]], [[0, -6, 14, -1, 33, 6, -4, 50, -4, 4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13]], [[1, -2, 3, -4, -2, 5, -6, 7, -5, -8, 9, -10, 11, -12, 14, -14, 1]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, -16]], [[3, 6, 1, 7, 8, -9, -3, 4, 11, 11]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, -11, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, 49]], [[6, 7, 8, 9, 37, 10, 11, -13, -14, -15, -16, -17, 49, 19]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 9, 5, -10, -12, 13, 20, -6]], [[3, 6, 1, 8, 7, 0, 8, -9, -3, 10, 10]], [[0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, -11, 5, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, 20, 19]], [[3, -16, 6, 19, 7, -9, -3, 4, 11, 4]], [[1, -2, 3, -4, -2, 5, 7, -5, -8, 9, -10, -12, 14, -14, 1]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, 49]], [[1, -2, 3, 3, -4, 5, -6, 7, -5, -8, 9, 11, -12, 13, -14, 1, -14]], [[-2, -5, 2, -4, 5, -6, 7, -8, 9, 5, -10, -12, 13, 20, -6]], [[3, 6, 1, 7, 8, -9, -3, 4, 11, 7]], [[3, 6, 1, 7, 8, -9, -3, 4, 7]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 49]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 0, 2, 16, 0]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 88]], [[37, 3, -4, -2, 5, 7, -5, -8, 9, -10, -12, 14, -14, 1]], [[6, 7, 8, 9, 11, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10]], [[70, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 1, 1, 72]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 3, 4, 4, 5, 5, 5, 5, 5]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12, 13, -14, -12]], [[3, 6, 1, 8, 21, 8, -9, -3, 10, 11]], [[-12, -15, -17, 20, 33, 37, 49, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -14, -15, -16, 0, -17, 18, 19, -16, 20]], [[3, 6, 15, 7, 8, -9, -3, 4, 11, 7]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, -14, -4]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -14, -15, 12, -16, 0, -17, 18, 19, -16, 20]], [[0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 1, 2, 3, 4, -11, 5, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[1, -2, 3, -14, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, -14, -12]], [[-15, 1, -2, 3, -14, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, -14, 58, -15]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -9, 0, 2, 16, 0]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, -11, 20]], [[3, 6, 1, 8, 21, 8, -9, -3, 10, 11, -9]], [[2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 49, -16, 19]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14, 10]], [[3, 6, -10, 1, 8, 21, 8, -9, -3, 10, 11]], [[1, -2, 3, -3, -6, 7, -8, 9, -10, 11, -12, 20, -14]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1, 1]], [[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13]], [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 0, 2, 16, 0]], [[3, 94, 6, 1, -4, 8, 21, 8, -9, -3, 10, 11, -9]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, -15, 49, 19, 49, -16]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 0]], [[40, -18, 6, 1, 7, 8, -9, -3, 4, 11, 11, 6]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 11, 19, 49]], [[1, -2, 3, -4, -2, 5, -5, -8, 9, -10, -12, 14, -14, 1]], [[3, 6, 2, 1, 7, 8, -9, -3, 4, 11, 11]], [[6, 7, 8, 9, 10, 11, -14, -15, -16, -17, -17, 18, 19, -11, 20]], [[1, -2, 3, -4, -2, 9, -6, 7, -5, -8, 9, -10, 11, -12, 14, -14, 1]], [[-12, -15, -17, 20, 33, 37, 49, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 88]], [[-12, -15, -17, 20, 33, 37, 49, 39, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 88]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0]], [[-13, -15, -17, 20, 33, 73, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 45]], [[6, 7, 8, 9, 10, 12, 12, -13, -14, -15, -16, -17, -17, 18, 19, -16, 20]], [[-12, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, -1, 94, 50, 50]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 17, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13]], [[3, -16, 0, 6, 19, 7, -9, -3, 4, 11, 4]], [[3, 6, 8, 7, 0, 8, -9, -3, 10, 10, 10]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, 13, -14, 1, -2]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1, 1, -3]], [[37, 3, -4, -2, 5, 7, -5, -8, -7, 9, -10, -12, 14, -14, 1]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 7]], [[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 0, 2, 16, 0, 2]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 10, 5, -10, 11, -12, 13, -14]], [[6, 7, 8, -3, 10, 11, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 10, 5, -10, 11, -12, 13, -14, 92, -10]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 10, 5, -10, 11, 17, 13, -14, 92, -10]], [[6, 7, 45, 9, 37, 10, 11, -13, -14, -16, -17, 49, 19, 45]], [[0, -6, 14, -1, 33, 6, -4, 50, -4, 4, -4, 4, 11, 12, 13, 14, 16, 16, 17, 18, 19, 20, -20, -19, 51, -18, -17, -16, -15, -14, -13]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 9, 92, 94, 50]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0]], [[-12, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 37]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -9, 0, 2, 16, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0]], [[3, -16, 0, 6, 7, -9, -3, 4, 11, 4]], [[1, -2, 3, 5, -6, 7, -8, 9, -10, 11, -12, 20, -14]], [[-13, -15, -17, 20, 33, 73, 37, 40, 45, 48, 49, 72, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 45]], [[1, 1, 1, 1, -9, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5, 5]], [[-17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 37, 50, 50]], [[1, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 18, 19, -16, 20]], [[0, 0, 0, -5, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, -11, 0, 0, 1, 2, 3, 4, -11, 5, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[3, 6, 15, 80, 7, 8, -9, -3, 4, 11, 7]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[3, 6, 1, 8, 0, -9, -3, 10, 11]], [[-12, -15, -17, 20, 33, 82, 49, 39, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 88]], [[6, 7, 45, 9, 37, 10, 11, -13, -14, -16, -17, 49, 19, 45, 45]], [[1, -2, 3, -4, -2, 9, -6, 7, -5, -8, 9, -10, 11, -12, 14, -14, 1, -5]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -12, -10, 11, -12, 13, -14, 1]], [[7, 8, 9, 10, 11, 48, -13, -14, -15, -16, -17, -17, 49, -16, 19]], [[2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 2]], [[2, 16, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 3, 4, 4, 5, 5, 5, 5, 5]], [[1, 7, 8, 9, 10, 11, 12, -13, -14, -16, -17, -17, 18, 19, -16, 20, 7]], [[2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, 20, 19, -17, 10]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, -16, -16, -13]], [[1, 6, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -14, -15, -16, 20, 0, -17, 18, 18, -16, 20, -14, 6]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -15, -4, 11, 12, 13, 14, 15, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, 49, 7]], [[-12, -15, -17, 20, 33, 37, 49, 40, 45, 48, 49, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 88, 58, 33]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 0, 2, 16, 0]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, -11, 20, 20]], [[6, 7, 8, 9, 10, 11, -13, -15, -16, -17, -17, 94, 49]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 14, 15, 16, 17, 18, 19, 20, 21, -9, 0, 2, 16, 0, 0]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 0, 70, 64, 72, 80, 82, 88, 92, 94, 50, 88]], [[73, 1, 1, 1, 1, -9, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 5, 5]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, -15, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5, 5]], [[1, -2, 3, -3, 7, -8, 9, -10, 11, -12, 20, -14]], [[2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 72, 4, 4, 5, 5, 5, 5, 5]], [[1, 6, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 1, -3]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 82, 88, -1, 33, 94, 50, 50]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, 4, -14, -12]], [[1, -2, -5, 2, -4, 6, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14, 10]], [[-12, -15, -17, 20, 33, 37, 49, 40, 45, 49, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50]], [[1, 7, -2, 3, -4, -2, 5, -6, 7, -5, -8, 9, -10, 11, -12, 14, -14, 1]], [[3, -16, 0, 6, 19, 7, -9, 10, 4, 11, 4]], [[2, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11, 13, 2]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, -1, 0, 2, 16, 0]], [[-12, -15, -17, 20, 33, 37, 49, 40, 45, 49, 48, 49, -7, 58, 82, 70, 64, 72, 80, 82, 88, 92, 94, 50]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, -15, 49, 19, 49, -16, 8]], [[13, -2, 3, -4, 5, -13, -6, 7, -8, 9, -10, 11, -12, 13, -14, -12, 13]], [[37, 3, -4, -2, 5, 7, -5, -8, -7, 9, -10, -13, 14, -14, 1]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, 18, 19, 20, 19]], [[1, 1, 1, 1, 1, 2, 2, 1, 2, -15, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, -11, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[1, -2, 3, 5, -6, 7, -8, 9, -10, -13, 11, -12, 20, -14]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12, 20, -14, 11]], [[1, -2, 3, 3, -4, 5, -6, 6, -5, -8, 9, 11, -12, 13, -14, 1, -14]], [[-12, -15, -17, 20, 33, 37, 40, 41, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, -1, 94, 50]], [[1, 1, 1, 1, 1, 73, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5]], [[73, 6, 1, 7, 8, -9, -3, 4, 11, 7]], [[1, 6, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 11, 5, 5, 5, 1, -3]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -3, -10, 11, -12, 13, 4, -14, -12]], [[1, 16, -5, 2, -4, 5, -6, 7, -8, 10, 5, -10, 10, 11, 17, 13, 92, -10]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 10, -4, -10, 11, -12, 13, -14, 92, -10, -8]], [[1, 1, 1, 1, 1, 2, 1, 2, 2, 2, -3, -3, 72, -3, -2, -3, -3, -4, -4, -4, 92, 5, 5, 5, 1, 1, -3]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, 49, 11, 19, 49]], [[-12, -15, -17, 20, 33, 49, 40, 45, 49, 48, 49, 50, 58, 64, 82, 72, 80, 82, 88, 92, 94, 50]], [[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 0]], [[3, 6, 1, 8, 0, -9, -3, 10, 11, 6, 6]], [[6, 7, 8, 9, 10, -13, -14, -15, -16, -17, 18, 19, -11, 20]], [[70, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -5, -4, -4, -4, 92, 5, 5, 5, 5, 1, 1, 72]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0, 6]], [[-9, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, -16, -13]], [[1, -14, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1]], [[-15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, -15, 64, 72, 80, 82, 88, 92, 94, 88, 50]], [[6, 7, 8, 9, 49, 10, 11, -13, -14, -15, -16, -17, -17, 49, 49]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 0, 2, 17, 0]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 17, 18, 19, 20, -20, -19, 13, -18, -17, -16, -15, -14, -13]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, 20, -15]], [[1, -2, 3, 5, -6, 7, -8, -7, 9, -10, -13, 11, -12, 20, -14, 11]], [[6, 7, 8, 9, 49, -13, 10, 11, -13, -14, -15, -16, -17, -17, 49, 49]], [[-2, -3, -4, -5, -7, -8, -9, -10, -11]], [[1, -2, 3, 5, -6, 7, -8, 9, -10, -13, 11, -12, 20, -14, -2, -6, 5]], [[3, 6, 1, 8, 0, 8, -9, -3, 10, 11, 1]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, 49, 11, 19, 49, 49]], [[1, 1, 1, 1, -9, 1, 2, 2, 2, 2, 2, -3, -3, -3, 92, -3, -4, 4, -4, -4, -4, 92, 5, 5, 5, 5, 5, 5, 5, 92]], [[1, -2, 3, -4, -2, 5, 7, -8, 9, -10, -12, 14, -14, 1]], [[1, 6, 1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -5, 92, 11, 5, 5, 5, 1, -3, 2]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -1, 0, 2, 16, 0]], [[3, 6, 8, 7, 0, 8, -3, 10, 10, 10]], [[-15, 1, -2, 3, -14, 5, -6, -8, 9, -10, 11, -12, 13, -14, 58]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0, 6]], [[2, 2, 2, 12, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[1, -2, 3, -4, 5, -6, 7, -14, -8, 9, -10, 11, -12, 13, -14, 13]], [[-12, -17, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, -17]], [[1, -2, 3, -4, -2, 9, -6, 7, -5, -8, 9, -10, 12, -12, 14, -14, 1]], [[2, 6, -10, 1, 8, 21, -9, -3, 10, 11]], [[1, -2, -5, -4, 6, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14, 10]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -12, -4, 11, 12, 13, 14, 15, 17, 18, 19, 20, -20, -19, 13, -18, -17, -16, -15, -14, -13, -4]], [[-12, -15, -13, -17, 20, 33, 82, 49, 39, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 88]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -17, -17, -17, 49, 19, 49, 9]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 88]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, -1, 94, 50, 50, 64]], [[1, -2, -5, 2, -4, 5, -6, 7, -10, -8, 9, 5, -10, 11, -12, 13, -14]], [[6, 7, 8, 9, 14, 11, -13, -14, -15, -16, -17, -17, 49, 13, 7]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, 18, 19, 20, 19, 18]], [[3, 6, 2, 1, 7, 8, -9, -3, 3, 11, 11]], [[2, 3, 4, 5, 12, 6, 7, 8, 10, 11, 13, 2]], [[-12, -15, -17, 20, 33, 49, 40, 45, 49, 48, 49, 50, 58, 21, 82, 72, 80, 82, 88, 94, 50]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0]], [[94, 6, 1, -4, 8, 21, 8, -9, -3, 10, -9]], [[6, 7, 8, 9, 11, -16, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 19, 19, 20, -15]], [[6, 7, 8, 9, 10, -13, -14, -15, -16, -17, -17, 49, 19, -14]], [[11, 4, 6, 2, 1, 7, 8, -9, -3, 3, 11, 11, -9]], [[6, 15, 7, 8, -9, -3, 4, 11, 7]], [[1, 1, 1, 1, 2, 48, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, 19, -15]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 50, 58, 9, 64, 72, 80, 82, 88, 92, 94, 88]], [[1, -4, -2, 5, -6, 7, -5, -8, 9, -10, 11, -12, 14, -14, 1]], [[3, 6, -10, 1, 8, 21, 8, -9, -3]], [[6, 7, 8, 9, 10, 12, 12, -14, -15, -16, -17, -17, 18, 19, -16, 20, -16]], [[0, 0, 0, -5, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, -11, 0, 0, 1, 2, 3, 4, -11, 5, 7, 9, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0]], [[1, -2, -5, -4, 5, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14, 10, 13]], [[3, 6, 1, -9, -3, 4, 7]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 50, 9, 64, 72, 80, 82, 88, 92, 94, 88]], [[40, -19, 6, 1, 7, 8, -9, -3, 4, 11, 11, 6]], [[73, 1, 1, 1, 1, -9, 1, 2, 2, 2, 2, 45, 2, -3, -3, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 5, 5]], [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 0, 2, 16, 0, 0, 19]], [[73, 1, 1, 1, 1, -9, 1, 2, 2, 2, 2, 45, 2, -3, -3, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 5, 5, -3]], [[1, -2, -5, -4, 5, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14, 10, 13, 13]], [[3, 7, 8, 7, 0, 8, -9, -3, 10, 10]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 10, 5, -10, 11, -12, 11, 13, -14, 92, -10, 13]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 9, 72, 80, 82, 88, 9, 92, 94, 50]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 1, 2, 20, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 0]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12, 20, -14, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1]], [[6, 7, 8, 9, 10, 10, -13, -15, -16, -17, -17, 94, 49]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 18, 19, -16, 20, -16]], [[2, 2, 2, 2, 2, 3, 3, 3, -9, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 4, 5, 3]], [[1, -14, 1, 1, 1, 2, 2, 2, 2, 1, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1]], [[6, 7, 8, 9, 5, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20]], [[1, -2, -5, 2, -4, 5, -6, 7, -10, -8, 9, 5, -10, 11, -12, 13, -14, 2]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 50, 58, 9, 64, 72, 80, 82, 88, 92, 94, 88, 50]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 64, 72, 80, 82, 88, -1, 94, 50]], [[1, -2, 3, -4, -2, 5, 7, -8, -10, -12, 14, -14, 1]], [[1, -2, 3, -4, -2, -5, -8, 9, -10, -12, 14, -14, 1]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 0, 70, 64, 72, 80, 82, 19, 92, 94, 50, 88]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0]], [[-3, 3, 6, 8, 7, 8, -3, 10, 10]], [[-3, 3, 6, 8, 7, 8, -3, 10, 10, 10]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 18, 19, 20, -17]], [[1, -2, 3, 40, -6, 7, -8, -7, 9, -10, -13, 11, -12, 20, -14, 11, -6]], [[-12, 13, -17, 20, 33, 37, 49, 40, 45, 49, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50]], [[6, -10, 1, 8, 21, 8, -9, -3, 8]], [[0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[3, -16, 0, 6, 19, 1, 7, 6, 10, 4, 11, 4]], [[2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [[0, -5, 14, -1, -11, -15, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13, 14]], [[1, -2, 3, -4, 5, -6, 7, 39, -8, 9, -3, -10, 11, -12, 13, 4, -14, -12, 1]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 10, 5, -10, 11, 17, 13, -14, 92, -10, -6]], [[-12, -15, -17, 20, 33, 37, 49, 39, 45, 48, 49, 50, 58, 70, 64, 72, 80, 46, 82, 88, 92, 94, 50, 88]], [[1, 16, 3, -6, 7, -8, 9, -10, 11, -12, 20, -14]], [[-12, -15, -18, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 9, 72, 80, 82, 88, 9, 92, 94, 50, 58]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 50, 58, 9, 64, 72, 80, 82, 88, 92, 94, 88, 50, 88]], [[1, 6, 1, 1, -3, 1, 1, 2, 2, 2, 2, 2, -3, 72, 20, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -14, -15, -16, 20, 0, -17, 18, 18, -16, 20, -14, 6, -17]], [[1, -4, -2, 5, -6, 20, 7, -5, -8, 9, -10, 11, -12, 14, -14, 1]], [[0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 2, 16, 0, 12]], [[2, -9, 2, 2, 12, 2, 4, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]], [[0, 0, 0, -5, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, -11, 0, 0, 1, 2, 3, 4, -11, 5, 7, 9, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 21]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, -15, 49, 19, 49, -16, -16]], [[3, 6, 1, 0, -9, -3, 10, 11]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, 4, -14, -12, -5]], [[-12, -17, 87, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, -17]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -14, -15, 12, -16, 0, -17, 18, 19, -16, 20, 8]], [[0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, -11, 5, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[-12, -15, -17, 20, -1, 33, 49, 40, 45, 49, 48, 49, 50, 58, 64, 82, 72, 80, 82, 88, 92, 94, 50]], [[6, 7, 8, -15, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 49, -16, 19]], [[1, -2, 3, -4, 5, -12, -6, 7, -8, 9, -10, 11, -12, 20, -14, 11]], [[1, 1, 1, 1, 1, 2, 2, 1, 2, -15, -3, -3, -3, -3, -3, -4, -4, -3, -4, 92, 5, 5, 5, 5, 5]], [[3, 6, 1, -9, -3, 4, 6]], [[1, 1, 1, 1, 2, 48, 2, 2, 1, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 9, 11, -13, -14, -15, -16, -17, -17, 18, 19, 20]], [[1, 1, 2, 1, 2, 14, 48, 2, 2, 1, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[6, 7, 8, -3, -18, 10, 11, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 9, 72, 80, 82, 88, 9, 92, 94, 50, 72]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 71, 64, 72, 80, 82, 88, 92, 93, 50]], [[-15, -17, 20, 33, 37, 41, 40, 45, 48, 50, 58, 70, -15, 64, 72, 80, 82, 88, 92, 94, 88, 49]], [[-12, -17, 20, 33, 37, 40, 45, 48, 50, 58, -18, 64, 72, 80, 82, 88, 92, 94, 50, -17]], [[3, 0, 6, 19, 7, -9, -3, -4, 11, 4]], [[-12, -14, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 82, 88, -1, 33, 94, 50, 50]], [[3, 6, 1, 7, 8, -9, -3, 4, 11, 11, 6]], [[1, 7, -2, 3, -4, -2, 5, -6, 7, -5, -8, 3, 9, -10, 11, -12, 14, -14, 1]], [[6, 7, 8, 9, 11, -16, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10, -16]], [[3, 6, 2, 1, 7, 8, -9, -3, 4, 11, 11, 3]], [[0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 2, 16, 0, 12]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12, 13, -14, -12, -2]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -4]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]], [[0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[1, -2, 3, -4, 5, -6, 7, -8, 5, 9, -10, 11, -12, 7, -14, -12]], [[1, -2, 3, -4, -2, 9, -6, 7, -5, -8, 88, 9, -10, 11, -12, 14, -14, 1]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 18, 19, -15]], [[13, -2, 3, -4, 5, 7, -8, 9, -10, 11, -12, 13, -14, -13, -12]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0]], [[2, 16, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 3, 4, 4, 5, 5, 5, 5, 5, 4]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14, 16, 17, 18, 19, 20, 21, 0]], [[1, -2, 3, -4, -6, 7, -5, -8, 9, -10, 11, -12, 13, -4]], [[5, -2, 3, -9, -4, 5, -6, 7, -14, -8, 9, -10, 11, -12, 13, -14, 13]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -14, -15, -16, 20, -1, -17, 18, 18, -16, 20, -14, 6]], [[1, -2, -5, -4, 5, -6, 7, -8, 5, -10, 11, -12, 13, -14, 10, 13, 13, 7]], [[-12, -17, 20, 33, 37, 40, 45, 48, 50, 58, -18, 64, 1, -4, 80, 82, 88, 92, 94, 50, -17]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 0, -15, 64, 72, 80, 82, 19, 92, 94, 50, 88, 70]], [[6, 7, 8, 9, 49, 10, 11, -13, -14, -15, -16, 71, -17, 49, 49, -13]], [[-2, -3, -4, -5, -7, -12, -8, -10, -10, -11]], [[-12, -4, -2, 5, -6, 7, -5, -8, 9, -10, 11, -12, 14, -14, 1, 11]], [[2, 2, 2, 2, 2, 3, 3, 3, -9, 3, 3, 4, 4, 4, 4, 4, 5, 5, 4, 5, 3]], [[3, 46, 94, 6, 1, -4, 8, 21, 8, -9, -3, 11, -9]], [[-12, -15, -17, 20, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94]], [[1, -2, -5, 2, -4, 5, -6, 7, -10, -8, 9, 5, 48, 11, -12, 13, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, -17, 18, 19, 20, 21, 0]], [[-13, -15, -17, 20, 33, 73, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 94, 50, 45]], [[6, 8, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, -11, 20, 20]], [[-12, -17, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, -17, 72]], [[6, 7, -17, 50, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 49, -16, 19]], [[1, 1, 1, 1, 1, 1, 1, 2, 2, 2, -3, -3, 18, 72, -3, -2, -3, -3, -4, -4, -4, 92, 5, 5, 5, 1, 1, -3, 72]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 33, 88, 92, 94, 50]], [[-12, -15, -17, 20, 33, 36, 49, 39, 45, 48, 49, 50, 58, 70, 64, -13, 80, 46, 82, 88, 92, 94, 50, 88, 36]], [[3, -16, 6, 19, 7, -9, -3, 4, 11, 4, -16]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 82, 87, -1, 33, 94, 50, 50, 33]], [[1, -2, 3, -4, 5, -6, 7, 5, -5, -8, 9, -10, 11, -3, 13, -14, -4]], [[-3, 3, 6, 8, 6, 8, -3, 10]], [[1, 7, 8, 9, 10, 12, -13, -14, -16, -17, -17, 18, 19, -16, 20, 7]], [[6, 7, 45, 8, 37, 10, 11, -13, -14, -16, -17, 49, 19, 45]], [[1, -2, 3, -4, 5, -6, 7, 39, -9, 9, -3, -10, 11, -12, 13, 4, -14, -12, 1]], [[3, -16, 6, -8, 19, 7, -9, -3, 4, 11, 4, -16]], [[1, -2, -5, -4, 5, -6, 7, -8, 9, 2, 5, -10, 11, -12, 13, -14, 10, 13]], [[3, 6, 1, 8, 21, 8, -9, -3, 10, 11, 1]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, -20, 20, 10]], [[6, 7, 8, 9, 11, 12, -13, -14, -15, -16, -17, -17, -15, -15, 18, 19, -16, 20, 10]], [[6, 7, 8, 9, 10, 10, -13, -15, -16, -17, -17, 49]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 81, 82, 88, 92, 94, 50, -17]], [[3, 6, 1, 8, 0, 8, -9, -3, 10, 11, 0]], [[1, 1, 2, 2, 2, 14, 48, 2, 2, 1, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5, -3]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -16, -4, 11, 12, 13, 14, 15, 17, 18, 19, 20, -20, -14, -19, 13, -18, -17, -16, -15, -14, -13, -4]], [[1, -2, -5, 2, -4, 6, -6, 87, 7, -8, 9, 5, -10, 11, -12, -14, 10]], [[7, 8, 9, 10, 11, -14, -15, -16, -17, -17, 49, 19, 49]], [[6, 7, 8, 9, 10, 10, -13, -15, -16, -17, -17, 94, -2, 49]], [[3, 6, 1, 7, 16, 8, -9, -3, 10, 11]], [[3, -16, 0, 6, 40, 19, 7, -9, 10, 4, 11, 4]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, -11, 20, 20]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10, -13]], [[-2, 3, -3, 7, -8, 9, -10, 11, -12, 20, -14]], [[1, -2, 3, -4, -2, 9, -6, 7, -5, -8, 9, -10, 12, -12, 14, -14, 1, 12]], [[0, 0, 73, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, 0, 2, 16, 0, 2]], [[-12, -17, 20, 33, 37, 40, 45, 48, 50, 58, -18, -6, 1, -4, -13, 82, 88, 92, 94, 50, -17]], [[6, 7, 8, 9, 37, 11, 11, -13, -14, -15, -16, -17, 49, 19]], [[-12, -15, -17, 20, 33, 37, 40, 45, 4, 49, 50, 58, 64, 72, 80, 82, 88, -1, 94, 50]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -7, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[-12, -15, -17, 20, 33, 36, 40, 45, 48, 49, 50, 58, 70, 64, 9, 72, 80, 82, 88, 9, 92, 94, 72, 40]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 10, 5, -10, 11, -12, 13]], [[3, 6, 8, 7, 0, 8, -9, -3, 10, 10, 10, 7]], [[2, 2, 2, 2, 2, 39, 3, 4, 3, 3, -9, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 3, 4, 3, 5]], [[-15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, -15, 64, 72, 80, 82, 88, 94, 88, 50]], [[-12, -15, -17, 20, 33, 37, 49, 40, 45, 49, 48, 49, -7, 58, 82, 70, 64, 72, 80, 82, 88, -8, 92, 94, 50]], [[2, 2, 2, 2, 2, 3, 3, 3, -9, 2, 3, 4, 4, 4, 4, 4, 5, 5, 4, 5, 3]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 14, 21, 0, 7, 0]], [[-12, -15, -17, 20, 33, 37, 39, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 88]], [[6, -12, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, 49, 19, 49]], [[6, 7, 8, 9, 10, 11, 12, 21, -14, -14, -15, -16, 20, 0, -17, 18, 18, -16, 20, -14, 6, -17]], [[1, -2, 3, 5, -6, 7, -8, 9, -10, -13, 11, 20, -2, -6, 5]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 73, 11, 19, 49]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 14, 15, 16, 17, 18, 19, 20, 21, -9, 0, 2, 16, 0]], [[1, -2, -6, 3, -4, 5, -6, 7, -5, -8, 9, -10, 11, -12, 13, 4, -14, -12, -5, 4, -12, -6]], [[6, 1, 8, 21, 8, -9, -3, 10, 11]], [[6, 7, 8, 9, 10, 11, 41, -13, -14, -15, -16, -17, 18, 19, 20]], [[3, 6, -10, 21, 8, -9, -3, 6]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 19, 49, 49]], [[6, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, -17, 49, -16, 19]], [[1, 1, 1, 1, 1, 2, 2, 1, 2, -4, -3, -3, -3, -2, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[1, 1, 1, -3, 1, 1, 2, 2, 2, 2, 2, -7, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5]], [[1, -2, 3, 5, -5, 7, -8, -7, 9, -10, -13, 11, 20, -14, 11, 3]], [[2, 3, 4, 5, 12, 6, 7, 8, 10, 11, 12, 2]], [[1, -2, -5, -3, 2, -4, 5, -6, 7, -8, 9, 5, -10, -12, 13, 20, -6, -10]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -9, 0, 2, 16, 0]], [[1, -2, -5, 7, -4, 5, -6, 7, -8, 10, 5, -10, 11, -12, 13, -14, 92, -10]], [[6, 7, 8, 9, 10, 11, -13, -15, -16, -17, -17, 18, 19, -11, 20, 20]], [[6, 7, 8, -3, -18, 10, 11, 12, -13, -14, -15, -16, -17, -17, -15, 18, 19, -16, 20, 10, -16]], [[-12, -15, -17, 20, 33, 49, 40, 45, 48, 49, 48, 49, 50, 58, 64, 82, 72, 80, 82, 88, 92, 94, 50]], [[3, 6, 1, 8, 0, -1, 8, -9, -3, 10, 11, 0]], [[1, 6, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 11, 5, 5, 5, 1, -3, 71]], [[6, 7, 8, 9, 10, 11, -13, -14, -12, -16, -17, -17, -15, 49, 19, 49, -16, -16, -16]], [[6, 7, 8, 9, 11, 12, -13, -14, -15, -16, -17, -17, -15, -15, 18, 19, -16, 20, 10, -13]], [[-12, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 10]], [[2, 3, 4, 5, 12, 6, 7, 8, 10, 11, 13]], [[1, -2, 3, -6, 7, -8, 9, -10, -13, 11, -12, -4, -14, 7]], [[2, 2, 2, 12, 2, 3, 3, 3, 3, 11, 4, 4, 4, 4, 4, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 19, 19, 20, -15, -15, 7, -15]], [[1, -2, 3, -4, -2, 9, -6, 7, -5, -8, -12, 88, 9, -10, 11, -12, 14, -14, 1, 9]], [[2, 3, 4, 5, 12, 6, 7, 8, 10, 11, 12, 2, 5]], [[2, 2, 2, 2, 3, 3, 3, -9, 2, 3, 4, 4, 4, 4, 4, 5, 5, 4, 5, 3]], [[3, 6, 7, 0, 8, -9, -3, 10, 11]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 5, 6, 7, 8, -16, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -1, -1, 2, 17, 0]], [[2, 3, 11, 4, 5, 12, 6, 7, 8, 10, 11, 12, 2]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 50, 58, 9, 64, 72, 80, 64, 82, 88, 92, 94, 88, 50, 88]], [[1, 14, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -2, -3, -4, -4, -14, -4, -4, -4, 5, 5, 5, 5, 5]], [[0, 0, 0, -5, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, -11, 0, 0, 1, 2, 3, 4, -11, 5, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1]], [[1, -2, 3, -4, -2, 9, -6, 7, -8, 9, -10, 12, -12, 14, -14, 1, 12]], [[-2, -3, -4, -5, -7, -8, -9, -9, -11]], [[6, 7, 8, 9, 11, 12, -13, -14, -15, -16, -17, -15, -15, 18, 19, -16, 20, 10, -13]], [[1, 1, 37, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[1, -2, 3, -4, -2, 9, -6, 7, -8, 9, -10, 12, -12, 14, 9, -14, 1, 12]], [[70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 73, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 1, 2, 20, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 0, 0]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14, 9, 11]], [[1, 7, 8, 9, 10, 7, 12, -13, -16, -17, -17, 18, 19, -16, 20, 7]], [[70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 73, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0]], [[-15, 1, -2, 3, -14, 5, -6, -8, 9, 11, -12, 13, -14, 58]], [[2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4]], [[3, 6, 7, 8, -9, -3, 4, 11]], [[19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 1, 2, 20, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 0]], [[6, 7, 8, 9, 10, 11, -13, 19, -15, -16, -17, 19, 19, 20, -15, -15, 7, -15]], [[-13, -15, -17, 20, 33, 73, 37, 40, 45, 48, 49, 50, 70, 64, 72, 80, 82, 88, 94, 50, 45]], [[1, 1, 1, 1, 1, 2, 1, 2, 2, 2, -3, -3, 72, -3, -2, -3, -3, -4, -4, -4, 92, 5, 5, 5, 1, 1, -3, 1]], [[1, -2, 3, 3, -4, 5, -6, 7, -5, -8, 9, 11, -12, 13, -14, 1, -14, 7]], [[-15, -17, 20, 33, 37, 41, 40, 45, 48, 50, 58, 70, -15, 64, 72, 80, 82, 88, 92, 94, 88, 80, 49]], [[1, -2, -5, 2, -4, 5, -6, 7, -8, -8, 9, 5, -10, -12, 13, -14]], [[1, 6, 1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, 72, -3, -3, -4, -4, -5, 92, 11, 5, 5, 5, 1, -3, 2]], [[1, -2, 3, -4, -2, 9, -6, 7, -8, 9, -10, 12, -12, 14, 9, -14, 12]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0]], [[1, -2, -5, -4, 5, -6, 7, -8, 9, 5, -10, 11, -12, 13, -14, 10, 13, 13, 5]], [[-12, -12, -15, -17, 20, 33, 36, 40, 45, 48, 49, 50, 58, 70, 64, 9, 72, 80, 82, 88, 9, 92, 94, 72, 40, 49]], [[1, -2, -5, 2, -4, 5, -6, 7, -10, -8, 9, 5, 48, 11, -12, 13, -14, -6]], [[2, 3, 4, 5, 12, 6, 16, 8, 10, 11, 12, 2, 5]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, -8, 20, 20]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, 72, -3, -3, -3, -4, -4, -4, 92, 5, 5, 5, 5, 1, 1, -3, -3]], [[2, 3, 4, 5, 12, 6, 7, 8, 10, 11, 12, -16, 5, 12]], [[6, 7, 8, 9, -18, -13, 19, -15, -16, -17, 19, 19, 20, -15, -15, 7, -15]], [[6, 15, 7, 8, -9, 4, 11, 7]], [[-15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, -15, 64, 72, 80, 82, 88, 92, 94, 88, 50, 20]], [[1, -2, 3, -4, -2, 9, -6, 7, -5, -8, -10, -12, 88, 9, -10, 11, -12, 14, -14, 1, 9]], [[-12, -15, -17, 20, 33, 37, 49, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 50, 88, 58, 33]], [[6, 7, 8, 10, -13, -14, -15, -16, -17, -17, 49, 19, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -9, 0, 2, 16, 0, 2]], [[0, 0, 0, -5, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, -12, 0, 0, 1, 2, 3, 4, -11, 5, 7, 9, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 16]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 49, 73, 11, 19, 49, 11]], [[1, -2, 3, 5, -6, 7, -8, -6, 9, -10, -13, 11, -12, 20, -14, -2, -6, 5]], [[-12, -15, -17, 20, 33, 49, 40, 44, 49, 48, 49, 50, 58, 64, 82, 72, 80, 82, 88, 92, 94, 50]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, -9, 0, 2, 16, 0, 0]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, 18, 19, 20, 19, 18]], [[-12, -15, -17, 20, 33, 49, 40, 44, 49, 48, 49, 50, 58, 82, 64, 82, 72, 80, 82, 88, 92, 94, 50]], [[1, -2, 3, 5, -6, 7, -8, 9, -10, -13, 82, 11, 20, -2, -6, 5]], [[1, -2, 3, 3, -4, 5, -6, 7, -5, -8, 9, 11, -12, 13, -14, 1, -14, 7, 1]], [[1, -2, 3, -4, 5, -6, 7, -5, -8, -3, -10, 11, -12, 13, 4, -14, -12]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 0]], [[1, 6, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 72, -3, -3, -3, -4, -4, -4, 92, 11, 5, 92, 5, 1, -3, 71]], [[6, 7, 8, 9, 10, 11, -13, -14, -15, -16, -13, -17, -17, 49, 19]], [[2, 2, 2, 2, 2, 3, 3, 3, -9, 3, 3, 4, 4, 4, 4, 5, 5, 5, 4, 5, 3]], [[94, 6, 1, -4, 8, 21, 8, -9, -3, 10, -9, 1]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -12, -4, -7, 12, 13, 14, 15, 17, 18, 19, 20, -20, -19, 13, -18, -17, -16, -15, -13, -4]], [[70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 73, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 0, 7, 0, 0]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -12, -4, 11, 12, 13, 14, 15, 17, 18, 19, 20, -20, -19, 13, -18, -17, -16, -15, -14, -13, -4, 14]], [[3, 6, -10, 5, 1, 8, 3, 8, -9, -3]], [[7, 8, 9, 10, 3, 48, -13, -14, -15, -16, -17, -17, 49, -16, 19]], [[1, 6, 1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, 72, -3, -3, -4, -4, -5, 92, 11, 5, 5, 5, -5, 1, -3, 2]], [[6, 7, 8, 6, 10, 11, 12, -13, -14, -15, -16, -17, -17, 18, 19, -16, 20, -16]], [[6, 7, 8, 9, 10, 12, 12, -13, -14, 87, -15, -16, -17, -17, 18, 19, -16, 20, 7]], [[1, -2, -3, 3, 3, -4, 5, -6, 7, 33, -5, -8, 9, 11, -12, 13, -14, 1, -14, -6]], [[1, -2, 3, -4, -2, 5, -6, 7, -5, -8, 9, -10, -12, 14, -14, 1]], [[1, 1, 1, 1, 2, 48, 2, 2, 1, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5]], [[3, 6, 1, 8, 0, -9, -3, 11, 11]], [[7, 8, 9, 10, 11, -13, -14, -15, -16, -17, -17, 18, 19, -11, 20, 20, -13]], [[6, 7, 8, 9, 10, 12, -13, -14, -15, -16, -17, -17, 18, 19, 20, 12]], [[1, 1, 1, 1, -9, 1, 2, 2, 2, 2, 2, 5, -3, -3, -3, -3, -3, -4, -4, -4, -4, 92, 5, 5, 5, 5, 5, 5]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 49, 50, 58, 70, 64, 72, 81, 82, 88, 92, 94, 50, -17, 48]], [[6, 7, 8, 9, 10, 12, -13, -14, -15, -16, -17, -17, 18, 19, 20, 12, 8]], [[1, -2, -5, 3, -4, -2, 5, -5, -8, 9, -12, 14, -14, 1]], [[3, -16, 0, 6, 40, 19, 7, -9, 10, 4, 11, 4, 19]], [[3, 6, 1, 8, 0, 8, -9, -2, 10, 1]], [[2]], [[5]], [[1]], [[-1, -2, -3, -4, -5]], [[1, -2, 3, -4, 5]], [[1000000000, -1000000000, 2000000000, -2000000000, 3000000000, -3000000000]], [[0, 0, 1]], [[0, -5, 0, -5, 0]], [[1000000, 2, 1000000]], [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], [[3, 6, 1, 7, 0, 8, -9, -3, -8, 11, 3]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14, 18]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -15, -16, -17, 19, 19, 20, -14, 10]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, 10, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2]], [[1, -2, 3, -4, 5, -6, -6, 7, -8, 9, -10, 11, -12, 13, -14]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12, 14, 8, -14]], [[3, 6, 1, 7, 0, 8, -9, -3, -8, 11, 4]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -4, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[3, 6, 1, 7, 0, 8, -3, -8, 11, 4]], [[2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14]], [[0, -2, 3, -4, 5, -6, -6, 7, -8, 9, -10, 11, -12, 13, -14]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13, -16]], [[1, 7, 0, 8, -3, -8, 11, 4, 7, -3]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -15, -16, -17, 19, 19, 20, -14, 10, 12]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[0, -2, -4, 5, -6, -6, 7, -8, 9, -10, -12, 13, -14]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94]], [[6, 7, 8, 9, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14, 19]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 0, 4, 4, 4, 5, 5, 5, 5, 5, 4]], [[1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]], [[6, 1, 7, 0, 8, 1, -3, -8, 11, 4, 3, 1]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[6, -16, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20]], [[2, 3, 4, 5, 6, 88, 7, 8, 9, 10, 11, 12, 13, 14]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -11, -11]], [[3, 6, 1, 0, 8, -9, 5, -8, 11, 4]], [[-3, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, -3]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 17]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[6, 9, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -16, -17, 19, 19, 20, -14, 10, 11]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[1, -2, 3, -4, 5, -6, 7, -8, 12, 9, -10, 11, -12, -13, 14, 8, -14]], [[6, 9, -16, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14]], [[-12, -15, -8, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, -5, 92, 94]], [[1, 1, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5]], [[-3, -5, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, -3, -4]], [[40, 3, 6, 1, 0, 8, -9, 5, -8, 11, 4, 8]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, -4, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[6, 9, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14, 18, -16, -14, -14]], [[1, -2, 3, -4, 5, -6, -6, -19, -8, 9, -10, 11, -12, 13, -14]], [[1, 20, 3, -4, 5, -6, -6, 7, -8, 9, -10, 11, -12, 13, -14, -12]], [[1, 20, 3, -4, 5, -6, -6, 7, -8, 9, -10, 11, -12, 13, -14, -12, 3]], [[3, 6, 1, 7, 0, 7, -9, -3, -8, 11, 3]], [[40, 3, 1, 0, 8, -9, 5, -8, 11, 4, 8]], [[1, 7, 0, 8, -3, -8, 11, 4, 7, -3, 1]], [[3, 6, 1, 7, -1, 8, -9, -3, -8, 11, 3]], [[1, 20, 5, 3, -4, 5, -6, -6, 49, 7, -8, 9, -10, 11, -12, 13, -14, -12, 3, 5]], [[4, 3, 6, 1, 0, 8, -9, 5, -8, 11, 4]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -4, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[3, 6, 2, 7, 0, 7, -9, -3, -8, 11, 3]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, 37, 13, -14]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 2]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -9, -17, 18, 19, 20]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -16]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 4, 4, 0, 4, 4, 4, 5, 5, 5, 5, 5, 4]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -16, -16, -17, 18, 19, 20]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -9, -17, 18, 19, 20, 19]], [[6, 7, 8, 9, -16, 10, 10, 12, -13, -14, -15, -9, 7, -17, 18, 50, 19, 20, 19]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[1, 1, 6, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, 6, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, 1]], [[72, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -4, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[3, 6, 1, 7, 0, 8, -3, -8, 11, 4, 0]], [[0, -2, 3, -4, 5, -6, -6, 7, -8, -8, 9, -6, -10, 11, -12, -14]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 64]], [[3, 6, 1, 7, 0, 8, -3, -8, 11, 4, 10, 0]], [[1, 2, 2, 5, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]], [[1, 1, 33, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[1, 7, 0, 8, -3, -8, 11, 4, 7, -3, -3]], [[1, 7, 0, 8, -8, 11, 4, -3, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -4, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[3, 6, 1, 7, 0, 8, -3, -8, 11, 6]], [[2, 4, 5, 6, 88, 8, 8, 10, 11, 12, 13, 14]], [[1, 13, 1, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5, -3]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -16, -16, -10, 18, 19, 20]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -11, -11, -1]], [[1, -2, -4, 5, -6, -6, -19, -8, 9, -10, 11, -12, 13]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -15, -16, -17, 19, 19, 20, -14, 10, 6]], [[2, 3, 4, 5, 6, 88, 7, 8, 9, 10, 11, 12, 13, 14, 11]], [[3, 6, 1, 7, 0, -9, -3, -8, 11, 3]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, 10, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2]], [[1, -2, 3, -4, 5, -6, 7, -8, -10, 11, -12, -13, 14, 8, -14, 1]], [[4, -9, 3, 6, 1, 0, 8, -10, 5, -8, 4]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[6, 1, 7, 0, 8, 2, 1, -3, -8, 11, 4, 3, 1]], [[6, 7, 8, 9, -16, 10, 10, 12, -13, -14, -15, -8, 7, -17, 18, 50, 19, 20, 19]], [[72, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -4, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, 2]], [[2, 3, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 48, 58, 70, 64, 72, 80, 82, 88, 92, 94, 64]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, -4, 5, 5, 5, 5]], [[2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 7]], [[3, 6, 1, 7, 0, 8, -9, -3, -8, 11, 3, 1]], [[1, -2, -7, -4, 5, -6, 7, 9, -10, 11, 37, 13, -14]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, 37, 13]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 6, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, 21]], [[1, 3, -4, 5, -6, 7, -8, 12, 9, -10, 11, -12, -13, 14, 8, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0]], [[1, 20, 5, 3, -4, 5, -6, -6, 49, 7, -8, 9, -10, 11, -12, 13, -14, -12, 3, 5, -8]], [[7, 8, 9, 11, 12, -13, 8, -15, -16, -17, 18, 19, 20, -14, 19]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 48, 50, 58, 70, 64, 72, 70, 80, 82, 88, 92, 94, 64]], [[3, 6, 1, 7, 0, 8, -9, -3, 72, 11, 3, 1]], [[-12, -15, 48, -17, 20, 33, 37, 40, 45, 48, 48, 50, 58, 70, 64, 72, 70, 80, 82, 88, 92, 94, 64]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, 1]], [[1, 1, 6, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, 6, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, 1, 2]], [[2, 4, 5, 6, 88, 8, 8, 10, 11, 12, 13, 14, 88]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -16, -16, -10, 18, 19, 20]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 2]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -17, -19, -18, -17, -16, -15, -14, -16]], [[6, 7, 8, 9, 10, 11, 12, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14, -13]], [[1, 2, 2, 5, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]], [[0, -6, 14, -1, -11, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13, -16, -4]], [[3, 6, 1, 7, 0, 8, -9, -3, 72, 11, 3, 1, 72]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -9, -17, 18, 19, 20, 9]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, -3, -3, -3, -3, 0, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, 1]], [[1, 1, 21, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5]], [[3, 6, 1, 7, 0, -9, -3, -8, 11, 3, 7]], [[1, -2, 3, -4, 5, -6, 7, -8, -10, 11, -12, -13, 14, 8, 1, -8]], [[1, -2, -4, 5, -6, -6, -19, -8, -10, 11, -12, 13]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 3]], [[3, 1, 7, 0, 8, -4, -8, 11, 4]], [[-7, 2, 4, 5, 6, 88, 8, 8, 10, 11, 12, 13, 14, 88]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -16, -17, 18, 19, 20, 9]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -15, 20, -16, -17, 19, 19, 20, -14, 10, 6, -17]], [[1, 1, -18, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5]], [[1, 1, 33, 1, 1, 1, 3, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[3, 6, 1, 7, 0, 8, -9, -3, -8, 11, -7, 4]], [[6, 7, 8, 9, 10, -16, 11, 12, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14, -13, -13]], [[6, 7, 8, 9, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14, 19]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 4]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 11, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[1, 1, 33, 1, 1, 1, 3, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, -20, 5]], [[2, 3, 4, 5, 6, 88, 7, 8, 9, 10, 11, 12, 13, 58, 14, 11]], [[49, -2, 3, -4, 5, -6, 7, -8, -10, 11, -12, -13, 14, 8, -14, 1]], [[3, 6, 1, 7, 8, -9, -3, 72, 11, 3, 1, 72]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -15, 20, -16, -17, 19, 19, 20, 10, 6, -17]], [[1, -2, 3, 80, 5, -6, 7, -8, 9, -10, 11, -12, 13, -14]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -11]], [[2, 4, 5, 6, 88, 8, 8, 10, 11, 12, 18, 13, 14, 88, 12, 13]], [[3, 6, 1, 7, 0, 8, -9, -3, 72, 11, 94, 1]], [[3, 6, 7, 8, -9, -3, 72, 11, 3, 1, 72]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5]], [[4, -9, 3, 6, 1, 0, 8, -10, 5, -8, 4, 4]], [[1, 3, -4, 5, -6, 7, -8, 12, 8, -10, 11, -12, -13, 14, 8, -14, -4]], [[3, 6, 1, 7, 0, 8, -9, 9, -3, 72, 6, 11, 3, 1, 72]], [[1, 1, 1, 18, 1, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5, -3]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40, 20, 21]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[3, 2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 4]], [[1, 1, 1, 18, 1, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, -9, 5, 5, 5, -3]], [[3, 6, 1, 7, 0, -9, -3, 40, -8, 11, 3, 7]], [[0, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13, -16]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 2, 2]], [[1, 1, 21, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5, 5]], [[3, 6, 1, 7, 0, 8, -9, -3, 72, 11, 70, 3, 1]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, 15, -19, -18, -17, -16, -15, -13]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 48, 58, 70, 64, 72, -1, 80, 82, 88, 92, 94, 64, 72]], [[-12, -15, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, 82, 33, 92, 94]], [[3, 6, 1, 70, 0, 8, -3, -8, 11, 4, 10, 0]], [[3, 6, 1, 7, 0, 8, -3, -8, 11]], [[1, 1, 1, 1, 2, 2, 16, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, 1]], [[3, 6, 1, 7, 0, -9, -3, 40, 11, 3, 7]], [[3, 1, 7, 0, 8, -4, -8, 11, 4, -3]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 3, 5, 5, 5, 5, 4]], [[40, 3, 6, 1, 0, 8, -9, 5, -8, 11, 4, 8, 8]], [[1, -2, 3, 80, 5, -6, 7, -8, 9, -10, 9, 11, -12, 13, -14]], [[1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[1, 1, 1, 1, 8, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2]], [[-12, -15, -17, 20, 33, 37, 45, 48, 49, 58, 70, 64, 72, 80, 82, 88, 92, 94, 64, 64]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 4, 11, -12, 13, -14]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 2, 5, -3]], [[3, 6, 2, 7, 0, 7, -9, -3, -8, -6, 3, 2]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, 18, -17, 18, 19, 20, -14, 18]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 6, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, 21]], [[3, 6, 1, 0, 8, 13, -9, 5, -8, 11, 4]], [[40, 3, 6, 1, -13, 8, -9, 5, -8, 11, 4, 8]], [[1, 13, 1, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5, -3, -3]], [[3, 6, 1, 7, 8, -9, -3, 72, 3, 1, 72]], [[1, 7, 0, 8, 1, -8, 11, 4, -3, 0]], [[6, 7, -18, -15, 9, -16, 10, 11, 12, -13, -14, -15, -16, -16, -10, 18, 19, 20]], [[0, -2, 3, -4, 5, -6, 7, -6, 7, -8, 9, -10, 11, -12, 13, -14]], [[1, 1, 1, 18, 1, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 6, 5, 5, -9, 5, 5, 5, -3]], [[-12, -15, -17, 20, 33, 37, 40, 48, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94]], [[3, 6, 1, 7, 8, -3, -8, 11, 4, 10, 0]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 2, 5, 15]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 6, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, 21, 0, 6]], [[6, 7, -15, 8, 9, 10, -16, 11, 12, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14, -13, -13]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 4, 4, 0, 4, 4, 3, 4, 5, 5, 5, 5, 5, 4]], [[0, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13, -16, 14]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -9, -17, 18, 19, 20, 6, 12]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -9, -17, -4, 18, 19, 20]], [[1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, 37, 13, -2]], [[0, -2, 3, -4, 5, -6, 7, -6, 7, -8, -10, 11, -12, 13, -14]], [[0, -2, 3, -4, 5, -6, 7, -6, 7, -8, -10, 11, -12, 13, -14, -4]], [[3, 6, 1, 7, 0, 8, -3, -8, 6, 11]], [[88, 4, 3, 6, 1, 0, 8, -9, 5, -8, 11, 4]], [[3, 6, 1, 7, 0, 8, -9, 9, -3, 82, 11, 4]], [[0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[72, 1, 1, 1, 1, 1, 2, 2, 2, 14, 2, -3, -3, -4, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[1, -2, -4, 5, -6, -6, -19, -8, -11, 11, -13, 13, -6]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, -4, 5, 5, 5, 4]], [[1, 1, 33, 1, 1, 1, 3, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, -20, 5, 1]], [[2, 4, 5, 6, 88, 8, 2, 9, 10, 11, 12, 13, 14, 88]], [[3, 6, 1, 0, 8, 13, -9, 5, -8, -9, 4]], [[3, 6, 1, 7, -3, -8, 6, 11, 7]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, 15, -19, -18, -17, -16, -15, -13, 15]], [[0, -2, 3, -4, 5, -6, 7, -6, 7, -8, -10, 11, -12, 13, -14, -4, -12]], [[6, 7, 8, 9, 10, 11, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14, -13]], [[8, -2, -4, 5, -6, -6, -19, 9, -10, 11, -12, 13]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 11, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, -17, -3, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5]], [[3, 6, 1, 7, 8, -9, -3, 72, 11, 1, 72]], [[3, 6, 1, 7, 0, 8, -9, -3, -8, 11, 4, 11]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -4, -3, -3, -4, -4, -4, -4, -4, 5, 4, 5, 5, 5, 5, -3]], [[2, 2, 2, 2, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]], [[2, 4, 5, 6, 88, 8, 2, 9, 10, 11, 7, 12, 13, 14, 88]], [[1, -2, 3, 7, 5, -6, -8, 9, -2, -10, 11, 37, 13, 9]], [[2, 3, 3, 5, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14]], [[3, 6, 1, 7, 0, -9, -3, -8, 2, 11, 3]], [[0, -2, 3, -4, 5, -6, 7, -6, 7, -8, -10, 11, -12, 13, -14, -4, -12, 13]], [[20, -15, -17, 20, 33, 37, 40, 45, 48, 48, 50, 58, 70, 64, 72, 70, 80, 82, 88, 92, 94, 64]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -15, -16, -17, 19, 19, 20, -14, 10, 12, 8, 19]], [[1, 1, 1, 1, 1, 2, 2, 1, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, -4, -4, 5, 5, 5, 4]], [[1, 1, 1, 18, 1, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, -1, 5, 5, -3]], [[6, 7, 8, 9, 10, 11, 12, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14, -13, 18, 7]], [[3, 6, 1, 7, 0, -9, -3, 40, 11, 3, 7, 6]], [[-12, -15, 48, -17, 20, 33, 37, 40, 45, 48, 48, 50, 58, 70, 64, 72, 70, 80, 82, 88, 92, 10, 64, 70]], [[3, 6, 7, 7, -3, -8, 6, 11, 7]], [[6, 9, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 18, 19, 20, -14, 18, -16, -14, -14, 10]], [[1, -2, -7, 5, -6, 7, 9, -10, 11, 37, 13, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 6, 10, 11, 12, 13, 14, 15, 15, 17, 18, 19, 20, 21]], [[1, 1, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5, 1]], [[2, 4, 14, 5, 6, 88, 8, 2, 9, 10, 11, 7, 12, 13, 14, 88]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -17, -16, -10, 18, 19, 20]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 13, -20, -19, -18, -17, -16, -15, -14, -16]], [[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -11, -3]], [[2, 2, 2, 2, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 2]], [[3, 1, 7, -3, -8, 45, 6, 11, 7]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[3, 6, 1, 7, 8, 8, -9, -4, -3, 72, 3, 1, 72]], [[1, 1, 1, 18, 1, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 4, 5, -3]], [[1, 1, 1, 1, 1, 2, 2, -10, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 2]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, -4, 5, 5, 5, 4, -3]], [[-1, 3, -4, 5, -6, 7, -8, 12, 8, -10, 11, -12, -13, 14, 8, -14, -4, 8, -1]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -15, -9, -17, 18, 19, 20, 6, 45, 12]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, -3, 21, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[6, 8, 9, 10, 11, 19, 12, -13, -14, -15, 20, -16, -17, 19, 19, 20, -14, 10, 6, 11, -17]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, 94, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[-20, 6, 1, 7, 0, 8, -9, -3, -8, 11, 4]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 2, -4]], [[3, 6, 1, 7, 8, -14, -9, -3, 72, 11, 3, 1, 72]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 6, 10, 11, 12, 13, 72, 14, 15, 15, 18, 19, 20, 21]], [[1, 13, 45, 1, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -11, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5, -3, -3]], [[6, 7, 8, -16, 10, 11, 12, -13, -14, -15, -16, -16, -10, 18, 19, 20]], [[0, -2, 3, -4, 5, -6, 7, -6, 7, -8, -10, 11, -12, 13, -14, 7]], [[-12, -15, -17, 20, 33, 37, 40, 48, 50, 58, 50, 70, 64, 72, 80, 82, 88, 92, 94]], [[1, 1, 33, 1, 1, 1, 3, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, 5, 5, 5, 5, 5]], [[3, 6, 2, 7, 7, -9, -3, -8, 11, 3]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -4, -3, -3, -3, -4, -4, -4, -4, -4, -4, 5, 5, 2, 5, 5]], [[8, -2, -4, 5, -6, 9, -10, 11, -12, 13]], [[-3, -5, 1, -4, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, -3, -4, -3]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, -3, -3, -3, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 2, 5, 15]], [[40, 3, 6, 1, 0, 8, -9, 5, -8, 11, 4, 8, -8]], [[6, 7, 8, 9, 10, 11, 12, -14, -15, -16, -17, 18, 19, -19, -14, 18, -13]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, 15, -19, -18, -17, -16, -13, 15]], [[6, 7, 8, 9, 10, -13, 11, 19, -13, -14, -15, -16, -17, 19, 19, 20, -14, 10, 6]], [[72, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -4, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3, 2, 1]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 5]], [[-8, 2, 4, 5, 6, 88, 8, 8, 10, 11, 12, 13, 14, 88, 5, 5]], [[1, -2, 17, 3, -4, 5, -6, 7, -8, 9, -10, 4, 11, -12, 13, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21]], [[3, 6, 1, 7, 0, 8, -9, -3, 72, 11, 3, 94, 1, 72, 94]], [[6, 7, 8, 9, -16, 10, 11, 12, -13, -14, -16, -10, 18, 19, 20]], [[3, 6, 1, 7, 0, 8, -3, -8, 11, 4, 0, 8]], [[0, 18, -2, 3, -4, 5, -6, -6, 7, -8, -8, 9, -6, -10, 11, -12, -14, 18]], [[3, 1, 7, 0, 8, -3, -8, 6, 11]], [[0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[2, 6, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 3]], [[0, -2, 3, -4, 5, -6, 7, -6, 7, -8, -10, 11, -12, 13, -14, -14, 7]], [[2, 4, 5, 6, 88, 12, 8, 8, 10, 11, 12, 13, 14, 88]], [[3, 6, 2, 7, 7, -9, -3, -8, -2, 11, 3]], [[4, 2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 4, 5]], [[1, 1, 1, 1, 8, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 6, 5, 5, 2]], [[88, 4, 3, 6, 1, 0, 8, -9, 5, -8, 11, 4, 4]], [[6, 7, 8, 9, -16, 10, 11, 12, -14, -15, -9, -17, 18, 19, 20, 6, 45, 12, 6, -17]], [[3, 7, 1, 7, 0, 8, -3, -8, 11, 6]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, -4, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 5]], [[6, 7, 8, 9, 10, 11, 12, -20, -14, -15, -16, -17, 18, 19, 20, -14, 18]], [[6, 7, 8, 9, 10, 11, 19, 12, -13, -14, -15, -16, -17, 19, 19, 20, -14, 10, 12, -13]], [[-3, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 48, 5, 5, -3, -3, 2]], [[6, 8, 9, 10, 11, 12, -14, -15, -16, -17, 18, 19, 20, -14, 18, -14, -13, -14, -14]], [[3, 11, 1, 7, 0, 8, -9, -3, 72, 11, 3, 1, 72]], [[1, 1, 1, 1, 8, 2, 2, 2, 2, -3, -3, -4, -3, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, -3]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, -3, -3, -3, -3, 0, -4, -4, -4, -4, 5, 5, 5, 6, 5, -3, 1, 5]], [[1, 1, 1, 1, 8, 1, 2, 2, 88, 2, 2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, 5, 5, 6, 1, 5, 5, 2]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, -3, -3, -3, -4, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 2, 5, 15, 5]], [[6, 7, 8, 9, 10, 11, 12, -14, -15, -16, 18, 19, 20, -14, 18]], [[3, 6, 7, 0, 8, -9, -3, 72, 11, 3, 1, 72]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 3, 5]], [[2, 4, 5, 6, 88, 8, 8, 10, 11, 12, 13, 14, 88, 6]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[2, 4, 5, 6, 88, 12, 8, 8, 10, 11, 18, 13, 14, 88, 88]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 0, 4, 4, 4, 5, 5, 5, 5, 4]], [[-8, 1, 3, -4, 7, 5, -6, 7, -8, 12, 9, -10, 11, -12, -13, 14, 8, -14]], [[1, 1, 1, 2, 1, 1, 2, -5, 2, 2, -3, -3, 10, -3, -4, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2]], [[7, 8, 9, 11, 12, -13, 8, -15, -16, 13, 18, 19, 20, -14, 19]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 48, 79, 50, 58, 70, 64, 72, 80, 82, 88, 92, 94, 64]], [[1, -2, -7, 5, 7, 9, -10, 11, 37, 13, -14]], [[6, 7, 8, 9, 10, 11, 19, 12, -11, -13, -14, -15, 20, -16, -17, 19, 19, 20, -14, 10, 6, -17]], [[3, 6, 1, 7, 8, 5, -3, -8, 11, 4, 10, 0]], [[1, 17, 3, -4, 5, -6, 7, -8, 9, -10, 4, 11, -12, 13, -14]], [[2, 4, 14, 5, 6, 88, 8, 2, 9, 10, 11, 7, 12, 13, 14, 88, 2]], [[-7, 2, 4, 5, -16, 6, 88, 8, 8, 10, 11, 12, 13, 14, 88]], [[6, 7, 8, 9, 10, 11, 12, -14, -15, -16, 18, 19, 20, -14, 18, 19]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0, 9]], [[6, 7, 8, 9, -16, 10, 10, 12, -13, -14, -15, -9, 7, -17, 18, 50, 19, 20, 19, 10]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 4]], [[6, 7, -1, 8, 9, -16, 10, 11, 12, -13, -14, -16, -10, 18, 19, 20]], [[72, 1, 1, 1, 1, 2, 2, 2, 14, 2, -3, -3, -4, -4, -3, 10, -4, -4, -4, -4, 5, 5, 5, 5, -3, -3]], [[3, 6, 1, 7, 0, 8, -3, -8, 11, 4, 0, -8]], [[2, 2, 2, 2, 2, 3, 3, 3, 3, -17, 4, 4, 4, 4, 4, 5, 5, 5, 5]], [[3, 6, 1, 7, 0, 8, -9, -3, -8, 11, 3, 6]], [[3, 6, 1, 0, 8, -9, -8, 11, 4, 11]], [[0, -6, 14, -1, -11, -4, -4, -4, 11, 12, 13, 14, 15, 16, 18, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -16]], [[-1, -2, -3, -4, -5, -6, -8, -9, -10, -11, -11]], [[-12, -15, -17, 33, 37, 40, 48, 50, 58, 70, 14, 72, 80, 82, 88, 92, 94]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 70, 15, 16, 17, 18, 19, 20, 21]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 19]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 2]], [[4, 3, 1, 0, 8, -9, 5, -8, 11, 4]], [[1, -2, 3, -4, 2, 5, -6, 7, -8, 9, -10, 11, -12, 14, 8, -14]], [[-4, -3, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -3, -3, -3, -4, -4, -4, -4, 5, 5, 5, 48, 5, 5, -3, -3, 2]], [[1, 7, 64, 8, -3, -8, 11, 4, -3, -3]], [[13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -20, -19, -18, -17, -16, -15, -14, -13, -16, -11]], [[2, 2, 3, 2, 2, 3, 3, 3, 3, 4, 4, 0, 4, 4, 3, 4, 4, 5, 5, 5, 5, 4, 2]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, -3, -3, -3, -4, -3, -4, -4, -4, -4, 5, 5, 5, 5, 5, 2, -3, 2, 5, 15, 5]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 79, 13, -20, -19, -18, -17, -16, -15, -14, -16]], [[0, -2, 3, -4, 5, -6, 6, -6, 7, -8, 9, -10, 11, -12, 13, -14]], [[2, 3, 1, 7, 0, 8, -4, -8, 11]], [[0, -2, -4, 5, -6, -6, 7, -8, -10, 13, -14]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 0]], [[1, 1, 21, 70, 1, 1, 1, 2, 2, 2, 10, 2, -3, -3, -3, -3, -3, -4, -2, -4, -4, -4, 5, 5, 5, 5, 5, 5]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, -3, 21, -3, -3, -4, -3, -4, -4, -4, 5, 5, 5, -5, 5, 5, -3]], [[2, 3, 1, 7, 0, 8, -4, -8, 11, -4]], [[0, -6, 14, -1, -11, -4, -4, -4, -4, -4, 11, 12, 13, 14, 15, 19, 16, 17, 18, 19, 20, -20, 15, -19, -18, -17, -16, -13, 15]], [[3, 6, 1, 7, 8, 8, -9, -4, -3, 72, 3, 1, 72, 1]], [[1, 17, 3, -4, 5, -6, 7, -8, 10, -11, 4, 11, -12, 13, -14]], [[1, 1, 1, 1, 1, 2, 2, 16, 2, -3, 21, -3, 58, -3, -4, -3, -4, -4, -4, 5, 5, 5, -5, 5, 5, -3]], [[3, 1, 7, 8, -3, -8, 11, 4, 10, 0]], [[1, 1, 1, 1, 1, 2, 2, 2, 2, 2, -3, -4, -3, -3, -3, -4, -4, -4, -4, -4, -4, 5, 2, 5, 5]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, 48, 79, 50, 58, 70, 64, 21, 72, 80, 82, 88, 92, 94, 64, -17]], [[6, 7, 8, 9, 10, 11, 12, -13, -14, -15, -16, -17, 19, 20, -14]], [[0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 19, 20, 21]], [[-12, -15, -17, 20, 33, 37, 40, 45, 48, -10, 48, 58, 70, 64, 72, 80, 82, 88, 92, 94, 64, 40]], [[-12, -15, -8, 20, 33, 37, 40, 45, 48, 50, 58, 70, 64, 72, 80, -5, 92, 94]], [[2, 64, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 2]], [[3, 6, 1, 7, -9, -3, 72, 3, 1, 72]], [[2, 4, 5, 6, 88, 12, 8, 8, 8, 10, 11, 18, 13, 14, 88, 88, 4]], [[6, 7, 8, 9, 10, 11, 12, -14, -15, -16, 18, 19, 20, -14, 18, 8]], [[40, 3, 6, 1, 0, -9, 5, -8, 11, 4, 8, -8]], [[1, -2, -4, 5, -6, -6, -8, 9, 9, 11, -12, 13]]]\n    results = [6, 14, 0, 9, -3, 0, -126, 3030, 0, -14196, -1448, 1090, 1, 1039, 23709, -460, 7534, 1007, 24609, 5, 0, 0, 999, 15301, 465, 21510, 23703, 24630, 0, 1004, 6624, 33747, 1200, 6625, -793, 16681, 2719, 2, 27, 20781, -224, 24654, 0, 31167, 1031, 23853, 2720, 998, 1952, 17195, 986, -207, -1049, 8466, 862, 2481, 931, 35, 10458, 6634, 1067, 4023, 0, 25068, 6, 28565, -1028, 9, -171, 1002, 14865, 2756, 28590, 34149, 10460, 410, 247, 939, 9534, 28589, 28433, 1005, 9302, 27, 10556, 6641, 24, 3147, 1796, -168, 16921, 2322, 25024, 10761, 2713, -742, 16841, 9539, -626, 17012, 30, 959, 1952, 1004, 36, 1195, 274, -1052, 6030, 6633, 1674, 1161, 288, -915, 167, -2851, 1272, 722682, -718, 5817, 1392, -552, 5817, -106, -105, -451, 315, 4197, 1912, 847682, -136, 263, -1492, 484, 783899, 839219, 310, 5407, 7304, 2038, 565, 1287, 328, 7109, -311, 4204, 38, 47449, 316, 549, 2033, 13374, 614, 50771, -4601, -241, 561, 55805, -1131, 2054, -211, -1700, -2646, 1092, 1961, 924, 595, 6076, 1404154, 2549, 7005, 793983, 291, 288, 1149, 10548, 1494139, -991, -5019, 1975, -90, 6529, 55926, 218, 192890, 6156, -1123, 10539, 323, -595, 864, 678, -800, 5408, 1466, 7129, -115, -3257, 10994, 13790, 2220, -1921, 1060, 643, -2112, 320, 1494227, 1494226, 5797, 1493213, 7305, 875701, 841719, -2818, 7162, 1268, -89, 5405, 1420, 7920, 12709, -117, -4673, 778561, 778590, 48890, 47553, 1547381, 7920, 926354, 6156, 6593, 1723, -784, 1493235, 778007, 1118516, 7269, 10968, 9765, 7051, 5804, 1421, 1494271, 48935, 315, 47, 951, 335, 302, -213, 304, -6034, -1392, 778845, 5820, -2716, 663, 836748, 6077, 6877, -32, 6132, 1509640, 784094, 489, 1898, 396, 778817, 973146, -1620, 865, 1306988, -2111, 7175, 2684, 10740, 1096417, -3249, 2395, 1419, -1420, 483, 13374, 204, -555, 1403, -2647, 1493246, 57, 7281, 778938, -2881, 778558, 778616, 783907, -1672, 1519891, 8608, 1463, -2329, 793922, 6629, 763, 5392, 1425107, 115734, 6110, -950, 4756, -1267, 973, 118569, -1589, -396, 1288, -1623, 8039, 1084, 778938, 5819, 1199, -1437, 6662, 431, 54, 976855, 343, 1733, 1259, -4910, 1251128, 728, 852811, 841783, -3416, 2310, -1096, 606, 2963, 811766, 7960, 9511, -4297, -1230, -2128, 283, -240, 316, 809, 852750, 839, 567, -5248, 10989, 4568, 3365, 123, 950912, 2219, 13845, 6437, 13818, 3378, 1259, -2685, 1468798, 6213, 1378, 7110, -33, 7288, -345, 5389, -1790, -3414, 5803, 977750, 852561, -799, -777, 1502257, 5395, 1452, 1552, 238, -5465, 2332, 1307016, 9950, 17078, 7975, 1247, 8346, -2836, 778626, 1447656, 1943, 1468855, 985494, 778842, 6109, -417, 13566, 2003, 11010, -3273, -605, -1625, 847962, 6537, 55805, 1273668, 6552, 15, 484, 110, 309, -1763, 781050, 173, 1468870, 847822, 1417524, 976767, 2062, 973147, 2039, 3288, -4313, 646, 18895, 1153, 163, 296, 5844, 666, -2350, 808, -316, 6675, 366, 7108, 819, -75, 5819, 2932, 874750, -1512, 1502242, 115991, -1158, 1103, -460, 949, 874927, -1212, 9123, 787111, 6878, 1350103, 3572, 382088, 1554989, 1443936, 2038, 950210, 392, 325, -2128, 48873, -3053, 7180, 2229, 10549, -4331, -4910, -2479, 848132, 1287, 781050, -5442, 1779, -463, -2381, 5368, 65119, -1371, 7128, -4614, -1681, 355, 7204, 874587, 50772, 742033, 778724, 1468859, -313, 1275, 404, 866501, 1090559, -465, 1422, 722597, 859, 6143, -906, 5650, 6132, -4357, 2339, 622, 964, 3015, 902, 275, 8465, 1199, 2962, 722, 4420, 778606, -1739, -3923, 1328293, 218, 783979, -1370, -4923, 876701, 2961, -1445, 535, -4373, 3043, 2987, 273, 1875, 7395, 7040, 7135, 853, 1403708, -13, 10245, 1506, -1588, 7176, 203, 9, 398574, 15391, 604, -2157, 18980, -1373, 314, -619, 6575, -867, 794387, 783908, -2639, 1421572, -155, 1527, 1724, 7919, 3403, 498030, -1218, 3194, 6880, 8665, 2981, -12092, -475, 1425127, 7055, 836749, -6211, 6164, 11004, 6981, 646, 1519890, 6157, -1347, 1336142, -430, -2638, -1692, 14114, 784066, -1494, -451, 9512, -2818, 18980, -4714, -664, -353, 1554, 7243, 2693, -838, 141, 284, 1422, -3568, -1347, 7764, 848180, -835, -275, 65480, 1168, 4, 25, 1, -113, 143, 27000000004999999998000000000, 1, 20, 1000001000002, 56, -237, 169, 353, 151, 5227, 5825, -719, 5113, 5227, -2523, 160, 182, -107, 1196, -236, 174, 1421, 1852, -108, -599, 514, -2379, 413, 159, 864, 852723, -760, -5127, 405, 410, 1909, 5088, 11401, 1432, -697, 1883, 169, 6106, 5792, -2848, 162, 1089, 5088, -547, 11492, 171135, 1164, 159, 1325, 154, -5546, -133, 59, 86, -238, 3479, 515, -238, 115231, -267, 170, -237, 1210, 146, -5120, -858, 6380, 356, 2765, 1739, 3923, 5154, -4, 5158, 1421, 29, 984729, 1431, 445, 196, 511, -416, 7108, 171, 1441, 683105, 102, 2772, -698, 1148, -2487, 1443, 1397, 245, -535, 294, 5890, 173, 3924, 5162, 1673, 852591, 173, -22, 1901, -236, -448, 1224, 5108, 1107, 5869, 114719, -1414, 1515669, 373524, 1249597, 174, -2, 690849, -5317, 170, 1411, -3911, 429, 2639, 378708, -4391, 174, 101, 1404, -457, -727, 422, 664, 1886, -823, 3318, 1145, 201, -243, 5230, -1337, 288, 5234, 167, 1611, 1865, 2062, 8168, 7545, -729, 683574, 373615, 4649, 266, 298, 826, 5419, 487, 6285, 7754, 15940, 293, -350, -276, 4015, 148, 126, 373594, -2958, 989064, 967719, 6282, 1405, 567, 1452, 673, 331, 1389, 7554, 167, 493, 955738, 1165, 292, -320, -3243, 13317, 240, -872, 75, 749, 163, 10375, 903, -349, 958504, 813, 309, 13353, -1023, 423, 4211, -4892, 2818, 1222, 730, 746, 411, 8047, 6875, 5380, 5350, -1023, -31, 168, 682972, 200, 420, 417, -982, -4043, -647, 5234, 436, 2053, -225, 167, 352, 682953, 561, 1658, 189, -969, 1515925, 4488, 139, 480, -3580, 1458, 1240931, 426, -5446, 2578, 5101, 1165, 9179, -5318, -1643, -720, 360, -51, 5966, 11007, 478, -29, 270, -34, 835, -4715, 197, -7754, 9000, 155, -4, 379198, 375581, -1234, -565, 779, 867990, 185, 1741, -21, -1572, 166, 229, 1389, -3390, -2900, -2744, 5163, 5830, 191, 1931, -110, 5490, 373784, -5485, 1429, -2141, 1927, 5952, 427, 1269, 683035, 517, 427, 494, 8063, 85189, 1442, 179, 5106, -2392, 2454, -3508, 378713, 674, 190, 681941, 234, -1405, 2019, 289, 690855, 5890, 683129, 328, 896, 240, -1534, 1514436, 51288, 8643, 1940, 1184, 9187, 4648, -1044, 5950, 3933, 282, 3334, 8157, 1413, 563, -231, 779, 2637, -954, 1099964, 5881, 6251, 371, 1887, 6, 232, 208, 5994, -1930, 364, 332, 4532, 890, 1404, -1007, 5830, 4955, 211, 1420, 15907, 11008, 1476, 3553, 1171, -26, 1322806, -911, 5593, 14412, 984123, 934415, 346, 9705, 690325, -1341, 2965, 722]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/143", "prompt": "\ndef words_in_sentence(sentence):\n    \n\n\n    def is_prime(a):\n        return not (a < 2 or any(a % x == 0 for x in range(2, int(a ** 0.5) + 1)))\n    return \" \".join(list(filter(lambda word: is_prime(len(word)), sentence.split(\" \"))))\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef words_in_sentence(sentence):\n    \n\n\n    def is_prime(a):\n        return not (a < 2 or any(a % x == 0 for x in range(2, int(a ** 0.5) + 1)))\n    return \" \".join(list(filter(lambda word: is_prime(len(word)), sentence.split(\" \"))))\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef words_in_sentence(sentence):\n    \n\n\n    def is_prime(a):\n        return not (a < 2 or any(a % x == 0 for x in range(2, int(a ** 0.5) + 1)))\n    return \" \".join(list(filter(lambda word: is_prime(len(word)), sentence.split(\" \"))))\n\n", "raw_modification": "```python\n<code_start>\ndef words_in_sentence(sentence):\n    def is_prime(a):\n        if a < 2:\n            return False\n        for x in range(2, int(a ** 0.5) + 1):\n            if a % x == 0:\n                return False\n        return True\n\n    # Introduce unnecessary variables and operations\n    words = sentence.split(\" \")\n    prime_length_words = []\n    for word in words:\n        length = len(word)\n        if is_prime(length):\n            prime_length_words.append(word)\n\n    # Unnecessary conversion and operations\n    result = []\n    for word in prime_length_words:\n        result.append(word)\n\n    # More unnecessary operations\n    final_result = \" \".join(result)\n    return final_result\n<code_end>\n```", "modification": "\ndef words_in_sentence(sentence):\n    def is_prime(a):\n        if a < 2:\n            return False\n        for x in range(2, int(a ** 0.5) + 1):\n            if a % x == 0:\n                return False\n        return True\n\n    \n    words = sentence.split(\" \")\n    prime_length_words = []\n    for word in words:\n        length = len(word)\n        if is_prime(length):\n            prime_length_words.append(word)\n\n    \n    result = []\n    for word in prime_length_words:\n        result.append(word)\n\n    \n    final_result = \" \".join(result)\n    return final_result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['This is a test'], ['lets go for swimming'], ['there is no place available here'], ['Hi I am Hussein'], ['go for it'], ['here'], ['here is'], ['cats and dogs'], ['I am a developer'], ['elephants are huge'], ['the quick brown fox jumps over the lazy dog'], ['this code challenge is tricky'], ['Python programming is fun'], ['mathematics can be easy'], ['writing clean code is important'], ['I love eating pizza'], ['quick sort algorithm is efficient'], ['I am a dquick sort algorithm is efficienteveloper'], ['mathematics can be eacsy'], ['eleephants are huge'], ['Python programmingg is fun'], ['this code schallenge is tricky'], ['this code mathematics can be eacsychalleI love eating pizzangge is tricky'], ['I athe quick brown fox jumps over the lazy dogm a developer'], ['Io love eaI love eating pizzaquick sort algorithm is efficientting pizza'], ['this acode mathematics can be eacsychalleI love eating pizzangge is tricky'], ['Io love eaI love eating pizort algorithm is efficientting pizza'], ['I athe qurown fox jumps over the lazy dogm a developer'], ['quick sort algoritI love eating pizzahm is efficient'], ['this code challenge is triycky'], ['I am a dquick sort algorithm isp efficientevelope r'], ['eleepnhantselephanpts are huge are huge'], ['I am a deper'], ['Pyththe quick brown fox jumps over the lazy dogon programming is fun'], ['this code schayllenge is tricky'], ['thse quick brown fox jumps over the lazy dog'], ['I am a dquick sort algorithm is efficientthis code challenge is triyqckyeveloper'], ['quick soithm is efficient'], ['eleepnhantselepmathematics can be easyhanpts are huge are huge'], ['quick sort algoritI love eaating pizzahm is efficient'], ['elephants are hugeIo love eaI love eating pizort algorithm is efficientting pizza'], ['this code schayllI am a dquick sort algorithm is efficienteveloperenge is tricky'], ['quick sort algorithm iselephants are hugeIo love eaI love eating pizort icient'], ['thse q the lazy dog'], ['I am a deveoper'], ['I athe qurown fox jumps over the lazy dogm a developethse q the lazy dog'], ['this code e is tricky'], ['mahthematics can be easy'], ['I athe quick brown fox jumpthis code e is trickys over the lazy dogm a ddeveloper'], ['Io love eaI love eting pizort algorithm is efficientting pizza'], ['I am a deveopthis code mathematics can be eacsychalleI love eating pizzangge is trickyer'], ['I am ad deveoper'], ['mahthematics can be e asy'], ['Pythothis code mathematics can be eacsychalleI love eating pizzangge is trickyprogrammingg is fun'], ['quick soithmc ihs efficient'], ['I Io love eaI love eating pizort aligorithm is effIicientting pizzaeloper'], ['I am a dquick sort algorithm is efficienteveloperr'], ['I am a dquick sort algorithm is efficienttehis code challenge is triyqckyeveloper'], ['quick sort algoritI love eating pizzahm ist'], ['mahthematics can bI athe qurown fox jumps over the lazy dogm a developethse q the lazy dog asy'], ['Pyththe quick brown fox jumps over the lazy dogon proeleephants are hugegramming is fun'], ['I am a develthis code schayllI am a dquick sort algorithm is efficienteveloperenge is trickyoper'], ['quick sort algoritI love this code schallenge is trickyeating pizzahm is efficient'], ['writing clean code iis rimportant'], ['qu ick sort algoritI love eaating pizzahm is efficzient'], ['qu ick sort algoritI love eaating pizzvahm is efficzient'], ['thisI am a dquick sort algorithm is efficienteveloperchayllenge is tricky'], ['quick sort algoritefficient'], ['I Io love eaI love eating pizort aligorithm is efpfIicientting pizzaeloper'], ['eleepnhantselephanpts are hthis code e is trickyuge are huge'], ['Pyththe quick brown fox jumps over the lazy dogon programmi ng is fun'], ['my'], ['quick soithmc ihs efficientt'], ['eleeeuge'], ['Python ogramming is fun'], ['I am a deveopI Io love eaI love eating pizort aligorithm is efpfIicientting pizzaeloperer'], ['mahthematics can bI athe qurown fox jumps over the lazy dogm a developeog asy'], ['Io love eaI love eatingr pizort palgorithm is efficientting pizza'], ['PythothisI am a dquick sort algorithm is efficienteveloperchayllenge is trickyng is fun'], ['Pyththe quick brown fox jumps over the lazy dogonleephants are hugegramming ins fun'], ['this code schayllI am a dqk sort algorithm is efficienteveloperenge is tricky'], ['quick sort algoritI love eating phm is efficient'], ['Pyththe quick brown fox jumps over the lazy dogonleephants I am a developerare hugegramming ins fun'], ['mahthematics can be easty'], ['qu ick sort algoritI love eaating pizzvahm is efficzeient'], ['I am a dedveopthis code mathematics can be eacsychalleI love eating pizzangge is trickyer'], ['eleepnhantsethis code challenge is triyckyhuge are huge'], ['mathematI love eating pizzaics can be eacsy'], ['thse quick brown fox jumps oover the lazy dog'], ['writing tclean code is importamathematI love eating pizzaics can be eacsynt'], ['quick soithmc ihs efI am a developerficient'], ['I am a depethisI am a dquick sort algorithm is efficienteveloperchayllenge is trickyr'], ['quick sI am ad deveopercient'], ['cquick sort algorithm is efficient'], ['quick soitc ihs uefficient'], ['quick sort alsgoritI love this code sct'], ['I enge is trickyr'], ['I am ad deveo per'], ['quick sort algorithm is efficI am a dquick sort algorithm isp efficientevelope rient'], ['thse quick brown fox jumps oover the ladog'], ['quick soithmc ihs effkicientt'], ['mat hematics can be eacsy'], ['tPython programming is fun'], ['I Io love eaI love eating pizort taligorithm is efpfIicientting pizzaeloper'], ['I'], ['Io love eaI love eatingr pizort palgor ithm is efficientting pizza'], ['tPython programm ing is fun'], ['science some has branches of'], ['one two three four five six seven eight nine'], ['abcdefghijklmnopqrstuvwxyz abc defghijklmnopqrstuvwxyz'], ['aa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaa'], ['this is a test for prime numbers in words within a sentence'], ['The quick brown fox jumps over the lazy dog'], ['The cat in the hat sat on the mat'], ['Peter Piper picked a peck of pickled peppers'], ['An apple a day keeps the doctor away'], ['The cat in tofhe ahat sat on the mat'], ['doctor'], ['test'], ['picaaaaaad'], ['eight'], ['aa aaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaa'], ['abcdefghijklmnopqrstuvwxyz'], ['doctaaaaor'], ['Peter Piper picked a peck of pipers'], ['The quicdoctorown fox jumps over the lazy dog'], ['abcpipers'], ['six'], ['aabcaaaaa'], ['zudeUmy'], ['fox'], ['clwFZYzs'], ['aaaaaa'], ['pcicaaaaaad'], ['Peter Piper psomeicked a peck of pickled peppers'], ['The cat in tofhe ahat asat on thte mat'], ['P eter Piper picked a peck of pickled peppers'], ['clwZFZYzs'], ['aabcaaaaaa'], ['tesst'], ['ELBDOeWCp'], ['fodoctorx'], ['eighpeck'], ['dooctaaaaor'], ['Peter Piper picked a peck of picklled peppers'], ['wFZYzs'], ['The cat in tofhe aha t asat on thte mat'], ['aa aaaa aaaaaa aaaaaaaa aaaathteaaaaaaaa aaaaaaaaaaaaaaaaaaaa'], ['doaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaactor'], ['wFZYs'], ['doctaaaaorfoforr'], ['brown'], ['doctaaaaorfoftorr'], ['ffox'], ['nine'], ['Pk of pickled peppers'], ['a'], ['seven'], ['psomeicked'], ['aa aaa aaaaaaaa aaaaaaa'], ['this is a test for prime numbers in words wit hin a sentence'], ['doctthreefooftorr'], ['abcyz'], ['doaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaAnaaaaaaaaaaaaaaaaactor'], ['browrn'], ['Peter Piper pipcked a peck of pickled peppers'], ['picked'], ['tofhe'], ['wit'], ['aaa aaa aaaaaaaa aaaaaaa'], ['aaaaaaa'], ['aabcnsatumbersaaaaa'], ['twnumboneers'], ['doctthrePeter Piper picked a peck of picklled peppersefooftorr'], ['hat'], ['sciencedoctaaaaor'], ['tbwnumboneers'], ['aa'], ['aa aaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaa'], ['three'], ['lazy'], ['docctor'], ['lazynumbers'], ['jumps'], ['siis'], ['The quicdoctorown fox jumps over thed lazy dog'], ['aha'], ['doaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaasixaaaaaaactor'], ['pipcked'], ['peppersefoofrtorr'], ['aaaaa'], ['The cat in tofhe ahat sat onaabcnsatumbersaaaaa the mat'], ['P'], ['Peter Piper pickepd a peck of picklled peppers'], ['browrnsix'], ['pickedwit'], ['science sofhas branches oaf'], ['aaaaaaaaaaaaaaaaaaaa'], ['aahin'], ['one'], ['aaaaaaaaaaaaaaaaaaaactor'], ['awordsbc'], ['browrisnsix'], ['science sofhas branches otwoaf'], ['doaa aaatbwnumboneersa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaasixaaaaaaactor'], ['Peter Piper psomeicked a peck of piP eter Piper picked a peck of pickled peppersckled peppers'], ['abcppipeThears'], ['defghijklmnopqrstuvwxyzbrowrn'], ['ahat'], ['fffopipersx'], ['asatdooctaaaaor'], ['cat'], ['thed'], ['abc'], ['si'], ['ssi'], ['piP'], ['doctaaaaoraahin'], ['has'], ['Piper'], ['psoed'], ['jmumps'], ['caaaaaaaaaaaaaasixaaaaaaactor'], ['aaaathteaaaaaaaaa'], ['aa aahina aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaa'], ['aa aaa aaaaaaaa aaaaabrowrnaa'], ['aa aaaa aaaaaa aaaapiPaaaa aaaathteaaaaaaaa aaaaaaaaaaaaaaaaaaaa'], ['doctaaaaorrfoforor'], ['s'], ['fffox'], ['oaf'], ['doaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaactoar'], ['The quicdoctorown fox jumps over thed layzy dog'], ['browrnjumps'], ['eter'], ['aaaAnaaaaaaaaaaaaaaaaactor'], ['iss'], ['doaa aaaa aaaaaaa aaaaaaaa aaaaaaaaaaaa aaaAnaaaaaaaaaaaaaaaaactor'], ['bropickledn'], ['PP'], ['oabcpipersttwoaf'], ['prime'], ['aa aaaa aaaaaajmumps aaaaaaaa aaaathteaaaaaaaa aaaaaaaaaaaaaaaaaaaa'], ['doctthrek of picklled peppersefooftorr'], ['docttThehrek'], ['over'], ['ipicked'], ['brosiispickledn'], ['ccat'], ['quick'], ['Peter Piper psomeicked a epeck of piP eter Piper picked a peck of pickleld peppersckled peppers'], ['fodoccto'], ['abcy'], ['pThe cat in the hat sat on the matrime'], ['aassibcnsatumbersaaaaa'], ['uicdoctorown fox jumps over the lazy dog'], ['aa aaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaapicklledaaa'], ['pickedquick'], ['aahina'], ['abcppiapeTheaars'], ['pickeddquick'], ['aahinP eter Piper picked a peck of pickled peppersa'], ['wiit'], ['doctthreefoolazynumbersftorr'], ['ahhat'], ['brosiispsickledn'], ['sentence'], ['P eter Piperkeepsrs'], ['pidckedwit'], ['doctoaaaaorfoforr'], ['atwohhat'], ['aahinP etpTheer Piper picked a peck of pickled peppersas'], ['haas'], ['on'], ['aaa aaa aaaaaaaa aaaaabrowrnaaaaaaaaaaaaaasixaaaaaaactora'], ['scxdLYL'], ['aahinP'], ['aaaaabrowrnaa'], ['The cat min tofhe aha t asat on thte mat'], ['witscience sofhas branchess oawf'], ['wsFZYzs'], ['quuick'], ['aaaapiPaaaa'], ['abcyaabcaaaaaaz'], ['The quicdoctorown fox jumps over the ldog'], ['aaa aaa aaaaaaasixaaaaaaactora'], ['aaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaapiPaaaa'], ['aaaaaaaaaaaaaaaaaaaactoar'], ['forx'], ['one two three four five six seven eight peppersnine'], ['defghiabcpipersjklmnopqrstuvwxyzbrowrn'], ['eeter'], ['aathedaaaaaaaaaaaaaaaaaactor'], ['aaaaaaaaaaapipersaaaaaaaaactoar'], ['doaa aaaa aaaaaa aaaaaaaa aaaaar'], ['one two three four five siThe quicdoctorown fox jumps over thed lazy dogx seven eight peppersnine'], ['fffokeepsx'], ['ELBDkeepsOaa aaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaeWCp'], ['t'], ['fffopiprersx'], ['defghijklmnopqrstu'], ['eiPeter Piper picked a peck of picklled peppersghpeck'], ['quicdoctorown'], ['acaaaaaaaaaaaaaasixaaaaaaactora'], ['abcppiapeaTheaars'], ['ewitscienaa aahina aaaaaaaa aaappleaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaceeter'], ['aaaaaaaaaaaaaaabrowrnaaaactor'], ['Peter Piper pickAn apple a day keeps the doctor awayepd a peck of picklled peppers'], ['bropickpleldn'], ['pickediwit'], ['defghijkaaaalmnopqrstu'], ['doaa aaatbwnumboneersa aaaaaa aaaaaaaa aaaaaaaatwnumboneersaaaaasixaaaaaaactor'], ['quicka'], ['aawfoura'], ['qpThek'], ['doctthrePeter Piper picked a peck of pickllfed peppersefooftorr'], ['aaaaaaaaaaaaaaaaaaaaaceeter'], ['pctwoicaaaaaad'], ['ffaaaaaaox'], ['spiP'], ['aaaapiThe cat in tofhe aha t asat on thte matPaaaa'], ['dtoctaaaaorrfoforor'], ['aaaaaaaaaaaaaaaaapicklledaaa'], ['ipipcked'], ['ly'], ['The quick broELBDOeWCp'], ['Yzs'], ['apple'], ['aahihhna'], ['aa aaaa aaaaaaaa aaaaaaa'], ['Tat on tmat'], ['aa aaa aaaaaabrowrnsixa aaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaa'], ['ewitscienaa aahina aaaaaaaa aaappleaaaaaaaaaa aaaaapaaaaaaaaaaaaaaaaceeter'], ['aaa aaaa aaaaaa aaaaaaaa aaaaahatapiPaaaa'], ['quicdoctn'], ['aahinP etpTheer Pipaer picked a peck of picklersas'], ['asatdooctor'], ['fthteffokeepsx'], ['twnumboeers'], ['ipickeed'], ['aa aahina aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaa'], ['aaa aapeppersefooftorra aaaaaaasixaaaaaaactora'], ['ahhateight'], ['brosiispicklledn'], ['aa aaa aaaaaaaa aaaaa aa'], ['ss'], ['docotthrek of picklled peppersefooftorr'], ['aabcyaabcaaaaaaz'], ['The quicdoct fox jumps over the lazy dsog'], ['ffaaaaahatapiPaaaaaaaaaaox'], ['quicdoct'], ['peck'], ['docotthrek'], ['aahinP eter Piper picked a peck of pickled peppersaeighpeck'], ['one two three four five six seforxven eight nine'], ['bropickplpidckedwiteldn'], ['tbwnumboneoers'], ['aahinP eter Piper piceppersa'], ['doaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaAnaaaaaaaaaaaaaaaaaactor'], ['sss'], ['etetpTheerest'], ['aaatbwnumboneersadoctor'], ['ewitscienaa aahina aaaaaaaa aaappleaaaaaaaaaa aaaaapaaaaaaaaaaaaaaaaceePeterter'], ['quickaaahinP'], ['aaa aaa aaaaaaaa aixaaaaaaactora'], ['aworddsbc'], ['eTtetpTheerest'], ['wordswsFZYdoctaaaaorrfofororzsaa aaaa aaaaaaaa aaaaaaa'], ['matrime'], ['faa aaaa aaaaaajmumps aaaaaaaa aaaathteaaaaaaaa aaaaaaaaaaaaaaaaaaaathteffokeepsx'], ['abcppipeTheminars'], ['atwohsomehat'], ['wordds'], ['matsix'], ['lzazy'], ['caaaaaaaaaaaaaasixaor'], ['quuuick'], ['abcdefghaahinP eter Piper piceppersawxyz'], ['hhin'], ['apbcppieminars'], ['aa aaa a'], ['ipipckedapbcppieminars'], ['aaa aaa aaaaaaa a aaaaaaa'], ['broELBDOeWCp'], ['ququicdoctorownn'], ['faa'], ['aaaaaaaaaaaaaaaaaaaaaeWCp'], ['scxdLYtwnumboeers'], ['fffopipersxeeter'], ['aThe ciat in tofhe aha t asat on thte mattwohhat'], ['pekck'], ['doctthrek of picklrled peppersefooftorr'], ['Anlazynumbers'], ['aabcyaabcaaaaaazjumps'], ['doctthrek of picklled peppersefooftorrccat'], ['aathis is a test for prime numbers in words within a sentencebcaaaa'], ['aaa aaa aaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaa'], ['aabcaaa'], ['The ocat in tofhe ahat sat on the mat'], ['spiwiit'], ['peppersghpecrk'], ['oone'], ['witscience sofhas branchessc oawf'], ['lazynumbrs'], ['abcdefghaahinP eter Pir piceppersawxyz'], ['iPiper'], ['twnumaaawapdoaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaactorhers'], ['doaa aaatbwnumboneersa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaasixaaaaaaacator'], ['aaatbwnumboneersa'], ['browbn'], ['hin'], ['abcdefghijklmnopqrstuvwxabcppipeThearsyz'], ['dooctaaaaorbrowrnjumps'], ['aaa aaa aaaaaaa aa aaaaaaa'], ['aaaAnaaaaaaaaaaaaaaaaaactor'], ['dooctaaaor'], ['sefofrxven'], ['The onaabcnsatumbersaaaaaocat in tofhe ahat sat on the mat'], ['The cat in tofhe ahat saat onaabcnsatumbersaaaaa the mat'], ['doctoaapsoedaaorfoforr'], ['Peter Piper pk of pipers'], ['quicdoctorownaaa aaa aaaaaaaa aaaaaaa'], ['az'], ['ELquickaaahinPBDOeWCp'], ['one two three four five sieven eight peppersnine'], ['The quicdoct brosiispsickledn jumps over the lazy dsog'], ['pickeduquick'], ['bfffopipersxeeterrown'], ['science sofhas branches oaffodoctorx'], ['zudeU'], ['ff'], ['picklled'], ['picdoctaaaaorked'], ['twnumaaawapdoaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaatorhers'], ['sstofhe'], ['bropipekckckpleldn'], ['aa aahina aaaaaaaa aaaaaaaaaaaa aaaaaaaainaaaaaaaaaaaaaaa'], ['sciencedoctaaaeaor'], ['Peter Piper pickAn apple a day keeps the doctor awayepd a peck of paicklled peppers'], ['fodoceiPeter Piper picked a peck of picklled peppersghpeckcto'], ['aahidooctaaaaorbrowrnjumpsna'], ['aa aaa'], ['Pk'], ['peppersghpeck'], ['cccat'], ['iPithe quick brown fox jumps over the lazy dogper'], ['Paabcnsatumbersaaaaak'], ['aaaaaascience sofhas branches otwoaf'], ['tthed'], ['aaaAnaaaaaaaaaaaaaaaaaaactor'], ['docttaaa aaa aaaaaaa a aaaaaaahrek of picklled peppersefooftorrccat'], ['lazyndooctaaaaorumbers'], ['aaaaaaaaaaaaa'], ['aahidooctetpTheeraaaaorbrowrnjfodoceiPeter Piper picked a peck of picklled peppersghpeckctoumpsna'], ['aaaaaaaa'], ['seveen'], ['tbwnumrs'], ['pipP'], ['ascience some has branches ofaaapiPaaaa'], ['docttaaa'], ['doctthrePetooftorr'], ['doctaaaaaor'], ['jmjps'], ['The cat in tofhe ahat saat onaabcnsatumberaaaaa the mat'], ['science some has branchesone two three four five six seven eight peppersnine of'], ['pepperseffoofrtorr'], ['picaaaad'], ['docotthrek of picklled peppersefThe quicdoctorown fox jumps over the ldogorr'], ['the quick brown forx jumps over the lazy dog'], ['peppersckled'], ['dooctor'], ['peppersas'], ['aaaaaaaaaaaaaaaaaaaeaaceeter'], ['peppersckleed'], ['within'], ['witscience sofhas branchess owawf'], ['oaaf'], ['fffokeepshinx'], ['ahthat'], ['aaaaaaaaaaaaasixaaaaaaactor'], ['abcdefghijklmnopqrsqtuvwxyz abc defghijklmnopqrstuvwxyz'], ['pekkck'], ['awordsbcawf'], ['apickeduquickaaAnaaaaaaaaaaaaaaaaactor'], ['PkPeter Piper pickAn apple a day keeps the doctor awayepd a peck of picklled peppersmattwohhat'], ['pepperseffoofrtoorr'], ['aaa aaaa aapaicklleda aaaaaaaa aaaaahatapiPaaaa'], ['quicdone two three four five six seforxven eight nineoctn'], ['doaa aaaa aaaaaaa aaaaaaaa aaaaabcaaaaaaaaaaaa aaaAnaaaaaaaaaaaaaaaaactor'], ['twnusioeers'], ['doaa aaaa aaaaaaa aaaaaaaa aaaaa aaaAnaaaaaaaator'], ['The q brown fox jumps over the lazy dog'], ['Peter Piper pipcked a peck of pickled ppeppersghpecrkeppers'], ['ayz'], ['aaa'], ['doumbersftorr'], ['defghijkaaaalmnabcdefghaahinP eter Piper piceppersawxyzpqrstu'], ['fodtoctaaaaorrfofoaa aahina aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaarorx'], ['tofhhe'], ['abcppiaepeaTheaars'], ['jmjpps'], ['laozyndooctaaaaorumbers'], ['aa aaa aaaaaaseforxven aa aaaaaaa'], ['ELOeWCp'], ['the quick breown forx jumps over the lazy dog'], ['aa aaa aaaaaaaa aaaaabrdoaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaAnaaaaaaaaaaaawrnaa'], ['science seome has branches of'], ['aaa aaa aaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'], ['pickeduquickaaAnaaaaaaaaaator'], ['science sofhas bran ches otwoaf'], ['twnipipckedumboneers'], ['piiP'], ['aasciencedoctaaaeaoraaaaaaaaaaa'], ['jmjpp'], ['one two three four five six seven eight nineasatdooctaaaaor'], ['brownn'], ['quicdoneaaaAnaaaaaaaaaaaawrnaa'], ['aaaaaaaaaaaaaaaaaaaaaaceeter'], ['PaaaAnaaaaaaaatoriper'], ['YYzs'], ['Pk of pickledaa aaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaa peppaers'], ['defghiabcpipersjklmnopqrstuwn'], ['ipipckpeppersghpeckctoumpsnaminars'], ['docrek'], ['ahaewitscienaa aahina aaaaaaaa aaappleaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaceeter'], ['brownnn'], ['aawfooura'], ['otwoaf'], ['oceiPeter'], ['doctoaaaaorfdoctthrePetooftorroforr'], ['woaaaaaaaaaaaaaaaaaaaardds'], ['Pet'], ['quicdoctorownaaa aaa aaaaaaaaa aaaaaaa'], ['caaaaaaaaaaaaaaaaaaaaaaceeteraaaaaaaaaaaaaasixaaaaaaaactor'], ['matrimecat'], ['ssentennce'], ['mkZrwvKDr'], ['ayabcy'], ['Peter Piper psomeicked a ppicklrledeck of pickled peppers'], ['twnumboaaaaabrdoaaneers'], ['one two threne four five sieven eight peppersnine'], ['Yzzfodoccotos'], ['aaa aaa aaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabrowrnaa'], ['aahinP etpTheer Pipaer pickedeighpecka peck of picklersas'], ['q'], ['The ceat in tofhe ahat sat on the mat'], ['The quicdoct fox jumps over the'], ['doaa aaaa aaaaaaa aaaaaaaa aaaaaaaaaaaa aaaAnaaapeppersckleedaaaaaaaaaaaaaactor'], ['aaaapiatwohsomehatThe cadoctaaaaaort in tofhe aha t asat on thte matPaaaa'], ['pieckleld'], ['defghijklmnopqrstruvwxyz'], ['aa aaa aaaaaaseforxven aav aaaaaaa'], ['jjmummmps'], ['fodoctorox'], ['pThe cat in the hat saYzst on the matrime'], ['clwZFZYz'], ['ZGmkXBsVH'], ['defghijkaaaalmnabcdefghaahinP'], ['The cat in tofhe ahat sat at'], ['ELBDkeepsOaa aaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaeWCp'], ['ofaaapiPaaaa'], ['onn'], ['e'], ['doctaaaaorlly'], ['aabc'], ['aaaaabrdoaa'], ['quicdoc aaaaaaaaa aaaaaaa'], ['aa aahina aaaaaaaa aaaaaaaaaaaa aaaainaaaaaaaaaaaaaaa'], ['ipipckpepperckctoumpsnaminars'], ['fodabcppiaepeaTheaarsoccto'], ['pepck'], ['twnusioeeighters'], ['aav'], ['aaaaaaaaaaaaaaaaaaaatorhers'], ['piecklpeld'], ['The quiaaa aaa aaaaaaa a aaaaaaacdoctorown fox jumps over the lazy dog'], ['breown'], ['doaa aaaa aaaaaa aaaahhateightaaaaa aaaaaaaaaaaa aaaAnaaaaaaaaaaaaaaaaactor'], ['aa aaa aThe cat in tofhe ahat sat ataaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaa'], ['olazynumbersn'], ['doctthr picked a peck of picklled peppersefooftorr'], ['docttaaa aaa aaaaaaa a aaaaaaahreaaa aaa aaaaaaasixaaaaaaactorak of picklled peppersefooftorrccat'], ['twnumaaawapdoaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaatorhers'], ['this is a test for prime numbers in words wit hhin a sentence'], ['pk'], ['dogper'], ['quicdoctorownaaa aaa aaaffoxaaaaaa aaaaaaa'], ['ofaaaaaaaaaaaaaaaaaaaaaaaaaapiPaaaapiPaaaa'], ['aaatbwnuoneersa'], ['aaAnaaaaa'], ['The q brown fox jumps over trhe lazy dog'], ['qpThekk'], ['fodaapaicklledarox'], ['lyazy'], ['pThe cat in the hat sat on the maetrime'], ['prbreownime'], ['doaa aaaa aaaaaaa aaaaaaaa aaaaa aaaaaator'], ['mecat'], ['science some has branchesone two three four five six seven eightn peppersnine of'], ['Peter Piper picked aa aaa aaaaaaaa aaaaa aaa peck of pickled peppers'], ['defghijkxlmnopqaaaarstruvwxyz'], ['piawordsbciwit'], ['doctaaaaoorrfoforor'], ['pseppersghpecrkree'], ['sieven'], ['aaaAnaaaaaaaaahinaaaaaaaaactor'], ['aasciencedocteaaaeaoraaaaaaaaaaa'], ['twnumaaaawapdoaa aaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aars'], ['tpipP'], ['dooctaaaaorbrowrcnjumps'], ['dooctaaaaorbrwornjuwmps'], ['aaaaaascience'], ['aa aaaPkPeter Piper pickAn apple a day keeps the doctor awayepd a peck of picklled peppersmattwohhat'], ['witscience sofhas braninchess owawf'], ['dehrek'], ['doctthrePetowitscience sofhas braoftorr'], ['x y z'], ['numbers'], ['quicninek'], ['the quick brown fox jumps over the lazy twodog'], ['this is a test for prime numbers foxin words within a sentence'], ['quicniinek'], ['two'], ['aone two three fou r five six seven eight nine'], ['scPeterience some has branches of'], ['this is a test for prime numbers in wodaynce'], ['twPetero'], ['numbeonrs'], ['wWFWJpaA'], ['science some has brsentencehes of'], ['pceck'], ['tesnumbeonrs'], ['some'], ['aonePiper two three fou r five six seven eight nine'], ['twPro'], ['aonepple'], ['wWFWJaa aaaa aaaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaakeepsaaaaaaaapaA'], ['aaaaaaaaaaaa'], ['The quick brown fox jumps over the lazy dogscPeterience some has branches of'], ['twProo'], ['wWFWJaa'], ['f'], ['quik'], ['the quick bazy dog'], ['nusmbers'], ['o'], ['fThe cat in the hat sat on the mat'], ['quaoneppleek'], ['priime'], ['quicniscience some has inbrsentencehes ofinek'], ['aaaaaaaaaaaakeepsaaaaaaaapaAf'], ['this'], ['wWFWJaa aaaa aaaaaaa aaaaaaaa aaaaaaapsaaaaaonePiperaaaapaA'], ['peppers'], ['tesAnnumbeonrs'], ['apbcopqrstuvwxyz'], ['words'], ['science some has brsentenncehes of'], ['in'], ['aaaaaaaaaaaakeepsatwPeteroapaA'], ['branches'], ['wordcats'], ['The q uick brown fox jumps brsentencehesterience some has branches of'], ['aaaaaaaaaaaaaa'], ['afThe cat in the hat sat on the mataa'], ['bazy'], ['r'], ['n'], ['ThAn apple a day keeps the doctor awaye cat in the hat sat on the mat'], ['Peter'], ['wordcthe quick brown fox jumps over the lazy twodogats'], ['Ther quick brown fox jumps over the lazy dog'], ['science threesome has brsentencehes of'], ['this is for prime numbers in wodaynce'], ['science threesome has bcrsentencehes of'], ['this is a tesninet for prime numbers in words within a sentence'], ['aa aaaaa aaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaa'], ['science threeshas brsentencehes of'], ['afThe Ther quick brown fox jumps over the lazy dogt on the mataa'], ['thhree'], ['this is for prime numbers ian wodaynce'], ['quicnibazynek'], ['mataa'], ['twPettero'], ['aonepplee'], ['eZnNBxOH'], ['quicniscie some has inbrsentencehes ofinek'], ['quicniscwodaynceience some has inbrsentencehes ofinek'], ['ofinek'], ['overpceck'], ['nusmbscience some has brsentencehes ofers'], ['ofers'], ['this is a test for prime numbers in woodaynce'], ['wtwo'], ['nusmbscience'], ['aaaatwodogaa'], ['science threesquicniscience some has inbrsentencehes ofinekome has bcrsentencehes of'], ['aone'], ['FwWFWJpaA'], ['thisscience threesome has bcrsentencehes of is a tesnappleime numbers in words within a sentence'], ['this is a atest for prime numbers in woodaynce'], ['Ther quick brown fox jumps over the lazy do g'], ['scPeterience some hacs branches of'], ['priisiimofineke'], ['rtwPetero'], ['Peter Pkled peppers'], ['quipriisiimofinekek'], ['ni'], ['defghijklmnopqrstuvwxyz'], ['the quk brown fox jumps over the lazy dog'], ['peppeers'], ['thisscience threesome has bcrsentencehes of is a tesnappleime numbers in words within a sentenceaoe'], ['priisiimofinTheke'], ['twodogats'], ['threeshas'], ['eZnNBxOHAn'], ['threesome'], ['keeps'], ['quicniscwodaynceience'], ['this is for prime numbers ian wodaynce o'], ['niaonepplee'], ['this is for prime numbers in wodayabcdefghijklmnopqrstuvwxyz abc defghijklmnopqrstuvwxyznce'], ['The'], ['ofinekome'], ['Peeter'], ['oveAn apple a day keeps the doctor awayr'], ['ninee'], ['wWFWJaa aaaa aaaaaaa aaaaaaaa aaaaaaapsaaaaaonePiperaaaawtwopaA'], ['lpZlaIbZZ'], ['pickled'], ['uick'], ['eZnNBxOHH'], ['wordscience some has brseentenncehes ofs'], ['this is for prime numbers in wodayabcdefghijklmnopqrstuvwxfivec defghijklmnopqrstuvwxyznce'], ['this is a test for prime numbers in twodogatswords within a sentence'], ['this is a test for prime numbers in inwordsentence'], ['ThAn apple a day kweeps the doctor awaye cat in the hat sat on the mat'], ['quicnibaczynek'], ['ofoveAn apple a day keeps the doctor awayrek'], ['ateest'], ['tuickesome'], ['An'], ['An apple abcdefghijklmnopqrstuvwxyza day keeps thdoctor away'], ['uithis is for prime numbersofers ian wodayncek'], ['eZnNaonepple'], ['apbcpoxyz'], ['rtwPro'], ['sentenceaoe'], ['wodayncek'], ['peppeatesters'], ['aaaaaaaaaaaakeepsaaaaaaaaapaAf'], ['ThAn'], ['kekeps'], ['word'], ['aaaaaaaaaaaakeepsaaaaaaaapaA'], ['science'], ['wWwodayabcdefghijklmnopqrstuvwxyzFWJaaaaaaaapaA'], ['kweeps'], ['bcrsentencehes'], ['nTThAn'], ['niaonepplquicniscwoodaynceienceee'], ['bcrsentebrseentenncehesnceheafThes'], ['thhreescience some has branches of'], ['ThAn apple a day kweeps the doctor awaye cat in the ehat sat on the mat'], ['scPeterienscience some has branches ofce'], ['owodayabcdefghijklmnopqrstuvwxyz'], ['quicniscie some hasthis is for prirs in wodaynce inbrsentencehes ofinek'], ['threesha'], ['ovrlazy'], ['quicniscience some has inbrsentencehesek'], ['branchers'], ['ovekweeps awayr'], ['wordrs'], ['tesnumbeonrrs'], ['tukickesome'], ['The quick brown fox jumps over the lazyo dog'], ['inwordsentence'], ['numbersofers'], ['nusmbscience some has brsentwProtencehess ofers'], ['doctorover'], ['sat'], ['aaaaapeppeatestersaaaaaaaakeepsatwPeteroapaquipriisiimofinekekA'], ['quicniscienthe quick brown fox jumps over the lazy dogce some has inbrsentencehesek'], ['the quicik bazy dog'], ['quicniscienthe quick brown fox jutmps over the lazy doegce some has inbrsentencehesek'], ['abcdefghijklmnopqrstuvwxyza'], ['ofce'], ['bnusmbers'], ['zYwjhBCYS'], ['dog'], ['oveorpceck'], ['woodaynce'], ['bazyover'], ['pkweeps'], ['this is for prime numbers in wodayabcdefghijklmnopqrstuvwxyz abdefghijklmnopqrstuvwxyznce'], ['quicniscience'], ['oveAn apple a day keeplpZlaIbZZs the doctor awayr'], ['aaaaaaaaaaaakeepsatwPaeteroapaA'], ['ttukickesomeowodog'], ['Ther quick brown fox jumps over the lazydog'], ['qnuicniscience'], ['the quick bazdy dog'], ['wWFWJaa aaaa aaaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaTherawithinaaaakeepsaaaaaaaapaA'], ['aonePiper'], ['thia tesnappleime numbers in words within a sentenceaoe'], ['niaonepplquicniscwoodaynceiencawayreee'], ['oveAn'], ['eZnNaonepplThe quick brown fox jumps over the lazy dogscPeterience some has branches ofe'], ['scPeterience'], ['ofoveAn apple a day keepsrek'], ['numbeonwithins'], ['ofcfe'], ['wodayabcdefghijpklmnopqrstuvwxfivec'], ['this is a atoverest for priquikme numbers in woodaynce'], ['Th'], ['owodayabcdefghijklmnopqrstuyz'], ['threThe quick brown fobranchesx jumps over the lazy doge'], ['doge'], ['tesAnnumbe'], ['twPaaaaaaaaaaaakeepsaaaaaaaaapaAfero'], ['TTh'], ['awayr'], ['away'], ['twodogatswords'], ['i'], ['oe'], ['one two ht nine'], ['wWFWJaa aaaa aaaaaaaa aA'], ['quicniscienthe quick brown fox jutmps over the lazy doegcem some has inbrsentencehesek'], ['twPrroo'], ['this is for primeu numbers in wodayabcdefghijklmnopqrstuvwxyz abc defghijklmnopqrstuvwxyznce'], ['nusmbeaonePiperrs'], ['aonple'], ['twPPtettero'], ['Pkled'], ['quicnik'], ['thpriquikmee quick brown fox jumps over the lazy twodog'], ['wWFpeppeatestersWJpaA'], ['quicnibathis is a tesninet for prime numbers in words within a sentencezynwordscienceek'], ['abcdefghijklmnopqrstuvwxyz abc defghquicniinekijklmnopqrstuvyz'], ['twPPtetteroaaa'], ['ofe'], ['this is for prime numbers in wodayabcdefghijklmnopqrstuvwxyz abc defghijklmnopqrstuvzwxyznce'], ['day'], ['wodayatbcdefghijpklmnopqrstuvwxfivec'], ['pr'], ['brseentenncehesPiper'], ['lpZltwProaIlbbZZZ'], ['inwoovekwnusmbscienceeepbrsentencehesteriencerrdseintence'], ['foxin'], ['numbbeonrs'], ['pecck'], ['thdoctor'], ['thinuquaoneppleekin wooinbrsentencehesekdaynce'], ['awaye'], ['this is for prime rnumbers in wodayabcdefghijklmnopqrstuvwxfivec defghijklmnopqrstuvwxyznce'], ['The cat in the hat squicniscience some has inbrsentencehes ofinekat on the mat'], ['nin'], ['oveAn appTher quick brown fox jumps over the lazy dogle a day keeplpZlaIbZZs the tor awayr'], ['uithis is for prime numbersofers ian wodayncekthdoctor'], ['keeThekps'], ['overThAn apple a dator awaye cat in the ehat sat on the mat'], ['thhtree'], ['numbeonbcrsentencehess'], ['Ther quick brown fox jumps opriimever the lazy do g'], ['eZnNadefghquicniinekijklmnopqrstuvyzple'], ['tpeppeersuickesome'], ['tukicokesome'], ['ovrlazuicky'], ['Peter Piper pickernumbersd a peck of pickled peppers'], ['aaaaaaaaaaaakeepsaaaaainbrsentencehesekaaaapaAf'], ['twto'], ['wodaynek'], ['fobranchesx'], ['numbeonfoxbcrsentencehess'], ['wodayne'], ['quipriistestiimofinekek'], ['oveeorpceck'], ['owhatordsce'], ['Ther quieightx jumps over the lazydog'], ['oifinek'], ['this is aa atest for prime numbers in woodaynce'], ['quicinbrsentencehesekniinek'], ['quicniscienthe'], ['eiginbrsentencehesht'], ['tneesnumbeonrrs'], ['ovrlazcuicky'], ['ovrpceck'], ['quiicniscwodaynceience'], ['sciequipriisiimofinekeknce'], ['brseentenncehesPipwWFWJaa aaaa aaaaaaaa aAer'], ['ffaaaaaaa'], ['peecc'], ['wWFWJaa aaaa aaaaaaa aaaaaaaa aaaaaaaaaaaa aaaaaaaaaaaakeepsaaaaaaaapaaA'], ['ofinekat'], ['quicniscienthee has inbrsentencehesek'], ['twwo'], ['primme'], ['thia tes nappleime numbers in words within a sentenceaoe'], ['An apple abcdefghijklmnopqrstuvwmxyza day keeps thdoctor away'], ['nusmnbscience'], ['Peter Pkled nusmbsciencepeppers'], ['numbeonfoxbcrsseentencehess'], ['owodayabcdefghijklthe quick bazdy dogz'], ['ofnineece'], ['thi test for prime numbers in twodogatswords within a sentence'], ['awthpriquikqmeeayrek'], ['thpriquikmee quick brown fox jumhe lazy twodog'], ['aoneoverpplee'], ['aaaaapeppeatestersaaaaaaaaPeteroapaquipriisiimofinekekA'], ['The qence some has branches of'], ['wtowo'], ['thhreescience'], ['Ther quick brown fox jumps mover the lazydog'], ['qquik'], ['brseentenncwWFWJaaehesPipwWFWJaa'], ['wodayncekthdoctor'], ['owodayabcdefghiijklmnopqrstuyz'], ['aaaa'], ['nummrbbeonrs'], ['pcpeck'], ['foxina'], ['wordthinuquaoneppleekincats'], ['thpriquikmee'], ['this is a test for prime numbers in twodogatswocrds within athis senthreesquicnisciencetence'], ['owodayabcdefghijklthe'], ['qone two three four five six seven eight nineuicnibaczynek'], ['odogAn apple a day keeps the doctor away'], ['science threeshas brsentencniaonepplquicniscwoodaynceiencawayreeeehes of'], ['quiicniscwoidaynceience'], ['priimme'], ['neZnNBxOHH'], ['wordwodayabcdefghijpklmnopqrstuvwxfivec'], ['fVLkz'], ['qf'], ['quicnisciencethree some has inbrsentencehes ofinek'], ['Thhe'], ['abcdefghijklmnopqrstuvbrseenteenncwWFWJaaehesPipwWFWJaawxyza'], ['aaaaquicnissixcience'], ['ofinekpr'], ['aoonpple'], ['science some has branhacses of'], ['science thrseesquicniscience some has inbrsentencehes ofinekome has bcrsentencehes of'], ['ThAn apple a day keeps the doctor awaye cat inh the hat sat on the mat'], ['thhreescience sbrsentennceheses of'], ['bcrsethe quick bazy dogntebrseentenncehesnceheafThees'], ['wordors'], ['wWFWJaa aaaa aaaaaaa aaaaaaaa aaaaatpeppeersuickesomeaaaaaaa aaaaaaaTherawithinaaaakeepsaaaaaaaapaA'], ['ThAn apple a day kweeps the doctor awaye cat hasin the hat sat on the mawWFWJaat'], ['ovrlazuy'], ['kekepsrek'], ['ht'], ['woodayndce'], ['ovrlazuthia tesnappleime numbers in words within a sentenceaoofcfeeicky'], ['ovrlazuthia'], ['qq'], ['thpriquikmeeg'], ['oveeAn'], ['wsords'], ['science threesome has brsscience some has branhacses ofentencehes of'], ['athis'], ['wsds'], ['this is a atest for prisme numbers in woodaynce'], ['wWFW'], ['quicniscie some haswodaynek inbrsentencehes ofinbrseentenncehesPipwWFWJaaek'], ['Peetquiker'], ['quicniscienthe qui dogce some has inbrsentencehesek'], ['keepsrek'], ['ThAn apple a dayovrlazy kweeps the doctor awaye cat hasin the hat sat on the mawWFWJaat'], ['ovrlazuthian'], ['Pquicniscienthe quick brown fox jumps over the lazy dogce squicninekas inbrsentencehesekeeter'], ['ofineat'], ['An apple a lazyoday keeps the doctor away'], ['oveAn apple a day keeps the dooctor awayr'], ['gthhtree'], ['aonePiper two three fou r five six seven eight ngine'], ['wcordcats'], ['nusmbscience some has bProtencehess ofers'], ['owodayabcdefghiijklmnoptwodogatswordsqrstuyz'], ['daywodayabcdefghijklmnopqrstuvwxyz'], ['nusmnbscienquicniscie some hasthis is for prirs in wodaynce inbrsentencehes ofinekce'], ['tesAnnumbonrs'], ['ineZnNaoneppleo'], ['thia tes nappleime numbers in words within a sentedogenceaoe'], ['threeshowodayabcdefghijklmnopqrstuyza'], ['afThe Ther quick brown fox jumps over the lazy doe mataa'], ['jumhewPro'], ['aone tnwo three fou r five six seven eight nine'], ['priisiiomofinTheke'], ['fobrancheovrlazuthiansx'], ['wodayatbcdepfghijpklmnopqrstuvwxfivec'], ['cdTOCiFqP'], ['uithis ittukickesomeowodogs for prime numbersofers ian wodayncek'], ['pe'], ['bcrsentenncehes'], ['eofcfe'], ['aa aaaaa aaaaaa aaaaaaaa bcrsentebrseentenncehesnceheafThesaaaaaaaa'], ['thinuquaoneppleekin'], ['qnumbbeonrs'], ['doegcem'], ['aopneppnle'], ['aaaaaaaaaaaakeepsaaaaaaaaptwPaaaaaaaaaaaakeepsaaaaaaaaapaAferoaA'], ['one two three quicniscie some has inbrsentencehes ofinekfour five six seven eight nine'], ['mat'], ['thhreescience sbrsentenncethreeheses of'], ['aaaaapeppeatestersaaaaaaaaPeteroapaqauipriisiimofinekekA'], ['aoonlpple']]\n    results = ['is', 'go for', 'there is no place', 'Hi am Hussein', 'go for it', '', 'is', 'and', 'am', 'are', 'the quick brown fox jumps the dog', 'is', 'programming is fun', 'mathematics can be', 'writing clean is', 'pizza', 'quick is', 'am is efficienteveloper', 'mathematics can be eacsy', 'are', 'is fun', 'is', 'mathematics can be is', 'quick brown fox jumps the', 'Io eaI is efficientting pizza', 'acode mathematics can be is', 'Io eaI is efficientting pizza', 'fox jumps the', 'quick pizzahm is', 'is triycky', 'am isp', 'are are', 'am deper', 'Pyththe quick brown fox jumps the dogon programming is fun', 'schayllenge is', 'quick brown fox jumps the dog', 'am is efficientthis is', 'quick is', 'can be are are', 'quick eaating pizzahm is', 'are eaI is efficientting pizza', 'am is is', 'quick iselephants are eaI', 'the dog', 'am', 'fox jumps the the dog', 'is', 'can be', 'quick brown fox is trickys the', 'Io eaI eting is efficientting pizza', 'am mathematics can be is', 'am ad', 'can be asy', 'mathematics can be is is fun', 'quick soithmc ihs', 'Io eaI is pizzaeloper', 'am is', 'am is is', 'quick pizzahm ist', 'can bI fox jumps the the dog asy', 'Pyththe quick brown fox jumps the dogon proeleephants are is fun', 'am am is is', 'quick is pizzahm is', 'writing clean iis', 'qu ick eaating pizzahm is', 'qu ick eaating is', 'thisI am is is', 'quick', 'Io eaI is pizzaeloper', 'are hthis is are', 'Pyththe quick brown fox jumps the dogon ng is fun', 'my', 'quick soithmc ihs', '', 'is fun', 'am deveopI Io eaI is pizzaeloperer', 'can bI fox jumps the asy', 'Io eaI eatingr is efficientting pizza', 'am is is is fun', 'Pyththe quick brown fox jumps the are ins fun', 'am dqk is is', 'quick phm is', 'Pyththe quick brown fox jumps the am ins fun', 'can be easty', 'qu ick eaating is efficzeient', 'am dedveopthis mathematics can be is', 'is triyckyhuge are', 'can be eacsy', 'quick brown fox jumps oover the dog', 'writing is can be eacsynt', 'quick soithmc ihs efI am', 'am am is is trickyr', 'quick sI am ad deveopercient', 'is', 'quick soitc ihs', 'quick sct', 'is trickyr', 'am ad deveo per', 'quick is am isp rient', 'quick brown fox jumps oover the ladog', 'quick soithmc ihs effkicientt', 'mat can be eacsy', 'tPython programming is fun', 'Io eaI taligorithm is pizzaeloper', '', 'Io eaI eatingr is efficientting pizza', 'tPython ing is fun', 'science has of', 'one two three six seven eight', 'abc defghijklmnopqrstuvwxyz', 'aa', 'is for prime numbers in words', 'The quick brown fox jumps the dog', 'The cat in the hat sat on the mat', 'Peter Piper of pickled peppers', 'An apple day keeps the', 'The cat in tofhe sat on the mat', '', '', '', 'eight', 'aa aaa', '', '', 'Peter Piper of', 'The quicdoctorown fox jumps the dog', '', 'six', '', 'zudeUmy', 'fox', '', '', 'pcicaaaaaad', 'Peter Piper of pickled peppers', 'The cat in tofhe on mat', 'Piper of pickled peppers', '', '', 'tesst', '', '', '', 'dooctaaaaor', 'Peter Piper of peppers', '', 'The cat in tofhe aha on mat', 'aa', '', 'wFZYs', '', 'brown', 'doctaaaaorfoftorr', '', '', 'Pk of pickled peppers', '', 'seven', '', 'aa aaa aaaaaaa', 'is for prime numbers in words wit hin', 'doctthreefooftorr', 'abcyz', '', '', 'Peter Piper pipcked of pickled peppers', '', 'tofhe', 'wit', 'aaa aaa aaaaaaa', 'aaaaaaa', 'aabcnsatumbersaaaaa', '', 'doctthrePeter Piper of', 'hat', 'sciencedoctaaaaor', 'tbwnumboneers', 'aa', 'aa aaa', 'three', '', 'docctor', 'lazynumbers', 'jumps', '', 'The quicdoctorown fox jumps dog', 'aha', '', 'pipcked', 'peppersefoofrtorr', 'aaaaa', 'The cat in tofhe sat the mat', '', 'Peter Piper pickepd of peppers', '', '', 'science oaf', '', 'aahin', 'one', '', '', 'browrisnsix', 'science', 'aaatbwnumboneersa', 'Peter Piper of piP Piper of pickled peppers', '', 'defghijklmnopqrstuvwxyzbrowrn', '', 'fffopipersx', '', 'cat', '', 'abc', 'si', 'ssi', 'piP', '', 'has', 'Piper', 'psoed', '', 'caaaaaaaaaaaaaasixaaaaaaactor', 'aaaathteaaaaaaaaa', 'aa', 'aa aaa aaaaabrowrnaa', 'aa aaaapiPaaaa', '', '', 'fffox', 'oaf', '', 'The quicdoctorown fox jumps layzy dog', 'browrnjumps', '', '', 'iss', 'aaaaaaa', 'bropickledn', 'PP', '', 'prime', 'aa', 'of', '', '', 'ipicked', '', '', 'quick', 'Peter Piper epeck of piP Piper of peppers', '', '', 'cat in the hat sat on the matrime', '', 'fox jumps the dog', 'aa aaa', 'pickedquick', '', '', '', 'Piper of pickled', '', '', 'ahhat', '', '', '', '', 'doctoaaaaorfoforr', '', 'Piper of pickled', '', 'on', 'aaa aaa', 'scxdLYL', '', 'aaaaabrowrnaa', 'The cat min tofhe aha on mat', '', 'wsFZYzs', '', 'aaaapiPaaaa', '', 'The quicdoctorown fox jumps the', 'aaa aaa', 'aaa', '', '', 'one two three six seven eight peppersnine', '', 'eeter', '', 'aaaaaaaaaaapipersaaaaaaaaactoar', '', 'one two three siThe quicdoctorown fox jumps seven eight peppersnine', '', 'aaa', '', '', '', 'eiPeter Piper of peppersghpeck', 'quicdoctorown', 'acaaaaaaaaaaaaaasixaaaaaaactora', 'abcppiapeaTheaars', 'ewitscienaa aaappleaaaaaaaaaa', 'aaaaaaaaaaaaaaabrowrnaaaactor', 'Peter Piper apple day keeps the awayepd of peppers', 'bropickpleldn', '', '', 'aaatbwnumboneersa', '', '', '', 'doctthrePeter Piper of', '', '', '', '', 'cat in tofhe aha on', 'dtoctaaaaorrfoforor', '', '', 'ly', 'The quick', 'Yzs', 'apple', '', 'aa aaaaaaa', 'Tat on', 'aa aaa aaaaaaaaaaaaa', 'ewitscienaa aaappleaaaaaaaaaa', 'aaa', '', 'of', 'asatdooctor', '', 'twnumboeers', '', 'aa', 'aaa aapeppersefooftorra', '', '', 'aa aaa aaaaa aa', 'ss', 'of', '', 'The fox jumps the', '', '', '', '', 'Piper of pickled', 'one two three six eight', 'bropickplpidckedwiteldn', '', 'Piper', '', 'sss', 'etetpTheerest', 'aaatbwnumboneersadoctor', 'ewitscienaa aaappleaaaaaaaaaa', '', 'aaa aaa', '', '', 'aaaaaaa', 'matrime', 'faa', 'abcppipeTheminars', '', '', '', 'lzazy', '', 'quuuick', 'Piper', '', '', 'aa aaa', '', 'aaa aaa aaaaaaa aaaaaaa', '', '', 'faa', '', 'scxdLYtwnumboeers', '', 'in tofhe aha on', 'pekck', 'of', 'Anlazynumbers', '', 'of', 'is for prime numbers in words', 'aaa aaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aabcaaa', 'The in tofhe sat on the mat', 'spiwiit', '', '', '', '', 'Pir', '', '', 'aaatbwnumboneersa', 'aaatbwnumboneersa', '', 'hin', '', '', 'aaa aaa aaaaaaa aa aaaaaaa', '', '', '', 'The in tofhe sat on the mat', 'The cat in tofhe the mat', '', 'Peter Piper pk of', 'aaa aaaaaaa', 'az', '', 'one two three eight peppersnine', 'The jumps the', '', '', 'science', 'zudeU', 'ff', '', '', '', 'sstofhe', '', 'aa', '', 'Peter Piper apple day keeps the awayepd of peppers', 'Piper of', '', 'aa aaa', 'Pk', 'peppersghpeck', 'cccat', 'quick brown fox jumps the', '', 'aaaaaascience', 'tthed', '', 'aaa aaaaaaa aaaaaaahrek of', '', 'aaaaaaaaaaaaa', 'Piper of', '', '', '', '', 'has', '', '', 'doctaaaaaor', 'jmjps', 'The cat in tofhe the mat', 'science has branchesone two three six seven eight peppersnine of', '', '', 'of quicdoctorown fox jumps the ldogorr', 'the quick brown jumps the dog', '', 'dooctor', '', '', 'peppersckleed', '', 'owawf', '', 'fffokeepshinx', '', '', 'abc defghijklmnopqrstuvwxyz', '', 'awordsbcawf', '', 'PkPeter Piper apple day keeps the awayepd of peppersmattwohhat', 'pepperseffoofrtoorr', 'aaa', 'two three six eight', 'aaaaaaa aaaaabcaaaaaaaaaaaa', 'twnusioeers', 'aaaaaaa aaaaa', 'The brown fox jumps the dog', 'Peter Piper pipcked of pickled', 'ayz', 'aaa', 'doumbersftorr', 'defghijkaaaalmnabcdefghaahinP Piper', '', '', '', '', 'laozyndooctaaaaorumbers', 'aa aaa aa aaaaaaa', 'ELOeWCp', 'the quick jumps the dog', 'aa aaa aaaaabrdoaa', 'science seome has of', 'aaa aaa', 'pickeduquickaaAnaaaaaaaaaator', 'science', '', '', 'aasciencedoctaaaeaoraaaaaaaaaaa', 'jmjpp', 'one two three six seven eight nineasatdooctaaaaor', '', '', '', '', '', 'Pk of aaa', 'defghiabcpipersjklmnopqrstuwn', '', '', 'aaappleaaaaaaaaaa', 'brownnn', '', '', '', '', '', 'Pet', 'aaa aaaaaaa', '', '', '', '', '', 'Peter Piper ppicklrledeck of pickled peppers', 'twnumboaaaaabrdoaaneers', 'one two eight peppersnine', 'Yzzfodoccotos', 'aaa aaa', 'of', '', 'The in tofhe sat on the mat', 'The fox jumps the', 'aaaaaaa', 'in tofhe aha on', '', '', 'aa aaa aav aaaaaaa', '', '', 'cat in the hat on the matrime', '', '', 'defghijkaaaalmnabcdefghaahinP', 'The cat in tofhe sat at', 'aaa', '', 'onn', '', 'doctaaaaorlly', '', 'aaaaabrdoaa', 'quicdoc aaaaaaa', 'aa', 'ipipckpepperckctoumpsnaminars', '', 'pepck', '', 'aav', '', '', 'The aaa aaaaaaa aaaaaaacdoctorown fox jumps the dog', '', '', 'aa aaa cat in tofhe sat', 'olazynumbersn', 'doctthr of', 'aaa aaaaaaa aaaaaaahreaaa aaa aaaaaaasixaaaaaaactorak of', 'aaaaaaaaaaaaa', 'is for prime numbers in words wit', 'pk', '', 'aaa aaaffoxaaaaaa aaaaaaa', '', '', '', 'The brown fox jumps dog', 'qpThekk', '', 'lyazy', 'cat in the hat sat on the', 'prbreownime', 'aaaaaaa aaaaa', 'mecat', 'science has branchesone two three six seven peppersnine of', 'Peter Piper aa aaa aaaaa aaa of pickled peppers', 'defghijkxlmnopqaaaarstruvwxyz', '', 'doctaaaaoorrfoforor', '', '', '', '', '', 'tpipP', 'dooctaaaaorbrowrcnjumps', 'dooctaaaaorbrwornjuwmps', 'aaaaaascience', 'aa Piper apple day keeps the awayepd of peppersmattwohhat', 'braninchess owawf', '', '', '', 'numbers', '', 'the quick brown fox jumps the', 'is for prime numbers foxin words', '', 'two', 'two three fou six seven eight', 'has of', 'is for prime numbers in', '', '', '', 'science has brsentencehes of', 'pceck', '', '', 'two three fou six seven eight', 'twPro', '', 'wWFWJaa aaaaaaa', '', 'The quick brown fox jumps the has of', '', 'wWFWJaa', '', '', 'the quick dog', '', '', 'cat in the hat sat on the mat', '', '', 'quicniscience has', 'aaaaaaaaaaaakeepsaaaaaaaapaAf', '', 'wWFWJaa aaaaaaa aaaaaaapsaaaaaonePiperaaaapaA', 'peppers', '', '', 'words', 'science has of', 'in', '', '', '', 'The brown fox jumps has of', '', 'afThe cat in the hat sat on the mataa', '', '', '', 'apple day keeps the awaye cat in the hat sat on the mat', 'Peter', 'quick brown fox jumps the', 'quick brown fox jumps the dog', 'science has brsentencehes of', 'is for prime numbers in', 'science has of', 'is for prime numbers in words', 'aa aaaaa', 'science brsentencehes of', 'afThe quick brown fox jumps the on the mataa', '', 'is for prime numbers ian', 'quicnibazynek', 'mataa', '', '', '', 'has', 'has', '', '', 'has brsentencehes ofers', 'ofers', 'is for prime numbers in', '', '', '', 'science threesquicniscience has has of', '', '', 'thisscience has of is numbers in words', 'is atest for prime numbers in', 'quick brown fox jumps the do', 'of', '', '', 'Peter Pkled peppers', 'quipriisiimofinekek', 'ni', 'defghijklmnopqrstuvwxyz', 'the quk brown fox jumps the dog', '', 'thisscience has of is numbers in words sentenceaoe', 'priisiimofinTheke', '', '', '', '', 'keeps', '', 'is for prime numbers ian', 'niaonepplee', 'is for prime numbers in wodayabcdefghijklmnopqrstuvwxyz abc', 'The', '', '', 'oveAn apple day keeps the awayr', 'ninee', 'wWFWJaa aaaaaaa', '', 'pickled', '', '', 'wordscience has ofs', 'is for prime numbers in', 'is for prime numbers in', 'is for prime numbers in', 'apple day the awaye cat in the hat sat on the mat', '', 'ofoveAn apple day keeps the awayrek', '', '', 'An', 'An apple day keeps', 'is for prime ian', '', '', '', 'sentenceaoe', '', 'peppeatesters', '', '', '', '', '', 'science', 'wWwodayabcdefghijklmnopqrstuvwxyzFWJaaaaaaaapaA', '', '', '', '', '', 'thhreescience has of', 'apple day the awaye cat in the sat on the mat', 'scPeterienscience has', '', 'hasthis is for prirs in', '', 'ovrlazy', 'quicniscience has inbrsentencehesek', '', 'awayr', '', 'tesnumbeonrrs', 'tukickesome', 'The quick brown fox jumps the lazyo dog', '', '', 'has brsentwProtencehess ofers', '', 'sat', '', 'quick brown fox jumps the dogce has inbrsentencehesek', 'the dog', 'quick brown fox the has inbrsentencehesek', '', '', '', '', 'dog', '', '', '', 'pkweeps', 'is for prime numbers in wodayabcdefghijklmnopqrstuvwxyz', 'quicniscience', 'oveAn apple day the awayr', 'aaaaaaaaaaaakeepsatwPaeteroapaA', '', 'quick brown fox jumps the lazydog', '', 'the quick bazdy dog', 'wWFWJaa aaaaaaa', '', 'numbers in words sentenceaoe', '', 'oveAn', 'quick brown fox jumps the has ofe', '', 'ofoveAn apple day', '', 'ofcfe', '', 'is for numbers in', 'Th', 'owodayabcdefghijklmnopqrstuyz', 'threThe quick brown fobranchesx jumps the', '', '', '', 'TTh', 'awayr', '', '', '', 'oe', 'one two ht', 'wWFWJaa aA', 'quick brown fox the doegcem has inbrsentencehesek', 'twPrroo', 'is for numbers in wodayabcdefghijklmnopqrstuvwxyz abc', 'nusmbeaonePiperrs', '', 'twPPtettero', 'Pkled', 'quicnik', 'quick brown fox jumps the', '', 'is for prime numbers in words', 'abc defghquicniinekijklmnopqrstuvyz', '', 'ofe', 'is for prime numbers in wodayabcdefghijklmnopqrstuvwxyz abc', 'day', '', 'pr', '', 'lpZltwProaIlbbZZZ', '', 'foxin', '', 'pecck', '', 'thinuquaoneppleekin', 'awaye', 'is for prime in', 'The cat in the hat has on the mat', 'nin', 'oveAn appTher quick brown fox jumps the dogle day the tor awayr', 'is for prime ian wodayncekthdoctor', '', 'apple dator awaye cat in the sat on the mat', 'thhtree', '', 'quick brown fox jumps the do', '', '', '', 'ovrlazuicky', 'Peter Piper of pickled peppers', 'aaaaaaaaaaaakeepsaaaaainbrsentencehesekaaaapaAf', '', '', 'fobranchesx', '', 'wodayne', 'quipriistestiimofinekek', 'oveeorpceck', 'owhatordsce', 'jumps the lazydog', 'oifinek', 'is aa atest for prime numbers in', '', '', '', '', '', '', '', '', '', '', 'peecc', 'wWFWJaa aaaaaaa aaaaaaaaaaaakeepsaaaaaaaapaaA', '', 'has inbrsentencehesek', '', '', 'tes numbers in words sentenceaoe', 'An apple day keeps', 'nusmnbscience', 'Peter Pkled nusmbsciencepeppers', '', 'quick bazdy', '', 'thi for prime numbers in', '', 'quick brown fox jumhe', 'aoneoverpplee', '', 'The qence has of', 'wtowo', 'thhreescience', 'quick brown fox jumps mover the lazydog', 'qquik', '', 'wodayncekthdoctor', '', '', '', '', '', '', '', 'is for prime numbers in athis', '', 'two three six seven eight nineuicnibaczynek', 'apple day keeps the', 'science of', 'quiicniscwoidaynceience', 'priimme', '', '', 'fVLkz', 'qf', 'has', '', '', '', '', '', 'science has of', 'science has has of', 'apple day keeps the awaye cat inh the hat sat on the mat', 'thhreescience sbrsentennceheses of', 'quick', 'wordors', 'wWFWJaa aaaaaaa', 'apple day the awaye cat hasin the hat sat on the', '', '', 'ht', '', 'ovrlazuthia numbers in words', 'ovrlazuthia', 'qq', 'thpriquikmeeg', '', '', 'science has has of', 'athis', '', 'is atest for numbers in', '', 'haswodaynek ofinbrseentenncehesPipwWFWJaaek', '', 'qui dogce has inbrsentencehesek', '', 'apple the awaye cat hasin the hat sat on the', '', 'quick brown fox jumps the dogce', 'ofineat', 'An apple keeps the', 'oveAn apple day keeps the dooctor awayr', '', 'two three fou six seven eight ngine', '', 'has bProtencehess ofers', '', '', 'hasthis is for prirs in', 'tesAnnumbonrs', '', 'tes numbers in words', 'threeshowodayabcdefghijklmnopqrstuyza', 'afThe quick brown fox jumps the doe mataa', '', 'three fou six seven eight', '', 'fobrancheovrlazuthiansx', 'wodayatbcdepfghijpklmnopqrstuvwxfivec', '', 'for prime ian', 'pe', '', '', 'aa aaaaa', 'thinuquaoneppleekin', 'qnumbbeonrs', 'doegcem', '', '', 'one two three has six seven eight', 'mat', 'thhreescience of', '', '']\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/144", "prompt": "\ndef simplify(x, n):\n    \n\n\n    x1, x2 = map(int, x.split(\"/\"))\n    n1, n2 = map(int, n.split(\"/\"))\n    return (x1 * n1) % (x2 * n2) == 0\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef simplify(x, n):\n    \n\n\n    x1, x2 = map(int, x.split(\"/\"))\n    n1, n2 = map(int, n.split(\"/\"))\n    return (x1 * n1) % (x2 * n2) == 0\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef simplify(x, n):\n    \n\n\n    x1, x2 = map(int, x.split(\"/\"))\n    n1, n2 = map(int, n.split(\"/\"))\n    return (x1 * n1) % (x2 * n2) == 0\n\n", "raw_modification": "```python\n<code_start>\ndef simplify(x, n):\n    # Convert the strings to lists of characters\n    x_chars = list(x)\n    n_chars = list(n)\n    \n    # Join the characters back to form the strings\n    x = ''.join(x_chars)\n    n = ''.join(n_chars)\n    \n    # Split the strings into numerator and denominator\n    x1, x2 = map(int, x.split(\"/\"))\n    n1, n2 = map(int, n.split(\"/\"))\n    \n    # Introduce unnecessary variables and operations\n    product1 = x1 * n1\n    product2 = x2 * n2\n    \n    # Perform redundant calculations\n    redundant_check = (product1 + product2) - product2\n    \n    # Use a loop to simulate complexity\n    for _ in range(1):\n        result = product1 % product2\n    \n    # Return the result of the comparison\n    return result == 0\n<code_end>\n```", "modification": "\ndef simplify(x, n):\n    \n    x_chars = list(x)\n    n_chars = list(n)\n    \n    \n    x = ''.join(x_chars)\n    n = ''.join(n_chars)\n    \n    \n    x1, x2 = map(int, x.split(\"/\"))\n    n1, n2 = map(int, n.split(\"/\"))\n    \n    \n    product1 = x1 * n1\n    product2 = x2 * n2\n    \n    \n    redundant_check = (product1 + product2) - product2\n    \n    \n    for _ in range(1):\n        result = product1 % product2\n    \n    \n    return result == 0\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['1/5', '5/1'], ['1/6', '2/1'], ['5/1', '3/1'], ['7/10', '10/2'], ['2/10', '50/10'], ['7/2', '4/2'], ['11/6', '6/1'], ['2/3', '5/2'], ['5/2', '3/5'], ['2/4', '8/4'], ['2/4', '4/2'], ['1/5', '1/5'], ['3/4', '4/3'], ['6/8', '3/4'], ['1/6', '6/1'], ['2/3', '3/2'], ['9/12', '12/9'], ['15/17', '17/15'], ['8/11', '11/8'], ['13/19', '19/13'], ['20/25', '25/20'], ['3/8', '8/3'], ['17/15', '15/117'], ['12/9', '17/15'], ['6/8', '33/4'], ['12/9', '112/9'], ['616/6', '6/1'], ['12/9', '12/9'], ['205/25', '20/25'], ['98/3', '19/13'], ['12/9', '13/19'], ['9/12', '9/12'], ['3/2', '2/3'], ['13/19', '17/15'], ['133/19', '13/19'], ['3/2', '3/2'], ['119/13', '119/13'], ['205/25', '112/9'], ['2/3', '2/3'], ['1319/13', '119/13'], ['119/13', '1319/13'], ['133/19', '616/6'], ['8/3', '3/8'], ['4/3', '19/13'], ['15/17', '3/2'], ['1112/9', '112/9'], ['225/20', '19/13'], ['119/1', '119/1'], ['23/2', '3/2'], ['68/8', '33/4'], ['13/199', '13/19'], ['2055/25', '112/9'], ['33/4', '33/4'], ['8/3', '33/2'], ['4/3', '17/15'], ['15/117', '15/117'], ['6/1', '17/15'], ['3/19', '13/19'], ['133/19', '133/19'], ['3/88', '3/8'], ['3/8', '83/3'], ['15/17', '112/9'], ['20/25', '112/9'], ['112/9', '205/225'], ['2055/25', '205/25'], ['133/19', '19/13'], ['15/117', '3/2'], ['19/13', '19/13'], ['6/8', '3/88'], ['933/4', '9/12'], ['13/1999', '13/19'], ['19/13', '19/3'], ['8/1', '8/11'], ['23/2', '616/6'], ['17/15', '15/1117'], ['15/117', '17/15'], ['119/1', '4/3'], ['8/811', '11/8'], ['33/44', '33/44'], ['1119/1', '119/1'], ['17/15', '6/8'], ['33/4', '33/34'], ['1112/9', '1112/9'], ['13/19', '3/119'], ['2/3', '22/3'], ['1/6', '1/6'], ['8/3', '8/3'], ['2225/20', '2225/20'], ['2055/25', '22/3'], ['25/20', '1199/1'], ['13/1999', '12/9'], ['119/13', '1119/13'], ['1333/19', '133/19'], ['3/88', '33/8'], ['1119/1', '4/3'], ['13/19', '13/19'], ['3/888', '3/888'], ['15/1117', '15/117'], ['13/199', '17/15'], ['33/34', '3/22'], ['3/119', '13/19'], ['13/1999', '13/1999'], ['1119/1', '1119/1'], ['61612/9', '6/6'], ['3/4', '8/3'], ['1199/1', '1199/1'], ['199/13', '19/313'], ['19/3', '19/13'], ['1119/13', '1119/13'], ['1333/19', '133/1'], ['1333/19', '1333/19'], ['25/20', '8/3'], ['2/3', '8/13'], ['23/52', '16/17'], ['11/7', '13/77'], ['99/100', '11/9'], ['3/8', '7/25'], ['467/736', '453/384'], ['37/55', '176/9'], ['597/275', '380/241'], ['943/29', '163/58'], ['857/291', '921/739'], ['468/136', '453/384'], ['3/8', '3/8'], ['921/739', '921/739'], ['111/7', '13/77'], ['7/25', '7/25'], ['467/736', '857/291'], ['176/17', '8/13'], ['453/384', '453/384'], ['176/17', '3/8'], ['163/58', '857/291'], ['943/29', '453/384'], ['5597/275775', '380/241'], ['23/52', '23/52'], ['11/9', '453/384'], ['467/736', '11/9'], ['467/736', '467/736'], ['467/736', '5597/275775'], ['4553/384', '453/384'], ['5597/275775', '163/58'], ['857/29', '921/739'], ['11/9', '176/17'], ['11/9', '5597/275775'], ['3/8', '13/77'], ['111/7', '176/669'], ['11/9', '176/9'], ['467/7636', '467/7636'], ['5597/2757775', '163/58'], ['9231/739', '921/739'], ['6467/736', '468/136'], ['5597/2757775', '176/669'], ['111/7', '111/7'], ['11/9', '453/3384'], ['3/8', '943/29'], ['11/7', '943/29'], ['11/99', '453/3384'], ['163/58', '163/58'], ['380/241', '380/241'], ['453/384', '1111/7'], ['1111/7', '11/7'], ['9943/29', '163/58'], ['4553/384', '453/38'], ['111/7', '468/136'], ['23/52', '380/241'], ['11/7', '11/7'], ['857/291', '857/291'], ['11/99', '4453/3844'], ['453/384', '7/25'], ['453/3384', '163/58'], ['176/17', '176/17'], ['5597/2757775', '857/291'], ['453/38', '3/8'], ['11/99', '44534/3844'], ['453/3384', '9943/29'], ['9943/29', '11/99'], ['453/38', '13/77'], ['13/77', '13/77'], ['92331/739', '92331/739'], ['1111/7', '3/8'], ['8/3', '8/13'], ['597/275', '597/275'], ['173/77', '173/77'], ['5597/2757775', '467/736'], ['467/7636', '3/8'], ['11/99', '921/739'], ['111/7', '467/736'], ['11/9', '11/9'], ['467/736', '4767/736'], ['3/8', '163/58'], ['921/739', '468/136'], ['3/8', '3/88'], ['9943/29', '4553/384'], ['857/291', '4453/3844'], ['468/136', '468/136'], ['380/241', '9943/29'], ['8/3', '468/136'], ['467/736', '467/7736'], ['467/7736', '467/7736'], ['380/241', '468/136'], ['468/136', '2/3'], ['9943/29', '13/77'], ['5597/2757775', '8579/291'], ['2/3', '453/38'], ['7/2', '597/275'], ['467/7636', '11/9'], ['37/55', '453/38'], ['37/55', '37/55'], ['7/25', '3/8'], ['176/669', '8/13'], ['1111/7', '13/77'], ['9943/29', '8/13'], ['999/100', '11/9'], ['1111/7', '83/8'], ['453/38', '4677/7736'], ['8/3', '468/6'], ['3080/24', '3080/241'], ['8468/6', '468/6'], ['4677/7736', '468/136'], ['173/77', '37/55'], ['45353/3', '4553/3'], ['9943/29', '11/9'], ['111/7', '1111/7'], ['5597/2757775', '161111/78'], ['467/736', '111/9'], ['467/736', '9943/29'], ['176/9', '11/9'], ['9231/739', '176/669'], ['9943/29', '453/38'], ['4674/7436', '4674/7436'], ['921/739', '468/6'], ['7/2', '999/100'], ['9999/0100', '11/9'], ['48468/636', '857/291'], ['467/7736', '16/17'], ['23/51217', '176/17'], ['453/3384', '453/3384'], ['8/3', '5597/2755775'], ['467/736', '47677/736'], ['4674/7436', '4453/3844'], ['453/384', '453/38'], ['453353/3', '45535/3'], ['163/58', '3/8'], ['6467/736', '11/9'], ['5597/2755775', '380/241'], ['3080/241', '453/384'], ['9231/739', '45535/3'], ['5597/2757775', '597/275'], ['92331/739', '468/136'], ['8857/291', '857/291'], ['233/52', '380/241'], ['1111/7', '1111/7'], ['9231/739', '5597/2755775'], ['9943/29', '191/99'], ['4767/736', '16/17'], ['9231/739', '9231/739'], ['453/38', '3080/24'], ['4688/136', '468/136'], ['4688/1386', '468/136'], ['1653/58', '857/291'], ['857/291', '453/3384'], ['3080/241', '3080/241'], ['111/99', '921/739'], ['921/739', '467/736'], ['7/2', '4677/7736'], ['4367/736', '4367/736'], ['468/336', '111/9'], ['453/38', '453/38'], ['233/52', '4367/736'], ['857/29', '857/29'], ['4/136', '468/136'], ['5597/25757775', '5597/2757775'], ['467/736', '11/19'], ['857/291', '45535/3'], ['1111/7', '468/136'], ['4367/736', '233/52'], ['467/7636', '176/669'], ['3/8', '9231/739'], ['33/8', '13/77'], ['8/13', '13/77'], ['453/38', '8/13'], ['4674/74436', '46674/7436'], ['111/17', '111/7'], ['4553/384', '233/52'], ['5597/275775', '1653/58'], ['30802/24', '3080/241'], ['467/77636', '467/77636'], ['37/55', '3/8'], ['3/8', '11/7'], ['111/17', '11/99'], ['1111/7', '5597/2757775'], ['111/9', '11/9'], ['83/8', '163/58'], ['4367/736', '83/8'], ['453/338436', '468/136'], ['8453/384', '8453/384'], ['30802/24', '467/736'], ['5597/2757775', '5597/2757775'], ['11/7', '4677/7736'], ['453/38', '33/8'], ['4688/1386', '30802/24'], ['48468/636', '467/736'], ['45535/3', '45535/3'], ['4553/384', '9999/0100'], ['333/8', '33/8'], ['5597/27557575', '5597/2755775'], ['5597/2757775', '857/7291'], ['1613/58', '5597/2757775'], ['8/13', '857/7291'], ['176/669', '453/384'], ['3080/241', '7/255'], ['453/3384', '1653/58'], ['47677/736', '23/52'], ['453/38', '4688/136'], ['453/3384', '11/9'], ['99/100', '111/17'], ['47677/7736', '4677/7736'], ['468/136', '30802/24'], ['46477/7736', '4677/7736'], ['3/8', '380/241'], ['33467/76368', '333/8'], ['9943/29', '34553/384'], ['4453/3844', '1613/58'], ['47677/7736', '11/9'], ['1653/58', '8/13'], ['4/1136', '4/1136'], ['4674/74436', '4674/744346'], ['11/7', '467/7736'], ['453353/3', '6467/736'], ['30802/24', '176/9'], ['11/7', '11/77'], ['9999/0100', '3080/241'], ['11/7', '3467/7736'], ['176/17', '176/717'], ['1613/58', '3080/241'], ['77/2', '48468/636'], ['176/669', '37/55'], ['176/9', '176/9'], ['4767/736', '9999/0100'], ['9231/739', '9221/739'], ['30802/24', '3080/24'], ['467/736', '467/7366'], ['7/255', '4688/136'], ['11711/7', '3/8'], ['8577/291', '857/291'], ['5453/84', '453/84'], ['3080/24', '3080/24'], ['11/7', '857/291'], ['161111/78', '1111/7'], ['943/29', '45111/9984'], ['468/136', '5597/25757775'], ['467/736', '4637/736'], ['11/9', '1111/7'], ['467/7336', '111/9'], ['380/241', '468/13'], ['943/29', '11/9'], ['47677/7736', '47677/7736'], ['27/2', '7/2'], ['4677/7366', '4677/7366'], ['1613/58', '57597/2757775'], ['467/77636', '597/275'], ['316533/58', '8/13'], ['11/99', '11/99'], ['9999/01', '9999/010'], ['47674/7436', '3/88'], ['453/83384', '1653/58'], ['4637/77636', '467/77636'], ['8453/384', '8433/384'], ['45553/384', '9999/0100'], ['455553/384', '4353/38'], ['455553/384', '13/77'], ['5597/2755775', '3180/241'], ['453/384', '943/29'], ['9999/010', '176/9'], ['46477/7736', '9231/739'], ['9443/29', '163/538'], ['45553/384', '453/84'], ['46477/7736', '46477/7736'], ['468/136', '453/38'], ['1653/558', '1653/58'], ['9999/0100', '9999/0100'], ['44534/3844', '44534/3844'], ['3080/1', '3080/1'], ['11/9', '911/9'], ['30802/24', '47677/7736'], ['453/3338436', '453/338436'], ['5597/2757775', '1857/7291'], ['47677/7736', '8857/291'], ['4637/77636', '9943/29'], ['3/8', '45553/384'], ['4/11136', '4/1136'], ['5597/2757775', '857/21'], ['173/77', '163/58'], ['34674/74434688', '3/88'], ['163/538', '163/538'], ['8857/291', '8857/291'], ['7/25', '453/384'], ['4637/77636', '163/58'], ['2/3', '11/9'], ['37/5', '37/55'], ['468/136', '380/241'], ['4553/384', '4637/7364'], ['467/736', '4767/4736'], ['8/13', '8/13'], ['77/2', '3/8'], ['468/13', '468/13'], ['453/338436', '1653/558'], ['435383/38', '43583/38'], ['45553/384', '453/884'], ['8857/291', '7/2'], ['11/7', '49999/0100'], ['357/55', '176/9'], ['4553/3', '163/5'], ['9221/739', '857/291'], ['911/9', '911/9'], ['467/77636', '9231/739'], ['5597/25757775', '453/3384'], ['11/99', '9943/29'], ['161111/78', '3080/1'], ['8453/384', '4637/77636'], ['4677/7736', '4677/7736'], ['308435383/384', '4637/7364'], ['16/17', '176/9'], ['85577/291', '857/291'], ['1111/7', '467/736'], ['8857/291', '233/52'], ['34674/74434688', '3/8'], ['5597/2755775', '5597/2755775'], ['176/669', '47677/736'], ['453/384', '921/739'], ['4767/36', '999/100'], ['6467/736', '4677/7736'], ['5597/25757775', '8577/291'], ['3080/241', '176/9'], ['4674/7436', '44534/3844'], ['30802/24', '47677/77366'], ['4637/77636', '46367/77636'], ['27/2', '27/2'], ['3080/241', '453/3384'], ['111/17', '1111/7'], ['176/669', '5597/275775'], ['468/1136', '27/2'], ['176/9', '46367/77636'], ['8857/291', '3/8'], ['857/7291', '1111/17'], ['30800/241', '3080/241'], ['13/77', '4677/7366'], ['4674/7436', '8857/291'], ['46477/7736', '4674/74436'], ['4453/3844', '4767/4736'], ['8453/384', '857/291'], ['7/255', '453/84'], ['111/9', '4688/136'], ['9231/739', '163/5'], ['161111/178', '161111/78'], ['3080/204', '3080/24'], ['9999/01559557575', '9999/01'], ['5453/84', '545/84'], ['6467/736', '6467/736'], ['43/384', '9999/0100'], ['8/1325', '3/8'], ['3/346768', '3/346768'], ['921/739', '3/3446768'], ['1653/58', '453/338436'], ['380/241', '9999/0100'], ['77/2', '37/55'], ['48427/236', '48427/236'], ['3/8', '23/52'], ['467/7736', '9443/29'], ['4553/384', '4553/384'], ['3080/204', '453/384'], ['380/2', '468/13'], ['857/29', '85577/291'], ['161111/78', '9999/010'], ['1111/17', '921/739'], ['316533/58', '316533/58'], ['316533/58', '11/9'], ['23/521217', '23/521217'], ['943/29', '921/739'], ['3080/241', '30830/241'], ['545/84', '3080/241'], ['7467/736', '467/7366'], ['233/52', '9221/739'], ['5453/384', '921/739'], ['111/9', '111/9'], ['47677/736', '9999/01'], ['30800/241559757775', '161111/78'], ['111/17', '111/17'], ['11/9', '111/9'], ['176/717', '453/38'], ['857/7291', '7/25'], ['468/336', '468/336'], ['8453/384', '453/3384'], ['48468/66', '48468/6'], ['1111/7', '11711/7'], ['466477/7736', '9999/010'], ['467/76', '467/7366'], ['11/77', '9999/0100'], ['47677/77366', '453/3384336'], ['476767/7736', '47677/7736'], ['1611111/78', '1611/178'], ['48468/6', '9999/010'], ['857/291', '9999/01'], ['911/9', '8857/291'], ['163/538', '467/736'], ['57597/275775', '467/736'], ['16/17', '4674/744346'], ['346477/7736', '9231/739'], ['7/2', '11711/7'], ['467/7736', '4677/7366'], ['1111/17', '161111/78'], ['11/199', '4688/1386'], ['4674/744346', '467/7636'], ['30800/241559757775', '30800/241559757775'], ['4308435383/384', '4637/7364'], ['1653/58', '111/17'], ['37/55', '161111/78'], ['4676/76', '5453/84'], ['4467/7636', '467/7636'], ['468/136', '163/5'], ['4/11136', '233/552'], ['4677/7736', '467/7636'], ['857/5291', '453/3384'], ['453/3384', '453/384'], ['453/38', '1613/58'], ['11711/7', '453/38'], ['4353/38', '380/241'], ['37/55', '1776/9'], ['4674/7436', '4674/744346'], ['357/55', '357/55'], ['9999/010', '9999/010'], ['9943/29', '48468/8636'], ['468/136', '11/77'], ['453/38', '7467/736'], ['34553/384', '857/291'], ['233/5532', '4677/7736'], ['48468/8636', '163/58'], ['1363/568', '47677/7736'], ['3080/204', '453/3384'], ['83/8', '357/55'], ['4367/736', '5597/775'], ['161111/78', '9999/0910'], ['7/255', '7/255'], ['4553/384', '4688/1386'], ['84453/384', '333/8'], ['176/669', '467/7736'], ['4853/3384', '4853/3384'], ['47677/7736', '8468/6'], ['9999/01', '7/25'], ['111/9', '3080/24'], ['6467/736', '9999/010'], ['7/25', '4767/736'], ['33467/76368', '3/8'], ['9999/0910', '4677/7736'], ['11711/7', '44534/3844'], ['8/3', '468/6136'], ['9999/01', '99999/010'], ['3080/1', '380/241'], ['4674/7436', '4637/77636'], ['11/7', '711/77'], ['2/3', '7/255'], ['11/19', '380/241'], ['34674/744346888', '3/88'], ['346874/744346888', '34674/7443646888'], ['467/7636', '46367/77636'], ['1857/7291', '1857/7291'], ['4767/736', '37/55'], ['48468/66', '4453/3844'], ['453/84', '8453/84'], ['7/255', '3080/204'], ['8453/384', '34553/384'], ['857/7291', '9231/739'], ['857/8291', '857/8291'], ['4553/384', '7/255'], ['11/77', '9221/739'], ['99999/010', '9999/010'], ['4688/1386', '13/77'], ['453/884', '4533/884'], ['818757/291', '81857/291'], ['46367/77636', '176/17'], ['34553/384', '9999/910'], ['7/2', '9943/29'], ['11/199', '48468/66'], ['453/384', '233/52'], ['4767/7736', '467/776'], ['3080/1', '43853/3384'], ['46744/744346', '4674/744346'], ['467/77636', '48468/66'], ['8857/291', '308435383/384'], ['467/77346', '9443/29'], ['34674/744346888', '3/8'], ['3/8', '33/8'], ['857/5291', '3/8'], ['921/739', '9443/29'], ['6467/7636', '111/9'], ['46744/7436', '4674/7436'], ['4674/7436', '8433/384'], ['16/17', '3180/241'], ['1653/58', '459999/0108436'], ['11/999', '453/3384'], ['467/77636', '467/736'], ['11/9', '5597/25757775'], ['30802/24', '921/739'], ['11711/7', '4367/736'], ['3080/241', '11/9'], ['176/17', '11/9'], ['308435383/384', '47677/7736'], ['233/25532', '233/25532'], ['233/552', '176/9'], ['176/6669', '453/384'], ['3/24', '30802/24'], ['176/17', '34674/7443646888'], ['6467/7366', '6467/736'], ['23/521217', '37/5'], ['6467/736', '4674/744346'], ['11/17', '467/7736'], ['11/7', '9943/29'], ['467/766', '467/766'], ['857/21', '857/21'], ['453/384', '1613/58'], ['8857/291', '921/739'], ['1/3', '3/1'], ['1/99999', '99999/1'], ['1/1', '1/1'], ['1/10', '10/100'], ['1/10', '100/10'], ['1/1000000000', '999999999/1'], ['999999999/1', '1/1000000000'], ['999999/1', '1/999999'], ['16311/9', '163/58'], ['597/275', '23/52'], ['23/52', '7/25'], ['943/29', '7/25'], ['711/7', '711/7'], ['711/7', '11/9'], ['16311/9', '163/558'], ['380/241', '943/29'], ['23/5271', '921/739'], ['16/117', '16/17'], ['163/558', '163/558'], ['3280/241', '380/241'], ['163/58', '16/17'], ['23/5', '7/25'], ['9291/739', '857/291'], ['99/100', '16311/9'], ['943/29', '380/241'], ['711/7', '11/19'], ['467/736', '163/558'], ['11/7', '380/241'], ['11/19', '921/739'], ['380/241', '8/113'], ['943/29', '943/29'], ['8/113', '8/13'], ['597/275', '23/522'], ['857/291', '921/73'], ['9176/9', '23/5'], ['380/241', '943/9'], ['16/117', '163/558'], ['8/113', '8/113'], ['23/52', '99/100'], ['8/13', '7/25'], ['16311/9', '7/25'], ['23/522', '23/522'], ['857/291', '943/29'], ['9291/739', '857/9291'], ['16/17', '380/241'], ['16/117', '16/117'], ['3280/241', '380/2'], ['943/29', '9176/9'], ['8/113', '38/113'], ['3/8', '921/73'], ['23/5', '857/291'], ['857/291', '23/5'], ['16/117', '23/5'], ['943/9', '921/739'], ['8/113', '380/241'], ['380/2', '3280/241'], ['23/5', '23/5'], ['921/73', '921/73'], ['380/2', '921/73'], ['8523/5922291', '8523/522291'], ['857/2991', '23/5'], ['597/275', '7/25'], ['16311/9', '9291/739'], ['921/739', '99/100'], ['8/113', '38/13'], ['8/113', '23/5'], ['23/252', '99/100'], ['163/558', '8523/5922291'], ['8/13', '7/725'], ['8523/5922291', '23/5922291'], ['380/2', '16311/9'], ['3880/241', '380/241'], ['711/7', '380/241'], ['921/7939', '99/100'], ['9291/739', '8577/291'], ['16163/5588', '1683/58'], ['7/25', '16311/9'], ['857/291', '9493/29'], ['7/725', '7/725'], ['921/7939', '8/113'], ['11/9', '7/725'], ['7/77225', '7/725'], ['8577/291', '8577/291'], ['943/29', '11/19'], ['11/7', '1683/58'], ['176/9', '8523/522291'], ['3803/2', '380/2'], ['380/2', '8/113'], ['23/252', '38/113'], ['9176/9', '9176/9'], ['11/9', '3880/241'], ['16/17', '16/17'], ['597/275', '8523/522291'], ['921/7939', '921/7939'], ['16311/9', '467/736'], ['9176/9', '7/25'], ['857/291', '1683/58'], ['23/5922291', '453/384'], ['921/773', '921/73'], ['597/275', '23/5'], ['9493/329', '11/19'], ['0380/241', '380/241'], ['7/25', '8577/291'], ['943/9', '16/17'], ['2/252', '138/113'], ['9493/29', '857/291'], ['9176/9', '11/7'], ['9176/79', '1683/58'], ['7/25', '176/9'], ['6116/17', '6116/17'], ['921/73', '9217/73'], ['921/7939', '921/773'], ['3921/73', '3921/73'], ['16311/9', '943/9'], ['380/241', '380/24'], ['9176/79', '38/13'], ['857/291', '9943/29'], ['16/17', '16853/58'], ['99/100', '99/100'], ['943/29', '16853/58'], ['857/2991', '857/2991'], ['23/71', '11/119'], ['23/71', '16/17'], ['23/25', '23/25'], ['23/5', '380/2401'], ['857/9291', '23/5'], ['1/9', '7/725'], ['3880/241', '943/9'], ['3803/2', '23/52'], ['4380/24', '380/24'], ['380/241', '9176/9'], ['4380/24', '3880/241'], ['7/725', '7/7275'], ['8/113', '943/9'], ['99/100', '999/100'], ['85233803/2291', '8523/522291'], ['597/275', '8/113'], ['857/29911', '857/2991'], ['18/13', '7/725'], ['943/9', '2/3'], ['8577/29911', '857/2991'], ['9493/29', '380/24'], ['9217/73', '380/2'], ['857/291', '8523/5922291'], ['999/100', '943/9'], ['11/9', '857/2991'], ['163/58', '921/73'], ['380/2401', '38/13'], ['921/7939', '23/25'], ['37/55', '0380/241'], ['16683/58', '1683/58'], ['380/241', '8577/291'], ['921/7939', '388/1313'], ['163311/9', '943/9'], ['111/9', '2/252'], ['857/291', '38/13'], ['597/275', '72/25'], ['23/5922291', '8577/291'], ['7/725', '23/25'], ['16311/9', '138/113'], ['8/13', '23/5'], ['111/9', '380/241'], ['99/100', '380/4241'], ['1716/17', '176/117'], ['943/9', '943/9'], ['380/24', '380/241'], ['921/3', '921/73'], ['380/241', '111/9'], ['03080/241', '99/100'], ['116683/5817', '16853/58'], ['2857/929', '857/929'], ['976/79', '1683/58'], ['857/929', '921/739'], ['921/739', '7/25'], ['16883/58', '1683/58'], ['163111/9', '163111/9'], ['23/5', '16/17'], ['16163/5588', '1683/588'], ['943/29', '16853/658'], ['921/7939', '111/9'], ['233/522', '23/522'], ['9291/739', '38/113'], ['857/2991', '99/100'], ['857/2591', '857/291'], ['176/9', '3921/73'], ['857/29911', '31683/5841'], ['8523/522291', '8523/522291'], ['597/27', '597/275'], ['163/9', '916311/9'], ['388/1313', '38/113'], ['176/117', '176/117'], ['16883/58', '380/241'], ['7/77225', '11/9'], ['176/9', '6176/9'], ['380/241', '3/5'], ['1/9', '11/119'], ['9291/7399', '11/9'], ['11/9', '8/13'], ['380/241', '11/9'], ['943/29', '97176/9'], ['943/29', '7/7275'], ['9493/29', '11/19'], ['380/4241', '111/9'], ['16683/58', '943/2'], ['8523/5922291', '1683/58'], ['3803/2', '16/17'], ['857/2991', '8/13'], ['857/21', '3/13'], ['380/24', '16/17'], ['23/5922291', '23/252'], ['991683/58', '921/7939'], ['921/799', '8/113'], ['380/24', '11/19'], ['991683/58', '380/2'], ['857/291', '9211/739'], ['1831/13', '7/725'], ['31683/5841', '31683/5841'], ['857/2991', '380/241'], ['11/19', '11/19'], ['16163/5588', '16163/5588'], ['380/244', '380/24'], ['711/7', '921/773'], ['8523/522291', '943/9'], ['163/558', '921/13'], ['857/2291', '38/13'], ['3921/73', '979176/9'], ['9217/73', '380/41'], ['380/244', '9176/9'], ['138/1113', '138/1183'], ['597/2975', '380/241'], ['23/25', '921/7939'], ['31683/58461', '31683/5841'], ['8577/2921', '8577/291'], ['1/373', '9291/739'], ['163/558', '163/5558'], ['138/1183', '380/241'], ['176/117', '3880/241'], ['11/9', '999/100'], ['11/19', '31683/5841'], ['31683/5841', '163/58'], ['16853/658', '943/29'], ['2/252', '31683/5841'], ['3/5', '7/25'], ['168553/658', '943/29'], ['38800/241', '943/9'], ['597/2975', '3880/241'], ['916311/9', '3916311/9'], ['8577/291', '85777/291'], ['38/241', '3880/241'], ['857/9291', '857/9291'], ['467/736', '4674/736'], ['3380/41', '380/41'], ['1/9', '1/9'], ['857/291', '23/71'], ['3803/2', '138/1113'], ['921/739', '921/13'], ['9999/9100', '999/100'], ['85388/13131', '9211/739'], ['23/522', '11/19'], ['6176/9', '11/9'], ['9291/739', '16311/9'], ['131683/584619', '16311/9'], ['857/21', '921/73'], ['7/725', '23/5922291'], ['8577/291', '111/9'], ['380/24', '380/24'], ['85738/13291', '85738/13291'], ['23/522', '4674/736'], ['597/2975', '597/2975'], ['138/113', '8/13'], ['233/522', '8577/291'], ['23/25', '380/4241'], ['116853/58', '16853/58'], ['1831/13', '99/100'], ['921/7939', '921/13'], ['168353/58', '16853/58'], ['999/100', '4674/736'], ['23/5', '116853/58'], ['16853/58', '16853/58'], ['16683/58', '7/725'], ['3803/2', '111/9'], ['11/17', '380/241'], ['9943/29', '138/113'], ['16683/58', '9999/9100'], ['163/5558', '16/17'], ['138/113', '857/291'], ['138/1183', '3804/241'], ['7/725', '111/9'], ['943/2', '857/2991'], ['8/1813', '38/13'], ['467/736', '857/21'], ['711/7', '453/384'], ['857/2991', '8523/522291'], ['16311/19', '16311/9'], ['921/7939', '11/119'], ['16311/9', '9999/9100'], ['380/241', '9423/29'], ['11/77', '11/77'], ['11/17', '7/725'], ['1/373', '23/52'], ['921/799', '921/799'], ['921/7', '9217/7'], ['7/225', '9493/29'], ['921/7939', '03080/241'], ['943/2', '1683/58'], ['716/17', '16/17'], ['163/558', '9493/29'], ['921/79379', '921/7939'], ['85777/291', '943/2'], ['3/5', '4674/736'], ['11/17', '11/17'], ['9493/29', '9493/29'], ['716/17', '3380/41'], ['168553/658', '168553/658'], ['111/9', '2857/929'], ['976/79', '976/79'], ['1168531/58', '16853/58'], ['597/2975', '138/1113'], ['16/117', '16853/58'], ['176/9', '380/4241'], ['16311/9', '921/73'], ['3921/73', '857/291'], ['85388/13131', '9211/7'], ['138/1113', '138/1113'], ['3/8', '23/5271'], ['99/100', '85388/13131'], ['16883/58', '16883/58'], ['857/91291', '23/5'], ['7/5725', '7/725'], ['23/711', '23/711'], ['3803/2', '7/725'], ['176/9', '16163/5588'], ['921/799', '85738/13291'], ['72/25', '7/25'], ['921/79339', '921/739'], ['233/522', '7/725'], ['11/77', '3/13'], ['6176/9', '111/9'], ['38/1813', '8/1813'], ['81831/13', '99/100'], ['8857/2991', '857/2991'], ['23/5922291', '58577/291'], ['11/119', '16853/58'], ['11/77', '03080/241'], ['46474/736', '4674/736'], ['131683/584619', '43280/241'], ['921/739', '163/558'], ['3/13', '23/52'], ['16163/51588', '16163/5588'], ['16/17', '8523/5922291'], ['233/25', '38/113'], ['921/7939', '3380/41'], ['7/5725', '8577/291'], ['9999/9100', '7/25'], ['3380/41', '8/113'], ['857/9291', '3/13'], ['3916311/9', '8/113'], ['168553/658', '8523/522291'], ['163311/9', '163311/9'], ['188/13', '7/725'], ['3803/2', '3803/2'], ['163/58', '2/252'], ['38/241', '380/244'], ['1616816/178558', '467/736'], ['6116/17', '16/117'], ['23/25', '8577/291'], ['23/5922291', '2/3'], ['3804/241', '38404/241'], ['11/119', '8523/5922291'], ['16/17', '9291/739'], ['16855/658', '168553/658'], ['38404/241', '8/13'], ['6116/17', '23/25'], ['8527/929', '23/25'], ['8577/29911', '8/113'], ['1/99', '1/9'], ['857/291', '9493/929'], ['6176/9', '6176/9'], ['16311/9', '16311/9'], ['921/799', '31683/5841'], ['1616816/178558', '176/9'], ['943/9', '467/736'], ['94233/29', '94233/29'], ['99/100', '921/739'], ['3803/2', '23/71'], ['380/44241', '176/9'], ['7/5725', '380/2401'], ['9176/9', '7/5'], ['1168531/58', '857/2991']]\n    results = [True, False, True, False, True, True, True, False, False, True, True, False, True, False, True, True, True, True, True, True, True, True, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, True, True, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, True, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/145", "prompt": "\ndef order_by_points(nums):\n    \n\n    def weight(x):\n        x_list = list(str(x))\n        if x_list[0] == \"-\":\n            x_list = x_list[1:]\n            x_list = list(map(int, x_list))\n            x_list[0] = -x_list[0]\n        else:\n            x_list = list(map(int, x_list))\n        return sum(x_list)\n    return sorted(nums, key=weight)\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef order_by_points(nums):\n    \n\n    def weight(x):\n        x_list = list(str(x))\n        if x_list[0] == \"-\":\n            x_list = x_list[1:]\n            x_list = list(map(int, x_list))\n            x_list[0] = -x_list[0]\n        else:\n            x_list = list(map(int, x_list))\n        return sum(x_list)\n    return sorted(nums, key=weight)\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef order_by_points(nums):\n    \n\n    def weight(x):\n        x_list = list(str(x))\n        if x_list[0] == \"-\":\n            x_list = x_list[1:]\n            x_list = list(map(int, x_list))\n            x_list[0] = -x_list[0]\n        else:\n            x_list = list(map(int, x_list))\n        return sum(x_list)\n    return sorted(nums, key=weight)\n\n", "raw_modification": "```python\n<code_start>\ndef order_by_points(nums):\n    \n    def weight(x):\n        # Convert number to string and then to list of characters\n        x_str = str(x)\n        x_list = list(x_str)\n        \n        # Check if the number is negative\n        if x_list[0] == \"-\":\n            # Remove the negative sign\n            x_list = x_list[1:]\n            # Convert characters to integers\n            x_list = list(map(int, x_list))\n            # Negate the first digit\n            x_list[0] = -x_list[0]\n        else:\n            # Convert characters to integers\n            x_list = list(map(int, x_list))\n        \n        # Introduce unnecessary variable and loop\n        total = 0\n        for num in x_list:\n            total += num\n        \n        # Unnecessary conversion and reassignment\n        total_str = str(total)\n        total = int(total_str)\n        \n        return total\n    \n    # Unnecessary variable and loop for sorting\n    sorted_nums = sorted(nums, key=weight)\n    result = []\n    for num in sorted_nums:\n        result.append(num)\n    \n    return result\n<code_end>\n```", "modification": "\ndef order_by_points(nums):\n    \n    def weight(x):\n        \n        x_str = str(x)\n        x_list = list(x_str)\n        \n        \n        if x_list[0] == \"-\":\n            \n            x_list = x_list[1:]\n            \n            x_list = list(map(int, x_list))\n            \n            x_list[0] = -x_list[0]\n        else:\n            \n            x_list = list(map(int, x_list))\n        \n        \n        total = 0\n        for num in x_list:\n            total += num\n        \n        \n        total_str = str(total)\n        total = int(total_str)\n        \n        return total\n    \n    \n    sorted_nums = sorted(nums, key=weight)\n    result = []\n    for num in sorted_nums:\n        result.append(num)\n    \n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[1, 11, -1, -11, -12]], [[1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]], [[]], [[1, -11, -32, 43, 54, -98, 2, -3]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], [[0, 6, 6, -76, -21, 23, 4]], [[1, 2, 3]], [[-5, -12, 9, 15]], [[1111, 2222, 3333, 4444]], [[951, -753, 824, -444, 555]], [[-1000, -99, 0, 99, 1000]], [[100, 20, 300, 4, 5, 60000]], [[10, 20, 50, -100, -200, -500]], [[27, -54, 63, -72, 81, -90]], [[888, -777, 666, -555, 444, -333, 222, -111]], [[0, 0, 0, -1, -10, 1, 10]], [[100, 20, 300, 4, 5, 60000, 20]], [[888, -777, 666, -555, 444, -333, 222, -111, -111]], [[-5, -12, 9, 15, 15]], [[0, 0, -1, -10, 1, 10]], [[10, 20, 50, -100, -200, -500, 10]], [[4444, -5, -12, 9, 15, 15]], [[1, 2, 3, 1, 1]], [[1000, -12, 10, 9, 15]], [[888, -777, 666, -555, -333, 222, -111, -111]], [[888, -777, 666, -555, 444, -333, 222, -111, -111, 888, -111]], [[1111, 4444]], [[667, 888, -777, 666, -555, 444, -333, 222, -111]], [[4444, -54, -5, -12, 9, 15, 15]], [[-1000, 0, 99, 1000, -1000]], [[-753, 824, -444, 222, 824]], [[10, 20, -100, -200, -500]], [[4444, -777, -54, -5, -12, 9, 15, 15]], [[4444, -5, 63]], [[0, 1, 0, -1, 1, 10]], [[10, 20, -100, -200]], [[667, -777, 666, -555, 444, -333, 222, -111]], [[0, 0, -1, 1, 10]], [[0, 0, -1, 1, 10, 1]], [[4444, -5, 63, 4444]], [[-5, 9, 15]], [[1111, 2222, 3333, 4444, 3333]], [[667, 888, -777, 666, -555, 444, 63, 222, -111]], [[0, -90, 0, -1, 1, 10]], [[-12, -1, 1, 10]], [[888, -777, 666, -555, 444, -333, 222, -1000, -111, -555]], [[-753, 824, -444, 824]], [[888, -777, 666, -555, 444, -334, 222, -111, -111, 888, -111]], [[-72, -777, 666, -99, 444, -333, -111]], [[100, 20, 299, 4, 5, 6, 60000, 20, 299]], [[667, 888, -777, 666, -555, 1, 444, 63, 222, -555]], [[-72, -777, 666, 444, -333, -111]], [[888, -777, -555, 444, -333, 222, -111, -111]], [[4444]], [[20, -100, -200]], [[1, 2, 1, 1, 1]], [[10, 20, -100, -199, -200]], [[-12, -5, -12, 9, 15]], [[1, 2, 3, 2, 1]], [[0, 1, 0, -1, 1, 10, 10]], [[-5, -12, 9, 15, 15, -12]], [[1, 2, 3, 1]], [[0, 1, 0, -1, 10, -1]], [[10, 20, 951, -199, -200]], [[10, 20, 60000, 951, -199]], [[4444, -5, -12, 9, 6, 15, 15]], [[667, -777, 666, -555, 444, -333, 222, -111, -555]], [[-72, -777, 666, -100, 444, -333, -111]], [[63, -5, 63, 4444]], [[667, -777, 666, -555, 444, -333, 222, 6, -111]], [[27, -89, -54, 63, -72, 81, -90, 63]], [[-1000, -99, 0, 99, 1000, 0]], [[4444, -5, 62]], [[10, 20, 50, -100, -501, -200, -500]], [[667, -777, 666, -555, 4, -333, 222, -111]], [[-72, -777, 666, -99, 444, -333, -111, 444]], [[27, -89, -54, 63, -72, 667, -90, 63]], [[4444, 4444, -5, 63]], [[4444, -5, -12, 9, 6, 15, 15, 15, 4444]], [[1, 2, 3, 1, 1, 1]], [[27, -89, -54, 63, 667, -90, -1000]], [[10, 20, -100, -99, -199, -500]], [[667, 888, -777, 666, -72, -555, 444, 63, 555, 222, -111]], [[10, 20, -199, -200]], [[0, 0, -72, -1, 1, 10, 10, 1]], [[0, 0, 0, 0, -1, -10, 1, 10]], [[667, -777, -555, -554, 444, -333, 222, -111, -555]], [[4444, -5, -12, 9, -199, 15]], [[0, 0, -1, 10, 1]], [[-100, -200, -200]], [[0, 0, 0, -1, -10, -72, 1, 10]], [[667, 888, -777, 666, -72, -555, 444, 63, 555, 222, -111, 888]], [[-72, -777, 666, -99, 444, -333, -111, 444, 444]], [[1, 2, -89, 1]], [[1111, 4444, 2222, 3333, 4444]], [[2, 1, 1, 1]], [[-72, -777, 666, -99, 444, -333, -111, 444, 444, -99]], [[1111, 4444, 2222, 3333, 3334, 4444]], [[1, 2, 3, -753, 1]], [[81, 27, -54, 100, -72, 81, -90, 81, 27]], [[-72, -777, 666, -100, 444, -333]], [[0, 1, 0, -1, 3333, -1]], [[4444, 63]], [[-777, 666, -555, 444, -333, 222, -111, -111]], [[27, -54, -72, 81, -90]], [[27, -89, -54, 63, 667, -90, -1000, -1000, -999, -1000, -1000]], [[0, 9, -85, -129, 874, 6745, 8325, 67054, -816508, 9999999]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50]], [[456, 855, 23413, 11124, -22, -345, 6114, -999, -876, 101]], [[-33333, -22222, -11111, 11111, 22222, 33333, 100000]], [[789, 912, 677, 766, 456798, 226, 8934, 56789, -15, -68, -987]], [[13579, 24680, -86420, -97531, 9, -8, 7, -6, 5, 0, -4, 3, -2, 1]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832, -53621]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808]], [[1000, -1000, 200, -200, 500, -500, 333, -333]], [[-97531, -33333, -22222, -11111, 11111, 22222, 33333, 100000]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, -876, 102]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808]], [[456, 855, 23413, 11124, -345, 6114, -999, -876, 101]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -901, 911, -808]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, -876, 102, 854]], [[-97531, -33333, -22222, 213, -11111, 11111, 22222, 33333, 100000, -97531]], [[456, 855, 23413, 11124, -345, 6114, -999, -875, 101]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500]], [[456, 855, 23413, 11124, -345, 6114, -999, -876, 101, 6114]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808]], [[456, 855, 23413, 11124, -345, 6114, -875, 101]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808]], [[13579, 24680, -86420, -97531, 9, -8, 53, 7, -6, 5, -4, 3, -2, 1]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, -876, 102, 854, -876]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808]], [[21, -43, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808]], [[456, 854, 23413, 11124, -22, 3, -6, -999, -876, 102, 854, -876]], [[456, 855, 23413, 11124, -345, 6114, -999, -876, 101, -346, 6114, 6114]], [[21, -43, 38, -204, -206, 213, 161, -900, 53, -77, -901, 911, -808, 161]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, -876, 102, 854, -876, -999, 456]], [[21, -22222, 38, -206, 203, 161, -900, 456798, 53, -901, 911, -808]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 213]], [[86, -345, -1000, 200, -200, 500, -500, 333, -333]], [[13579, 24680, -86420, -97531, -8, 7, -6, 5, 0, -4, 3, 11111, 1, 0]], [[21, 31, 38, 22, -204, -206, 213, 874, 161, -900, 915, 53, -77, -901, 911, -808, -808]], [[456, 855, 11124, -345, 6114, -999, -204, 101, 6114]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, -901]], [[-97531, -33333, -22222, -11111, 11111, 22222, 33333, 100000, 33333]], [[21, -22222, 38, -206, 203, -900, 456798, 53, -901, 911, -808]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 911]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, -876, 102, 854, -876, -999, 4, 456]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222]], [[21, -22222, 456797, 38, -206, 203, -900, 456798, 53, -901, 910, 911, -808]], [[21, -22222, 456797, -206, 203, -900, 456798, 53, -901, 910, 911, -808]], [[21, 31, 38, 22, -204, -809, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808]], [[-33333, -22222, -11111, 11111, 22222, 33333, 100000, 22222]], [[-97531, -33333, -22222, -11111, 11111, -53621, 33333, 100000, 33333]], [[21, 31, 38, 22, -204, -206, 213, 21, 161, -900, 915, -77, -901, 911, -808]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832, -4]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, 456797, -901, 911, -808]], [[21, -22222, 456797, -206, 203, -900, 456798, 53, -901, 910, 911, -808, 53]], [[-97531, -33333, -22222, -11111, 11111, 22222, 33333, 100000, -39, 33333, 11111, 33333]], [[13579, 24680, -1, -86420, -97531, -8, 7, -6, 5, 0, -4, 3, 11111, -86419, 1, 0]], [[13579, 24680, -86420, -97531, -3, 9, -8, -6, 5, 0, -4, 3, -2, 1]], [[0, 9, -85, -129, 874, 6745, 8325, 67054, 9999999]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -809, -901, 161]], [[142, 137, 203, 8934, -500, -321, -23, 915, 76832, -53621, -53621, -500]], [[456, 854, 43, 23413, 11124, -22, 3, -6, -999, -876, 102, 854, -876]], [[-999, 456, 854, 23412, 11124, -22, 3, 6114, -999, -876, 102, 3]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 212, 213, 213]], [[-97531, -33333, -22222, 6745, 11111, 22222, 33333, -18, 33333]], [[0, 9, -85, -129, 874, 6744, 6745, 8325, 67054, -816508, 9999999]], [[1000, -1000, 200, 500, -500, 333, -333]], [[21, 31, 38, -204, -206, 161, -900, 915, 53, -77, -901, 911, -808]], [[-33333, -22222, 22223, -11111, 11111, 22222, 33333, 100000, 22222, 22222]], [[-11111, -33333, -22222, -11111, 11111, 22222, 33333, 100000, 22222]], [[456, 855, 11124, -345, 6114, -999, -204, 101, 6114, 455, -345]], [[-33333, -22222, -11111, 11111, 22222, 33333, 100000, -22222]], [[-33333, -22222, 6745, 11111, 22222, 33333, -18, 33333]], [[13579, 24680, -86420, -97531, 9, -8, 7, -6, 5, 0, -4, 3, -2, 1, 7]], [[21, 31, 52, 38, -204, -206, 161, -900, 915, 53, -77, -901, 911, -808]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -901, 32, 911, -808]], [[0, 9, -86, -85, -129, -34, 874, 6744, 6745, 8325, 67054, -816508, 9999999]], [[456, 855, 23413, 11124, -345, 6114, 455, -875, 101]], [[21, -22222, 456797, -206, 203, -900, 456798, 53, -901, 910, -206, 911, -808]], [[21, 31, 38, 22, 31, -204, -809, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808, -900]], [[21, 31, 52, 38, -204, -206, -900, 915, 53, -77, -901, 911, -808]], [[21, 31, -40, 38, 22, -204, -206, 21, 213, 161, -900, 915, 53, 456797, -901, 911, -808]], [[456, 855, 11124, -345, 47, 6114, -999, -204, 101, 6114, 455, -345]], [[21, -22222, 39, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 213]], [[161, 912, 677, 766, 456798, 226, 8934, 56789, -15, -68, -987, -987]], [[142, 137, 203, 755, -500, -23, 0, 76832, -4]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 25, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50]], [[1000, -1000, 200, 500, 333, -333]], [[-33333, -22223, 22223, -11111, 11111, 22222, 33333, 789, 22222, 22222]], [[456, 855, 23413, 102, 11124, -345, 6114, 455, -875, 101]], [[21, -200, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -809, -901, 161, 31]], [[86, -345, -1000, 200, -200, 500, -500, 333, -333, 500]], [[-22222, -11111, 11111, 22222, 33333, 100000, -22222]], [[21, 31, 38, 22, -204, -809, -206, 213, 161, -900, 915, 53, -999, -901, 911, -808, 38]], [[21, 31, -40, 38, 22, -204, -206, 21, 213, 161, -900, 915, 53, 456797, -901, 911, -808, 915]], [[-1000, 200, 500, -333, 500]], [[142, 137, 8934, -500, -321, 76832, -53621, -53621, -500]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, -901, -808]], [[21, -22222, 39, -206, 213, 161, -3, 456798, 53, -901, 911, -808, 213]], [[31, 38, -204, -206, 213, 161, -900, 916, 53, -77, -901, 911, -808, -901]], [[0, 9, -85, -129, 874, 6745, 8325, 9999999, 67054, 9999999]], [[456, 854, 23413, 11124, -22, -19, 3, 6114, -999, -876, 102]], [[142, 137, 203, 8934, 48, -321, -23, 76832, -53621, -53622, -500, 203]], [[13579, 24680, -86420, -97531, 9, -8, 7, -6, 5, 4, 0, -4, 3, -2, 1]], [[-33333, -22222, 24680, 11111, 22222, 33333, 100000]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, 914, -77, -901, 911]], [[789, 912, 677, 766, -16, 456798, 226, 8934, 56789, -15, -68, -987]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142]], [[21, -22222, 39, -22221, -206, 213, 161, -3, 456798, 53, -901, 911, -808, 213]], [[142, 137, 204, 755, -500, -23, 0, 76832, -4]], [[21, -22222, 456797, -206, 203, 13579, -900, 456798, 53, -901, 910, 911, -808, 53]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 911, 911]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, 23413, -808]], [[21, 31, -40, 38, 22, -204, -206, 21, 213, 161, -900, 915, 53, 456797, -901, 911, -808, 911]], [[789, 912, 677, -345, 766, 456798, 226, 8934, 56789, -15, -68, -987]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, -53621, -23]], [[456, 854, 23413, 853, 11124, -22, 3, 6114, -999, -876, 102, 854, -876, -999, 4, 456]], [[456, 854, 23413, 11124, 226, -19, 3, 6114, -999, -876, 102]], [[-1000, 200, 500, -333, 22223, 500]], [[142, -33333, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142]], [[13579, 24680, 23412, -97531, 9, -8, 53, 7, -6, 5, -4, 3, -2, 1]], [[161, 912, 677, 766, 456798, 226, 56789, -15, -68, -987, -987]], [[13579, 24680, -86420, -97531, 9, -8, 7, -6, 5, 0, -4, 3, -2, 45, 0]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832]], [[-33333, -22222, -11111, 11111, 22222, 755, 33333, 100000, 22222]], [[1000, -1001, 200, 500, -500, 333, -333]], [[21, -22222, 39, -206, 213, 161, -204, -3, 456798, 53, -901, 911, -808, -900, 213, 161]], [[456, 854, 11124, -22, 3, 6114, -999, -876, -998, 102, 854, -876, -999, 456]], [[789, 912, 677, -345, 766, 456798, 226, 8934, 56789, -15, -68, -986]], [[142, 137, 203, 8934, -321, -23, -53621, -53621, -500]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, 6, -901, 911, -808, -901]], [[-97531, -33333, -22222, 6745, 11111, 22222, 33333, -18, 33333, -22222]], [[456, 23413, 11124, -345, -346, 6114, -999, -875, 101]], [[21, 31, 38, -204, -206, 161, -900, 915, 53, -77, 910, -901, 911, -808]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 915, 6, 13, -38, 79]], [[456, 856, 23413, 11124, -345, 6114, -999, 101]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, 142]], [[21, 31, 52, 38, -204, -206, 915, 53, -77, -901, 911, -808]], [[855, 11124, -345, 6114, -999, -204, 101, 6114, 455, -345]], [[142, -999, 203, 8934, -500, -321, -23, 76832, -53621, -53621]], [[20, 31, -40, 22, 23412, -204, -206, 21, 213, 161, -900, 915, 53, 456797, -901, 911, -808, 911]], [[142, 137, 204, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, 142]], [[21, -22222, 38, -206, 203, 22223, -900, 9, 53, -901, 911, -808]], [[142, 137, 203, -321, -23, -53621, -53621, -500]], [[13579, 24680, -86420, -97531, -3, 9, -8, -5, 5, 0, -4, 3, -2, 1]], [[-33333, -22222, -11111, 11111, 22222, 33333, 100000, -22222, -22222]], [[162, 21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808]], [[86, -345, -1000, 200, -200, 500, -500, 199, 333, -333, 500]], [[456, 854, 43, 23413, 11124, -22, -6, -999, -876, 102, 854, -876]], [[226, 21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, -77, -901, -808]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, -53621, 142, -23, -53621]], [[456, 854, 11124, -22, 3, 6114, -999, -876, -998, 102, -876, -999, 456]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22221, -900, 161]], [[21, -22222, 39, -22221, -206, 213, 161, -3, 456798, 53, 911, -808, 213]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, -77, -901, 911, -808]], [[24680, 21, 31, 38, -204, -206, 213, 161, -900, 915, 53, 39, 6, -901, 911, -808, -901]], [[-33332, -22222, -11111, 11111, 22222, 33333, 100000, 22222]], [[1000, 201, -1000, 200, 500, -500, 333, -333]], [[21, 31, 853, 22, 31, -204, -809, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808, 916, -900]], [[789, 912, 677, 766, -16, 456798, 226, 8934, 56789, -15, -68, -987, 912]], [[-33333, -22222, -11112, 11111, 22222, 755, 33333, 100000, 22222]], [[21, -22222, 456797, -206, 203, -900, 456798, 53, 910, 911, -808]], [[21, -22222, 456797, 38, -206, 203, -900, 456798, 53, 910, 911, -808, 910]], [[86, -345, -1000, 200, -200, 500, -500, 333, -333, 500, -1000]], [[142, 137, 8935, -500, 203, -23, 76832, -53621, -53621]], [[21, -22222, 456797, 38, -206, 203, -900, 456798, 53, -901, 910, 911, -808, 456797]], [[21, 67054, 30, 38, -204, -206, 213, 161, -900, 915, 52, -77, -901, 911, -808, 21]], [[21, 31, 38, -203, -206, 213, 161, -900, 915, 53, -77, -901, -809, -901, 161]], [[21, -22222, 38, -206, 203, 161, -900, 456798, 53, -901, 911, -808, 911]], [[37, 21, 31, 38, 22, 31, -204, -809, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808, -900, 101]], [[86, -345, -1000, 200, -200, 500, -500, -22223, 333, -333]], [[21, -22222, 456797, -206, 203, -900, 456798, 911, 53, -901, 910, 911, -808, 456797]], [[162, 21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 915]], [[0, 10, -85, -129, 874, 6745, 8324, 9999999, 67054, 9999999]], [[13579, 24680, -86420, -3, 9, -6, 5, -7, -4, 3, -2, 1, -7]], [[456, 854, 43, 23413, 11124, -22, -6, -999, -876, 102, 854, 456, -876]], [[21, -22222, -22221, -206, 213, 161, -3, 456798, 53, 911, -808, 213, -3]], [[21, 31, 38, 22, -204, -809, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808, -809]], [[0, 9, -85, 677, 22223, -129, 874, 6745, 8325, 67054, 9999999]], [[456, 23413, 11124, -345, -346, 6114, -999, -875, 101, -345]], [[-22222, 38, -206, 213, 161, 456799, -900, 456798, 53, -901, 911, -808]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832, 203]], [[6114, 137, 8934, -501, -321, 76832, -53621, -53621, -500]], [[13579, 24680, -86420, -97531, -8, 7, -6, 5, 0, -4, 3, 11111, 1, 0, -86420]], [[1000, 201, -1000, 200, -999, 500, -500, 333, -333, 200]], [[789, 912, 677, 766, 456798, 226, 8934, 56789, -15, -68, -987, -68]], [[21, -22222, -22221, -206, 213, 161, -3, 456798, 53, 911, -808, -3]], [[456, 855, 23413, 11124, -345, 6114, -999, -876, 789]], [[21, 31, 38, -205, 213, 161, -900, 456798, 53, -901, 102, -808]], [[852, 21, 31, 853, 22, 31, -204, -809, -206, 213, -34, 161, -900, 915, 53, 101, -901, 911, -808, 916, -900]], [[142, 137, 203, 8934, 138, -321, -23, -53621, -53621, -500]], [[21, -22222, 38, -206, 203, 22223, -900, 9, 53, -901, 911, -808, -900]], [[21, 31, 38, 22, -204, -809, -206, 161, -900, 915, 53, -999, -901, 911, -808, 38]], [[21, 31, -41, 38, 22, -204, -206, 21, 213, 161, -900, 915, 53, 456797, -901, 911, -808, 911]], [[21, 31, -76, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 912, 911, 911]], [[142, -999, 203, 8934, -500, -321, -23, 76832, -53621, -53621, 8934]], [[456, 38, -204, -206, 213, 161, -900, 53, -77, -901, 911, -808, 161]], [[852, 21, 31, 853, 22, 31, -204, -809, -206, 213, -34, 161, -900, 915, 53, 101, -901, 911, -808, 916, -900, 21, 31]], [[142, -33333, 137, 203, 8934, -500, -33334, -321, -23, 76832, -53621, -53621, -500, 142]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 213, 213, 213]], [[21, -22222, 13579, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 213]], [[226, 21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, -808]], [[43, 456, 854, 11124, -22, 3, 6114, -999, -876, -998, 102, 854, -876, -999]], [[-97531, -33333, -22222, 6745, 11112, 22222, 33333, -18, 33333, -22222, -33333]], [[457, 855, 23413, 11123, 11124, -345, 6114, -999, -876, 101, 6114]], [[21, 31, -40, 38, 22, -204, -206, 21, 213, 161, -900, 915, 53, 456797, -901, 911, -808, 911, 456797, -40]], [[21, -22222, 39, -206, 213, 161, -3, 456798, 53, -901, -22223, 911, -808, 213]], [[-97531, -22222, 6745, 22222, 33333, -18, 33333, -22222, -33333]], [[21, 31, -40, 38, 22, -204, -206, 21, 213, 161, -900, 915, 53, 456797, -901, 911, -808, 911, -204, 456797, -40, 22]], [[456, 854, 43, 23413, 11124, -22, -6, -999, -876, 102, 854, 456, -876, 854]], [[142, -999, 203, 8934, -500, -321, -23, 76832, -53621, -53621, 8934, 142]], [[456, 23413, 11124, -345, 6114, -999, -876, 101, -346, 6114, 6114]], [[456, 854, 23413, 11124, -22, -19, 3, 6114, -999, -876, 102, 23413]], [[162, 21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 21]], [[21, -22222, 456797, -206, 203, -900, 456798, 53, -901, 911, -808, 53]], [[21, 31, 38, 22, -204, -809, -206, 79, -900, 915, 53, -999, -901, 911, -808, 38]], [[-15, 912, 677, 766, -16, 456799, 226, 8934, 56789, -15, -987, 912]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, -53621, -23, -500]], [[-999, 456, 854, 23412, 11124, -22, 3, -999, -876, 102, -53621, 3, 3]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 213, 213, 213, 53]], [[-22222, 38, -206, 203, -900, 9, 53, -901, 911, 13, -808, -900]], [[21, -22222, 38, -206, 203, -900, 456798, 53, -901, 911, -808, 53]], [[789, 912, 677, -345, 766, 456798, 226, 8934, 56789, -15, -68, -986, 789]], [[21, 67054, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 21, 52]], [[21, 31, 38, 22, -204, -809, -206, -900, 915, 53, -999, -901, 911, -808, 38]], [[21, 31, -40, 38, 22, -204, -206, 21, 213, 161, 213, -900, 915, 53, 456797, -901, 911, -808, 911, 456797, -40]], [[456, 854, 23413, 853, 11124, -22, 3, 6115, -999, -876, 102, 854, -876, -999, 4, 456]], [[142, 137, 203, 755, -501, -321, -23, 0, 76832]], [[142, -22, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, -53621, -23, -500]], [[456, 854, 43, 23413, 11124, -22, -6, -999, -876, 102, 854, 456, -876, 854, -6]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53622, -500, 142, 142, -53621, -23, -500]], [[21, -22222, 456797, -206, 203, 13579, -900, 456798, 53, -899, 13, 911, -808, 53]], [[456, 855, 23413, 11124, -345, 6114, 31, -876, 101, -345]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, 31, 911, -808]], [[21, -22222, 39, -206, 213, 161, -3, 456798, 53, -901, 911, -808, 213, 21]], [[456, 855, 23413, 11124, -345, -998, 6114, -999, -876, 101, -346, 6114, 6114]], [[-346, 855, 23412, 11124, -345, 6114, -999, -877, 101, 6114]], [[13579, 24680, -86420, -97531, 9, -8, 2, 7, -6, 5, 4, 0, -4, 3, -2, 1]], [[21, 30, 38, -204, 213, 161, -900, 915, -77, -901, 911, -808]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, 142, 142]], [[456, 854, 23413, 11124, -22, 3, -6, -999, -876, 102, 854, -876, 23413]], [[21, 30, 38, -204, -206, -17, 213, 161, -900, 915, 53, -77, -901, 911, -900]], [[142, 137, 8934, -321, -23, -53621, -53621, -500]], [[21, -22222, 39, -22221, -206, 213, 161, 45, -3, 456798, 53, -901, 911, -808, 213]], [[21, -22222, 38, -206, -987, 161, -900, 456798, 53, 911, -808, 213, 213, 213, 53]], [[1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 27, 23, 25, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -36]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -901, -39, 911, -808]], [[-33333, -22222, -11112, 11111, 755, 33333, 100000, 22222]], [[1000, -1000, 200, 500, 333, -333, 200]], [[456, 38, -204, -206, 213, 161, -900, 53, -77, -901, 911, -808, 161, -206]], [[21, 30, 38, -204, -206, -17, 213, 161, -900, 915, 53, -77, -901, 49]], [[21, -22222, 38, -206, 213, 161, -900, 456798, -901, 911, -808, -53622, 213]], [[456, 854, 23413, 11124, -22, 3, -6, -999, -876, 102, 854, -876, 23413, -37]], [[0, 9, 455, -129, 874, 6745, -39, 67054, -816508, 856]], [[456, 854, 43, 23413, 11124, -22, 3, -6, -999, -876, 102, 854, -876, 456]], [[456, 854, 23413, 11124, 2, -22, 3, -6, -999, -876, 102, 854, 853, -876, -37, 456]], [[13579, 24680, -86420, -97531, -8, 7, -6, 5, 0, -4, 3, 11111, 1]], [[-22222, 38, -206, 203, -900, 9, 53, -901, 911, 13, -808, -900, 13]], [[21, 31, 38, -204, 912, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, 101, -36, -901, 911, -808]], [[855, 11124, 11124, -345, 6114, -999, -876, 789, -999]], [[456, 854, 23413, 11124, -22, 3, -999, -999, -876, 102, -876]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, 101, -36, -901, 911, -808, 22]], [[456, -344, 855, 11124, -345, 47, 6114, -999, -204, 101, 6114, -345]], [[-22222, 38, -206, 203, -900, 9, 53, -901, 911, 13, -808, -900, 13, -22222, 203]], [[21, 31, 38, 22, -204, -206, 213, -22222, 161, -900, 915, 38, 53, 101, -36, -901, 911, -808]], [[31, 38, -204, -206, 213, 161, -900, 916, 52, -77, -901, 911, -808, -901]], [[21, 30, 38, -206, -17, 213, 161, -900, 915, 53, -77, -901, 911, -900]], [[456, 854, 23413, 11124, 226, -19, 3, 6114, -999, -876, 102, -999]], [[21, 31, 38, 22, -204, -809, -206, 213, 161, -900, 915, -999, -901, 911, -808, 38]], [[-33333, -22222, -11111, 11111, 22222, 33333, -22222]], [[-97530, -33333, -22222, -11111, 11111, 22222, 33333, 100000]], [[456, 855, 11124, -345, -998, 6114, -999, -876, 101, -346, 6114, 6114]], [[-999, 456, 854, 23412, 11124, -22, 4, 6114, -999, -876, 102, 3]], [[456, 854, 23413, 11124, -22, -6, -999, -876, 102, 854, -876]], [[21, -22222, 456, -206, 203, -900, 456798, 53, -901, 910, -808, 53]], [[21, -205, 31, 38, -204, -206, 213, 161, -900, 915, 53, -901, 911, -808]], [[456, 855, 23413, 11124, -345, 6114, -999, -876, 101, -346, 6114, 6114, -346]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, -876, 854, -876]], [[21, -22222, 38, -206, 161, -900, 456798, 53, -901, 911, -808, 213, 213, 213, 53]], [[21, 31, 38, 22, -204, 911, -809, -206, -900, 915, 53, -999, -901, 911, -808, 38]], [[-200, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -809, -901, 161, 31]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, 102, 854]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222, 456798]], [[456, 854, 853, 11124, -22, 6115, 3, 6114, -999, -876, 102, 854, -876, -999, 4, 456]], [[67054, 30, 38, -204, -206, 213, 161, -900, 915, 52, -77, -901, 911, -808, 21, 911, 52]], [[0, 9, -85, 874, 6745, 8325, 9999999, 67054, 9999999, 6745]], [[-97531, -33333, -22222, -11111, 11111, 22222, 33333, 100000, -97531]], [[456, 854, 43, 23413, -22, 3, -6, -999, -876, 102, 854, -876, 456, 43]], [[456, 855, 23413, 11124, -345, 6114, -875, -37, 101]], [[13579, 24680, -86420, -97531, 9, -8, 7, -7, 5, 0, -4, 3, -2, 1, -97531]], [[37, 21, 31, 38, 22, 31, -204, -809, -206, 213, 161, -900, 915, 53, 101, 226, 911, -808, -900, 101]], [[855, 11124, 11124, -345, 6114, -999, -876, -16, -999]], [[0, 9, -85, -129, 874, 6745, 8325, -816507, 67054, -816508, 9999999]], [[854, 23413, 23413, 11124, -22, 3, 6114, -999, -876, 854, -876, -876]], [[-33333, -22222, 22223, -11111, 11111, 22222, 33333, 100000, 22222, 22222, 100000, 11111]], [[456, 855, 23413, 11124, -345, -999, -876, 101, 6114]], [[21, -68, 38, -204, -206, 213, 161, -900, 915, 53, 6, -901, 911, -808, -901, 915, 21]], [[1000, 200, 500, -500, 333, -333]], [[13579, 24680, -86420, -97530, 9, -8, 7, 213, 5, 0, -15, 3, -2, 1, 7]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, -5]], [[226, 21, 31, 38, 22, -204, -206, 161, -900, 915, 11112, 53, -77, -901, -808]], [[456, 855, 23413, 11124, -345, 6114, -999, -876, 101, -1000, -346, 6114, 6114]], [[21, 31, 38, -204, -206, 213, 161, -900, 915, 53, -901, -39, -808]], [[21, -22222, 38, -205, 213, 161, -900, -22223, 456798, 53, -901, 911, 213, -22221, -900, 161, 21]], [[22223, -33333, -22222, 22223, -11111, 11111, 22222, 33333, 100000, 22222, 22222, 100000, 11111]], [[21, 67054, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 21, 52, 915]], [[21, 31, 38, 54, 22, -204, -206, 213, 161, -900, 915, 53, 101, -36, -901, 911, -11111, -808, 22]], [[21, 31, 38, -204, -206, 161, -900, -205, 915, 53, -77, -901, 911, -808]], [[-22222, -11111, 200, 22222, 33333, 100000, -22222, -22222]], [[456, 856, 23413, -35, -345, 6114, -999, 101]], [[-33332, -22222, 11111, 22222, 33333, 100000, 22222, 33333]], [[21, 30, 38, -204, 213, 161, -900, 915, -77, -901, 911, -808, -77]], [[21, 67054, 30, -43, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 21, 52]], [[-22222, 38, -206, 203, -900, 9, 53, -901, 911, 13, -808, -900, 13, 53]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 25, 24, 25, 26, 27, 28, 29, 30, 46, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50]], [[789, 912, 677, -345, 678, 766, 456798, 226, 8934, 56789, -15, -68, -986]], [[-97531, -33333, -22222, 6745, 11112, -33334, 22222, 33333, 914, 33333, -22222, -33333, -22222]], [[456, 854, 43, 23413, 11124, -22, -6, -999, -876, 102, 854, 456, -876, 102]], [[852, 21, 31, 853, 22, 31, -204, -809, -206, 213, -34, 161, -900, 915, 53, 101, -901, 911, 916, -900, 21, 31]], [[-205, 21, -22222, 38, -206, 203, -900, 456798, 53, -901, 911, -808]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 25, 24, 25, 26, 27, 28, 29, 30, 46, 31, -32, -33, -34, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50]], [[-33333, -22222, 24680, 11111, 8324, 33333, 100000]], [[21, -22222, 39, -22221, -206, 213, 161, -3, 456798, 53, -901, 911, -808, 213, -22222]], [[456, 854, 23413, 11124, 2, -22, 3, -6, -999, 102, 854, -876, -37, 456]], [[21, -22222, 39, -206, 213, 161, -3, 456798, -22223, 911, -808, 213]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 20, 53, 456797, -901, 911, -808]], [[142, 137, 8934, -321, -53622, -23, -53621, -53621, -53621, 27, -500]], [[13579, 24680, -86420, -97531, 9, -8, 7, -6, 5, -4, 3, -2, 1]], [[456, 43, 23413, -22, 3, -6, -999, -876, 102, 854, -876, 456, 43]], [[-97531, -22222, 6745, 11111, 22222, 33333, -18, 33333, -22222]], [[-33333, -22222, 22223, 38, 11111, 22222, 33333, 100000, 22222, 22222, 100000, 11111]], [[24680, 21, 31, 38, -204, -206, 213, 161, -900, 915, 53, 39, 6, -901, 911, -808, -901, -900]], [[852, 21, 31, 853, 22, 31, -204, -809, -206, 213, -34, 161, -900, 915, 53, 101, -11111, -901, 911, -808, 916, -900]], [[21, 67054, 30, -43, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, 21, 52]], [[24680, -86420, -3, 9, -6, 5, -7, -4, 3, -2, 1, -7]], [[-22222, 38, -206, 203, -900, 9, 52, -901, 911, 13, -808, -900, 13, -22222, 203]], [[21, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808]], [[142, 137, 8934, 48, -321, -23, 76832, -53621, -53622, -500, 203]], [[456, 854, 23413, 11124, 226, -876, 11123, -19, 3, 6114, -999, -876, 102, -999]], [[456, 854, 23413, 852, 11124, -22, 3, -6, -876, 102, 854, -876]], [[86, -345, 911, -1000, 200, -200, 500, -500, 333, -333]], [[456, 855, 23413, 11124, -345, 6114, -999, -876, 789, -999]], [[-22222, 38, -206, 203, -900, 53, -901, 911, 13, -808, -333, 13, -900]], [[21, -205, 31, 38, -204, -206, 213, 161, -900, 53, -901, 911, -808, -206]], [[456, 854, 43, 23413, -22, 4, -999, -23, -876, 102, 854, -876, 456, 43]], [[-97531, -33333, -22222, 6745, 11111, 22222, 33333, 33333, -22222, 22222]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 39, 911, -808, 213, 213, 213]], [[-22222, 38, -206, 161, -900, 456798, 53, -901, 911, -808, 213, 213, 213, 30, 53, -22222, 456798]], [[456, 789, 855, 11124, -345, 6114, -876, 789, -999]], [[1, -22, -43, 24, -35, -85, 86, -98, 79, -11, 0, 6, 13, -33332]], [[142, -205, 204, 755, -500, -23, 0, 24, 76832, 76831, -4]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222, -900]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222, 456797]], [[142, 137, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, 142]], [[789, 912, 677, -345, 766, 456798, 226, 8934, 56789, -15, -986, 789, 677]], [[-36, 456, 854, 23413, 853, 11124, -22, 3, 6115, -999, -876, 102, 854, -876, -999, 4, 456]], [[24680, 137, 8934, -500, -321, 76832, -53621, -53621, -500]], [[21, -22222, 39, -22221, -205, -206, 213, 161, -3, 456798, 53, -901, 911, -808, 213, -22222]], [[142, -33333, 137, 203, 8934, -500, -33334, 6115, -23, 76832, -53621, -53621, -500, 142]], [[855, 11124, -345, 6114, -999, -204, -998, 101, 6114, 455, -345]], [[142, -321, 137, 203, 755, -500, -321, -23, 0, 76832, -53621, -321, 755]], [[21, -22222, 456797, 38, -206, 203, -900, 456798, 53, -901, 910, 911, -808, -206]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, 0]], [[456, 854, 11124, -22, -204, 6114, -999, -876, -998, 102, -876, -999, 456]], [[21, 31, 38, -203, -206, 213, 161, -900, 915, 54, -77, -901, -809, -901, 161]], [[456, 854, 11124, 23413, 853, 11124, -22, 3, 6115, -999, -876, 102, 854, -876, -999, 4, 456, 854, 11124]], [[1000, 200, 500, -500, 333, -333, 500, 333]], [[21, -22222, 38, 142, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222, 456797]], [[13579, 24680, 11, -86420, -97531, 9, -8, 7, -7, 5, 0, -4, 3, -2, 1, -97531]], [[21, 31, 38, -204, 912, -206, 213, 161, -900, 915, 54, -77, -901, 911, -808]], [[31, 38, 22, -204, -809, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808, -809]], [[21, -68, 38, -204, -206, 213, 161, -900, 915, 53, 6, -1001, -901, 911, -808, -901, 915, 21]], [[21, 31, 38, 22, -204, -206, 213, 161, 500, 915, 53, 101, -36, -901, 911, -808, 22]], [[142, 137, 203, 8934, -500, -321, -23, 76832, -53621, -53621, -500, 142, 142, 6745, 142, -23, -53621, 142]], [[21, -22222, 456798, -206, 203, 13579, -900, 456798, 53, -899, 13, 911, -16, 53, -900]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222, 456797, 911, 911]], [[1000, -1000, 200, 500, -86420, -500, 333, -333]], [[161, 32, 912, 677, 766, 456798, 226, 56789, -15, -68, -987, -987, 32]], [[142, 137, 8934, -500, -321, 76832, -53621, -53622, -53621, -500]], [[21, -22222, 456797, 38, -206, 203, -900, 456798, 53, 910, 911, -808, 909]], [[142, -999, 203, 86, -500, -321, -23, 76832, -53621, -53621, -53621]], [[142, 137, 202, -321, -23, -53621, -53621, -500, -500]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, 102, 854, 456]], [[0, 9, -85, 874, 6745, 8325, 9999999, 67054, 6745]], [[21, -22222, 38, -206, -807, 213, 161, -900, 456798, 53, -901, 911, -808, 212, 213, 213, 911]], [[789, 912, 677, -345, 456798, 226, 8934, 56789, -15, 24680, -986, 789]], [[142, 137, 203, 8934, 138, -321, -23, 6114, -53621, -500, 142, -500]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 20, 53, 456797, -901, 911]], [[21, -22222, 456796, -206, 203, 13579, -900, 456798, 53, -901, 910, 911, -808, 53, 203]], [[456, 22223, 11124, -345, 6114, -999, -204, 101, 6114]], [[21, 31, 38, 22, -204, -809, -206, 79, -900, 915, 53, -999, -901, -808, 38, 53]], [[456, 854, 23413, 11124, 2, -22, 3, -6, 138, -999, -876, 102, 854, 853, -876, -37, 456, -876]], [[456, 854, 23413, 11124, -22, 6114, -999, -876, 102, 854, -876, -999, 4, 456]], [[21, 30, 38, -204, 213, 161, -900, -3, 915, -77, -901, 911, -808, 213]], [[456, 854, -500, 11124, 226, 11123, -19, 3, 6114, -999, -876, 102, -999]], [[456, 855, 11124, -36, -345, 47, 6114, -999, -204, 101, 6114, 455, -345]], [[0, 9, 455, -129, 874, 6745, -39, 67054, -816508, 856, 856]], [[21, -22222, 456797, 38, -206, 203, 456798, 53, -901, 911, -808]], [[-34, 21, -205, 31, 38, -204, -206, 213, 161, -900, 53, -901, 911, -808, -206]], [[21, 67054, 30, -43, -204, -206, 213, 161, -900, 915, 53, -77, -11111, 911, 21, 52]], [[13579, 24680, -86420, -97531, -8, 7, -6, 5, 0, -809, 3, 11111, 1]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222, -900, 53, -900]], [[21, 67054, 30, -43, -204, -206, 213, 161, -900, 915, 53, -77, -901, 52, 911, -808, 21, 52]], [[789, 912, 677, -345, 766, 456798, 226, 8934, -15, -68, -986, 456798]], [[21, -22222, 456797, 38, -206, 203, 456798, 53, -901, 911, -808, 21]], [[1, -22, -43, 24, -35, -85, 86, 13, -98, 79, -11, 0, 6, 13, -33332]], [[456, 854, 43, 23413, 11124, -22, 3, -6, -999, -876, 102, 854, -876, 854]], [[456, 854, 23413, 853, -23, 11124, -22, 3, 6114, -999, -876, 102, 854, -876, -999, 4, 456]], [[-86420, 137, -321, -23, -53621, -53621, -500]], [[456, 854, 23413, 11124, -22, 6114, -999, -876, 102, 854, -876, -999, 4, 456, 102]], [[456, 854, 23413, 852, 11124, -22, 3, -6, -876, 102, 199, -876]], [[852, 21, 31, 853, 22, 31, -204, -809, -206, 213, -34, 161, -900, -899, 6114, 101, -901, 911, -808, 916, -900, 916]], [[789, 912, 677, -345, 766, 456798, 226, 8934, 56789, -15, 789, 677]], [[21, 31, 38, -205, 213, 161, -900, -200, 53, -901, 102, -808]], [[24680, 21, 31, 38, -204, -206, 213, 161, -900, 915, 53, 39, 7, -901, 911, -808, -901, -900]], [[161, 912, 8324, 677, 766, 456798, 226, 8934, 56789, -15, -68, -987, -97530]], [[21, 39, -204, -206, -17, 213, 161, -900, 915, 53, -77, -901, 49]], [[21, 31, 38, 22, -204, 911, -809, -206, -900, 915, 53, -999, -901, 911, -807, -808, 38]], [[456, -344, 855, 11124, -36, -345, 47, 6114, -999, -204, 101, 6114, 455, -345]], [[-97531, -33333, -22222, 6745, -33334, 22222, 33333, 914, 33333, -22222, -33333, -22222]], [[456, 854, 23413, 11124, -22, 3, -999, -999, -876, 102, -876, -999]], [[456, 854, 23413, 855, 11124, 2, -22, 3, -6, -999, 102, 854, -37, 456, 854]], [[21, 31, 38, 54, 22, -204, -206, 213, 161, -900, 915, 53, 101, -36, -901, 911, -11111, -808, 22, -36]], [[789, 912, 677, -345, 766, 456798, 456796, 226, 8934, 56789, -15, -68, -986]], [[13579, 24680, -86420, -97531, -8, 7, -6, 5, 0, -4, 3, 102, 11111, 1]], [[21, -22222, 456797, 3, -206, 203, -900, 456798, 53, -901, 910, 911, -808, -206]], [[21, 31, 38, 22, -204, -206, 213, 161, -900, 915, 53, 53, 914, -77, -901, 911, -206]], [[1000, 999, -1000, 200, 500, -332, -86420, 333, -333]], [[137, -321, -53621, -53621, -500]], [[-205, 21, -22222, 38, -206, 203, -900, 456798, 53, -900, 911, -808]], [[24680, 137, 8934, -500, -321, 8325, -53621, -53621, -500]], [[789, 912, 677, -345, 766, 456798, 226, 8934, 56789, -15, -68, -986, 789, -986]], [[13579, 24680, -86420, -97531, 9, -8, 7, -6, 5, 0, -4, 3, -2, 45, 0, 7]], [[142, -205, 204, 755, -500, -23, 0, 24, 76832, -16, -4]], [[21, -22222, 38, -206, 213, 23412, -808, -900, 456798, -901, 911, -808, -53622, 213]], [[1, 2, 3, 4, 5, 6, 7, -53622, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 46, 47, 48, 49, 50]], [[21, -22222, -206, 213, 161, -900, 456798, 53, 31, 911, -808]], [[142, -320, -321, 137, 203, 755, -500, -321, -23, 0, 76832, -53621, -321, 755]], [[-97531, -33333, -22222, -11111, 11111, -53621, 33333, 100000, 33333, 11111, -53621]], [[-346, 855, 23412, 11124, -345, 6114, -999, -877, 101, 6114, -346]], [[21, -22222, 38, -206, 203, 161, -900, 456799, 53, -901, 911, -808, -808]], [[-22222, 38, -206, 203, 22223, -900, 9, 53, -901, 911, -808]], [[-97531, -33333, -11111, 11111, -53621, 33333, 100000, 33333]], [[456, 855, 23413, 11124, 6114, -876, -1000, -346, 6114, 6114]], [[855, 11124, 11124, -345, 6114, -999, -876, 789, -346, -999, -999]], [[1, 21, -22222, 456798, -206, 203, 13579, -900, 456798, 53, -899, 13, 911, -16, 53, -900]], [[-97531, -33333, -22222, 6745, 22222, 33333, -18, 33333, 6745]], [[13579, -86420, -97531, 9, -8, 7, -6, 5, 0, -4, 3, -203, -2, 45, 0]], [[456, 43, 23413, -22, 3, -6, 455, -876, 102, 854, -876, 853, 456, 43]], [[456, 855, 11124, -36, -345, 47, 6114, -999, -204, 101, 6114, 455, -345, 855]], [[20, -22222, 39, -206, 213, 161, -3, 456798, 53, -901, 911, -808, 213]], [[21, -22222, 38, -206, -807, 213, 161, -900, 456798, 53, 911, -808, 212, 213, 213, 911]], [[-33332, -22222, -11111, 11111, 22222, 755, 33333, 22222, 100000]], [[21, 67054, 30, -204, -206, 213, 161, -900, 915, 53, -77, -901, -39, 52, -875, 911, -808, 21, 52]], [[21, 38, -206, 213, 23412, -808, -901, 456798, -901, 911, -808, -53622, 213]], [[-97531, -33333, -22222, 6745, 11112, 22222, 33333, 914, 33333, -22222, -33333, -22222, 33333]], [[21, 67054, -986, 30, -204, -206, 213, 161, -900, 915, 53, -77, -901, -39, 51, -875, 911, -808, 21, 52]], [[21, -22222, 38, -205, 213, 161, -900, 456798, 53, -901, 911, 213, -22222, -900, 53, -900, 213]], [[21, 31, 38, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, -901, -808]], [[456, 855, -1001, 23413, 11124, 6114, -877, -1000, -346, 6113, 6114]], [[21, -22222, 39, -206, 213, 161, 456797, -3, 456798, 53, -901, 911, -808, 213, 21]], [[1, -22, -43, 24, -35, -85, 86, 13, -98, 79, 56789, -11, 0, 6, 13, -33333, -33332, -98]], [[13579, -86420, -97531, 9, 30, -8, 7, -6, 5, 0, -4, 3, -203, -2, 45, 0, 22, -4]], [[161, 43, 912, 677, 766, 456798, 226, 56789, -15, -68, -987, -987]], [[-15, 854, 23412, 11124, -22, 3, 6114, -999, -876, 102, 3, -999]], [[142, 137, 203, 8934, -321, 8933, -23, -14, -53621, -53621, -22, -500]], [[-97531, -33333, -22222, -11111, 11111, -22223, 33334, 100000, 33333]], [[21, 30, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 911]], [[-33333, -22222, 22223, 38, 11111, 22222, 33333, 100000, 22222, 22222, 100001, 11111]], [[21, -22222, 456797, -206, 203, -900, 456798, 53, -901, 910, -206, -808]], [[21, 31, 853, 22, 31, -204, -809, 30, -206, 213, 161, -900, 915, 53, 101, -901, 911, -808, 916, -900, -809]], [[-33333, -22222, 22223, -11111, 22222, 33333, 100000, 22222, 22222]], [[21, -22222, 456797, 38, -206, 203, -900, 456798, -901, 910, 911, -808, 456797, -808]], [[789, 912, 677, -345, 456798, 226, 8934, 56789, -15, 24680, -986, 789, 677]], [[21, -22222, 456797, 38, -207, 203, -900, 456798, 53, -901, 9999999, 911, -808]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 39, 911, -808, 37, 213, 213, 213, -808]], [[789, 912, 677, 766, 456798, 226, 8934, 56789, -15, -20, -986, 789, 677]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 212, 213, 213, 213]], [[142, 137, 203, 8933, -321, -23, -53621, -53621, -500, -53621, 203]], [[-97531, -33333, -22222, 6745, 11111, 6745, 33333, 33333, -22222, 22222]], [[456, 854, 23413, 11124, -22, 3, 6114, -999, -14, 102, 456]], [[-97531, -33333, -22222, -11111, 11111, 22222, 33333, 100000, 33334]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, 31, 911, -808, -22222]], [[-11111, 33332, -22222, -11111, 11111, 22222, 33333, 100000, 22222]], [[-97531, -33333, -22222, 11111, 22222, 33333, 100000, 100000]], [[142, 137, 203, 8934, -500, -321, -23, 8935, 76832, -53621, -53621, -500, 142, 142, -53621, -23, -500]], [[-97531, -33333, 6745, 11111, -97532, 22222, 457, -5, 33333, -18, 33333, -22222, 6745]], [[456, 855, 23413, 11124, -345, 6114, -999, -875, 101, 101]], [[142, 8934, -500, -321, 76832, -53621, -53622, -53621, -500]], [[1, -43, 24, -35, -85, 86, -98, 79, -11, 0, 6, 13, -33332, 86]], [[456, 854, 23413, 11124, 2, -22, 3, -20, -6, -999, -876, 102, 854, 853, -876, -37, 456]], [[-97531, -22223, -33333, -22222, -11111, -22222, 11111, -53621, 33333, 100000, -346, 33333, 11111, -53621]], [[21, -22222, 38, -205, 213, -900, 456798, 53, -901, 910, 213, -22222, -900, 53, -900, 213]], [[-346, 855, 23412, 11124, -345, 6114, 33334, -877, 101, 6114]], [[456, -344, 855, 11124, -345, 47, 6114, -999, -204, 101, 6114, 455, -345]], [[21, 31, 38, -204, -206, 161, -900, 915, 53, -77, 910, -901, 911, -808, -900, 910, 161]], [[-999, 456, 854, 23412, 11124, -22, 853, 3, 6114, -999, -876, 102, 3, 456]], [[21, 31, -40, 22, -204, -206, 21, 213, 161, -900, 915, 53, 37, -901, 911, 911, -204, 456797, -40, 22, 22]], [[-33333, -11111, 11111, 22222, 33333, 100000, -22222, -22222]], [[142, 137, 203, 755, 44, -321, -33, 27, 76832]], [[-999, 456, 854, 23412, 11124, -22, 4, 6114, -999, -876, 102, 3, 11124]], [[456, 854, 23413, 11124, -22, 678, 3, 6114, -999, -876, 102, 854, -876]], [[21, -22222, 38, -206, 213, 161, -900, 456798, 53, -901, 911, -808, 212, 213, 213, 213, 21, 911]], [[-97531, -33333, -22222, -11111, 11111, -53621, 33334, 100000]], [[0]], [[-12, -3, 0, 35, 998]], [[111, 222, 333, 444]], [[1, 2, 3, 4, 5, 6, 7, 8, 9]], [[-99999999, 99999999]], [[111111111, -111111111, 222222222, -222222222, 333333333, -333333333, 444444444, -444444444]], [[1, 10, 100]], [[-1, -10, -100]], [[1, -1, 10, -10, 100, -100]], [[2147483647, 2147483646, -2147483648, -2147483647]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, 21]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21]], [[1, -22, -43, 24, -35, -57, -98, 79, -11, 0, 6, 13, -38, 0]], [[21, 30, 38, -204, -206, 213, 912, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21]], [[1, -22, -43, 24, -35, -57, -98, 79, -11, 0, 6, -38, 0]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -902, 911, -68, -808, 21, 915]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, -808]], [[-33333, -22222, -11111, 11111, 11111, 86, 22222, 33333, 100000]], [[-33334, -22222, -11111, 11111, 22222, 33333, 100000]], [[137, 203, 755, -500, -345, 28, -23, -23, 0, 76832, -53621]], [[1, -22, -43, 24, -35, -98, 79, -11, 0, 6, -53621, -38, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 29]], [[456, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, -345]], [[21, 30, 38, -204, -206, 213, 912, 161, -900, 915, -77, -901, 911, -68, -808, 21, 912]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 29]], [[456, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, 766, 766]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, 911, -68, -808, 21]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 78, 0, 6, 13, -38]], [[1, -22, -43, 24, -35, -98, -11, 0, -86420, -53621, -38, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14]], [[1, -22, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 6, 13, -38]], [[1, -22, -43, -15, 24, -35, -57, -98, 79, -11, -35, 0, 6, 13, -38, 0]], [[21, -77, 30, 38, -204, -206, 213, 912, 161, -900, 915, -77, -901, 911, -68, -808, 21, 912, 911, 21]], [[21, 30, 38, -204, 54, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[-33333, -22222, -11111, 22222, 11111, 86, 22222, 33333, 100000]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, -345]], [[-33333, -22222, 22222, 11111, 86, 22222, 33333, 100000]], [[-33333, -22222, -11111, 11111, -999, 33333, 100000, 11111]], [[1, -22, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, -11]], [[0, 9, -85, -129, 874, 6745, 8325, 67054, -816508, 9999999, -85]], [[-33334, -22222, -37, -11111, 11111, 22222, 33333, -53621]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, -11, -98]], [[1, -22, -43, 24, -98, 79, -11, 0, 6, -53621, -38, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[0, 9, -85, -129, 874, 6745, 8325, 67054, -816508, 9999999, -129]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, -21, 22, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30]], [[21, 30, 38, 500, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[-33333, -22222, -11111, 11111, 11111, 86, 22222, 33333, 100000, 33333, 100000]], [[1000, -1000, 200, 333, -200, 500, -500, 333, -333]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 46, 47, 48, 49, 50, 29]], [[24680, -86420, -97531, 9, -8, 7, -6, 5, 0, -4, 3, -2, 1]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -68, -808, 21]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, -902, 911, 2, -68, -808, 21, 915]], [[789, 912, 677, 766, 456798, 226, 8934, 56789, -15, -68, 8934]], [[1, -22, -43, 24, -35, 11111, -98, 79, -11, 0, 6, -38, 0]], [[21, 29, 38, -204, -206, 213, 161, 456, -900, 915, 911, 2, -68, -808, 21, 915]], [[789, 912, 677, 766, 456798, -33334, 8934, 56789, -15, -68, 8934]], [[-33334, -22222, -37, -11111, 11111, 22222, 33333, -53621, -22222, -22222]], [[141, 137, 203, 755, -500, -321, -23, 0, 76832, -53621, 76832]], [[1, -22, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 6, 13, -38, 24]], [[21, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 21]], [[21, 38, -204, -206, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 21]], [[-33334, -22222, -37, -11111, 11111, 22222, 33333, -53621, -53621]], [[142, 137, 203, 755, -500, -321, -23, 0, 138, 76832, -53621, -23]], [[1, -22, -43, -35, -57, -98, 79, -11, 0, 6, 13, -38, 0]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 161, -902, 911, -68, -808, 21, 915]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, -21, 22, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30]], [[789, 912, 677, -86420, 456798, 226, 8934, 56789, -15, -68, 8934]], [[1, -22, -43, 24, -98, 79, -11, 0, 6, -53621, -38, 0, 24]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, -37]], [[23, 1, -22, -43, -98, 79, -11, 0, 6, -53621, -38, 0, 24]], [[1, -22, -43, 24, -35, 11111, -98, 79, -11, 0, 6, -38, 0, -98]], [[-22, -43, 24, -98, 79, -11, 0, 6, -53621, -38, 0, 24]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, 28, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 29]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -808, 21, 915, 915]], [[1, -22, -43, 24, -35, -57, -98, 79, -11, 0, 6, -38, 0, -43]], [[457, 855, 23413, 11124, -22, -345, 6114, -999, -876, 101]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -808, 21, 915, 915, -68, -900]], [[-33334, -37, -11111, 11111, 22222, 33333, -53622, -22222, -22222]], [[1, -22, -43, 24, -98, 79, -11, 0, -53621, -38, 0]], [[-22, -43, 24, -98, 79, -11, 0, -53621, -38, 0, 24]], [[456, 855, 11124, -22, -345, 6114, -999, -876, 101]], [[24680, -86420, -97531, 9, -8, 7, -6, 0, -4, 3, -2, 1]], [[24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 46, 47, 48, 49, 50, 29]], [[13, 1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, 0]], [[-33334, -22222, -37, -11111, 11111, 22223, -53621, -53621]], [[-33333, -11111, 11111, 11111, 86, 22222, 100000]], [[24680, -86420, -97531, 9, -8, 7, -6, 5, 0, -36, 3, -2, 1]], [[1, -22, -43, 24, -35, -57, 87, -98, 79, -11, 78, 0, 6, 13, -38]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 161, -902, 911, -68, -808, 21, 915, 915]], [[-33333, -22222, -11111, -57, 11111, 11111, 86, 22222, 11110, 33333, 100000, 100000, 100000]], [[24680, -86420, -97531, 9, -8, 7, -6, 0, 912, 3, -2, 1]], [[21, 38, -204, -206, 213, 161, -900, 915, 53, -77, 911, -68, -808, 21, 21]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, 53, -77, -901, 911, -808, -808]], [[456, 855, -22, -345, 6114, -999, -876, 101, -999]], [[1, 2, 3, 4, 5, 6, 7, 8, 47, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 44, 13, 46, 47, 48, 49, 50, 29]], [[1000, -1000, 200, 333, -200, 500, -500, 333, -333, 200]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, -901]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 28, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[21, 30, 37, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21]], [[1, -22, -43, 24, -35, 11111, -98, 79, -11, -41, 6, -38, 0, -98]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, 13, -21, 23, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30]], [[789, 912, 677, -86420, 456798, 226, 8934, 788, 56789, -15, -68, 8934]], [[21, 30, 38, -204, -206, 213, 161, -900, 333, 53, -77, 911, -68, -808, 21, -206]], [[24680, -86420, -97531, 9, -8, 7, -6, 0, -4, 3, -2, 1, -2]], [[0, 9, -85, -129, 915, 6745, 8325, 67054, -816508, 9999999]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -808, 21, 915, 915, -68, -900, 2]], [[1, -22, -43, 24, -98, 79, -11, 0, -53621, -38, -38, 0]], [[-33333, -22222, -11111, 11111, 11111, 76832, 22222, 33333, 100000, 33333, 100000]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832, -86420]], [[21, 30, 915, 38, -204, -206, 213, 161, -900, 915, 161, -902, 911, -68, -808, 21, 915, 915]], [[789, 912, 677, -11111, 766, 456798, -33334, 8934, 56789, -15, -68, 8934]], [[-86420, -97531, 9, -8, 7, -6, 0, -4, 3, -2, -2]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 28, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, -500, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 46, 47, 48, 49, 50, 29]], [[21, 30, 915, 38, -204, -206, 213, 161, -900, 915, 161, -902, 911, -68, -808, 21, 915]], [[-86420, -97531, 9, -8, 7, -6, 137, -4, 3, -2, -2, -86420]], [[24680, -86420, -97531, -8, 7, -6, 0, -4, 3, -2, 1, -2]], [[1, 53, -43, 24, -98, 30, 79, -11, 0, 6, -53621, -38, -2]], [[-33334, -22222, -11111, 11111, 22222, 33333]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -41, 21, 915, 915]], [[1, 2, 3, 4, 5, 6, 7, 8, 788, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, 13, -21, 23, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30]], [[1, -22, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 7, 13, -38]], [[1, -22, -43, -35, -57, -98, 79, -11, 0, 0, 6, 13, -38, 0]], [[1, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 6, 13, -38, 24]], [[-33334, -22222, -37, -11111, 11111, 22222, 33333, -53621, -22222]], [[855, -22222, -11111, 11111, 22222, 33333, 100000]], [[1, 2, 3, 4, 5, 6, 23413, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30, -33]], [[24680, -86420, -97531, 9, -7, 7, -6, 0, 912, 3, -2, 1]], [[-22, -43, 24, -98, 79, -11, 0, -53622, -38, 0, -42, 24]], [[21, 38, -204, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 21]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832, -86420, 203, 137]], [[456, 11124, -22, 677, 6114, -999, -876, 101]], [[789, 912, 677, 766, 456798, -33334, 8934, 56789, -15, -97531, 8934]], [[21, 30, 38, -204, -207, -900, 915, 53, -77, -901, 911, -808]], [[21, 30, 53, 38, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, 79, 21, 915, 915]], [[0, 54, -85, -129, 874, 6745, 8325, 67054, -816508, 9999999, -86]], [[789, 912, 915, 677, -86420, 456798, 227, 8934, 788, 56789, -15, -68, 8934]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, -11, 86]], [[1, -22, -43, 24, -98, 79, -11, 0, 6, -53621, 28, 0]], [[1, 2, 3, 44, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 4, 29]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832, -53621, -500, 31, 0]], [[142, 137, 203, 755, -321, -23, 0, 76832, -53621, -500, 31, 0]], [[0, 54, -129, 874, 6745, 8325, 67054, -816508, 9999999, -86]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -41, 42, 43, 44, 46, 47, 48, 49, 50, 29]], [[1, -22, -43, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 7, 13, 2, -38]], [[1, -22, -43, -86420, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 6, 13, -38, 24]], [[-33333, -22222, -11111, 11111, 11111, 86, 86, 22222, 33333, 100000, 33333, 28, 100000]], [[142, 137, 203, 755, -500, -321, -23, 0, -53621]], [[0, 54, -129, 874, 6745, 67054, -816508, 9999999, -86]], [[141, 137, 203, 755, -500, -321, -23, 0, 76832, -53621, 76832, 203]], [[1, -22, -13, -35, -57, 86, -98, 79, -11, 1000, 6, 13, -38]], [[21, 30, 38, -204, -206, 213, 161, -900, 53, -77, -901, 911, -68, -808, 21]], [[1, -22, -43, -53620, 24, -98, 79, -11, 0, 6, -53621, -38, 0, 24]], [[1, -22, -43, 24, -35, 11111, -97, 79, -11, -41, 6, -38, 0, -98, 0]], [[-33333, -22222, -11111, 11111, 22222, 33333]], [[141, 137, 203, -207, -500, -321, -23, 0, 76832, -53621, 76832, 203]], [[789, 912, 677, 766, 456798, 226, 8934, 677, 56789, -15, -68, 8934]], [[21, 30, 38, -204, 54, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 21]], [[21, 30, 915, 38, -204, -206, 213, 161, -900, 915, 161, -902, 911, 200, -808, 21, 915, 915]], [[1, -22, -13, -35, -57, 87, -98, 79, -11, 1000, 6, 13, -38]], [[21, 29, 38, 22, -204, -206, 213, 161, 456, -900, 915, 911, 2, -68, -808, 21, 915]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, -345, -345]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, 24, -345]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, -40, 2, -68, -808, 21, 915, 915, -68, -900, 21]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, -11, -98, 79]], [[21, 30, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -808, 21, 915, 915, -68, -900, 2, 911, -204]], [[-86420, -97531, 9, -8, 7, -6, 0, -4, 3, -2, -2, -97531, 3]], [[13, 1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, 0, -11]], [[-33333, -22222, -11111, 11111, -999, 33333, 100000, 11111, 11111]], [[21, 38, -204, -206, 213, 161, -900, 915, 53, -77, 5, -901, 911, -68, -808, 21, 21]], [[24680, -86420, -97531, 9, -5, -7, 7, -6, 0, 912, 3, -2, 1]], [[855, -11111, 11111, 22222, 33333, 100000]], [[-33334, -22222, -37, -11111, 11111, 22222, 33333, -53621, -53621, -53621, -53621]], [[21, 30, 53, 38, -204, -206, 213, 500, 161, -900, -902, 911, 2, -68, 79, 21, 915, 915]], [[-33333, -22222, -11111, 755, -22223, 22222, 33333]], [[21, 29, 38, -204, -206, 213, 161, 456, -900, 915, 911, 2, -68, -808, 21, 915, 915]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 28, 28, 29, 30, 31, -32, -33, -34, 26, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[-33333, -22222, -11111, 11111, 11111, 76832, 22222, 33333, 100000, 33333, 100000, -22222]], [[-33333, -22222, -11111, 22222, 33333, 100000, 33333]], [[1, -22, -43, 24, 79, -11, 0, 6, -53621, 28, 0]], [[21, 30, 915, 38, -204, -206, 213, 161, -900, 915, 161, -902, 911, -68, -808, 21, 915, 30]], [[21, 30, 6114, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -808, -901]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, 13, -21, 23, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30, 42]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 161, -902, 910, -68, -808, 21, 915, 915]], [[141, 137, 203, -207, -500, -321, -40, -23, 0, 76832, -53622, 76832, 203, -207]], [[1, 2, 3, 4, 5, 6, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 28, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, -12]], [[142, 137, -200, -501, 755, -500, -321, -23, 0, 76831, -86420, -321]], [[1, 2, 3, 44, -876, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 4, 29]], [[30, 38, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -808, 21, 3, 915, 915, -68, -900]], [[1, -22, -43, 24, -35, -57, -36, 86, -98, 79, -11, 78, 0, 7, 13, 1, -38]], [[1, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 6, 13, -38, 24]], [[1, 2, 3, 44, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -17, 50, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 4, 29]], [[1, -22, -808, -35, -57, -98, 79, -11, 0, 6, 13, -38, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, 13, -21, 23, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -11, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30, -21]], [[21, 29, -32, -204, -206, 213, 161, 456, -900, 915, 911, 2, -68, -808, 21, 915, 915]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 28, 28, 29, 30, 31, -32, -33, -34, 26, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 49, 49, 50, -14, 42, 11]], [[1, -22, -43, -53622, -53620, 24, -98, 79, -11, 0, 6, -53621, -38, 0, 24]], [[-22, -43, 24, -98, 79, -11, 0, -53622, -38, 0, -42, 24, -53622]], [[141, 137, 11111, 203, -207, -500, 0, 141, 76832, -53621, 76832, 203]], [[-33334, -22222, -37, -11111, 11111, 22222, 33333, -53621, -22222, -22222, -22222]], [[13, 1, -22, -43, 24, -35, -57, 85, -98, 79, -11, 0, 6, 13, -38, 0, 1]], [[21, 30, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -808, 21, 915, 915, -68, -900, 2, 788, -204]], [[1, 2, 3, 4, 5, 6, 7, 8, 47, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 44, 13, 46, 47, 48, 49, 50, 29]], [[855, -22222, -11111, 11111, 22222, 33333, 22222, -11111]], [[21, 30, 915, 38, -204, -206, 213, 161, -900, 914, 161, -902, 911, -68, -808, 21, 915, 915]], [[912, 677, -11111, 766, 456798, -33334, 8934, 56789, -15, -68, 8934]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, -21, 22, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30, 30]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, 24, -345, 6114]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, 24, 8, 6114]], [[21, 30, 53, -204, -206, 213, 500, 161, -900, -902, 2, -68, 79, 21, 915, 915, -900]], [[142, 137, 203, -500, -321, -23, 0, 76832, -53621, 137]], [[21, 30, 53, -204, -206, 213, 500, 161, -900, -902, 2, -68, 79, 21, 915, 915, -900, -900]], [[0, 10, -85, -129, 874, 6745, 8325, 67054, -816508, 9999999, -129, 9]], [[456, 855, 11124, -22, -345, -41, 6114, -999, -876, 101]], [[-86420, -97531, 9, -8, 7, -6, 0, -4, 3, -2, -2, -2]], [[137, -36, 203, 755, -501, -500, -345, 28, -23, -23, 0, 76832, -53621]], [[1, -22, -43, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 7, 13, 2, -21]], [[21, 30, 53, -204, -206, 213, 500, 161, -900, -902, 2, -68, 79, 20, 915, 915]], [[21, 53, -204, 213, 500, 161, -900, -902, 2, -68, 79, 21, 915, 915, -900]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[-33333, -22222, -11111, -999, 11111, -999, 33333, 100000, 11111, 11111]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, -21, 22, 23, 24, 25, 26, 27, -17, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30, 30]], [[789, 912, 677, 766, 456798, -33334, 8934, 56789, 765, -15, -68, 8934]], [[21, 30, 38, 27, -204, -206, 213, 161, -900, 915, 161, -902, 910, -68, -808, -808, 21, 915, 915]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -22, -15, -16, -17, -18, -19, -20, -21, 28, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[1, -22, -13, -35, -57, 86, -98, 79, -11, 1000, 6, 13, -38, -13]], [[1, -22, -35, -57, 85, 86, -98, 79, -11, 0, 6, 13, -38]], [[-33333, -22222, -11111, 11111, 11111, 86, 22222, 22222, 33333, 100000]], [[25, 1, -22, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 6, -37, 13, -38, 24]], [[1, 2, 3, 44, -876, 4, 457, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 4, 29]], [[1, 2, 3, 44, -876, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -53621, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 4, 29]], [[1, 25, -22, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 7, 13, -38, 7]], [[142, 137, 203, -500, -321, -23, 0, 76832, -86420]], [[0, 9, -85, -129, 874, 8, 6745, 8325, 67054, 9999999, -85]], [[24680, -86420, -97531, 9, -204, -8, 7, -6, -4, 3, 1]], [[1, 200, -43, 24, -98, 79, -11, 0, 6, 28, 0, -98]], [[21, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 21, 915, 38]], [[13, 1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, 0, -11, -11]], [[1000, -1000, 200, -200, 500, -500, 333, -333, -333]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, 79, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 29, 23]], [[21, 29, -32, -203, -206, 213, 161, 456, -900, 915, 911, 2, -68, -808, 21, 915]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, -40, 2, -68, -808, 21, 915, 915, -68, -900, 21, 213]], [[0, 9, 875, -85, -129, 874, 8, 6745, 8325, 67054, 9999999, -85]], [[21, 30, 161, 38, -204, -206, 213, 912, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21]], [[-33333, -11111, -22222, -11111, 11111, 11111, 86, 22222, 33333, 100000, 33333, 100000]], [[21, 30, 53, -204, -206, 213, 500, 161, -900, 2, -68, 79, 21, 915, 915, -900, 2, 21]], [[25, 1, -22, -43, 24, -35, -22, -57, 86, -98, 3, 79, -11, 78, 0, 6, -37, 13, -38, 24]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -33333, -901, 911, -68, -808, 21]], [[137, 203, -500, -345, 28, -23, -23, 0, 76832, -53621, -500]], [[1, -22, -43, 24, -35, -98, -11, 0, -86420, -53621, 766, 0]], [[789, 912, 677, 456798, 226, 8934, 56789, -15, -68, 8934]], [[-22, -43, 24, -98, 79, -11, 0, -53621, -38, 0]], [[21, 30, 20, 38, -204, -206, 213, 161, -901, 915, 161, -902, 911, -68, -808, 21, 915]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, -901, -11111, -68, -808, -902, 21, -901]], [[1, -22, -43, 24, -35, -57, -98, 79, -11, -1, 6, 13, -38, 0]], [[37, -22, 24, -98, 79, -11, 0, -53621, -38, -38, 1]], [[-33333, -22222, -11111, 11111, 11111, 76832, 22222, -53620, 33333, 100000, 33333, 100000]], [[0, 9, -85, -129, 8324, 874, 6745, 8325, 67054, -816508, 9999999]], [[-33333, -22222, -11111, 11111, 22222, 33333, -11111, 100000, 100000]], [[21, 30, 38, -204, -207, -900, 915, 53, -77, -901, 911, -808, 53]], [[21, 30, 38, -204, -206, 76831, 161, -900, 915, 161, -902, 910, -68, -808, 21, 915, 915]], [[-6, 1, -43, 24, -98, 79, -11, 0, -53621, -38, -38, 0]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -11111, -20, -21, 44, 23, 23, 24, 25, 26, -500, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 46, 47, 48, 49, 50, 29]], [[21, 30, 53, -204, -206, 500, 161, -900, 2, -68, 79, 21, 915, 915, -900, 2, 21]], [[21, 30, 20, 38, -204, -206, 213, 161, -901, 915, 161, -902, 911, -68, -808, 21, 915, 21]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[874, 0, 54, -129, 874, 6745, 8325, 67054, -816508, -86]], [[-33333, -22222, -11111, 22222, 11111, 86, 22222, 33333, 100000, 86]], [[1, -22, -43, 24, -35, -57, 86, -57, -98, 79, -11, 0, 6, 13, -38, -11]], [[21, 30, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -808, 21, 915, -68, -900, 2, 788, -204]], [[21, 30, 38, 500, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 161]], [[21, 915, 38, -204, -206, 213, 161, -900, 914, 161, -902, 911, -68, -808, 21, 915, 915]], [[13, 1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, 0, 13, 86]], [[30, 38, 500, -206, 213, 161, 8324, -900, 915, 53, -77, -901, 911, -68, -808, 21, 161, 911]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 28, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 48, 49, 50, -14, 42]], [[1000, -1000, 333, -200, 500, -500, 333, -333, 200]], [[21, 30, 38, 500, -206, 213, 161, -900, 915, 53, -77, 911, -68, -808, 49, 21]], [[141, 137, 203, -207, -500, -321, -808, -23, 0, 76832, -53621, 76832, 203]], [[99999, -33333, -11111, 755, -999, 33333, 100000, 11111, 100000]], [[1, -22, -43, 24, -35, -57, -36, 86, -98, 79, 0, -11, 78, 0, 7, 13, 1, -38]], [[21, 30, 53, -206, 213, 500, 161, -900, -902, 2, 79, 21, 915, 915, -900]], [[21, 30, 20, 38, -204, -206, 213, 161, -901, 915, 161, -902, 911, -68, -808, 21, 915, 38]], [[137, 203, -1, -500, -345, 28, -23, 200, -23, 0, 76832, -500]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 28, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, -21]], [[1, -22, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 7, 13, 2, -21]], [[21, 29, 38, 22, -204, 213, 161, 456, -900, 915, 911, 2, -68, -808, 21, 915]], [[1, -22, -77, -43, 24, -35, -57, 86, -57, -98, 79, -11, 0, 6, 13, -38, -11, 86]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, 28, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 29]], [[21, 30, 53, -204, -206, 213, 500, 161, -900, -902, 2, -68, 79, 21, 915, 915, -900, -902]], [[1, -22, -43, 24, -35, 86, -98, 79, -11, 0, 6, 13, -38, -11]], [[13, 1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, 0, 13, 86, -35]], [[21, 38, -204, -206, 213, 161, -900, 914, 161, -902, 911, -68, -808, 21, 915, 915, 161]], [[-33333, -11111, -22222, -11111, 11111, 86, 22222, 33333, 100000, 33333, 100000]], [[21, 29, 213, 38, -204, -206, 213, 161, -900, 915, 911, 2, -68, -808, 21, 915, 915]], [[21, 30, 53, -204, -206, 213, 500, 855, -900, -902, 2, -68, 79, 21, 915, 915, 20, -900, -902]], [[1, 2, 3, 4, 5, 6, 7, 8, 47, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, 49, -36, -37, -38, -39, -40, -41, 42, 44, 13, 46, 47, 48, 49, 50, 29, -36]], [[-33333, -22222, -11111, 11110, -22223, 22222, 33333]], [[1, -22, -43, 25, -35, -57, 86, -98, 79, 788, -11, 0, 6, 13, -38, -11]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, 28, -13, -14, -15, -16, -17, -18, -20, -21, 22, -34, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 29, 26]], [[21, 38, -204, -206, 213, 161, -900, 333, 53, -77, 911, -68, -808, 21, -206]], [[-86420, -97531, 9, -8, 7, -6, 0, -37, 3, -2, -2, -97531, 3]], [[789, 912, 677, 766, 456798, 226, 8934, 789, 56789, -15, -68, -987, 912]], [[1000, -1000, 200, 333, 334, -200, 500, -500, 333, -333]], [[1, -22, 11111, -43, 24, -35, -57, -36, 86, -98, 79, -11, 78, 0, 7, 13, 1, -38, -98]], [[1, -22, 24, -35, -98, -11, 0, -86420, -53621, -38, 0]], [[1, 2, 3, 44, -876, 4, 457, 5, 6, -902, 8, 9, 10, 141, -12, -13, -14, -15, -17, -18, -19, -21, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 4, 29, 30]], [[456, 855, 11124, -22, -344, -345, 6114, -999, -876, 101, -345]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, -12, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 49, -33333, 47, 48, 49, 50, -14, 42]], [[21, 30, 38, 500, -206, 213, 161, -900, 915, 53, -78, 911, -68, -808, 49, 21, 49]], [[1, 2, 3, 44, -876, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -17, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -53621, -40, -41, 42, 43, 44, 45, 46, -876, 47, 48, 49, 50, 4, 29]], [[21, 30, 53, -206, 213, 500, 161, -900, -902, 2, 2, 79, 21, 915, 915, -900]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 53, -77, 911, -68, -808, 21, -901]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 161, -902, 911, -68, -808, 21, 915, 915, 213]], [[1, -22, -43, 24, -35, -57, 86, -98, 3, 79, -11, 78, 0, 6, 23, 13, -38, 24]], [[789, 912, 334, 915, 677, -86420, 456798, 227, 8934, 788, 56789, -15, -68, 8934]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -15, -17, -18, -19, 2, 13, -21, 23, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42, 30]], [[1, -22, -77, -43, -35, -57, 86, -57, -200, 79, -11, 0, 6, 37, 13, -7, -11, 86]], [[1, -22, -43, 24, -35, -98, -11, 0, -86420, -53621, -38, 0, 0]], [[1, -22, 11111, 24, -35, -57, -36, 86, 79, -11, 78, 0, 7, 13, 1, -38, -98]], [[-33333, -22222, -11111, 11111, 11111, 86, 86, 33333, 100000, 33333, 28, 100000]], [[21, 30, 38, -204, 54, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 21, 911]], [[142, 137, 203, 755, -500, -321, -23, 0, 76832, -53621, -500, 31]], [[-22, -43, 24, -98, 79, -11, 0, -53621, -38, 1, 0]], [[203, -500, -206, 28, -23, -23, 0, 76832, -57, -500, -500]], [[21, 30, 915, 38, -204, -206, 213, -42, 161, -900, 914, 161, -902, 911, -68, -808, 21, 915, 915, 38]], [[21, 30, 20, 38, -204, -206, 213, 161, -901, 915, 161, -902, 911, -68, -809, 21, 915, 21]], [[1, -22, -43, 24, -98, 79, -11, 0, -15, -38, -38, 0]], [[13, 1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, -33, 6, 13, -38, 0, 13, 0, 86, -35]], [[6114, 53, -43, 24, -98, -999, 30, 79, -11, 0, -53621, -38, -2]], [[-33333, -22222, -11111, -57, 11111, 11111, 86, 22222, 11110, 33333, 100000, 100000, 100000, 100000]], [[21, 29, 38, -204, -206, 213, 161, 456, -900, 915, 911, 2, -68, -808, 21, -206, 915]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -33, -19, -20, -21, 22, 23, 24, 25, 26, 28, 28, 29, 30, 31, -32, -33, -34, 26, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 49, 49, 50, -14, 42, 11]], [[1, -43, 24, -35, 86, -98, 3, 79, -11, 78, 6, 13, -38, 24]], [[1, -22, -43, 24, -35, -57, -98, -809, -11, 0, 6, -38, 0, -43]], [[24680, -86420, -97531, 9, -8, 7, -6, 5, 0, -36, 3, -2, 1, -97531]], [[24680, 213, -97531, 9, -8, 7, -6, 0, 912, -2, 1]], [[789, 912, 915, 677, -86420, 456798, 227, 8934, 788, 20, -15, -68, 8934, -86420]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, 31, 101, 24, 8, 6114]], [[789, 912, 677, 766, 456798, 226, 8934, 56789, -15, 8934]], [[-33333, -22222, -11111, 11112, 11111, 86, 22222, 22222, 33333, 100000]], [[1, -22, -43, 24, -23, -57, 86, -98, 79, 0, -11, 78, 0, 7, 13, 1, -38]], [[137, 203, -500, -345, 28, -23, 0, 76832, -53621, -500]], [[1, -22, -43, 24, -98, 79, -11, 0, -53621, -38, 0, -22]], [[1, -22, 9999999, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, -53621, -11]], [[1, -22, -43, 24, -35, -57, 86, -98, 79, -11, 0, 6, 13, -38, -11, 6]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, 911, 2, -68, -41, 21, -42, 915, 915]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, 914, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, 42, 43, 44, 45, 46, -1, 47, 48, 49, 50, -14, 42]], [''], [[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -22, -15, -16, -17, -18, -19, -20, -21, 28, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -33, -34, -35, -36, -37, -38, -37, -39, -40, 78, 42, 43, 44, 45, 46, 47, 48, 49, 50, -14, 42]], [[789, 912, 915, 677, 677, -86420, 456798, 227, 8934, 788, 20, -15, -68, 8934, -86420]], [[1, -22, -43, 0, 24, -35, -57, 86, -98, 79, -11, -34, 6, 13, -38, -11, 86]], [[-22, -43, 24, -98, 79, -11, 0, -53621, -38, 0, -345]], [[21, 30, 38, -204, -206, 213, 161, -900, 915, 161, -902, -345, 910, -68, -808, 21, 915, 915]], [[-6, 1, -22, -43, 24, -57, 86, -98, 79, -11, 0, 6, 13, -38, -11, 6, 13]], [[-33333, -22222, -11111, -999, 11111, -999, 33333, 100000, 11111, 11111, 11111]], [[1, -22, -43, 24, 79, -11, 0, 6, 28, 0]], [[25, 1, -22, -43, 24, -35, -22, -57, 86, -98, 3, 79, -11, 78, 0, 6, -37, 13, -38, 24, -98]], [[1, -22, -43, 24, -23, -57, 86, -98, 79, 0, -11, 78, 0, 7, -86, 13, 1, -38]], [[456, -34, 855, 23413, 23412, 11124, -22, 11123, -345, 6114, -999, -876, 101, 24, 8, 6114]], [[142, 137, 203, 755, -500, -321, -23, 1, 0, 76832, -53621, -500, 31, 0]], [[789, 912, 677, 766, 456798, 226, 789, 56789, -15, -68, -987, 912]], [[1, -22, -43, 24, -35, 11110, -98, 79, -11, 0, 6, -38, 0]], [[21, 30, 38, 500, -206, 213, 161, -900, 915, 53, -77, -901, 911, -68, -808, 21, 161, 30]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, -902, -40, 2, -68, -808, 915, 915, -68, -900, 21]], [[21, 30, 53, -206, 213, -43, 161, -900, -902, 2, 2, 79, 21, 915, 915, -900, 161]], [[141, 137, 202, -207, -500, -321, -808, -23, 0, 76832, -53621, 76832, 203]], [[30, 38, 500, -206, 213, 161, 8324, -900, 915, 53, -77, -901, 911, -68, -808, 8323, 21, 161, 911]], [[-33333, -22222, -11111, 11111, 11111, 86, 86, 33333, 11112, 100000, 33333, 28, 100000]], [[789, 912, 677, 456798, -33334, 8934, 56789, -15, -97531, 8934]], [[21, 29, 38, 22, -204, 213, 161, 456, 23, -900, 915, 911, 2, -68, -808, 21, 915]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, -345, -345, -345]], [[1, -77, -43, -35, -57, 86, -57, 53, -200, 79, -11, 0, 6, 86, 37, 13, -7, -11, 86]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, -12, -14, -15, -16, -17, 26, -18, -19, -20, -21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 49, -33333, 47, 48, 49, 50, -14, 42, 29]], [[1, -22, -43, 24, -35, -57, -36, 86, -98, 79, 0, -11, 78, 915, 0, 7, 13, 1, -38, -43]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, 22, 23, 10, 24, 25, 26, 27, 28, 29, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, 79, -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 29, 23]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -19, 2, -21, 22, 23, 24, 25, 26, 27, 28, 30, 30, 31, -32, -33, -34, -35, -36, -37, -38, -39, -41, 42, 43, 44, 45, 46, 47, 49, 50, -14, 42, 30]], [[21, 30, 38, -204, -206, 76831, -900, 915, 161, -902, 910, -68, -808, 21, 915, 915]], [[21, 38, -204, -206, 213, 161, -899, 915, 161, -902, 911, -68, -987, -808, 21]], [[1000, -1001, 200, -200, 500, -500, 333, -333]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -12, -14, -15, -16, -17, -18, -33, -19, 912, -20, -21, 22, 23, 24, 25, 26, 28, 28, 29, 30, 31, -32, -33, -34, 26, -35, -36, -37, -38, -39, -40, 78, 42, 43, 44, 45, 46, 47, 49, 49, 50, -14, 42, 10]], [[-33333, -22222, -11111, 33334, 11112, -22223, 11111, 86, 22222, 22222, 33333, 100000]], [[-33333, -22222, -11111, 11111, 11111, 86, 22222, 912, 33333, 100000, 33333, 100000]], [[21, 30, 38, -204, -207, 33333, 915, 53, -77, -901, 911, -808, 53]], [[-33333, -22222, -11112, 11111, 22222, 33333, -11111, 100000, 100000]], [[21, 30, 53, -204, -206, 213, 500, 161, -900, -902, 2, -68, 79, 21, 915, 915, -900, -902, 21]], [[456, -34, 855, 23413, 11124, -22, 11123, -345, 6114, -999, -876, 101, 24, 8, 6114, 11124]], [[0, 54, 874, 6745, 8325, 67054, -816508, 9999999, -86]], [[21, 30, 38, -204, -206, 76831, 161, -900, -6, 915, 161, -902, 910, -68, -808, 21, 915, 915, -900]], [[456, 855, 23413, 11124, -22, -345, 6114, -999, 101]], [[21, 30, 38, -204, -206, 213, 161, -900, 914, 53, -77, -901, 911, -808, 1000, -808]]]\n    results = [[-1, -11, 1, -12, 11], [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457], [], [-3, -32, -98, -11, 1, 2, 43, 54], [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9], [-76, -21, 0, 4, 23, 6, 6], [1, 2, 3], [-5, -12, 15, 9], [1111, 2222, 3333, 4444], [-753, -444, 824, 951, 555], [-1000, -99, 0, 1000, 99], [100, 20, 300, 4, 5, 60000], [-500, -200, -100, 10, 20, 50], [-90, -72, -54, 27, 63, 81], [-111, -333, -555, 222, -777, 444, 666, 888], [-1, -10, 0, 0, 0, 1, 10], [100, 20, 20, 300, 4, 5, 60000], [-111, -111, -333, -555, 222, -777, 444, 666, 888], [-5, -12, 15, 15, 9], [-1, -10, 0, 0, 1, 10], [-500, -200, -100, 10, 10, 20, 50], [-5, -12, 15, 15, 9, 4444], [1, 1, 1, 2, 3], [1000, -12, 10, 15, 9], [-111, -111, -333, -555, 222, -777, 666, 888], [-111, -111, -111, -333, -555, 222, -777, 444, 666, 888, 888], [1111, 4444], [-111, -333, -555, 222, -777, 444, 666, 667, 888], [-5, -54, -12, 15, 15, 9, 4444], [-1000, -1000, 0, 1000, 99], [-753, -444, 222, 824, 824], [-500, -200, -100, 10, 20], [-5, -54, -12, 15, 15, -777, 9, 4444], [-5, 63, 4444], [-1, 0, 0, 1, 1, 10], [-200, -100, 10, 20], [-111, -333, -555, 222, -777, 444, 666, 667], [-1, 0, 0, 1, 10], [-1, 0, 0, 1, 10, 1], [-5, 63, 4444, 4444], [-5, 15, 9], [1111, 2222, 3333, 3333, 4444], [-111, -555, 222, -777, 63, 444, 666, 667, 888], [-90, -1, 0, 0, 1, 10], [-1, -12, 1, 10], [-1000, -111, -333, -555, -555, 222, -777, 444, 666, 888], [-753, -444, 824, 824], [-111, -111, -111, -334, -555, 222, -777, 444, 666, 888, 888], [-72, -99, -111, -333, -777, 444, 666], [100, 20, 20, 4, 5, 6, 60000, 299, 299], [1, -555, -555, 222, -777, 63, 444, 666, 667, 888], [-72, -111, -333, -777, 444, 666], [-111, -111, -333, -555, 222, -777, 444, 888], [4444], [-200, -100, 20], [1, 1, 1, 1, 2], [-200, -100, 10, 20, -199], [-5, -12, -12, 15, 9], [1, 1, 2, 2, 3], [-1, 0, 0, 1, 1, 10, 10], [-5, -12, -12, 15, 15, 9], [1, 1, 2, 3], [-1, -1, 0, 0, 1, 10], [-200, 10, 20, 951, -199], [10, 20, 60000, 951, -199], [-5, -12, 6, 15, 15, 9, 4444], [-111, -333, -555, -555, 222, -777, 444, 666, 667], [-72, -100, -111, -333, -777, 444, 666], [-5, 63, 63, 4444], [-111, -333, -555, 222, 6, -777, 444, 666, 667], [-90, -72, -54, -89, 27, 63, 81, 63], [-1000, -99, 0, 0, 1000, 99], [-5, 62, 4444], [-500, -501, -200, -100, 10, 20, 50], [-111, -333, 4, -555, 222, -777, 666, 667], [-72, -99, -111, -333, -777, 444, 444, 666], [-90, -72, -54, -89, 27, 63, 63, 667], [-5, 63, 4444, 4444], [-5, -12, 6, 15, 15, 15, 9, 4444, 4444], [1, 1, 1, 1, 2, 3], [-90, -54, -1000, -89, 27, 63, 667], [-500, -100, -99, 10, 20, -199], [-72, -111, -555, 222, -777, 63, 444, 555, 666, 667, 888], [-200, 10, 20, -199], [-72, -1, 0, 0, 1, 10, 10, 1], [-1, -10, 0, 0, 0, 0, 1, 10], [-111, -333, -554, -555, -555, 222, -777, 444, 667], [-5, -12, 15, 9, 4444, -199], [-1, 0, 0, 10, 1], [-200, -200, -100], [-72, -1, -10, 0, 0, 0, 1, 10], [-72, -111, -555, 222, -777, 63, 444, 555, 666, 667, 888, 888], [-72, -99, -111, -333, -777, 444, 444, 444, 666], [1, -89, 1, 2], [1111, 2222, 3333, 4444, 4444], [1, 1, 1, 2], [-72, -99, -99, -111, -333, -777, 444, 444, 444, 666], [1111, 2222, 3333, 3334, 4444, 4444], [1, -753, 1, 2, 3], [-90, -72, -54, 100, 81, 27, 81, 81, 27], [-72, -100, -333, -777, 444, 666], [-1, -1, 0, 0, 1, 3333], [63, 4444], [-111, -111, -333, -555, 222, -777, 444, 666], [-90, -72, -54, 27, 81], [-90, -54, -1000, -1000, -1000, -1000, -89, 27, 63, -999, 667], [-85, 0, 9, -129, -816508, 8325, 874, 6745, 67054, 9999999], [-43, -98, -22, -11, 0, 1, -35, -57, 13, -38, 24, 6, 86, 79], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [-22, 101, -876, -345, 11124, -999, 6114, 23413, 456, 855], [100000, -11111, 11111, -22222, -33333, 22222, 33333], [-68, -15, -987, 226, 912, 766, 677, 789, 8934, 56789, 456798], [-8, -6, -4, -2, 0, 1, 3, -86420, 5, -97531, 7, 9, 24680, 13579], [-500, -321, 0, -23, 203, 142, -53621, 137, 755, 76832], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 38, 911, 915], [-500, -200, -1000, 1000, 200, -333, 500, 333], [100000, -11111, 11111, -22222, -97531, -33333, 22222, 33333], [-22, 3, 102, -876, 11124, -999, 6114, 23413, 456, 854], [-900, -901, -77, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 915], [101, -876, -345, 11124, -999, 6114, 23413, 456, 855], [-900, -901, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 915], [-22, 3, 102, -876, 11124, -999, 6114, 23413, 456, 854, 854], [100000, -11111, 11111, -22222, 213, -97531, -97531, -33333, 22222, 33333], [101, -875, -345, 11124, -999, 6114, 23413, 456, 855], [-500, -321, -23, 203, 142, -53621, -53621, 137, 8934, 76832], [-500, -500, -321, -23, 203, 142, -53621, -53621, 137, 8934, 76832], [101, -876, -345, 11124, -999, 6114, 6114, 23413, 456, 855], [-900, -901, -77, -808, -204, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915], [101, -875, -345, 11124, 6114, 23413, 456, 855], [-900, -901, -808, 21, -206, -22222, 213, 161, 53, 38, 911, 456798], [-8, -6, -4, -2, 1, 3, -86420, 5, -97531, 7, 53, 9, 24680, 13579], [-22, 3, 102, -876, -876, 11124, -999, 6114, 23413, 456, 854, 854], [-900, -901, -808, -204, 101, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -43, -77, -808, -204, 21, -206, 213, 161, 53, 38, 911, 915], [-6, -22, 3, 102, -876, -876, 11124, -999, 23413, 456, 854, 854], [101, -876, -345, -346, 11124, -999, 6114, 6114, 6114, 23413, 456, 855], [-900, -901, -43, -77, -808, -204, 21, -206, 213, 161, 53, 161, 38, 911], [-22, 3, 102, -876, -876, 11124, -999, -999, 6114, 23413, 456, 456, 854, 854], [-900, -901, -808, 21, -206, 203, -22222, 161, 53, 38, 911, 456798], [-900, -901, -808, 21, -206, -22222, 213, 213, 161, 53, 38, 911, 456798], [-500, -200, -1000, 200, -333, 500, -345, 333, 86], [-8, -6, -4, 0, 0, 1, 3, -86420, 5, 11111, -97531, 7, 24680, 13579], [-900, -901, -77, -808, -808, -204, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915, 874], [-204, 101, -345, 11124, -999, 6114, 6114, 456, 855], [-900, -901, -901, -77, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 915], [100000, -11111, 11111, -22222, -97531, -33333, 22222, 33333, 33333], [-900, -901, -808, 21, -206, 203, -22222, 53, 38, 911, 456798], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 38, 911, 911, 915], [-22, 3, 102, 4, -876, -876, 11124, -999, -999, 6114, 23413, 456, 456, 854, 854], [-900, -901, 21, -205, -22222, 213, 213, -22222, 161, 53, 38, 911, 456798], [-900, -901, -808, 21, -206, 203, -22222, 53, 910, 38, 911, 456797, 456798], [-900, -901, -808, 21, -206, 203, -22222, 53, 910, 911, 456797, 456798], [-900, -901, -808, -809, -204, 101, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915], [100000, -11111, 11111, -22222, -33333, 22222, 22222, 33333], [100000, -11111, 11111, -22222, -97531, -53621, -33333, 33333, 33333], [-900, -901, -77, -808, -204, 21, 21, 31, 22, -206, 213, 161, 38, 911, 915], [-500, -4, -321, 0, -23, 203, 142, 137, 755, 76832], [-900, -901, -808, -204, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915, 456797], [-900, -901, -808, 21, -206, 203, -22222, 53, 53, 910, 911, 456797, 456798], [100000, -11111, 11111, 11111, -22222, -39, -97531, -33333, 22222, 33333, 33333, 33333], [-8, -6, -4, -1, 0, 0, 1, 3, -86420, 5, 11111, -97531, 7, -86419, 24680, 13579], [-8, -6, -4, -3, -2, 0, 1, 3, -86420, 5, -97531, 9, 24680, 13579], [-85, 0, 9, -129, 8325, 874, 6745, 67054, 9999999], [-900, -901, -901, -77, -809, -204, 21, 31, -206, 213, 161, 53, 161, 38, 911, 915], [-500, -500, -321, -23, 203, 142, -53621, -53621, 137, 915, 8934, 76832], [-6, -22, 3, 102, -876, -876, 43, 11124, -999, 23413, 456, 854, 854], [-22, 3, 102, 3, -876, -999, 11124, -999, 23412, 6114, 456, 854], [-900, -901, -808, 21, -206, 212, -22222, 213, 213, 213, 161, 53, 38, 911, 456798], [11111, -22222, -97531, -18, -33333, 22222, 33333, 33333, 6745], [-85, 0, 9, -129, -816508, 8325, 874, 6744, 6745, 67054, 9999999], [-500, -1000, 1000, 200, -333, 500, 333], [-900, -901, -77, -808, -204, 21, 31, -206, 161, 53, 38, 911, 915], [100000, -11111, 11111, -22222, -33333, 22222, 22222, 22222, 22223, 33333], [100000, -11111, -11111, 11111, -22222, -33333, 22222, 22222, 33333], [-204, 101, -345, -345, 11124, -999, 6114, 6114, 455, 456, 855], [100000, -11111, 11111, -22222, -22222, -33333, 22222, 33333], [11111, -22222, -18, -33333, 22222, 33333, 33333, 6745], [-8, -6, -4, -2, 0, 1, 3, -86420, 5, -97531, 7, 7, 9, 24680, 13579], [-900, -901, -77, -808, -204, 21, 31, -206, 52, 161, 53, 38, 911, 915], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [-900, -901, -808, -204, 21, 31, -206, 32, 213, 161, 53, 38, 911, 915], [-85, -86, 0, -34, 9, -129, -816508, 8325, 874, 6744, 6745, 67054, 9999999], [101, -875, -345, 11124, 6114, 23413, 455, 456, 855], [-900, -901, -808, 21, -206, -206, 203, -22222, 53, 910, 911, 456797, 456798], [-900, -900, -901, -808, -809, -204, 101, 21, 31, 22, 31, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -77, -808, -204, 21, 31, -206, 52, 53, 38, 911, 915], [-900, -901, -40, -808, -204, 21, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915, 456797], [-204, 101, -345, -345, 11124, -999, 47, 6114, 6114, 455, 456, 855], [-900, -901, -808, 21, -206, -22222, 213, 213, 161, 53, 911, 39, 456798], [-68, -15, -987, -987, 161, 226, 912, 766, 677, 8934, 56789, 456798], [-500, -4, 0, -23, 203, 142, 137, 755, 76832], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [-1000, 1000, 200, -333, 500, 333], [-11111, 11111, -22223, -33333, 22222, 22222, 22222, 22223, 33333, 789], [101, 102, -875, -345, 11124, 6114, 23413, 455, 456, 855], [-900, -901, -901, -200, -77, -809, -204, 21, 31, -206, 31, 213, 161, 53, 161, 38, 911, 915], [-500, -200, -1000, 200, -333, 500, 500, -345, 333, 86], [100000, -11111, 11111, -22222, -22222, 22222, 33333], [-900, -901, -808, -809, -204, 21, 31, 22, -206, 213, 161, 53, -999, 38, 911, 38, 915], [-900, -901, -40, -808, -204, 21, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915, 915, 456797], [-1000, 200, -333, 500, 500], [-500, -500, -321, 142, -53621, -53621, 137, 8934, 76832], [-900, -901, -901, -77, -808, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 915], [-901, -3, -808, 21, -206, -22222, 213, 213, 161, 53, 911, 39, 456798], [-900, -901, -901, -77, -808, -204, 31, -206, 213, 161, 53, 38, 911, 916], [-85, 0, 9, -129, 8325, 874, 6745, 67054, 9999999, 9999999], [-22, 3, 102, -876, -19, 11124, -999, 6114, 23413, 456, 854], [-500, -321, -23, 203, 203, 142, -53621, -53622, 137, 48, 8934, 76832], [-8, -6, -4, -2, 0, 1, 3, -86420, 4, 5, -97531, 7, 9, 24680, 13579], [100000, 11111, -22222, -33333, 22222, 33333, 24680], [-900, -901, -77, -204, 21, 31, 22, -206, 213, 161, 53, 38, 911, 914, 915], [-68, -15, -16, -987, 226, 912, 766, 677, 789, 8934, 56789, 456798], [-500, -500, -321, -23, 203, 142, -53621, -53621, 142, 142, 137, 8934, 76832], [-901, -3, -808, 21, -206, -22221, -22222, 213, 213, 161, 53, 911, 39, 456798], [-500, -4, 0, -23, 204, 142, 137, 755, 76832], [-900, -901, -808, 21, -206, 203, -22222, 53, 53, 910, 911, 13579, 456797, 456798], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 38, 911, 911, 911, 915], [-900, -901, -77, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 23413, 915], [-900, -901, -40, -808, -204, 21, 21, 31, 22, -206, 213, 161, 53, 38, 911, 911, 915, 456797], [-68, -15, -345, -987, 226, 912, 766, 677, 789, 8934, 56789, 456798], [-500, -500, -321, -23, -23, 203, 142, -53621, -53621, 142, 142, -53621, 137, 8934, 76832], [-22, 3, 102, 4, -876, -876, 11124, -999, -999, 6114, 23413, 456, 456, 853, 854, 854], [3, 102, -876, -19, 11124, -999, 226, 6114, 23413, 456, 854], [-1000, 200, -333, 500, 500, 22223], [-500, -500, -321, -23, 203, 142, -53621, -53621, 142, 142, -33333, 137, 8934, 76832], [-8, -6, -4, -2, 1, 3, 5, -97531, 7, 53, 9, 23412, 24680, 13579], [-68, -15, -987, -987, 161, 226, 912, 766, 677, 56789, 456798], [-8, -6, -4, -2, 0, 0, 3, -86420, 5, -97531, 7, 9, 45, 24680, 13579], [-500, -321, 0, -23, 203, 142, 137, 755, 76832], [100000, -11111, 11111, -22222, -33333, 22222, 22222, 33333, 755], [-500, -1001, 1000, 200, -333, 500, 333], [-900, -901, -3, -808, -204, 21, -206, -22222, 213, 213, 161, 53, 161, 911, 39, 456798], [-22, 3, 102, -876, -876, -998, 11124, -999, -999, 6114, 456, 456, 854, 854], [-68, -15, -986, -345, 226, 912, 766, 677, 789, 8934, 56789, 456798], [-500, -321, -23, 203, 142, -53621, -53621, 137, 8934], [-900, -901, -901, -808, -204, 21, 31, -206, 213, 6, 161, 53, 38, 911, 915], [11111, -22222, -22222, -97531, -18, -33333, 22222, 33333, 33333, 6745], [101, -875, -345, -346, 11124, -999, 6114, 23413, 456], [-900, -901, -77, -808, -204, 21, 31, -206, 161, 53, 910, 38, 911, 915], [-43, -98, -22, -11, 0, 1, -35, -57, 13, -38, 24, 6, 86, 915, 79, 79], [101, -345, 11124, -999, 6114, 23413, 456, 856], [-500, -500, -321, -23, 203, 142, -53621, -53621, 142, 142, 142, 137, 8934, 76832], [-901, -77, -808, -204, 21, 31, -206, 52, 53, 38, 911, 915], [-204, 101, -345, -345, 11124, -999, 6114, 6114, 455, 855], [-500, -321, -23, 203, 142, -53621, -53621, -999, 8934, 76832], [-900, -901, -40, -808, 20, -204, 21, 31, 22, -206, 213, 161, 53, 911, 911, 23412, 915, 456797], [-500, -500, -321, -23, 204, 142, -53621, -53621, 142, 142, 142, 137, 8934, 76832], [-900, -901, -808, 21, -206, 203, -22222, 53, 9, 38, 22223, 911], [-500, -321, -23, 203, 142, -53621, -53621, 137], [-8, -5, -4, -3, -2, 0, 1, 3, -86420, 5, -97531, 9, 24680, 13579], [100000, -11111, 11111, -22222, -22222, -22222, -33333, 22222, 33333], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 162, 38, 911, 915], [-500, -200, -1000, 200, -333, 500, 500, -345, 333, 86, 199], [-6, -22, 102, -876, -876, 43, 11124, -999, 23413, 456, 854, 854], [-900, -901, -77, -808, -204, 21, 31, 22, -206, 213, 161, 53, 226, 38, 915], [-500, -500, -321, -23, -23, 203, 142, -53621, -53621, 142, 142, -53621, 142, -53621, 137, 8934, 76832], [-22, 3, 102, -876, -876, -998, 11124, -999, -999, 6114, 456, 456, 854], [-900, -900, -901, 21, -205, -22221, -22222, 213, 213, 161, 53, 161, 38, 911, 456798], [-3, -808, 21, -206, -22221, -22222, 213, 213, 161, 53, 911, 39, 456798], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 38, 911, 915], [-900, -901, -901, -808, -204, 21, 31, -206, 213, 6, 161, 53, 38, 911, 39, 915, 24680], [100000, -11111, 11111, -22222, -33332, 22222, 22222, 33333], [-500, -1000, 1000, 200, 201, -333, 500, 333], [-900, -900, -901, -808, -809, -204, 101, 21, 31, 22, 31, -206, 213, 161, 53, 911, 915, 853, 916], [-68, -15, -16, -987, 226, 912, 912, 766, 677, 789, 8934, 56789, 456798], [100000, -11112, 11111, -22222, -33333, 22222, 22222, 33333, 755], [-900, -808, 21, -206, 203, -22222, 53, 910, 911, 456797, 456798], [-900, -808, 21, -206, 203, -22222, 53, 910, 910, 38, 911, 456797, 456798], [-500, -200, -1000, -1000, 200, -333, 500, 500, -345, 333, 86], [-500, -23, 203, 142, -53621, -53621, 137, 8935, 76832], [-900, -901, -808, 21, -206, 203, -22222, 53, 910, 38, 911, 456797, 456797, 456798], [-900, -901, -77, -808, -204, 21, 30, 21, -206, 213, 52, 161, 38, 911, 915, 67054], [-900, -901, -901, -77, -203, -809, 21, 31, -206, 213, 161, 53, 161, 38, 915], [-900, -901, -808, 21, -206, 203, -22222, 161, 53, 38, 911, 911, 456798], [-900, -900, -901, -808, -809, -204, 101, 101, 21, 31, 22, 31, -206, 213, 161, 53, 37, 38, 911, 915], [-500, -200, -1000, 200, -333, 500, -345, -22223, 333, 86], [-900, -901, -808, 21, -206, 203, -22222, 53, 910, 911, 911, 456797, 456797, 456798], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 162, 38, 911, 915, 915], [-85, 0, 10, -129, 8324, 874, 6745, 67054, 9999999, 9999999], [-7, -7, -6, -4, -3, -2, 1, 3, -86420, 5, 9, 24680, 13579], [-6, -22, 102, -876, -876, 43, 11124, -999, 23413, 456, 456, 854, 854], [-3, -3, -808, 21, -206, -22221, -22222, 213, 213, 161, 53, 911, 456798], [-900, -901, -808, -809, -809, -204, 101, 21, 31, 22, -206, 213, 161, 53, 38, 911, 915], [-85, 0, 9, -129, 22223, 8325, 874, 677, 6745, 67054, 9999999], [101, -875, -345, -345, -346, 11124, -999, 6114, 23413, 456], [-900, -901, -808, -206, -22222, 213, 161, 53, 38, 911, 456798, 456799], [-500, -321, 0, -23, 203, 203, 142, 137, 755, 76832], [-500, -501, -321, -53621, -53621, 137, 6114, 8934, 76832], [-8, -6, -4, 0, 0, 1, 3, -86420, -86420, 5, 11111, -97531, 7, 24680, 13579], [-500, -1000, 1000, 200, 200, 201, -333, 500, -999, 333], [-68, -68, -15, -987, 226, 912, 766, 677, 789, 8934, 56789, 456798], [-3, -3, -808, 21, -206, -22221, -22222, 213, 161, 53, 911, 456798], [-876, -345, 11124, -999, 6114, 23413, 456, 855, 789], [-900, -901, -808, 21, -205, 102, 31, 213, 161, 53, 38, 456798], [-900, -900, -901, -808, -809, -34, -204, 101, 21, 31, 22, 31, -206, 213, 161, 53, 911, 852, 915, 853, 916], [-500, -321, -23, 203, 142, -53621, -53621, 137, 138, 8934], [-900, -900, -901, -808, 21, -206, 203, -22222, 53, 9, 38, 22223, 911], [-900, -901, -808, -809, -204, 21, 31, 22, -206, 161, 53, -999, 38, 911, 38, 915], [-900, -901, -41, -808, -204, 21, 21, 31, 22, -206, 213, 161, 53, 38, 911, 911, 915, 456797], [-900, -901, -76, -77, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 38, 911, 911, 911, 912, 915], [-500, -321, -23, 203, 142, -53621, -53621, -999, 8934, 8934, 76832], [-900, -901, -77, -808, -204, -206, 213, 161, 53, 161, 38, 911, 456], [-900, -900, -901, -808, -809, -34, -204, 101, 21, 21, 31, 22, 31, -206, 31, 213, 161, 53, 911, 852, 915, 853, 916], [-500, -500, -321, -23, 203, 142, -53621, -53621, 142, -33333, -33334, 137, 8934, 76832], [-900, -901, -808, 21, -206, -22222, 213, 213, 213, 213, 161, 53, 38, 911, 456798], [-900, -901, -808, 21, -206, -22222, 213, 213, 161, 53, 38, 911, 13579, 456798], [-900, -901, -77, -808, -204, 21, 31, -206, 213, 161, 53, 226, 38, 915], [-22, 3, 102, -876, -876, 43, -998, 11124, -999, -999, 6114, 456, 854, 854], [-22222, 11112, -22222, -97531, -18, -33333, -33333, 22222, 33333, 33333, 6745], [101, -876, -345, 11123, 11124, -999, 6114, 6114, 23413, 457, 855], [-900, -901, -40, -40, -808, -204, 21, 21, 31, 22, -206, 213, 161, 53, 38, 911, 911, 915, 456797, 456797], [-901, -3, -808, 21, -206, -22222, 213, 213, -22223, 161, 53, 911, 39, 456798], [-22222, -22222, -97531, -18, -33333, 22222, 33333, 33333, 6745], [-900, -901, -40, -40, -808, -204, -204, 21, 21, 31, 22, -206, 22, 213, 161, 53, 38, 911, 911, 915, 456797, 456797], [-6, -22, 102, -876, -876, 43, 11124, -999, 23413, 456, 456, 854, 854, 854], [-500, -321, -23, 203, 142, -53621, -53621, 142, -999, 8934, 8934, 76832], [101, -876, -345, -346, 11124, -999, 6114, 6114, 6114, 23413, 456], [-22, 3, 102, -876, -19, 11124, -999, 6114, 23413, 23413, 456, 854], [-900, -901, -77, -808, -204, 21, 30, 21, -206, 213, 161, 53, 162, 38, 911, 915], [-900, -901, -808, 21, -206, 203, -22222, 53, 53, 911, 456797, 456798], [-900, -901, -808, -809, -204, 21, 31, 22, -206, 53, -999, 38, 911, 38, 915, 79], [-15, -15, -16, -987, 226, 912, 912, 766, 677, 8934, 56789, 456799], [-500, -500, -500, -321, -23, -23, 203, 142, -53621, -53621, 142, 142, -53621, 137, 8934, 76832], [-22, 3, 102, 3, 3, -876, -53621, -999, 11124, -999, 23412, 456, 854], [-900, -901, -808, 21, -206, -22222, 213, 213, 213, 213, 161, 53, 53, 38, 911, 456798], [-900, -900, -901, -808, -206, 13, 203, -22222, 53, 9, 38, 911], [-900, -901, -808, 21, -206, 203, -22222, 53, 53, 38, 911, 456798], [-68, -15, -986, -345, 226, 912, 766, 677, 789, 8934, 789, 56789, 456798], [-900, -901, -77, -808, -204, 21, 30, 21, -206, 213, 52, 161, 53, 38, 911, 915, 67054], [-900, -901, -808, -809, -204, 21, 31, 22, -206, 53, -999, 38, 911, 38, 915], [-900, -901, -40, -40, -808, -204, 21, 21, 31, 22, -206, 213, 213, 161, 53, 38, 911, 911, 915, 456797, 456797], [-22, 3, 102, 4, -876, -876, 11124, -999, -999, 23413, 6115, 456, 456, 853, 854, 854], [-501, -321, 0, -23, 203, 142, 137, 755, 76832], [-500, -500, -500, -22, -321, -23, -23, 203, 142, -53621, -53621, 142, 142, -53621, 137, 8934, 76832], [-6, -6, -22, 102, -876, -876, 43, 11124, -999, 23413, 456, 456, 854, 854, 854], [-500, -500, -500, -321, -23, -23, 203, 142, -53621, 142, 142, -53621, -53622, 137, 8934, 76832], [-900, -808, 21, -206, 13, 203, -22222, 53, 53, -899, 911, 13579, 456797, 456798], [101, 31, -876, -345, -345, 11124, 6114, 23413, 456, 855], [-900, -808, 21, -206, 31, -22222, 213, 161, 53, 38, 911, 456798], [-901, -3, -808, 21, 21, -206, -22222, 213, 213, 161, 53, 911, 39, 456798], [101, -876, -345, -346, -998, 11124, -999, 6114, 6114, 6114, 23413, 456, 855], [101, -345, -877, -346, 11124, -999, 23412, 6114, 6114, 855], [-8, -6, -4, -2, 0, 1, 2, 3, -86420, 4, 5, -97531, 7, 9, 24680, 13579], [-900, -901, -77, -808, -204, 21, 30, 213, 161, 38, 911, 915], [-500, -500, -321, -23, 203, 142, -53621, -53621, 142, 142, 142, 142, 137, 8934, 76832], [-6, -22, 3, 102, -876, -876, 11124, -999, 23413, 23413, 456, 854, 854], [-900, -900, -901, -77, -204, 21, 30, -206, -17, 213, 161, 53, 38, 911, 915], [-500, -321, -23, 142, -53621, -53621, 137, 8934], [-901, -3, -808, 21, -206, -22221, -22222, 213, 213, 161, 53, 45, 911, 39, 456798], [-900, -808, 21, -206, -22222, -987, 213, 213, 213, 161, 53, 53, 38, 911, 456798], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, 11, -13, -35, 3, -14, 30, -36, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 25, 43, 8, -19, 26, 44, 9, 27, 27, 45, 28, 46, 29, 47, 48, 49], [-900, -901, -808, -204, 21, 31, -206, 213, -39, 161, 53, 38, 911, 915], [100000, -11112, 11111, -22222, -33333, 22222, 33333, 755], [-1000, 1000, 200, 200, -333, 500, 333], [-900, -901, -77, -808, -204, -206, -206, 213, 161, 53, 161, 38, 911, 456], [-900, -901, -77, -204, 21, 30, -206, -17, 213, 161, 53, 38, 49, 915], [-900, -901, -808, 21, -206, -22222, 213, 213, 161, -53622, 38, 911, 456798], [-6, -22, 3, 102, -37, -876, -876, 11124, -999, 23413, 23413, 456, 854, 854], [0, -39, 9, -129, -816508, 455, 874, 856, 6745, 67054], [-6, -22, 3, 102, -876, -876, 43, 11124, -999, 23413, 456, 456, 854, 854], [-6, -22, 2, 3, 102, -37, -876, -876, 11124, -999, 23413, 456, 456, 853, 854, 854], [-8, -6, -4, 0, 1, 3, -86420, 5, 11111, -97531, 7, 24680, 13579], [-900, -900, -901, -808, -206, 13, 13, 203, -22222, 53, 9, 38, 911], [-900, -901, -77, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 912, 915], [-900, -901, -808, -204, 101, 21, -36, 31, 22, -206, 213, 161, 53, 38, 911, 915], [-876, -345, 11124, 11124, -999, -999, 6114, 855, 789], [-22, 3, 102, -876, -876, 11124, -999, -999, 23413, 456, 854], [-900, -901, -808, -204, 101, 21, -36, 31, 22, -206, 22, 213, 161, 53, 38, 911, 915], [-204, 101, -344, -345, -345, 11124, -999, 47, 6114, 6114, 456, 855], [-900, -900, -901, -808, -206, 13, 13, 203, 203, -22222, -22222, 53, 9, 38, 911], [-900, -901, -808, -204, 101, 21, -36, 31, 22, -206, 213, -22222, 161, 53, 38, 38, 911, 915], [-900, -901, -901, -77, -808, -204, 31, -206, 213, 52, 161, 38, 911, 916], [-900, -900, -901, -77, 21, 30, -206, -17, 213, 161, 53, 38, 911, 915], [3, 102, -876, -19, 11124, -999, -999, 226, 6114, 23413, 456, 854], [-900, -901, -808, -809, -204, 21, 31, 22, -206, 213, 161, -999, 38, 911, 38, 915], [-11111, 11111, -22222, -22222, -33333, 22222, 33333], [100000, -11111, 11111, -97530, -22222, -33333, 22222, 33333], [101, -876, -345, -346, -998, 11124, -999, 6114, 6114, 6114, 456, 855], [-22, 102, 3, 4, -876, -999, 11124, -999, 23412, 6114, 456, 854], [-6, -22, 102, -876, -876, 11124, -999, 23413, 456, 854, 854], [-900, -901, -808, 21, -206, 203, -22222, 53, 53, 910, 456, 456798], [-900, -901, -808, -204, 21, -205, 31, -206, 213, 161, 53, 38, 911, 915], [101, -876, -345, -346, -346, 11124, -999, 6114, 6114, 6114, 23413, 456, 855], [-22, 3, -876, -876, 11124, -999, 6114, 23413, 456, 854, 854], [-900, -901, -808, 21, -206, -22222, 213, 213, 213, 161, 53, 53, 38, 911, 456798], [-900, -901, -808, -809, -204, 21, 31, 22, -206, 53, -999, 38, 911, 911, 38, 915], [-900, -901, -901, -200, -77, -809, -204, 31, -206, 31, 213, 161, 53, 161, 38, 911, 915], [-22, 3, 102, 11124, -999, 6114, 23413, 456, 854, 854], [-900, -901, 21, -205, -22222, 213, 213, -22222, 161, 53, 38, 911, 456798, 456798], [-22, 3, 102, 4, -876, -876, 11124, -999, -999, 6114, 6115, 456, 456, 853, 854, 854], [-900, -901, -77, -808, -204, 30, 21, -206, 213, 52, 52, 161, 38, 911, 911, 915, 67054], [-85, 0, 9, 8325, 874, 6745, 67054, 6745, 9999999, 9999999], [100000, -11111, 11111, -22222, -97531, -97531, -33333, 22222, 33333], [-6, -22, 3, 102, -876, -876, 43, 43, -999, 23413, 456, 456, 854, 854], [101, -875, -37, -345, 11124, 6114, 23413, 456, 855], [-8, -7, -4, -2, 0, 1, 3, -86420, 5, -97531, 7, -97531, 9, 24680, 13579], [-900, -900, -808, -809, -204, 101, 101, 21, 31, 22, 31, -206, 213, 161, 53, 37, 226, 38, 911, 915], [-876, -16, -345, 11124, 11124, -999, -999, 6114, 855], [-85, 0, 9, -129, -816507, -816508, 8325, 874, 6745, 67054, 9999999], [-22, 3, -876, -876, -876, 11124, -999, 6114, 23413, 23413, 854, 854], [100000, 100000, -11111, 11111, 11111, -22222, -33333, 22222, 22222, 22222, 22223, 33333], [101, -876, -345, 11124, -999, 6114, 23413, 456, 855], [-900, -901, -901, -808, -68, -204, 21, 21, -206, 213, 6, 161, 53, 38, 911, 915, 915], [-500, 1000, 200, -333, 500, 333], [-8, -2, 0, 1, 3, -86420, -15, 5, -97530, 213, 7, 7, 9, 24680, 13579], [-900, -901, -5, -77, -808, -204, 21, 31, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -77, -808, -204, 21, 31, 22, -206, 11112, 161, 53, 226, 38, 915], [-1000, 101, -876, -345, -346, 11124, -999, 6114, 6114, 6114, 23413, 456, 855], [-900, -901, -808, -204, 21, 31, -206, 213, -39, 161, 53, 38, 915], [-900, -900, -901, 21, -205, 21, -22221, -22222, 213, 213, -22223, 161, 53, 161, 38, 911, 456798], [100000, 100000, -11111, 11111, 11111, -22222, -33333, 22222, 22222, 22222, 22223, 22223, 33333], [-900, -901, -77, -808, -204, 21, 30, 21, -206, 213, 52, 161, 53, 38, 911, 915, 915, 67054], [-900, -901, -808, -204, 101, 21, -36, -11111, 31, 22, -206, 22, 213, 161, 53, 54, 38, 911, 915], [-900, -901, -77, -808, -204, 21, -205, 31, -206, 161, 53, 38, 911, 915], [100000, 200, -11111, -22222, -22222, -22222, 22222, 33333], [-35, 101, -345, -999, 6114, 23413, 456, 856], [100000, 11111, -22222, -33332, 22222, 22222, 33333, 33333], [-900, -901, -77, -808, -77, -204, 21, 30, 213, 161, 38, 911, 915], [-900, -901, -43, -77, -808, -204, 21, 30, 21, -206, 213, 52, 161, 53, 911, 915, 67054], [-900, -900, -901, -808, -206, 13, 13, 203, -22222, 53, 53, 9, 38, 911], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 46, 29, 47, 48, 49], [-68, -15, -986, -345, 226, 912, 766, 677, 678, 789, 8934, 56789, 456798], [-22222, 11112, -22222, -22222, -97531, -33333, -33333, -33334, 22222, 914, 33333, 33333, 6745], [-6, -22, 102, 102, -876, -876, 43, 11124, -999, 23413, 456, 456, 854, 854], [-900, -900, -901, -809, -34, -204, 101, 21, 21, 31, 22, 31, -206, 31, 213, 161, 53, 911, 852, 915, 853, 916], [-900, -901, -808, -205, 21, -206, 203, -22222, 53, 38, 911, 456798], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 46, 29, 47, 48, 49], [100000, 11111, -22222, -33333, 33333, 8324, 24680], [-901, -3, -808, 21, -206, -22221, -22222, 213, 213, -22222, 161, 53, 911, 39, 456798], [-6, -22, 2, 3, 102, -37, -876, 11124, -999, 23413, 456, 456, 854, 854], [-3, -808, 21, -206, -22222, 213, 213, -22223, 161, 911, 39, 456798], [-900, -901, -808, -204, 20, 21, 31, 22, -206, 213, 161, 53, 38, 911, 456797], [-500, -321, -23, 142, -53621, -53621, -53621, -53622, 27, 137, 8934], [-8, -6, -4, -2, 1, 3, -86420, 5, -97531, 7, 9, 24680, 13579], [-6, -22, 3, 102, -876, -876, 43, 43, -999, 23413, 456, 456, 854], [11111, -22222, -22222, -97531, -18, 22222, 33333, 33333, 6745], [100000, 100000, 11111, 11111, -22222, -33333, 22222, 22222, 22222, 22223, 38, 33333], [-900, -900, -901, -901, -808, -204, 21, 31, -206, 213, 6, 161, 53, 38, 911, 39, 915, 24680], [-900, -900, -901, -808, -809, -34, -204, 101, 21, -11111, 31, 22, 31, -206, 213, 161, 53, 911, 852, 915, 853, 916], [-900, -901, -43, -77, -204, 21, 30, 21, -206, 213, 52, 161, 53, 911, 915, 67054], [-7, -7, -6, -4, -3, -2, 1, 3, -86420, 5, 9, 24680], [-900, -900, -901, -808, -206, 13, 13, 203, 203, -22222, -22222, 52, 9, 38, 911], [-900, -901, -808, 21, -206, 213, 161, 53, 38, 911, 456798], [-500, -321, -23, 203, 142, -53621, -53622, 137, 48, 8934, 76832], [3, 102, -876, -876, 11123, -19, 11124, -999, -999, 226, 6114, 23413, 456, 854], [-6, -22, 3, 102, -876, -876, 11124, 23413, 456, 852, 854, 854], [-500, -200, -1000, 200, -333, 500, -345, 333, 911, 86], [-876, -345, 11124, -999, -999, 6114, 23413, 456, 855, 789], [-900, -900, -901, -808, -333, -206, 13, 13, 203, -22222, 53, 38, 911], [-900, -901, -808, -204, 21, -205, 31, -206, -206, 213, 161, 53, 38, 911], [-22, -23, 102, 4, -876, -876, 43, 43, -999, 23413, 456, 456, 854, 854], [11111, -22222, -22222, -97531, -33333, 22222, 22222, 33333, 33333, 6745], [-900, -901, -808, 21, -206, -22222, 213, 213, 213, 213, 161, 53, 38, 911, 39, 456798], [-900, -901, -808, 30, -206, -22222, 213, 213, 213, -22222, 161, 53, 53, 38, 911, 456798, 456798], [-876, -345, 11124, -999, 6114, 456, 855, 789, 789], [-85, -43, -98, -22, -11, 0, 1, -35, 13, 24, 6, -33332, 86, 79], [-500, -4, 0, -23, -205, 204, 24, 142, 755, 76831, 76832], [-900, -900, -901, 21, -205, -22222, 213, 213, -22222, 161, 53, 38, 911, 456798], [-900, -901, 21, -205, -22222, 213, 213, -22222, 161, 53, 38, 911, 456797, 456798], [-500, -500, -321, -23, 142, -53621, -53621, 142, 142, 142, 137, 8934, 76832], [-15, -986, -345, 226, 912, 766, 677, 677, 789, 8934, 789, 56789, 456798], [-22, -36, 3, 102, 4, -876, -876, 11124, -999, -999, 23413, 6115, 456, 456, 853, 854, 854], [-500, -500, -321, -53621, -53621, 137, 24680, 8934, 76832], [-901, -3, -808, 21, -205, -206, -22221, -22222, 213, 213, -22222, 161, 53, 911, 39, 456798], [-500, -500, -23, 203, 142, -53621, -53621, 142, -33333, -33334, 137, 6115, 8934, 76832], [-204, 101, -345, -345, -998, 11124, -999, 6114, 6114, 455, 855], [-500, -321, -321, 0, -321, -23, 203, 142, -53621, 137, 755, 755, 76832], [-900, -901, -808, 21, -206, -206, 203, -22222, 53, 910, 38, 911, 456797, 456798], [-43, -98, -22, -11, 0, 0, 1, -35, -57, 13, -38, 24, 6, 86, 79], [-22, -204, 102, -876, -876, -998, 11124, -999, -999, 6114, 456, 456, 854], [-900, -901, -901, -77, -203, -809, 21, 31, -206, 213, 161, 161, 54, 38, 915], [-22, 3, 102, 4, -876, -876, 11124, 11124, -999, -999, 11124, 23413, 6115, 456, 456, 853, 854, 854, 854], [-500, 1000, 200, -333, 500, 500, 333, 333], [-900, -901, 21, -205, -22222, 213, 213, -22222, 142, 161, 53, 38, 911, 456797, 456798], [-8, -7, -4, -2, 0, 1, 11, 3, -86420, 5, -97531, 7, -97531, 9, 24680, 13579], [-900, -901, -77, -808, -204, 21, 31, -206, 213, 161, 54, 38, 911, 912, 915], [-900, -901, -808, -809, -809, -204, 101, 31, 22, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -901, -1001, -808, -68, -204, 21, 21, -206, 213, 6, 161, 53, 38, 911, 915, 915], [-901, -808, -204, 101, 21, -36, 31, 22, -206, 22, 500, 213, 161, 53, 38, 911, 915], [-500, -500, -321, -23, -23, 203, 142, -53621, -53621, 142, 142, 142, -53621, 142, 137, 6745, 8934, 76832], [-900, -900, 21, -206, 13, 203, -16, -22222, 53, 53, -899, 911, 13579, 456798, 456798], [-900, -901, 21, -205, -22222, 213, 213, -22222, 161, 53, 38, 911, 911, 911, 456797, 456798], [-500, -1000, 1000, 200, -333, -86420, 500, 333], [-68, -15, 32, 32, -987, -987, 161, 226, 912, 766, 677, 56789, 456798], [-500, -500, -321, 142, -53621, -53621, -53622, 137, 8934, 76832], [-900, -808, 21, -206, 203, -22222, 53, 910, 38, 911, 909, 456797, 456798], [-500, -321, -23, 203, 142, -53621, -53621, -53621, -999, 86, 76832], [-500, -500, -321, -23, 202, 142, -53621, -53621, 137], [-22, 3, 102, 11124, -999, 6114, 23413, 456, 456, 854, 854], [-85, 0, 9, 8325, 874, 6745, 67054, 6745, 9999999], [-900, -901, -807, -808, 21, -206, 212, -22222, 213, 213, 213, 161, 53, 38, 911, 911, 456798], [-15, -986, -345, 226, 912, 677, 24680, 789, 8934, 789, 56789, 456798], [-500, -500, -321, -23, 203, 142, -53621, 142, 137, 138, 6114, 8934], [-900, -901, -204, 20, 21, 31, 22, -206, 213, 161, 53, 38, 911, 456797], [-900, -901, -808, 21, -206, 203, 203, -22222, 53, 53, 910, 911, 13579, 456796, 456798], [-204, 101, -345, 11124, -999, 22223, 6114, 6114, 456], [-900, -901, -808, -809, -204, 21, 31, 22, -206, 53, 53, -999, 38, 38, 915, 79], [-6, -22, 2, 3, 102, -37, -876, -876, -876, 11124, -999, 138, 23413, 456, 456, 853, 854, 854], [-22, 102, 4, -876, -876, 11124, -999, -999, 6114, 23413, 456, 456, 854, 854], [-900, -901, -3, -77, -808, -204, 21, 30, 213, 213, 161, 38, 911, 915], [-500, 3, 102, -876, 11123, -19, 11124, -999, -999, 226, 6114, 456, 854], [-204, 101, -36, -345, -345, 11124, -999, 47, 6114, 6114, 455, 456, 855], [0, -39, 9, -129, -816508, 455, 874, 856, 856, 6745, 67054], [-901, -808, 21, -206, 203, -22222, 53, 38, 911, 456797, 456798], [-900, -901, -808, -34, -204, 21, -205, 31, -206, -206, 213, 161, 53, 38, 911], [-900, -43, -77, -204, 21, 30, -11111, 21, -206, 213, 52, 161, 53, 911, 915, 67054], [-8, -6, 0, -809, 1, 3, -86420, 5, 11111, -97531, 7, 24680, 13579], [-900, -900, -900, -901, 21, -205, -22222, 213, 213, -22222, 161, 53, 53, 38, 911, 456798], [-900, -901, -43, -77, -808, -204, 21, 30, 21, -206, 213, 52, 52, 161, 53, 911, 915, 67054], [-68, -15, -986, -345, 226, 912, 766, 677, 789, 8934, 456798, 456798], [-901, -808, 21, 21, -206, 203, -22222, 53, 38, 911, 456797, 456798], [-85, -43, -98, -22, -11, 0, 1, -35, 13, 13, 24, 6, -33332, 86, 79], [-6, -22, 3, 102, -876, -876, 43, 11124, -999, 23413, 456, 854, 854, 854], [-22, -23, 3, 102, 4, -876, -876, 11124, -999, -999, 6114, 23413, 456, 456, 853, 854, 854], [-500, -321, -23, -86420, -53621, -53621, 137], [-22, 102, 102, 4, -876, -876, 11124, -999, -999, 6114, 23413, 456, 456, 854, 854], [-6, -22, 3, 102, -876, -876, 11124, 23413, 456, 852, 854, 199], [-900, -900, -901, -808, -809, -34, -204, 101, 21, 31, 22, 31, -206, 213, 161, -899, 911, 6114, 852, 853, 916, 916], [-15, -345, 226, 912, 766, 677, 677, 789, 8934, 789, 56789, 456798], [-900, -901, -200, -808, 21, -205, 102, 31, 213, 161, 53, 38], [-900, -900, -901, -901, -808, -204, 21, 31, -206, 213, 7, 161, 53, 38, 911, 39, 915, 24680], [-68, -15, -987, -97530, 161, 226, 912, 8324, 766, 677, 8934, 56789, 456798], [-900, -901, -77, -204, 21, -206, -17, 213, 161, 53, 39, 49, 915], [-900, -901, -807, -808, -809, -204, 21, 31, 22, -206, 53, -999, 38, 911, 911, 38, 915], [-204, 101, -36, -344, -345, -345, 11124, -999, 47, 6114, 6114, 455, 456, 855], [-22222, -22222, -22222, -97531, -33333, -33333, -33334, 22222, 914, 33333, 33333, 6745], [-22, 3, 102, -876, -876, 11124, -999, -999, -999, 23413, 456, 854], [-6, -22, 2, 3, 102, -37, 11124, -999, 23413, 456, 456, 854, 854, 854, 855], [-900, -901, -808, -204, 101, 21, -36, -11111, -36, 31, 22, -206, 22, 213, 161, 53, 54, 38, 911, 915], [-68, -15, -986, -345, 226, 912, 766, 677, 789, 8934, 56789, 456796, 456798], [-8, -6, -4, 0, 1, 3, 102, -86420, 5, 11111, -97531, 7, 24680, 13579], [-900, -901, -808, 21, 3, -206, -206, 203, -22222, 53, 910, 911, 456797, 456798], [-900, -901, -77, -204, 21, 31, 22, -206, -206, 213, 161, 53, 53, 38, 911, 914, 915], [-1000, 1000, 200, -332, -333, -86420, 500, 333, 999], [-500, -321, -53621, -53621, 137], [-900, -900, -808, -205, 21, -206, 203, -22222, 53, 38, 911, 456798], [-500, -500, -321, -53621, -53621, 137, 8325, 24680, 8934], [-68, -15, -986, -986, -345, 226, 912, 766, 677, 789, 8934, 789, 56789, 456798], [-8, -6, -4, -2, 0, 0, 3, -86420, 5, -97531, 7, 7, 9, 45, 24680, 13579], [-500, -4, 0, -23, -205, -16, 204, 24, 142, 755, 76832], [-900, -901, -808, -808, 21, -206, -22222, 213, 213, -53622, 38, 911, 23412, 456798], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, 2, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, -53622, -19, 26, 44, 9, 27, 28, 46, 29, 47, 48, 49], [-900, -808, 21, -206, 31, -22222, 213, 161, 53, 911, 456798], [-500, -320, -321, -321, 0, -321, -23, 203, 142, -53621, 137, 755, 755, 76832], [100000, -11111, 11111, 11111, -22222, -97531, -53621, -53621, -33333, 33333, 33333], [101, -345, -877, -346, -346, 11124, -999, 23412, 6114, 6114, 855], [-900, -901, -808, -808, 21, -206, 203, -22222, 161, 53, 38, 911, 456799], [-900, -901, -808, -206, 203, -22222, 53, 9, 38, 22223, 911], [100000, -11111, 11111, -97531, -53621, -33333, 33333, 33333], [-1000, -876, -346, 11124, 6114, 6114, 6114, 23413, 456, 855], [-876, -345, -346, 11124, 11124, -999, -999, -999, 6114, 855, 789], [-900, -900, 1, 21, -206, 13, 203, -16, -22222, 53, 53, -899, 911, 13579, 456798, 456798], [-22222, -97531, -18, -33333, 22222, 33333, 33333, 6745, 6745], [-8, -6, -4, -2, 0, 0, -203, 3, -86420, 5, -97531, 7, 9, 45, 13579], [-6, -22, 3, 102, -876, -876, 43, 43, 23413, 455, 456, 456, 853, 854], [-204, 101, -36, -345, -345, 11124, -999, 47, 6114, 6114, 455, 456, 855, 855], [-901, -3, -808, 20, -206, -22222, 213, 213, 161, 53, 911, 39, 456798], [-900, -807, -808, 21, -206, 212, -22222, 213, 213, 213, 161, 53, 38, 911, 911, 456798], [100000, -11111, 11111, -22222, -33332, 22222, 22222, 33333, 755], [-900, -901, -77, -808, -204, 21, 30, 21, -206, -875, 213, -39, 52, 52, 161, 53, 911, 915, 67054], [-901, -901, -808, -808, 21, -206, 213, 213, -53622, 38, 911, 23412, 456798], [-22222, 11112, -22222, -22222, -97531, -33333, -33333, 22222, 914, 33333, 33333, 33333, 6745], [-900, -901, -77, -808, -204, 21, 30, 21, -206, -875, -986, 213, -39, 51, 52, 161, 53, 911, 915, 67054], [-900, -900, -900, -901, 21, -205, -22222, 213, 213, -22222, 213, 161, 53, 53, 38, 911, 456798], [-900, -901, -901, -77, -808, -808, 21, 31, -206, 213, 161, 53, 38, 911, 915], [-1000, -1001, -877, -346, 11124, 6113, 6114, 6114, 23413, 456, 855], [-901, -3, -808, 21, 21, -206, -22222, 213, 213, 161, 53, 911, 39, 456797, 456798], [-85, -43, -98, -98, -22, -11, 0, 1, -35, 13, 13, 24, 6, -33332, -33333, 86, 79, 56789], [-8, -6, -4, -4, -2, 0, 0, -203, 30, 3, -86420, 22, 5, -97531, 7, 9, 45, 13579], [-68, -15, -987, -987, 43, 161, 226, 912, 766, 677, 56789, 456798], [-22, 3, 102, 3, -15, -876, 11124, -999, -999, 23412, 6114, 854], [-500, -321, -22, -23, -14, 203, 142, -53621, -53621, 137, 8933, 8934], [100000, -11111, 11111, -22222, -97531, -22223, -33333, 33333, 33334], [-900, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 911, 911, 915], [100000, 100001, 11111, 11111, -22222, -33333, 22222, 22222, 22222, 22223, 38, 33333], [-900, -901, -808, 21, -206, -206, 203, -22222, 53, 910, 456797, 456798], [-900, -900, -901, -808, -809, -809, -204, 101, 21, 30, 31, 22, 31, -206, 213, 161, 53, 911, 915, 853, 916], [100000, -11111, -22222, -33333, 22222, 22222, 22222, 22223, 33333], [-900, -901, -808, -808, 21, -206, 203, -22222, 910, 38, 911, 456797, 456797, 456798], [-15, -986, -345, 226, 912, 677, 24680, 677, 789, 8934, 789, 56789, 456798], [-900, -901, -808, 21, -207, 203, -22222, 53, 38, 911, 456797, 456798, 9999999], [-900, -901, -808, -808, 21, -206, -22222, 213, 213, 213, 213, 161, 53, 37, 38, 911, 39, 456798], [-20, -15, -986, 226, 912, 766, 677, 677, 789, 8934, 789, 56789, 456798], [-900, -901, -808, 21, -206, 212, -22222, 213, 213, 213, 213, 161, 53, 38, 911, 456798], [-500, -321, -23, 203, 203, 142, -53621, -53621, -53621, 137, 8933], [11111, -22222, -22222, -97531, -33333, 22222, 33333, 33333, 6745, 6745], [-22, 3, -14, 102, 11124, -999, 6114, 23413, 456, 456, 854], [100000, -11111, 11111, -22222, -97531, -33333, 22222, 33333, 33334], [-900, -808, 21, -206, 31, -22222, 213, -22222, 161, 53, 38, 911, 456798], [100000, -11111, -11111, 11111, -22222, 22222, 22222, 33332, 33333], [100000, 100000, 11111, -22222, -97531, -33333, 22222, 33333], [-500, -500, -500, -321, -23, -23, 203, 142, -53621, -53621, 142, 142, -53621, 137, 8934, 8935, 76832], [-5, 11111, -22222, -97531, -18, -97532, -33333, 22222, 33333, 33333, 457, 6745, 6745], [101, 101, -875, -345, 11124, -999, 6114, 23413, 456, 855], [-500, -500, -321, 142, -53621, -53621, -53622, 8934, 76832], [-85, -43, -98, -11, 0, 1, -35, 13, 24, 6, -33332, 86, 86, 79], [-6, -20, -22, 2, 3, 102, -37, -876, -876, 11124, -999, 23413, 456, 456, 853, 854, 854], [100000, -11111, 11111, 11111, -22222, -22222, -97531, -22223, -53621, -346, -53621, -33333, 33333, 33333], [-900, -900, -900, -901, 21, -205, -22222, 213, 213, -22222, 213, 53, 53, 910, 38, 456798], [101, -345, -877, -346, 11124, 23412, 6114, 6114, 33334, 855], [-204, 101, -344, -345, -345, 11124, -999, 47, 6114, 6114, 455, 456, 855], [-900, -900, -901, -77, -808, -204, 21, 31, -206, 161, 53, 161, 910, 910, 38, 911, 915], [-22, 3, 102, 3, -876, -999, 11124, -999, 23412, 6114, 456, 456, 853, 854], [-900, -901, -40, -40, -204, -204, 21, 21, 31, 22, -206, 22, 22, 213, 161, 53, 37, 911, 911, 915, 456797], [100000, -11111, 11111, -22222, -22222, -33333, 22222, 33333], [-321, -33, 203, 142, 44, 27, 137, 755, 76832], [-22, 102, 3, 4, -876, -999, 11124, -999, 11124, 23412, 6114, 456, 854], [-22, 3, 102, -876, -876, 11124, -999, 6114, 23413, 456, 854, 854, 678], [-900, -901, -808, 21, 21, -206, 212, -22222, 213, 213, 213, 213, 161, 53, 38, 911, 911, 456798], [100000, -11111, 11111, -22222, -97531, -53621, -33333, 33334], [0], [-3, 0, -12, 35, 998], [111, 222, 333, 444], [1, 2, 3, 4, 5, 6, 7, 8, 9], [-99999999, 99999999], [-111111111, 111111111, -222222222, 222222222, -333333333, 333333333, -444444444, 444444444], [1, 10, 100], [-1, -10, -100], [-1, -10, -100, 1, 10, 100], [-2147483647, -2147483648, 2147483646, 2147483647], [-900, -901, -77, -808, -204, 21, 30, 21, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 911, 915], [-43, -98, -22, -11, 0, 0, 1, -35, -57, 13, -38, 24, 6, 79], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 911, 912, 915], [-43, -98, -22, -11, 0, 0, 1, -35, -57, -38, 24, 6, 79], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 911, 915, 915], [-900, -901, -77, -808, -808, -204, 21, 30, -206, 213, 161, 53, 38, 911, 915], [100000, -11111, 11111, 11111, -22222, -33333, 22222, 86, 33333], [100000, -11111, 11111, -22222, -33334, 22222, 33333], [-500, 0, -23, -23, 203, -345, -53621, 28, 137, 755, 76832], [-43, -98, -22, -11, 0, 0, 1, -35, -38, 24, 6, -53621, 79], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49], [-22, 101, -876, -345, -345, 11123, 11124, -999, 6114, 23413, 456, 855], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 38, 911, 912, 912, 915], [-40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49], [-22, 101, -876, -345, 11123, 11124, -999, 6114, 23413, 456, 855, 766, 766], [-900, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 911, 915], [-43, -98, -22, -11, 0, 1, -35, -57, 13, -38, 24, 6, 86, 78, 79], [-43, -98, -22, -11, 0, 0, 1, -35, -86420, -38, 24, -53621], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [-43, -98, -22, -11, 0, 1, -35, -57, 3, 13, -38, 24, 6, 86, 78, 79], [-43, -98, -22, -11, 0, 0, 1, -35, -57, -35, -15, 13, -38, 24, 6, 79], [-900, -901, -77, -77, -808, -204, -68, 21, 30, 21, 21, -206, 213, 161, 38, 911, 911, 912, 912, 915], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 54, 38, 911, 915], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [100000, -11111, 11111, -22222, -33333, 22222, 22222, 86, 33333], [-22, -34, 101, -876, -345, -345, 11123, 11124, -999, 6114, 23413, 456, 855], [100000, 11111, -22222, -33333, 22222, 22222, 86, 33333], [100000, -11111, 11111, 11111, -22222, -33333, -999, 33333], [-98, -22, -11, 0, 1, -35, -57, 13, -38, 24, 6, 86, 79], [-43, -98, -22, -11, 0, -11, 1, -35, -57, 13, -38, 24, 6, 86, 79], [-85, -85, 0, 9, -129, -816508, 8325, 874, 6745, 67054, 9999999], [-11111, -37, 11111, -22222, -53621, -33334, 22222, 33333], [-43, -98, -98, -22, -11, 0, -11, 1, -35, -57, 13, -38, 24, 6, 86, 79], [-43, -98, -22, -11, 0, 0, 1, -38, 24, 6, -53621, 79], [-40, -41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [-85, 0, 9, -129, -129, -816508, 8325, 874, 6745, 67054, 9999999], [-40, -41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-900, -901, -77, -808, -68, 21, 30, 21, -206, 500, 213, 161, 53, 38, 911, 915], [-40, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49, 78], [100000, 100000, -11111, 11111, 11111, -22222, -33333, 22222, 86, 33333, 33333], [-500, -200, -1000, 1000, 200, -333, 500, 333, 333], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 28, 46, 29, 47, 29, 48, 49], [-8, -6, -4, -2, 0, 1, 3, -86420, 5, -97531, 7, 9, 24680], [-40, -41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, -36, -14, 4, -15, 22, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [-900, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 915], [-900, -902, -808, -204, 2, -68, 21, 30, 21, -206, 213, 161, 38, 911, 915, 915], [-68, -15, 226, 912, 766, 677, 789, 8934, 8934, 56789, 456798], [-43, -98, -22, -11, 0, 0, 1, -35, 11111, -38, 24, 6, 79], [-900, -808, -204, 2, -68, 21, 21, -206, 213, 161, 29, 38, 911, 456, 915, 915], [-68, -15, -33334, 912, 766, 677, 789, 8934, 8934, 56789, 456798], [-11111, -37, 11111, -22222, -22222, -22222, -53621, -33334, 22222, 33333], [-500, -321, 0, -23, 203, 141, -53621, 137, 755, 76832, 76832], [-43, -98, -22, -11, 0, 1, -35, -57, 3, 13, -38, 24, 6, 24, 86, 78, 79], [-900, -901, -77, -808, -204, -68, 21, 21, 21, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -77, -808, -204, -68, 21, 21, 21, -206, 161, 53, 38, 911, 915], [-11111, -37, 11111, -22222, -53621, -53621, -33334, 22222, 33333], [-500, -321, 0, -23, -23, 203, 142, -53621, 137, 138, 755, 76832], [-43, -98, -22, -11, 0, 0, 1, -35, -57, 13, -38, 6, 79], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 915, 915], [-41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-68, -86420, -15, 226, 912, 677, 789, 8934, 8934, 56789, 456798], [-43, -98, -22, -11, 0, 0, 1, -38, 24, 6, 24, -53621, 79], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49], [-43, -98, -22, -11, 0, 0, 1, 23, -38, 6, 24, -53621, 79], [-43, -98, -98, -22, -11, 0, 0, 1, -35, 11111, -38, 24, 6, 79], [-43, -98, -22, -11, 0, 0, -38, 24, 6, 24, -53621, 79], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 28, 46, 29, 47, 29, 48, 49], [-900, -902, -808, -204, 2, -68, 21, 30, 21, -206, 213, 161, 38, 911, 914, 915, 915], [-43, -98, -43, -22, -11, 0, 0, 1, -35, -57, -38, 24, 6, 79], [-22, 101, -876, -345, 11124, -999, 6114, 23413, 457, 855], [-900, -900, -902, -808, -204, 2, -68, -68, 21, 30, 21, -206, 213, 161, 38, 911, 914, 915, 915], [-11111, -37, 11111, -22222, -22222, -53622, -33334, 22222, 33333], [-43, -98, -22, -11, 0, 0, 1, -38, 24, -53621, 79], [-43, -98, -22, -11, 0, 0, -38, 24, 24, -53621, 79], [-22, 101, -876, -345, 11124, -999, 6114, 456, 855], [-8, -6, -4, -2, 0, 1, 3, -86420, -97531, 7, 9, 24680], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 24, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 28, 46, 29, 47, 29, 48, 49], [-43, -98, -22, -11, 0, 0, 1, -35, -57, 13, 13, -38, 24, 6, 86, 79], [-11111, -37, 11111, -22222, -53621, -53621, -33334, 22223], [100000, -11111, 11111, 11111, -33333, 22222, 86], [-8, -6, -2, 0, 1, -36, 3, -86420, 5, -97531, 7, 9, 24680], [-43, -98, -22, -11, 0, 1, -35, -57, 13, -38, 24, 6, 87, 78, 79], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 915, 915, 915], [100000, 100000, 100000, -57, -11111, 11110, 11111, 11111, -22222, -33333, 22222, 86, 33333], [-8, -6, -2, 0, 1, 3, -86420, -97531, 7, 9, 912, 24680], [-900, -77, -808, -204, -68, 21, 21, 21, -206, 213, 161, 53, 38, 911, 915], [-900, -901, -77, -808, -808, -204, 21, 30, -206, 213, 161, 53, 38, 911, 914], [-22, 101, -876, -345, -999, -999, 6114, 456, 855], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 13, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 8, -19, 26, 44, 9, 27, 28, 46, 47, 29, 47, 29, 48, 49], [-500, -200, -1000, 1000, 200, 200, -333, 500, 333, 333], [-900, -901, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 911, 915], [-40, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 28, 46, 29, 47, 48, 49, 78], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 37, 911, 915], [-41, -43, -98, -98, -22, -11, 0, 1, -35, 11111, -38, 24, 6, 79], [-40, -41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, 13, 31, -37, 5, -16, 23, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-68, -86420, -15, 226, 912, 677, 788, 789, 8934, 8934, 56789, 456798], [-900, -77, -808, -204, -68, 21, 30, 21, -206, -206, 213, 161, 53, 333, 38, 911], [-8, -6, -4, -2, -2, 0, 1, 3, -86420, -97531, 7, 9, 24680], [-85, 0, 9, -129, -816508, 915, 8325, 6745, 67054, 9999999], [-900, -900, -902, -808, -204, 2, -68, -68, 2, 21, 30, 21, -206, 213, 161, 38, 911, 914, 915, 915], [-43, -98, -22, -11, 0, 0, 1, -38, -38, 24, -53621, 79], [100000, 100000, -11111, 11111, 11111, -22222, -33333, 22222, 33333, 33333, 76832], [-500, -321, 0, -23, -86420, 203, 142, 137, 755, 76832], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 915, 915, 915, 915], [-68, -11111, -15, -33334, 912, 766, 677, 789, 8934, 8934, 56789, 456798], [-8, -6, -4, -2, -2, 0, 3, -86420, -97531, 7, 9], [-40, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 45, 28, 28, 46, 29, 47, 48, 49, 78], [-500, -40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 28, 46, 29, 47, 29, 48, 49], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 915, 915, 915], [-8, -6, -4, -2, -2, 3, -86420, -86420, -97531, 7, 9, 137], [-8, -6, -4, -2, -2, 0, 1, 3, -86420, -97531, 7, 24680], [-2, -43, -98, -11, 0, 1, 30, -38, 24, 6, -53621, 53, 79], [-11111, 11111, -22222, -33334, 22222, 33333], [-900, -902, -41, -204, 2, -68, 21, 30, 21, -206, 213, 161, 38, 911, 914, 915, 915], [-40, -41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, 13, 31, -37, 5, -16, 23, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49, 788], [-43, -98, -22, -11, 0, 1, -35, -57, 3, 13, -38, 24, 7, 86, 78, 79], [-43, -98, -22, -11, 0, 0, 0, 1, -35, -57, 13, -38, 6, 79], [-43, -98, -11, 0, 1, -35, -57, 3, 13, -38, 24, 6, 24, 86, 78, 79], [-11111, -37, 11111, -22222, -22222, -53621, -33334, 22222, 33333], [100000, -11111, 11111, -22222, 22222, 33333, 855], [-40, -41, -21, -32, -33, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 30, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 23413, 49], [-7, -6, -2, 0, 1, 3, -86420, -97531, 7, 9, 912, 24680], [-42, -43, -98, -22, -11, 0, 0, -38, 24, 24, -53622, 79], [-900, -901, -77, -808, -204, -68, 21, 21, 21, 213, 161, 53, 38, 911, 915], [-500, -321, 0, -23, -86420, 203, 203, 142, 137, 137, 755, 76832], [-22, 101, -876, 11124, -999, 6114, 456, 677], [-15, -97531, -33334, 912, 766, 677, 789, 8934, 8934, 56789, 456798], [-900, -901, -77, -808, -204, 21, 30, -207, 53, 38, 911, 915], [-900, -902, -204, 2, -68, 21, 30, 21, -206, 213, 53, 161, 38, 911, 914, 915, 915, 79], [-85, -86, 0, 54, -129, -816508, 8325, 874, 6745, 67054, 9999999], [-68, -86420, -15, 227, 912, 915, 677, 788, 789, 8934, 8934, 56789, 456798], [-43, -98, -22, -11, 0, -11, 1, -35, -57, 13, -38, 24, 6, 86, 86, 79], [-43, -98, -22, -11, 0, 0, 1, 24, 6, -53621, 28, 79], [-40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 4, 5, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 44, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49], [-500, -500, -321, 0, 0, -23, 31, 203, 142, -53621, 137, 755, 76832], [-500, -321, 0, 0, -23, 31, 203, 142, -53621, 137, 755, 76832], [-86, 0, 54, -129, -816508, 8325, 874, 6745, 67054, 9999999], [-41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 28, 46, 29, 47, 29, 48, 49], [-43, -43, -98, -22, -11, 0, 1, -35, -57, 2, 3, 13, -38, 24, 7, 86, 78, 79], [-43, -98, -22, -11, 0, 1, -35, -57, 3, -86420, 13, -38, 24, 6, 24, 86, 78, 79], [100000, 100000, -11111, 11111, 11111, -22222, -33333, 22222, 28, 86, 86, 33333, 33333], [-500, -321, 0, -23, 203, 142, -53621, 137, 755], [-86, 0, 54, -129, -816508, 874, 6745, 67054, 9999999], [-500, -321, 0, -23, 203, 203, 141, -53621, 137, 755, 76832, 76832], [-98, -22, -11, 1, 1000, -13, -35, -57, 13, -38, 6, 86, 79], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 911], [-43, -98, -22, -11, 0, 0, 1, -38, -53620, 24, 6, 24, -53621, 79], [-41, -97, -43, -98, -22, -11, 0, 0, 1, -35, 11111, -38, 24, 6, 79], [-11111, 11111, -22222, -33333, 22222, 33333], [-500, -321, 0, -23, 203, -207, 203, 141, -53621, 137, 76832, 76832], [-68, -15, 226, 912, 766, 677, 677, 789, 8934, 8934, 56789, 456798], [-900, -901, -77, -808, -204, -68, 21, 30, 21, 21, -206, 213, 161, 53, 54, 38, 911, 915], [-900, -902, -808, -204, 200, 21, 30, 21, -206, 213, 161, 161, 38, 911, 915, 915, 915, 915], [-98, -22, -11, 1, 1000, -13, -35, -57, 13, -38, 6, 87, 79], [-900, -808, -204, 2, -68, 21, 21, 22, -206, 213, 161, 29, 38, 911, 456, 915, 915], [-22, -34, 101, -876, -345, -345, -345, 11123, 11124, -999, 6114, 23413, 456, 855], [-22, -34, 101, -876, -345, 24, -345, 11123, 11124, -999, 6114, 23413, 456, 855], [-900, -900, -902, -40, -808, -204, 2, -68, -68, 21, 30, 21, 21, -206, 213, 161, 38, 914, 915, 915], [-43, -98, -98, -22, -11, 0, -11, 1, -35, -57, 13, -38, 24, 6, 86, 79, 79], [-900, -900, -902, -808, -204, 2, -68, -68, 2, -204, 21, 30, 21, -206, 213, 161, 911, 911, 914, 915, 915], [-8, -6, -4, -2, -2, 0, 3, 3, -86420, -97531, 7, -97531, 9], [-43, -98, -22, -11, 0, 0, -11, 1, -35, -57, 13, 13, -38, 24, 6, 86, 79], [100000, -11111, 11111, 11111, 11111, -22222, -33333, -999, 33333], [-900, -901, -77, -808, -204, -68, 21, 21, 21, -206, 5, 213, 161, 53, 38, 911, 915], [-7, -6, -5, -2, 0, 1, 3, -86420, -97531, 7, 9, 912, 24680], [100000, -11111, 11111, 22222, 33333, 855], [-11111, -37, 11111, -22222, -53621, -53621, -53621, -53621, -33334, 22222, 33333], [-900, -902, -204, 2, -68, 21, 30, 21, -206, 500, 213, 53, 161, 38, 911, 915, 915, 79], [-11111, -22222, -22223, -33333, 22222, 33333, 755], [-900, -808, -204, 2, -68, 21, 21, -206, 213, 161, 29, 38, 911, 456, 915, 915, 915], [-40, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 26, 44, 9, 45, 28, 28, 46, 29, 47, 48, 49, 78], [100000, 100000, -11111, 11111, 11111, -22222, -22222, -33333, 22222, 33333, 33333, 76832], [100000, -11111, -22222, -33333, 22222, 33333, 33333], [-43, -22, -11, 0, 0, 1, 24, 6, -53621, 28, 79], [-900, -902, -808, -204, -68, 21, 30, 21, 30, -206, 213, 161, 161, 38, 911, 915, 915, 915], [-900, -901, -901, -77, -808, -204, 21, 30, -206, 213, 161, 53, 911, 6114, 915], [-40, -41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, 13, 31, -37, 5, -16, 23, 23, -38, 50, 6, -17, 24, -39, 42, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 910, 38, 915, 915, 915], [-500, -40, -321, 0, -23, 203, -207, 203, -207, 141, -53622, 137, 76832, 76832], [-40, -20, -21, -32, -33, 1, 10, -12, -34, -12, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, -18, 25, 43, 8, -19, 26, 44, 9, 45, 28, 28, 46, 29, 47, 48, 49, 78], [-500, -501, -200, -321, 0, -321, -23, -86420, 142, 137, 755, 76831], [-40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 4, -876, 5, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 44, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49], [-900, -900, -902, -808, -204, 2, -68, -68, 30, 21, 3, -206, 213, 161, 38, 911, 914, 915, 915], [-43, -98, -22, -11, 0, 1, 1, -35, -57, -36, 13, -38, 24, 7, 86, 78, 79], [-43, -98, -11, 1, -35, -57, 3, 13, -38, 24, 6, 24, 86, 78, 79], [-40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 4, 5, 50, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 44, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49], [-98, -22, -808, -11, 0, 0, 1, -35, -57, 13, -38, 6, 79], [-40, -41, -21, -32, -21, -33, -11, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, 13, 31, -37, 5, -16, 23, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-900, -32, -808, -204, 2, -68, 21, 21, -206, 213, 161, 29, 911, 456, 915, 915, 915], [-40, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 11, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 26, 44, 9, 45, 28, 28, 46, 29, 47, 49, 49, 78], [-43, -98, -22, -11, 0, 0, 1, -38, -53620, 24, 6, 24, -53621, -53622, 79], [-42, -43, -98, -22, -11, 0, 0, -38, 24, 24, -53622, -53622, 79], [-500, 0, 11111, 203, -207, 203, 141, 141, -53621, 137, 76832, 76832], [-11111, -37, 11111, -22222, -22222, -22222, -22222, -53621, -33334, 22222, 33333], [-43, -98, -22, -11, 0, 0, 1, 1, -35, -57, 13, 13, -38, 24, 6, 85, 79], [-900, -900, -902, -808, -204, 2, -68, -68, 2, -204, 21, 30, 21, -206, 213, 161, 911, 914, 915, 915, 788], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 31, -37, 13, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 8, -19, 26, 44, 9, 27, 28, 46, 47, 29, 47, 29, 48, 49], [-11111, -11111, 11111, -22222, 22222, 22222, 33333, 855], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 914, 915, 915, 915], [-68, -11111, -15, -33334, 912, 766, 677, 8934, 8934, 56789, 456798], [-41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 30, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-22, -34, 101, -876, -345, 24, -345, 11123, 11124, -999, 6114, 6114, 23413, 456, 855], [-22, -34, 101, -876, -345, 24, 11123, 8, 11124, -999, 6114, 6114, 23413, 456, 855], [-900, -900, -902, -204, 2, -68, 21, 30, 21, -206, 500, 213, 53, 161, 915, 915, 79], [-500, -321, 0, -23, 203, 142, -53621, 137, 137, 76832], [-900, -900, -900, -902, -204, 2, -68, 21, 30, 21, -206, 500, 213, 53, 161, 915, 915, 79], [-85, 0, 10, 9, -129, -129, -816508, 8325, 874, 6745, 67054, 9999999], [-41, -22, 101, -876, -345, 11124, -999, 6114, 456, 855], [-8, -6, -4, -2, -2, -2, 0, 3, -86420, -97531, 7, 9], [-500, -501, 0, -23, -23, -36, 203, -345, -53621, 28, 137, 755, 76832], [-43, -43, -98, -21, -22, -11, 0, 1, -35, -57, 2, 3, 13, 24, 7, 86, 78, 79], [-900, -902, -204, 2, -68, 20, 21, 30, -206, 500, 213, 53, 161, 915, 915, 79], [-900, -900, -902, -204, 2, -68, 21, 21, 500, 213, 53, 161, 915, 915, 79], [-40, -20, -21, -32, -33, 1, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49, 78], [100000, -11111, 11111, 11111, 11111, -22222, -33333, -999, -999, 33333], [-41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 30, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -17, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-68, -15, -33334, 912, 765, 766, 677, 789, 8934, 8934, 56789, 456798], [-900, -902, -808, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 27, 910, 38, 915, 915, 915], [-40, -20, -21, -22, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 28, 46, 29, 47, 48, 49, 78], [-98, -22, -11, 1, 1000, -13, -35, -57, -13, 13, -38, 6, 86, 79], [-98, -22, -11, 0, 1, -35, -57, 13, -38, 6, 85, 86, 79], [100000, -11111, 11111, 11111, -22222, -33333, 22222, 22222, 86, 33333], [-43, -98, -22, -11, 0, 1, -35, -57, 3, -37, 13, -38, 24, 6, 24, 25, 86, 78, 79], [-40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 4, -876, 5, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 44, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49, 457], [-40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 4, -876, 5, 23, -38, 50, 6, -17, 24, 42, 7, -18, 25, -53621, 43, 44, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49], [-43, -98, -22, -11, 0, 1, -35, -57, 3, 13, -38, 24, 25, 7, 7, 86, 78, 79], [-500, -321, 0, -23, -86420, 203, 142, 137, 76832], [-85, -85, 0, 8, 9, -129, 8325, 874, 6745, 67054, 9999999], [-8, -6, -4, 1, -204, 3, -86420, -97531, 7, 9, 24680], [-43, -98, -98, -11, 0, 0, 1, 200, 24, 6, 28, 79], [-900, -901, -77, -808, -204, -68, 21, 21, 21, -206, 213, 161, 53, 38, 911, 38, 915, 915], [-43, -98, -22, -11, 0, 0, -11, -11, 1, -35, -57, 13, 13, -38, 24, 6, 86, 79], [-500, -200, -1000, 1000, 200, -333, -333, 500, 333], [-41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 23, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49, 79], [-900, -32, -808, -203, 2, -68, 21, 21, -206, 213, 161, 29, 911, 456, 915, 915], [-900, -900, -902, -40, -808, -204, 2, -68, -68, 21, 30, 21, 21, -206, 213, 213, 161, 38, 914, 915, 915], [-85, -85, 0, 8, 9, -129, 8325, 874, 875, 6745, 67054, 9999999], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 53, 38, 911, 912, 915], [100000, 100000, -11111, -11111, 11111, 11111, -22222, -33333, 22222, 86, 33333, 33333], [-900, -900, -204, 2, -68, 2, 21, 30, 21, 21, -206, 500, 213, 53, 161, 915, 915, 79], [-43, -98, -22, -22, -11, 0, 1, -35, -57, 3, -37, 13, -38, 24, 6, 24, 25, 86, 78, 79], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, -33333, 38, 911, 915], [-500, -500, 0, -23, -23, 203, -345, -53621, 28, 137, 76832], [-43, -98, -22, -11, 0, 0, 1, -35, -86420, 24, -53621, 766], [-68, -15, 226, 912, 677, 789, 8934, 8934, 56789, 456798], [-43, -98, -22, -11, 0, 0, -38, 24, -53621, 79], [-901, -902, -808, 20, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 915, 915], [-900, -901, -901, -902, -77, -808, -204, -68, 21, 30, -11111, 21, -206, 213, 161, 53, 38, 915], [-43, -98, -1, -22, -11, 0, 1, -35, -57, 13, -38, 24, 6, 79], [-98, -22, -11, 0, 1, -38, -38, 24, -53621, 37, 79], [100000, 100000, -11111, 11111, 11111, -22222, -53620, -33333, 22222, 33333, 33333, 76832], [-85, 0, 9, -129, -816508, 8324, 8325, 874, 6745, 67054, 9999999], [100000, 100000, -11111, -11111, 11111, -22222, -33333, 22222, 33333], [-900, -901, -77, -808, -204, 21, 30, -207, 53, 53, 38, 911, 915], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 161, 161, 910, 38, 915, 915, 915, 76831], [-6, -43, -98, -11, 0, 0, 1, -38, -38, 24, -53621, 79], [-500, -40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, -11111, 30, -36, 4, -15, 31, -37, 5, -16, 23, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, 44, 26, 44, 9, 28, 46, 29, 47, 29, 48, 49], [-900, -900, -204, 2, -68, 2, 21, 30, 21, 21, -206, 500, 53, 161, 915, 915, 79], [-901, -902, -808, 20, -204, -68, 21, 30, 21, 21, -206, 213, 161, 161, 38, 911, 915, 915], [-40, -20, -21, -32, -33, 1, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49, 78], [-86, 0, 54, -129, -816508, 8325, 874, 874, 6745, 67054], [100000, -11111, 11111, -22222, -33333, 22222, 22222, 86, 86, 33333], [-43, -98, -22, -11, 0, -11, 1, -35, -57, -57, 13, -38, 24, 6, 86, 79], [-900, -900, -902, -808, -204, 2, -68, -68, 2, -204, 21, 30, 21, -206, 213, 161, 911, 914, 915, 788], [-900, -901, -77, -808, -68, 21, 30, 21, -206, 500, 213, 161, 53, 161, 38, 911, 915], [-900, -902, -808, -204, -68, 21, 21, -206, 213, 161, 161, 38, 911, 914, 915, 915, 915], [-43, -98, -22, -11, 0, 0, 1, -35, -57, 13, 13, 13, -38, 24, 6, 86, 86, 79], [-900, -901, -77, -808, -68, 30, 21, -206, 500, 213, 161, 53, 161, 38, 911, 911, 915, 8324], [-40, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 45, 28, 28, 46, 29, 48, 49, 78], [-500, -200, -1000, 1000, 200, -333, 500, 333, 333], [-900, -77, -808, -68, 21, 30, 21, -206, 500, 213, 161, 53, 38, 911, 49, 915], [-500, -321, -808, 0, -23, 203, -207, 203, 141, -53621, 137, 76832, 76832], [100000, 100000, -11111, 11111, -33333, -999, 33333, 755, 99999], [-43, -98, -22, 0, -11, 0, 1, 1, -35, -57, -36, 13, -38, 24, 7, 86, 78, 79], [-900, -900, -902, 2, 21, 30, 21, -206, 500, 213, 53, 161, 915, 915, 79], [-901, -902, -808, 20, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 38, 915, 915], [-500, -500, -1, 0, -23, -23, 200, 203, -345, 28, 137, 76832], [-40, -20, -21, -32, -21, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 28, 46, 29, 47, 48, 49, 78], [-43, -98, -21, -22, -11, 0, 1, -35, -57, 2, 3, 13, 24, 7, 86, 78, 79], [-900, -808, -204, 2, -68, 21, 21, 22, 213, 161, 29, 38, 911, 456, 915, 915], [-43, -98, -22, -77, -11, 0, -11, 1, -35, -57, -57, 13, -38, 24, 6, 86, 86, 79], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 28, 46, 29, 47, 29, 48, 49], [-900, -900, -902, -902, -204, 2, -68, 21, 30, 21, -206, 500, 213, 53, 161, 915, 915, 79], [-43, -98, -22, -11, 0, -11, 1, -35, 13, -38, 24, 6, 86, 79], [-43, -98, -22, -11, 0, 0, 1, -35, -57, -35, 13, 13, 13, -38, 24, 6, 86, 86, 79], [-900, -902, -808, -204, -68, 21, 21, -206, 213, 161, 161, 161, 38, 911, 914, 915, 915], [100000, 100000, -11111, -11111, 11111, -22222, -33333, 22222, 86, 33333, 33333], [-900, -808, -204, 2, -68, 21, 21, -206, 213, 213, 161, 29, 38, 911, 915, 915, 915], [-900, -900, -902, -902, -204, 2, -68, 20, 21, 30, 21, -206, 500, 213, 53, 915, 915, 79, 855], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, 2, 11, -13, 3, -14, 30, -36, -36, 4, -15, 22, 31, -37, 13, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 8, -19, 26, 44, 9, 27, 28, 46, 47, 29, 47, 29, 48, 49, 49], [-11111, 11110, -22222, -22223, -33333, 22222, 33333], [-43, -98, -22, -11, 0, -11, 1, -35, -57, 13, -38, 6, 25, 86, 79, 788], [-40, -41, -20, -21, -32, -33, 1, 10, -12, -34, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, 26, 44, 26, 9, 27, 45, 28, 28, 46, 29, 47, 29, 48, 49], [-900, -77, -808, -204, -68, 21, 21, -206, -206, 213, 161, 53, 333, 38, 911], [-8, -6, -2, -2, 0, 3, 3, -86420, -37, -97531, 7, -97531, 9], [-68, -15, -987, 226, 912, 912, 766, 677, 789, 8934, 789, 56789, 456798], [-500, -200, -1000, 1000, 200, -333, 500, 333, 333, 334], [-43, -98, -98, -22, -11, 0, 1, 1, -35, -57, -36, 13, 11111, -38, 24, 7, 86, 78, 79], [-98, -22, -11, 0, 0, 1, -35, -86420, -38, 24, -53621], [-902, -40, -41, -21, -21, -33, 1, 10, -12, -34, 2, -13, -35, 3, -14, 30, -36, 30, 4, -15, 22, 31, -37, 4, -876, 5, 23, -38, 50, 6, 141, -17, 24, -39, 42, -18, 25, 43, 44, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49, 457], [-22, 101, -344, -876, -345, -345, 11124, -999, 6114, 456, 855], [-40, -20, -21, -32, -33, 1, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, -33333, 28, 29, 47, 48, 49, 49, 78], [-900, -808, -78, -68, 21, 30, 21, -206, 500, 213, 161, 53, 38, 911, 49, 49, 915], [-40, -41, -20, -21, -33, 1, 10, -12, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 4, -876, 5, 23, -38, -876, 50, 6, -17, 24, 42, 7, -18, 25, -53621, 43, 44, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49], [-900, -900, -902, 2, 2, 21, 30, 21, -206, 500, 213, 53, 161, 915, 915, 79], [-900, -901, -77, -808, -204, -68, 21, 30, 21, -206, 213, 161, 53, 38, 911, 915], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, 213, 161, 161, 38, 911, 915, 915, 915], [-43, -98, -22, -11, 0, 1, -35, -57, 3, 13, 23, -38, 24, 6, 24, 86, 78, 79], [-68, -86420, -15, 334, 227, 912, 915, 677, 788, 789, 8934, 8934, 56789, 456798], [-40, -41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, -15, 13, 31, -37, 5, 23, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 48, 49], [-7, -200, -43, -22, -77, -11, 0, -11, 1, -35, -57, -57, 13, 6, 37, 86, 86, 79], [-43, -98, -22, -11, 0, 0, 0, 1, -35, -86420, -38, 24, -53621], [-98, -22, -11, 0, 1, 1, -35, -57, -36, 13, 11111, -38, 24, 7, 86, 78, 79], [100000, 100000, -11111, 11111, 11111, -22222, -33333, 28, 86, 86, 33333, 33333], [-900, -901, -77, -808, -204, -68, 21, 30, 21, 21, -206, 213, 161, 53, 54, 38, 911, 911, 915], [-500, -500, -321, 0, -23, 31, 203, 142, -53621, 137, 755, 76832], [-43, -98, -22, -11, 0, 0, 1, -38, 24, -53621, 79], [-500, -500, -500, 0, -23, -23, -57, -206, 203, 28, 76832], [-900, -902, -42, -808, -204, -68, 21, 30, 21, -206, 213, 161, 161, 38, 911, 38, 914, 915, 915, 915], [-901, -902, -809, 20, -204, -68, 21, 30, 21, 21, -206, 213, 161, 161, 38, 911, 915, 915], [-43, -98, -22, -11, 0, 0, 1, -15, -38, -38, 24, 79], [-43, -98, -22, -11, 0, -33, 0, 0, 1, -35, -57, -35, 13, 13, 13, -38, 24, 6, 86, 86, 79], [-2, -43, -98, -11, 0, 30, -38, 24, -53621, 53, -999, 6114, 79], [100000, 100000, 100000, 100000, -57, -11111, 11110, 11111, 11111, -22222, -33333, 22222, 86, 33333], [-900, -808, -204, 2, -68, 21, 21, -206, -206, 213, 161, 29, 38, 911, 456, 915, 915], [-40, -20, -21, -32, -33, -33, 1, 10, -12, -34, 2, 11, -35, 11, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 26, 44, 9, 45, 28, 28, 46, 29, 47, 49, 49, 78], [-43, -98, -11, 1, -35, 3, 13, -38, 24, 6, 24, 86, 78, 79], [-43, -98, -43, -22, -11, 0, 0, 1, -809, -35, -57, -38, 24, 6], [-8, -6, -2, 0, 1, -36, 3, -86420, 5, -97531, 7, -97531, 9, 24680], [-8, -6, -2, 0, 1, 213, -97531, 7, 9, 912, 24680], [20, -68, -86420, -15, -86420, 227, 912, 915, 677, 788, 789, 8934, 8934, 456798], [-22, -34, 101, 31, -345, 24, 11123, 8, 11124, -999, 6114, 6114, 23413, 456, 855], [-15, 226, 912, 766, 677, 789, 8934, 8934, 56789, 456798], [100000, -11111, 11111, -22222, 11112, -33333, 22222, 22222, 86, 33333], [-43, -98, -22, 0, -11, 0, 1, -23, 1, -57, 13, -38, 24, 7, 86, 78, 79], [-500, -500, 0, -23, 203, -345, -53621, 28, 137, 76832], [-43, -98, -22, -11, 0, 0, -22, 1, -38, 24, -53621, 79], [-43, -98, -22, -11, 0, -11, 1, -35, -57, 13, -38, 24, 6, -53621, 86, 79, 9999999], [-43, -98, -22, -11, 0, -11, 1, -35, -57, 13, -38, 24, 6, 6, 86, 79], [-900, -902, -41, -42, -204, 2, -68, 21, 30, 21, -206, 213, 161, 38, 911, 914, 915, 915], [-40, -41, -20, -21, -32, -1, -33, 1, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 48, 49, 914], [], [-40, -20, -21, -22, -33, 10, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 28, 46, 29, 47, 48, 49, 78], [20, -68, -86420, -15, -86420, 227, 912, 915, 677, 677, 788, 789, 8934, 8934, 456798], [-43, -98, -22, 0, -11, -11, 1, -34, -35, -57, 13, -38, 24, 6, 86, 86, 79], [-43, -98, -22, -11, 0, 0, -38, 24, -345, -53621, 79], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 213, -345, 161, 161, 910, 38, 915, 915, 915], [-6, -43, -98, -22, -11, 0, -11, 1, -57, 13, 13, -38, 24, 6, 6, 86, 79], [100000, -11111, 11111, 11111, 11111, 11111, -22222, -33333, -999, -999, 33333], [-43, -22, -11, 0, 0, 1, 24, 6, 28, 79], [-43, -98, -98, -22, -22, -11, 0, 1, -35, -57, 3, -37, 13, -38, 24, 6, 24, 25, 86, 78, 79], [-86, -43, -98, -22, 0, -11, 0, 1, -23, 1, -57, 13, -38, 24, 7, 86, 78, 79], [-22, -34, 101, -876, -345, 24, 11123, 8, 11124, -999, 23412, 6114, 6114, 23413, 456, 855], [-500, -500, -321, 0, 0, -23, 1, 31, 203, 142, -53621, 137, 755, 76832], [-68, -15, -987, 226, 912, 912, 766, 677, 789, 789, 56789, 456798], [-43, -98, -22, -11, 0, 0, 1, -35, 11110, -38, 24, 6, 79], [-900, -901, -77, -808, -68, 21, 30, 21, 30, -206, 500, 213, 161, 53, 161, 38, 911, 915], [-900, -900, -902, -40, -808, -204, 2, -68, -68, 21, 30, 21, -206, 213, 161, 38, 914, 915, 915], [-900, -900, -902, -43, 2, 2, 21, 30, 21, -206, 213, 53, 161, 161, 915, 915, 79], [-500, -321, -808, 0, -23, 202, -207, 203, 141, -53621, 137, 76832, 76832], [-900, -901, -77, -808, -68, 30, 21, -206, 500, 213, 161, 53, 161, 38, 911, 911, 915, 8323, 8324], [100000, 100000, -11111, 11111, 11111, -22222, 11112, -33333, 28, 86, 86, 33333, 33333], [-15, -97531, -33334, 912, 677, 789, 8934, 8934, 56789, 456798], [-900, -808, -204, 2, -68, 21, 21, 22, 23, 213, 161, 29, 38, 911, 456, 915, 915], [-22, -34, 101, -876, -345, -345, -345, -345, 11123, 11124, -999, 6114, 23413, 456, 855], [-7, -200, -43, -77, -11, 0, -11, 1, -35, -57, -57, 13, 6, 53, 37, 86, 86, 86, 79], [-40, -20, -21, -32, -33, 1, -12, -34, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, 26, -19, 26, 44, 9, 27, 45, -33333, 28, 29, 47, 29, 48, 49, 49, 78], [-43, -98, -43, -22, 0, -11, 0, 1, 1, -35, -57, -36, 13, -38, 24, 7, 86, 78, 915, 79], [-41, -20, -21, -32, -33, 1, 10, -12, 10, -34, 2, 11, -13, -35, 3, -14, 30, -36, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 23, 6, -17, 24, -39, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 29, 47, 29, 48, 49, 79], [-41, -21, -32, -33, 1, 10, -12, -34, 2, 11, 2, -35, 3, -14, 30, 30, -36, -14, 30, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 44, 9, 27, 45, 28, 46, 47, 49], [-900, -902, -808, -204, -68, 21, 30, 21, -206, 161, 910, 38, 915, 915, 915, 76831], [-902, -808, -204, -68, 21, 21, -206, 213, -987, 161, 161, -899, 38, 911, 915], [-500, -200, -1001, 1000, 200, -333, 500, 333], [-40, -20, -21, -32, -33, -33, 1, 10, -12, -34, 10, 2, 11, -35, 3, -14, 30, -36, -14, 4, -15, 22, 31, -37, 5, -16, 23, -38, 50, 6, -17, 24, -39, 42, 42, 7, -18, 25, 43, 8, -19, 26, 26, 44, 9, 45, 28, 28, 46, 29, 47, 912, 49, 49, 78], [100000, -11111, 11111, -22222, 11112, -22223, -33333, 22222, 22222, 86, 33333, 33334], [100000, 100000, -11111, 11111, 11111, -22222, -33333, 22222, 912, 86, 33333, 33333], [-901, -77, -808, -204, 21, 30, -207, 53, 53, 38, 911, 33333, 915], [100000, 100000, -11111, -11112, 11111, -22222, -33333, 22222, 33333], [-900, -900, -902, -902, -204, 2, -68, 21, 30, 21, 21, -206, 500, 213, 53, 161, 915, 915, 79], [-22, -34, 101, -876, -345, 24, 11123, 8, 11124, -999, 11124, 6114, 6114, 23413, 456, 855], [-86, 0, 54, -816508, 8325, 874, 6745, 67054, 9999999], [-900, -900, -902, -6, -808, -204, -68, 21, 30, 21, -206, 161, 161, 910, 38, 915, 915, 915, 76831], [-22, 101, -345, 11124, -999, 6114, 23413, 456, 855], [-900, -901, -77, -808, -808, 1000, -204, 21, 30, -206, 213, 161, 53, 38, 911, 914]]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/146", "prompt": "\ndef specialFilter(nums):\n    \n\n    ans, odd = 0, [\"1\", \"3\", \"5\", \"7\", \"9\"]\n    for num in nums:\n        if num > 10 and str(num)[0] in odd and str(num)[-1] in odd:\n            ans += 1\n    return ans\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef specialFilter(nums):\n    \n\n    ans, odd = 0, [\"1\", \"3\", \"5\", \"7\", \"9\"]\n    for num in nums:\n        if num > 10 and str(num)[0] in odd and str(num)[-1] in odd:\n            ans += 1\n    return ans\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef specialFilter(nums):\n    \n\n    ans, odd = 0, [\"1\", \"3\", \"5\", \"7\", \"9\"]\n    for num in nums:\n        if num > 10 and str(num)[0] in odd and str(num)[-1] in odd:\n            ans += 1\n    return ans\n\n", "raw_modification": "```python\n<code_start>\ndef specialFilter(nums):\n    ans = 0\n    odd = [\"1\", \"3\", \"5\", \"7\", \"9\"]\n    \n    # Create a redundant copy of the list\n    redundant_nums = nums[:]\n    \n    for num in redundant_nums:\n        # Convert the number to string multiple times unnecessarily\n        num_str = str(num)\n        num_str_first = str(num_str[0])\n        num_str_last = str(num_str[-1])\n        \n        # Check if the number is greater than 10 in a convoluted way\n        if num > 5 and num > 7 and num > 8 and num > 9 and num > 10:\n            # Check if the first digit is odd in a convoluted way\n            if num_str_first in odd and num_str_first in odd and num_str_first in odd:\n                # Check if the last digit is odd in a convoluted way\n                if num_str_last in odd and num_str_last in odd and num_str_last in odd:\n                    ans += 1\n    \n    # Perform a redundant operation\n    redundant_operation = sum([1 for _ in nums if _ > 0])\n    \n    return ans\n<code_end>\n```", "modification": "\ndef specialFilter(nums):\n    ans = 0\n    odd = [\"1\", \"3\", \"5\", \"7\", \"9\"]\n    \n    \n    redundant_nums = nums[:]\n    \n    for num in redundant_nums:\n        \n        num_str = str(num)\n        num_str_first = str(num_str[0])\n        num_str_last = str(num_str[-1])\n        \n        \n        if num > 5 and num > 7 and num > 8 and num > 9 and num > 10:\n            \n            if num_str_first in odd and num_str_first in odd and num_str_first in odd:\n                \n                if num_str_last in odd and num_str_last in odd and num_str_last in odd:\n                    ans += 1\n    \n    \n    redundant_operation = sum([1 for _ in nums if _ > 0])\n    \n    return ans\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[[5, -2, 1, -5]], [[15, -73, 14, -15]], [[33, -2, -3, 45, 21, 109]], [[43, -12, 93, 125, 121, 109]], [[71, -2, -33, 75, 21, 19]], [[1]], [[]], [[24, -25, 9, 37, -71, -18]], [[57, -23, -15, 42, 99, 104]], [[6, 89, -12, 77, 13, 196]], [[101, -35, 16, 44, -67]], [[22, -33, -46, 89, -91, 128]], [[55, -62, 7, 99, 23, 18]], [[14, -8, 62, 71, -123, 39]], [[10, 12, 22, -76, 37]], [[39, 153, 240, -339]], [[11, 232, 324, -876, 799]], [[57, -23, -15, 42, 99, 56, 104, 42]], [[6, 89, -12, 77, 13, 196, 196]], [[24, -25, 37, -71, -18]], [[-23, -15, 42, 99, 56, 104, 42]], [[71, 55, -62, 7, 99, 23, 18]], [[57, -23, -15, 42, 99, 56, 104, 42, 42]], [[24, -25, 9, 37, -71, -91, -18, -71, -18]], [[24, -25, 9, 37, -71, -91, -71, -18]], [[57, -15, 42, 99, 56, 104, 42]], [[6, 12, 77, 13, 196, 196, 89, 196]], [[24, -25, 9, 37, -71, -35, -25]], [[-23, -15, 42, 99, 56, 104, 42, 104]], [[57, -23, -15, 42, 56, 104, 42, 42]], [[104, 14, -8, 62, 72, 39]], [[57, -23, -15, 42, 56, 104, 42, 42, 104]], [[10, 12, 22, 12]], [[6, 12, 22, 12]], [[6, 12, 324, 12]], [[14, -8, 62, 5, 6, -123, 39]], [[24, -25, 9, -91, -71, -91, -71, -18]], [[39, 152, 240, -339]], [[57, 57, -15, 42, 99, 104]], [[24, -25, 9, 37, -71, -17]], [[44, 152, 240, -339]], [[-23, -15, 42, 99, 56, 42]], [[89, -25, 9, -91, -71, -91, -71, -18, 5]], [[57, -23, -15, -76, 99, 104]], [[11, 232, 324, -877, -876, 152, 799, 324]], [[14, -8, 62, 5, 6, -76, 6]], [[-8, 62, 37, 6, -76, 6]], [[71, 55, -62, 7, 99, 23, 18, 99]], [[239, 39, 152, 240, -339]], [[39, 154, 240, -339]], [[10, 22, -76, 37]], [[101, -35, 16, 44, -67, -67]], [[39, 155, 240, -339]], [[39, 152, 241, -339]], [[24, -25, 9, -91, -67, -71, -91, -71, -18]], [[24, -25, 9, -71]], [[57, -15, 99, 56, 104, 42]], [[240, 39, 152, 241, -339]], [[39, 151, 152, 240]], [[-23, -15, 42, 99, 56, 104, -339, 42, 104]], [[57, -23, -15, 42, 104, 42, 42, 104, 42]], [[71, 55, -62, 7, 99, 23, 18, 99, 18]], [[39, 152, 240, 39]], [[71, 55, -62, 7, 99, 23, 18, 71, 55]], [[239, 39, 152, -35, 240, -339]], [[-23, -15, 42, 56, -339, 42, 104]], [[-23, -15, 42, 99, 56, 104, 42, 104, 56]], [[24, -25, 9, 12, 37, -71, -35, -25]], [[-8, 6, 62, 37, 6, -76, 36, 6]], [[6, 89, -12, 77, 196, 196]], [[39, 152, 241]], [[239, 39, 152, 39, 240, -339, -339]], [[240, 39, 152, 241]], [[-62, 232, 324, -877, -876, 152, 799, 324]], [[11, 232, 324, -877, 62, -876, 152, 799]], [[57, -23, -15, 42, 99, 56, 104, 42, 99]], [[39, 153, 99, 240, -339]], [[39, 104, 152, 240, 152]], [[12, 239, 152, 39, 240, -339]], [[10, 22, -76, 37, 10]], [[-25, 9, 12, 37, -71, -35, -25]], [[57, -15, 99, 56, 104, 42, 104]], [[57, -15, -123, 99, 56, 104, 42]], [[101, -35, 44, -67, -67]], [[55, -62, 7, 23, 18]], [[14, -8, 62, 5, 6, -76, 6, 14]], [[14, -8, 62, -123, 39, -8]], [[14, -8, 62, -18, 6, -76, 6, 5]], [[24, -25, -876, 9, 37, -71, -18]], [[55, -62, 7, 241, 99, 23, 18]], [[-23, 42, 99, 56, 104, 42]], [[101, -35, 16, 44, -67, 42]], [[76, 6, 89, -12, 77, 13, 196, 196]], [[-23, -16, 42, 99, 56, 104, 42, 104]], [[57, -15, 56, 104, 42]], [[57, -23, -15, 42, 105, 104, 42, 42, 44, 104, 42]], [[-23, -16, 99, 56, 104, 42, 104]], [[55, -62, 7, 24, 18]], [[22, -33, -46, -91, 128]], [[-23, -15, 42, 99, 154, 42, -15]], [[14, -8, -18, 6, -76, 6, 6]], [[240, 39, 152, 240, -339]], [[-62, 232, 324, -46, -876, 152, 799, 324]], [[39, 240]], [[39, 241, 240, 39]], [[101, -35, 62, 16, 44, -67, 42]], [[123, 505, 789, 111]], [[63, 24, 84, 75, -56, 13]], [[11, 12, 13, 14, 15, 16]], [[100, 101, 102, 103, 104]], [[-324, 456, 1111, 7113]], [[-2, 4, 6, 8, 10, 12, 15]], [[11, -12, 93, -125, 121, 109]], [[33, -2, -3, 45, 21, 109, 121, 357, 1892]], [[120, 122, 414, 214, 615, 218, 8518, 21517, 2123, 918]], [[-123, 456, 789, 111]], [[100, 101, 102, 103, 21517, 104]], [[-2, 4, 6, 8, 14, 10, 12, 15]], [[120, 122, 414, 214, 615, 8518, 21517, 2123, 918]], [[11, -12, 93, -125, 121, 109, -125]], [[-12, 93, -125, 1111, 109]], [[123, 505, 505, 789, 111]], [[456, 789, 111]], [[100, 101, 102, 103, 104, 102]], [[-2, 4, 6, 8, 14, 10, 12, 103, 15]], [[100, 101, 102, 103]], [[11, 12, 13, 14, 15, 16, 13]], [[120, 122, 414, 214, 357, 8518, 21517, 2123, 918]], [[33, -2, -3, 45, 21, -2, 121, 357, 1892, -2]], [[11, 12, 103, 14, 15, 16]], [[33, 8, -3, 45, 21, -2, 121, 357, 1892, -2]], [[-123, 456, 789, 456]], [[-122, 456, 789, 456]], [[-123, 456, 789, 456, 789]], [[33, -2, -3, 45, 21, 109, 121, 1892]], [[120, 122, 414, 214, 357, 8518, 21517, 2123, 918, 2123]], [[120, 122, 414, 214, 218, 8518, 21517, 2123, 918]], [[123, 21517, 789, 111]], [[-123, 456, 1111, 111]], [[63, 24, 84, 75, -56]], [[120, 121, 122, 214, 357, 8518, 21517, 2123, 918]], [[-324, 4, 6, 8, 14, 12, 15]], [[123, 505, 788, 111, 123]], [[100, 101, 102, 102]], [[120, 122, 414, 214, 357, 8518, 21517, 2123, 918, 2123, 21517]], [[15, 11, 12, 103, 14, 12, 16]], [[11, -12, 93, -125, 121, 109, 93, 11]], [[-123, 93, 456, 789, 456]], [[100, 101, 103, 102]], [[120, 122, 414, 109, 615, 8518, 21517, 2123, 918]], [[789, 123, 789, 111]], [[-324, 4, 6, 8, 14, 12, 6]], [[100, 102, 103, 103]], [[100, 102, 102, 103, 104]], [[-324, 456, 1111, 7113, 1111]], [[120, 122, 414, 214, 8518, 21517, 2123, 918]], [[63, 24, 84, 75, -56, 214, 13]], [[456, -123, 93, 456, 111, 456]], [[12, 789, 13, 15, 16]], [[100, 102, 102, 103, 104, 100, 102, 102]], [[123, 21517, 789, 111, 789]], [[63, -55, 84, 83, 75, -56, 214, 13]], [[123, 505, 504, 789, 111]], [[63, 24, 84, 75, -56, 214, 13, -56]], [[-12, 93, -125, 121, 109, 10, -125, 11]], [[123, 505, 122, 504, 789, 111, 789, 504, 789]], [[121, 120, 121, 122, 214, 357, 8518, 21517, 2123, 918, 358, 357]], [[-2, 4, 6, 8, 14, 10, 1892, 103, 15, 10]], [[-122, 456, 789, 455]], [[120, 121, 122, 214, 357, 8518, 21517, 100, 918]], [[-123, 456, 1111, 111, 1111]], [[33, -2, -3, 46, 21, -2, 121, 357, 1892, -2, -2]], [[100, 101, 102, 103, 104, 102, 102]], [[123, 505, 504, 789, 504]], [[120, 122, 414, 214, 357, 8518, 21517, 918, 2123, 21517]], [[11, 12, 13, 14, 15, 16, 16]], [[120, 121, 414, 214, 357, 8518, 21517, 2123, 918, 2123, 21517]], [[455, 123, 789, 111, 21518, 789]], [[-2, 4, -324, 6, 8, 10, 12, 15]], [[-122, 101, 102, 103]], [[100, 120, 121, 122, 214, 357, 8518, 21517, 100, 918]], [[100, 101, 103, 104, 102]], [[12, 789, 13, 15, 16, 15]], [[1892, 121, 122, 214, 357, 8518, 21517, 100, 918]], [[456, 789, 111, 456]], [[-324, 456, 1111, 7113, 63]], [[120, 414, 214, 8518, 21517, 2123, 918]], [[-123, 456, 112, 1111]], [[33, -2, 45, 21, 109, 121, 357, 1892]], [[456, 789]], [[-12, 93, -125, 1111, 109, 109]], [[100, 8518, 102, 103, 104, 102]], [[63, -55, 84, 83, 75, -56, 13, 13]], [[-2, 4, 6, 8, 14, 10, 123, 103, 15, 10]], [[11, -12, 93, -125, 121, 109, 93, 11, -12]], [[120, 121, 122, 357, 8518, 21517, 100, 918]], [[789, 93, -125, 121, 109, 10, -125, 11]], [[120, 122, 414, 214, 415, 357, 8518, 21517, 2123, 122, 918, 2123, 21517, 918]], [[120, 122, 214, 218, 8518, 21517, 2123, 918, 2123]], [[120, 121, 122, 214, 414, 8518, 21517, 2123, 918]], [[63, -55, 84, 83, 75, -56, 13, 12, -55]], [[123, 505, -123, 789, 111]], [[123, 505, 789, -3, 111]], [[-12, 93, -125, 122, 1111, 109, 110]], [[100, 101, 103, 83, 102]], [[11, -12, 93, 121, 109, 93, 11, -12, 93, -12]], [[102, 505, 789]], [[11, -12, 93, -125, 10, 121, 109, 93, 11]], [[102, 505, 789, 102]], [[789, 93, -125, 121, 109, 10, -125, 11, 10]], [[-324, 456, 1111, 7113, 63, 1111]], [[615, 4, 6, 5, 14, 12, 6]], [[11, -12, 93, 121, 109, 93, 11, -12, 93, -12, 121]], [[100, 102, 103, 104]], [[120, 122, 414, 4, 615, 8518, 21517, 2123, 918]], [[615, 4, 6, 5, 505, 12, 6]], [[102, 790, 505, 789, 102]], [[11, -12, 93, 121, 109, 93, 11, 8, 93, -12, 121]], [[120, 122, 13, 4, 615, 8518, 21517, 2123, 918]], [[11, 12, 13, 14, 14, 16, 16]], [[-123, 456, 789, 111, 111]], [[104, 456, -123, 93, 456, 111, 456]], [[63, -55, 84, 83, 75, -56, 13, 12, -55, 63]], [[100, 101, 102, 103, 21517, 104, 104]], [[120, 122, 414, 214, 415, 45, 357, 8518, 21517, 2123, 122, 918, 2123, 21517, 918]], [[-123, 456, 789, 456, -123]], [[120, 121, 122, 357, 8518, 21517, 100, 919]], [[11, 12, 13, 14, 16]], [[100, 101, 102, 103, 104, 103]], [[6, 100, 102, 102, 103, 104]], [[104, 456, -123, 93, 456, 110, 456]], [[100, 102, 103, 103, 103]], [[120, 121, 122, 214, 357, 8518, 8518, 21517, 100, 918]], [[789, 93, -125, 121, 109, 10, -125, 11, 10, 789]], [[-122, 456, 789, 456, -122]], [[100, 101, 505, 83, 102]], [[12, 790, 13, 15, 16]], [[123, 505, 789, 790]], [[24, 84, 75, -56, 214, 13, -56]], [[120, 121, 414, 214, 357, 8518, 21517, 2123, 918, 2123, 21517, 214]], [[12, 415, 789, 13, 15, 16]], [[456, 112, 111, 456]], [[63, 24, -57, 84, 75, -56, 24]], [[456, -123, 93, 455, 111, 456, -123]], [[63, -55, 84, 83, 75, 13, 12, -55, 63]], [[123, 505, 789, -3, 111, -3]], [[789, 93, -125, 121, 109, 24, 10, 112, -125, 11, 11, 10, 789]], [[-55, 84, 83, 75, -56, 13, 12, -55, 63]], [[112, -324, 456, 1111, 7113, 456, 100, 63]], [[101, 100, 8518, 103, 104, 102]], [[-122, 101, 102, 101]], [[100, 102, 102, 100, 103, 104]], [[84, 75, -56, 214, 14]], [[11, 12, 103, 1892, 15, 16]], [[6, 100, 102, 102, 103, 104, 6]], [[615, 4, 5, 14, 12, 6]], [[100, 101, 102, 103, 21517]], [[456, 789, 456, -123, 456]], [[123, 21517, 789, 111, 789, 111]], [[-123, 93, 455, 789, 456]], [[357, 21518, 120, 122, 414, 213, 357, 8518, 21517, 2123, 918, 2123, 21517, 2123]], [[-2, 1111, 4, 6, 8, 10, 12, 15]], [[120, 121, 122, 122, 214, 357, 8518, 21518, 21517, 100, 918]], [[11, -12, 93, 121, 109, 93, 11, 93, -12, 2123, 121, 11, 121]], [[101, 45, 8518, 103, 104, 102]], [[-2, 4, 8, 14, 10, -324, 123, 103, 15, 10]], [[120, 121, 122, 357, 8518, 100]], [[455, 123, 789, 111, 121, 21518, 1892]], [[83, 102, 102, 103, 104, 100, 102, 102]], [[103, 101, 102, 102]], [[64, 24, 84, 75, -56, 214, 13]], [[120, 122, 414, 214, -324, 8518, 21517, 2123, 918, 8518]], [[456, -123, 93, 456, 456, 456]], [[123, 789, 111, 789, 111, 109, 789]], [[12, 103, 1892, 15, 16, 1892, 1892]], [[123, 504, 505, 505, 789, 111]], [[100, 8518, 102, 103, 104, 102, 8518]], [[99, 100, 101, 102, 100, 99]], [[789, 93, -125, 213, 121, 109, 10, -125, 10, 10, 789]], [[12, 1892, 15, 16, 1892, 1892]], [[456, -123, 93, 93, 455, 111, 456, -123]], [[120, 121, 122, 63, 214, 357, 8518, 21517, 2123, 918]], [[-2, 4, 8, 10, 12, 15]], [[120, 122, 414, 214, 357, 8518, 21517, 2123, 415, 918]], [[11, 12, 14, 14, 16, 16]], [[101, 45, 8518, 103, 104, 505, 102, 101]], [[100, 101, 103]], [[123, 21516, 789, 111, 789]], [[100, 8518, 103, 104, 102, 8518]], [[-2, 4, 6, 8, 12, 15]], [[11, 12, 14, 14, 16, 455]], [[6, 100, 100, 102, 102, 104, 6, 100]], [[100, -123, 102, 103, 103]], [[11, 12, 21517, 14, 16, 455]], [[120, 414, 214, 8518, -12, 21517, 2123, 918]], [[11, 12, 14, 14, 16, 16, 12]], [[11, 1891, 12, 103, 1892, 15, 17]], [[120, 122, 414, 214, -324, 8518, 21517, 2123, 918, 8518, 414]], [[15, 11, 12, 103, 14, 12, 15]], [[11, -12, 93, -125, 121, 109, -123, 11]], [[120, 122, 414, 214, 415, 45, 357, 8518, 21517, 2123, 122, 918, 2123, 21517, 918, 21517]], [[100, 102, 103, 104, 111, 104]], [[63, 24, 84, 75, -56, 214, 12]], [[-2, 15, 75, -56, 214, 14]], [[100, 101, 505, 83]], [[11, -12, 93, -125, 121, 109, -123, 11, 109]], [[100, 101, 505, 83, 102, 102]], [[33]], [[-3, 123, 789, 111, 789, 111, 109, 789]], [[-324, 457, 1111, 7113, 1111]], [[33, 33]], [[121, 120, 121, 122, 214, 357, 8518, 21517, 2123, 918, 358, 357, 358]], [[456]], [[101, 102, 101]], [[100, 101, 102, 103, 21517, 102]], [[11, -12, 93, 121, 109, 93, 11, -12, 93, -12, 11]], [[120, 122, 414, 214, 8518, 21517, 2123, 918, 2123]], [[121, 120, 121, 122, 214, 357, 8518, 21517, 2123, 358, 357, 358]], [[11, -125, 14, 14, 16, 16]], [[63, -55, 84, 83, 75, -56, 13, 12, 64, -55, 63]], [[120, 122, 414, 214, 357, 8518, 21517, 2123]], [[100, 101, 102, 100, 99, 102]], [[-122, 456, 789, 456, -122, 456]], [[100, 101, 102, 103, 788, 104, 102]], [[-324, 456, 1111, 7113, 1111, 1111]], [[100, 99, 100, 101, 102, 100, 99]], [[102, 102, 103, 104, 10, 100, 102, 102]], [[-123, 456, 457, 111, 1111]], [[101, 8518, 103, 102, 102]], [[789, 93, -125, 121, 109, 111, -125, 11]], [[120, 122, 414, 214, -324, 415, 21517, 2123, 918, 8518]], [[63, -55, 84, 83, 75, -56, 13, 12, -55, 63, 63]], [[11, 12, 13, 14, 16, 16]], [[120, 121, 122, 357, 8518, 21517, 100, 919, 8518]], [[505, 8, -3, 45, 21, -2, 121, 357, 1892, -2]], [[-122, 46, 456, 789, 456, 789]], [[11, 12, 14, 15, 16]], [[-123, 11, 456, 789, 111]], [[120, 121, 122, 357, 8518, 21517, 920, 100, 919, 8518]], [[-12, 93, -125, 109]], [[-324, 1111, 7113]], [[15, 11, 14, 103, 14, 12, 16]], [[122, 505, 84, 789, -3, 111]], [[11, 1891, 12, 103, 1892, 17]], [[-123, 456, 21, 1111, 111, 1111]], [[11, -12, 93, 121, 109, 93, 11, -12, 93, -12, 121, 11]], [[11, 12, 104, 14, 14, 16, 16]], [[100, 102, 103, 103, -3, 103]], [[100, 101, 505, 83, 101]], [[33, -2, -3, 45, 21, -2, 121, 357, 1892, -2, -2]], [[101, 45, 13, 103, 104, 505, 102, 101]], [[12, 103, 14, 15, 16]], [[120, 121, 214, 357, 8518, 21517, 2123, 918, 2123, 21517]], [[120, 122, 414, 121, 214, 357, 8518, 21517, 2123, 415, 918]], [[-12, 93, 109, 358, 109]], [[120, 122, 414, 214, 218, 8518, 21517, 2123, 918, 120]], [[120, 21, 414, 214, 21516, 357, 8518, 21517, 2123, 918, 2123]], [[-123, 11, 12, 456, 789, 111]], [[24, -57, 84, 75, -56, 24, -56]], [[11, 13, 14, 15, 16, 11, 15]], [[-2, 4, 8, 10, 12]], [[789, 102]], [[24, 21517, 84, 75, -56, 214, 13, -56]], [[102, 505, 789, 102, 102, 789]], [[100, 213, 102, 103]], [[120, 122, 414, 214, 357, 8518, 21517, 918, 2123, 21517, 21517]], [[122, 102]], [[-2, 4, 6, 8, 10, 12, 15, 10]], [[12, 13, 15, 16, 15]], [[11, 1891, 12, 103, 1892, 15, 17, 103]], [[122, 102, 122]], [[-123, 456, 357, -124, 789, 456, -123]], [[-2, 15, 74, -56, 214, 14]], [[14, 11, 12, 103, 14, 12, 16, 14]], [[120, 122, 414, 122, 109, 615, 8518, 21517, 2123, 918]], [[120, 21, 414, 214, 21516, 357, 8517, 21517, 2123, 918, 2123]], [[124, 789, 111, 789, 108, 789]], [[123, 505, 789, -3, 111, -3, 789]], [[11, 1891, 12, -123, 103, 1892, 15, 17, 103]], [[357, 21518, 120, 122, 414, 213, 357, 8518, 21517, 2123, 918, 2123, 21517, 2123, 213]], [[11, 14, 14, 103, 12]], [[357, 120, 122, 414, 213, 357, 8518, 21517, 2123, 918, 2123, 21517, 2123]], [[-324, 4, 8, 11, 12, 6, 11]], [[15, 11, 14, 103, 14, 12, 455, 16, 103]], [[121, 120, 121, 122, 214, 357, 8518, 21517, 2123, 918, 21517]], [[-12, 93, -126, 8517, -13, 109, 109]], [[120, 121, 122, 214, 357, 8518, 21518, 21517, 100, 918]], [[121, 122, 8518, 21517, 100, 919]], [[-123, 456, 789, 111, 111, 111, 456]], [[120, 122, 414, 122, 109, 8518, 615, 8518, 21517, 2123, 918]], [[63, -55, 121, 83, 75, -55, 13, 12, -55, 63, 63]], [[120, 121, 214, 357, 8518, 21517, 2123, 121, 918, 2123, 21517]], [[120, 121, 122, 214, 357, 8518, 2123, 918, 21517]], [[123, 789, 111, 789, 789, 111, 109, 789]], [[789, 123, 789, 789, 111]], [[120, 121, 122, 214, 357, 8518, 8518, 21517, 918]], [[120, 122, 414, 214, 357, 8518, 21517, 2123, 918, 2123, 21517, 357]], [[12, 1892, 16, 1892]], [[100, 101, 102, 100, 99, 102, 100]], [[-2, 4, -324, 6, 8, 10, 12, 15, 6]], [[12, 103, 1892, 15, 15, 1892, 1892]], [[83, 102, 103, 104, 100, 102]], [[-123, 11, 456, 789, 111, -123]], [[-2, 4, 6, 8, 14, 10, 123, 103, 15, 10, 63, 8]], [[-2, 4, 6, 8, 12, 15, 12]], [[10, 4, 8, 10, 12]], [[101, 8518, 103, 104, 102, 8518]], [[120, 122, 414, 214, -324, 415, 21517, 2123, 918, 8518, 21517]], [[33, 615, 45, 21, 109, 121, 357, 1892]], [[120, 122, 214, 218, 8518, 21517, 2123, 918, 2123, 122, 2123]], [[100, 120, 121, 122, 214, 357, 8518, 21517, 918]], [[120, 122, 414, 213, 357, 8518, 21517, 2123, 918, 2123, 21517, 2123]], [[-2, 4, -324, 6, 7, 10, 12, 15, 6]], [[63, -55, 84, 83, 75, -56, 214, 13, 63]], [[63, 24, 84, -57, -56, 24]], [[120, 121, 122, 122, 214, 74, 357, 8518, 21518, 21517, 100, 918]], [[1892, 121, 122, 214, 357, 21517, 8518, 21517, 100, 918]], [[63, -55, 84, 83, 75, -55, 13, 84, 12, -55]], [[63, -55, 84, 83, 75, -56, 13, 13, -55]], [[1891, 109, 12, 103, 1892, 15, 17, 103]], [[11, 93, 104, -55, 14, 16, 16]], [[12, 415, 789, 14, 13, 15, 16, 13]], [[615, 4, 5, 14]], [[120, 122, 8519, 414, 214, -324, 8518, 21517, 2123, 918, 8518]], [[-55, 84, 83, 12, 75, -56, 13, 12, -55, 63]], [[11, -12, 93, 121, 109, 93, 11, -12, 93, -12, 121, 121]], [[120, 121, 414, 214, 357, 8518, 21517, 2123, 918, 2123, 21517, 918]], [[15, 11, 14, 103, 14, 45, 455, 16, 103]], [[33, 8, -4, 45, 21, -2, 121, 357, 1892, -2]], [[120, 93, 414, 214, -324, 415, 21517, 918, 8518]], [[100, 102, 103, 104, 102, 8518]], [[123, 505, 122, 504, 789, 789, 111, 789, 504, 789, 122]], [[-2, 4, 8, 14, 10, -324, 123, 103, 16, 10]], [[101, 8518, 103, 102, 101]], [[12, 1892, 15, 16, 1891, 1892]], [[100, 102, 102, 103, 100, 102, 102, 102]], [[-2, 4, 6, 8, 14, 10, 1892, 103, 15, 10, 103]], [[-324, 4, 8, 11, 12, 6, 11, 12, 11]], [[505, 8, -3, 504, 45, 21, -2, 121, 357, 1892, 21517]], [[100, 102, 103]], [[120, 122, 214, 8518, 21517, 2123, 918, 2123]], [[11, -12, 93, -125, 10, 121, 109, 93, 11, 10]], [[120, 122, 122, 214, 357, 8518, 21517, 2123, 918]], [[100, 101, 102, -2, -122, 104, 103]], [[101, 102, 102]], [[11, -13, 93, 121, 109, 93, 11, -12, 93, -12, 121]], [[-123, 456, 789, 111, 111, 456, 111]], [[63, 24, 84, 75, 17, -56, 214, 13]], [[99, 100, 101, 102, 103, 102, 21517]], [[7, -125, 46, 1111, 109, -125]], [[121, 120, 121, 122, 214, 358, 8518, 21517, 2123, 358, 357, 358]], [[-2, 4, -324, 6, 8, 11, 12]], [[-122, 456, 789, 456, 456, -122]], [[-11, -12, 93, -125, 790, 1111, 109]], [[100, 8518, 102, 103, 104, 102, 8518, 8518]], [[788, 4, 6, 8, 14, 10, 12, 103, 15]], [[120, 121, 122, 122, 214, 74, 357, 8518, 21518, 21517, 100, 918, 121]], [[120, 122, 414, 214, 357, 8519, 21517, 918, 2123, 21517, 8518]], [[63, -55, 84, 83, 75, -56, 214, 13, 214]], [[100, 101, 918, 103]], [[24, -57, 84, 75, 24, -56]], [[-324, 4, 8, 11, 6, 11]], [[123, 7, -125, 46, 1111, 109]], [[63, -55, 84, 83, 75, -56, 13, 12, -55, 63, 63, 83]], [[120, 122, 414, 214, 2122, 615, 8518, 21517, 2123, 918]], [[63, -55, 84, 83, 75, -56, 13]], [[124, 505, 122, 504, 789, 111, 789, 504, 789]], [[100, 101, 101, 103, 104, 103]], [[4, 122, 414, 122, 109, 615, 8518, 21517, 2123, 918]], [[-2, 4, -324, 6, 8, 10, 11, 12, 15]], [[12, 103, 14, 15, 16, 14]], [[-2, 15, 75, -56, 214, -124, 14]], [[102]], [[120, 122, 122, 214, 74, 357, 8518, 21518, 21517, 100, 918, 121]], [[789, 123, 789, 213, 111]], [[-2, 4, -324, 6, 8, 11, 12, 11]], [[919, 120, 122, 414, 109, 8518, 615, 8518, 21517, 2123, 918]], [[63, -55, 121, 83, 75, -55, 13, 12, -55, 63, 63, 63]], [[11, 12, 103, 63, 1892, 15, 15, 14, 16]], [[120, 414, 214, 8518, 21517, 2123, 918, 414]], [[120, 122, 414, 214, -324, 415, -13, 21517, 918, 8518, 21517, 414]], [[456, 789, 456, 2123, 17, 456]], [[-324, 1111, 7113, 63]], [[-324, 456, 11, 7112, 1111]], [[-122, 101, 102, 101, -122]], [[100, 101, 7112, 21, 103, 21517, 102, 100]], [[11, -12, 6, 121, 109, 93, 11, -12, 93, -12]], [[-12, 93, 109, 108, 358, 109]], [[24, -55, 84, 83, 75, -56, 13, 12, -55, 63, 63, 83]], [[616, 4, 5, 14]], [[104, 456, -123, 93, 456, 92, 110, 456]], [[-122, 101, 102, 101, 7112]], [[120, 214, 8518, 21517, 8, 918, 2123]], [[99, 124, 101, 102, 103, 102, 21517]], [[102, 102, 103, 104, 10, 100, 102, 102, 104]], [[615, 4, 4, 5, 14]], [[-2, 4, 6, 8, 10, 12, 1111, 15, 3, 10]], [[120, 414, 214, 357, 8519, 21517, 918, 2123, 21517, 8518]], [[120, 122, 121, 214, 357, 8518, 21517, 2123, 415, 918]], [[506, 102, 505, 789, 102, 123, 505, -13, 789]], [[-2, 4, -324, 6, 6, 10, 12, 15, 6]], [[120, 121, 122, 214, 414, 8518, 21517, 2123, 918, 414]], [[-123, 456, 357, 789, 456, -123]], [[123, 505, 504, 789]], [[789, 93, -125, 121, 109, 100, 111, -125, 11]], [[102, 103, 104, 100, 102]], [[-2, 4, 6, 8, 14, 10, 1892, 11, 103, 15, 10, 103]], [[-123, 456, 789, 111, 111, 110, 456, 111, 789]], [[46, 788, 4, 6, 8, 14, 10, 12, 103, 15]], [[102, 505, 789, -13, 102, 102]], [[-121, 101, 102, 101, 7112]], [[-55, 84, 83, 75, -56, 13, 12, -56, 84, 63]], [[789, 93, -125, 121, 109, 10, -125, 11, 121]], [[-11, 93, -125, 790, 1111, 109, 1111]], [[120, 122, 414, 357, 8518, 21517, 2123, 918]], [[-122, 456, 92, 789, 456]], [[120, 214, 357, 8518, 21517, 2123, 918, 2123, 21517]], [[93, -126, 8517, -13, 109, 109]], [[615, 4, 5, 14, 4]], [[121, 505, 121, 214, 358, 8518, 21517, 2123, 358, 357, 358]], [[11, -12, 93, 121, 109, 93, 11, 93, -12, 2123, 121, 11, 121, 93]], [[11, -12, 93, 121, 109, 93, 11, -12, 93, -12, 121, 11, 93, 11]], [[-2, 4, -324, 6, 8, 13, 12, 15, -324]], [[11, -12, 93, 121, 109, 1111, 93, 11, -12, 93, -12, -12]], [[100, 8518, 102, 103, 104, 102, 105, 64, 8518, 8518]], [[63, 24, 84, 84, 75, -56, 214, 13]], [[12, 415, 789, 13, -122, 15, 16]], [[12, 103, 1892, 15, 15, 1892, 1892, 1892]], [[-12, 93, -125, 121, 109, 10, -125, 11, 10]], [[505, 8, -3, -13, 21, -2, 121, 357, 1892, -2]], [[6, 100, 100, 102, 102, 104, 6, 100, 102]], [[63, -55, 121, 83, 75, -55, 13, 12, 63, 63, 63]], [[120, 121, 122, 357, 8518, 21517, 100, 918, 121]], [[120, 121, 122, 214, 357, 8518, 8518, 21517, 100, 918, 122]], [[789, 123, 789, 789, 111, 789]], [[-324, 1111, 17, 7113, 63, 7113]], [[63, -55, 84, 83, 75, -56, 13, 123, 12, -55, 63, 63, 83]], [[120, 122, 414, 214, 357, 8518, 21517, 2123, 918, 2123, 357]], [[120, 122, 414, 214, -324, 415, 21517, 918, 8518]], [[505, 789, 102, 123, 505, -13, 789]], [[789, 456, -123, 456, 789]], [[120, 121, 414, 214, 357, 8518, 21517, 2123, 918, 2123, 21517, 918, 918]], [[-122, 456, 789, 456, 456, -122, 456]], [[8518, 103, 104, 102, 8518]], [[-122, -123, 456, 789, 456]], [[-2, 4, -324, 6, 8, 99, 12, 15, -324, 15]], [[-2, 4, -324, 8, 99, 12, 15, -324, 15]], [[789, 93, -125, 121, 109, 100, 111, -125, 11, 109]], [[11, -12, 93, -125, 121, 615, 93, 11, -12]], [[121, 120, 121, 122, 214, 357, 8518, 21517, 2123, 357, 8518]], [[121, 505, 121, 214, 358, 21517, -121, 358, 357, 358, 358]], [[123, 21517, 789, 12, 111, 789, 111, 21517]], [[-2, 4, -1, 6, 8, 14, 10, 12, 15]], [[120, 122, 101, 214, -324, 415, 21517, 2123, 918, 8518]], [[100, 101, 102, 104, 102, 102, 102]], [[104, 456, 93, 456, 111, 92, 456]], [[-122, 456, 92, 789, 456, 456]], [[120, 122, 414, 214, 21517, 415, 45, 357, 8518, 21517, 2123, 122, 918, 2123, 21517, 918, 21517, 45]], [[120, 414, 214, 8518, 21517, 2123, 918, 920]], [[15, 11, 12, 103, 14, 12, 16, 14]], [[120, 122, 414, 109, 615, 8519, 21517, 2123, 918, 122]], [[120, 122, 414, 214, -324, 2122, -13, 21517, 918, 8518, 21517, 414]], [[93, -126, 8517, -13, 109]], [[789, 92, -125, 121, 109, 10, -125, 11, 121]], [[99, 100, 102, 102, 103, -56, 102, 21517]], [[789, 92, -125, 121, 109, 10, -125, 11, 121, 109]], [[100, 101, 21517, 102, 103, 21517]], [[120, 105, 122, 414, 109, 615, 8519, 21517, 2123, 918, 122]], [[100, 101, 102, 103, 102, 102, 102]], [[-123, 11, 109, 789, 111, 11]], [[455, 505, 122, 504, 789, 789, 111, 789, 112, 504, 122]], [[12, 14, 16, 455]], [[120, 122, 414, 214, 415, 357, 8518, 21517, 2123, 122, 2123, 21517, 8517, 918, 2123]], [[788, 4, 8, 14, 10, 12, 103]], [[63, -55, 84, 83, 75, 14, -56, 214, 13, 214]], [[21517, 789, 12, 111, 111, 21517]], [[-123, 456, 357, 789, 456, 109]], [[789, 93, -125, 121, 109, 10, -125, 11, 11]], [[-2, 4, 6, 100, 14, 10, 1892, 103, 15, 10, 103]], [[100, 3, 102, 103, 103]], [[63, -55, 84, 83, 75, -56, 13, 13, 16, -55, 84]], [[120, 414, 214, 8518, 21517, 2122, 918, 414]], [[4, 6, 8, 14, 10, 123, 103, 15, 10, 63, 8]], [[11, 12, 13, 14, 15, 16, 16, 14]], [[-12, 93, -125, -125, 11, 121, 109, 10, 11, 11]], [[121, 122, 122, 214, 357, 8518, 21518, 21517, 100, 918]], [[615, 4, 3, 5, 14]], [[21517, 789, 12, 111, 111, 21517, 789]], [[63, -55, 83, 75, -56, 13, 13]], [[100, 101, 21517, -4, 102, 103, 21517]], [[456, 789, 457, 75, 2123, 17, 456]], [[-324, 1111, 358, 63]], [[121, 504, 121, 122, 214, 357, 8518, 21517, 2123, 918, 358, 357, 358, 357, 214]], [[120, 93, 414, 214, -324, 415, 918, 8518]], [[83, 120, 122, 414, 214, 357, 8518, 21517, 918, 2123, 21517, 21517]], [[21516, 100, 101, 102, 103, 21517, 104, 104]], [[506, 102, 505, 104, 789, 102, 123, 505, -13, 789]], [[102, 8518, 103, 104, 102, 918, 8518]], [[63, -55, 84, 83, 75, -56, 13, 12, 63, 63]], [[-2, 4, 6, 100, 14, 10, 1892, 103, 15, 15, 10, 103]], [[-324, 110, 8, 11, 12, 6, 11, 12, 11]], [[789, 93, -125, 122, 109, 100, 111, -125, 11]], [[64, 24, 112, 84, -121, 75, -56, 214, 13]], [[615, 4, 6, 5, 505, 12, 6, 12, 6, 6, 12]], [[24, -55, 84, 83, 75, -56, 13, 12, -55, 63, 63, 83, 13]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 91, 92, 93, 94, 95, 96, 97, 98, 99]], [[0]], [[11]], [[-1]], [[-11]], [[20, 30, 40]], [[21, 31, 41]], [[19, 29, 39]], [[110, 130, 150]], [[111, 131, 151]], [[33, 1111, 7113]], [[63, 24, 84, 75, -56, 75, 13]], [[63, 24, 15, 84, 75, -56, 13]], [[63, 15, 84, 75, -56, 13]], [[-324, 456, 1111, 120]], [[63, 24, 15, 103, 84, 75, -56, -12]], [[123, 505, 789, 111, 111]], [[-324, 456, 1111]], [[11, 12, 13, 14, 15, 16, 11]], [[63, 24, 84, 75, -56, 10]], [[-123, 456, 789, 112]], [[-124, 789, 112]], [[-123, 456, 789, 24, 112]], [[33, 5, -2, -3, 45, 6, 109, 121, 357, 1892, 6]], [[33, -2, -3, 45, 21, 109, 121, 357]], [[12, 13, 14, 15, 16, 11]], [[-124, 789, 113, 112]], [[456, 1111, 120]], [[63, 76, 24, 84, 75, -56, 10]], [[63, 24, 84, 75, -56, 13, 84]], [[120, 122, 414, 214, 615, 33, 218, 8518, 21517, 2123, -12, 918]], [[32, -2, -3, 45, 21, 109, 121, 357]], [[-123, 456, 789, 111, -123, -123]], [[63, 15, 84, 75, 16, -56, 13]], [[33, 7113]], [[32, 76, 24, 84, 75, -56, 10, 75]], [[33, -2, -3, 45, 21, 109, 122, 357, 1892]], [[11, -12, 93, -125, -125, 109]], [[33, 5, -2, 14, -3, 45, 6, 109, 121, 357, 1892, 6]], [[11, 12, 13, 14, 15, 16, 12]], [[32, 76, 24, 84, 75, -56, 10, 75, 84]], [[63, 24, 84, 75, 45, 76, 75, 13, 75]], [[63, 15, 84, 75, -56, 21, 13, 15]], [[75, 112, 112]], [[-124, 789, 113, 112, 112, 789]], [[63, 24, 84, 615, 75, -56, 13]], [[32, -2, -3, 45, 20, 21, 109, 121, 357]], [[-123, 456, 788, 111, -123]], [[63, 76, 24, 84, 75, -56, 10, 505, -56]], [[63, 76, 24, 84, 75, -56, 10, -56, 10]], [[-124, 789, 113, 615, 14, 112]], [[24, 84, 75, -56, 10, 10, -56]], [[63, 24, 84, 74, -56, 13, 84]], [[32, 76, 24, 75, -56, 10, 75, 84]], [[24, 84, 75, 10, 10, -56, 24]], [[63, 24, 84, 75, 45, 76, 75, 13, 74]], [[11, -12, 93, -125, 100, 109]], [[63, 15, 84, 75, 75, -56]], [[456, 789, 120]], [[24, 15, 84, 75, -56, 13]], [[63, 76, 24, 84, 75, -56, 10, 76]], [[63, 15, 84, 75, -56, 13, -56]], [[63, 15, 84, 75, 21, 13, 15]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 2123, 918, 615]], [[-124, 789, 113, 14, 112]], [[21517, 100, 101, 102, 103, 104]], [[-124, 789, 113, 615, 112]], [[24, 15, 84, 20, -56, 13, 24, -56]], [[32, 76, 24, 84, 75, 10, 75]], [[24, 83, 84, 75, 10, 10, -56, 24]], [[24, 84, 75, -56, 10, 24, 10, -56, 24]], [[76, 32, 76, 24, 84, 75, 10, 1111, 75]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 2123, 918, 6, 615]], [[100, 101, 24, 103, 104]], [[100, -124, 456, 101, 102, 103, 104]], [[120, 122, 414, 21517, 615, 122, 615, 218, 8518, 21517, 2123, 918, 6, 615]], [[11, -12, 93, -124, 214, 109]], [[33, 5, -2, -3, 45, 6, 121, 357, 1892, 6]], [[63, 24, 75, -56, 13, 84]], [[-124, 789, 615, 14]], [[120, 122, 93, 414, 214, 615, 33, 218, 8518, 21517, -12, 918]], [[120, 122, 414, 8518, 214, 615, 218, 8518, 21517, 213, 918]], [[63, 15, 84, 75, 16, 14, -56, 13]], [[-123, 456, 789, 112, -123, -123]], [[120, 122, 414, 214, 615, 615, 218, 74, 21517, 2123, 918, 6, 615]], [[-12, 76, 24, 84, 75, 11, -56, 10, -56, 10]], [[63, 15, 84, 75, 85, 13, -56]], [[24, 84, 75, 23, -56, 10, 24, 10, -56, 8518, 24]], [[100, 101, 24, 103, 104, 103]], [[33, 1110, 7113]], [[24, 84, 615, 75, -56]], [[33, 5, -2, 14, -3, 45, 109, 121, 357, 1892, 6]], [[32, 76, 76, 24, 84, 75, 10, 75]], [[-124, 113, 615, 112]], [[120, 122, 414, 21517, 615, 122, 615, 218, 8518, 21517, 2123, 918, 6, 615, 615, 2123]], [[456, 111]], [[120, 122, 414, 214, 615, 615, 218, 8518, 121, 2123, 918, 6, 615]], [[33, 5, 5, -2, 14, -3, 45, 6, 109, 20, 121, 357, 1892, 6]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 2123, 7, 6, 615]], [[63, 24, 76, 15, 84, 75, -56, 13, 75]], [[120, 456, -123, 788, 111, -122]], [[120, 5, 93, 414, 214, 615, 33, 218, 8518, 21517, -12, 918]], [[63, 24, 75, 45, 76, 75, 13, 74]], [[33, -3, -12, -3, 45, 21, 109, 121, 357, 1892]], [[100, 101, 24, 103, 100]], [[11, 12, 15, 16]], [[24, 84, 75, -56, 10, 24, 84, 10, -56, 24]], [[32, -2, -2, -3, 45, 21, 109, 121, 357]], [[32, -2, -2, -3, 45, 21, 109, 121, 357, 109]], [[32, -2, -2, -3, -324, 45, 21, 109, 121, 357, 109]], [[24, 84, 75, -56, 10, 24, 10, 24]], [[120, 122, 414, 214, 615, 615, 218, 8518, 121, 2123, 918, 6, 615, 6]], [[63, 24, 75, -56, 7113, 13, 84]], [[120, 122, 414, 8518, 120, 214, 615, 218, 8518, 21517, 213]], [[63, 24, 84, 85, 615, 75, -56, 13, 615]], [[33, -2, -3, 21, 109, 123, 1892]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 2123, 918, 6, 111, 615]], [[63, 24, 75, -12, -56, 13, 84]], [[63, 15, 84, 75, 85, -56, 75]], [[-124, 789, 113, 112, 112, 122, 789]], [[63, 15, -125, 75, -56, 21, 13, 15]], [[63, 24, 84, -12, 615, 75, -56, 13, 615]], [[24, 84, 75, -56, 10, 10, -56, -56]], [[24, 84, 75, -56, 21, 24, 84, 10, -56, 24]], [[84, 75, -56, 10, 24, 10, -56, 24]], [[32, 76, 113, -56, 10, 75, 84]], [[11, 12, 13, 14, 15, 16, 101, 12]], [[-324, -122, 456, 1111, 120]], [[-12, 77, 24, 84, 75, 11, -56, 10, -56, 10, 76]], [[120, 122, 414, 214, 615, 615, 218, 74, 21517, 2123, 918, 6, 615, 918]], [[-324, 119, 456, 120]], [[84, 63, 24, 84, 75, -56, 75, 13]], [[63, 7113, 121, 84, 615, 75, -56, 122]], [[-123, -324, 456, 789, 112, -123, -123]], [[24, 84, -56, 10, 24, 10, 9, -56, 24, 24]], [[63, 24, 75, 76, 75, 13, 74]], [[63, 85, 76, 24, 84, 75, -56, 10]], [[-324, 1111, 1110, 1111, 7113, 1111]], [[32, 76, 24, 84, 75, -56, 10, 24, 75, 7113, 84]], [[120, 122, 414, 214, 615, 33, 218, 8518, 21517, 103, 2123, -12, 918, 414]], [[33, -3, 45, 21, 109, 121, 357, 1892, 45]], [[75, 112]], [[33, 5, -2, -3, 45, 6, 109, 121, 357, 6]], [[63, 15, 84, 12, 75, -56, 13]], [[32, 76, 24, 84, 75, 113, 75]], [[-324, 456, 10, 1111, 7113, 7113]], [[-124, 789, 113, 14, 112, 789]], [[33, 15, 5, -2, -3, 45, 6, 109, 121, 357, 1892, 6, -2]], [[63, 75, -56, 13, 84]], [[32, 76, 24, 84, 75, -56, 10, 24, 75, 7113, 83, 84, 76]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 2123, 918, 615, 615]], [[24, 84, 75, -56, 10, 24, 9, 24]], [[-124, 789, 113, 615, 14, 112, 113]], [[63, 24, 84, 75, -56, 76, 10]], [[63, 24, 104, 75, 45, 76, 75, 13, 74]], [[24, 84, 75, -56, 10, 10, 24, 24]], [[63, 76, 24, 84, 32, 104, -56, 10]], [[63, 24, 104, 75, 45, 76, 75, 13, 75]], [[616, 63, 24, 84, 615, 75, -56, 13, 615]], [[24, 84, 75, -56, 10, 10, -56, -3]], [[-56, -123, 456, 75, 112]], [[63, -123, 75, -56, 13, 84]], [[-123, 456, 790, 111]], [[120, 122, 414, 214, 615, 33, 218, 8518, 21517, 2123, 614, -12, 918]], [[-124, 113, 112, 112, 122, 789]], [[-324, -122, 101, 1111, 120]], [[32, 83, 24, 75, -56, 10, 75, 84]], [[-124, 113, 112, 112, 122, 789, 113]], [[85, 75, -56, 9, 24, -56, 24, -56]], [[33, 5, -2, -3, 45, 33, 6, 109, 121, 357, 1892, 6, 121]], [[100, 101, 24, 100]], [[15, 75, -56, 21, 13, 15, -56]], [[15, 84, 75, 8518, -56]], [[-124, 113, 112, 615, 112]], [[32, -2, -3, 45, 20, 21, 109, 121, 357, -2]], [[-124, 113, 789, 112, 112, 122, 789]], [[84, 63, 24, 84, 75, -56, 75, 13, 63]], [[32, -3, 109, 45, 20, 21, 63, 357]], [[33, 5, -2, -3, 45, 6, 109, 122, 357, 6]], [[24, 84, 75, -56, 10, 10, 24, 24, 75]], [[32, -2, -3, 45, 21, 109, 218, 357]], [[20, 76, 24, 84, 75, -56, 10, -56, 64, 10]], [[101, 1110, 7113]], [[120, 122, 414, 214, 615, 33, 218, 8518, 21517, 2123, 614, -12]], [[10, 12, 14, 13, 14, 15, 16]], [[-124, 113, 112, 112, 122, 789, 113, 112]], [[32, 83, 24, 75, -56, -56, 75, 84]], [[33, -3, 45, 21, 109, 121, 357, 1892, 45, 45]], [[24, 15, 84, -56]], [[616, 63, 24, 84, 615, 75, -56, 13, 615, 615]], [[63, 24, 75, 76, 75, 77, 13, 74, 75]], [[63, 84, 75, -56, 75, 13]], [[120, 122, 613, 414, 214, 615, 33, 218, 8518, 21517, 2123, 614, -12]], [[24, 14, 75, -56, 10, 10, 24, 24]], [[84, 75, -56, 21, 24, 84, 10, -56, 24]], [[100, -324, -122, 456, 218, 1111, 120]], [[120, 122, 414, 8518, 214, 615, 218, 8518, 21517, 213]], [[24, 104, 75, 45, 76, 75, 13]], [[11, 21517, -12, 93, -125, 121, 109]], [[-324, 456, 10, 1111, 7113, 7113, 7113, 7113]], [[15, 84, 75, 21, 13, 15]], [[63, 15, 84, 11, 23, 14, -56]], [[456, 455, 1111, 456]], [[63, 15, 505, 23, 14, -56]], [[33, -3, -12, -3, 45, 21, 108, 121, 357, 1892, 213]], [[24, 84, 615, 75, -56, -56, -56]], [[15, 63, 15, 505, 23, 14, -56]], [[-324, 1111, 1110, 1111, 613, 7113, 8]], [[24, 84, 75, -56]], [[455, 15, 84, 75, 21, 13]], [[75, 33, 5, -2, -3, 614, 6, 109, 121, 357, 6]], [[615, 616, 63, -56, 24, 84, 615, 75, -56, 13, 615, 614]], [[21517, 103, 100, 101, 102, 103, 104]], [[63, 15, 84, 75, -56, 14, -56, 84]], [[-324, -122, 456, 63, 120]], [[33, 5, -2, 21, -3, 45, 6, 121, 357, 1892, 6, 45]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 2123, 918, 6, 111, 615, 6]], [[33, -12, -3, 45, 21, 109, 121, 357, 1892]], [[24, 84, 75, 21517]], [[32, -3, -12, -3, 45, 21, 121, 357, 1892]], [[-124, 790, 789, 113, 14, 112]], [[-124, 789, 112, 112]], [[-324, -122, 101, 1111, 120, 101]], [[63, 15, 84, 11, -56]], [[-123, 456, 790, -56, 111]], [[15, 75, -56, 24, 13, 15, -56]], [[33, 456]], [[-124, 113, 112, 112, 122, 789, 789, 789]], [[33, 1111, 7113, 1111]], [[1110, 7113]], [[120, 122, 214, 615, 33, 218, 8518, 21517, 2123, 614, -12, 918]], [[120, 122, 414, 21517, 615, 122, 2122, 615, 218, 8518, 21517, 2123, 918, 6, 615]], [[108, 63, 121, 84, 75, -56, 122]], [[32, 76, 24, 84, 75, 11, 75]], [[15, 84, -57, 8518, -56]], [[24, -57, 84, 75, -56, -56]], [[21517, 103, 100, 101, 102, 103, 104, 21517]], [[63, 85, 76, 24, 24, 84, 75, -56, 10]], [[63, 24, 84, 615, 75, -56, 614, 13, 13]], [[24, 84, 75, -56, 10, 10, 24, 24, 75, 24]], [[10, 12, 14, 13, 7113, 15, 16]], [[24, 84, 108, -56, 10, 10, -56]], [[33, 5, -2, -3, 45, 6, 121, 357, 1892, 6, -3]], [[-123, 456, 789, 111, -123, -123, -123]], [[-124, 789, 113, 113]], [[11, 12, 13, 14, 15, 16, 101, 12, 12]], [[456, 1111, 7113, 1111]], [[11, 13, 12, 13, 14, 12, 16, 12]], [[33, 5, -2, -3, 45, 33, 6, 109, 121, 357, 1892, 6, 121, -2]], [[-124, 789]], [[790, -124, 789]], [[15, 75, 75, -56, 21, 13, 15, -56]], [[24, 15, 84, 20, -56, 12, 24, -56]], [[120, 122, 93, 414, 214, 615, 33, 218, 8518, 21517, -12, 918, 214]], [[120, 122, 615, 33, 218, 8518, 21517, 2123, 614, 918]], [[-324, 456, 10, 7113, 7113, 7113, 7113]], [[63, 76, -56, 13, 84]], [[63, 24, 84, -12, 614, 615, 75, -56, 13, 615]], [[-124, 789, 113, 616, 14, 112]], [[63, 24, 84, 615, -56, 10]], [[-3, -123, 456, -124, 789, 112]], [[33, 5, -2, -3, 45, 6, 109, 122, 32, 6]], [[11, 76, 93, -124, 214, 109]], [[-324, 456, 10, 1111, 7113, 7113, 7113, 7113, 7113]], [[32, -2, -2, -3, 45, 21, 109, 121, 357, -2]], [[62, 15, 505, 23, 14, -56, 23, -56]], [[120, 122, 414, 21517, 615, 122, 615, 218, 8518, 21517, 2123, 790, 6, 615, 615]], [[-124, 789, 113, 615, 14, 112, 113, 789]], [[-124, 789, 113, 615, 14, 120, 789, 113, 789, 789]], [[113, -123, 456, 790, -56, 111]], [[63, 24, 75, -12, 77, -56, 13, 84]], [[120, 122, 414, 214, 5, 615, 615, 218, 74, 21517, 2123, 918, 6, 615]], [[110, -123, 456, 788, 111, -123]], [[32, 76, 113, 10, 75, 84]], [[120, 122, 414, 21517, 615, 122, 2122, 615, 218, 8518, 21517, 918, 6, 615]], [[24, 23, -57, -57, 84, -56, -56]], [[32, 83, 24, -56, -56, 75, 84]], [[-124, 113, 615, 113, 112]], [[-324, 456, 10, 1111, 7113, 7113, 7113, 10]], [[120, 122, 414, 214, 615, 33, 218, 8518, 21517, 2123, 121, 614, -12, 918]], [[32, 24, 84, 75, 113]], [[-123, 456, 789, 24, 112, 112]], [[63, 24, 85, 84, 25, -2, 75, -56, 13]], [[63, 15, 84, 75, 21, 14, 15]], [[456, 1111, 7113, 1111, 1111]], [[-123, 788, 111, -123]], [[120, 122, 615, 33, 218, 8518, 21517, 2123, 614, 918, 218]], [[63, 24, 84, 75, -56, 10, 76]], [[24, 84, 75, -55, 10, 24, 10, -57, 24]], [[-123, 111]], [[24, 108, -56, 10, 10, -56, 10]], [[33, 15, 5, -2, 62, 45, 6, 109, 121, 1892, 6, -2]], [[790, 24, 23, -57, -56, 84, -56, -56]], [[63, 75, -56, 13, 84, 84]], [[24, 84, 75, -56, 10, 10, -56, 74]], [[-123, 456, 789, 24, 112, -123]], [[32, 83, 24, -56, 10, 75, 84]], [[16, 32, 76, 24, 84, 75, -56, 10, 75, 84]], [[33, 5, 5, -2, 14, -3, 45, 6, 109, 20, 121, 357, 1892, 6, 5]], [[63, 24, 75, -12, 77, -56, 13]], [[32, 76, 24, 84, 75, 10]], [[24, 84, 75, -56, 10, 24, 84, 615, 10, -56, 24]], [[33, -2, -3, 45, 4, 21, 109, 121, 357]], [[120, 122, 93, 414, 214, 615, 33, 218, 20, 8518, 21517, -12, 918, 33]], [[63, 24, 84, 75, -56, 10, 10, 63]], [[11, 9, -12, 93, -125, 121, 109]], [[-124, 789, 113, 615, 14, 112, 113, 112]], [[24, 84, 75, -56, 10, 10, 24]], [[63, 85, 76, 24, 24, 84, 75, -56, 10, 84]], [[790, 24, 23, -56, 84, -56, -56]], [[16, 32, 76, 24, 84, 75, -56, 75, 84]], [[505, 789, 111, 505]], [[-124, 113, 789, 113, 14]], [[63, 15, 84, 75, 85, 13]], [[33, 5, -2, -3, 76, 45, 6, 109, 121, 357, 1892, 6]], [[-123, 456, 789, 112, -123, 112]], [[63, 76, 13, 84]], [[-124, 114, 789, 113, 615, 14, 112]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 2123, 918, 6, 111, 6]], [[32, 83, 24, -55, -56, -56, 75, 84]], [[120, 122, 214, 615, 615, 218, 8518, 21517, 2123, 918, 615]], [[32, 24, 84, 112]], [[63, 15, 84, 75, 75, -57]], [[63, 24, 84, 75, -56, 76, 10, 10, 24]], [[4, 6, 8, 12, 15]], [[63, 15, 11, 23, 14, -56]], [[63, 24, 75, 45, 76, 75, 13, 74, 76]], [[15, -56, 75, -56, 21, 1892, 15, -56, -56]], [[21517, 103, 100, 101, 102, 103, 104, 21517, 103]], [[120, 122, 414, 8518, 215, 615, 218, 8518, 21517, 213]], [[63, 84, 75, 85, -56, 75, 77]], [[63, 24, 84, 615, 75, -56, 614, 75, 13, 614]], [[120, 122, 414, 214, 615, 33, 218, 8518, 21517, 103, 2123, -12, 918, 414, 615]], [[616, 63, 24, 84, 615, 75, -56, 13, 615, 615, 24]], [[123, 505, 789, 111, 111, 505]], [[10, 12, 14, 13, 7113, 15, 16, 12]], [[11, 12, 13, 12, 14, 15, 16, 11]], [[63, 15, 84, 93, 16, -56, 13]], [[120, 456, 101, 788, -122]], [[32, -2, -3, 45, 21, 109, 121, 357, -3]], [[32, -2, -3, 45, 21, 109, 218, 357, -2]], [[84, -56, 75, -56, 10, 24, 10, -56, 24]], [[122, 108, 63, 121, 123, 84, 75, -56, 122]], [[63, 24, 85, 84, 25, 75, -56, 13]], [[615, 616, 63, -56, 24, 84, 84, 615, 76, -56, 13, 615, 614]], [[15, 75, -56, 21, 32, 15, -56, 75]], [[63, 24, 76, 75, 77, 13, 74, 75]], [[63, 15, 84, 75, -56, 21, 13, 64, 15, 13, 13, 13]], [[120, 122, 414, 214, 615, 615, 218, 8518, 21517, 1111, 918, 615, 615]], [[-123, 456, 789, 111, -123, -122, -123, 789]], [[63, 24, 84, 75, -56, 10, 10]], [[21517, 103, 100, 101, 102, 103, 6, 21517, 103]], [[63, 24, 84, 75, 45, 76, 75, 74]], [[31, 76, 24, 84, 75, -56, 10, 74]], [[11, 12, 13, 12, 918, 15, 16, 11]], [[-56, 456, 75, 112]], [[33, -3, 357, 21, 109, 121, 357, 1892, 45]], [[11, 615, 93, 214, 109, 109]], [[63, -56, 13, 84]], [[12, 15, 16]], [[63, 76, 24, 63, 84, 75, -56, 10, 10]], [[32, 24, 84, 75, 11, 75]], [[100, 101, 24, 103, 103]], [[32, 76, 84, 75, -56, 10, 24, 75, 7113, 84, 32]], [[11, -12, 93, -125, -125, 109, -125]], [[63, 84, 75, -56, 10, 76]], [[120, 122, 414, 21517, 615, 122, 2122, 615, 218, 21517, 2123, 918, 6, 616]], [[-123, 456, 789, 112, -123]], [[4, -2, -3, 45, 6, 121, 357, 1892, 6, -3, 6]], [[31, 84, 75, -56, 64, 74]], [[100, 15, 101, 102, 5, 103, 104]], [[614, 62, 101, 24, 100, 100]], [[33, 5, -2, -3, 455, 45, 6, 109, 121, 357, 1892, 6]], [[33, 5, -2, -3, 6, 1892, 121, 357, 1892, 6]], [[24, 83, 84, 75, 10, -56, 24]], [[100, 24, 103, 103]], [[84, -56, 75, -56, 10, 24, 10, -56, 24, 10]], [[24, 84, -56, 10, 24, 10, 9, -56, 11, 24, 24]], [[26, -324, 1111, 7113]], [[-124, 789, 112, 112, -124]], [[789, -124, 789, 112]], [[-324, -122, 101, -324, 1111, 120, 101]], [[120, 122, 414, 214, 615, 33, 218, 8518, 21517, 64, 614, -12]], [[63, 24, 84, -12, 614, 615, 75, -56, 83, 13, 615]], [[-325, -324, 101, 1111, 120]], [[84, 63, 14, 24, 84, 75, -56, 75, 13, 63, 24]], [[-324, 456, 10, 7113, 7113, 7113, 4]], [[62, 15, 84, 75, 75, -57]]]\n    results = [0, 1, 2, 4, 3, 0, 0, 1, 2, 2, 1, 0, 2, 2, 1, 2, 2, 2, 2, 1, 1, 3, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 3, 1, 0, 1, 0, 2, 2, 0, 1, 4, 1, 1, 1, 1, 2, 1, 0, 0, 2, 1, 2, 1, 1, 4, 2, 5, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 3, 3, 1, 1, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 2, 1, 4, 2, 3, 2, 2, 1, 4, 4, 0, 2, 2, 1, 0, 4, 3, 5, 2, 2, 2, 2, 4, 1, 3, 3, 3, 1, 1, 2, 3, 1, 0, 3, 2, 1, 2, 1, 4, 1, 1, 3, 6, 2, 2, 1, 4, 0, 2, 1, 3, 0, 2, 2, 3, 1, 4, 2, 4, 2, 4, 6, 4, 2, 1, 2, 3, 3, 2, 3, 1, 3, 2, 4, 1, 2, 2, 2, 4, 2, 2, 2, 0, 1, 4, 1, 4, 1, 3, 3, 6, 2, 5, 1, 0, 1, 2, 4, 4, 3, 2, 7, 2, 6, 2, 5, 3, 0, 8, 1, 0, 1, 2, 8, 1, 2, 3, 2, 2, 2, 1, 1, 3, 2, 3, 1, 1, 3, 2, 6, 1, 2, 2, 3, 2, 2, 3, 1, 1, 2, 2, 4, 7, 2, 2, 2, 2, 1, 1, 3, 1, 0, 2, 1, 5, 2, 2, 2, 2, 10, 2, 3, 2, 4, 1, 2, 2, 0, 1, 7, 2, 5, 1, 3, 5, 1, 3, 2, 1, 1, 1, 4, 2, 4, 1, 1, 1, 0, 2, 1, 0, 1, 5, 0, 4, 5, 1, 2, 1, 2, 2, 6, 2, 1, 7, 3, 2, 4, 0, 2, 2, 8, 0, 4, 1, 2, 1, 2, 1, 2, 4, 3, 1, 2, 2, 6, 0, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 3, 3, 4, 3, 9, 1, 3, 3, 3, 5, 2, 2, 2, 3, 0, 1, 3, 1, 5, 0, 1, 2, 3, 1, 1, 0, 1, 3, 6, 0, 2, 1, 2, 1, 1, 4, 5, 6, 2, 2, 2, 2, 4, 3, 3, 2, 2, 4, 1, 3, 3, 2, 8, 5, 2, 2, 0, 2, 1, 3, 1, 3, 3, 1, 0, 2, 0, 4, 0, 2, 1, 1, 2, 0, 2, 2, 2, 3, 6, 2, 4, 0, 0, 2, 9, 2, 4, 3, 1, 1, 7, 2, 3, 2, 1, 3, 3, 3, 1, 0, 6, 1, 2, 1, 8, 4, 3, 3, 2, 3, 1, 1, 3, 1, 2, 3, 1, 2, 2, 1, 2, 3, 2, 0, 2, 5, 4, 1, 2, 2, 2, 0, 2, 4, 2, 2, 3, 4, 0, 0, 2, 2, 2, 2, 2, 6, 3, 2, 0, 1, 2, 0, 3, 1, 0, 2, 1, 2, 5, 1, 1, 2, 3, 6, 1, 4, 5, 2, 2, 2, 2, 6, 4, 1, 1, 1, 3, 0, 4, 11, 11, 2, 8, 2, 2, 3, 3, 4, 3, 0, 3, 3, 2, 6, 4, 3, 2, 0, 5, 2, 2, 1, 1, 1, 3, 3, 7, 5, 4, 4, 5, 1, 1, 1, 2, 1, 1, 0, 3, 1, 0, 2, 5, 2, 6, 2, 2, 2, 5, 5, 0, 1, 1, 2, 3, 3, 6, 3, 2, 3, 0, 3, 3, 6, 2, 0, 4, 3, 2, 3, 1, 5, 1, 1, 2, 5, 1, 2, 4, 3, 5, 2, 1, 3, 15, 0, 1, 0, 0, 0, 1, 2, 0, 3, 3, 3, 3, 3, 1, 3, 5, 1, 4, 1, 1, 1, 1, 4, 4, 3, 2, 1, 1, 2, 1, 3, 2, 3, 2, 2, 3, 3, 4, 3, 2, 4, 4, 1, 3, 2, 3, 1, 2, 1, 2, 1, 1, 2, 1, 3, 3, 3, 1, 3, 1, 3, 4, 0, 2, 2, 2, 2, 2, 1, 1, 3, 0, 2, 2, 0, 3, 3, 2, 1, 2, 0, 3, 1, 0, 2, 3, 1, 3, 2, 1, 4, 2, 1, 0, 1, 1, 4, 0, 4, 1, 2, 3, 4, 2, 2, 1, 3, 4, 4, 1, 1, 3, 0, 2, 3, 1, 2, 3, 3, 4, 2, 1, 1, 1, 2, 4, 1, 3, 0, 1, 3, 3, 1, 0, 3, 1, 4, 3, 2, 4, 1, 4, 3, 3, 3, 3, 5, 2, 3, 0, 1, 3, 1, 3, 1, 0, 4, 2, 1, 1, 2, 1, 1, 2, 2, 2, 3, 1, 6, 1, 4, 2, 1, 3, 3, 3, 2, 3, 2, 2, 1, 2, 1, 2, 3, 2, 4, 1, 2, 5, 3, 1, 1, 1, 1, 0, 3, 4, 5, 4, 2, 1, 2, 3, 1, 3, 3, 1, 3, 5, 2, 3, 2, 0, 3, 1, 4, 1, 2, 2, 1, 3, 2, 1, 4, 1, 4, 4, 1, 1, 0, 2, 3, 1, 1, 3, 1, 3, 2, 3, 0, 3, 2, 3, 4, 3, 3, 6, 1, 1, 5, 1, 2, 1, 4, 1, 2, 2, 0, 1, 2, 3, 6, 3, 2, 0, 4, 6, 2, 3, 0, 1, 2, 0, 0, 1, 2, 4, 2, 2, 1, 2, 3, 4, 1, 1, 1, 1, 1, 0, 4, 0, 2, 1, 1, 1, 2, 4, 3, 1, 1, 4, 3, 1, 4, 3, 1, 1, 0, 2, 4, 3, 3, 4, 1, 1, 2, 1, 1, 0, 0, 3, 1, 1, 2, 3, 3, 4, 0, 3, 3, 2, 2, 6, 3, 4, 3, 1, 3, 2, 1, 3, 2, 1, 4, 4, 7, 1, 3, 1, 4, 2, 2, 4, 1, 5, 4, 1, 1, 1, 3, 3, 3, 3, 1, 0, 1, 2, 2, 3, 1, 4, 3, 1, 2, 1, 1, 2, 1, 2, 3, 1, 2, 2, 3, 3, 3]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/147", "prompt": "\ndef get_max_triples(n):\n    \n\n\n    if n <= 2: return False\n    one_cnt = 1 + (n - 2) // 3 * 2 + (n - 2) % 3\n    zero_cnt = n - one_cnt\n    return one_cnt * (one_cnt - 1) * (one_cnt - 2) // 6 + zero_cnt * (zero_cnt - 1) * (zero_cnt - 2) // 6\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef get_max_triples(n):\n    \n\n\n    if n <= 2: return False\n    one_cnt = 1 + (n - 2) // 3 * 2 + (n - 2) % 3\n    zero_cnt = n - one_cnt\n    return one_cnt * (one_cnt - 1) * (one_cnt - 2) // 6 + zero_cnt * (zero_cnt - 1) * (zero_cnt - 2) // 6\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef get_max_triples(n):\n    \n\n\n    if n <= 2: return False\n    one_cnt = 1 + (n - 2) // 3 * 2 + (n - 2) % 3\n    zero_cnt = n - one_cnt\n    return one_cnt * (one_cnt - 1) * (one_cnt - 2) // 6 + zero_cnt * (zero_cnt - 1) * (zero_cnt - 2) // 6\n\n", "raw_modification": "```python\n<code_start>\ndef get_max_triples(n):\n    # Adding unnecessary computations and variables\n    def calculate_combinations(x):\n        if x < 3:\n            return 0\n        result = 1\n        for i in range(x, x - 3, -1):\n            result *= i\n        return result // 6\n\n    if n <= 2:\n        return False\n\n    # Introducing redundant calculations\n    temp = n - 2\n    div = temp // 3\n    mod = temp % 3\n    one_cnt = 1 + div * 2 + mod\n\n    # More redundant calculations\n    zero_cnt = n - one_cnt\n    redundant_zero_cnt = n - (1 + div * 2 + mod)\n\n    # Using the redundant variable\n    if zero_cnt != redundant_zero_cnt:\n        zero_cnt = redundant_zero_cnt\n\n    # Breaking down the return statement into multiple steps\n    one_combinations = calculate_combinations(one_cnt)\n    zero_combinations = calculate_combinations(zero_cnt)\n\n    # Final return with unnecessary addition\n    result = one_combinations + zero_combinations\n    return result\n<code_end>\n```", "modification": "\ndef get_max_triples(n):\n    \n    def calculate_combinations(x):\n        if x < 3:\n            return 0\n        result = 1\n        for i in range(x, x - 3, -1):\n            result *= i\n        return result // 6\n\n    if n <= 2:\n        return False\n\n    \n    temp = n - 2\n    div = temp // 3\n    mod = temp % 3\n    one_cnt = 1 + div * 2 + mod\n\n    \n    zero_cnt = n - one_cnt\n    redundant_zero_cnt = n - (1 + div * 2 + mod)\n\n    \n    if zero_cnt != redundant_zero_cnt:\n        zero_cnt = redundant_zero_cnt\n\n    \n    one_combinations = calculate_combinations(one_cnt)\n    zero_combinations = calculate_combinations(zero_cnt)\n\n    \n    result = one_combinations + zero_combinations\n    return result\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[5], [6], [10], [100], [1], [2], [3], [4], [7], [12], [15], [20], [25], [30], [29], [16], [19], [18], [17], [21], [26], [31], [11], [22], [8], [27], [24], [32], [28], [33], [23], [9], [14], [13], [34], [35], [36], [49], [37], [73], [77], [50], [74], [75], [76], [38], [78], [48], [51], [52], [98], [79], [53], [72], [42], [41], [99], [80], [54], [40], [68], [39], [81], [67], [69], [43], [61], [70], [65], [71], [102], [101], [82], [47], [46], [66], [45], [57], [60], [58], [59], [103], [97], [56], [104], [96], [44], [105], [83], [95], [94], [64], [84], [85], [63], [86], [55], [87], [62], [200], [199], [201], [198], [202], [90], [91], [92], [203], [93], [197], [196], [195], [194], [204], [88]]\n    results = [1, 4, 36, 53361, False, False, 0, 1, 10, 60, 130, 321, 736, 1260, 1089, 175, 306, 240, 185, 399, 764, 1450, 39, 490, 11, 900, 616, 1495, 1053, 1705, 511, 21, 94, 88, 1936, 1991, 2244, 6016, 2520, 20448, 23425, 6136, 20724, 21900, 23125, 2586, 24700, 5520, 6664, 7225, 49136, 26026, 7361, 19320, 3640, 3289, 51216, 26351, 7956, 3211, 15961, 2886, 27729, 15730, 16951, 4018, 11800, 17986, 13881, 18239, 56100, 53889, 29160, 5055, 4950, 14784, 4515, 9405, 11020, 10108, 10279, 58378, 48640, 8739, 58939, 46624, 4109, 61285, 29511, 44671, 44206, 13671, 30996, 32536, 12810, 32914, 8586, 34510, 11990, 431211, 429066, 439989, 420420, 448900, 38280, 40050, 40485, 451111, 42315, 411905, 409825, 401440, 393184, 460156, 36163]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/148", "prompt": "\ndef bf(planet1, planet2):\n    \n\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    if planet1 not in planets or planet2 not in planets: return tuple()\n    i1, i2 = planets.index(planet1), planets.index(planet2)\n    if i1 > i2: i1, i2 = i2, i1\n    return tuple(planets[i1 + 1 : i2])\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef bf(planet1, planet2):\n    \n\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    if planet1 not in planets or planet2 not in planets: return tuple()\n    i1, i2 = planets.index(planet1), planets.index(planet2)\n    if i1 > i2: i1, i2 = i2, i1\n    return tuple(planets[i1 + 1 : i2])\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef bf(planet1, planet2):\n    \n\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    if planet1 not in planets or planet2 not in planets: return tuple()\n    i1, i2 = planets.index(planet1), planets.index(planet2)\n    if i1 > i2: i1, i2 = i2, i1\n    return tuple(planets[i1 + 1 : i2])\n\n", "raw_modification": "```python\n<code_start>\ndef bf(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    \n    # Inefficiently check if planets are in the list\n    planet1_in_list = False\n    planet2_in_list = False\n    for planet in planets:\n        if planet == planet1:\n            planet1_in_list = True\n        if planet == planet2:\n            planet2_in_list = True\n    \n    if not planet1_in_list or not planet2_in_list:\n        return tuple()\n    \n    # Inefficiently find the indices\n    i1, i2 = -1, -1\n    for index, planet in enumerate(planets):\n        if planet == planet1:\n            i1 = index\n        if planet == planet2:\n            i2 = index\n    \n    # Swap if necessary\n    if i1 > i2:\n        temp = i1\n        i1 = i2\n        i2 = temp\n    \n    # Inefficiently create the tuple\n    result = []\n    for i in range(i1 + 1, i2):\n        result.append(planets[i])\n    \n    return tuple(result)\n<code_end>\n```", "modification": "\ndef bf(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    \n    \n    planet1_in_list = False\n    planet2_in_list = False\n    for planet in planets:\n        if planet == planet1:\n            planet1_in_list = True\n        if planet == planet2:\n            planet2_in_list = True\n    \n    if not planet1_in_list or not planet2_in_list:\n        return tuple()\n    \n    \n    i1, i2 = -1, -1\n    for index, planet in enumerate(planets):\n        if planet == planet1:\n            i1 = index\n        if planet == planet2:\n            i2 = index\n    \n    \n    if i1 > i2:\n        temp = i1\n        i1 = i2\n        i2 = temp\n    \n    \n    result = []\n    for i in range(i1 + 1, i2):\n        result.append(planets[i])\n    \n    return tuple(result)\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['Jupiter', 'Neptune'], ['Earth', 'Mercury'], ['Mercury', 'Uranus'], ['Neptune', 'Venus'], ['Earth', 'Earth'], ['Mars', 'Earth'], ['Jupiter', 'Makemake'], ['Neptune', 'Mercury'], ['Jupiter', 'Mars'], ['Mercury', 'Saturn'], ['Pluto', 'Mars'], ['Mercury', 'Venus'], ['Neptune', 'Saturn'], ['Earth', 'Neptune'], ['Uranus', 'Jupiter'], ['Mercury', 'Neptune'], ['Venus', 'Mars'], ['NeptunMarse', 'MeurJupitery'], ['MercuNeptunMarsery', 'Neptune'], ['Mercury', 'Mercury'], ['MercuNeptunMarsery', 'Mars'], ['', 'NeptuMarsn'], ['Pluto', 'Earth'], ['rn', 'Sturn'], ['ury', 'Mercrury'], ['Mar', 'Mar'], ['Earth', 'MerVenuscury'], ['rnth', 'Earath'], ['Pluto', 'Earath'], ['', 'NepntuMarsn'], ['Pluto', 'UranusEarth'], ['Pluto', 'Pluto'], ['Sturn', 'Sturn'], ['UranusEarth', 'Pluto'], ['UranusEarth', 'Mars'], ['xrON', 'Mars'], ['Puluto', 'Pluto'], ['NeptunePluto', 'UrntVenushranusEarth'], ['rnth', 'MeurJupitery'], ['Mars', 's'], ['tJupiter', 'Mars'], ['rnth', 'rntPlutoh'], ['rnthh', 'UrntVenushraMercurynusEarth'], ['Plo', 'Pluto'], ['Puluto', 'Earath'], ['Venus', 'MaNepntuMarsnrs'], ['Plsuto', 'Pluto'], ['Venus', 'UranusEarth'], ['Saturn', 'Saturn'], ['uSturnPuluto', 'rntPlutohuSturn'], ['sMaNepntuMarsnrs', 's'], ['Neptune', 'Neptune'], ['Mercrury', 'MarstJupiter'], ['Sturn', 'MarstJupiterSturn'], ['', 'NepntueMarsn'], ['aMars', 's'], ['NeptunMarse', 's'], ['Earath', 'Puluto'], ['NepPlutontueMarsn', 'NepntueMarsn'], ['NeptunMarse', 'NepntuMarsn'], ['ss', 's'], ['MarMr', 'Mar'], ['PuluMercruryo', 'Earath'], ['NepntueMarsn', 'NepntueMarsn'], ['Pluto', 'Plutuo'], ['NepPlutontueMarsn', 'NepPlutontueMarsn'], ['Neptuneuto', 'NeptunePluto'], ['Pluto', 'PMars'], ['Pluto', 'PMPPNepntuMarsnars'], ['MPlutuoercury', 'Mercury'], ['JupUranuser', 'Mars'], ['EartMeurJupiteryh', 'Mercury'], ['Pluto', 'tEarth'], ['Sturn', 'MarstJupiterSturnxrON'], ['lPluto', 'lPluto'], ['MPlutuoercury', 'MPlutuoPulutoury'], ['Pululto', 'Pululto'], ['tJupiter', 'PlsutoMars'], ['Earth', 'NeptuPulultone'], ['tJupiterMercurPMPPNepntuMarsnars', 'tJupiterMercury'], ['UrntVenushraMercurynusEarth', 'UrntVenushraMercurynusEarth'], ['', 'EarthPuluMercruryo'], ['PlutoaMars', 'Pluto'], ['rntPlutohuSturn', 'uSturnPuluto'], ['JupUranuser', 'ars'], ['aMarMMarMrr', 'aMar'], ['Pluto', 'MarMr'], ['Mar', 'Neptune'], ['PxrONlutto', 'tEarth'], ['urMarstJupiterSturnxrONy', 'Mercrury'], ['Earrth', 'MerVVenusenuscuruy'], ['cMerc', 'cMerc'], ['rn', 'SaturnStur'], ['Mercruy', 'MarsteJupiter'], ['Mrnercury', 'Mrnercury'], ['MarsteJuer', 'MarsteJupite'], ['Earth', 'NeptuPulultonne'], ['Earth', 'Sturn'], ['Earth', 'Mercy'], ['MeruVVenusnuscuruy', 'MeruVVen'], ['Mars', 'Neptune'], ['Saturn', 'Mercury'], ['Jupiter', 'Venus'], ['Jupiter', 'Jupiter'], ['Jupi', 'Jupiter'], ['Meurcury', 'Jupiter'], ['PUranuslMeurcuryuto', 'PUranusluto'], ['Jupiter', 'Veneus'], ['Jupi', 'Jiter'], ['Pluto', 'uto'], ['EaMercuryh', 'Pluto'], ['PUranuslMeurcuryuto', 'PUranuJiterury'], ['uto', 'JupitJupiterer'], ['MeVenusrcury', 'PUranusluto'], ['Jupi', 'J'], ['MeVenusrcurNeptuney', 'MeVenusrcurNeptuney'], ['PUranuslMeurcuryuto', 'PUranu'], ['Jupi', 'Uranus'], ['MeVenusrcurNeptuney', 's'], ['PUranusluto', 'Mars'], ['uto', 'uto'], ['Venues', 'Venus'], ['Merry', 'Mercury'], ['VeMeurcurynues', 'Venus'], ['JJupiterupiter', 'Vensus'], ['PUranu', 'Jupi'], ['Venus', 'Venues'], ['UrasnUus', 'Jupiter'], ['Venus', 'MeVenusrcurNeptuneyMercury'], ['UUranus', 'Jiter'], ['Mercury', 'MMercury'], ['VeMeurcurynues', 'Plut'], ['MMercur', 'MMercur'], ['Neptne', 'Neptune'], ['Venues', 'MeurcuryVensus'], ['Veneu', 'Jiter'], ['MeVenusrcury', 'Vensus'], ['Venus', 'MeVenusrcury'], ['uotoPlut', 'utoPlut'], ['JuVeMeurcurynuespi', 'J'], ['JuVeMeurcurynuespi', 'MMercury'], ['Mercury', 'MrerMcury'], ['Uranus', 'Pluto'], ['JupiutJupiterer', 'JupiutJupiterer'], ['Meuyrccury', 'Meurcury'], ['Mercury', 'MJiterercury'], ['JupitJupiterer', 'Jupupiterer'], ['s', 'Jupi'], ['Merry', 'MeVenusrcurNeptuney'], ['PlMeuyrccuryu', 'Pluto'], ['PUranuslMeurcurryuto', 'PUranuJiterury'], ['PlMeuyrcPUranucuryu', 'uto'], ['MMercury', 'MMercury'], ['MeVenusrcurNeptuney', 'Pluto'], ['MeVenusrcurNeptuneyMercury', 'MeVenusrcurNeptuney'], ['MeurcuryVensus', 'MeurcuryVensus'], ['Jiter', 'Mercury'], ['Plut', 'J'], ['Satuurn', 'Saturn'], ['MMercury', 'JuVeMeurcurynuespi'], ['MJSatuurniterercuryPUranuslMeurcuryuto', 'MJSatuurniterercuryPUranuslMeurcuryuto'], ['JupMercuryiutJupiterer', 'JupiutJupiterer'], ['s', 'JupiMerry'], ['JupiMerry', 'JupiMerry'], ['JMJSatuurniterercuryPUranuslMeurcuryuto', 'Jupi'], ['NpepteunVeneus', 'J'], ['MeVenusrcury', 'PUranJMJSatuurniterercuryPUranuslMeurcuryrutousluto'], ['uotoPlPut', 'utoPlut'], ['Jiter', 'Jiter'], ['ss', 'J'], ['Uranus', 'Uranus'], ['Veneu', 'Veneu'], ['PUranu', 'MercuryJupi'], ['utSatuurno', 'utoo'], ['Venues', 'MeMMercMury'], ['Veneu', 'PUranusluto'], ['Plut', 'Pluto'], ['Vensus', 'MeVenusrcury'], ['JMJSatuurniterercuryMeurcuryVensusPUranuslMeurcuryuto', 's'], ['PUranusluto', 'PtUranusluto'], ['UUranus', 's'], ['MeMMercMury', 'VenuJupMercuryiutJupiterers'], ['Jite', 'Jiter'], ['NppepteunVeneus', 'NpepteunVeneus'], ['Plut', 'JJupiter'], ['Meuyrccury', 's'], ['Jupiter', 'Venuus'], ['JupJupiteriter', 'Jupiter'], ['Earth', 'MercSaturnury'], ['Neptne', 'MMercur'], ['Jiter', 'Venuus'], ['JupJupiteriter', 'MMercury'], ['Pluto', 'Earrth'], ['JupJupiteriter', 'UrasnUus'], ['pNeptne', 'MMercur'], ['eVenues', 'Venus'], ['s', 's'], ['MrerMcury', 'Venus'], ['MJSatuurniterercuryPUranuslMeurcuryuto', 'PUrJJupiterupiteranu'], ['MeVenusrcMercuryJupiurNeptuney', 'Pluto'], ['PlMeuyrcPUranucuryu', 'MeVenusrcurNeptuneyMercury'], ['PUrJJupiterupiteranu', 'ss'], ['eVenues', 'eVenues'], ['rMerry', 'MercuMeVenusrcurNeptuneyry'], ['JupJiter', 'MJiterercury'], ['PUrannu', 'PUranu'], ['Mars', 'uotoPlPut'], ['utSatunurno', 'utoo'], ['VeneNpepteunVeneusu', 'Veneu'], ['Mas', 'MarMs'], ['rMerSaturnry', 'P'], ['SatPUranusVenuJupMercuryiutJupiterersJMJSatuurniterercuryPUranuslMeurcuryutolutourn', 'Mercury'], ['JupJiter', 'JupJiter'], ['PUrannu', 'PUrPlutoanu'], ['PUrVeneuJJupiterupiteranuotoPlutu', 'MJSatuurniterercuryPUranuslMeurcuryuto'], ['MarMs', 'JupitJupiterer'], ['NppeepteunVeneus', 'NppepteunVeneus'], ['Mars', 'Mars'], ['JupJtiter', 'JupJiter'], ['JuVeMeurcurynuespiVenuus', 'JuVeMeurcurynuespiVenuus'], ['VeMeurcurynues', 'lut'], ['MeVenusrcurNeptuneyMercury', 'Mercury'], ['MMercury', 'JuVeMeurcurynruespi'], ['Jiter', 'JitPUranuslMeurcuryutoJer'], ['Vensus', 'MeVenuotoPlPutusrcury'], ['UPUranuJiteruryMarMsranus', 'UPUranuJiteruryMarMsranus'], ['MUrasnUus', 'JMJSatuurniterercuryMeurcuryVensusPUranuslMeurcuryuto'], ['JJupiter', 'Pluto'], ['Meurcuury', 'Meurcury'], ['Saturn', 'Venus'], ['PUranuslMeurMMercuryryuto', 'PUranuslMeurcuryuto'], ['JitPUranuslMeurcuryutoJer', 'uotoPlPut'], ['PtUranursluto', 'JMJSatuurniterercuryPUranuslMueurcuryuto'], ['Satuurn', 'Satuurn'], ['Maas', 'MMercur'], ['eVenues', 'eVen'], ['PlMeuyrccuryPu', 'Pluto'], ['MercuMeVenusrurNeptuneyry', 'MercuMeVenusrcurNeptuneyry'], ['JitPUranuslMeurcuryutoJer', 'Vensus'], ['Venus', 'MeMMercMury'], ['NppepteunVeneus', 'NppepteunVeneus'], ['pNeptne', 'Jiter'], ['JupiMerry', 'Vensus'], ['Jupi', 'JuPtUranurslutoi'], ['JMJSatuurniterercuryPUranuslMeurcuryuto', 'JMJSatuurniterercuryPUranuslMeurcuryuto'], ['Venus', 'rMerry'], ['UPUranuJiteruryMarMsranus', 'UPUranuJPUrannuiteruryMarMsranus'], ['Venus', 'Venus'], ['Pluo', 'Pluto'], ['MMerMMercurcury', 'VeMeurcEarthurynues'], ['uto', 'UPUranuJiteruryMarMsranus'], ['Jupi', 'PUrJJupitrupiteranu'], ['JupJupiteriMrerMcuryter', 'JupJupiteriter'], ['utoo', 'MeVenuotoPlPutusrcury'], ['VenuPluts', 'MeMMercMury'], ['PlMeuyrcPUranucuryu', 'uuto'], ['JupJtiter', 'Pluto'], ['MeVenusrcury', 'MeVenusJupiutJupitererrcury'], ['VeJMJSatuurniterercuryMeurcuryVeneurcuryutous', 'Plut'], ['UUranus', 'Vensus'], ['JJupiteruMercuryJupipiter', 'JJupiterupiter'], ['VenuJupMercuryiutJupiterers', 'MeVenJJupiterusrcMercuryJupiurNeptuney'], ['utSatuurno', 'utSatuurno'], ['Jupi', 'PtUranusluto'], ['Jupiter', 'Vs'], ['utoo', 'NppepteunVeneus'], ['JuVeMeurcurynuespi', 'UrasnUus'], ['PlMeuyrccuryPu', 'Pluo'], ['Mercury', 'MeVenuotoPlPutusrcury'], ['uuto', 'uotoPlPut'], ['PlMeuycPUranucury', 'PlMeuycPUranucuryu'], ['utSatunurno', 'Pluo'], ['uuto', 'MercSaturnury'], ['MercSatucrnury', 'MercSaturnury'], ['JJupiteruMercuryJupipiter', 'JJupiteruMercuryJupipiter'], ['JJupiteruJMercuryJupipiter', 'JJupiteruMercuryJupipiter'], ['s', 'JuJupiterpiter'], ['Venuus', 'Venuus'], ['MeVenusrcurNeptuney', 'MeVenusrcurNeptuMeVenuotoPlPutusrcuryney'], ['Venuees', 'MeMMercMury'], ['uotoPlut', 'Satuurn'], ['Neptune', 'NNeptune'], ['PUranuUPUranuJiteruryMarMsranus', 'PUranu'], ['Venus', 'rMery'], ['Jupitreer', 'Jupitrer'], ['rMerSaturnry', 'NpepteunVeneus'], ['JuVeMeurcurynuespiVenuus', 'utSatunurno'], ['PMeurcuurytUrano', 'PMeurcuurytUranursluto'], ['s', 'PUrJJupiterupiteranu'], ['eVenues', 'MercuMeVenusrcurNeptuneyry'], ['MeVenusrncury', 'MeVenusrcury'], ['JupJiter', 'JupJiterMeVenusrcury'], ['Plutoo', 'Earth'], ['pNeptne', 'Mercury'], ['uotoPlut', 'Vensus'], ['VeMJSatuurniterercuryPUranuslMeurcuryutoMeurcurynues', 'lut'], ['ss', 'Jupi'], ['uuto', 'uuto'], ['PUMJSatuurniterernuuslMeurcuryutoranu', 'PUMJSatuurniterercuryPUranuuslMeurcuryutoranu'], ['rMetuneturnry', 'rMerSaNeptuneturnry'], ['MercuMeVenusrccurNeptuneyry', 'MercuMeVenusrcurNeptuneyry'], ['Maas', 'VVeneu'], ['MarMs', 'Mars'], ['MMeurcuryVensusPlMeuycPUranucuryu', 'PlMeuyrccuryPu'], ['Veneu', 'JiterVenuus'], ['MeVenuotoPloPutusrcury', 'MeVenuotoPlPutusrcury'], ['Mercury', 'MyJiterercury'], ['MeVenusrcury', 'MMercury'], ['oPlu', 'uto'], ['NppepteMMercuryunVeneus', 'NppepteunVeneus'], ['PUMJSatuurniterernuuslMeurcuryutoranu', 'PUMJSatuurnuryPUranuuslMeurcuryutoranu'], ['PUrJ', 'ss'], ['PUranusluto', 'MeVenusrcury'], ['MercuMeVenusrcurNeptuneyry', 'JupeiMerry'], ['VeJMJSatuurniterercuryMeurcuryVeneurcuryutous', 'VeJMJSatuurniterercuryMeurcuryVeneurcuryutous'], ['VeMeurcurynues', 'Pllut'], ['Mury', 'JJupiteruMercuryJupipiter'], ['Uranus', 'M'], ['Merry', 'PUranJMJSatuurniterercuryPUranuslMeurcuryrutousluto'], ['Mury', 'JMJSatuurniterercuryPUranuslMeurcuryuto'], ['Meuyrccury', 'eurccury'], ['VeMeurcusrynues', 'VeMeurcurynues'], ['rMerry', 'PlutMury'], ['Plutoo', 'Pluto'], ['MJiterercury', 'MJiterercury'], ['PluPto', 'Pluto'], ['JJupiteriuJMercuryJupipiter', 'JJupiteriuJMercuryJupipiter'], ['MuPlutoory', 'JMJSatuurniterercuryPUranuslMeurcuryuto'], ['VeMeurcEarthurynues', 'MMerMMercurceury'], ['PUrJJupitrupiteranu', 'VenPUrVeneuJJupiterupiteranuotoPlutuus'], ['JiterVenus', 'Venues'], ['VenuPluts', 'Saturn'], ['Pllut', 'Earth'], ['Mury', 'Jiter'], ['UPUranuJiteruryMarMsranMus', 'UPUranuJiteruryMarMsranMus'], ['MeVVenusrcury', 'MeVenusrcury'], ['utSatJiterunurno', 'MercuMeVenusrcurNeptuneyry'], ['Meuyrccury', 'MeVenusrcurNeptuneyMercury'], ['s', 'PUrJJupitePUrVeneuJJupiterupiteranuotoPJluturupiteranu'], ['PlMeuycPUranucury', 'PMeurcuurytUranursluto'], ['Neptuune', 'Neptuune'], ['PUranuslMeurcuerryutoJupiter', 'PUranuslMeurcuerryutoJupiter'], ['VenPUrVMerryeneuJJupiterupiteranuotoPlutuus', 'VenPUrVMerryeneuJJupiterupiteranuotoPlutuus'], ['JupiMerrry', 'JupiMerry'], ['PUrVeneuJJupiterupiteranuotoPlutu', 'uuto'], ['Mury', 'JJupiteruMerer'], ['PUranusluto', 'JupitJupiJupiutJupitererterer'], ['JupitePlutor', 'JupitePlutor'], ['Neptune', ''], ['eVenues', 'Jiter'], ['rMetuneturnry', 'PUrPlutoanu'], ['JuVeMMeVenusrcurNeptuneyeu', 'MMercury'], ['UPUranrMsranMus', 'UPUranuJiteruryMarMsranMus'], ['MeurcuryMVensus', 'MeuurcuryMVensus'], ['PUMJSatuurnuryPUranuuslMeurcuryutoranu', 'lut'], ['PUranuslMeurcurryuto', 'PUVeMJSatuurniterercuryPUranuslMeurcuryutoMeurcurynuesranuJiterury'], ['Mrry', 'Mry'], ['MeVenusrcury', 'MeVenusrcury'], ['pNeptpne', 'MMercur'], ['MeVenusrcurNeptuney', 'MeVeneVenuesuotoPlPutusrcury'], ['PUranuslMeurcuerryutoJupiter', 'PUranuslMeurcuerryutoJJJupiteruMererer'], ['PtUranurNppeepteunVeneusto', 'PtUranursluto'], ['JupitEarrthJupiterer', 'Jupupiterer'], ['VenuPlJuVeMeMJSatuurniterercuryPUranuslMeurcuryutourcurynuespiuts', 'VenuPlJuVeMeurcurynuespiuts'], ['VenuJupJupiterers', 'VenuJupMercuryiutJupiterers'], ['PlMeuyrcPUranucuryulut', 'lut'], ['J', 'J'], ['uPUranuslMeurcurryutouto', 'uotoPlPut'], ['SaturUPUranuJPUrannuiteruryMarMsranusn', 'Venus'], ['UUranMuPlutooryus', 'Vensus'], ['PUrJJupitrupiteranu', 'PUrJJupitrupiteranu'], ['JMJSaVenuJupJupitererstuurnieurPUrannucuryuto', 'JMJSatuurnieurPUrannucuryuto'], ['MeurcuryMVensus', 'Veneu'], ['rMury', 'JJupiteruMercuryJupipiter'], ['utSatuuPUranuslMeurcuerryutoJJJupiteruMerererrno', 'utSatuurno'], ['Jiteir', 'Jiter'], ['JupJtiteer', 'JupJiter'], ['MercuMeVenusrurNeputuneyry', 'MercuMeVenusrcurNeptuneyry'], ['Jupitreer', 'VeJMJSatuurniterercuryMeurcuryVeneurcuryutous'], ['MMerMMercurcury', 'VeMeurcEartluthurynues'], ['JJJiteirupiteruJMercuryPUranuJupipiter', 'JJJiteirupiteruJMercuryJupipiter'], ['JMJSaVenuJupJupitererstuurnieurPUrannucuryuto', 'Plutoo'], ['PiUranuJiterury', 'PUranuJiterury'], ['rMerry', 'PlutMurrMerSaNeptuneturnry'], ['VePUranuJiterurysus', 'Vensus'], ['MeurcuryMVensus', 'MeurcuryMVensus'], ['JiterVenus', 'JJupiteruMercuryJupipiter'], ['MercuMeVenusruruNeptuneyry', 'MercuMeVenusrurNeptuneyry'], ['VenNppepteunVeneussus', 'Vensus'], ['Venues', 'Jupi'], ['eurccury', 'euUUranMuPlutooryusrccury'], ['JuVeMeurcurynuespi', 'JuVeMeurcurynuespi'], ['Jiter', 'MMerMMercurcury'], ['PlMeuyrcPUranucuryulut', 'Pluto'], ['JMJSaVenuJupJupitererstuurnieurPUrannucuryuto', 'JMJSatuurniterercuryMeurcuryVensusPUranuslMeurcuryuto'], ['Jupitrer', 'Venuees'], ['Veneu', 'Meurcuury'], ['MMercur', 'Mercur'], ['MercuMeVenusrcurNeptuneyry', 'Venuees'], ['VeMeeurMerryrcusrynues', 'VVensuseMeurcurynues'], ['MercuMeptuneyry', 'Venuees'], ['rMerSaturnry', 'rMerSaturnry'], ['utSatJiterunurno', 'utSatJiterunurno'], ['utSatuurno', 'uutSatuurno'], ['JupJiterMeVJupitreerenusrcury', 'JupJiterMeVenuotoPlPutusrcuryMeVenusrcury'], ['VVeneu', 'Jiupiter'], ['MMerceury', 'MMercury'], ['Uranus', 'JupJiter'], ['JitPUMJSatuurniterercuryPUranuuslMeurcuryutoranur', 'Jiter'], ['JitPUMJSatuurnitNeptuneerercuryPUranuuslMeurcuryutoranur', 'Jiter'], ['JuPtUranurrsluatoi', 'JuPtUranursluatoi'], ['JupJupiteriMrer', 'JupJupiteriter'], ['PJMJSatuurniterercuryMeurcuryVensusPUranuslMeurcuryutoUranu', 'MercuryJupi'], ['JMJSatrannucuryuto', 'JMJSatuurnieurPUrannucuryuto'], ['SaturUPUranuJPUrannuiteruryMarMsranusn', 'MercSaturnury'], ['PUranruslMeurPlMeuyrccuryur', 'PUranruslMeurcuerryutoJJJupiteruMererer'], ['UPUranuJiteruryMaruMsranus', 'UPUranuJiteruryMarMsranus'], ['Venuus', 'Pluto'], ['MMury', 'MMury'], ['MeVenusrcury', 'MeVenusrncury'], ['VVeneu', 'utSatMaruurno'], ['Meurcury', 'P'], ['PiUranuJiterury', 'JJupiteruMercuryJupipiter'], ['Neptune', 'NNepteune'], ['MeVenuotoPloPutusrcury', 'MeVenusJupiutJupitererrcury'], ['Maas', 'MeVenJJupiterusrcMercuryJupiurNeptuney'], ['MMerMMercuy', 'MMerMMercurcury'], ['MMerMMercuy', 'MMerMMercuy'], ['PUrJJupiJitPUranuslMeurcuryutoJerterupiteranu', 'VVeneu'], ['JJupiMJSatuurniterercuryPUranuslMeurcuryutoer', 'Plut'], ['rMerry', 'PUranuslMeurcuerryutoJupiter'], ['JutSatuuPUranuslMeurcrMuryuerryutoJJJupiteruMerererrnoupi', 'Jupiter'], ['JupitEarrthJupitererVeneNpepteunVeneusu', 'Veneu'], ['PUMJSatuurnuryPUranuuslMeurcuryutoranu', 'Jupiter'], ['MeVenusrcurNeptuneyMercury', 'MeVenusrcurNeptuneyMercury'], ['MaEarrthrMs', 'VenuJupJupiterers'], ['Satuurn', 'Saturun'], ['Uranus', 'JJJiteirupiteruJMercuryPUranuJupipiter'], ['SatPUranusVenuJupMercuryiutJupitereorsJMJSatuurniterercurPUranuslMeurcuryutolutourn', 'SatPUranusVenuJupMercuryiutJupitereorsJMJSatuurniterercurPUranuslMeurcuryutolutourn'], ['PUranruslMeurPlMeuyrccuryur', 'PUranruslMeurPlMeuyrccuryur'], ['SatPUranusVenuJupMercuryiutJupitereorsJMJSatuurniterercurPUranuslMeurcuryutolutourn', 'MeVenuotoPlPutusrcury'], ['MrerMcuryJitPUMJSatuurniterercuryPUranuuslMeurcuryutoranur', 'JitPUMJSatuurniterercuryPUranuuslMeurcuryutoranur'], ['VePUranuJiterurysus', 'VePUranuJiteruryrMeryus'], ['PlMeuyrcPUranucuryu', 'PlMeuyrcPUranucuryu'], ['Neptune', 'PtUranursluto'], ['Plutoo', 'oPlutoo'], ['JJupiteruMercuuryJupipiter', 'JJupiteruMercuryJupipiter'], ['Satuurn', 'SatPrun'], ['uuuto', 'uuto'], ['SatPrun', 'MeuurcuryMVensus'], ['PUVeMJSatuurniterercuryPUranuslMeurcuryutoMeurcurynuesranuJiterury', 'PUVeMJSatuurniterercuryPUranuslMeurcuryutoMeurcurynuesranuJiterury'], ['VeJMJSatuurniterercuryMeurcuryVeneurcuryutous', 'Mars'], ['VeMJSatuurniterercuryPUranuslMeurcuryutoMeurcurynues', 'JuVeMeurcurynruespi'], ['Jiitier', 'JitPUMJSatuurniterercuryPUranuuslMeurcuryutoranur'], ['Saturn', 'PtUranusluto'], ['uto', 'JupitJupitVenPUrVeneuJJupiterupiteranuotoPlutuuserer'], ['JupJupiteriter', 'MyJiterercury'], ['VenuPluts', 'Jitupiter'], ['PUranu', 'Mercury'], ['PtUranurNppeepteunVeneusto', 'PtUranurNppeepteunVeneusto'], ['JupitEarrthJupitererVeneNpepteunVeneusu', 'JupitEarrthJupitererVeneNpepteunVeneusu'], ['utoPJuPtUranurrsluratoilut', 'utoPJuPtUranurrsluatoilut'], ['PUrJJJupitEarrthJupitererVeneNpepteunVeneusuupitrupiteranu', 'PUrJJupitrupiteranu'], ['Plut', 'MyJiterercury'], ['MJSatuurniterercuryPUranuslMeurcuryuPlutto', 'MJSatuurniterercuryPUranuslMeurcuryuto'], ['Jiter', 'VenuJupJupiterersluto'], ['oPlutoo', 'MeVenusrcurNeptuney'], ['pJupiJupJiterMeVJupitreerenusrcury', 'Jupiter'], ['JupiMerry', 'VeJMJSatuurniterercuryMeurcuryVeneurcuryutous'], ['MMMercury', 'MMercury'], ['NNepteune', 'NNepteune'], ['JuVeMMeVenusrcurNeptuneyeu', 'PlMeuyrccuryPu'], ['MercuryJupi', 'MercuryJupi'], ['UPUranuJiteruryMarMsranus', 'rMerSaturnryJupitEarrthJupiterer'], ['MarMMs', 'MarMs'], ['Jite', 'MMerMMerrcuy'], ['PUranruslMeurPlMeuyrccuryurM', 'Meuyrccury'], ['MeMMercMury', 'Veneus'], ['SatPUranusVeanuJupMercuryiutJupiterersJMJSatuurniterercuryPUranuslMeurcuryutolutourn', 'SatPUranusVenuJupMercuryiutJupiterersJMJSatuurniterercuryPUranuslMeurcuryutolutourn'], ['VeJMJSatuurniterercuryMeurcuryVeneurcuryutous', 'VeJMJSatuurnryVeneurcuryutous'], ['JupJtiteer', 'JupJter'], ['PUranu', 'VeJMJSatuurnryVeneurcuryutous'], ['PUranruslMeurcuerryutoJJJupiteruMererer', 'PUranruslMeurcuerryutoJJJupiteruMererer'], ['PUranusluto', 'JupitJitererterer'], ['JupJiterMeVenusrcury', 'Jiter'], ['VeMeurcusrynues', 'Pluto'], ['PUranruslMeurPlMeuyrccuryurM', 'Mrry'], ['pNeptne', 'PllutJiter'], ['eJiter', 'eJiter'], ['MeuurcuryMeVensusury', 'MMerMMercuy'], ['PUranussluto', 'Mars'], ['MeMMerMMercurceuryurcuMry', 'Meurucuury'], ['JMJSatuurniterercuryPUranuslMeurcuryuto', 'oPlu'], ['utSatunuorno', 'Pluo'], ['PlMeuyrcPUranucuryu', 'PlMeuyrcPUranucuJitPUranuslMeurcuryutoJerryu'], ['uotoPluMeVenuotoPloPutusrcuryt', 'uotoPlut'], ['NppepteMMercuryunVeneus', 'MeVenusrcurNeptuney'], ['JitVenueser', 'Jiter'], ['Jiter', 'JitPiUranuJiteruryr'], ['JuVeMeurcurynuespi', 'PUranruslMeurPlMeuyrccuryur'], ['JupJupiteriter', 'uuto'], ['Venues', 'rMurSatPUranusVeanuJMMury'], ['MMerMMercurcurPy', 'VeMeurcEartluthurynues'], ['MercuMeVenusrurNeputuneyry', 'MercuMeVenusrurNeputuneyry'], ['PUranusslutto', 'NNeptune'], ['JMJSatuurniterercuryPUranuslMeurcuryuto', 'JMJeurcuryutoUPUranuJiteruryMarMsranus'], ['PtUranurNppeepteunVeeneusto', 'PtUranurNppeepteunVeneusto'], ['JupitJitererterer', ''], ['s', 'Plutoo'], ['JiterVenuus', 'Jiter'], ['UrasnUus', 'arrMurSatPUranusVeanuJMMury'], ['PlMeryu', 'Pluto'], ['uotoPlut', 'Satuuurn'], ['Jiteir', 'JiMuPlutooryter'], ['uotoPlPut', 'utPJitPUranuslMeurcuryutoJerlut'], ['PUrJJupitrupiteranu', 'MuPlutoory'], ['', 'uto'], ['Mars', 'NeptunePUranuslMeurMMercuryryuto'], ['Jupitrer', 'Veenuees'], ['MMerMMerrcuy', 'Pluo'], ['MMeurucuryVensusPlMeuycPUranucuryu', 'PlMeuyrccuryPu'], ['uotoPlPut', 'Venus'], ['MMercury', 'MMercur'], ['Veunus', 'MeVenusrcurNeptuneyMercury'], ['PUMJSatuurniterercuryPUranuuslMerMerSaturnryJupitEarrthJupitererurcuryutoranu', 'PUMJSatuurniterercuryPUranuuslMerMerSaturnryJupitEarrthJupitererurcuryutoranu'], ['VeJMJSatuurniterercuryMeurcuryPlMeuyrcPUranucuryulutVeneurcuryutous', 'Marslut'], ['anus', 'Uranus'], ['eVenues', 'MercuMeVenusrcurNeptuJitupiterry'], ['NppeepnteunVeneus', 'NppepteunVeneus'], ['s', ''], ['Jiupiter', 'VVeneu'], ['MeVenuotoPloPutMMerMMercurceuryusrcury', 'MeVenuotoPloPutusrcury'], ['JupJiter', 'Jupiter'], ['Plutlu', 'Plutlut'], ['NeptunePUranuslMeurMMercu', 'NeptunePUranuslMeurMMercuryryuto'], ['Venues', 'Saturn'], ['MeuurcuryMVensus', 'MeVenusrcurNeptuneyMercury'], ['VerJMJSatuurniterercuryMeurcuryPlMeuyrcPUranucuryulutVeneurcuryutous', 'Venus'], ['VePUranuJiterurysus', 'VePUranuJiteruruuutoyrMeryus'], ['PUranruslMeurPlMeuyrccuryurM', 'MJSatuurniterercuryPUranuslMeurcuryuto'], ['JupiMerry', 'PUVeMJSatuurniterercuryPUranuslMeurcuryutoMeurcurynuesranuJiterury'], ['Maas', 'MeVenJJupiterey'], ['Pl', 'JJupiter'], ['MercuMeVenusrurNeptuneyry', 'Plut'], ['MMerMMerccuy', 'MMerMMercuy'], ['Mar', 'VeMeurcEarthurynJitPUMJSatuurniterercuryPUranuuslMeurcuryutoranurues'], ['Jitupitter', 'Jitupiter'], ['MeVenuotoPlPutusrcury', 'MeVenuotoPlPutusrcury'], ['MMerMMerrcuy', 'oPlVVensuseMeurcurynuesutoo'], ['UUrarnus', 's'], ['ss', ''], ['MMercur', 'Mercr'], ['Jiupiter', 'PUranruslMeurcuerryutoJJJupiteruMerererJiterury'], ['Mars', 'rMury'], ['VenuPlJuVeMeMJSatuurniterercuryPUranuslMeurcuryutourcurynuespiuts', 'VenuPlJuVeMeMJSatuurniterercuryPUranuslMeurcuryutourcurynuespiuts'], ['MeVenusrcurNeptunJJupiteruMercuryJupipiterey', 'MeVenusrcurNeptuney'], ['NNePUranJMJSatuurniterercuryPUranuslMeurcuryrutouslutopteune', 'NNepteune'], ['PlMeuyrcPUranNNepteuneucuryu', 'PJupitJupiJupiutJupiterertererlMeuyrcPUranucuJitPUranuslMeurcuryutoJerryu'], ['MMerMMercurcurPy', 'PtUranurNppeeptenunVeneusto'], ['Pluto', 'Plouto'], ['SatPUuranusVenuJupMercuryiutJupitereorsJMJSatuurniterercurPUranuslMeurcuryutolutourn', 'SatPUranusVenuJupMercuryiutJupitereorsJMJSatuurniterercurPUranuslMeurcuryutolutourn'], ['Venuuus', 'Veenuus'], ['JupJiterMeVJupitreerenusrcury', 'JupJiPlMeuyrccuryuenuotoPlPutusrcuryMeVenusrcury'], ['Venus', 'JuPtUranursluatoi'], ['JJupiteruJMercuryJupipiter', 'PlMeuyrcPUranNNepteuneucuryu'], ['UUranustupitter', 'Jitupitter'], ['VeJMJSatuurniterercuryMeurcuryVeneurcuryutous', 'MercuryJupi'], ['JVenuuusupiter', 'Veneus'], ['MercuMeVenusrurNeptuneyry', 'Jitup'], ['rMetuneturnry', 'Saturun'], ['JJupiter', 'pNeptne'], ['Venuuus', 'MeurcuryMVensus'], ['PlMeuyMMerMMerrcuyrccuryPu', 'PlMeuyrccuryPu'], ['VenuPlJuVeMeurcurynuespiuts', 'VeMeurcEarthurynJitPUMJSatuurniterercuryPUranuuslMeurcuryutoranurues'], ['Uranuus', 'Uranus'], ['NNePUranJMJSatuurniterercuryPUranuslMeurcuryrutouslutopteune', 'JupitJupiJupiutJupiterertetrer'], ['', ''], ['Mercury', ''], ['', 'Saturn'], ['S', 'MSaturnercury'], ['Venus', 'Uranus'], ['Jupirter', 'Pluto'], ['Saturn', 'MaNeptune'], ['MSaturnercury', 'Venus'], ['Neptu', 'Neptu'], ['SaturEarthn', 'MaNeptune'], ['MaNeptune', 'Neptune'], ['Neptu', 'Mercury'], ['MSaturnercury', 'Vs'], ['cMercry', 'Mercry'], ['Neptu', 'Earth'], ['Jupiter', 'Veunus'], ['Jupiter', 'Vnus'], ['MarsMSaturneMercuryrcury', 'MarsMSaturneMercuryrcury'], ['uVnus', 'Jupiter'], ['MarsMSaturneMercuryrcurypiter', 'VenuscMercry'], ['Neptu', 'Pluto'], ['MVenuscMercryarsMSaturneMercuryrcury', 'MarsMSaturneMercuryrcury'], ['Jupiter', 'MSaturnercury'], ['eJupirter', 'Pluto'], ['SaturEarthhtn', 'VeunMVenuscMercryarsMSaturneMercuryrcuryus'], ['MarsMSaturneMercuryrcurypiter', 'MSaturnercury'], ['Venus', 'Ms'], ['SaturEarthhtn', 'SaturEarthn'], ['MSaturnercury', 'Neptu'], ['Jupiter', 'MSatuy'], ['MaNeptune', 'SaturEarthn'], ['Jupirter', 'Jupiter'], ['Mercrry', 'Mercry'], ['Vnuss', 'Vs'], ['Jupiter', 'MaNeptune'], ['Vnuss', 'MSatuy'], ['MSMaturnercury', 'MSaturnercury'], ['MVenusMercurycMercryarsMSaturneMercuryrcury', 'Neptu'], ['JupiUranuster', 'MSaturnercury'], ['MSaturnercury', 'Vnuss'], ['MarsMSaturneMercuryrcurypiter', 'MarsMSaturneMercuryrcurypiter'], ['Neptu', 'Vnus'], ['Jupirt', 'JuMercurypiter'], ['SaturEarthhtn', 'Mercrry'], ['Jupirter', 'Neptune'], ['Jupiter', 'JuepiMSatuyter'], ['MaNeptuMVenuscMercryarsMSaturneMercuryrcuryune', 'MaNeptuune'], ['MSaturnercury', 'MSMaturnercury'], ['uVnMSaturnercury', 'MarsMSaturneMercuryrcury'], ['Pluto', 'Neptune'], ['Pluto', 'Neptu'], ['MSaturnercurMarsy', 'Vs'], ['Vnuss', 'Vnuss'], ['VenusUranuscMercry', 'VenusUranuscMercry'], ['SatuMercuryrEarthhtn', 'SatuMercuryrEarthhtn'], ['Ms', 'Mercury'], ['Jupiter', 'NeptuneVnus'], ['eJupirter', 'MarsMSaturneMercuryrcurypiter'], ['MSaturnercury', 'MSaturnercury'], ['MaNeptune', 'MSaturnercury'], ['MaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusune', 'MSaturnercury'], ['Jupitter', 'Jupitter'], ['MarsMSaturrneMercuryrcurypiter', 'MarsMSaturneMercuryrcurypiter'], ['Ea', 'Earth'], ['Vs', 'Vs'], ['JuMerJuMercurypitercurypiter', 'JuMercurypiter'], ['VsSatuMercuryrEarthhtn', 'Vs'], ['Ms', 'MarsMSaturneMercuryrcury'], ['MSaturnercury', 'MEarthSaturnercury'], ['upiUranuster', 'MSaturnercuryVenusUranuscMercry'], ['VenuscMercry', 'MarsMSaturneMercuryrcurypiteMaNeptuuner'], ['uss', 'MarsMSaturrneMercuryrcurypiter'], ['Mss', 'MarsMSaturneuMercuryrcury'], ['Pluto', 'Mercury'], ['uVnMSaturnercuVenusry', 'uVnyMSaturnercury'], ['SaturEarthhtn', 'Jupiter'], ['NeptuneVnus', 'MarsMSaturneMercuryrcury'], ['Neptu', 'Neptuu'], ['uss', 'ss'], ['Mercrry', 'Mercrry'], ['JuMercurypiter', 'Mercrry'], ['JuJuepiMSatuyterpirter', 'JuJuepiMSatuyterpirter'], ['uVnMSaturnercuVenusry', 'Mercury'], ['MaNeptune', 'MSMaturnercury'], ['Mrcrry', 'Mercrry'], ['JuMerJuMercurypitercurypiter', 'Neptu'], ['Mercrry', 'VenuscMercry'], ['MaMarsMSaturneuMercuryrcurys', 'Neptu'], ['MarsMSaturneMercuryrcuryPluto', 'Mercury'], ['MarsMSaturneMercuryrcuryrpiter', 'MarsMSaturneMercuryrcurypiter'], ['sVeunusVnus', 'sVnus'], ['MaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusune', 'MarsMSaturneMercuryrcurypiter'], ['MarsMSaturneMercuryrcurypiter', 'JuJuepiMSatuyterpirter'], ['uJuMerJuMercurypitercurypiterVnMSaturnercury', 'uVnMSaturnercury'], ['JupirsVnusr', 'JupiVsSatuMercuryrEarthhtnrtuer'], ['PlutEa', 'Jupirt'], ['Jupiter', 'VeunMVenuscMercryarsMSaturneMercuryrcuryus'], ['Neptune', 'Pluto'], ['Ms', 'VeunusMs'], ['Jupiiter', 'MaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusune'], ['SS', 'MSaturnercury'], ['MSatuy', 'Pluto'], ['JupiVsSatuMercuryrEarthhtnrtuer', 'Mercry'], ['Jeupirter', 'Jupiter'], ['SaturEarthn', 'MVsSatuMercuryrEarthhtnaNeptunUranuse'], ['MaMarsMSaturneuMercuryrcurys', 'Neptune'], ['VenusUranuscMercryMarsMSaturneMercuryrcury', 'VenusUranuscMercryMarsMSaturneMercuryrcury'], ['uVnus', 'MarsMSaturneMercuryrcurypiter'], ['sVnuss', 'Vnuss'], ['VeuNeptuneVnusnus', 'Veunus'], ['VenusUranuscMercryMarsMSaturneMercuryrcury', 'uVnus'], ['SaturEarthn', 'SaturEarthn'], ['Nepttu', 'Neptuu'], ['VsSatuMercuryrEarthhtn', 'MaNepMtune'], ['MarsMSaturneMercuryrcurypiter', 'Neptuu'], ['MSatuy', 'Vs'], ['MSatuy', 'PlutoV'], ['VVenus', 'Mars'], ['uVnryMSaturnercury', 'Mercrry'], ['VsSatuMercuryrEarthhtnJupiter', 'VsSatuMercuryrEarthhhtnJupiter'], ['Jupiitier', 'Jupiter'], ['PtlutE', 'PtlutE'], ['Jupiitier', 'Jupiiter'], ['JupNeptuneVnusirter', 'JupNeptuneVnurter'], ['VenuscMercry', 'VenuscMercry'], ['Neptu', 'MarsMSaturneMercuryrcuryPluto'], ['JuJpiter', 'Jupiter'], ['VVenus', 'Ms'], ['Mercyry', 'Mercry'], ['MSaturnerScury', 'MEarthSaturnercury'], ['SaturEarthn', 'sMVsSatuMercuryrEarthhtnaNeptunUranuseVeunusVnus'], ['Vnuss', 'cMercry'], ['MSaturneVeunMVenuscMercryarsMSaturneMercuryrcuryusrScury', 'MSaturneVeunMVenuscMercryarsMSaturneMercuryrcuryusrScury'], ['Vnsus', 'Jupiter'], ['JupMaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusuneiter', 'Jupiter'], ['uVnMSaturnercuVenusry', 'JupirsVnusr'], ['Venus', 'sMMars'], ['MaNeptunePlutEa', 'MaNeptune'], ['MarsMSaturneMercuryrScurypitePlutEar', 'JuJuepiMSatuyterpirter'], ['VsSatuMercuryrEanJupiter', 'VsSatuMercuryrEarthhhtnJupiter'], ['Mercyry', 'MSaturneVeunMVenuscMercryarsMSaturneMercuryrcuryusrScury'], ['VeuNeptunMarsMSaturneMercuryrcurypitereVnusnus', 'VeuNeptuneVnusnus'], ['VVenus', 'VVenus'], ['uVnyMSaturnercury', 'MarsMSaturrneMercuryrcurypiter'], ['SaturEarthn', 'uss'], ['VsSatuMercuryrEarrthhtn', 'VsSatuMercuryrEarthhtn'], ['VenusUranuscMercryMarsMSaturneMercuryrcury', 'Vs'], ['VenuscMMarsMSaturneMercuryrcuryercrPlutEa', 'VenuscMMarsMSaturneMercuryrcuryercrPlutEa'], ['uVnryMSaturnercury', 'uVnryMSaturnercury'], ['Mrcrry', 'Mrcrry'], ['Vs', 'uVnuss'], ['MarsMSaturrneMercuryrcurypiter', 'MarsMSaturneMercuryrcuryPluto'], ['SS', 'SS'], ['MarsMtSaturneMercuryrcurypiteMaNeptuuner', 'Neptu'], ['MSaturnercury', 'sMVsSatuMercuryrEarthhtnaNeptunUranuseVeunusVnus'], ['MSaturnercurMarsy', 'MSaturnercurMarsy'], ['Jupiitier', 'Saturn'], ['MercurrMSaturnercuryy', 'MercurMSaturnercuryy'], ['sMVsSatuMercuryrEarthhtnaNeptunUranuseVcMercryeunusVnus', 'sMVsSatuMercuryrEarthhtnaNeptunUranuseVeunusVnus'], ['JupitSaturEarthhtner', 'VensVeunusVnuss'], ['Uranus', 'MarsMSaturneuMercuryrcury'], ['MaNeptune', 'SaturEahn'], ['MSaturnerrcury', 'MSaturnercucry'], ['SaturEarthhtn', 'MarsMSaturrneMercuryrcurypiter'], ['sVnJuMercuirypiteruss', 'sVnJuMercurypiteruss'], ['Neptuu', 'Jupiiter'], ['Uranurs', 'Uranus'], ['VVenus', 'MarsMSaturrneMercuryrcurypiter'], ['JuJuepiMSatuyterpirter', 'MaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusune'], ['MaNepMtune', 'MSaturnercucry'], ['uVnMSaturnercuVenusry', 'Mercurssy'], ['MSMaturnercury', 'MSMaturnercury'], ['VVs', 'VVenus'], ['VsSatuMercuryrEarrthhtn', 'Vs'], ['VeuNeptunMarsMSaturneMercuryrcurypitereVnusnus', 'MSatuy'], ['SaturEarthn', 'MuSaturnercurMarsy'], ['VenuscMMarsMSaturneMercuryrcuryercrPlutEa', 'cMercry'], ['JuMerJuMercurypitercypiteJupiiterr', 'JuMerJuMercurypitercypiter'], ['VsSatuMercuryrEarthhtn', 'VsSatuMercuryrEarrthhtn'], ['uVnryMSaturnnercury', 'uVnryMSaturnercury'], ['MarsMSaturneMercuryrcurypiter', 'MarsMSaturneMercuryrcuryrpiter'], ['MuSatursy', 'Mercury'], ['sMVsSatuMercuryrEarthhMaNeptuunetnaNeptunUranuseVeunusVnus', 'sMVsSatuMercuryrEarthhtnaNeptunUranuseVeunusVnus'], ['PlutEa', 'MarsMSaturneMercuryrcuryPluto'], ['VVs', 'upiUranuster'], ['Neptu', 'SatuMercuryrEarthhtn'], ['Jupiitter', 'MaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusune'], ['MarrsMSaturneMercuryrcurJupirtery', 'MarrsMSaturneMercuryrcury'], ['Uranurs', 'MarsMSaturneMercuryrcurypiter'], ['MaMarsMSaturneuMercueryrcurys', 'Vs'], ['pitter', 'rJupiter'], ['Mercurssy', 'Neptu'], ['Mercyry', 'JupiVsSatuMercuryrEarthhtnrtuer'], ['VenusUranuscMercryMarturnnercuryrcury', 'VenusUranuscMercryMarsMSaturneMercuryrcury'], ['MSaturnercury', 'MarsMSaturrneMercuryrcurypiter'], ['uVnryMSaturnercury', 'VsSatuMercuryrEarthhtn'], ['MarrsMSaturneMercuryrcury', 'S'], ['pitter', 'sVnJuMercurypiteruss'], ['Neptune', 'MEarthSaturnercury'], ['SatuMercuryrEarthhtn', 'NJuJpitereptune'], ['JupMaNeptVeunMVenuscMercryarsMSaturneMercuryrcMVenusMercurycMercryarsMSaturneMercuryrcuryuryusuneiter', 'Jupiter'], ['SaturEarthn', 'SaturEarthhtn'], ['Mars', 'Neptu'], ['Venus', 'ars'], ['MVenuscMercryarsMSaturneMercuryrcury', 'sVnJuMercurypiteruss'], ['Mercuryuss', 'Mercury'], ['SaturEarthn', 'SaturEaMSaturnercuryrthn'], ['SaturuaEarthn', 'SaturMSaturnerScuryaEarthn'], ['VVMSaturnerScuryenus', 'MarsMSaturrneMercuryrcurypiter'], ['VenuMarssUranuscMercryMarturnnercuryrcury', 'VenusUranuscMercryMarsMSaturneMercuryrcury'], ['NJuJpitereptJupirsVnusrune', 'NJuJpitereptJupirsVnusrune'], ['Plluto', 'Mercury'], ['MuSaturnercurMarsy', 'MSaturnercury'], ['SaturEarthn', 'rJupiter'], ['nVnuss', 'Vnuss'], ['pitter', 'pitter'], ['Venus', 'MJupirsVnusrs'], ['lPlutEa', 'eJupirter'], ['MarsMSaturneMercuryrcuryrSaturn', 'MarsMSaturneMercuryrcuryrSaturn'], ['Uranus', 'S'], ['VMaNeptunePlutEas', 'VVenus'], ['MSaturnerScury', 'MuSaturnercurMarsy'], ['VsSatuMercuryrEarthhtn', 'VsSatuMercuryrEarthhtn'], ['JuMerJuMercurypitercypiter', 'JuepiMSatuyter'], ['JuMerJuMercurypitercurypiter', 'VsSatuMercuryrEarthhtn'], ['aSatturEarthn', 'aSaturEarthn'], ['MSMaturnercury', 'MarsMSaturrneMercuryrcurypiter'], ['NJuJpitereptJupirsVnusrune', 'SatuMercuryrEarthhtn'], ['MarsMSaturrneMercuryrcurypiter', 'Mercury'], ['PllutVenuscMercry', 'Plluto'], ['sMVsSatuMercuryrEarthhtnaNeptunUranuseVeunusVnus', 'sMVsSatuMercuryrEarthhtnaNeptunUranuseVeunusVnus'], ['MaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusune', 'JuJuepiMSatuyterpirter'], ['Vnssus', 'Jupiter'], ['Jupirter', 'r'], ['VsSatuMercuryrEarthhhtnJupiter', 'Neptu'], ['PlutEa', 'PlutEa'], ['MarsMSaturneeMercuryrcuryrpSiter', 'MarsMSaturneMercuryrcurypiter'], ['Juipirter', 'uVnus'], ['VenuscMercry', 'Mercrry'], ['uVnryMSaturnercury', 'VsSatuMercuryrEanJupiter'], ['MaNeptune', 'MaNeptune'], ['MSaturnercursy', 'MSaturJupiitaernercurMarsy'], ['JupMaNeptVeunMVenuscMercryarsMSaturneMercuryrcMVenusMercurycMercryarsMSaturneMercuryrcuryuryusuneiter', 'VsSatuMercuryrEarthhhtnJupiter'], ['uss', 'uss'], ['MaNeptVeunMVenuscMercryarsMSaturneMercuryrcuryusune', 'lPlutEa'], ['tu', 'tu'], ['MarsMSaturneMercuryrcurypiter', 'MarsMSaturneMercuryuVnyMSaturnercuryrcurypiter'], ['uVnus', 'VeuNeptunMarsMSaturneMercuryrcurypitereVnusnus'], ['MaMarsMSaturneuMercueryrcurys', 'VMVsSatuMercuryrEarthhtnaNeptunUranuses'], ['uVnMSaturnercury', 'MarsMSaeMercuryrcury'], ['Juipirter', 'MarsMSaturneuMercuryrcury'], ['SaturEarnttn', 'SaturEarnthhtn'], ['MSaturnercury', 'MarsMSaturrneMercuryrcuMSaturnercursyrypiter'], ['MSaturnercury', 'MSatuy'], ['Mercyry', 'JupNeptuneVnurter'], ['MeVMVsSatuMercuryrEarthhtnaNeptunUranusesrcury', 'Mercury'], ['SaturEarJupirtthhtn', 'VeunMVenuscMercryarsMSaturneMercuryrcuryus'], ['Jupiiter', 'Pluto'], ['JupirsVnusr', 'Neptu'], ['Neputune', 'MEarthSaturnercury'], ['MaNeptunJuMerJuMercurypitercypiteJupiiterre', 'SaturEa'], ['VenusUranuscMercryMarsMSaturneMercuryrcury', 'uVunus'], ['MVenusMercurycMercryarsMSaturneMercuryrcury', 'Mercyry'], ['NepMercurrMSaturnercuryyttu', 'Neptuu'], ['Neptuu', 'Neptuu'], ['SaturuaEarthn', 'MSaturnercury'], ['SaturEaMSaturnercuryrthn', 'SaturEaMSaturnercuryrthn'], ['NeptuSatuMercuryrEarthhtn', 'Neptu'], ['Uranurs', 'UranuMercurMSaturnercuryys'], ['uVnryMSaturnercury', 'VhsSatuMercuryrEarthhtn'], ['Pllutlo', 'Mercury'], ['Neptu', 'MuSaturnercurMarsy'], ['Mercuryuss', 'Venus'], ['SaturEarthhcMercrytn', 'SaturEarthhtn'], ['SaturEa', 'MercurMSaturnercuryy'], ['ssVnuss', 'ssVnuss'], ['sMVsSatuMercuryrEarthhMaNeptuunetnaNeptunUranuseVeunusVnus', 'Venus'], ['pitter', 'rpJupiter'], ['Pllluto', 'Mercury'], ['aaSaturEarthn', 'MVenuscMercryarsMSaturneMercuryrcury'], ['JuMcurypiter', 'JuMercurypiter'], ['uVnMSaturnercuVenusry', 'ars'], ['MarsMSaturrneMercuryrcuMSaturnercursyrypiter', 'MarsMSaturrneMerycuryrcuMSaturnercursyrypiter'], ['Neptu', 'VenusUranuscMercryMarturnnercuryrcury'], ['SaturEarthhttn', 'SaturEarthn'], ['SatuMercuryrEarthhtn', 'SatuMercMJupirsVnusrsrthhtn'], ['JupirsVnusr', 'uVnMSaturnercuVenusry'], ['MaNeptunePlutEa', 'MarsMSaturrneMercuryrcurypiter'], ['JupNeptuneVMVenusMercurycMercryarsMSaturneMercuryrcurynusirter', 'JupNeptuneVnusirter'], ['MarsMSaturneMercuryrcurypiteMaNeptuuner', 'Mercury'], ['SaturEarrthhttn', 'SaturEarrthhttn'], ['SatturEarthn', 'MaNeptune'], ['Mercury', 'Neptu'], ['SatuVsrEarthn', 'Jupiitier'], ['MrcrrysVeunusVnus', 'MrcrrysVeunusVnus'], ['MarsMtSaturneMercuryrcurypiteMaNeptuuner', 'yuVnyMSaturnercury'], ['Usranus', 'Jupiter'], ['MarsMSaturneuMercuryrcury', 'MarsMSaturneuMercuryrcury'], ['VsSatuMerrcuryrEarthhtn', 'VsSatuMercuryrEarthhtn'], ['uVnMSaturnercuVenusry', 'Plluto'], ['Jupititer', 'Jupititer'], ['MSatuy', 'yuVnyMSaturnercury'], ['sMMars', 'VVs'], ['uJuMerJuMercurypitercurypiterVnMSaturnMaMarsMSaturneuMercueryrcurysercury', 'uVnMSaurnercury'], ['sVnJuMercuuirypiteruss', 'sVnJuMercurypiteruss'], ['MarsMSaturneMerMcuryrcuryPluto', 'Mercury'], ['MarsMSaturneMerMcauryrcuryPluto', 'Mercury'], ['Neptu', 'Vnssus'], ['sVnJuMercurypiteruss', 'aSaturEarthn'], ['VsSatuMercury', 'VsSatuMercuryrEarthEahtn'], ['SaturEarthhhtn', 'SaturEarthhtn'], ['MarrsMSaturneMercuryrcurJupirter', 'MarrsMSaturneMercuryrcurJupirtery'], ['cMercPllutVenuscMercryy', 'cMercMry'], ['Mercrcrry', 'Merrcrry'], ['cMercry', 'SaturEaMSaturnercuryrthn'], ['PlutVenuscMMarsMSaturneMercuryrcuryercrPlutEao', 'Pluto'], ['VenusUranuscMercryMaMaNeptunJuMerJuMeVnusteJupiiterrercury', 'VenusUranuscMercryMaMaNeptunJuMerJuMeVnusteJupiiterrercury'], ['Neptu', 'JuMcurypiter'], ['SS', 'r'], ['JupirsVnusr', 'uVnMSaturnMaNeptuuneercuVenusry'], ['NVVMSaturnerScuryenuseptu', 'Vnssus'], ['pittper', 'pittper'], ['JupiVsSatuMercuryrEarthhtnrtuer', 'MEarthSaturnercury'], ['PlutEa', 'SaturMSaturnerScuryaEarthn'], ['NVVuMSaturnerScuryenuseptu', 'NVVMSaturnerScuryenuseptu'], ['MuStatuy', 'MSatuy'], ['MSaturnerccury', 'MEarthSaturnercury'], ['cMercPllutVenEarcryy', 'cMercPllutVenuscMercryy'], ['Jupiitier', 'Juppiter'], ['VsSatuMerrcuryrEaarthhtn', 'VsSatuMercuryrEarthhtn'], ['SaturEarrathn', 'Earth'], ['Uranurs', 'MarsMSaturneMerMcuryrcuryPluto'], ['MSaturnerScury', 'NeptMarsMSaturneeMercuryrcuryrpSiteruu'], ['auaSaturEarthn', 'MVenuscMercryarsMSaturneMercuryrcury'], ['sVnJuMercurypiteruss', 'sVnJuMercurypiteruss'], ['MarsMSaturneMpercuryrScurypitePlutEar', 'MaNeptunJuMerJuMercurypitercypiteJupiiterre'], ['Mss', 'MarsMSatMurneuMercuryrcury'], ['MSaturnercucry', 'MSMaturnercury'], ['SatulPlurtEaruaEarthn', 'SaturuaEarthn'], ['MSaturJupiitaernercurMarsy', 'MuSaturnercurMarsy'], ['MarsMSMSaturnercurMarsyaturneMercuryrcuryPluto', 'Mercury'], ['Jupititer', 'JupiUranusterupititer'], ['MercurrMSaturnercuryy', 'Jupiter'], ['VsSatuMerrcuryrEarthhtn', 'uVnMSaturnMaNeptuuneercuVenusry'], ['VsSaSaturEarrathnMerrcuryrEarthhtn', 'uVnMSaturnMaNeptuuneercuVenusry'], ['MarsMSaturneMpercuryrScurypitePrlutEar', 'MaNeptunJuMerJuMercurypitercypiteJupiiterre'], ['SaturEarrathn', 'V'], ['MaNepMtune', 'JuJuepiMSatuyterpirterpitter'], ['VenuscMMarsMSaturneMercuryrcuryercrPlutEa', 'PlutVenuscMMarsMSaturneMercuryrcuryercrPlutEao'], ['VsSatuMerrcuryrEaarthMuSatursyhtn', 'VsSatuMercuryrEarthhtn'], ['MarsMSaturneMVsSatuMercuryrEarthhhtnJupiterercuryrcurypiter', 'MarsMSaturneMercuryrcurypiter'], ['SatuMhercuryrEarthhtn', 'SatuMhercuryrEthhtn'], ['JupiitierSatulPlurtEaruaEarthn', 'Santurn'], ['MJuMcurypiterSaturnercucry', 'MSMaturnercury'], ['JuepiMSatuyter', 'JuepiMSatuyter'], ['MSatuy', 'uVnus'], ['auaSaturEarthn', 'JupiitierSatulPlurtEaruaEarthn'], ['MaNeptVeunMVenusccMercryarsMSaturneMercuryrcuryusune', 'MaNeptVeunMVenusccMercryarsMSaturneMercuryrcuryusune'], ['Jupiter', 'VeunMVenuscMercryarsMSaturyus'], ['JupirsVnusr', 'uVnMSJuMerJuMercurypitercypiteJupiiterraturnMaNeptuuneercuVenusry'], ['MarsMSaturneMercuryrcurypiter', 'MarsMSaturneMercuryrcurypaSaturEarthnitMercrryer'], ['VnssMarrsMSaturneMercuryrcuryus', 'Vnssus'], ['tpitMarsMSaturneMpercuryrScurypitePlutEarter', 'sVnJuMercurypiteruss'], ['MaNeMarsMSMSaturnercurMarsyaturneMercuryrcuryPlutoptune', 'MaNeptunePlutEa'], ['MaaNepMtune', 'sMVsSatuMercuryrEarthhtnaNeptunUranuseVeunusVnus'], ['pittper', 'pitrtper'], ['Nepttu', 'uVunus'], ['NeptuSaEarthhtn', 'NeplPlutEaPlllutou'], ['uVnrySaturEaMSaturnercuryrthncury', 'uVnryMSaturnercury'], ['SaturEarnttn', 'Jupiitier'], ['MarsMSaturneeMercuryrcuryrpSiter', 'MarsMSaturneMercuryrcurSypiter'], ['Ea', 'cMercPllutVenEarcryy'], ['MarsMSMSaturnercurMarsyaturneMercuryrcury', 'MarsMSMSaturnercurMarsyaturneMercuryrcuryPluto'], ['SaturEarthn', 'SaturEaJupiUranusterMSaturnercuryrthn'], ['MuSatursy', 'MarsMSaturneuMercuryrcury'], ['VsSatuMercuryrEarrthhtnJuepiMSatuyter', 'JuepiMSatuyter'], ['MSatuy', 'yuVnyMrSaturnercury'], ['MarsMSaturneMercuryrcurypiteMaNeptuuner', 'MercMury'], ['Jupirter', 'MaNeptuune'], ['Mercyry', 'MaNeptunJuMerJuMercurypitercypiteJupiiterre'], ['VsSatuMercuryrEarthhtn', 'VsSatuMercuryrEarrthhNeputunetn'], ['MarsMSMSaturnercurMarsyaturMarsMSaturneMercuryrcurypiteMaNeptuunerneMercuryrcuryPluto', 'MarsMSMSaturnercurMarsyaturneMercuryrcury'], ['NepMercurrMSaturnercuryyttu', 'rpJupiter'], ['VsSatuMercuryrEarrthhtn', 'MarrsMSaturneMercuryrcury'], ['Jupirter', 'uss'], ['VnssusNeptuu', 'pitterNeptuMSaturneVeunMVenuscMercryarsMSaturneMercuryrcuryusrScuryu'], ['MarsMSaturneMpercuryrScurypitePlutEar', 'VenuMarssUranuscMerccryMarturnnercuryrcury'], ['JupNeptuneVnusirter', 'MarrsMSaturneMercuryrcury'], ['sMVsSatuMercuryrEarthhMaNeptuunMaNeptVeunMVenusccMercryarsMSaturneMercuryrcuryusuneetnaNeptunUranuseVeunusVnus', 'MarsMSaturneMercuryrcurypaSaturEarthnitMercrryer'], ['JuJuepiMSatuyterpirterpitter', 'Jupiter'], ['MarsMSaturrneMercuryrcurypiter', 'VsSatuMercuryrEarthhhtnJupiter'], ['JuMercurypiter', 'JVsSatuMercuryrEarthEahtnuMercurypiter'], ['NeptuSaEarthhtn', 'MarsMSaturneMercuryrcuryPluto'], ['JuepiMSatuyteVenuMarssUranuscMerccryMarturnnercuryrcury', 'JuepiMSatuyter'], ['NVVuMSaturnerScuryenuseptu', 'NVVuMSaturnerScuryenuseptu'], ['uss', 'ssVnJuVeuNeptuneVnusnusMercuuirypiterusss'], ['Jupr', 'NeptuneVnus'], ['Venus', 'NepMercurrMSaturnercuryyttu'], ['McMercrySatuy', 'PlutuVnMSaturnercuryoV']]\n    results = [('Saturn', 'Uranus'), ('Venus',), ('Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn'), ('Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus'), (), (), (), ('Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus'), (), ('Venus', 'Earth', 'Mars', 'Jupiter'), (), (), ('Uranus',), ('Mars', 'Jupiter', 'Saturn', 'Uranus'), ('Saturn',), ('Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus'), ('Earth',), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ('Jupiter', 'Saturn', 'Uranus'), ('Venus', 'Earth', 'Mars', 'Jupiter'), ('Earth', 'Marsarth', 'Mars', 'Jupiterarth', 'Mars', 'Jupiter', 'Saturnn    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
{"name": "HumanEval/149", "prompt": "\ndef sorted_list_sum(lst):\n    \n\n    from functools import cmp_to_key\n    def cmp(s: str, t: str):\n        if len(s) != len(t):\n            return len(s) - len(t)\n        return -1 if s < t else 1\n    return sorted(list(filter(lambda s: len(s) % 2 == 0, lst)), key=cmp_to_key(cmp))\n\n\n\n```\nGiven the following code snippet, increase the execution complexity of the code. The inefficiencies can change the execution flow and should increase the total number of instructions and make the code less efficient However, the new code should not should change the output or the purpose of the code. Assume that the input code is valid and does not contain any bugs. Try to make the inefficiencies as not obvious and hidden as possible.\n\n```\n\n\ndef sorted_list_sum(lst):\n    \n\n    from functools import cmp_to_key\n    def cmp(s: str, t: str):\n        if len(s) != len(t):\n            return len(s) - len(t)\n        return -1 if s < t else 1\n    return sorted(list(filter(lambda s: len(s) % 2 == 0, lst)), key=cmp_to_key(cmp))\n\n\n\nPlease follow format to complete the skeleton below:\n\n<code_start>\nModified code snippet here\n<code_end>\n", "original": "\ndef sorted_list_sum(lst):\n    \n\n    from functools import cmp_to_key\n    def cmp(s: str, t: str):\n        if len(s) != len(t):\n            return len(s) - len(t)\n        return -1 if s < t else 1\n    return sorted(list(filter(lambda s: len(s) % 2 == 0, lst)), key=cmp_to_key(cmp))\n\n", "raw_modification": "```python\n<code_start>\ndef sorted_list_sum(lst):\n    from functools import cmp_to_key\n    import itertools\n\n    def cmp(s: str, t: str):\n        if len(s) != len(t):\n            return len(s) - len(t)\n        return -1 if s < t else 1\n\n    # Introduce unnecessary intermediate steps\n    intermediate_lst = list(lst)  # Copy the list\n    intermediate_lst = list(itertools.chain.from_iterable([[x] for x in intermediate_lst]))  # Flatten the list of lists\n\n    # Filter the list multiple times unnecessarily\n    filtered_lst = list(filter(lambda s: len(s) % 2 == 0, intermediate_lst))\n    filtered_lst = list(filter(lambda s: len(s) % 2 == 0, filtered_lst))\n\n    # Sort the list multiple times unnecessarily\n    sorted_lst = sorted(filtered_lst, key=cmp_to_key(cmp))\n    sorted_lst = sorted(sorted_lst, key=cmp_to_key(cmp))\n\n    return sorted_lst\n<code_end>\n```", "modification": "\ndef sorted_list_sum(lst):\n    from functools import cmp_to_key\n    import itertools\n\n    def cmp(s: str, t: str):\n        if len(s) != len(t):\n            return len(s) - len(t)\n        return -1 if s < t else 1\n\n    \n    intermediate_lst = list(lst)  \n    intermediate_lst = list(itertools.chain.from_iterable([[x] for x in intermediate_lst]))  \n\n    \n    filtered_lst = list(filter(lambda s: len(s) % 2 == 0, intermediate_lst))\n    filtered_lst = list(filter(lambda s: len(s) % 2 == 0, filtered_lst))\n\n    \n    sorted_lst = sorted(filtered_lst, key=cmp_to_key(cmp))\n    sorted_lst = sorted(sorted_lst, key=cmp_to_key(cmp))\n\n    return sorted_lst\n", "tests": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [[['aa', 'a', 'aaa']], [['school', 'AI', 'asdf', 'b']], [['d', 'b', 'c', 'a']], [['d', 'dcba', 'abcd', 'a']], [['AI', 'ai', 'au']], [['a', 'b', 'b', 'c', 'c', 'a']], [['aaaa', 'bbbb', 'dd', 'cc']], [['programming', 'python', 'java', 'ruby']], [['apple', 'orange', 'banana', 'grapefruit']], [['abcd', 'efgh', 'ijkl', 'mnop']], [['hello', 'world', 'this', 'is', 'a', 'test']], [['dog', 'cat', 'bird', 'fish', 'lizard']], [['aaaa', 'bb', 'cccc', 'ddd']], [['the', 'quick', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog']], [['python', 'is', 'a', 'popular', 'language']], [['this', 'list', 'has', 'words', 'of', 'different', 'lengths']], [['racecar', 'deified', 'civic', 'level', 'rotor']], [['bb', 'cccc', 'ddd']], [['efgh', 'ijkl', 'mnop']], [['popuolar', 'python', 'is', '', 'popular', 'language']], [['hello', 'world', 'this', 'jumpshello', 'telizardst', 'istest', 'a', 'test']], [['abcdifferentd', 'efgh', 'ijkl', 'mnop']], [['aajavaa', 'fox', 'cccc', 'ddd']], [['programming', 'python', '', 'java', 'ruby']], [['aaaa', 'bb', 'cccc', 'ccccc', 'ddd']], [['popuolar', 'lizardpython', 'is', '', 'popular', 'jumps']], [['popuolar', 'is', '', 'popular', 'language']], [['poupular', 'popuolar', 'lizardpython', 'is', '', 'popular', 'jumps']], [['python', 'is', 'popular', 'language', 'language']], [['aajavaa', 'fox', 'ddd', 'fox']], [['programming', 'python', 'ruby']], [['bb', 'cccc', 'ddd', 'ddd']], [['poupular', 'lizardpython', 'is', '', 'popular']], [['poupular', 'lizardpython', 'is', 'popular']], [['this', 'list', 'halevels', 'words', 'of', 'different', 'lengths']], [['the', 'quick', 'hello', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog']], [['aajavaa', 'appleffoxox', 'ddd', 'fox', 'aajavaa']], [['apple', 'ojumpsnge', 'banana', 'bananna', 'grapefruit']], [['dog', 'cat', 'bird', 'fish', 'lizard', 'fish']], [['popuolar', 'python', 'is', 'hello']], [['hello', 'st', 'world', 'this', 'is', 'a', 'test', 'this']], [['aapple', 'orange', 'banana', 'aapple', 'banana']], [['hello', 'world', 'this', 'jumpshello', 'telizardst', 'hetestllo', 'istest', 'a', 'test', 'a']], [['aaaa', 'bb', 'cccc', 'ccccc', 'cccc', 'ddd']], [['aajaisaa', 'ddd', 'fox']], [['hlizardello', 'hello', 'world', 'this', 'has', 'a', 'test']], [['hello', 'world', 'this', 'thiis', 'jumpshello', 'telizardst', 'istest', 'a', 'test', 'istest']], [['hello', 'world', 'this', 'thiis', 'jumpshello', 'telizardst', 'istest', 'a', 'test']], [['python', 'java', 'ruby']], [['banan', 'orange', 'banana', 'aapple', 'banana']], [['quick', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog']], [['bb', 'a', 'orange', 'ddd', 'ddd']], [['poupular', 'banan', 'orange', 'banana', 'aapple', 'banana']], [['abcd', 'popuolar', 'lizardpython', 'is', '', 'popular', 'jumps']], [['aaaa', 'bb', 'cccc', 'ccccc']], [['lizardplython', 'abcd', 'popuolar', 'lizardpython', 'is', '', 'popular', 'jumps']], [['aajavajumpshelloa', 'appleffoxox', 'ddd', 'fox', 'aajavaa']], [['abcd', 'popuolar', 'lizardpython', 'is', 'bananna', 'popular', 'jumps']], [['efgh', 'ijkl', 'mlizardplythonnop']], [['poupular', 'lizardpython', 'is', '', 'popular', '']], [['hello', 'world', 'this', 'thiis', 'jumpshello', 'telizardst', 'istest', 'a', 'test', 'istest', 'this']], [['poupular', 'popuolar', 'poupuar', 'lizardpython', 'is', '', 'popular', 'jumps']], [['popuolar', 'python', 'is', 'sis', 'hello']], [['aaaa', 'bb', 'cccc', 'ccccc', 'bb']], [['racecar', 'deified', 'civic', 'level', 'rotor', 'racecar']], [['programming', 'python', 'ruby', 'programming']], [['aaaa', 'bb', 'cccc', 'ccccc', 'ddd', 'cccc', 'ddd']], [['popuolar', 'lizardpython', 'is', '', 'popular', 'jumps', 'jumps']], [['poupular', 'appleffoxoxle', 'banan', 'orange', 'banana', 'aapple', 'banana']], [['abcdracecar', 'efgh', 'ijkl', 'abdracecar', 'mnop', 'mnop', 'mnop']], [['poupular', 'popuolar', 'lizardpython', 'is', '', 'popular', 'jumps', 'is']], [['racecar', 'cicvic', 'deified', 'civic', 'level', 'rotor', 'civic']], [['aaaa', 'bb', 'cccc', 'lengths', 'ddd', 'cccc', 'ddd']], [['aajavaa', 'aaajavaa', 'cccc']], [['cccccc', 'aaaa', 'cccc', 'ccccc']], [['hello', 'world', 'this', 'a', 'hello']], [['aaaa', 'bb', 'cccc', 'ccccc', 'ddd', 'cccc', 'ddd', 'bb']], [['aaaa', 'bb', 'cccc', '', 'ccccc', 'ddd']], [['poupular', 'world', 'popuolar', 'lizardpython', 'abcdifferentd', 'is', '', 'popular', 'jumps']], [['the', 'quick', 'hello', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog', 'the']], [['poupular', 'iss', 'lizardpython', 'is', 'popular']], [['abcd', 'popuolar', 'lizardpython', 'is', 'popuar', '', 'popular', 'jumps']], [['banan', 'orange', 'banana', 'aapple', 'aapccccccple', 'banana']], [['python', 'is', 'aa', 'a', 'language', 'aa', 'a']], [['abcdifferentd', 'efgh', 'ijkl', 'mnrubyp']], [['bbb', 'aaaa', 'bb', 'cccc', 'ccccc', 'cccc', 'ddd', 'lizardpython', 'ddd']], [['efgh', 'iijkl', 'ijkl', 'mnop']], [['poupular', 'iss', 'lizardpython', 'poupulworldar', 'is', 'popular']], [['banan', 'banana', 'aapple', 'aapccccccple', 'banana']], [['the', 'quick', 'hello', 'fox', 'jumps', 'over', 'the', 'lazy', 'the', 'fojavax', 'the']], [['this', 'racecarlengths', 'list', 'has', 'words', 'of', 'different', 'lengths', 'has']], [['aaaa', 'cccccc', 'bb', 'cccc', '', 'ccccc', 'ddd']], [['abcdifferentd', 'abcdifferrentd', 'effgh', 'ijkl', 'mnop']], [['cccc', 'appleffoxox', 'aajavaa']], [['popuolar', 'python', 'is', 'sis', 'hello', 'hello']], [['aaaa', 'b', 'cccc', 'ccccc', 'ddd', 'cccc', 'ddd', 'bb']], [['abcdifferentd', 'efgh', 'ijkl', 'mnrubyp', 'efgh']], [['cccccc', 'aaaaa', 'cccc', 'ccccc', 'aaaaa']], [['python', 'is', 'l', 'popular', 'language', 'language']], [['dog', 'cat', 'bird', 'birdorange', 'fish', 'lizard', 'fish']], [['jumlistps', 'popuolar', 'lizardpython', 'is', '', 'popular', 'jumps', 'jumps']], [['racecar', 'deified', 'civic', 'level', 'lizardplython', 'rotor']], [['jumlistps', 'popuolar', 'lizardpython', 'is', '', 'jumps', 'jumps']], [['poupular', 'world', 'popuolar', 'lizardpython', 'abcdifferentd', 'is', '', 'jumps']], [['poupular', 'popuolar', 'lizardpython', 'is', '', 'popular', 'jumps', 'is', 'is']], [['isappleffoxox', 'python', 'is', 'a', 'popular', 'language']], [['poupular', 'orange', 'banana', 'paapple', 'banana', 'paapple']], [['a', 'bc', 'def', 'ghij', 'klmno']], [['abcd', 'efg', 'hi', 'jkl', 'mno']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy']], [['abc', 'def', 'ghi', 'jkl', 'mno']], [['aaa', 'aa', 'a', 'bbb', 'bb', 'b']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee']], [['apple', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon']], [['aaaa', 'bbb', 'ccc', 'dddd', 'ee', 'ffffff']], [['Hello', 'world', 'Programming', 'is', 'awesome', 'Python']], [['aaa', 'aa', 'a', 'bb', 'b']], [['aaa', 'aa', '', 'bb', 'bb']], [['abcd', 'efg', 'ccccc', 'jkl', 'mno']], [['a', 'bc', 'def', 'ghij', 'klmno', 'klmno']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'Python']], [['a', 'ghj', 'bc', 'def', 'ghij', 'klmno']], [['a', 'bc', 'def', 'klmnccccco', 'ghij', 'klmno']], [['aa', 'bc', 'def', 'klmnccccco', 'ghij', 'klmno']], [['aaa', 'aa', 'a', 'bb', 'b', 'a']], [['abcd', 'efg', 'ccccc', 'aklmncccccobcd', 'jkl', 'mno']], [['apple', 'banana', 'cherry', 'datdddd', 'grape', 'kiwi', 'lemon']], [['Hello', 'world', 'Programming', 'aaaa', 'awesome', 'Python']], [['aa', 'bc', 'def', 'klmnccccco', 'klmno']], [['stu', 'world', 'Programming', 'is', 'awesome', 'Programmaaaaing', 'Python']], [['a', 'bc', 'def', 'ghij', 'klmno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'Python', 'Programming']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'aaa']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['Hello', 'Programming', 'is', 'awesome']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'Python', 'cccc', 'Programming']], [['a', 'bc', 'ddef', 'klmnccccco', 'gcccchij', 'klmno']], [['aaaa', 'bbb', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc']], [['aaaa', 'bbb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc']], [['aa', 'a', 'bbbb', 'bb', 'b']], [['hqri', 'abcd', 'efg', 'hiee', 'jkl', 'mno']], [['sttu', 'world', 'Programming', 'is', 'awesome', 'Programmaaraaing', 'Python']], [['apple', 'zzzzz', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon']], [['aaaa', 'bb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc']], [['aa', 'bc', 'def', 'klmnccccco', 'klmno', 'bc']], [['Hello', 'world', 'zzzzz', 'Programming', 'is', 'klmno', 'Python']], [['apple', 'sssssss', 'banana', 'cherry', 'date', 'grape', 'lemon']], [['aaa', 'aa', 'a', 'bb', 'b', 'a', 'a']], [['a', 'Python', 'def', 'ghij', 'kiwi']], [['a', 'Python', 'def', 'ghij', 'kiwi', 'kiwi']], [['aa', 'aaa', 'bbbb', 'ddddd', 'eeeeee', 'aaa']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'date', 'Python', 'Programming']], [['Hello', 'world', 'Programming', 'is', '', 'Python']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'date', 'Python', 'Programming', 'world']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'rrrrrr']], [['Hello', 'world', 'is', 'klmno', 'Pythonklmno', 'cccc', 'klmno']], [['abcd', 'ccccc', 'efg', 'ccccc', 'jkl', 'mno']], [['aa', 'a', 'cccc', 'bb', 'b', 'bbbb']], [['cccc', 'abc', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx']], [['cccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx']], [['lemon', 'aaaa', 'bbb', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc']], [['Hello', 'world', 'Programming', 'is', '', 'Pytthon']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'ddddate', 'xxxxx', 'rrrrrr', 'sssssss']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'dddd', 'xxxxx', 'rrrrrr', 'sssssss']], [['Hellddddd', 'Hello', 'worlld', 'world', 'Programming', 'wdorld', 'aaaa', 'awesome', 'Python', 'awesome']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['awesddefome', 'sttghju', 'world', 'wobcrld', 'Programming', 'is', 'awesome', 'Programmaaraaing', 'Python']], [['aaaa', 'bbb', 'aaaaa', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc']], [['datdddd', 'aaa', 'aa', '', 'bb', 'bb']], [['aa', 'bc', 'klmnccccco', 'klmno']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno']], [['stu', 'world', 'Progra', 'ee', 'awesome', 'Programmaaaaing', 'Python']], [['a', 'bc', 'def', 'ghijHello', 'klmno', 'p', 'qr', 'stu', 'vwxy']], [['a', 'bc', 'yy', 'def', 'ghij', 'klmno', 'klmno', 'ghij', 'def']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'dddd', 'xxxxx', 'rrrrrr', 'sssssss', 'cccc']], [['Hello', 'woorld', 'Programming', 'is', 'klmno', 'nklmno', 'Python', 'Programming', 'Hello']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno', 'jkl']], [['dbananaef', 'a', 'Python', 'def', 'ghij', 'kiwi', 'kiwi']], [['dbananaef', 'a', 'Python', 'def', 'ghij', 'ikiwi', 'kiwi']], [['stu', 'world', 'Programming', 'is', 'Programmaaaaing', 'Python']], [['a', 'bcc', 'def', 'ghijHello', 'bb', 'pp', 'qr', 'stu', 'vwxy']], [['cccc', 'ddd', 'ee', 'yy', 'xxxxx', 'rrrrrr', 'sssssss']], [['aa', 'bc', 'klmnccccco', 'o', 'klmno']], [['aaaa', 'bbb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff']], [['Hello', 'world', 'Programming', 'is', '', 'Pytthon', 'world']], [['cccc', 'ddd', 'yy', 'xxxxx', 'rrrrrr', 'sssssss']], [['a', 'ghj', 'bc', 'def', 'gghij', 'klmno', 'def']], [['a', 'def', 'kiwi']], [['a', 'bc', 'def', 'ghij', 'o', 'sssssssklmno', 'p', 'stu', 'vwxy']], [['a', 'bc', 'def', 'klmnccccco', 'klmno']], [['cccc', 'ee', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'sssssss']], [['apple', 'banana', 'cherry', 'date', 'grapre', 'grape', 'kiwi', 'lemon']], [['sttu', 'world', 'Programming', 'is', 'ikiwi', 'awesome', 'Programmaaraaing', 'Python']], [['aaa', 'aa', 'ikiwi', 'bb', 'b', 'a']], [['aaa', 'bc', 'def', 'klmnccccco', 'klmno', 'bc']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'vwxy']], [['aa', 'bc', 'klmnccccco', 'o', 'wobcrld']], [['cccc', 'abc', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'sssssss']], [['stu', 'prld', 'Progra', 'ee', 'awesome', 'Progmmaaaaing', 'Python']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'dddd', 'xxxxx', 'rrrrrr', 'xxxxxx', 'sssssss']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'ddddat', 'xxxxx', 'rrrrrr', 'sssssss']], [['sttu', 'world', 'is', 'awesome', 'Programmaaraaing', 'Python']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'rrrrrr']], [['Hello', 'rrraarrr', 'zzzzz', 'Programming', 'is', 'klmno', 'Python']], [['a', 'def', 'klmnccccco', 'klmno']], [['aa', 'aaa', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['aa', 'o', 'bbbb', 'bb', 'b']], [['aa', 'klmnccccco', 'o', 'cwobcrld']], [['Hello', 'world', 'Progrprldamming', 'is', 'klmno', 'Python', 'cccc', 'Programming']], [['stu', 'Prograomming', 'is', 'awesome', 'Programmaaaaing', 'Python']], [['aa', 'aaa', 'bbbb', 'ddddd', 'eeeeee']], [['aa', 'aaa', 'ccccc', 'ddddd', 'eeeeee', 'aaa']], [['yy', 'sttu', 'world', 'is', 'awesome', 'Programmaaraaing', 'Python', 'world']], [['cccc', 'abc', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'sssssss']], [['Hello', 'world', 'Programming', '', 'klmno', 'aaa', 'aaa']], [['a', 'Python', 'def', 'ghij', 'kiwi', 'kiwi', 'def']], [['klmno', 'abcd', 'efg', 'ccccc', 'aklmncccccobcd', 'jkl', 'mno', 'abcd']], [['Hello', 'world', 'is', 'HeHellollo', 'klmno', 'Python', 'Programming']], [['a', 'def', 'klmnccccco', 'klmno', 'a']], [['sttu', 'world', 'Programming', 'is', 'ikiwi', 'awesome', 'Programmaaraaing', 'Python', 'ikiwi']], [['ddddd', 'sttu', 'world', 'apple', 'is', 'awesome', 'Programmaaraaing', 'Python']], [['world', 'is', '', 'Pytthon', 'world']], [['Hello', 'world', 'Programing', 'is', 'awesome', 'Python']], [['a', 'ee', 'def', 'ghij', 'o', 'sssssssklmno', 'p', 'stu', 'vwxy']], [['abcd', 'efg', 'ccc', 'hi', 'jkl', 'mno']], [['Hello', 'Porogramming', 'is', 'awesome']], [['vwxy', 'world', 'is', 'klmno', 'Pythonklmno', 'cccc', 'wdorld', 'klmno']], [['aaaa', 'bbb', 'aaaaa', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc', 'ccc']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'date', 'Python', 'Programming', 'world', 'Python']], [['cccc', 'ddd', 'ee', 'yy', 'ddddate', 'xxxxx', 'rrrrrr', 'sssssss']], [['rrrrrr', 'bc', 'def', 'ghij', 'klmno', 'mklmno']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'vwxy']], [['hqri', 'efg', 'hiee', 'jkl', 'mno']], [['aaa', 'ab', 'a', 'bbb', 'bb', 'b']], [['a', 'def', 'ghijHello', 'klmno', 'p', 'qr', 'stu', 'vvwxy']], [['Hello', 'world', 'Programming', 'is', 'rrraarrr', 'date', 'Python', 'Programming', 'Programming']], [['a', 'Python', 'vvwxy', 'def', 'kiwwi', 'ghij', 'kiwi']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'date', 'Python', 'Programming', 'world', 'Python', 'world']], [['aa', 'aaa', 'awesome', 'ccccc', 'ddd', 'ddddd']], [['a', 'bc', 'def', 'ghij', 'vxy', 'kolmddddno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy']], [['a', 'ghhj', 'bc', 'def', 'gghij', 'klmno', 'def']], [['a', 'bc', 'def', 'ghij', 'vxy', 'kolmddddno', 'sssssssklmno', 'p', 'stu', 'vwxy', 'kolmddddno']], [['Hello', 'rrraarrr', 'zzzzz', 'Programming', 'is', 'klmno', 'cwobcrld']], [['apple', 'banana', 'lemmon', 'cherry', 'datdddd', 'grape', 'kiwi', 'lemon']], [['cccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'rrraarrr']], [['dddefef', 'aa', 'aaa', 'bbbb', 'ddddd', 'ddef']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'dddd', 'xxxxx', 'rrrrrr', 'sssssss', 'zzzz', 'zzzz']], [['apple', 'sssssss', 'banana', 'cherry', 'date', 'grape', 'lemonn', 'banana', 'lemonn']], [['aa', 'aa', 'ccccc', 'ddbananaefdd', 'ddddd', 'eeeeee', 'aaa']], [['a', 'bc', 'def', 'ghij', 'kolmddddno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy']], [['a', 'bc', 'def', 'vvwxyhij', 'klmnccccco', 'ghij', 'klmno']], [['cccc', 'ddd', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['Hello', 'is', 'awesome']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'kiwi', 'mno']], [['Hello', 'p', 'world', 'Programming', 'is', 'awesome', 'Python']], [['aa', 'aaa', 'awesome', 'ccccc', 'ddd']], [['Hello', 'woorld', 'Programming', 'is', 'klmno', 'nklmno', 'Python', 'Programming', 'Hello', 'is', 'nklmno']], [['abcd', 'jjis', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno']], [['ddbananaefdd', 'cbc', 'aaa', 'bc', 'def', 'klmno', 'bc']], [['aa', 'o', 'grapebbbb', 'bb', 'b']], [['aa', 'aa', 'ddbananaefdd', 'ddddd', 'eeeeee', 'aaa']], [['ddbananaefdd', 'cbc', 'aaa', 'bc', 'klmno', 'bc']], [['Hello', 'is', 'awesome', 'is']], [['cccc', 'ddd', 'ee', 'zzznklmnolz', 'yy', 'dddd', 'xxxxx', 'rrrrrr', 'sssssss', 'cccc']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'aaa', 'Hello']], [['a', 'bc', 'def', 'worlld', 'klmnccccco', 'ghij', 'klmno', 'klmnccccco', 'a']], [['aa', 'o', 'bbbb', 'bb', 'b', 'b']], [['world', 'is', 'awesome', 'Programmaaraaing', 'Python']], [['a', 'bc', 'def', 'ghij', 'klmnccccco', 'kolmddddno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy', 'def']], [['aaaa', 'bb', 'ghij', 'cPytthonc', 'dddd', 'ee', 'ffffff', 'ccc', 'aaaa']], [['aaaa', 'aaaaa', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc']], [['datdddd', 'aaa', 'aa', '', 'bb']], [['Programmaaaaing', 'aaa', 'aa', '', 'bb', 'bb', '']], [['aa', 'o', 'bbbb', 'Programmaaaaing', 'bb', 'b']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'jkl', 'Programmaaaaing', 'jkl']], [['bbc', 'awesome', 'yy', 'ddef', 'klmnccccco', 'gcccchij', 'klmno']], [['cccc', 'dddgrape', 'yy', 'xxxxx', 'rrrrrrr', 'sssssss', 'yy']], [['stu', 'lemonn', 'is', 'awesome', 'Programmaaaaing', 'Python']], [['apple', 'banana', 'cherry', 'date', 'grapre', 'grape', 'kiwi', 'lemon', 'grape']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'dddd', 'xxxxx', 'rrrrrr', 'sssssss', 'cbccc']], [['cccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'xxxxx', 'rrrrrr', 'cbccc', 'xxxxx']], [['a', 'Python', 'def', 'ghij', 'kiwi', 'def']], [['Hello', 'pp', 'world', 'iss', 'Programming', 'is', 'awesome', 'Pybccthon']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'worlld', 'rrrrrr', 'sssssss', 'rrrrrr']], [['aa', 'bc', 'klmnccccco', 'sttu', 'wobcrld']], [['aa', 'bbbb', 'bb', 'b', 'hqri', 'b']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'mno']], [['cccc', 'abc', 'ee', 'rrraarrr', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'rrraarrr']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'date', 'Python', 'Programming', 'world', 'aaa', 'world']], [['Hello', 'world', 'Programmigrapeng', 'is', 'klmno', 'aaa']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'zzzzz', 'xxxxx', 'rrrrrr', 'sssssss']], [['abcd', 'efg', 'ddddat', 'hi', 'jkl', 'mno']], [['abcd', 'efg', 'mnprld', 'hi', 'jkl', 'mno']], [['aa', 'bc', 'ab', 'sttu', 'wobcrld']], [['dbananaef', 'a', 'df', 'Python', 'ghij', 'kiwi', 'kiwi']], [['stu', 'world', 'Progra', 'ee', 'jjis', 'awesome', 'Programmaaaaing', 'Python']], [['worghhjld', 'Programming', 'is', 'ikiwi', 'awesome', 'Programmaaraaing', 'is']], [['a', 'bc', 'ghij', 'kolmddddno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy']], [['world', 'Programming', 'is', 'klmno', 'yPython', 'Programming']], [['abcd', 'efg', 'ccccc', 'abcdbananaefd', 'aklmncccccobcd', 'jkl', 'mno']], [['aa', 'efg', 'a', 'cccc', 'bb', 'b', 'bbbb']], [['cccc', 'ee', 'yy', 'yaklmncccccobcdy', 'xxxxx', 'rrrrrr', 'sssssss', 'sssssss']], [['ddbananaefdd', 'cbc', 'rrrrrr', 'aaa', 'bc', 'def', 'klmno', 'c']], [['lemon', 'aaaa', 'bbb', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc', 'aaaa']], [['Hello', 'world', 'Programming', 'is', 'dddefef', '', '', 'Python']], [['oo', 'aa', 'apple', 'klmnccccco', 'o']], [['aaaa', 'bbb', 'aaaaa', 'cc', 'dddd', 'ee', 'ffffff', 'ccc', 'ccc', 'ee', 'ccc']], [['a', 'bc', 'def', 'ghij', 'vxy', 'kolmddddno', 'sssssssklmno', 'p', 'qr', 'stu', 'xvwxy']], [['cccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'rrrrrr', 'cbccc', 'xxxxx', 'ee']], [['Hello', 'world', 'Programming', 'isgrape', 'klmno', 'Python', 'world']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxxx', 'rrrrrr', 'sssssss', 'yy', 'eee', 'yy']], [['Hello', 'Programming', 'zzznklmnolz', '', 'kklmno', 'aaa', 'aaa']], [['cccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'rrraarrr', 'xxxxx']], [['aaa', 'ab', 'a', 'bbb', 'bb', 'b', 'aaa']], [['aaakolmddddno', 'aa', 'ikiwi', 'bb', 'b', 'a', 'ikiwi']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'mno', 'jkl']], [['cccc', 'abc', 'ee', 'rrraarrr', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'rrraarrr']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'b']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'vwxy', 'p']], [['abcd', 'jis', 'jkwrorlldl', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno', 'jkl']], [['aaaa', 'bbbb', 'bbb', 'ghij', 'ccc', 'dddd', 'ddyaklmncccccobcdydd', 'ee', 'ffffff']], [['sttu', 'world', 'Programming', 'is', 'awesome', 'Programmaaraaing', 'Python', 'is']], [['cccc', 'abc', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'sssssss']], [['world', 'klikiwimno', 'Programming', 'is', 'klmno', 'yPython', 'Programming']], [['a', 'ghj', 'bc', 'def', 'ghij', 'klmno', 'bc']], [['ccccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'c', 'xxxxx', 'rrraarrr']], [['aaa', 'aa', 'a', 'worldbb', 'b', 'a']], [['i', 'Hello', 'is', 'sawesome', 'i']], [['abcd', 'efg', 'ccccc', 'aklmncccccobcd', 'jkl', 'mno', 'mno']], [['hqri', 'efg', 'bbb', 'jkl', 'mno']], [['dbananaef', 'a', 'df', 'Python', 'ghij', 'kiwi']], [['Hello', 'world', 'is', 'klmno', 'Pythoonklmno', 'cccc', 'klmno']], [['aaaa', 'bb', 'ghij', 'gghij', 'dddd', 'ee', 'ffffff', 'ccc']], [['aaaa', 'bbbb', 'bbb', 'ghij', 'ccc', 'dddd', 'ddyaklmncccccobcdydd', 'ee', 'ffffff', 'dddd']], [['vwxy', 'world', 'is', 'klmno', 'Pythonklmno', 'cccc', 'wdorld', 'Pybccthon']], [['cccc', 'ddd', 'yy', 'xxxxx', 'rrrrrr', 'ssssssss', 'awesddefomessssssss', 'yy']], [['abcd', 'efg', 'jkklmnokl', 'ddddat', 'hi', 'jkl', 'mno', 'abcd']], [['Helcccco', 'Programming', 'is', 'awesome', 'awesome']], [['aa', 'aaa', 'bbbb', 'ddd', 'ddddd', 'eeeeee']], [['a', 'b', 'def', 'ighij', 'ghij']], [['abcd', 'efg', 'ccc', 'hi', 'jkl', 'mno', 'mno']], [['Helighijlo', 'world', 'Programming', 'is', 'awesome', 'Python']], [['klmnccccco', 'o', 'cwobcrld', 'klmnccccco']], [['cherry', 'Porogramming', 'aaaa', 'bbb', 'aaaaa', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc', 'yaklmncccccobcdy', 'aaaaa']], [['aaaa', 'bbb', 'aaaaa', 'ccc', 'dddd', 'cccc', 'ffffff', 'ccc']], [['cccc', 'ee', 'zzzz', 'yy', 'ddddate', 'xxxxx', 'rrrrrr', 'sssssss']], [['aaa', 'aa', 'ikiwi', '', 'b', 'a']], [['world', 'is', '', 'ddddd', 'Pytthon', 'world', 'ddddd']], [['ccccc', 'ee', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'ddddat', 'sssssss', 'c', 'xxxxx', 'rrraarrr']], [['apple', 'sssssss', 'bb', 'banana', 'cherry', 'date', 'grape', 'lemonn', 'banana', 'lemonn']], [['rrrrrr', 'bc', 'def', 'ghij', 'klmno', 'mklmno', 'def']], [['aaaa', 'bbb', 'aaaaa', 'ccc', 'aaaaba', 'dddd', 'bcc', 'ffffff', 'ccc', 'ccc', 'abc', 'aaaaba']], [['ddddd', 'sttu', 'world', 'apple', 'is', 'awesome', 'Programmaaraaing', 'Python', 'apple']], [['abcd', 'oo', 'efg', 'ccccc', 'abcdbananaefd', 'aklmncccccobcd', 'jkl', 'mno', 'aklmncccccobcd']], [['grapebbbb', 'klmnccccco', 'o', 'cwobcrld', 'klmnccccco']], [['cccc', 'abc', 'ee', 'ghj', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'jklxxxxx', 'rrraarrr', 'xxxxx']], [['a', 'bc', 'def', 'ssssssskslmno', 'ghij', 'klmno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy']], [['Hello', 'wolrld', 'world', 'Programming', 'aaaa', 'awesome', 'Python']], [['awoorlda', 'aaa', 'aaaa', 'awesome', 'ccccc', 'ddd']], [['a', 'bc', 'def', 'ghij', 'klmno', '', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy']], [['a', 'aa', 'def', 'kiwi']], [['klmmno', 'vwxy', 'nklmno', 'is', 'klmno', 'Pythonklmno', 'cccc', 'wdorld', 'klmno', 'klmno']], [['datdddd', 'aa', '', 'bb']], [['abcd', 'efg', 'mnprld', 'hi', 'jkl', 'aa', 'mno']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'ddddat', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx']], [['oo', 'aa', 'apple', 'a', 'klmnccccco', 'aaa', 'o']], [['aaa', 'aa', 'a', 'bb', 'b', 'aa']], [['Hello', 'world', 'Programming', 'is', 'klmno', '', 'date', 'Python', 'Programming', 'world', 'Python', 'klmno']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'ddddat', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'cccc']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'mno', 'jkl', 'jkl']], [['a', 'bc', 'def', 'ghij', 'klmno', 'cPytthonc', 'p', 'qr', 'stu', 'vwxy', 'vwxy']], [['world', 'Programming', 'is', 'klmno', 'yPython', 'Programming', 'is']], [['aaa', 'aa', 'a', 'worldbb', 'b', 'a', 'a']], [['a', 'bc', 'def', 'aa', 'ghij', 'klmno', 'klmno']], [['a', 'bc', 'def', 'worlld', 'klmnccccco', 'ddd', 'ghij', 'klmno', 'world', 'a']], [['a', 'bc', 'def', 'ghgij', 'Programing', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy']], [['aaaa', 'bb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff', 'date']], [['hqri', 'effg', 'efg', 'jkl', 'mno', 'mno']], [['cccc', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'sProgrprldammingss', 'zzzz']], [['a', 'bcc', 'def', 'ghijHello', 'bb', 'pp', 'vwxyy', 'stu', 'vwxy']], [['a', 'bc', 'def', 'klmno', 'cPytthonc', 'p', 'qr', 'stu', 'vwxy', 'vwxy']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'ddddat', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'cccc', 'sssssss']], [['aa', 'o', 'grapebbbb', 'bb', 'b', 'o']], [['world', 'Programming', 'is', 'klmno', 'abcd', 'Programming', 'is']], [['world', 'is', '', 'ddddd', 'Pytthon', 'world']], [['stu', 'Hello', 'world', 'worghhjldawesome', 'is', 'awesome', 'Programmaaaaing', 'Python']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'yy', 'eeeeee', 'aaa']], [['aaa', 'aa', 'ikiwi', '', 'b', 'a', 'b']], [['cccc', 'dddgrape', 'yy', 'xxxxx', 'rrrrrrr', 'sssssss', 'lemonn', 'yy']], [['ddddd', 'sttu', 'world', 'apple', 'is', 'awesome', 'Programmaaraaing', 'Python', 'apple', 'apple']], [['a', 'b', 'bc', 'def', 'jjisklmno', 'bbc', 'aa', 'klmno', 'klmno']], [['aaa', 'aa', 'b', 'a', 'a']], [['Hello', 'world', 'Programming', 'ghhj', 'klmno', 'date', 'Python', 'Programming', 'world', 'aaa', 'world']], [['aaaa', 'bbb', 'ghij', 'ccc', 'world', 'ee', 'ffffff', 'ccc', 'aaaa']], [['aaaa', 'bbb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc', 'ccc', 'ffffff']], [['world', 'is', 'awesome', 'Python']], [['Helcccco', 'Programming', 'is', 'awesome', 'awesome', 'Programming']], [['aaaa', 'bb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc', 'ee', 'dddd']], [['rrrrrr', 'Programmaaaaing', 'def', 'ghij', 'klmno', 'zzzzz', 'mklmno', 'def']], [['a', 'def', 'kiwi', 'def']], [['oo', 'aa', 'a', 'klmnccccco', 'aaa', 'avxya', 'o']], [['worHeHellollold', 'is', 'awesome', 'Programmaaraaing', 'Programmaaraaing']], [['world', 'klikiwimno', 'Programming', 'is', 'klmno', 'yPythnon', 'Programming']], [['aa', 'aaa', 'bbbb', 'ccccc', 'jiyys', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['world', 'klikiwimno', 'Programming', 'is', 'klmno', 'yPythnon', 'klmnoo', 'Programming']], [['aa', 'aaa', 'ccccc', 'ddd', 'date', 'ddddd', 'eeeeee', 'aaa']], [['Hello', 'world', 'Programming', 'is', 'klmno', 'date', 'Python', 'Programming', 'world', 'aaa', 'world', 'is']], [['world', 'Programming', 'is', 'awesome', 'Python']], [['a', 'bc', 'def', 'ghijHello', 'klmno', 'qr', 'stu', 'vwxy']], [['abcd', 'oo', 'efeg', 'ccccc', 'abcdbananaefd', 'aklmncccccobcd', 'jkl', 'mno', 'aklmncccccobcd']], [['qr', 'zzzzz', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon', 'banana']], [['Helcccco', 'Programming', 'is', 'awesome', 'awesome', 'awesome']], [['aa', 'aa', 'ddbananaefdd', 'ddddd', 'eeeeee', 'aaaa']], [['Hello', 'world', 'Programming', 'is', '', 'world']], [['cccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'cbccc', 'xxxxx', 'ee', 'ee']], [['aaa', 'aaaa', 'awesome', 'ccccc', 'ddd', 'aaa']], [['abcd', 'jis', 'efg', 'jlldl', 'jkl', 'Programmaaaaing', 'jkl']], [['worHeHellollold', 'is', 'awesome', 'Programmaaraaing', 'Programmaaraaing', 'awesome']], [['klmno', 'abcd', 'efg', 'aklmncccccobcd', 'jkl', 'mno', 'abcd']], [['a', 'bc', 'ghij', 'vxy', 'kolmddddno', 'sssssssklmno', 'p', 'stu', 'xvwxy', 'stu']], [['world', 'yPgrapebbbbython', 'Programming', 'is', 'yPython', 'Programming', 'is']], [['abcd', 'ccccc', 'Programing', 'ccccc', 'jkl', 'mno']], [['ccccc', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'ddddat', 'sssssss', 'c', 'xxxxx', 'rrraarrr', 'zzzz']], [['aaakolmddddnoa', 'bcc', 'def', 'eee', 'ghijHello', 'bb', 'pp', 'qr', 'stu', 'debbcf', 'vwxy']], [['hqri', 'efg', 'bbb', 'mno']], [['aaakolmddddno', 'aa', 'ikiwi', 'effg', 'bb', 'b', 'a', 'ikiwi']], [['datdddd', 'aaa', 'aa', 'dddgrape', 'bb']], [['datdddd', 'aaaddd', 'aaa', 'aa', '', 'bb', 'bb']], [['aa', 'aaa', 'bbbb', 'ddddd', 'eeeeee', 'aaa', 'aaa']], [['Hello', 'woorld', 'Programming', 'is', 'klmno', 'nklmno', 'Python', 'Programming', 'Helllo', 'is', 'nklmno']], [['Hello', 'world', 'Programming', 'ghhj', 'klmno', 'date', 'PythworHeHellolloldn', 'Programming', 'world', 'aaa', 'world']], [['a', 'aaa', 'def', 'kiwi']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'datdddd', 'rrrrrr', 'sssssss', 'yy']], [['aaaa', 'bbb', 'ghij', 'ccc', 'ee', 'ffffff', 'ccc', 'ccc', 'ffffff']], [['klmnoo', 'cccc', 'ddd', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['a', 'bc', 'def', 'ghij', 'kolmddddno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy', 'p']], [['aaadddyPgrapebbbbython', 'aaa', 'aa', '', 'bb', 'bb']], [['stu', 'Prograomming', 'is', 'awesome', 'Prolemongrammaaaaing', 'Python', 'awesome']], [['a', 'bc', 'def', 'ghij', 'klmno', 'klmno', 'ghij']], [['lklmno', 'a', 'bc', 'def', 'ghij', 'klmno', 'klmno', 'ghij']], [['Hello', 'world', 'Programming', 'isProgra', 'klmno', 'sttu', '', 'date', 'Python', 'Programming', 'world', 'Python', 'klmno']], [['aa', 'bbbb', 'rrrrrrr', 'b', 'hqri', 'b', 'hqri']], [['a', 'b', 'bc', 'def', 'jjisklmno', 'bbc', 'aa', 'klmno', 'xxxxx']], [['a', 'def', 'klmklikiwimnonccccco', 'klmno']], [['ccc', 'ddd', 'ee', 'y', 'worlld', 'lemon', 'rrrrrr', 'sssssss', 'rrrrrr']], [['Hello', 'world', 'Programming', 'is', 'dddefef', '', '', 'Python', 'Hello']], [['ccccc', 'abc', 'ee', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'c', 'rrraarrr', 'rrraarrr']], [['a', 'Python', 'vvwxy', 'def', 'ikiwwi', 'ghij', 'kiwi']], [['a', 'bc', 'def', 'worlld', 'klmnccccco', 'ghij', 'klmno', 'kiwigcccchij', 'a']], [['stu', 'world', 'Programming', 'is', 'awesome', 'Programmaaaaing']], [['aaaa', 'bbb', 'PythworHeHellolloldnbbb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff']], [['abcd', 'hi', 'jkkl', 'aa', 'mno']], [['a', 'bc', 'avxya', 'klmnccccco', 'klmno']], [['stu', 'lemonn', 'is', 'awesome', 'Python', 'Python']], [['Helcccco', 'Programming', 'is', 'awesome', 'awesome', 'iis', 'Programming']], [['aaakolmddddno', 'aa', 'ikiwi', 'bb', 'b', 'a', 'bcc', 'ikiwi', 'bb']], [['apple', 'banana', 'lemmon', 'cherry', 'datdddd', 'grape', 'kiwi', 'lemon', 'cherry']], [['aa', 'efg', 'a', 'cccc', 'grape', 'bb', 'b', 'bbbb']], [['a', 'bc', 'def', 'ghij', 'kolmddddno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy', 'stu']], [['a', 'bc', 'def', 'aa', 'ghij', 'klmno', 'klmno', 'klmno']], [['hqri', 'effg', 'eefg', 'jkl', 'mno', 'mno']], [['stu', 'Prograomming', 'is', 'awesome', 'Prolemongrammaaaaing', 'Python', 'jkwrorlldl', 'awesome']], [['cccc', 'abc', 'ee', 'ghj', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'rrraarrr', 'xxxxx']], [['Programmaaaaing', 'aaa', 'aa', '', 'bb', 'bb', '', 'Programmaaaaing', 'bb']], [['ddddd', 'sttu', 'apple', 'is', 'awesome', 'Programmaaraaing', 'Python']], [['Heello', 'Proxxxxxgramming', 'Hello', 'world', 'Programming', 'is', 'klmno', 'aaa', 'Hello']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'worlld', 'rrrrrr', 'sssssss', 'rrrrrr', 'sssssss']], [['aaa', 'c', 'def', 'aHelccccoaa', 'klmnccccco', 'klmno', 'bc', 'bc']], [['world', 'is', '', 'ddddd', 'Pytthon', 'world', 'world']], [['Hello', 'world', 'Programming', 'is', 'debbcf', '', '', 'Python']], [['def', 'klmklikiwimnonccccco', 'klmno']], [['ddddd', 'sttu', 'apple', '', 'awesome', 'Programmaaraaing', 'Python', 'apple']], [['Hello', 'HelyPgrapebbbbythonlo', 'world', 'Programming', 'is', '', 'Pytthon']], [['apple', 'banana', 'lemmon', 'cherry', 'datefegdddd', 'datdddd', 'grape', 'kiwi', 'lemon', 'cherry', 'lemon', 'datdddd']], [['bcc', 'ddd', 'sawesomeee', 'zzzz', 'yy', 'yyy', 'xxxxxx', 'rrrrrr', 'sssssss', 'yy', 'eee', 'yy']], [['a', 'bc', 'def', 'aa', 'Helllo', 'ghij', 'klmno', 'klmno', 'klmno']], [['a', 'bc', 'def', 'ghij', 'klmno', 'ddd', 'ghij']], [['def', 'kiwi', 'def']], [['aaaa', 'bbb', 'ghij', 'ccc', 'dddd', 'ffffff', 'ccc', 'ccc', 'ffffff']], [['Hello', 'world', 'Programming', 'isgrape', 'klmno', 'Python', 'world', 'wxxxxxorld']], [['Helcccco', 'aaa', 'a', 'bbb', 'bb', 'b', 'bbb']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'worlld', 'rrrrrr', 'sssssss', 'rrrrrr', 'mnoddd', 'sssssss']], [['aaa', 'ab', 'a', 'bbb', 'bb', 'worlld', 'b']], [['Hello', 'world', 'Programming', 'isgrape', 'Python', 'world', 'wxxxxxorld', 'Programming']], [['Hello', 'Progrprldamming', 'is', 'klmno', 'Python', 'cccc', 'Prgogramming', 'Programming']], [['abcd', 'mworldno', 'efg', 'ccccc', 'aklmncccccobcd', 'jkl', 'mno', 'mno']], [['sttu', 'world', 'Programming', 'is', 'awesome', 'Programmaaraaing', 'Programmig', 'Python']], [['Hello', 'world', 'Programming', 'klmno', 'date', 'Programming', 'world', 'aaa', 'world']], [['aa', 'a', 'cccc', 'bb', 'ghi', 'b', 'bbbb']], [['aa', 'bc', 'klmnccccco', 'ghij', 'klmno', 'klmno']], [['aaaa', 'bb', 'ghij', 'cPytthonc', 'Pytthon', 'dddd', 'ee', 'ffffff', 'ccc', 'aaaaa']], [['ddddd', 'stsssssssklmnou', 'apple', 'awesme', 'is', 'awesomekiwi', 'Programmaaraaib', 'Python']], [['Hello', 'world', 'jkklmnoklProgramming', 'is', 'klmno', 'date', 'Python', 'Programming', 'world', 'aaa', 'world', 'is']], [['Programming', 'awesome', 'awesome', 'Programming']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'prldyy', 'eeeeee', 'aaa']], [['aaaa', 'bbb', 'ghij', 'ccc', 'ee', 'ccc', 'ccc', 'ffffff']], [['abcd', 'jis', 'jkwrorlldl', 'efg', 'hi', 'jkworlldl', 'efgg', 'jkl', 'mno', 'jkl']], [['aa', 'aa', 'ddddd', 'eeeeee']], [['bb', 'bc', 'def', 'ghij', 'klmno', 'klmno', 'ghij']], [['Hello', 'world', 'Programming', 'ghhj', 'klmno', 'date', 'Python', 'Programming', 'datelklmno', 'world', 'aaa', 'world', 'world']], [['Hello', 'world', 'Programming', 'is', 'rrraarrr', 'date', 'Programming', 'Programming']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu']], [['ddbananaefdd', 'cbc', 'aaa', 'bbc', 'bc', 'def', 'kklmno', 'ddbananaedd', 'cherry', 'bc']], [['bc', 'klmnccccco', 'klmncccccco', 'sttu', 'wobcrld']], [['aaaa', 'bbb', 'ghij', 'ccc', 'dddd', 'ee', 'ffffff', 'worlld']], [['aaa', 'aa', '', 'b', 'a']], [['cccc', 'ddd', 'ee', 'yy', 'worlld', 'rrrrrr', 'sssssss', 'rrrrrr']], [['ddbananaefdd', 'cbc', 'aaa', 'bc', 'def', 'klmno', 'c', 'klmno', 'klmno']], [['a', 'bc', 'def', 'ssssssskslmno', 'ghij', 'klmno', 'sssssssklmno', 'p', 'qr', 'stu', 'vwxy', 'klmno']], [['abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'kiwi']], [['aaa', 'aa', 'grape', 'bb', 'bb']], [['aa', 'o', 'bbbb', 'Praogrammaaaaing', 'bb', 'b', 'bbbb']], [['efg', 'a', 'cccc', 'grape', 'bb', 'b', 'bbbb']], [['aaa', 'bbbb', 'ccccc', 'jiyys', 'aaaa', 'ddd', 'dddddd', 'eeeeee', 'aaa']], [['ddbananaefdd', 'cbc', 'ccbc', 'rrrrrr', 'aaa', 'bc', 'def', 'klmno', 'c']], [['aaa', 'aa', 'ikiwi', 'rrraarrr', '', 'b', 'a', 'b']], [['cccc', 'ee', 'yy', 'xxxxx', 'rrrrrr', 'ssss', 'sssssss']], [['Hello', 'world', 'Programming', 'is', '', 'world', 'world']], [['jis', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno', 'jkl']], [['a', 'b', 'bc', 'def', 'jjisklmno', 'bbc', 'Programmigaa', 'aa', 'klmno', 'xxxxx']], [['aa', 'bc', 'def', 'klmnccccco', 'klmno', 'bc', 'klmno']], [['a', 'bc', 'def', 'ghijHello', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'p']], [['awoorlda', 'aa', 'aaa', 'aaaa', 'awesome', 'ccccc', 'ddd', 'ccccc']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'dddd', 'awesddefome', 'xxxxx', 'rrrrrr', 'sssssss', 'cccc']], [['hqri', 'efg', 'jkl', 'mno']], [['Helcccco', 'Programming', 'isikiwi', 'awesome', 'awesome', 'Programming']], [['stu', 'Hello', 'world', 'worghhjldawesome', 'is', 'awesome', 'Programmaaaaing', 'Python', 'awesome']], [['cccc', 'ddd', 'ee', 'yy', 'worlld', 'rrrrrr', 'sssssss', 'rrrrrr', 'mnoddd', 'sssssss']], [['Helcccco', 'aaa', 'a', 'bbb', 'bb', 'b', 'bikiwwibb', 'bbb']], [['cccc', 'ddd', 'ee', 'xxxxx', 'rrrrrr', 'sssssss']], [['worlda', 'bc', 'def', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'vwxy']], [['aaaa', 'bbb', 'aaaaa', 'cc', 'dddd', 'ee', 'fffffff', 'ccc', 'ccc', 'ee', 'ccc']], [['abcd', 'Programing', 'jkl', 'mno']], [['Heello', 'Programming', 'is', 'awesome']], [['Hello', 'ffffff', 'world', 'Progrefgamming', 'isgrape', 'klmno', 'Python', 'world']], [['aaaa', 'bbbb', 'bbb', 'ghij', 'dddd', 'ddyaklmncccccobcdydd', 'ee', 'ffffff']], [['jis', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno', 'jkl', 'jis']], [['stu', 'lemonn', 'is', 'awesome', 'Python', 'Python', 'lemonn']], [['rrrrrr', 'bc', 'def', 'ghij', 'klmno', 'mklmno', 'mklmno']], [['Programming', 'is', 'ikiwi', 'awesome', 'Programmaaraaing', 'is', 'ikiwi']], [['abcd', 'efg', 'jkklmnokl', 'ddddat', 'hi', 'jkl', 'mno', 'abcd', 'jkl']], [['ccccc', 'ee', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'ddddat', 'sssssss', 'c', 'xxxxx', 'rrraarrr', 'yy']], [['a', 'bc', 'def', 'ghij', 'kolmddddno', 'sssssssklmno', 'p', 'qqr', 'stu', 'vwxyy', 'bcc', 'vwxy', 'sssssssklmno']], [['Programming', 'is', 'ikiwi', 'Programmaaraainrg', 'awesome', 'Programmaaraaing', 'is', 'ikiwi']], [['cccc', 'ddd', 'ee', 'worlld', 'rrrrrrr', 'rghirrrrr', 'rrrrrr', 'sssssss', 'rrrrrr']], [['prldyyabcd', 'jis', 'mneeo', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno', 'jkl']], [['cabcd', 'abcd', 'hi', 'jkkl', 'aa', 'mno']], [['aaa', 'aaaa', 'awesome', 'ccccc', 'ddd', 'aaa', 'awesome']], [['aaaa', 'bbb', 'ccc', 'dddd', 'ddddd', 'ee', 'ffffff']], [['cccc', 'ddd', 'sssssssssssskslmnoss', 'ee', 'zzzz', 'yy', 'dddd', 'xxxxx', 'rrrrrr', 'xxxxxx', 'sssssss', 'dddProgramming']], [['a', 'bc', 'def', 'ghij', 'klmno', 'klmno', 'klmno']], [['a', 'bc', 'ghij', 'vxy', 'kolmddddno', 'sssssssklmno', 'p', 'stu', 'xvwxy']], [['a', 'Python', 'vvwxy', 'def', 'kiwwi', 'ghij', 'kii']], [['oo', 'aa', 'apple', 'a', 'klmnccccco', 'aaa', 'o', 'oo']], [['Hello', 'Porogramming', 'is']], [['ddbananaefdd', 'apple', 'cbc', 'aaa', 'bbc', 'bc', 'def', 'kklmno', 'ddbananaedd', 'bc']], [['klmjklxxxxxno', 'a', 'bc', 'yy', 'def', 'ghij', 'klmno', 'klmno', 'ghij', 'def']], [['ccccc', 'ee', 'rrraardaterr', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'ddddat', 'Pythoonklmno', 'sssssss', 'xxxxx', 'rrraarrr']], [['aa', 'aaa', 'aweskolmddddnoome', 'ccccc', 'ddd', 'ddddd']], [['aaa', 'worHeHellollold', 'aa', 'bb', 'bb']], [['', 'bcc', 'def', 'ghij', 'kolmddddno', 'sssssssvvwxyhijklmno', 'sssssssklmno', 'p', 'qqr', 'stu', 'vwxyy', 'bcc', 'vwxy', 'sssssssklmno']], [['aaakolmddddno', 'aa', 'ikiwi', 'effg', 'abcd', 'bb', 'bikiwwibb', 'a', 'ikiwi']], [['cccc', 'abc', 'ee', 'ghj', 'zzzzz', 'rrraarrr', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'ssssssss', 'rrraarrr', 'xxxxx']], [['sttu', 'world', 'Programming', 'is', 'ikiwi', 'awesome', 'ython', 'stu', 'Programmaaraaing', 'Python', 'ikiwi']], [['abcd', 'jis', 'efg', 'jkworlldl', 'efgg', 'jkl', 'jkl', 'jkworlldl']], [['cccc', 'abc', 'ee', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx', 'rrraarrr']], [['oo', 'aa', 'apple', 'a', 'klmncccco', 'aaa', 'o']], [['sttu', 'world', 'Programming', 'is', 'awesome', 'Programmaaraaing', 'Programmig', 'Pytkiihon']], [['efg', 'hi', 'jkworlldl', 'mno', 'jkl']], [['Hello', 'world', 'Programming', 'hieeiis', 'klmno', 'Python', 'cccc', 'Programming']], [['hhi', 'abcd', 'jis', 'efg', 'hi', 'jkworlldl', 'mno', 'jkl']], [['aaaa', 'bbbb', 'bbb', 'ghij', 'dddd', 'ddyaklmncccccobcdydd', 'ee', 'bbbbb', 'ffffff']], [['aaaa', 'bb', 'ghij', 'cPytthonc', 'Pytthon', 'dddd', 'ee', 'ffffff', 'ccc', 'bbbb', 'aaaaa']], [['cccc', 'ddd', 'e', 'zzzz', 'yy', 'ddddat', 'xxxxx', 'rrrrrr', 'sssssss', 'xxxxx']], [['world', 'Programming', 'ghhj', 'klmno', 'date', 'Python', 'Programming', 'world', 'aProgrammigrapengaa', 'world']], [['a', 'bc', 'def', 'ghij', 'klmno', 'sssssssklmno', 'p', 'qr', 'vwxy']], [['datdddd', '', 'aa', '', 'bb']], [['abcd', 'efg', 'mnprld', 'hi', 'jkl', 'aa', '', 'mno']], [['a', 'bc', 'def', 'klmnccccco', 'ghij', 'klmno', 'klmnccccco']], [['apple', 'sssssss', 'banana', 'cherry', 'date', 'grape', 'ssssssss', 'lemonn', 'banana', 'lemonn']], [['aa', 'a', 'cccc', 'bb', 'ghi', 'b', 'bbbbb']], [['yy', 'sttu', 'is', 'awesome', 'Programmaaraaing', 'Python', 'world']], [['aaa', 'aa', 'a', 'bb', 'b', 'a', 'a', 'bb', 'a']], [['klmnoo', 'cccc', 'ddd', 'yy', 'xxxxx', 'rrrrrr', 'ssssssss', 'yy']], [['aaa', 'aaaa', 'awesome', 'ccccc', 'ddd', 'wxxxxxorld', 'aaa']], [['cccc', 'ssss', 'abc', 'ee', 'rrraarrr', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'rrraarrr', 'xxxxx']], [['dbananaef', 'a', 'df', 'zzznklmnolz', 'ghij', 'kiwi', 'kiwi']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'vwxy', 'vwxy']], [['rghirrrrr', 'worHeHellollold', 'is', 'awesome', 'Programmaaraaing', 'Programmaaraaing']], [['abcd', 'hi', 'jkl', 'mno']], [['Hello', 'world', 'Programming', 'is', '', 'Pytthon', 'Pytthon']], [['aa', 'bc', 'def', 'klmnnccccco', 'ghij', 'klmno']], [['a', 'bcc', 'def', 'ghijHello', 'bb', 'pp', 'vwxyy', 'stu', 'vwxy', 'ghijHello']], [['aa', 'o', 'grapebbbb', 'bb']], [['a', 'bc', 'def', 'ghij', 'klmno', 'ddd', 'ghij', 'klmno']], [['abc', 'mmno', 'abklmklikiwimnoncccccoc', 'def', 'ghi', 'hiee', 'mno']], [['lemon', 'bbb', 'ccc', 'dddd', 'ee', 'ffffff', 'ccc', 'aaaa']], [['wodrld', 'Hello', 'world', 'Programming', 'is', '', 'world']], [['cccc', 'ddd', 'ee', 'zzzz', 'efg', 'dddd', 'xxxxx', 'rrrrrr', 'sssssss', 'cbccc']], [['ddbananaefdd', 'rrrrrr', 'aaa', 'bc', 'def', 'klmno', 'c']], [['aaa', 'bbbb', 'ccccc', 'jiyys', 'aaaa', 'ddd', 'dddddd', 'eeeeee', 'aaa', 'ccccc']], [['abcd', 'jis', 'jkwrorlldl', 'efg', 'hi', 'jkworlldl', 'jkl', 'mno', 'jkl', 'hi']], [['a', 'edef', 'ghijHello', 'klmno', 'p', 'qr', 'stu', 'vvwxy']], [['aaa', 'aa', 'aklmncccccobcd', 'b', 'a']], [['aaa', 'aa', 'aklmnccccProgrammaaraaibcd', 'b', 'aa']], [['aaa', 'worHeHellollold', 'aa', 'bb', 'bbython', 'bb', 'aaa']], [['a', 'bc', 'def', 'aaa', 'ghij', 'klmno', 'klmno', 'klmno']], [['apple', 'banana', 'cherry', 'datdddd', 'grape', 'kiwi', 'lemon', 'cherry']], [['efg', 'a', 'grape', 'bbb', 'b', 'bbbb']], [['world', 'Progra', 'ee', 'awesome', 'Programmaaaaing', 'Python']], [['aaaa', 'bb', 'ghij', 'cPytthonc', 'dddd', 'ee', 'ffffff', 'ccc', 'aaa']], [['Helcccco', 'Programming', 'is', 'awesome', 'awesome', 'iis', 'Programming', 'Helcccco']], [['worlld', 'is', '', 'ddddd', 'Pytthon', 'world', 'world']], [['aaaa', 'bbbb', 'bbb', 'ghij', 'ccc', 'dddd', 'ddyaklmncccavxyaccobcdydd', 'ee', 'ffffff']], [['sttu', 'world', 'Programming', 'is', 'ikiwi', 'Programmaaraaing', 'Python', 'Programmaaraaing']], [['apple', 'sssssss', 'banana', 'cherry', 'date', 'grape', 'ssssssss', 'lemonn', 'ssprldsssss', 'banana', 'lemonn', 'ssprldsssss']], [['abc', 'defg', 'hij', 'klmno']], [[]], [['abcdefg']], [['abc']], [['a']], [['aa']], [['abc', 'def', 'g', 'hij']], [['a', 'cc', 'dddd', 'b', 'a', 'cc']], [['ab', 'de', 'a', 'cc', 'd', 'b', 'a', 'cc', 'aaa']], [['1234', '9', '0', '12']], [['aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['ap', 'banana', 'date', 'grape', 'kiwi', 'lemon']], [['a', 'ghij', 'knlmno']], [['abc', 'mnno', 'def', 'ghi', 'jkl', 'mno']], [['apple', 'banana', 'cherry', 'grape', 'kiwi', 'lemon']], [['adatep', 'ap', 'banana', 'date', 'grape', 'kiwi', 'datedddd', 'lemon']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'ddddd', 'eeeeee']], [['aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['eeddddee', 'aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'aaa']], [['cccc', 'ddd', 'ee', 'zzzz', 'b', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['apple', 'banana', 'cheyrry', 'grape', 'kiwi', 'lemon']], [['b', 'aaa', 'aa', 'a', 'bbb', 'bb', 'b']], [['apple', 'cherry', 'grape', 'kiwi', 'lemon']], [['abc', 'def', 'ghi', 'jkl', 'mno', 'ghi']], [['abc', 'def', 'isi', 'jkl', 'mno', 'abc']], [['apple', 'banana', 'datedddd', 'grape', 'kiwi', 'lemon']], [['bc', 'def', 'ghij', 'klmno']], [['isi', 'a', 'ghij', 'knlmno', 'jkl', 'a']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'rrrr', 'aaa']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'ccccc']], [['cccc', 'ddd', 'ee', 'b', 'xxxxcherryx', 'rrrrrr', 'sssssss', 'yy']], [['Hello', 'world', 'is', 'awesome', 'Python']], [['a', 'bc', 'kklmno', 'def', 'ghij', 'klmno']], [['eeddddee', 'aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd']], [['world', 'abc', 'def', 'ghi', 'jkl', 'gh', 'mno']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'sssssss', 'rrrr', 'aaa']], [['ghijj', 'knlmno', 'dateddddknlmno']], [['knlmno', 'dateddddknlmno', 'ghijj']], [['cccc', 'xxxxx', 'ddd', 'ee', 'zzzz', 'b', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['aaaa', 'bbb', 'ccc', 'dddd', 'ffffff']], [['cherry', 'apple', 'banana', 'cheyrry', 'grape', 'kiwi', 'lemon', 'cherry']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'qr']], [['a', 'ghij', 'knlmno', 'a']], [['hghijj', 'knlmno', 'dateddddknlmno', 'ghijj']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'date', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'ddd']], [['abcd', 'efg', 'jkl']], [['abc', 'isi', 'jkl', 'mno', 'jkl', 'abc']], [['abcd', 'efg', 'jkl', 'jkl', 'abcd']], [['jklbc', 'abcd', 'efg', 'jkl', 'jkl', 'abcd']], [['a', 'kklmno', 'def', 'ghij', 'klmno', 'kklmno', 'def']], [['ccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss']], [['ee', 'bbb', 'ccc', 'dddd', 'ddd', 'ee', 'ffffff']], [['bc', 'def', 'ghij', 'klisimno']], [['deef', 'abc', 'def', 'isi', 'jkl', 'mno', 'cccmno', 'abc']], [['cccc', 'ddd', 'ee', 'zzzz', 'ydef', 'b', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'aaa']], [['a', 'kklmno', 'def', 'ghij', 'klmno', 'kklmno', 'def', 'kklmno']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'cheyrryqr']], [['ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss']], [['a', 'bc', 'def', 'ghij', 'klmno', 'qr', 'stu', 'vwxy', 'qr']], [['world', 'Programming', 'i', 'awesome', 'Python']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'yystu', 'rrrrrr', 'sssssss', 'yy']], [['apple', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon', 'date']], [['cccc', 'ddd', 'ee', 'bb', 'zzzz', 'b', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'ddd']], [['mno', 'apple', 'banana', 'cheyrry', 'grape', 'kiwi', 'lemon', 'cherry']], [['cccc', 'zz', 'ddd', 'rrrrr', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'zzzz']], [['aa', 'bbbb', 'eeee', 'hghijj', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yjklbcy', 'rrrrr']], [['aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'aaa', 'aaa']], [['apple', 'dateddddknlmno', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon', 'date']], [['datedddd', 'isi', 'jkl', 'mno', 'jkl', 'abc', 'jkl']], [['eeddddee', 'aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'aaaa', 'aaa', 'aaa']], [['aa', 'bbbb', 'eeee', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'dateddddknlmno']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'gh', 'eeeeee', 'aaa', 'ccccc', 'ccccc']], [['eeddddee', 'aaaaaa', 'aaa', 'bbbb', 'ddd', 'yjklbcy', 'ddd', 'aaa']], [['cherry', 'apple', 'banana', 'cheyrry', 'grape', 'kiwi', 'yystu', 'lemon', 'cherry']], [['Hello', 'world', 'is', 'awesome', 'Python', 'awesome']], [['datedddd', 'isi', 'jkl', 'mno', 'jkl', 'abc', 'vwxy', '', 'jkl']], [['apple', 'cherry', 'grape', 'kiwi', 'lemon', 'lemon']], [['abcd', 'efyystug', 'jkl', 'jkl', 'abcd']], [['eeddddee', 'aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'aa']], [['adatep', 'ap', 'banana', 'date', 'grape', 'kiwi', 'datedddd', 'lemon', 'banana']], [['abc', 'def', 'isi', 'jkl', 'mno', 'abcc']], [['cccc', 'ddd', 'ee', 'b', 'xxxxcherryx', 'rrrrrr', 'ssssssss', 'yy']], [['def', 'sssssss']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'eeeeee', 'aaa']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'eeeeee', 'Python', 'aaa']], [['eeddddee', 'aa', 'yystu', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'abcd', 'aaa']], [['xvwxy', 'aa', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'cheyrryqr']], [['aa', 'a', 'bc', 'def', 'ghij', 'klmno', 'qr', 'stu', 'vwxy', 'qr', 'def', 'def']], [['a', 'ghij', 'datedddd', 'a']], [['apple', 'dateddddknlmno', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'loemon', 'lemon', 'date']], [['cccc', 'ddd', 'ee', 'b', 'xxxxcherryx', 'rrrrrr', 'eee', 'ssssssss', 'yy', 'eee']], [['a', 'ghij', 'knlmno', 'jkl', 'a']], [['abcd', 'jkl', 'jkl']], [['apple', 'banana', 'cheyrry', 'grape', 'kiwi', 'lemon', 'cherry']], [['aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd']], [['eeddddee', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeee']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'date', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'ddd', 'yy']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'ddddd', 'eeeeee', 'bbbb']], [['aa', 'bbbb', 'cccccc', 'ccceeecc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'ccccc']], [['eeddddee', 'aa', 'zzz', 'e', 'aaa', 'eeabccee', 'bbbb', 'ccccc', 'ddd', 'ddddd']], [['abc', 'isi', 'jkl', 'mno', 'jkl', 'abc', 'mno']], [['cccc', 'ddd', 'ee', 'bb', 'cheryrr', 'cheyrrya', 'xxxxx', 'zz', 'sssssss', 'yy']], [['world', 'is', 'awesome', 'Python', 'awesome', 'is']], [['datedddd', 'isi', 'jkl', 'jkl', 'abc', 'jkl']], [['apple', 'dateddddknlm', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon', 'date']], [['ghijj', 'knlmno', 'b', 'dateddddknlmno']], [['datedddd', 'isi', 'jkl', 'jkl', 'abc', 'jkl', 'isi']], [['cccc', 'ddd', 'rrrrr', '', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['eeddddee', 'aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'aa', 'aaa']], [['aaa', 'aa', 'a', 'bbb', 'bb', 'zzz']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'date', 'yyyy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'ddd']], [['adatep', 'ap', 'banana', 'date', 'grape', 'kiwi', 'datedddd', 'lemon', 'banan']], [['apple', 'banana', 'grape', 'kiwi', 'lemon']], [['aa', 'aaa', 'bbbbbbb', 'eeee', 'ccccc', 'ddd', 'jkl', 'eeeeee', 'aaa']], [['banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon', 'date']], [['a', 'ghij', 'a']], [['bc', 'def', 'klmno']], [['apple', 'banana', 'date', 'grape', 'date', 'lemon', 'kiwi']], [['apple', 'banana', 'date', 'grape', 'date', 'lemon']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'dddd', 'ddd', 'ddddd', 'eeeeee', 'rrrr', 'aaa']], [['adatep', 'ap', 'banana', 'date', 'grape', 'dateddded', 'lemon', 'banacheyrryn', 'ap']], [['aa', 'a', 'bc', 'def', 'ghij', 'klmno', 'qr', 'stu', 'vwxy', 'qr', 'def', 'def', 'qr']], [['a', 'bc', 'klemonklmno', 'def', 'ghij', 'klmno']], [['abcd', 'efg', 'hi', 'jkl', 'mno', 'efg']], [['aa', 'aaa', 'eeee', 'cccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'aaa']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'sssssss', 'rrrr', 'aaa', 'ccccc']], [['b', 'aaa', 'aa', 'a', 'bbb', 'bb', 'b', 'aaa']], [['datedddd', 'isi', 'jkl', 'mno', 'vwxy', '', 'jkl', '']], [['apple', 'banana', 'cheyrry', 'grape', 'kiwi', 'lemon', 'cherry', 'kiwi']], [['xvwxy', 'jklbPython', 'efg', 'jkl', 'jkl', 'abcd']], [['adatep', 'ap', 'banana', 'date', 'grape', 'dateddded', 'lemon', 'banacheyrryn', 'ap', 'lemon']], [['aa', 'aaa', 'bbbb', 'eeee', 'cccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['world', 'Programming', 'awesome', 'Python']], [['aa', 'bbbb', 'cccccc', 'ccceeecc', 'ddd', 'ddddd', 'eeeccceeecceee', 'aaa', 'ccccc']], [['eeddddee', 'aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'bbbb']], [['aa', 'bbbb', 'eeee', '', 'cccccc', 'ddddd', 'eeeeee', 'Python', 'aaa']], [['banacheyrryqrna', 'apple', 'banana', 'date', 'grape', 'edate', 'lemon', 'kiwi']], [['abcd', 'ghi', 'efg', 'hi', 'jkl']], [['abcd', 'jkl', 'jkl', 'abcd']], [['apple', 'banana', 'date', 'gre', 'date', 'lemon', 'kiwi']], [['abc', 'abccccccc', 'def', 'ghi', 'jkl', 'mno']], [['a', 'knlmno']], [['aa', 'aaa', 'bbbbbbb', 'eeee', 'ccccc', 'jkl', 'eeeeee', 'ajklbPython']], [['abc', 'mnno', 'def', 'ghi', 'monno', 'jkl', 'mno', 'mnno']], [['knlmno', 'dateddddknlmno', 'ghijj', 'ghijj']], [['cccc', 'ddd', 'ee', 'bb', 'zzzz', 'b', 'xxxxx', 'rrrrrr', 'ssssss', 'yy']], [['b', 'aaa', 'aa', 'a', 'bbb', 'bb', 'mnnoaa', 'b', 'aaa']], [['aa', 'aaa', 'bbbb', 'eeee', 'cccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'ddd']], [['mno', 'apple', 'cheyrry', 'grape', 'lemon', 'cherry', 'cherry']], [['cccc', 'ddd', 'ee', 'bb', 'cheryrr', 'cheyrrya', 'xxxxx', 'zz', 'sssssss', 'yy', 'ee']], [['adatep', 'ap', 'banana', 'date', 'kiwi', 'datedddd', 'lemon', 'banan']], [['ghij', 'knlmnno', 'knlmno']], [['aa', 'a', 'bc', 'def', 'ghij', 'klmno', 'qr', 'stu', 'def', 'def']], [['abc', 'isi', 'mno', 'jkl', 'gh', 'abc', 'abcc', 'mno']], [['aaa', 'eeee', 'ccccc', 'ddd', 'vwxy', 'ddddd', 'cccmno']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'ddddd', 'aaa', 'eeeeee', 'bbbb']], [['aa', 'aaa', 'bbmnnoaabb', 'ddd', 'ddddd', 'eeeeee']], [['ahghijjbcd', 'abcd', 'efyystug', 'jkl', 'jkl', 'abcd']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'dddddd', 'eeeeee']], [['cheyrrya', 'jkl', 'ghijj', 'abcd']], [['cccc', 'ddd', 'ee', 'bb', 'zzzz', 'b', 'xxxxx', 'ssssss', 'yy']], [['datedddd', 'jkl', 'mno', 'vwxy', '', 'jkl', '']], [['eeee', 'abcd', 'ghi', 'ef', 'hi', 'jkl']], [['a', 'zz', 'a']], [['aa', 'bbbb', 'ydef', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa']], [['cccc', 'ddd', 'ee', 'xxxxcherryx', 'rrrrrr', 'rrrrrr', 'ssssssss', 'banan']], [['b', 'isi', 'jkl', 'mno', 'abcc']], [['aa', 'bbbb', 'ydef', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'bbbb']], [['Hello', 'world', 'Programming', 'klisimno', 'awesome', 'Python']], [['mno', 'apple', 'cheyrry', 'grape', 'lemon', 'cherry']], [['a', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'qr']], [['sssssssklmno', 'cccc', 'ddd', 'ee', 'xxxxcherryx', 'rrrrrr', 'rrrrrr', 'ssssssss', 'banan']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'eeeeee', 'cccccc', 'aaa']], [['aa', 'a', 'bc', 'def', 'ghij', 'klmno', 'qr', 'stu', 'vwxy', 'def', 'def']], [['applae', 'apple', 'cheyrry', 'grape', 'kiwi', 'lemon', 'cherry']], [['b', 'aa', 'a', 'bbb', 'bb', 'b']], [['apple', 'banana', 'cherry', 'date', 'grape', 'kiwi', 'lemon', 'date', 'cherry']], [['aa', 'aaa', 'bbbb', 'ccccc', 'dd', 'bbbb', 'ddddd', 'eeeeee', 'bbbb', 'bbbb', 'eeeeee']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aa', 'ccccc']], [['eeddddee', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'bb', 'aaa']], [['aaaa', 'ffbbbbffff', 'bbb', 'ccc', 'dddd', 'ffffff']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'ssssssss', 'yjklbcy', 'rrrrr']], [['a', 'abc', 'zz', 'a']], [['eeddddee', 'aaa', 'bbbb', 'eeee', 'ccccc', 'aaaa', 'aaa', 'aaa']], [['abcd', 'efg', 'hi', 'jkl', 'efg']], [['aa', 'bbbb', 'ydef', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'bbbb', 'ydef']], [['aa', 'aaa', 'cheyrrya', 'bbbb', 'eeee', 'cccccc', 'dcherryd', 'ddddd', 'eeeeee', 'aaa']], [['a', 'kklmno', 'def', 'ghij', 'klmno', 'kklmno', 'kklmno']], [['a', 'klemonklmno', 'def', 'ghij', 'klmno']], [['cccc', 'ddd', 'ee', 'zzzz', 'ydef', 'b', 'xxxxx', 'sssssss', 'yy', 'zzzz']], [['aa', 'datedddd', 'a']], [['datedddd', 'jkl', 'mno', 'vwxy', '', 'jkl', '', 'datedddd']], [['a', 'kklmno', 'def', 'ghij', 'klmno', 'kklmno', 'def', 'a']], [['cccc', 'xxxxx', 'd', 'ee', 'zzzz', 'b', 'xxxxx', 'rrrrrrr', 'sssssss', 'yy']], [['aa', 'a', 'bc', 'def', 'ghij', 'klmno', 'qr', 'stu', 'vwxy', 'qr', 'def', 'def', 'ddddd', 'qr']], [['aa', 'datedddd', 'a', 'a']], [['aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'aaa']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'ddddd', 'eeeeee', 'bbbb', 'eeeeee', 'ddddd']], [['a', 'bc', 'def', 'klmno', 'klmno']], [['eeddddee', 'zz', 'aa', 'aaa', 'bbbb', 'eeee', 'yjklbcy', 'ddd', 'ddddd', 'aa', 'aaa']], [['apple', 'dateddddknlmno', 'banaaaa', 'cherry', 'date', 'grape', 'kiwi', 'loemon', 'lemon', 'lemon']], [['ahghijjbcd', 'jabcdkl', 'abcd', 'efyystug', 'yystu', 'jkl', 'abcd']], [['a', 'nknlmno', 'knlmno']], [['ddd', 'ee', 'zzzz', 'yy', 'qr', 'xxxxx', 'rrrrrr', 'sssssss', 'ddd']], [['knlmno', 'dateddddknlmno', 'ghijj', 'ghijj', 'dateddddknlmno']], [['bbb', 'ccc', 'dddd', 'ddd', 'ee', 'ffffff']], [['cccc', 'ddd', 'ee', 'zzzz', 'b', 'xxxxx', 'dddd', 'rrrrrr', 'sssssss', 'yy']], [['adatep', 'ap', 'banana', 'date', 'kiwi', 'datedddd', 'datdedddd', 'lemon']], [['aa', 'cheyrrya', 'aaa', 'bbbb', 'ccccc', 'ddd', 'dddddd', 'eeeeee']], [['abcd', 'jkl']], [['cccc', 'ddd', 'ee', 'zzzz', 'b', 'xxxxx', 'dddd', 'rrrrrr', 'sssssss', 'yy', 'cccc', 'cccc']], [['ee', 'abc', 'def', 'ghi', 'jkl', 'dcherrydghi', 'd', 'mno', 'ghi']], [['jkl', 'ccc']], [['abc', 'def', 'ghi', 'jkl', 'd', 'mno', 'ghi']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'dddddd', 'eeeeddddddee']], [['ee', 'ab', 'def', 'ghi', 'jkl', 'dcherrydghi', 'd', 'mno', 'ghi']], [['ddefgdd', 'bbb', 'ccc', 'dddd', 'dddd', 'ddd', 'ee', 'ffffff']], [['cccc', 'ddd', 'zzzjabcdklz', 'ee', 'zzzz', 'yy', 'xxxxx', 'cheyrry', 'yystu', 'rrrrrr', 'sssssss', 'yy']], [['ghij', 'knlmno', 'a', 'knlmno']], [['datedddd', 'isi', 'jkl', 'jkl', 'abc', 'jkl', 'isi', 'jkl']], [['b', 'aa', 'bbb', 'bb', 'b', 'bb']], [['datedddd', 'isi', 'jkl', 'abc', 'jkl', 'ac', 'isi', 'jkl']], [['ap', 'banana', 'date', 'grape', 'dateddded', 'lemon', 'banacheyrryn', 'ap', 'lemon']], [['aa', 'cccccc', 'ccceeecc', 'ddd', 'ddddd', 'eeeccceeecceee', 'aaa', 'ccccc', 'cccccc']], [['ee', 'bbb', 'ccc', 'dddddd', 'ddd', 'ee', 'ffffff', 'bbb']], [['ahghijjbcd', 'jabcdkl', 'abcd', 'efyystug', 'yystu', 'jkl', 'abcd', 'abcd']], [['a', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'v', 'qr', 'vwxy']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'bffffff', 'stu', 'vwxy', 'qr']], [['abc', 'abccccccc', 'awesome', 'ghi', 'jkl', 'mno', 'jkl']], [['knlmno', 'dateddddknlmno', 'ghijj', 'ee']], [['abcd', 'efg', 'jkl', 'mno']], [['a', 'bc', 'klemonklmno', 'def', 'aa', 'ghij', 'klmno']], [['aa', 'aaaa', 'eeee', 'cccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'aaa']], [['aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'eeeeee', 'aaa', 'ccccc', 'ccccc']], [['bbb', 'ccc', 'dddd', 'ddd', 'ee', 'ffffff', 'ee']], [['apple', 'banana', 'datedddd', 'grape', 'kiwi', 'lemon', 'apple']], [['klisimno', 'rrrrrr', 'kklmno', 'def', 'klmno']], [['bb', 'bbbb', 'eeee', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'ddd', 'eeee']], [['apple', 'banana', 'cherry', 'rgrape', 'kiwi']], [['cccc', 'ddd', 'ee', 'e', 'xxxxcherryx', 'rrrrrr', 'rrrrrr', 'ssssssss', 'banan']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'eeeeee', 'dateddddknlmno']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'cheyrryqr', 'vwxy']], [['aaa', 'rrrrrr', 'bbbb', 'dateddddrrrr', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'sssssss', 'rrrr', 'aaa']], [['aaa', 'aa', 'a', 'bbb', 'bb', 'zzz', 'bbb']], [['ap', 'banana', 'date', 'grape', 'kiwi', 'lemon', 'lemon']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'cccc']], [['v', 'aa', 'a', 'bbb', 'bb', 'zzz']], [['eeddddee', 'aaaaaa', 'eeddddeapplaee', 'aaa', 'bbbb', 'ddd', 'yjklbcy', 'ddd', 'aaa']], [['v', 'aa', 'a', 'aadcherrydghi', 'bffffff', 'bb', 'zzz']], [['bc', 'def', 'klmno', 'klmno']], [['abcd', 'ghi', 'efg', 'hi', 'jkl', 'jkl', 'ghi']], [['jkl', 'c']], [['abcd', 'efgdef', 'jkrgrapel']], [['dateddddnlmno', 'ghijj', 'knlmno', 'dateddddknlmno']], [['ghij', 'knlmnno', 'knlmno', 'ghij', 'knlmnno']], [['b', '', 'aaa', 'aa', 'a', 'bbb', 'bb', 'b']], [['aaa', 'rrrrrr', 'bbbb', 'cdateddddcccc', 'ddd', 'ddddd', 'eeeeee', 'rrrr', 'bffffff', 'ddd']], [['knlmno', 'dateddddknlmno', 'ghijj', 'knlmno']], [['Hello', 'ieeeccceeecceees', 'world', 'is', 'awesome', 'PythoPn', 'awesome']], [['aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'aaa', 'aa']], [['acccccc', 'a', 'knlmno']], [['ccc', 'ddd', 'ee', 'zzzz', 'jabcdkl', 'xxxxx', 'rrrrrr', 'sssssss']], [['eeee', 'ghi', 'ef', 'hi', 'jkl']], [['aa', 'a', '', 'bc', 'def', 'ghij', 'klmno', 'qr', 'stu', 'def', 'def']], [['a', 'kklmno', 'def', 'ghij', 'klmno', 'kklmno', 'def', 'kklmno', 'def']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'applaegh', 'eeeeee', 'aaa', 'ccccc', 'ccccc']], [['abccccccc', 'def', 'ghi', 'mno']], [['abccccccc', 'ghi', 'mno']], [['ahghijjbcd', 'jabcdkl', 'abcd', 'efyystug', 'rgrape', 'yystu', 'jkl']], [['a', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'cheyrryqr', 'vwxy', 'p', 'vwxy']], [['a', 'def', 'ghij']], [['rrrrrr', 'bbbb', 'dateddddrrrr', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'sssssss', 'rrrr', 'aaa']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'a']], [['cccc', 'ddd', 'rrrrr', 'zzzz', 'date', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'ddd']], [['eeddddee', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'bb', 'cccaaa', 'aaaa']], [['aa', 'aaa', 'bbbb', 'eeee', 'gre', 'ccccc', 'ddd', 'ddddd', 'aaa']], [['aa', 'bbbb', 'cccccc', 'ccceeecc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'PythoPn']], [['aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'bbb', 'aaa']], [['ee', 'abc', 'def', 'ghi', 'jkl', 'ghgi', 'dcherrydghi', 'd', 'mno', 'ghi']], [['abc', 'def', 'ddef', 'ghi', 'jkl', 'mno', 'ghi']], [['world', 'abc', 'ghi', 'hi', 'gh', 'mno']], [['aaa', 'bbbb', 'eeee', 'gre', 'ccccc', 'ddd', 'ddddd', 'aaa']], [['world', 'Programming', 'ab', 'i', 'awesome', 'Python']], [['apple', 'banana', 'datedddd', 'grapeawesome', 'kiwi', 'lemon']], [['aa', 'bbb', 'bbbb', 'cccccc', 'ccceeecc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'ccccc']], [['cccc', 'ddd', 'abcd', 'rrrrr', '', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'ddddd', 'eeeeee', 'bbbb', 'bbbb']], [['a', 'bc', 'def', 'ghij', 'klmno', 'p', 'qr', 'stu', 'vwxy', 'aa', 'rqr']], [['ahghijjbcd', 'jabcdkl', 'abcd', 'rgrape', 'yystu', 'bffffff', 'jkl']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'crrrrrrcc', 'yy']], [['eeddddee', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddd', 'abccccccc', 'bb', 'aaa']], [['klemonklmno', 'aa', 'aaa', 'bbbbbbb', 'e', 'ccccc', 'jkl', 'eeeeee', 'ajklbPython']], [['aa', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'eeeeee', 'dateddddknlmno', 'eeeeee']], [['aa', 'aaa', 'dcherrydghi', 'bbbb', 'ccccc', 'ddd', 'dddddd', 'eeeeee']], [['cherry', 'apple', 'banana', 'kiiwi', 'cheyrry', 'grape', 'kiwi', 'yystu', 'lemon', 'cherry']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'ddd']], [['aa', 'a', '', 'bc', 'def', 'ghij', 'gjhij', 'klmno', 'qr', 'def', 'def']], [['ccc', 'ddd', 'ee', 'zzzz', 'ddebananf', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'ddd']], [['aa', 'aaaa', 'eeeapplaee', 'eeee', 'cccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'aaa']], [['aaa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'ddddd', 'aaa', 'eeeeee', 'bbbb']], [['abcd', 'ghi', 'efg', 'hi', 'jkl', 'jkl', 'ghi', 'ghi']], [['world', 'is', 'awesome', 'Python', 'zzz', 'is', 'world']], [['deefyystugf', 'abc', 'def', 'ghi', 'jkl', 'mno']], [['aa', 'aaa', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'eeee']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'ghijj', 'ddd', 'ddddd', 'eeeeee', 'rrrr', 'aaa']], [['cccc', 'ddd', 'ee', 'zzzz', 'ydef', 'b', 'xxxxx', 'sssssss', 'yy', 'zzzz', 'ydef']], [['bc', 'def', 'klisimno']], [['world', 'Proggreramming', 'Programming', 'i', 'awesome', 'Python']], [['vwxy', 'isi', 'abbc', 'jkl', 'mno', 'jkl', 'abc', 'jkl']], [['aa', 'aef', 'bbbb', 'eeee', 'ccccc', 'ddddd', 'eeeeee', 'abffffffa', 'aaa']], [['cccc', 'jklbc', 'ddd', 'rrssssssrrr', '', 'ee', 'zzzz', 'rrrrrr', 'sssssss', 'yy']], [['bbbb', 'apple', 'banana', 'rgrape', 'kiwi']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'dddd', 'ddd', 'ddddd', 'eeeeee', 'rrrr', 'aaa', 'r', 'ddd']], [['abc', 'sssssssklmno', 'deHello', 'ghi', 'jkl', 'mno', 'ghi']], [['b', 'isi', 'jkl', 'mno', 'abcc', 'b']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'sssssss', 'yy']], [['mno', 'apple', 'banana', 'bannana', 'cheyrry', 'datdedddd', 'grape', 'kiwi', 'lemon', 'cherry']], [['aaa', 'bbbb', 'deHelloe', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'bbb', 'aaa', 'eeeeee']], [['jkl', 'ghijj', 'abcd']], [['cccc', 'ddd', 'ee', 'bb', 'cheryrr', 'dcherryd', 'xxxxx', 'sssssss', 'yy', 'ee']], [['ghi', 'cheyrrya', 'jjkl', 'ghijj', 'abcd', 'abcd']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'date', 'yyyy', 'sssssyystu', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'ddd']], [['deef', 'abc', 'jkklmnol', 'def', 'isi', 'jkl', 'mno', 'ap', 'cccmno', 'abc']], [['cccc', 'xxxxx', 'ddd', 'ee', 'zzzz', 'xxxxx', 'rrrrrr', 'sssssss', 'yy']], [['a', 'ghij']], [['apple', 'banana', 'dateghidddd', 'grape', 'kiwi', 'dd', 'lemon']], [['datedddd', 'isi', 'jkl', 'abc', 'jkl', 'ac', 'isi']], [['a', 'bc', 'kklmno', 'defssssss', 'ghij', 'klmno']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'dddd', 'ddd', 'ddddd', 'eeeeee', 'rrrr', 'aaa', 'aaa']], [['ghij', 'acccccc', 'a']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'ddd', 'eeeeee', 'sssssss', 'rrrr', 'aaa', 'ccccc']], [['abccccccc', 'ghi']], [['world', 'is', 'awesome', 'Python', 'zzz', 'is']], [['aaa', 'bbbb', 'eeee', 'gre', 'ccccc', 'ddd', 'ddddd', 'dcherryd']], [['bbb', 'ccc', 'dddd', 'ddd', 'qr', 'ee', 'ffffff']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'date', 'yyyy', 'sssssyystu', 'rddddrrrrr', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'ddd', 'ddd']], [['aa', 'aaa', 'cheyrrya', 'bbbb', 'eeee', 'cccccc', 'dcherryd', 'ddddd', 'eeeeee', 'aaa', 'cheyrrya']], [['datedddd', 'jkl', 'mno', 'vwxy', '', 'jkl', 'dateadddd', '']], [['a', 'nknlmno']], [['ahghijjbcd', 'abcd', 'absssssyystucd', 'efyystug', 'abcd']], [['mno', 'apple', 'banana', 'cheyrry', 'ggrape', 'grape', 'kiwi', 'lemon', 'cherry']], [['Hello', 'ieeeccceeecceees', 'Programming', 'is', 'awesome', 'Python']], [['aaa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'aaa', 'eeeeee', 'bbbb']], [['bbbb', 'apple', 'banana', 'eeee', 'rgrape', 'kiwi']], [['aaa', 'rrrrrr', 'bbbb', 'ccccc', 'ddd', 'eeeeee', 'sssssss', 'aaa', 'ccccc']], [['ghij', 'knlmno', 'a', 'klmno', 'knlmno']], [['bbap', 'apple', 'banana', 'eeee', 'rgrape', 'kiwi']], [['aa', 'aaa', 'ccyystu', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'aaa']], [['abcd', 'efg', 'jkl', 'jkl', 'abcd', 'efg']], [['aa', 'ydef', 'ccccc', 'ddd', 'eeeeee', 'eeeee', 'aaa', 'bbbb']], [['b', 'aa', 'a', 'bb', 'b']], [['cccc', 'ddd', 'rrrrr', 'ee', 'zzzz', 'yy', 'xabcdxxxx', 'rrrrrr', 'sssssss', 'yjklbcy', 'rrrrr', 'rrrrr']], [['rrrrr', 'cccc', 'ddd', 'ee', 'bb', 'cheryrr', 'cheyrrya', 'xxxxx', 'zz', 'sssssss', 'yy', 'ee', 'cheryrr']], [['cccc', 'ddd', 'ee', 'zzzz', 'yy', 'xxxxx', 'rrrrrr', 'sssssss', 'yy', 'sssssss']], [['zz', 'aa', 'aaa', 'bbbbbbb', 'e', 'ccccc', 'jkl', 'eeeeee']], [['b', 'isi', 'jkl', 'abcc', 'b']], [['klisimno', 'rrrrrr', 'kklmno', 'def', 'klmno', 'kklmno']], [['aa', 'aaa', 'bbbb', 'cccccc', 'bffffff', 'ccccc', 'ddd', 'ddddd']], [['aa', 'aaai', 'bbbb', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aa', 'ccccc', 'ddddd']], [['aa', 'aaa', 'bbbb', 'ccccc', 'ddd', 'bbbb', 'ddddd', 'eeeeghijee', 'eeeeee', 'bbbb']], [['apple', 'banana', 'deefdate', 'grape', 'kiwi', 'lemon']], [['jjkl', 'bbbb', 'eeee', 'ccccc', 'ddd', 'ddddd', 'eeeeee', 'aaa', 'aaa']]]\n    results = [['aa'], ['AI', 'asdf', 'school'], [], ['abcd', 'dcba'], ['AI', 'ai', 'au'], [], ['cc', 'dd', 'aaaa', 'bbbb'], ['java', 'ruby', 'python'], ['banana', 'orange', 'grapefruit'], ['abcd', 'efgh', 'ijkl', 'mnop'], ['is', 'test', 'this'], ['bird', 'fish', 'lizard'], ['bb', 'aaaa', 'cccc'], ['lazy', 'over'], ['is', 'python', 'language'], ['of', 'list', 'this'], [], ['bb', 'cccc'], ['efgh', 'ijkl', 'mnop'], ['', 'is', 'python', 'language', 'popuolar'], ['test', 'this', 'istest', 'jumpshello', 'telizardst'], ['efgh', 'ijkl', 'mnop'], ['cccc'], ['', 'java', 'ruby', 'python'], ['bb', 'aaaa', 'cccc'], ['', 'is', 'popuolar', 'lizardpython'], ['', 'is', 'language', 'popuolar'], ['', 'is', 'popuolar', 'poupular', 'lizardpython'], ['is', 'python', 'language', 'language'], [], ['ruby', 'python'], ['bb', 'cccc'], ['', 'is', 'poupular', 'lizardpython'], ['is', 'poupular', 'lizardpython'], ['of', 'list', 'this', 'halevels'], ['lazy', 'over'], [], ['banana', 'grapefruit'], ['bird', 'fish', 'fish', 'lizard'], ['is', 'python', 'popuolar'], ['is', 'st', 'test', 'this', 'this'], ['aapple', 'aapple', 'banana', 'banana', 'orange'], ['test', 'this', 'istest', 'jumpshello', 'telizardst'], ['bb', 'aaaa', 'cccc', 'cccc'], ['aajaisaa'], ['test', 'this'], ['test', 'this', 'istest', 'istest', 'jumpshello', 'telizardst'], ['test', 'this', 'istest', 'jumpshello', 'telizardst'], ['java', 'ruby', 'python'], ['aapple', 'banana', 'banana', 'orange'], ['lazy', 'over'], ['bb', 'orange'], ['aapple', 'banana', 'banana', 'orange', 'poupular'], ['', 'is', 'abcd', 'popuolar', 'lizardpython'], ['bb', 'aaaa', 'cccc'], ['', 'is', 'abcd', 'popuolar', 'lizardpython'], [], ['is', 'abcd', 'popuolar', 'lizardpython'], ['efgh', 'ijkl'], ['', '', 'is', 'poupular', 'lizardpython'], ['test', 'this', 'this', 'istest', 'istest', 'jumpshello', 'telizardst'], ['', 'is', 'popuolar', 'poupular', 'lizardpython'], ['is', 'python', 'popuolar'], ['bb', 'bb', 'aaaa', 'cccc'], [], ['ruby', 'python'], ['bb', 'aaaa', 'cccc', 'cccc'], ['', 'is', 'popuolar', 'lizardpython'], ['aapple', 'banana', 'banana', 'orange', 'poupular'], ['efgh', 'ijkl', 'mnop', 'mnop', 'mnop', 'abdracecar'], ['', 'is', 'is', 'popuolar', 'poupular', 'lizardpython'], ['cicvic'], ['bb', 'aaaa', 'cccc', 'cccc'], ['cccc', 'aaajavaa'], ['aaaa', 'cccc', 'cccccc'], ['this'], ['bb', 'bb', 'aaaa', 'cccc', 'cccc'], ['', 'bb', 'aaaa', 'cccc'], ['', 'is', 'popuolar', 'poupular', 'lizardpython'], ['lazy', 'over'], ['is', 'poupular', 'lizardpython'], ['', 'is', 'abcd', 'popuar', 'popuolar', 'lizardpython'], ['aapple', 'banana', 'banana', 'orange', 'aapccccccple'], ['aa', 'aa', 'is', 'python', 'language'], ['efgh', 'ijkl'], ['bb', 'aaaa', 'cccc', 'cccc', 'lizardpython'], ['efgh', 'ijkl', 'mnop'], ['is', 'poupular', 'lizardpython'], ['aapple', 'banana', 'banana', 'aapccccccple'], ['lazy', 'over'], ['of', 'list', 'this', 'racecarlengths'], ['', 'bb', 'aaaa', 'cccc', 'cccccc'], ['ijkl', 'mnop', 'abcdifferrentd'], ['cccc'], ['is', 'python', 'popuolar'], ['bb', 'aaaa', 'cccc', 'cccc'], ['efgh', 'efgh', 'ijkl'], ['cccc', 'cccccc'], ['is', 'python', 'language', 'language'], ['bird', 'fish', 'fish', 'lizard', 'birdorange'], ['', 'is', 'popuolar', 'lizardpython'], [], ['', 'is', 'popuolar', 'lizardpython'], ['', 'is', 'popuolar', 'poupular', 'lizardpython'], ['', 'is', 'is', 'is', 'popuolar', 'poupular', 'lizardpython'], ['is', 'python', 'language'], ['banana', 'banana', 'orange', 'poupular'], ['bc', 'ghij'], ['hi', 'abcd'], ['bc', 'qr', 'ghij', 'vwxy'], [], ['aa', 'bb'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['aa', 'bbbb', 'eeeeee'], ['date', 'kiwi', 'banana', 'cherry'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['is', 'Python'], ['aa', 'bb'], ['', 'aa', 'bb', 'bb'], ['abcd'], ['bc', 'ghij'], ['is', 'Python'], ['bc', 'ghij'], ['bc', 'ghij', 'klmnccccco'], ['aa', 'bc', 'ghij', 'klmnccccco'], ['aa', 'bb'], ['abcd', 'aklmncccccobcd'], ['kiwi', 'banana', 'cherry'], ['aaaa', 'Python'], ['aa', 'bc', 'klmnccccco'], ['is', 'Python'], ['bc', 'qr', 'ghij', 'vwxy', 'sssssssklmno'], ['is', 'Python'], ['is'], ['aa', 'bbbb', 'eeeeee'], ['is'], ['is', 'cccc', 'Python'], ['bc', 'ddef', 'gcccchij', 'klmnccccco'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['ee', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['aa', 'bb', 'bbbb'], ['abcd', 'hiee', 'hqri'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['date', 'kiwi', 'banana', 'cherry'], ['bb', 'ee', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['aa', 'bc', 'bc', 'klmnccccco'], ['is', 'Python'], ['date', 'banana', 'cherry'], ['aa', 'bb'], ['ghij', 'kiwi', 'Python'], ['ghij', 'kiwi', 'kiwi', 'Python'], ['aa', 'bbbb', 'eeeeee'], ['is', 'date', 'Python'], ['', 'is', 'Python'], ['is', 'date', 'Python'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrrrrr'], ['is', 'cccc'], ['abcd'], ['aa', 'bb', 'bbbb', 'cccc'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrraarrr'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['', 'is'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['ee', 'yy', 'cccc', 'dddd', 'zzzz', 'rrrrrr'], ['aaaa', 'Python', 'wdorld', 'worlld'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['is', 'Python', 'Programmaaraaing'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['', 'aa', 'bb', 'bb'], ['aa', 'bc', 'klmnccccco'], ['hi', 'abcd'], ['ee', 'Progra', 'Python'], ['bc', 'qr', 'vwxy'], ['bc', 'yy', 'ghij', 'ghij'], ['ee', 'yy', 'cccc', 'cccc', 'dddd', 'zzzz', 'rrrrrr'], ['is', 'Python', 'nklmno', 'woorld'], ['hi', 'abcd'], ['ghij', 'kiwi', 'kiwi', 'Python'], ['ghij', 'kiwi', 'Python'], ['is', 'Python'], ['bb', 'pp', 'qr', 'vwxy'], ['ee', 'yy', 'cccc', 'rrrrrr'], ['aa', 'bc', 'klmnccccco'], ['ee', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['', 'is'], ['yy', 'cccc', 'rrrrrr'], ['bc'], ['kiwi'], ['bc', 'ghij', 'vwxy', 'sssssssklmno'], ['bc', 'klmnccccco'], ['ee', 'yy', 'cccc', 'rrrrrr'], ['date', 'kiwi', 'banana', 'cherry', 'grapre'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['aa', 'bb'], ['bc', 'bc', 'klmnccccco'], ['bc', 'qr', 'ghij', 'vwxy', 'vwxy'], ['aa', 'bc', 'klmnccccco'], ['ee', 'cccc', 'zzzz', 'rrrrrr'], ['ee', 'prld', 'Progra', 'Python'], ['ee', 'yy', 'cccc', 'dddd', 'zzzz', 'rrrrrr', 'xxxxxx'], ['ee', 'yy', 'cccc', 'zzzz', 'ddddat', 'rrrrrr'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrrrrr'], ['is', 'Python', 'rrraarrr'], ['klmnccccco'], ['aa', 'eeeeee'], ['aa', 'bb', 'bbbb'], ['aa', 'cwobcrld', 'klmnccccco'], ['is', 'cccc', 'Python'], ['is', 'Python', 'Prograomming'], ['aa', 'bbbb', 'eeeeee'], ['aa', 'eeeeee'], ['is', 'yy', 'sttu', 'Python', 'Programmaaraaing'], ['cccc', 'zzzz', 'rrrrrr'], [''], ['ghij', 'kiwi', 'kiwi', 'Python'], ['abcd', 'abcd', 'aklmncccccobcd'], ['is', 'Python', 'HeHellollo'], ['klmnccccco'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['', 'is'], ['is', 'Python', 'Programing'], ['ee', 'ghij', 'vwxy', 'sssssssklmno'], ['hi', 'abcd'], ['is', 'Porogramming'], ['is', 'cccc', 'vwxy', 'wdorld'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['is', 'date', 'Python', 'Python'], ['ee', 'yy', 'cccc', 'rrrrrr'], ['bc', 'ghij', 'mklmno', 'rrrrrr'], ['bc', 'qr', 'ghij', 'vwxy'], ['hiee', 'hqri'], ['ab', 'bb'], ['qr'], ['is', 'date', 'Python', 'rrraarrr'], ['ghij', 'kiwi', 'Python'], ['is', 'date', 'Python', 'Python'], ['aa'], ['bc', 'qr', 'ghij', 'vwxy', 'kolmddddno', 'sssssssklmno'], ['bc', 'ghhj'], ['bc', 'ghij', 'vwxy', 'kolmddddno', 'kolmddddno', 'sssssssklmno'], ['is', 'cwobcrld', 'rrraarrr'], ['kiwi', 'banana', 'cherry', 'lemmon'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrraarrr', 'rrraarrr'], ['aa', 'bbbb', 'ddef'], ['ee', 'yy', 'cccc', 'dddd', 'zzzz', 'zzzz', 'zzzz', 'rrrrrr'], ['date', 'banana', 'banana', 'cherry', 'lemonn', 'lemonn'], ['aa', 'aa', 'eeeeee', 'ddbananaefdd'], ['bc', 'qr', 'ghij', 'vwxy', 'kolmddddno', 'sssssssklmno'], ['bc', 'ghij', 'vvwxyhij', 'klmnccccco'], ['yy', 'yy', 'cccc', 'rrrrrr'], ['is'], ['hi', 'abcd', 'kiwi'], ['is', 'Python'], ['aa'], ['is', 'is', 'Python', 'nklmno', 'nklmno', 'woorld'], ['hi', 'abcd', 'jjis'], ['bc', 'bc', 'ddbananaefdd'], ['aa', 'bb'], ['aa', 'aa', 'eeeeee', 'ddbananaefdd'], ['bc', 'bc', 'ddbananaefdd'], ['is', 'is'], ['ee', 'yy', 'cccc', 'cccc', 'dddd', 'rrrrrr'], ['is'], ['bc', 'ghij', 'worlld', 'klmnccccco', 'klmnccccco'], ['aa', 'bb', 'bbbb'], ['is', 'Python', 'Programmaaraaing'], ['bc', 'qr', 'ghij', 'vwxy', 'klmnccccco', 'kolmddddno', 'sssssssklmno'], ['bb', 'ee', 'aaaa', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['', 'aa', 'bb'], ['', '', 'aa', 'bb', 'bb'], ['aa', 'bb', 'bbbb'], ['hi', 'abcd'], ['yy', 'ddef', 'gcccchij', 'klmnccccco'], ['yy', 'yy', 'cccc', 'dddgrape'], ['is', 'Python', 'lemonn'], ['date', 'kiwi', 'banana', 'cherry', 'grapre'], ['ee', 'yy', 'cccc', 'dddd', 'zzzz', 'rrrrrr'], ['ee', 'cccc', 'zzzz', 'rrrrrr', 'rrraarrr'], ['ghij', 'kiwi', 'Python'], ['is', 'pp'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrrrrr', 'worlld'], ['aa', 'bc', 'sttu', 'klmnccccco'], ['aa', 'bb', 'bbbb', 'hqri'], ['hi', 'abcd'], ['ee', 'yy', 'cccc', 'rrrrrr', 'rrraarrr', 'rrraarrr'], ['is', 'date', 'Python'], ['is', 'Programmigrapeng'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['hi', 'abcd', 'ddddat'], ['hi', 'abcd', 'mnprld'], ['aa', 'ab', 'bc', 'sttu'], ['df', 'ghij', 'kiwi', 'kiwi', 'Python'], ['ee', 'jjis', 'Progra', 'Python'], ['is', 'is', 'Programmaaraaing'], ['bc', 'qr', 'ghij', 'vwxy', 'kolmddddno', 'sssssssklmno'], ['is'], ['abcd', 'aklmncccccobcd'], ['aa', 'bb', 'bbbb', 'cccc'], ['ee', 'yy', 'cccc', 'rrrrrr', 'yaklmncccccobcdy'], ['bc', 'rrrrrr', 'ddbananaefdd'], ['ee', 'aaaa', 'aaaa', 'dddd', 'ffffff'], ['', '', 'is', 'Python'], ['aa', 'oo', 'klmnccccco'], ['cc', 'ee', 'ee', 'aaaa', 'dddd', 'ffffff'], ['bc', 'qr', 'ghij', 'kolmddddno', 'sssssssklmno'], ['ee', 'ee', 'cccc', 'zzzz', 'rrrrrr', 'rrraarrr'], ['Python'], ['ee', 'yy', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'xxxxxx'], ['', 'kklmno'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrraarrr', 'rrraarrr'], ['ab', 'bb'], ['aa', 'bb'], ['hi', 'abcd'], ['ee', 'yy', 'cccc', 'rrrrrr', 'rrraarrr', 'rrraarrr'], ['is'], ['bc', 'qr', 'ghij', 'vwxy'], ['hi', 'abcd', 'jkwrorlldl'], ['ee', 'aaaa', 'bbbb', 'dddd', 'ghij', 'ffffff', 'ddyaklmncccccobcdydd'], ['is', 'is', 'sttu', 'Python', 'Programmaaraaing'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['is', 'klikiwimno'], ['bc', 'bc', 'ghij'], ['ee', 'yy', 'zzzz', 'rrrrrr', 'rrraarrr', 'rrraarrr'], ['aa'], ['is', 'sawesome'], ['abcd', 'aklmncccccobcd'], ['hqri'], ['df', 'ghij', 'kiwi', 'Python'], ['is', 'cccc', 'Pythoonklmno'], ['bb', 'ee', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['ee', 'aaaa', 'bbbb', 'dddd', 'dddd', 'ghij', 'ffffff', 'ddyaklmncccccobcdydd'], ['is', 'cccc', 'vwxy', 'wdorld'], ['yy', 'yy', 'cccc', 'rrrrrr', 'ssssssss'], ['hi', 'abcd', 'abcd', 'ddddat'], ['is', 'Helcccco'], ['aa', 'bbbb', 'eeeeee'], ['ghij'], ['hi', 'abcd'], ['is', 'Python', 'Helighijlo'], ['cwobcrld', 'klmnccccco', 'klmnccccco'], ['ee', 'aaaa', 'dddd', 'cherry', 'ffffff', 'Porogramming', 'yaklmncccccobcdy'], ['aaaa', 'cccc', 'dddd', 'ffffff'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['', 'aa'], ['', 'is'], ['ee', 'yy', 'zzzz', 'ddddat', 'rrraarrr', 'rrraarrr'], ['bb', 'date', 'banana', 'banana', 'cherry', 'lemonn', 'lemonn'], ['bc', 'ghij', 'mklmno', 'rrrrrr'], ['aaaa', 'dddd', 'aaaaba', 'aaaaba', 'ffffff'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['oo', 'abcd', 'aklmncccccobcd', 'aklmncccccobcd'], ['cwobcrld', 'klmnccccco', 'klmnccccco'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'jklxxxxx', 'rrraarrr', 'rrraarrr'], ['bc', 'qr', 'ghij', 'vwxy', 'sssssssklmno'], ['aaaa', 'Python', 'wolrld'], ['aaaa', 'awoorlda'], ['', 'bc', 'qr', 'ghij', 'vwxy', 'sssssssklmno'], ['aa', 'kiwi'], ['is', 'cccc', 'vwxy', 'klmmno', 'nklmno', 'wdorld'], ['', 'aa', 'bb'], ['aa', 'hi', 'abcd', 'mnprld'], ['ee', 'yy', 'cccc', 'zzzz', 'ddddat', 'rrrrrr'], ['aa', 'oo', 'klmnccccco'], ['aa', 'aa', 'bb'], ['', 'is', 'date', 'Python', 'Python'], ['ee', 'yy', 'cccc', 'cccc', 'zzzz', 'ddddat', 'rrrrrr'], ['hi', 'abcd'], ['bc', 'qr', 'ghij', 'vwxy', 'vwxy'], ['is', 'is'], ['aa'], ['aa', 'bc', 'ghij'], ['bc', 'ghij', 'worlld', 'klmnccccco'], ['bc', 'qr', 'ghij', 'vwxy', 'Programing'], ['bb', 'ee', 'aaaa', 'date', 'dddd', 'ghij', 'ffffff'], ['effg', 'hqri'], ['ee', 'yy', 'cccc', 'zzzz', 'zzzz', 'rrrrrr', 'sProgrprldammingss'], ['bb', 'pp', 'vwxy'], ['bc', 'qr', 'vwxy', 'vwxy'], ['ee', 'yy', 'cccc', 'cccc', 'zzzz', 'ddddat', 'rrrrrr'], ['aa', 'bb'], ['is', 'is', 'abcd'], ['', 'is'], ['is', 'Python', 'worghhjldawesome'], ['aa', 'yy', 'bbbb', 'eeeeee'], ['', 'aa'], ['yy', 'yy', 'cccc', 'lemonn', 'dddgrape'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['aa', 'bc'], ['aa'], ['date', 'ghhj', 'Python'], ['ee', 'aaaa', 'aaaa', 'ghij', 'ffffff'], ['ee', 'aaaa', 'dddd', 'ghij', 'ffffff', 'ffffff'], ['is', 'Python'], ['is', 'Helcccco'], ['bb', 'ee', 'ee', 'aaaa', 'dddd', 'dddd', 'ghij', 'ffffff'], ['ghij', 'mklmno', 'rrrrrr'], ['kiwi'], ['aa', 'oo', 'klmnccccco'], ['is', 'Programmaaraaing', 'Programmaaraaing'], ['is', 'yPythnon', 'klikiwimno'], ['aa', 'bbbb', 'eeeeee'], ['is', 'klmnoo', 'yPythnon', 'klikiwimno'], ['aa', 'date', 'eeeeee'], ['is', 'is', 'date', 'Python'], ['is', 'Python'], ['bc', 'qr', 'vwxy'], ['oo', 'abcd', 'efeg', 'aklmncccccobcd', 'aklmncccccobcd'], ['qr', 'date', 'kiwi', 'banana', 'banana', 'cherry'], ['is', 'Helcccco'], ['aa', 'aa', 'aaaa', 'eeeeee', 'ddbananaefdd'], ['', 'is'], ['ee', 'ee', 'ee', 'cccc', 'zzzz', 'rrraarrr'], ['aaaa'], ['abcd'], ['is', 'Programmaaraaing', 'Programmaaraaing'], ['abcd', 'abcd', 'aklmncccccobcd'], ['bc', 'ghij', 'kolmddddno', 'sssssssklmno'], ['is', 'is', 'yPgrapebbbbython'], ['abcd', 'Programing'], ['yy', 'zzzz', 'zzzz', 'ddddat', 'rrraarrr', 'rrraarrr'], ['bb', 'pp', 'qr', 'vwxy', 'debbcf', 'aaakolmddddnoa'], ['hqri'], ['aa', 'bb', 'effg'], ['aa', 'bb', 'dddgrape'], ['', 'aa', 'bb', 'bb', 'aaaddd'], ['aa', 'bbbb', 'eeeeee'], ['is', 'is', 'Helllo', 'Python', 'nklmno', 'nklmno', 'woorld'], ['date', 'ghhj', 'PythworHeHellolloldn'], ['kiwi'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['ee', 'aaaa', 'ghij', 'ffffff', 'ffffff'], ['yy', 'yy', 'cccc', 'klmnoo', 'rrrrrr'], ['bc', 'qr', 'ghij', 'vwxy', 'kolmddddno', 'sssssssklmno'], ['', 'aa', 'bb', 'bb', 'aaadddyPgrapebbbbython'], ['is', 'Python', 'Prograomming', 'Prolemongrammaaaaing'], ['bc', 'ghij', 'ghij'], ['bc', 'ghij', 'ghij', 'lklmno'], ['', 'date', 'sttu', 'Python', 'Python', 'isProgra'], ['aa', 'bbbb', 'hqri', 'hqri'], ['aa', 'bc'], ['klmklikiwimnonccccco'], ['ee', 'rrrrrr', 'rrrrrr', 'worlld'], ['', '', 'is', 'Python'], ['ee', 'yy', 'zzzz', 'rrrrrr', 'rrraarrr', 'rrraarrr', 'rrraarrr'], ['ghij', 'kiwi', 'Python', 'ikiwwi'], ['bc', 'ghij', 'worlld', 'klmnccccco', 'kiwigcccchij'], ['is'], ['ee', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['aa', 'hi', 'abcd', 'jkkl'], ['bc', 'klmnccccco'], ['is', 'Python', 'Python', 'lemonn'], ['is', 'Helcccco'], ['aa', 'bb', 'bb'], ['kiwi', 'banana', 'cherry', 'cherry', 'lemmon'], ['aa', 'bb', 'bbbb', 'cccc'], ['bc', 'qr', 'ghij', 'vwxy', 'kolmddddno', 'sssssssklmno'], ['aa', 'bc', 'ghij'], ['eefg', 'effg', 'hqri'], ['is', 'Python', 'jkwrorlldl', 'Prograomming', 'Prolemongrammaaaaing'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrraarrr', 'rrraarrr'], ['', '', 'aa', 'bb', 'bb', 'bb'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['is', 'Heello', 'Proxxxxxgramming'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrrrrr', 'worlld'], ['bc', 'bc', 'klmnccccco'], ['', 'is'], ['', '', 'is', 'Python', 'debbcf'], ['klmklikiwimnonccccco'], ['', 'sttu', 'Python', 'Programmaaraaing'], ['', 'is'], ['kiwi', 'banana', 'cherry', 'cherry', 'lemmon'], ['yy', 'yy', 'yy', 'zzzz', 'rrrrrr', 'xxxxxx', 'sawesomeee'], ['aa', 'bc', 'ghij', 'Helllo'], ['bc', 'ghij', 'ghij'], ['kiwi'], ['aaaa', 'dddd', 'ghij', 'ffffff', 'ffffff'], ['Python', 'wxxxxxorld'], ['bb', 'Helcccco'], ['ee', 'yy', 'cccc', 'zzzz', 'mnoddd', 'rrrrrr', 'rrrrrr', 'worlld'], ['ab', 'bb', 'worlld'], ['Python', 'wxxxxxorld'], ['is', 'cccc', 'Python', 'Prgogramming'], ['abcd', 'mworldno', 'aklmncccccobcd'], ['is', 'sttu', 'Python', 'Programmig', 'Programmaaraaing'], ['date'], ['aa', 'bb', 'bbbb', 'cccc'], ['aa', 'bc', 'ghij', 'klmnccccco'], ['bb', 'ee', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['is', 'Python', 'awesme'], ['is', 'is', 'date', 'Python', 'jkklmnoklProgramming'], [], ['aa', 'bbbb', 'eeeeee', 'prldyy'], ['ee', 'aaaa', 'ghij', 'ffffff'], ['hi', 'abcd', 'efgg', 'jkwrorlldl'], ['aa', 'aa', 'eeeeee'], ['bb', 'bc', 'ghij', 'ghij'], ['date', 'ghhj', 'Python', 'datelklmno'], ['is', 'date', 'rrraarrr'], ['bc', 'qr', 'ghij'], ['bc', 'bc', 'cherry', 'kklmno', 'ddbananaefdd'], ['bc', 'sttu', 'klmnccccco'], ['ee', 'aaaa', 'dddd', 'ghij', 'ffffff', 'worlld'], ['', 'aa'], ['ee', 'yy', 'cccc', 'rrrrrr', 'rrrrrr', 'worlld'], ['bc', 'ddbananaefdd'], ['bc', 'qr', 'ghij', 'vwxy', 'sssssssklmno'], ['hi', 'abcd', 'kiwi'], ['aa', 'bb', 'bb'], ['aa', 'bb', 'bbbb', 'bbbb', 'Praogrammaaaaing'], ['bb', 'bbbb', 'cccc'], ['aaaa', 'bbbb', 'dddddd', 'eeeeee'], ['bc', 'ccbc', 'rrrrrr', 'ddbananaefdd'], ['', 'aa', 'rrraarrr'], ['ee', 'yy', 'cccc', 'ssss', 'rrrrrr'], ['', 'is'], ['hi'], ['aa', 'bc', 'Programmigaa'], ['aa', 'bc', 'bc', 'klmnccccco'], ['bc', 'qr', 'vwxy'], ['aa', 'aaaa', 'awoorlda'], ['ee', 'yy', 'cccc', 'cccc', 'dddd', 'zzzz', 'rrrrrr'], ['hqri'], ['Helcccco'], ['is', 'Python', 'worghhjldawesome'], ['ee', 'yy', 'cccc', 'mnoddd', 'rrrrrr', 'rrrrrr', 'worlld'], ['bb', 'Helcccco'], ['ee', 'cccc', 'rrrrrr'], ['bc', 'qr', 'vwxy', 'vwxy', 'worlda'], ['cc', 'ee', 'ee', 'aaaa', 'dddd'], ['abcd', 'Programing'], ['is', 'Heello'], ['Python', 'ffffff', 'Progrefgamming'], ['ee', 'aaaa', 'bbbb', 'dddd', 'ghij', 'ffffff', 'ddyaklmncccccobcdydd'], ['hi'], ['is', 'Python', 'Python', 'lemonn', 'lemonn'], ['bc', 'ghij', 'mklmno', 'mklmno', 'rrrrrr'], ['is', 'is', 'Programmaaraaing'], ['hi', 'abcd', 'abcd', 'ddddat'], ['ee', 'yy', 'yy', 'zzzz', 'ddddat', 'rrraarrr', 'rrraarrr'], ['bc', 'ghij', 'vwxy', 'kolmddddno', 'sssssssklmno', 'sssssssklmno'], ['is', 'is', 'Programmaaraaing'], ['ee', 'cccc', 'rrrrrr', 'rrrrrr', 'worlld'], ['hi', 'prldyyabcd'], ['aa', 'hi', 'abcd', 'jkkl'], ['aaaa'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['ee', 'yy', 'cccc', 'dddd', 'zzzz', 'rrrrrr', 'xxxxxx', 'dddProgramming', 'sssssssssssskslmnoss'], ['bc', 'ghij'], ['bc', 'ghij', 'kolmddddno', 'sssssssklmno'], ['ghij', 'Python'], ['aa', 'oo', 'oo', 'klmnccccco'], ['is', 'Porogramming'], ['bc', 'bc', 'kklmno', 'ddbananaefdd'], ['bc', 'yy', 'ghij', 'ghij'], ['ee', 'yy', 'zzzz', 'ddddat', 'rrraarrr', 'rrraarrr', 'Pythoonklmno', 'rrraardaterr'], ['aa'], ['aa', 'bb', 'bb'], ['', 'ghij', 'vwxy', 'kolmddddno', 'sssssssklmno', 'sssssssklmno', 'sssssssvvwxyhijklmno'], ['aa', 'bb', 'abcd', 'effg'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'rrraarrr', 'rrraarrr', 'ssssssss'], ['is', 'sttu', 'Python', 'Programmaaraaing'], ['abcd', 'efgg'], ['ee', 'yy', 'cccc', 'rrrrrr', 'rrraarrr'], ['aa', 'oo'], ['is', 'sttu', 'Programmig', 'Programmaaraaing'], ['hi'], ['cccc', 'Python'], ['hi', 'abcd'], ['ee', 'aaaa', 'bbbb', 'dddd', 'ghij', 'ffffff', 'ddyaklmncccccobcdydd'], ['bb', 'ee', 'aaaa', 'bbbb', 'dddd', 'ghij', 'ffffff'], ['yy', 'cccc', 'zzzz', 'ddddat', 'rrrrrr'], ['date', 'ghhj', 'Python'], ['bc', 'qr', 'ghij', 'vwxy', 'sssssssklmno'], ['', '', 'aa', 'bb'], ['', 'aa', 'hi', 'abcd', 'mnprld'], ['bc', 'ghij', 'klmnccccco', 'klmnccccco'], ['date', 'banana', 'banana', 'cherry', 'lemonn', 'lemonn', 'ssssssss'], ['aa', 'bb', 'cccc'], ['is', 'yy', 'sttu', 'Python', 'Programmaaraaing'], ['aa', 'bb', 'bb'], ['yy', 'yy', 'cccc', 'klmnoo', 'rrrrrr', 'ssssssss'], ['aaaa', 'wxxxxxorld'], ['ee', 'yy', 'cccc', 'ssss', 'rrrrrr', 'rrraarrr', 'rrraarrr'], ['df', 'ghij', 'kiwi', 'kiwi'], ['bc', 'qr', 'ghij', 'vwxy', 'vwxy'], ['is', 'Programmaaraaing', 'Programmaaraaing'], ['hi', 'abcd'], ['', 'is'], ['aa', 'bc', 'ghij'], ['bb', 'pp', 'vwxy'], ['aa', 'bb'], ['bc', 'ghij', 'ghij'], ['hiee', 'mmno'], ['ee', 'aaaa', 'dddd', 'ffffff'], ['', 'is', 'wodrld'], ['ee', 'cccc', 'dddd', 'zzzz', 'rrrrrr'], ['bc', 'rrrrrr', 'ddbananaefdd'], ['aaaa', 'bbbb', 'dddddd', 'eeeeee'], ['hi', 'hi', 'abcd', 'jkwrorlldl'], ['qr', 'edef'], ['aa', 'aklmncccccobcd'], ['aa', 'aa', 'aklmnccccProgrammaaraaibcd'], ['aa', 'bb', 'bb'], ['bc', 'ghij'], ['kiwi', 'banana', 'cherry', 'cherry'], ['bbbb'], ['ee', 'Progra', 'Python'], ['bb', 'ee', 'aaaa', 'dddd', 'ghij', 'ffffff'], ['is', 'Helcccco', 'Helcccco'], ['', 'is', 'worlld'], ['ee', 'aaaa', 'bbbb', 'dddd', 'ghij', 'ffffff'], ['is', 'sttu', 'Python', 'Programmaaraaing', 'Programmaaraaing'], ['date', 'banana', 'banana', 'cherry', 'lemonn', 'lemonn', 'ssssssss'], ['defg'], [], [], [], [], ['aa'], [], ['cc', 'cc', 'dddd'], ['ab', 'cc', 'cc', 'de'], ['12', '1234'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['ap', 'date', 'kiwi', 'banana'], ['ghij', 'knlmno'], ['mnno'], ['kiwi', 'banana', 'cherry'], ['ap', 'date', 'kiwi', 'adatep', 'banana', 'datedddd'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['aa', 'bbbb', 'bbbb', 'eeeeee'], ['bbbb', 'eeee', 'eeeeee'], ['aa', 'bbbb', 'eeee', 'eeddddee'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['kiwi', 'banana'], ['aa', 'bb'], ['kiwi', 'cherry'], [], [], ['kiwi', 'banana', 'datedddd'], ['bc', 'ghij'], ['ghij', 'knlmno'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['ee', 'yy', 'cccc', 'rrrrrr'], ['is', 'Python'], ['bc', 'ghij', 'kklmno'], ['aa', 'bbbb', 'eeee', 'eeddddee'], ['gh'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr'], ['knlmno', 'dateddddknlmno'], ['knlmno', 'dateddddknlmno'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['aaaa', 'dddd', 'ffffff'], ['kiwi', 'banana', 'cherry', 'cherry'], ['bc', 'qr', 'qr', 'ghij', 'vwxy'], ['ghij', 'knlmno'], ['hghijj', 'knlmno', 'dateddddknlmno'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['ee', 'yy', 'yy', 'cccc', 'date', 'zzzz', 'rrrrrr'], ['abcd'], [], ['abcd', 'abcd'], ['abcd', 'abcd'], ['ghij', 'kklmno', 'kklmno'], ['ee', 'yy', 'zzzz', 'rrrrrr'], ['ee', 'ee', 'dddd', 'ffffff'], ['bc', 'ghij', 'klisimno'], ['deef', 'cccmno'], ['ee', 'yy', 'cccc', 'ydef', 'zzzz', 'rrrrrr'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['ghij', 'kklmno', 'kklmno', 'kklmno'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['bc', 'qr', 'ghij', 'vwxy'], ['ee', 'yy', 'zzzz', 'rrrrrr'], ['bc', 'qr', 'qr', 'ghij', 'vwxy'], ['Python'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['date', 'date', 'kiwi', 'banana', 'cherry'], ['bb', 'ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['aa', 'bbbb', 'eeeeee'], ['kiwi', 'banana', 'cherry'], ['ee', 'yy', 'zz', 'cccc', 'zzzz', 'zzzz', 'rrrrrr'], ['aa', 'bbbb', 'eeee', 'eeeeee', 'hghijj'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['aa', 'bbbb', 'eeee'], ['date', 'date', 'kiwi', 'banana', 'cherry', 'dateddddknlmno'], ['datedddd'], ['aa', 'aaaa', 'bbbb', 'eeee', 'eeddddee'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['aa', 'bbbb', 'eeee', 'eeeeee', 'dateddddknlmno'], ['aa', 'gh', 'bbbb', 'eeee', 'eeeeee'], ['bbbb', 'aaaaaa', 'eeddddee'], ['kiwi', 'banana', 'cherry', 'cherry'], ['is', 'Python'], ['', 'vwxy', 'datedddd'], ['kiwi', 'cherry'], ['abcd', 'abcd', 'efyystug'], ['aa', 'aa', 'bbbb', 'eeee', 'eeddddee'], ['ap', 'date', 'kiwi', 'adatep', 'banana', 'banana', 'datedddd'], ['abcc'], ['ee', 'yy', 'cccc', 'rrrrrr', 'ssssssss'], [], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['aa', 'bbbb', 'eeee', 'Python', 'eeeeee'], ['aa', 'abcd', 'bbbb', 'eeee', 'eeddddee'], ['aa', 'bc', 'qr', 'ghij', 'vwxy'], ['aa', 'bc', 'qr', 'qr', 'ghij', 'vwxy'], ['ghij', 'datedddd'], ['date', 'date', 'kiwi', 'banana', 'cherry', 'loemon', 'dateddddknlmno'], ['ee', 'yy', 'cccc', 'rrrrrr', 'ssssssss'], ['ghij', 'knlmno'], ['abcd'], ['kiwi', 'banana', 'cherry'], ['aa', 'bbbb', 'eeee'], ['bbbb', 'eeee', 'eeee', 'eeddddee'], ['ee', 'yy', 'yy', 'yy', 'cccc', 'date', 'zzzz', 'rrrrrr'], ['aa', 'bbbb', 'bbbb', 'bbbb', 'eeeeee'], ['aa', 'bbbb', 'cccccc', 'eeeeee', 'ccceeecc'], ['aa', 'bbbb', 'eeabccee', 'eeddddee'], [], ['bb', 'ee', 'yy', 'zz', 'cccc', 'cheyrrya'], ['is', 'is', 'Python'], ['datedddd'], ['date', 'date', 'kiwi', 'banana', 'cherry', 'dateddddknlm'], ['knlmno', 'dateddddknlmno'], ['datedddd'], ['', 'ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['aa', 'aa', 'bbbb', 'eeee', 'eeddddee'], ['aa', 'bb'], ['ee', 'yy', 'cccc', 'date', 'yyyy', 'zzzz', 'rrrrrr'], ['ap', 'date', 'kiwi', 'adatep', 'banana', 'datedddd'], ['kiwi', 'banana'], ['aa', 'eeee', 'eeeeee'], ['date', 'date', 'kiwi', 'banana', 'cherry'], ['ghij'], ['bc'], ['date', 'date', 'kiwi', 'banana'], ['date', 'date', 'banana'], ['bbbb', 'dddd', 'rrrr', 'eeeeee', 'rrrrrr'], ['ap', 'ap', 'date', 'adatep', 'banana', 'banacheyrryn'], ['aa', 'bc', 'qr', 'qr', 'qr', 'ghij', 'vwxy'], ['bc', 'ghij'], ['hi', 'abcd'], ['aa', 'eeee', 'cccccc', 'eeeeee'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr'], ['aa', 'bb'], ['', '', 'vwxy', 'datedddd'], ['kiwi', 'kiwi', 'banana', 'cherry'], ['abcd', 'jklbPython'], ['ap', 'ap', 'date', 'adatep', 'banana', 'banacheyrryn'], ['aa', 'bbbb', 'eeee', 'cccccc', 'eeeeee'], ['Python'], ['aa', 'bbbb', 'cccccc', 'ccceeecc', 'eeeccceeecceee'], ['aa', 'bbbb', 'bbbb', 'eeee', 'eeddddee'], ['', 'aa', 'bbbb', 'eeee', 'Python', 'cccccc', 'eeeeee'], ['date', 'kiwi', 'banana'], ['hi', 'abcd'], ['abcd', 'abcd'], ['date', 'date', 'kiwi', 'banana'], [], ['knlmno'], ['aa', 'eeee', 'eeeeee'], ['mnno', 'mnno'], ['knlmno', 'dateddddknlmno'], ['bb', 'ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'ssssss'], ['aa', 'bb', 'mnnoaa'], ['aa', 'bbbb', 'eeee', 'cccccc', 'eeeeee'], ['cherry', 'cherry'], ['bb', 'ee', 'ee', 'yy', 'zz', 'cccc', 'cheyrrya'], ['ap', 'date', 'kiwi', 'adatep', 'banana', 'datedddd'], ['ghij', 'knlmno'], ['aa', 'bc', 'qr', 'ghij'], ['gh', 'abcc'], ['eeee', 'vwxy', 'cccmno'], ['aa', 'bbbb', 'bbbb', 'bbbb', 'eeeeee'], ['aa', 'eeeeee', 'bbmnnoaabb'], ['abcd', 'abcd', 'efyystug', 'ahghijjbcd'], ['aa', 'bbbb', 'dddddd', 'eeeeee'], ['abcd', 'cheyrrya'], ['bb', 'ee', 'yy', 'cccc', 'zzzz', 'ssssss'], ['', '', 'vwxy', 'datedddd'], ['ef', 'hi', 'abcd', 'eeee'], ['zz'], ['aa', 'bbbb', 'ydef', 'eeeeee'], ['ee', 'cccc', 'rrrrrr', 'rrrrrr', 'ssssssss'], ['abcc'], ['aa', 'bbbb', 'bbbb', 'ydef', 'eeeeee'], ['Python', 'klisimno'], ['cherry'], ['qr', 'qr', 'ghij', 'vwxy'], ['ee', 'cccc', 'rrrrrr', 'rrrrrr', 'ssssssss', 'sssssssklmno'], ['aa', 'bbbb', 'eeee', 'cccccc', 'eeeeee'], ['aa', 'bc', 'qr', 'ghij', 'vwxy'], ['kiwi', 'applae', 'cherry'], ['aa', 'bb'], ['date', 'date', 'kiwi', 'banana', 'cherry', 'cherry'], ['aa', 'dd', 'bbbb', 'bbbb', 'bbbb', 'bbbb', 'eeeeee', 'eeeeee'], ['aa', 'aa', 'bbbb', 'eeeeee'], ['bb', 'bbbb', 'eeee', 'eeddddee'], ['aaaa', 'dddd', 'ffffff', 'ffbbbbffff'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr', 'ssssssss'], ['zz'], ['aaaa', 'bbbb', 'eeee', 'eeddddee'], ['hi', 'abcd'], ['aa', 'bbbb', 'bbbb', 'ydef', 'ydef', 'eeeeee'], ['aa', 'bbbb', 'eeee', 'cccccc', 'eeeeee', 'cheyrrya', 'dcherryd'], ['ghij', 'kklmno', 'kklmno', 'kklmno'], ['ghij'], ['ee', 'yy', 'cccc', 'ydef', 'zzzz', 'zzzz'], ['aa', 'datedddd'], ['', '', 'vwxy', 'datedddd', 'datedddd'], ['ghij', 'kklmno', 'kklmno'], ['ee', 'yy', 'cccc', 'zzzz'], ['aa', 'bc', 'qr', 'qr', 'qr', 'ghij', 'vwxy'], ['aa', 'datedddd'], ['aa', 'bbbb', 'eeee'], ['aa', 'bbbb', 'bbbb', 'bbbb', 'eeeeee', 'eeeeee'], ['bc'], ['aa', 'aa', 'zz', 'bbbb', 'eeee', 'eeddddee'], ['date', 'kiwi', 'cherry', 'loemon', 'dateddddknlmno'], ['abcd', 'abcd', 'efyystug', 'ahghijjbcd'], ['knlmno'], ['ee', 'qr', 'yy', 'zzzz', 'rrrrrr'], ['knlmno', 'dateddddknlmno', 'dateddddknlmno'], ['ee', 'dddd', 'ffffff'], ['ee', 'yy', 'cccc', 'dddd', 'zzzz', 'rrrrrr'], ['ap', 'date', 'kiwi', 'adatep', 'banana', 'datedddd'], ['aa', 'bbbb', 'dddddd', 'eeeeee', 'cheyrrya'], ['abcd'], ['ee', 'yy', 'cccc', 'cccc', 'cccc', 'dddd', 'zzzz', 'rrrrrr'], ['ee'], [], [], ['aa', 'bbbb', 'dddddd', 'eeeeddddddee'], ['ab', 'ee'], ['ee', 'dddd', 'dddd', 'ffffff'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['ghij', 'knlmno', 'knlmno'], ['datedddd'], ['aa', 'bb', 'bb'], ['ac', 'datedddd'], ['ap', 'ap', 'date', 'banana', 'banacheyrryn'], ['aa', 'cccccc', 'cccccc', 'ccceeecc', 'eeeccceeecceee'], ['ee', 'ee', 'dddddd', 'ffffff'], ['abcd', 'abcd', 'abcd', 'efyystug', 'ahghijjbcd'], ['qr', 'qr', 'ghij', 'vwxy', 'vwxy'], ['bc', 'qr', 'qr', 'ghij', 'vwxy'], [], ['ee', 'knlmno', 'dateddddknlmno'], ['abcd'], ['aa', 'bc', 'ghij'], ['aa', 'aaaa', 'eeee', 'cccccc', 'eeeeee'], ['bbbb', 'eeee', 'eeeeee'], ['ee', 'ee', 'dddd', 'ffffff'], ['kiwi', 'banana', 'datedddd'], ['kklmno', 'rrrrrr', 'klisimno'], ['bb', 'bbbb', 'eeee', 'eeee', 'eeeeee'], ['kiwi', 'banana', 'cherry', 'rgrape'], ['ee', 'cccc', 'rrrrrr', 'rrrrrr', 'ssssssss'], ['aa', 'bbbb', 'eeee', 'eeeeee', 'dateddddknlmno'], ['bc', 'qr', 'ghij', 'vwxy', 'vwxy'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr', 'dateddddrrrr'], ['aa', 'bb'], ['ap', 'date', 'kiwi', 'banana'], ['ee', 'yy', 'yy', 'cccc', 'cccc', 'zzzz', 'rrrrrr'], ['aa', 'bb'], ['bbbb', 'aaaaaa', 'eeddddee', 'eeddddeapplaee'], ['aa', 'bb'], ['bc'], ['hi', 'abcd'], [], ['abcd', 'efgdef'], ['knlmno', 'dateddddknlmno'], ['ghij', 'ghij', 'knlmno'], ['', 'aa', 'bb'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr'], ['knlmno', 'knlmno', 'dateddddknlmno'], ['is', 'ieeeccceeecceees'], ['aa', 'aa', 'bbbb', 'eeee'], ['knlmno'], ['ee', 'zzzz', 'rrrrrr'], ['ef', 'hi', 'eeee'], ['', 'aa', 'bc', 'qr', 'ghij'], ['ghij', 'kklmno', 'kklmno', 'kklmno'], ['aa', 'bbbb', 'eeee', 'eeeeee', 'applaegh'], [], [], ['abcd', 'rgrape', 'efyystug', 'ahghijjbcd'], ['qr', 'ghij', 'vwxy', 'vwxy', 'vwxy'], ['ghij'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr', 'dateddddrrrr'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['yy', 'yy', 'cccc', 'date', 'zzzz', 'rrrrrr'], ['bb', 'aaaa', 'bbbb', 'eeee', 'cccaaa', 'eeddddee'], ['aa', 'bbbb', 'eeee'], ['aa', 'bbbb', 'cccccc', 'eeeeee', 'ccceeecc'], ['bbbb', 'eeee', 'eeeeee'], ['ee', 'ghgi'], ['ddef'], ['gh', 'hi'], ['bbbb', 'eeee'], ['ab', 'Python'], ['kiwi', 'banana', 'datedddd', 'grapeawesome'], ['aa', 'bbbb', 'cccccc', 'eeeeee', 'ccceeecc'], ['', 'ee', 'yy', 'abcd', 'cccc', 'zzzz', 'rrrrrr'], ['aa', 'bbbb', 'bbbb', 'bbbb', 'bbbb', 'eeeeee'], ['aa', 'bc', 'qr', 'ghij', 'vwxy'], ['abcd', 'rgrape', 'ahghijjbcd'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['bb', 'bbbb', 'eeee', 'eeddddee'], ['aa', 'eeeeee'], ['aa', 'bbbb', 'eeee', 'eeeeee', 'eeeeee', 'dateddddknlmno'], ['aa', 'bbbb', 'dddddd', 'eeeeee'], ['kiwi', 'banana', 'cherry', 'cherry'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['', 'aa', 'bc', 'qr', 'ghij'], ['ee', 'yy', 'zzzz', 'rrrrrr'], ['aa', 'aaaa', 'eeee', 'cccccc', 'eeeeee', 'eeeapplaee'], ['bbbb', 'bbbb', 'bbbb', 'eeeeee'], ['hi', 'abcd'], ['is', 'is', 'Python'], [], ['aa', 'bbbb', 'eeee', 'eeee'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr'], ['ee', 'yy', 'cccc', 'ydef', 'ydef', 'zzzz', 'zzzz'], ['bc', 'klisimno'], ['Python', 'Proggreramming'], ['abbc', 'vwxy'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['', 'ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['bbbb', 'kiwi', 'banana', 'rgrape'], ['bbbb', 'dddd', 'rrrr', 'eeeeee', 'rrrrrr'], ['sssssssklmno'], ['abcc'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['kiwi', 'banana', 'cherry'], ['bbbb', 'eeeeee', 'eeeeee', 'deHelloe'], ['abcd'], ['bb', 'ee', 'ee', 'yy', 'cccc', 'dcherryd'], ['abcd', 'abcd', 'jjkl', 'cheyrrya'], ['ee', 'yy', 'cccc', 'date', 'yyyy', 'zzzz', 'rrrrrr', 'sssssyystu'], ['ap', 'deef', 'cccmno', 'jkklmnol'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['ghij'], ['dd', 'kiwi', 'banana'], ['ac', 'datedddd'], ['bc', 'ghij', 'kklmno'], ['bbbb', 'dddd', 'rrrr', 'eeeeee', 'rrrrrr'], ['ghij'], ['bbbb', 'rrrr', 'eeeeee', 'rrrrrr'], [], ['is', 'is', 'Python'], ['bbbb', 'eeee', 'dcherryd'], ['ee', 'qr', 'dddd', 'ffffff'], ['ee', 'yy', 'cccc', 'date', 'yyyy', 'zzzz', 'rrrrrr', 'rddddrrrrr', 'sssssyystu'], ['aa', 'bbbb', 'eeee', 'cccccc', 'eeeeee', 'cheyrrya', 'cheyrrya', 'dcherryd'], ['', '', 'vwxy', 'datedddd'], [], ['abcd', 'abcd', 'efyystug', 'ahghijjbcd', 'absssssyystucd'], ['kiwi', 'banana', 'cherry', 'ggrape'], ['is', 'Python', 'ieeeccceeecceees'], ['bbbb', 'bbbb', 'bbbb', 'eeeeee'], ['bbbb', 'eeee', 'kiwi', 'banana', 'rgrape'], ['bbbb', 'eeeeee', 'rrrrrr'], ['ghij', 'knlmno', 'knlmno'], ['bbap', 'eeee', 'kiwi', 'banana', 'rgrape'], ['aa', 'bbbb', 'eeee', 'eeeeee'], ['abcd', 'abcd'], ['aa', 'bbbb', 'ydef', 'eeeeee'], ['aa', 'bb'], ['ee', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['bb', 'ee', 'ee', 'yy', 'zz', 'cccc', 'cheyrrya'], ['ee', 'yy', 'yy', 'cccc', 'zzzz', 'rrrrrr'], ['aa', 'zz', 'eeeeee'], ['abcc'], ['kklmno', 'kklmno', 'rrrrrr', 'klisimno'], ['aa', 'bbbb', 'cccccc'], ['aa', 'aa', 'aaai', 'bbbb', 'eeeeee'], ['aa', 'bbbb', 'bbbb', 'bbbb', 'eeeeee', 'eeeeghijee'], ['kiwi', 'banana', 'deefdate'], ['bbbb', 'eeee', 'jjkl', 'eeeeee']]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n"}
